sub_401000
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x0
call [ GetModuleHandleW@IAT ]
xor eax eax
cmp eax 0x2efe
jb r-xdata
push 0x208
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x20c ]
push eax
call [ lstrlenW@IAT ]
test eax eax
jne r-xdata
inc eax
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_40106b
mov esp ebp
pop ebp
retn
push eax
push eax
lea eax [ ebp - 0x20c ]
push eax
push 0x0
call [ MessageBoxW@IAT ]
sub_40107c
push esi
push 0x1
call _set_app_type
call sub_4016f1
push eax
call _set_fmode
call __p__commode
mov esi eax
call sub_4016ea
push 0x1
mov [ esi ] eax
call sub_401495
add esp 0xc
pop esi
test al al
je r-xdata
push 0x7
call sub_401766
int3
fnclex
call sub_401912
push sub_40193d
call sub_401639
call sub_4016ed
push eax
call _configure_narrow_argv
pop ecx
pop ecx
test eax eax
jne r-xdata
call sub_4016f7
call sub_40174e
test eax eax
je r-xdata
call sub_401724
call sub_401724
call sub_401703
call sub_4016ea
push eax
call _configthreadlocale
pop ecx
call sub_401c4a
test al al
je r-xdata
push sub_4016ea
call __setusermatherr
pop ecx
call sub_4016ea
xor eax eax
retn
call _initialize_narrow_environment
sub_40113a
push 0x14
push r--data
call sub_401970
push 0x1
call sub_40145c
pop ecx
test al al
jne r-xdata
xor bl bl
mov [ ebp - 0x19 ] bl
and [ ebp - 0x4 ] 0x0
call sub_401427
mov [ ebp - 0x24 ] al
mov eax [ rw-data ]
xor ecx ecx
inc ecx
cmp eax ecx
je r-xdata
push 0x7
call sub_401766
test eax eax
jne r-xdata
mov bl cl
mov [ ebp - 0x19 ] bl
mov [ rw-data ] ecx
push r--data
push r--data
call _initterm_e
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_401760
mov esi eax
cmp [ esi ] edi
je r-xdata
push esi
call sub_40152c
pop ecx
test al al
je r-xdata
push r--data
push r--data
call _initterm
pop ecx
pop ecx
mov [ rw-data ] 0x2
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax 0xff
jmp r-xdata
push edi
call __telemetry_main_invoke_trigger
call __p___argv
mov edi eax
call __p___argc
mov esi eax
call _get_initial_narrow_environment
push eax
push [ edi ]
push [ esi ]
call sub_401000
mov esi eax
push 0x0
call __telemetry_main_return_trigger
add esp 0x14
call sub_401881
test al al
jne r-xdata
push esi
call sub_40152c
pop ecx
test al al
je r-xdata
push edi
push 0x2
push edi
mov esi [ esi ]
mov ecx esi
call j_sub_401724
call esi
push [ ebp - 0x24 ]
call sub_4015b9
pop ecx
call sub_40175a
mov esi eax
xor edi edi
cmp [ esi ] edi
je r-xdata
call sub_4019b6
retn
test bl bl
jne r-xdata
push esi
call exit
push [ esi ]
call _register_thread_local_exe_atexit_callback
pop ecx
push 0x0
push 0x1
call sub_4015d6
pop ecx
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
mov eax esi
jmp r-xdata
call _cexit
sub_401287
mov esp [ ebp - 0x18 ]
call sub_401881
test al al
jne r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
push [ ebp - 0x20 ]
call _exit
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_4019b6
retn
call _c_exit
sub_4012e8
push ebp
mov ebp esp
sub esp 0x324
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x324 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov [ rw-data ] 0x1
push 0x4
pop eax
imul eax eax 0x0
mov [ eax + rw-data ] 0x2
push 0x4
pop eax
imul eax eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push 0x4
pop eax
shl eax 0x0
mov ecx [ rw-data ]
mov [ ebp + eax - 0x8 ] ecx
push r--data
call sub_4012c0
mov esp ebp
pop ebp
retn
push 0x2
pop ecx
int 0x29
sub_4013e3
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
lea edx [ ecx + 0x18 ]
add edx eax
movzx eax [ ecx + 0x6 ]
imul esi eax 0x28
add esi edx
cmp edx esi
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
add edx 0x28
cmp edx esi
jne r-xdata
mov eax [ edx + 0x8 ]
add eax [ edx + 0xc ]
cmp ecx eax
jb r-xdata
cmp ecx [ edx + 0xc ]
jb r-xdata
mov eax edx
jmp r-xdata
pop esi
pop ebp
retn
sub_401427
call sub_401b8f
test eax eax
jne r-xdata
mov eax [ fs : 0x18 ]
push esi
mov esi rw-data
mov edx [ eax + 0x4 ]
jmp r-xdata
xor al al
retn
xor eax eax
mov ecx edx
[ esi ] ecx
test eax eax
jne r-xdata
cmp edx eax
je r-xdata
xor al al
pop esi
retn
mov al 0x1
pop esi
retn
sub_40145c
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
call sub_4019ee
call sub_401c4a
test al al
jne r-xdata
mov [ rw-data ] 0x1
call sub_401c4a
test al al
jne r-xdata
xor al al
pop ebp
retn
mov al 0x1
pop ebp
retn
push 0x0
call sub_401c4a
pop ecx
jmp r-xdata
sub_401495
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_401b8f
test eax eax
je r-xdata
cmp esi 0x1
jne r-xdata
mov eax [ rw-data ]
lea esi [ ebp - 0xc ]
push edi
and eax 0x1f
mov edi rw-data
push 0x20
pop ecx
sub ecx eax
or eax 0xffffffff
ror eax cl
xor eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
lea esi [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
mov al 0x1
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
test esi esi
jne r-xdata
push 0x5
call sub_401766
int3
push rw-data
call _initialize_onexit_table
pop ecx
test eax eax
je r-xdata
push rw-data
call _initialize_onexit_table
neg eax
pop ecx
sbb al al
inc al
jmp r-xdata
xor al al
jmp r-xdata
pop esi
mov esp ebp
pop ebp
retn
sub_40152c
push 0x8
push r--data
call sub_401970
and [ ebp - 0x4 ] 0x0
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor al al
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx __dos_header
sub eax ecx
push eax
push ecx
call sub_4013e3
pop ecx
pop ecx
test eax eax
je r-xdata
test [ eax + 0x24 ] 0x80000000
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al 0x1
jmp r-xdata
call sub_4019b6
retn
sub_4015d6
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
push [ ebp + 0x8 ]
call sub_401c4a
push [ ebp + 0x8 ]
call sub_401c4a
pop ecx
pop ecx
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov al 0x1
pop ebp
retn
sub_4015fe
push ebp
mov ebp esp
mov eax [ rw-data ]
mov ecx eax
xor eax [ rw-data ]
and ecx 0x1f
push [ ebp + 0x8 ]
ror eax cl
cmp eax 0xffffffff
jne r-xdata
push rw-data
call _register_onexit_function
pop ecx
call _crt_atexit
jmp r-xdata
neg eax
pop ecx
sbb eax eax
not eax
and eax [ ebp + 0x8 ]
pop ebp
retn
sub_40164e
push ebp
mov ebp esp
sub esp 0x14
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
mov eax [ rw-data ]
push esi
push edi
mov edi 0xbb40e64e
mov esi 0xffff0000
cmp eax edi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
xor eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
call [ GetCurrentThreadId@IAT ]
xor [ ebp - 0x4 ] eax
call [ GetCurrentProcessId@IAT ]
xor [ ebp - 0x4 ] eax
lea eax [ ebp - 0x14 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov ecx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
xor ecx [ ebp - 0x14 ]
xor ecx [ ebp - 0x4 ]
xor ecx eax
cmp ecx edi
jne r-xdata
test esi eax
je r-xdata
test esi ecx
jne r-xdata
mov ecx 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] ecx
not ecx
mov [ rw-data ] ecx
mov eax ecx
or eax 0x4711
shl eax 0x10
or ecx eax
pop edi
pop esi
mov esp ebp
pop ebp
retn
sub_401766
push ebp
mov ebp esp
sub esp 0x324
push ebx
push esi
push 0x17
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor esi esi
lea eax [ ebp - 0x324 ]
push 0x2cc
push esi
push eax
mov [ rw-data ] esi
call memset
add esp 0xc
mov [ ebp - 0x274 ] eax
mov [ ebp - 0x278 ] ecx
mov [ ebp - 0x27c ] edx
mov [ ebp - 0x280 ] ebx
mov [ ebp - 0x284 ] esi
mov [ ebp - 0x288 ] edi
mov [ ebp - 0x25c ] ss
mov [ ebp - 0x268 ] cs
mov [ ebp - 0x28c ] ds
mov [ ebp - 0x290 ] es
mov [ ebp - 0x294 ] fs
mov [ ebp - 0x298 ] gs
pushfd
pop [ ebp - 0x264 ]
mov eax [ ebp + 0x4 ]
mov [ ebp - 0x26c ] eax
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x260 ] eax
mov [ ebp - 0x324 ] 0x10001
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x270 ] eax
lea eax [ ebp - 0x58 ]
push esi
push eax
call memset
mov eax [ ebp + 0x4 ]
add esp 0xc
mov [ ebp - 0x58 ] 0x40000015
mov [ ebp - 0x54 ] 0x1
mov [ ebp - 0x4c ] eax
call [ IsDebuggerPresent@IAT ]
push esi
lea ebx [ eax - 0x1 ]
neg ebx
lea eax [ ebp - 0x58 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x324 ]
sbb bl bl
mov [ ebp - 0x4 ] eax
inc bl
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
int 0x29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bl
neg eax
sbb eax eax
and [ rw-data ] eax
sub_401881
push 0x0
call [ GetModuleHandleW@IAT ]
mov ecx eax
test ecx ecx
jne r-xdata
mov eax 0x5a4d
cmp [ ecx ] ax
jne r-xdata
xor al al
retn
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
jne r-xdata
cmp [ eax + 0x74 ] 0xe
jbe r-xdata
cmp [ eax + 0xe8 ] 0x0
setne al
retn
sub_4018d1
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call terminate
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
je r-xdata
sub_401912
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_401724
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_40193d
push ebx
push esi
mov esi r--data
mov ebx r--data
cmp esi ebx
jae r-xdata
pop esi
pop ebx
retn
push edi
add esi 0x4
cmp esi ebx
jb r-xdata
mov ecx edi
call j_sub_401724
call edi
mov edi [ esi ]
test edi edi
je r-xdata
pop edi
sub_401970
push sub_4019cb
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax

sub_4019ee
push ebp
mov ebp esp
and [ rw-data ] 0x0
sub esp 0x2c
push ebx
xor ebx ebx
inc ebx
or [ rw-data ] ebx
push 0xa
call IsProcessorFeaturePresent
test eax eax
je r-xdata
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
and [ ebp - 0x14 ] 0x0
xor eax eax
or [ rw-data ] 0x2
xor ecx ecx
push esi
push edi
mov [ rw-data ] ebx
lea edi [ ebp - 0x2c ]
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
mov eax [ ebp - 0x2c ]
mov ecx [ ebp - 0x20 ]
mov [ ebp - 0xc ] eax
xor ecx 0x49656e69
mov eax [ ebp - 0x24 ]
xor eax 0x6c65746e
or ecx eax
mov eax [ ebp - 0x28 ]
xor eax 0x756e6547
or ecx eax
neg ecx
push 0x1
pop eax
sbb cl cl
push 0x0
add cl 0x1
pop ecx
push ebx
cpuid
mov esi ebx
pop ebx
mov [ edi ] eax
mov [ edi + 0x4 ] esi
mov [ edi + 0x8 ] ecx
mov [ edi + 0xc ] edx
je r-xdata
mov edi [ rw-data ]
mov eax [ ebp - 0x2c ]
and eax 0xfff3ff0
cmp eax 0x106c0
je r-xdata
pop edi
pop esi
test eax 0x100000
je r-xdata
push 0x7
pop eax
xor ecx ecx
push ebx
cpuid
mov esi ebx
pop ebx
lea ebx [ ebp - 0x2c ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] edx
mov eax [ ebp - 0x28 ]
test eax 0x200
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
je r-xdata
mov edi [ rw-data ]
or edi 0x1
mov [ rw-data ] edi
jmp r-xdata
cmp eax 0x20660
je r-xdata
or [ rw-data ] 0x4
mov [ rw-data ] 0x2
test eax 0x8000000
je r-xdata
or edi 0x2
mov [ rw-data ] edi
cmp [ ebp - 0xc ] 0x7
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x18 ] eax
jl r-xdata
cmp eax 0x20670
je r-xdata
test eax 0x10000000
je r-xdata
cmp eax 0x30650
je r-xdata
xor ecx ecx
xgetbv
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
and eax 0x6
xor ecx ecx
cmp eax 0x6
jne r-xdata
cmp eax 0x30660
je r-xdata
test ecx ecx
jne r-xdata
cmp eax 0x30670
jne r-xdata
mov eax [ rw-data ]
or eax 0x8
mov [ rw-data ] 0x3
test [ ebp - 0x14 ] 0x20
mov [ rw-data ] eax
je r-xdata
or eax 0x20
mov [ rw-data ] 0x5
mov [ rw-data ] eax
sub_40106b
cmp ecx [ rw-data ]
r-xdata
sub_4012e8

sub_401273
mov ecx [ ebp - 0x14 ]
mov eax [ ecx ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
push ecx
push eax
call _seh_filter_exe
pop ecx
pop ecx
retn
_start
call sub_40164e
jmp sub_40113a
sub_4012c0
push ebp
mov ebp esp
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push [ ebp + 0x8 ]
call [ UnhandledExceptionFilter@IAT ]
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop ebp
retn
sub_401594
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
xor ecx ecx
cmp [ eax ] 0xc0000005
sete cl
mov eax ecx
retn
sub_4015b9
push ebp
mov ebp esp
call sub_401b8f
test eax eax
je r-xdata
pop ebp
retn
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov ecx rw-data
xchg [ ecx ] eax
sub_401639
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_4015fe
neg eax
pop ecx
sbb eax eax
neg eax
dec eax
pop ebp
retn
sub_4016ea
xor eax eax
retn
sub_4016ed
xor eax eax
inc eax
retn
sub_4016f1
mov eax 0x4000
retn
sub_4016f7
push rw-data
call [ InitializeSListHead@IAT ]
retn
sub_401703
push 0x30000
push 0x10000
push 0x0
call _controlfp_s
add esp 0xc
test eax eax
jne r-xdata
push 0x7
call sub_401766
int3
retn
sub_401724
retn
sub_401725
mov eax rw-data
retn
sub_40172b
mov eax rw-data
retn
sub_401731
call sub_401725
mov ecx [ eax + 0x4 ]
or [ eax ] 0x4
mov [ eax + 0x4 ] ecx
call sub_40172b
mov ecx [ eax + 0x4 ]
or [ eax ] 0x2
mov [ eax + 0x4 ] ecx
retn
sub_40174e
xor eax eax
cmp [ rw-data ] eax
sete al
retn
sub_40175a
mov eax rw-data
retn
sub_401760
mov eax rw-data
retn
sub_4018c5
push sub_4018d1
call [ SetUnhandledExceptionFilter@IAT ]
retn
j_sub_401724
jmp [ r--data ]
sub_4019b6
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx

sub_4019cb
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push sub_40106b
push rw-data
call _except_handler4_common
add esp 0x18
pop ebp
retn
sub_401b8f
xor eax eax
cmp [ rw-data ] eax
setne al
retn
__telemetry_main_invoke_trigger
jmp [ __telemetry_main_invoke_trigger@IAT ]
__telemetry_main_return_trigger
jmp [ __telemetry_main_return_trigger@IAT ]
memset
jmp [ memset@IAT ]
_except_handler4_common
jmp [ _except_handler4_common@IAT ]
_seh_filter_exe
jmp [ _seh_filter_exe@IAT ]
_set_app_type
jmp [ _set_app_type@IAT ]
__setusermatherr
jmp [ __setusermatherr@IAT ]
_configure_narrow_argv
jmp [ _configure_narrow_argv@IAT ]
_initialize_narrow_environment
jmp [ _initialize_narrow_environment@IAT ]
_get_initial_narrow_environment
jmp [ _get_initial_narrow_environment@IAT ]
_initterm
jmp [ _initterm@IAT ]
_initterm_e
jmp [ _initterm_e@IAT ]
exit
jmp [ exit@IAT ]
_exit
jmp [ _exit@IAT ]
_set_fmode
jmp [ _set_fmode@IAT ]
__p___argc
jmp [ __p___argc@IAT ]
__p___argv
jmp [ __p___argv@IAT ]
_cexit
jmp [ _cexit@IAT ]
_c_exit
jmp [ _c_exit@IAT ]
_register_thread_local_exe_atexit_callback
jmp [ _register_thread_local_exe_atexit_callback@IAT ]
_configthreadlocale
jmp [ _configthreadlocale@IAT ]
_set_new_mode
jmp [ _set_new_mode@IAT ]
__p__commode
jmp [ __p__commode@IAT ]
_initialize_onexit_table
jmp [ _initialize_onexit_table@IAT ]
_register_onexit_function
jmp [ _register_onexit_function@IAT ]
_crt_atexit
jmp [ _crt_atexit@IAT ]
_controlfp_s
jmp [ _controlfp_s@IAT ]
terminate
jmp [ terminate@IAT ]
IsProcessorFeaturePresent
jmp [ IsProcessorFeaturePresent@IAT ]
sub_401c4a
mov al 0x1
retn
