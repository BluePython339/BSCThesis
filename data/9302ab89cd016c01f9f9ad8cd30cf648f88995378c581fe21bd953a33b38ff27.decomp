sub_401000
push 0xffffffff
push sub_42b20b
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
xor edi edi
mov [ esi + 0x8 ] r--data
mov [ esi + 0xc ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x10 ] edi
lea ecx [ esi + 0x1c ]
mov [ esp + 0x14 ] edi
call sub_409a08
mov eax 0x1
mov [ esi + 0x38 ] eax
mov [ esi + 0x34 ] eax
mov [ esi + 0x30 ] edi
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
sub_4010a0
push 0xffffffff
push sub_42b1db
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
lea ecx [ esi + 0x1c ]
mov [ esp + 0x14 ] 0x0
call sub_409d81
mov [ esi + 0x8 ] r--data
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
push esi
call sub_409992
add esp 0x4
sub_401110
mov eax [ esp + 0x8 ]
push esi
push r--data
push eax
xor esi esi
call sub_402060
add esp 0x8
test eax eax
je r-xdata
mov edx [ esp + 0x10 ]
mov [ edx ] esi
mov eax 0x80004001
pop esi
retn 0xc
mov eax [ esp + 0x8 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x10 ]
xor eax eax
mov [ ecx ] eax
mov eax esi
pop esi
retn 0xc
mov ecx [ esp + 0x10 ]
add eax 0x4
mov [ ecx ] eax
mov eax esi
pop esi
retn 0xc
sub_4011a0
push 0xffffffff
push sub_42b5e8
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x34 ]
mov cl [ esp + 0x2c ]
test eax eax
je r-xdata
mov eax [ esp + 0x30 ]
test eax eax
je r-xdata
mov [ eax ] 0x0
test cl 0x2
je r-xdata
mov eax 0x8002802b
jmp r-xdata
mov [ eax ] 0x0
test cl 0x1
je r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x14
mov eax [ esp + 0x24 ]
xor edi edi
cmp [ eax + 0x10 ] edi
jle r-xdata
mov ebp [ esp + 0x28 ]
jmp r-xdata
test edi edi
jl r-xdata
call sub_40a39e
cmp edi [ eax + 0x10 ]
jge r-xdata
mov eax [ eax + 0xc ]
lea eax [ eax + edi * 4 ]
mov eax [ eax ]
lea esi [ esp + 0x34 ]
call sub_402f20
xor ecx ecx
test ebp ebp
setne cl
mov [ esp + 0x1c ] 0x0
test ecx ecx
je r-xdata
push 0x80004005
call sub_401fa0
mov eax [ eax ]
push ebp
push eax
call sub_419d7f
add esp 0x8
test eax eax
mov [ esp + 0x1c ] 0xffffffff
mov eax [ esp + 0x34 ]
sete bl
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test bl bl
jne r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x24 ]
cmp edi [ eax + 0x10 ]
jge r-xdata
mov ecx [ esp + 0x24 ]
inc edi
cmp edi [ ecx + 0x10 ]
jl r-xdata
mov edx [ eax + 0xc ]
mov eax [ edx + edi * 4 ]
mov eax [ eax + 0x4 ]
mov ecx [ esp + 0x30 ]
mov [ ecx ] eax
mov edx [ eax ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov eax ecx
mov eax 0x8002802b
jmp r-xdata
sub_4012f0
push 0xffffffff
push sub_42baa0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x34
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x44 ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x54 ]
cmp [ edi + 0x34 ] 0x0
je r-xdata
xor eax eax
mov ecx [ esp + 0x44 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x40
retn 0x8
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x54 ] eax
mov [ esp + 0x4c ] 0x0
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea ebp [ eax + 0x10 ]
mov [ esp + 0x1c ] ebp
mov [ esp + 0x4c ] 0x1
mov esi [ esp + 0x58 ]
mov ecx [ esi ]
mov edx [ ecx + 0x14 ]
push rw-data
push esi
call edx
mov eax [ esi ]
lea ecx [ esp + 0x14 ]
push ecx
lea edx [ esp + 0x1c ]
push edx
mov edx [ eax + 0x10 ]
lea ecx [ esp + 0x28 ]
push ecx
push esi
call edx
mov eax [ esi ]
mov edx [ eax + 0xc ]
lea ecx [ esp + 0x24 ]
push ecx
push esi
call edx
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x14 ]
call sub_401ee0
mov [ esp + 0x4c ] 0x2
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x18 ]
push ecx
push edx
lea eax [ esp + 0x5c ]
push r--data
push eax
call sub_401930
mov ecx [ esp + 0x20 ]
push ecx
push r--data
call sub_419b38
mov edx [ esp + 0x6c ]
push edx
push r--data
call sub_419b38
mov eax [ edi + 0x24 ]
add esp 0x20
lea esi [ edi + 0x1c ]
lea ecx [ esp + 0x54 ]
push ecx
push eax
mov ecx esi
call sub_409e7a
mov eax [ rw-data ]
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov [ esp + 0x4c ] 0x1
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
push eax
lea ecx [ esp + 0x5c ]
call sub_401ee0
mov [ esp + 0x4c ] 0x3
mov ecx [ esi + 0x8 ]
push eax
push ecx
mov ecx esi
call sub_409e7a
mov [ esp + 0x4c ] 0x2
mov eax [ esp + 0x58 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
lea eax [ ebp - 0x10 ]
mov [ esp + 0x4c ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ rw-data ]
push ecx
call [ SysFreeString@IAT ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x4c ] 0xffffffff
mov eax [ esp + 0x54 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_401510
push esi
xor esi esi
call [ GetActiveWindow@IAT ]
push eax
call sub_40cadb
test eax eax
je r-xdata
call sub_40f65e
test eax eax
je r-xdata
mov esi [ eax + 0x20 ]
test esi esi
jne r-xdata
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0xc ]
mov [ ecx + 0x2c ] esi
mov [ edx ] esi
xor eax eax
pop esi
retn 0x8
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x74 ]
call eax
test eax eax
je r-xdata
mov esi [ eax + 0x20 ]
sub_401580
push ebx
mov ebx [ esp + 0x8 ]
mov eax [ ebx + 0x18 ]
not eax
push esi
mov esi ecx
test al 0x1
je r-xdata
push edi
mov ecx ebx
call sub_4105c1
mov edi eax
call sub_401600
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
pop edi
push edx
push ebx
call sub_401730
pop esi
pop ebx
retn 0x4
mov ecx [ esi + 0x8 ]
push ecx
mov ecx ebx
call sub_410590
mov edx [ esi + 0x4 ]
mov eax [ esi + 0x8 ]
push edx
push ebx
call sub_401730
pop esi
pop ebx
retn 0x4
sub_4015d0
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
mov [ esi ] r--data
test eax eax
je r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
push eax
call sub_409992
add esp 0x4
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_401600
push ecx
push ebp
xor ebp ebp
cmp edi ebp
jge r-xdata
jne r-xdata
call sub_40a39e
mov ecx [ esi + 0x4 ]
push ebx
cmp ecx ebp
jne r-xdata
mov eax [ esi + 0x4 ]
cmp eax ebp
je r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebp [ esi + 0x10 ]
cmp edi ebp
jle r-xdata
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] ebp
pop ebp
pop ecx
retn
push eax
call sub_409992
add esp 0x4
mov [ esi + 0x4 ] ebp
mov eax [ esi + 0x10 ]
cmp eax ebp
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
lea ebx [ ebp * 4 ]
push ebx
call sub_409987
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
pop ebx
mov [ esi + 0xc ] ebp
mov [ esi + 0x8 ] edi
pop ebp
pop ecx
retn
mov ebp edi
add eax ebx
cmp edi eax
jge r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
pop ebx
mov [ esi + 0x8 ] edi
pop ebp
pop ecx
retn
mov edx edi
sub edx eax
add edx edx
add edx edx
push edx
lea eax [ ecx + eax * 4 ]
push ebp
push eax
call sub_41ae80
add esp 0xc
pop ebx
mov [ esi + 0x8 ] edi
pop ebp
pop ecx
retn
mov [ esp + 0x8 ] edi
mov eax edi
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp eax 0x400
jle r-xdata
mov eax 0x4
jmp r-xdata
lea ebp [ eax * 4 ]
push ebp
call sub_409987
mov ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add ecx ecx
add ecx ecx
push ecx
push edx
mov ebx eax
push ebp
push ebx
call sub_401840
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
add ecx ecx
add ecx ecx
push ecx
lea edx [ ebx + eax * 4 ]
push 0x0
push edx
call sub_41ae80
mov eax [ esi + 0x4 ]
push eax
call sub_409992
mov ecx [ esp + 0x2c ]
add esp 0x24
mov [ esi + 0x4 ] ebx
mov [ esi + 0xc ] ecx
call sub_40a39e
cmp eax ebx
jge r-xdata
mov eax 0x400
sub_401730
push ebp
mov ebp [ esp + 0xc ]
push edi
mov edi eax
test edi edi
je r-xdata
mov eax [ esp + 0xc ]
mov ecx [ eax + 0x18 ]
not ecx
push ebx
push esi
test cl 0x1
je r-xdata
test ebp ebp
jne r-xdata
test edi edi
jbe r-xdata
test edi edi
jbe r-xdata
call sub_40a39e
pop esi
pop ebx
pop edi
pop ebp
retn 0x8
mov ebx edi
cmp edi 0x1fffffff
jb r-xdata
lea esp [ esp ]
mov ecx [ esp + 0x14 ]
lea esi [ ebx * 4 ]
push esi
push ebp
call sub_40fe07
cmp eax esi
jne r-xdata
mov ebx 0x1fffffff
mov ecx [ esp + 0x14 ]
lea esi [ ebx * 4 ]
push esi
push ebp
call sub_4104c9
sub edi ebx
add ebp esi
test edi edi
ja r-xdata
mov ebx 0x1fffffff
push 0x0
push 0x3
call sub_4108a1
sub edi ebx
add ebp esi
test edi edi
ja r-xdata
mov ebx edi
cmp edi 0x1fffffff
jb r-xdata
pop esi
pop ebx
pop edi
pop ebp
retn 0x8
sub_401810
mov eax [ esp + 0x4 ]
push esi
mov esi [ esp + 0xc ]
push esi
push eax
call sub_40fe07
cmp eax esi
pop esi
je r-xdata
retn 0x8
push 0x0
push 0x3
call sub_4108a1
sub_401840
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_41973f
push eax
call sub_401a00
add esp 0x14
retn
sub_4018b0
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi ecx
test ebx ebx
jne r-xdata
push ebp
mov ebp [ esp + 0x14 ]
push esi
push ebp
push ebx
call sub_419b1c
mov esi eax
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
add esp 0x8
or ecx edx
jge r-xdata
push 0x80070057
call sub_401fa0
mov ecx [ edi ]
push ebp
push ebx
lea eax [ esi + 0x1 ]
push eax
push ecx
call sub_41999c
add esp 0x10
test esi esi
jl r-xdata
push esi
mov ecx edi
call sub_401cc0
push 0x80070057
call sub_401fa0
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov edx [ edi ]
xor eax eax
mov [ edx + esi * 2 ] ax
pop esi
pop ebp
pop edi
pop ebx
retn 0x8
sub_401950
push ebx
mov ebx [ esp + 0x8 ]
push edi
mov edi [ esp + 0x10 ]
push edi
push ebx
call [ LoadResource@IAT ]
test eax eax
jne r-xdata
push esi
push eax
call [ LockResource@IAT ]
mov esi eax
test esi esi
je r-xdata
pop edi
pop ebx
retn
pop esi
pop edi
xor eax eax
pop ebx
retn
push edi
push ebx
call [ SizeofResource@IAT ]
mov ecx [ esp + 0x18 ]
add eax esi
and ecx 0xf
jbe r-xdata
cmp esi eax
jb r-xdata
lea ebx [ ebx ]
movzx eax [ esi ]
neg eax
sbb eax eax
and eax esi
pop esi
pop edi
pop ebx
retn
sub ecx 0x1
movzx edx [ esi ]
lea esi [ esi + edx * 2 + 0x2 ]
jne r-xdata
cmp esi eax
jae r-xdata
sub_4019c0
push esi
mov esi [ esp + 0xc ]
mov eax esi
shr eax 0x4
push edi
mov edi [ esp + 0xc ]
inc eax
movzx ecx ax
push 0x6
push ecx
push edi
call [ FindResourceW@IAT ]
test eax eax
jne r-xdata
push esi
push eax
push edi
call sub_401950
add esp 0xc
pop edi
pop esi
retn
pop edi
pop esi
retn
sub_401a38
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_401a90
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax esi
shr eax 0x4
push edi
mov edi [ esp + 0x10 ]
inc eax
mov ebx ecx
movzx ecx ax
push 0x6
push ecx
push edi
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
push esi
push eax
push edi
call sub_401950
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax [ ebx ]
movzx edi [ esi ]
sub eax 0x10
mov edx 0x1
sub edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax edi
or edx eax
jge r-xdata
movzx eax [ esi ]
push ebp
mov ebp [ ebx ]
lea edx [ esi + 0x2 ]
cmp eax 0xffffffff
jne r-xdata
push edi
mov ecx ebx
call sub_401cc0
lea ecx [ eax + eax ]
push ecx
push edx
lea esi [ edi + edi ]
push esi
push ebp
call sub_41973f
push eax
call sub_401a00
add esp 0x14
pop ebp
test edi edi
jl r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
push 0x80070057
call sub_401fa0
mov eax [ ebx ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
inc eax
mov [ eax - 0xc ] edi
mov edx [ ebx ]
xor eax eax
pop edi
mov [ esi + edx ] ax
pop esi
mov eax 0x1
pop ebx
retn 0x8
sub_401b60
push esi
push edi
mov edi [ esp + 0xc ]
push edi
mov esi ecx
call sub_40a542
test eax eax
jne r-xdata
push edi
push eax
mov ecx esi
call sub_401a90
pop edi
pop esi
retn 0x4
pop edi
pop esi
retn 0x4
sub_401b90
push esi
mov esi ecx
mov ecx [ esi ]
cmp [ ecx - 0xc ] 0x0
lea eax [ ecx - 0x10 ]
push edi
mov edi [ eax ]
je r-xdata
pop edi
pop esi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi ]
xor ecx ecx
pop edi
mov [ eax ] cx
pop esi
retn
push 0x80070057
call sub_401fa0
sub_401c00
push ecx
push ebx
push ebp
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ esp + 0xc ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov edx [ eax ]
mov ebp [ esp + 0x18 ]
push 0x2
mov ecx eax
mov eax [ edx ]
push ebp
call eax
mov edi eax
test edi edi
jne r-xdata
cmp ebx ebp
jge r-xdata
call sub_409420
lea eax [ ebp + ebp + 0x2 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebp [ edi + 0x10 ]
push ebp
call sub_41973f
add esp 0x10
mov [ edi + 0x4 ] ebx
lea edx [ esi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov ebp ebx
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_401c80
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_409420
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x2
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
retn 0x4
sub_401cc0
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
sub eax 0x10
push esi
mov esi [ eax + 0x4 ]
cmp esi edx
jle r-xdata
cmp [ eax + 0xc ] 0x1
pop esi
jle r-xdata
mov edx esi
mov eax [ eax + 0x8 ]
cmp eax edx
jge r-xdata
mov [ esp + 0x4 ] edx
jmp sub_401c00
retn 0x4
cmp eax 0x400
jle r-xdata
add eax eax
add eax 0x400
jmp r-xdata
mov [ esp + 0x4 ] eax
jmp sub_401c80
mov eax edx
cmp eax edx
jge r-xdata
sub_401d10
push esi
mov esi ecx
mov eax [ esi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
mov eax [ esp + 0x8 ]
sub edx eax
or ecx edx
jge r-xdata
mov eax [ esi ]
pop esi
retn 0x4
push eax
mov ecx esi
call sub_401cc0
sub_401d60
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
push 0x80070057
call sub_401fa0
mov edx [ ecx ]
cmp eax [ edx - 0x8 ]
jg r-xdata
mov [ edx - 0xc ] eax
mov ecx [ ecx ]
xor edx edx
mov [ ecx + eax * 2 ] dx
retn 0x4
sub_401d90
push ebp
push edi
mov edi [ esp + 0x10 ]
mov ebp ecx
test edi edi
jne r-xdata
push esi
mov esi [ esp + 0x10 ]
test esi esi
jne r-xdata
call sub_401b90
pop edi
pop ebp
retn 0x8
mov eax [ ebp ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub esi eax
sub edx edi
sar esi 0x1
or ecx edx
push ebx
mov ebx [ eax - 0xc ]
jge r-xdata
push 0x80070057
call sub_401fa0
mov eax [ ebp ]
mov edx [ eax - 0x8 ]
add edx edx
cmp esi ebx
lea ebx [ edi + edi ]
push ebx
ja r-xdata
push edi
mov ecx ebp
call sub_401cc0
mov ecx [ esp + 0x18 ]
push ecx
push edx
push eax
call sub_41973f
lea ecx [ eax + esi * 2 ]
push ecx
push edx
push eax
call sub_4197bc
jmp r-xdata
push 0x80070057
call sub_401fa0
mov eax [ ebp ]
cmp edi [ eax - 0x8 ]
jg r-xdata
add esp 0x10
test edi edi
jl r-xdata
mov [ eax - 0xc ] edi
mov eax [ ebp ]
xor ecx ecx
mov [ ebx + eax ] cx
pop ebx
pop esi
pop edi
pop ebp
retn 0x8
sub_401e40
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
lea edx [ eax + 0x2 ]
lea esp [ esp ]
retn
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
retn
sub_401e60
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
push edi
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
push eax
push esi
call sub_401d90
pop esi
retn 0x4
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
pop edi
sar eax 0x1
push eax
push esi
call sub_401d90
pop esi
retn 0x4
sub_401ea0
mov edx [ esp + 0x4 ]
push edi
mov edi ecx
test edx edx
jne r-xdata
mov eax edx
push esi
lea esi [ eax + 0x2 ]
xor eax eax
push eax
push edx
call sub_401d90
mov eax edi
pop edi
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
pop esi
sar eax 0x1
push eax
push edx
mov ecx edi
call sub_401d90
mov eax edi
pop edi
retn 0x4
sub_401ee0
push 0xffffffff
push sub_42ba58
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0xc ] edi
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ edi ] eax
mov edx [ esp + 0x20 ]
mov [ esp + 0x18 ] 0x0
test edx edx
je r-xdata
push 0x80004005
call sub_401fa0
xor eax eax
jmp r-xdata
test edx 0xffff0000
jne r-xdata
push eax
push edx
mov ecx edi
call sub_401d90
mov eax edx
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
movzx esi dx
push esi
call sub_40a542
test eax eax
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
sar eax 0x1
mov eax edi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
push esi
push eax
mov ecx edi
call sub_401a90
jmp r-xdata
sub_401fc0
push esi
mov esi ecx
mov ecx [ esp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
retn 0x4
push 0x80004005
call sub_401fa0
sub_401ff0
push esi
mov esi ecx
call sub_40a097
test eax eax
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
mov eax esi
pop esi
retn
push 0x80004005
call sub_401fa0
sub_402020
lea eax [ ecx + 0xc ]
or edx 0xffffffff
[ eax ] edx
dec edx
test edx edx
jg r-xdata
retn
mov eax [ ecx ]
mov edx [ eax ]
push ecx
mov ecx eax
mov eax [ edx + 0x4 ]
call eax
sub_402040
mov eax [ ecx ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_402060
mov ecx [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov eax 0x10
push esi
mov edi edi
movzx eax [ edx ]
movzx esi [ ecx ]
sub eax esi
jne r-xdata
sub eax 0x4
add ecx 0x4
add edx 0x4
cmp eax 0x4
jae r-xdata
sar eax 0x1f
or eax 0x1
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
retn
movzx eax [ edx + 0x1 ]
movzx esi [ ecx + 0x1 ]
sub eax esi
jne r-xdata
mov esi [ edx ]
cmp esi [ ecx ]
jne r-xdata
xor eax eax
xor edx edx
test eax eax
sete dl
pop esi
mov eax edx
retn
movzx eax [ edx + 0x2 ]
movzx esi [ ecx + 0x2 ]
sub eax esi
jne r-xdata
movzx eax [ edx + 0x3 ]
movzx ecx [ ecx + 0x3 ]
sub eax ecx
sub_4020d0
push edi
mov [ esi ] r--data
call sub_40a097
xor edi edi
cmp eax edi
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi + 0x20 ] eax
mov [ esi + 0x4 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x2c ] 0x1
mov ecx [ r--data ]
mov [ esi + 0xc ] ecx
mov edx [ r--data ]
mov [ esi + 0x10 ] edx
mov eax [ r--data ]
mov [ esi + 0x14 ] eax
mov ecx [ r--data ]
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x18 ] ecx
mov eax esi
pop edi
retn
push 0x80004005
call sub_401fa0
sub_402140
push esi
mov esi [ esp + 0xc ]
push r--data
push esi
call sub_402060
add esp 0x8
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
xor eax eax
pop esi
retn 0xc
push r--data
push esi
call sub_402060
add esp 0x8
test eax eax
jne r-xdata
push edi
mov edi [ esp + 0xc ]
lea eax [ edi + 0xc ]
push eax
push esi
call sub_402060
add esp 0x8
test eax eax
je r-xdata
pop edi
mov eax 0x80004002
pop esi
retn 0xc
mov ecx [ esp + 0x14 ]
mov [ ecx ] edi
pop edi
xor eax eax
pop esi
retn 0xc
sub_402210
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42b708
mov eax [ fs : 0x0 ]
push eax
sub esp 0x60
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x70 ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x10 ]
push r--data
push eax
call sub_402060
add esp 0x8
test eax eax
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
lea edx [ esp + 0x28 ]
push edx
push 0x1
lea edx [ esp + 0x24 ]
push edx
mov edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0x1c ]
call eax
xor ebx ebx
cmp eax ebx
jne r-xdata
mov eax 0x80070057
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
xor eax eax
mov ecx [ esp + 0x70 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
mov eax [ esi + 0x20 ]
sub eax 0x10
push eax
call sub_4026f0
add eax 0x10
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x78 ] ebx
mov edx [ esp + 0x1c ]
cmp edx ebx
jne r-xdata
mov eax edx
lea esi [ eax + 0x2 ]
mov edi edi
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
cmp cx bx
jne r-xdata
sub eax esi
sar eax 0x1
push eax
push edx
lea ecx [ esp + 0x1c ]
call sub_402600
mov edi [ esp + 0x14 ]
lea ecx [ esp + 0x20 ]
push ecx
push ecx
add edi 0xfffffff0
mov [ esp + 0x2c ] esp
mov esi esp
push edi
mov [ esp + 0x1c ] edi
call sub_4026f0
add eax 0x10
add esp 0x4
mov [ esi ] eax
mov [ esp + 0x80 ] 0x1
call sub_403490
mov ecx eax
mov [ esp + 0x80 ] 0x0
call sub_403c50
cmp eax ebx
je r-xdata
mov [ esp + 0x78 ] 0xffffffff
lea ecx [ edi + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x30 ] ebx
mov [ esp + 0x38 ] ebx
mov ebx [ ebp + 0x1c ]
mov esi [ ebx + 0x8 ]
xor ecx ecx
mov eax esi
mov edx 0x10
mul edx
seto cl
mov [ esp + 0x34 ] esi
neg ecx
or ecx eax
push ecx
call sub_409987
mov [ esp + 0x30 ] eax
add esp 0x4
lea eax [ esp + 0x3c ]
push eax
call [ VariantInit@IAT ]
xor esi esi
xor ecx ecx
mov [ esp + 0x3c ] cx
mov [ esp + 0x18 ] esi
cmp [ ebx + 0x8 ] esi
jbe r-xdata
mov ecx [ edi ]
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push edi
call edx
call sub_403490
mov eax [ eax + 0x4 ]
mov ecx [ eax ]
lea edx [ esp + 0x24 ]
push edx
lea edx [ esp + 0x50 ]
push edx
lea edx [ esp + 0x44 ]
push edx
lea edx [ esp + 0x38 ]
push edx
mov edx [ esp + 0x30 ]
push 0x1
push 0x800
push r--data
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
cmp eax 0x80020005
je r-xdata
mov edx [ esp + 0x2c ]
mov edi [ ebx ]
lea eax [ esi + edx ]
push eax
add edi esi
call [ VariantInit@IAT ]
mov ecx [ esp + 0x2c ]
push edi
lea edx [ esi + ecx ]
push edx
call [ VariantCopy@IAT ]
mov eax [ esp + 0x18 ]
inc eax
add esi 0x10
mov [ esp + 0x18 ] eax
cmp eax [ ebx + 0x8 ]
jb r-xdata
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
cmp eax 0x80020004
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x18 ] eax
mov [ esp + 0x78 ] 0x2
mov ecx [ esp + 0x24 ]
push ecx
lea edx [ esp + 0x1c ]
push r--data
push edx
call sub_401930
mov eax [ ebp + 0x8 ]
mov esi [ esp + 0x24 ]
add esp 0xc
cmp [ eax + 0x2c ] 0x0
je r-xdata
push 0x80004005
call sub_401fa0
mov edi [ esp + 0x10 ]
lea eax [ esi - 0x10 ]
mov [ esp + 0x78 ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push esi
push r--data
call sub_419b38
add esp 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4024b0
sub esp 0x8
push ebx
mov ebx eax
push ebp
mov ebp [ esp + 0x14 ]
lea ecx [ esi + 0x20 ]
test ebx ebx
je r-xdata
push eax
push ebx
call sub_401d90
lea ecx [ esp + 0x8 ]
push ecx
mov [ esi + 0x8 ] edi
mov eax [ ebp ]
mov edx [ eax ]
push r--data
push ebp
call edx
mov eax [ edi ]
mov edx [ eax + 0xc ]
lea ecx [ esp + 0x14 ]
push ecx
push edi
call edx
mov ecx [ esp + 0x14 ]
mov edx [ ecx ]
mov [ esi + 0xc ] edx
mov edx [ ecx + 0x4 ]
lea eax [ esi + 0xc ]
mov [ eax + 0x4 ] edx
mov edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] edx
mov ecx [ ecx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ esp + 0x8 ]
mov edx [ ecx ]
lea ebx [ esp + 0xc ]
push ebx
push eax
mov eax [ edx + 0x10 ]
push ecx
call eax
mov eax [ esp + 0xc ]
mov ecx [ eax ]
lea edx [ esi + 0x1c ]
push edx
push esi
push eax
mov eax [ ecx + 0x14 ]
call eax
pop ebp
pop ebx
test eax eax
je r-xdata
lea edx [ eax + 0x2 ]
mov [ esp + 0x14 ] edx
lea esp [ esp ]
mov edx [ esp + 0xc ]
mov ecx [ edi ]
mov eax [ ecx + 0x4c ]
push edx
push edi
call eax
add esp 0x8
retn 0x4
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ esp + 0x14 ]
sar eax 0x1
push r--data
call sub_419b38
add esp 0x4
sub_402580
mov edx [ esp + 0x4 ]
push edi
mov edi ecx
test edx edx
jne r-xdata
mov eax edx
push esi
lea esi [ eax + 0x2 ]
xor eax eax
push eax
push edx
call sub_402600
mov eax edi
pop edi
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax esi
pop esi
sar eax 0x1
push eax
push edx
mov ecx edi
call sub_402600
mov eax edi
pop edi
retn 0x4
sub_4025c0
push esi
mov esi [ esp + 0x8 ]
test esi esi
jne r-xdata
mov eax esi
push edi
lea edi [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
push eax
push esi
call sub_402600
pop esi
retn 0x4
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
pop edi
sar eax 0x1
push eax
push esi
call sub_402600
pop esi
retn 0x4
sub_402600
push ebx
push ebp
mov ebx ecx
mov eax [ ebx ]
mov ecx [ esp + 0xc ]
mov ebp [ eax - 0xc ]
push esi
mov esi ecx
sub esi eax
mov eax [ esp + 0x14 ]
sar esi 0x1
test eax eax
jge r-xdata
test ecx ecx
jne r-xdata
push 0x80070057
call sub_401fa0
push eax
push ecx
call sub_419e63
add esp 0x8
mov [ esp + 0x14 ] eax
mov edx eax
xor edx edx
mov [ esp + 0x14 ] edx
jmp r-xdata
mov eax [ ebx ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push edi
lea edi [ edx + ebp ]
sub eax edi
or ecx eax
jge r-xdata
push 0x80070057
call sub_401fa0
mov eax 0x7fffffff
sub eax edx
cmp eax ebp
jge r-xdata
mov ecx [ ebx ]
cmp esi ebp
lea esi [ ecx + esi * 2 ]
jbe r-xdata
push edi
mov ecx ebx
call sub_401cc0
mov edx [ esp + 0x18 ]
lea eax [ edx + edx ]
push eax
push esi
push eax
lea ecx [ ecx + ebp * 2 ]
push ecx
call sub_41973f
add esp 0x10
test edi edi
jl r-xdata
mov esi [ esp + 0x14 ]
push 0x80070057
call sub_401fa0
mov eax [ ebx ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] edi
mov edx [ ebx ]
xor eax eax
mov [ edx + edi * 2 ] ax
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_4026f0
push esi
mov esi [ esp + 0x8 ]
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea eax [ eax + eax + 0x2 ]
push eax
add esi 0x10
push esi
push eax
lea ecx [ edi + 0x10 ]
push ecx
call sub_41973f
add esp 0x10
mov eax edi
pop edi
pop esi
retn
call sub_409420
mov edi esi
mov eax 0x1
[ ecx ] eax
mov eax edi
pop edi
pop esi
retn
sub_402760
mov eax [ esp + 0x4 ]
mov eax [ eax ]
push esi
sub eax 0x10
push eax
mov esi ecx
call sub_4026f0
add eax 0x10
mov [ esi ] eax
add esp 0x4
mov eax esi
pop esi
retn 0x4
sub_4027a0
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_402820
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_402820
push 0xffffffff
push sub_42b388
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
call sub_41104b
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_4028b0
push 0xffffffff
push sub_42b1a8
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] esi
mov [ esi ] r--data
xor ebx ebx
mov [ esp + 0x20 ] ebx
mov ecx [ esi + 0x2c ]
cmp ecx ebx
je r-xdata
xor edi edi
cmp [ esi + 0x24 ] ebx
jle r-xdata
call sub_4112b2
jmp r-xdata
mov eax [ esi + 0x28 ]
push eax
call sub_409992
add esp 0x4
mov ebp [ VariantClear@IAT ]
call sub_4110c4
mov ecx esi
mov [ esp + 0x20 ] 0xffffffff
call sub_410cff
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn
mov eax [ esi + 0x28 ]
add eax ebx
push eax
call ebp
inc edi
add ebx 0x10
cmp edi [ esi + 0x24 ]
jl r-xdata
sub_402970
push ebx
push ebp
mov ebx eax
push esi
push edi
test ebx ebx
jle r-xdata
xor esi esi
test ebx ebx
jle r-xdata
mov esi [ esp + 0x14 ]
mov ebp [ VariantInit@IAT ]
mov edi ebx
pop edi
pop esi
pop ebp
pop ebx
retn
mov edi [ esp + 0x14 ]
mov ebp [ esp + 0x18 ]
sub ebp edi
push esi
call ebp
add esi 0x10
sub edi 0x1
jne r-xdata
sub esi 0x1
js r-xdata
inc esi
add edi 0x10
cmp esi ebx
jl r-xdata
call sub_40a366
mov ebx [ VariantClear@IAT ]
mov edi esi
shl edi 0x4
add edi [ esp + 0x14 ]
lea eax [ edi + ebp ]
push eax
push edi
call [ VariantCopy@IAT ]
test eax eax
jne r-xdata
push edi
call ebx
dec esi
sub edi 0x10
test esi esi
jge r-xdata
sub_402a00
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi - 0x14 ]
add esi 0xffffffd0
push eax
lea ecx [ esp + 0x8 ]
call sub_411d43
mov ecx esi
call sub_411241
cmp [ esp + 0x8 ] 0x0
mov esi eax
je r-xdata
pop esi
add esp 0x8
retn 0x4
mov ecx [ esp + 0x4 ]
push ecx
push 0x0
call sub_4113e4
mov eax esi
sub_402a40
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi - 0x14 ]
add esi 0xffffffd0
push eax
lea ecx [ esp + 0x8 ]
call sub_411d43
mov ecx esi
call sub_4112b2
cmp [ esp + 0x8 ] 0x0
mov esi eax
je r-xdata
pop esi
add esp 0x8
retn 0x4
mov ecx [ esp + 0x4 ]
push ecx
push 0x0
call sub_4113e4
mov eax esi
sub_402a80
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi - 0x14 ]
add esi 0xffffffd0
push eax
lea ecx [ esp + 0x8 ]
call sub_411d43
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
push ecx
push edx
mov ecx esi
call sub_41130a
cmp [ esp + 0x8 ] 0x0
mov esi eax
je r-xdata
pop esi
add esp 0x8
retn 0xc
mov eax [ esp + 0x4 ]
push eax
push 0x0
call sub_4113e4
mov eax esi
sub_402ad0
push ebp
mov ebp esp
push 0xffffffff
push sub_42b35d
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi - 0x14 ]
push eax
lea ecx [ ebp - 0x1c ]
call sub_411d43
mov ebx [ ebp + 0x14 ]
mov [ ebp - 0x4 ] 0x0
test ebx ebx
je r-xdata
mov edi [ esi - 0xc ]
sub edi [ esi - 0x10 ]
mov eax [ ebp + 0xc ]
cmp edi eax
jl r-xdata
mov [ ebx ] 0x0
lea ecx [ ebp - 0x24 ]
call sub_40a48e
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x2
mov ecx [ esi - 0x10 ]
shl ecx 0x4
add ecx [ esi - 0x8 ]
mov eax edi
push ecx
push edx
call sub_402970
add esp 0x8
mov [ ebp - 0x4 ] 0x0
call sub_40a4a6
add [ esi - 0x10 ] edi
test ebx ebx
je r-xdata
mov edi eax
xor eax eax
cmp edi [ ebp + 0xc ]
mov [ ebp - 0x4 ] 0xffffffff
setne al
cmp [ ebp - 0x18 ] 0x0
mov esi eax
je r-xdata
mov [ ebx ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov ecx [ ebp - 0x1c ]
push ecx
push 0x0
call sub_4113e4
sub_402bb1
mov [ ebp - 0x4 ] 0x0
call sub_40a4a6
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
mov eax [ ebp - 0x1c ]
push eax
push 0x0
call sub_4113e4
sub_402bf0
sub esp 0x8
push ebx
push esi
mov esi [ esp + 0x14 ]
mov eax [ esi - 0x14 ]
push edi
push eax
lea ecx [ esp + 0x10 ]
call sub_411d43
mov edi [ esp + 0x1c ]
mov ecx [ esi - 0x10 ]
mov edx [ esi - 0xc ]
lea ebx [ ecx + edi ]
cmp ebx edx
mov eax edi
jle r-xdata
add ecx eax
mov [ esi - 0x10 ] ecx
xor ecx ecx
cmp eax edi
setne cl
cmp [ esp + 0x10 ] 0x0
mov esi ecx
je r-xdata
sub edx ecx
mov eax edx
pop edi
mov eax esi
pop esi
pop ebx
add esp 0x8
retn 0x8
mov edx [ esp + 0xc ]
push edx
push 0x0
call sub_4113e4
sub_402c50
sub esp 0x8
push esi
mov esi [ esp + 0x10 ]
mov eax [ esi - 0x14 ]
push eax
lea ecx [ esp + 0x8 ]
call sub_411d43
cmp [ esp + 0x8 ] 0x0
mov [ esi - 0x10 ] 0x0
pop esi
je r-xdata
xor eax eax
add esp 0x8
retn 0x4
mov ecx [ esp ]
push ecx
push 0x0
call sub_4113e4
sub_402c90
push ebp
mov ebp esp
push 0xffffffff
push sub_42b427
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi [ ebp + 0x8 ]
mov eax [ esi - 0x14 ]
add esi 0xffffffd0
push eax
lea ecx [ ebp - 0x1c ]
call sub_411d43
xor edi edi
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x4 ] edi
call sub_40a48e
mov bl 0x2
push 0x34
mov [ ebp - 0x4 ] bl
call sub_409958
add esp 0x4
mov [ ebp + 0x8 ] eax
mov [ ebp - 0x4 ] 0x3
cmp eax edi
je r-xdata
mov [ ebp - 0x4 ] bl
mov ecx [ esi + 0x24 ]
mov eax [ esi + 0x20 ]
mov edx [ esi + 0x28 ]
mov [ edi + 0x24 ] ecx
mov ecx esi
mov [ edi + 0x28 ] edx
mov [ edi + 0x20 ] eax
mov [ edi + 0x2c ] esi
call sub_411241
mov [ ebp - 0x4 ] 0x0
call sub_40a4a6
mov ecx [ ebp + 0xc ]
add edi 0x30
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x0
mov [ ecx ] edi
je r-xdata
push eax
call sub_402820
mov edi eax
xor eax eax
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov edx [ ebp - 0x1c ]
push edx
push 0x0
call sub_4113e4
sub_402d70
mov [ ebp - 0x4 ] 0x0
call sub_40a4a6
mov [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax 0x8007000e
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp - 0x1c ]
push ecx
push 0x0
call sub_4113e4
sub_402de0
push 0xffffffff
push sub_42b61b
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
mov [ esi ] r--data
lea edi [ esi + 0x8 ]
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ edi ] eax
mov [ esp + 0x14 ] 0x0
push r--data
mov ecx edi
mov [ esi + 0x4 ] 0x0
call sub_403000
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
push 0x80004005
call sub_401fa0
sub_402e70
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
sub eax 0x10
mov [ esi ] r--data
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test [ esp + 0x8 ] 0x1
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_402eb0
push 0xffffffff
push sub_42b808
mov eax [ fs : 0x0 ]
push eax
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
lea eax [ esp + 0x14 ]
add ecx 0x8
push eax
mov [ esp + 0x10 ] 0x0
call sub_402f40
mov [ esp + 0xc ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0xc
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_402f40
mov eax [ esp + 0x4 ]
push esi
push edi
mov edi ecx
mov ecx [ eax ]
mov esi [ edi ]
lea eax [ ecx - 0x10 ]
sub esi 0x10
cmp eax esi
je r-xdata
mov eax edi
pop edi
pop esi
retn 0x4
cmp [ esi + 0xc ] 0x0
push ebx
lea ebx [ esi + 0xc ]
jl r-xdata
mov edx [ ecx - 0xc ]
push edx
push ecx
mov ecx edi
call sub_401d90
pop ebx
mov eax edi
pop edi
pop esi
retn 0x4
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
push ebp
push eax
call sub_4026f0
mov ebp eax
add esp 0x4
or eax 0xffffffff
[ ebx ] eax
dec eax
test eax eax
jg r-xdata
add ebp 0x10
mov [ edi ] ebp
pop ebp
pop ebx
mov eax edi
pop edi
pop esi
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_403000
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov ecx edi
call sub_401b90
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp [ MultiByteToWideChar@IAT ]
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0x3
call ebp
mov esi eax
dec esi
test esi esi
jle r-xdata
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
or ecx edx
jge r-xdata
mov eax [ edi ]
push esi
push eax
push 0xffffffff
push ebx
push 0x0
push 0x3
call ebp
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
push esi
mov ecx edi
call sub_401cc0
push 0x80070057
call sub_401fa0
mov [ eax - 0xc ] esi
mov ecx [ edi ]
xor edx edx
mov eax edi
pop edi
mov [ ecx + esi * 2 ] dx
pop esi
pop ebp
pop ebx
retn 0x4
sub_403090
push 0xffffffff
push sub_42bc82
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
xor esi esi
push esi
call [ GetCommandLineW@IAT ]
push eax
push esi
push esi
call [ GetModuleHandleW@IAT ]
push eax
call sub_412c8e
test eax eax
jne r-xdata
push esi
call [ CoInitialize@IAT ]
push 0x264
call sub_409958
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x24 ] esi
cmp eax esi
je r-xdata
push r--data
call sub_419b38
add esp 0x4
lea eax [ esi + 0x1 ]
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
or ebx 0xffffffff
mov ebp 0x1
cmp [ esp + 0x2c ] ebp
mov [ esp + 0x24 ] ebx
jle r-xdata
push eax
call sub_4040e0
mov esi eax
mov ecx esi
call sub_404e30
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov ebx [ esp + 0x30 ]
mov eax [ esi + 0x224 ]
push eax
call sub_403490
push eax
call sub_403780
push r--data
mov ecx esi
call sub_4110fe
push eax
push ecx
mov ecx esp
mov [ esp + 0x20 ] esp
push r--data
call sub_403300
mov [ esp + 0x2c ] 0x2
call sub_403490
push eax
mov [ esp + 0x30 ] ebx
call sub_403610
mov eax [ esi + 0x230 ]
push ecx
sub eax 0x10
mov [ esp + 0x1c ] esp
mov edi esp
push eax
call sub_4026f0
add eax 0x10
add esp 0x4
mov [ edi ] eax
mov [ esp + 0x28 ] 0x3
call sub_403490
mov [ esp + 0x28 ] ebx
mov ebx eax
call sub_403a40
call sub_403490
mov esi eax
lea ecx [ esi + 0x4 ]
call sub_412d3f
mov eax [ esi + 0x4c ]
xor edi edi
cmp eax edi
je r-xdata
mov ecx [ esi + 0x234 ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x258 ]
lea ecx [ esi + 0x250 ]
push edi
push eax
call sub_409ff0
mov edi [ esp + 0x14 ]
mov ecx r--data
mov eax edi
mov eax [ esi + 0x48 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov edx [ esi + 0x238 ]
cmp [ edx - 0xc ] 0x0
je r-xdata
inc ebp
cmp ebp [ esp + 0x2c ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sbb eax eax
sbb eax 0xffffffff
test dx dx
je r-xdata
mov eax [ esi + 0x54 ]
cmp eax edi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx esi
call sub_404aa0
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov eax [ ebx + ebp * 4 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_401ee0
mov [ esp + 0x24 ] 0x1
cmp [ esi + 0x258 ] 0x0
mov edi [ esp + 0x14 ]
jne r-xdata
or ebx 0xffffffff
mov [ esi + 0x220 ] 0x1
jmp r-xdata
xor eax eax
jmp r-xdata
mov dx [ eax + 0x2 ]
cmp dx [ ecx + 0x2 ]
jne r-xdata
mov [ esi + 0x4c ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x54 ] edi
xor eax eax
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea eax [ edi - 0x10 ]
mov [ esp + 0x24 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test eax eax
jne r-xdata
add eax 0x4
add ecx 0x4
test dx dx
jne r-xdata
mov dx [ eax ]
cmp dx [ ecx ]
jne r-xdata
sub_403300
push 0xffffffff
push sub_42ba58
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
push eax
mov ecx esi
call sub_403000
test eax 0xffff0000
jne r-xdata
movzx edi ax
push edi
call sub_40a542
test eax eax
je r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
push edi
push eax
mov ecx esi
call sub_401a90
jmp r-xdata
sub_4033a0
push 0xffffffff
push sub_42b32b
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x1c ]
lea ecx [ esi + 0x4 ]
call sub_412d15
xor edi edi
lea eax [ esi + 0xc ]
mov [ esp + 0x14 ] edi
push eax
mov [ esi ] r--data
call sub_401000
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x54 ] edi
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
sub_403430
push 0xffffffff
push sub_42b2fb
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0xc ]
mov [ esp + 0x14 ] 0x0
call sub_4010a0
lea ecx [ esi + 0x4 ]
mov [ esp + 0x14 ] 0xffffffff
call sub_412d23
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_403490
push 0xffffffff
push sub_42b3eb
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ rw-data ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push 0x58
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
push eax
call sub_4033a0
mov [ rw-data ] eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_403510
push 0xffffffff
push sub_42b738
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
test edi edi
jge r-xdata
mov al 0x1
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x4 ] eax
push edi
lea ecx [ esp + 0x8 ]
push r--data
push ecx
mov [ esp + 0x1c ] 0x0
call sub_401930
add esp 0xc
test esi esi
jne r-xdata
push 0x80004005
call sub_401fa0
mov eax esi
lea edx [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push eax
push esi
lea ecx [ esp + 0xc ]
call sub_402600
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x30 ]
add ecx 0x28
push esi
push eax
call sub_409ff0
mov [ esp + 0x10 ] 0xffffffff
mov eax [ esp + 0x4 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
sub eax edx
sar eax 0x1
xor al al
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_403610
push 0xffffffff
push sub_42b93b
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x28 ]
xor ebx ebx
mov [ esp + 0x20 ] ebx
call sub_40a097
xor ecx ecx
cmp eax ebx
setne cl
cmp ecx ebx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x28 ] eax
mov [ esp + 0x20 ] 0x1
mov eax [ ebp + 0x48 ]
mov edx [ esp + 0x2c ]
mov ecx [ eax ]
push 0x6
push edx
push eax
mov eax [ ecx + 0x20 ]
call eax
mov ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x2c ]
push r--data
push edx
mov edi eax
call sub_401930
mov esi [ esp + 0x34 ]
add esp 0xc
push ebp
call sub_403510
push 0xc
call sub_409958
add esp 0x4
mov [ esp + 0x14 ] eax
mov [ esp + 0x20 ] 0x2
cmp eax ebx
je r-xdata
push 0x80004005
call sub_401fa0
mov eax [ esp + 0x30 ]
mov [ esp + 0x20 ] 0x1
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x2c ]
push ecx
add eax 0xfffffff0
mov [ esp + 0x34 ] esp
mov esi esp
push eax
call sub_4026f0
add eax 0x10
add esp 0x4
mov ecx ebx
mov [ esi ] eax
call sub_402eb0
lea esi [ ebp + 0x14 ]
mov ebp [ esi + 0x8 ]
test ebp ebp
jge r-xdata
push eax
call sub_402de0
mov ebx eax
lea edi [ ebp + 0x1 ]
call sub_401600
mov ecx [ esi + 0x4 ]
mov [ esp + 0x20 ] 0x0
mov eax [ esp + 0x28 ]
add eax 0xfffffff0
mov [ ecx + ebp * 4 ] ebx
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
call sub_40a39e
mov [ esp + 0x20 ] 0xffffffff
mov eax [ esp + 0x2c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0xc
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_403780
push 0xffffffff
push sub_42b7d0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x1c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x18 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
mov ebp [ esp + 0x40 ]
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x38 ] 0x0
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea ebx [ eax + 0x10 ]
mov [ esp + 0x18 ] ebx
push 0xffffffff
push 0x0
lea ecx [ ebp + 0x28 ]
mov [ esp + 0x40 ] 0x1
call sub_409ba7
mov ecx [ esp + 0x44 ]
lea edx [ esp + 0x1c ]
push edx
push r--data
mov [ ebp + 0x40 ] ecx
call [ CLSIDFromProgID@IAT ]
push ebp
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
push 0x80004005
call sub_401fa0
lea ebx [ ebp + 0x48 ]
push ebx
push r--data
push 0x1
push 0x0
lea ecx [ esp + 0x2c ]
push ecx
call [ CoCreateInstance@IAT ]
push ebp
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
mov [ esp + 0x38 ] al
lea eax [ ebx - 0x10 ]
jmp r-xdata
mov eax [ ebx ]
mov edx [ eax ]
lea ecx [ ebp + 0x4c ]
push ecx
push r--data
push eax
mov eax [ edx ]
call eax
push ebp
mov esi r--data
mov edi eax
call sub_403510
test al al
mov eax [ ebx ]
mov ecx [ eax ]
jne r-xdata
mov [ esp + 0x38 ] al
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jmp r-xdata
or edx 0xffffffff
lea ecx [ eax + 0xc ]
[ ecx ] edx
dec edx
test edx edx
lea edx [ ebp + 0xc ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
push ebp
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ ebp + 0x4c ] 0x0
mov [ ebx ] 0x0
mov [ ebp + 0x54 ] 0x0
jmp r-xdata
jg r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ebp + 0x4c ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
call edx
push ebp
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x4c ]
mov ecx [ eax ]
jmp r-xdata
mov [ esp + 0x38 ] 0x0
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x18 ]
xor ecx esp
call sub_419730
add esp 0x28
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor edi edi
xor esi esi
cmp [ ebp + 0x1c ] edi
mov [ ebp + 0x54 ] edi
jle r-xdata
mov eax [ ebx ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebp + 0x4c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
lea ecx [ esp + 0x18 ]
mov [ ebp + 0x4c ] 0x0
mov [ ebx ] 0x0
mov [ ebp + 0x54 ] 0x0
call sub_402040
lea ecx [ esp + 0x14 ]
call sub_402040
jmp r-xdata
mov eax [ ebp + 0x18 ]
cmp eax edi
je r-xdata
cmp esi edi
jl r-xdata
mov [ ebp + 0x20 ] edi
mov [ ebp + 0x1c ] edi
mov [ ebp + 0x3c ] edi
push eax
call sub_409992
add esp 0x4
mov [ ebp + 0x18 ] edi
call sub_40a39e
cmp esi [ ebp + 0x1c ]
jge r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ eax + esi * 4 ]
lea eax [ eax + esi * 4 ]
cmp ecx edi
je r-xdata
inc esi
cmp esi [ ebp + 0x1c ]
jl r-xdata
mov edx [ ecx ]
mov eax [ edx ]
push 0x1
call eax
sub_403a40
push 0xffffffff
push sub_42b798
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x30 ]
mov [ fs : 0x0 ] eax
xor ebp ebp
mov [ esp + 0x38 ] ebp
mov eax [ esp + 0x40 ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
cmp eax ebp
jne r-xdata
mov ecx [ ebx + 0x4c ]
mov edx [ ecx ]
lea esi [ esp + 0x10 ]
push esi
push ebp
push ebp
push ebp
push ebp
push ebp
push ebp
push ebp
push eax
mov eax [ edx + 0x14 ]
push ecx
call eax
push ebx
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
call sub_409420
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x28 ]
lea ebp [ ebx + 0x54 ]
push ebp
push 0x0
push eax
call edx
push ebx
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x40 ]
add eax 0xfffffff0
mov [ ebx + 0x4c ] ebp
mov [ ebx + 0x48 ] ebp
mov [ ebx + 0x54 ] ebp
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ ebp ]
push 0x1
push ecx
lea ecx [ ebx + 0x4 ]
call sub_412fd0
mov eax [ ebx + 0x48 ]
mov edx [ eax ]
push 0x2
push eax
mov eax [ edx + 0x14 ]
call eax
push ebx
mov esi r--data
mov edi eax
call sub_403510
test al al
jne r-xdata
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x40 ]
add eax 0xfffffff0
mov [ ebp ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x2c
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x40 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov eax [ ebx + 0x48 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
xor eax eax
mov [ ebx + 0x4c ] eax
mov [ ebx + 0x48 ] eax
mov [ ebp ] eax
mov [ esp + 0x38 ] 0xffffffff
mov eax [ esp + 0x40 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x2c
retn 0x4
mov eax 0x1
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x2c
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ esp + 0x30 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
add esp 0x2c
retn 0x4
sub_403c50
push 0xffffffff
push sub_42b4e8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x14 ] 0x0
cmp [ esi + 0x54 ] 0x0
jne r-xdata
mov eax [ esp + 0x1c ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov edx [ esp + 0x20 ]
push edx
push 0x800
push 0x1
mov [ esp + 0x14 ] eax
mov eax [ esi + 0x54 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push r--data
push eax
mov eax [ ecx + 0x14 ]
call eax
mov esi eax
neg esi
sbb esi esi
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
inc esi
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
xor eax eax
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_403d70
push 0xffffffff
push sub_42b388
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
mov [ esp + 0x10 ] 0x0
mov ecx esi
mov [ esi ] r--data
call sub_4137e1
mov ecx esi
call sub_41471b
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_403e00
push 0xffffffff
push sub_42b183
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
mov [ esp + 0x10 ] 0x0
lea ecx [ esi + 0x20 ]
mov [ esi ] r--data
call sub_409a08
mov ecx esi
mov [ esp + 0x10 ] 0x1
call sub_4137e1
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_403e80
push 0xffffffff
push sub_42b148
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ esp + 0x14 ] 0x0
call sub_409d81
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_410cff
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_403f00
push 0xffffffff
push sub_42b183
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
mov [ esp + 0x10 ] 0x0
lea ecx [ esi + 0x20 ]
mov [ esi ] r--data
call sub_409a08
mov ecx esi
mov [ esp + 0x10 ] 0x1
call sub_4137e1
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_403f70
push 0xffffffff
push sub_42b148
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ esp + 0x14 ] 0x0
call sub_409d81
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_410cff
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_403ff0
push 0xffffffff
push sub_42b183
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
mov [ esp + 0x10 ] 0x0
lea ecx [ esi + 0x20 ]
mov [ esi ] r--data
call sub_409a08
mov ecx esi
mov [ esp + 0x10 ] 0x1
call sub_4137e1
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
sub_404060
push 0xffffffff
push sub_42b148
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x20 ]
mov [ esp + 0x14 ] 0x0
call sub_409d81
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_410cff
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
sub_4040e0
push 0xffffffff
push sub_42b5be
mov eax [ fs : 0x0 ]
push eax
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x18 ]
mov ecx esi
call sub_410cd7
mov [ esp + 0x10 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x220 ] 0x0
mov [ esi + 0x224 ] 0x1
mov [ esi + 0x22c ] 0x0
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi + 0x230 ] eax
mov [ esp + 0x10 ] 0x1
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi + 0x234 ] eax
mov [ esp + 0x10 ] 0x2
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi + 0x238 ] eax
lea ecx [ esi + 0x23c ]
mov [ esp + 0x10 ] 0x3
call sub_4149d9
lea ecx [ esi + 0x250 ]
mov [ esp + 0x10 ] 0x4
call sub_409a08
mov ecx esi
mov [ esp + 0x10 ] 0x5
call sub_4137e1
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0xc
retn 0x4
push 0x80004005
call sub_401fa0
sub_404230
push 0xffffffff
push sub_42b4c0
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x8 ] esi
mov [ esi ] r--data
lea ecx [ esi + 0x250 ]
mov [ esp + 0x14 ] 0x4
call sub_409d81
lea ecx [ esi + 0x23c ]
mov [ esp + 0x14 ] 0x3
call sub_4149f0
mov [ esp + 0x14 ] 0x2
mov eax [ esi + 0x238 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x14 ] 0x1
mov eax [ esi + 0x234 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x14 ] 0x0
mov eax [ esi + 0x230 ]
sub eax 0x10
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx esi
mov [ esp + 0x14 ] 0xffffffff
call sub_410cff
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_404350
sub esp 0x20
mov ecx [ esp + 0x24 ]
push ebp
lea eax [ esp + 0x4 ]
push eax
push 0x0
push ecx
push sub_404340
push 0x0
push 0x0
call [ CreateThread@IAT ]
mov ebp [ MsgWaitForMultipleObjects@IAT ]
push 0x8
push 0xffffffff
push 0x0
lea edx [ esp + 0x34 ]
push edx
push 0x1
mov [ esp + 0x3c ] eax
call ebp
test eax eax
je r-xdata
pop ebp
add esp 0x20
retn 0x4
push ebx
mov ebx [ DispatchMessageW@IAT ]
push esi
mov esi [ PeekMessageW@IAT ]
push edi
mov edi [ TranslateMessage@IAT ]
push 0x8
push 0xffffffff
push 0x0
lea ecx [ esp + 0x40 ]
push ecx
push 0x1
call ebp
test eax eax
jne r-xdata
lea ecx [ esp + 0x14 ]
push ecx
call edi
lea edx [ esp + 0x14 ]
push edx
call ebx
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push eax
call esi
test eax eax
jne r-xdata
push 0x1
push 0x0
push 0x0
push 0x0
lea eax [ esp + 0x24 ]
push eax
call esi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
sub_404400
push 0xffffffff
push sub_42b2ca
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x10 ] eax
mov [ esp + 0x1c ] 0x0
test eax eax
je r-xdata
xor ebx ebx
push eax
call sub_403e00
mov ebx eax
jmp r-xdata
push 0x1
mov ecx ebx
call sub_4131cb
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
add esp 0x10
retn
mov edi edi
xor esi esi
mov [ esp + 0x1c ] 0xffffffff
cmp [ edi + 0x258 ] esi
jle r-xdata
call sub_40a39e
cmp esi [ edi + 0x258 ]
jge r-xdata
mov eax [ edi + 0x254 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x28 ]
lea ecx [ ebx + 0x20 ]
push edx
push eax
call sub_409e7a
inc esi
cmp esi [ edi + 0x258 ]
jl r-xdata
test esi esi
jl r-xdata
sub_4044b0
push 0xffffffff
push sub_42b29a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
call sub_409958
add esp 0x4
mov [ esp + 0xc ] eax
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
xor esi esi
push eax
call sub_403d70
mov esi eax
jmp r-xdata
mov [ esp + 0x18 ] 0xffffffff
mov eax [ edi + 0x228 ]
push 0xfffffff6
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] 0x0
call [ GetStdHandle@IAT ]
push 0x1
mov ecx esi
mov [ esi + 0x20 ] eax
call sub_4131cb
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
sub_404540
push 0xffffffff
push sub_42b29a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
call sub_409958
add esp 0x4
mov [ esp + 0xc ] eax
xor esi esi
mov [ esp + 0x18 ] esi
cmp eax esi
je r-xdata
mov [ esp + 0x18 ] 0xffffffff
mov eax [ edi + 0x228 ]
push 0xfffffff5
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] 0x1
call [ GetStdHandle@IAT ]
push 0x1
mov ecx esi
mov [ esi + 0x20 ] eax
call sub_4131cb
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
push eax
call sub_403d70
mov esi eax
sub_4045d0
push 0xffffffff
push sub_42b29a
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
push 0x2c
call sub_409958
add esp 0x4
mov [ esp + 0xc ] eax
xor esi esi
mov [ esp + 0x18 ] esi
cmp eax esi
je r-xdata
mov [ esp + 0x18 ] 0xffffffff
mov eax [ edi + 0x228 ]
push 0xfffffff4
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] 0x1
call [ GetStdHandle@IAT ]
push 0x1
mov ecx esi
mov [ esi + 0x20 ] eax
call sub_4131cb
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn
push eax
call sub_403d70
mov esi eax
sub_404660
sub esp 0x8
push edi
xor edi edi
cmp [ ecx + 0x244 ] edi
mov [ esp + 0x8 ] ecx
jle r-xdata
pop edi
add esp 0x8
retn 0x4
push ebx
mov ebx [ esp + 0x14 ]
push ebp
lea ebp [ ecx + 0x23c ]
push esi
call sub_40a39e
cmp edi [ ebp + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x4 ]
mov esi [ eax + edi * 4 ]
cmp [ esi + 0x24 ] ebx
jne r-xdata
mov ecx [ esp + 0x14 ]
inc edi
cmp edi [ ecx + 0x244 ]
jl r-xdata
push 0x1
push edi
mov ecx ebp
call sub_414c00
mov ecx [ ebx ]
mov eax [ ecx ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push ebx
call eax
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x10 ]
push edx
lea edx [ esi + 0xc ]
push edx
push eax
mov eax [ ecx + 0x10 ]
call eax
mov eax [ esp + 0x10 ]
mov edx [ esi + 0x1c ]
mov ecx [ eax ]
push edx
push eax
mov eax [ ecx + 0x18 ]
call eax
test eax eax
jne r-xdata
test edi edi
jl r-xdata
pop esi
pop ebp
pop ebx
mov eax [ esi + 0x20 ]
sub eax 0x10
mov [ esi ] r--data
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push esi
call sub_409992
add esp 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_404740
mov eax [ esi ]
mov edx [ eax + 0xc ]
sub esp 0xc
push ebx
push ebp
mov ebp [ esp + 0x18 ]
push edi
lea ecx [ esp + 0x1c ]
push ecx
push esi
mov [ ebp ] esi
call edx
mov eax [ esp + 0x1c ]
movzx ebx [ eax + 0x30 ]
xor ecx ecx
xor edi edi
cmp cx bx
jae r-xdata
mov edx [ esp + 0x1c ]
mov ecx [ esi ]
mov eax [ ecx + 0x4c ]
push edx
push esi
call eax
pop edi
pop ebp
pop ebx
add esp 0xc
retn 0x4
jmp r-xdata
mov edx [ esi ]
mov edx [ edx + 0x24 ]
lea eax [ esp + 0xc ]
movzx ecx di
push eax
push ecx
push esi
call edx
mov eax [ esp + 0xc ]
and eax 0x3
cmp al 0x3
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x20 ]
lea edx [ esp + 0x10 ]
movzx eax di
push edx
push eax
push esi
call ecx
mov ecx [ esp + 0x10 ]
mov edx [ esi ]
mov edx [ edx + 0x38 ]
lea eax [ esp + 0x14 ]
push eax
push ecx
push esi
call edx
mov eax [ esp + 0x14 ]
mov [ ebp ] eax
inc edi
cmp di bx
jb r-xdata
jmp r-xdata
sub_4047e0
push ebp
mov ebp [ esp + 0x8 ]
push esi
push edi
push 0x30
call sub_409958
add esp 0x4
test eax eax
je r-xdata
xor esi esi
mov esi eax
call sub_4020d0
mov esi eax
jmp r-xdata
mov eax ebx
lea edi [ eax + 0x2 ]
lea ecx [ ecx ]
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x244 ]
lea ecx [ ebp + 0x23c ]
push esi
push eax
call sub_414b26
mov ecx [ esi ]
mov edx [ ecx + 0x4 ]
push esi
call edx
lea ecx [ esi + 0x20 ]
test ebx ebx
jne r-xdata
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax edi
sar eax 0x1
push eax
push ebx
call sub_401d90
mov eax [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
mov [ esi + 0x24 ] eax
mov [ esi + 0x28 ] edi
mov ecx [ ebp + 0x224 ]
push eax
mov eax ebx
mov [ esi + 0x2c ] ecx
call sub_4024b0
pop edi
pop esi
pop ebp
retn 0xc
sub_404870
sub esp 0x8
push ebx
push edi
mov edi [ esp + 0x14 ]
mov eax [ edi ]
mov edx [ eax ]
mov ebx ecx
lea ecx [ esp + 0x14 ]
push ecx
push r--data
push edi
call edx
test eax eax
jne r-xdata
push 0x0
push edi
push ebx
mov ebx [ esp + 0x24 ]
call sub_4047e0
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x8 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jl r-xdata
pop edi
pop ebx
add esp 0x8
retn 0x8
push esi
mov esi [ esp + 0xc ]
lea ecx [ esp + 0x10 ]
push ecx
call sub_404740
mov edx [ esp + 0x10 ]
push edx
push edi
push ebx
mov ebx [ esp + 0x28 ]
call sub_4047e0
pop esi
pop edi
pop ebx
add esp 0x8
retn 0x8
sub_4048f0
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
lea ecx [ esp + 0x10 ]
push ecx
push r--data
push 0x0
push eax
mov [ esp + 0x20 ] 0x0
call [ CoGetObject@IAT ]
mov ebx [ VariantInit@IAT ]
lea edx [ esp + 0x18 ]
push edx
call ebx
push 0x8
push 0x0
push esi
mov esi [ VariantChangeType@IAT ]
lea eax [ esp + 0x24 ]
push eax
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x28 ]
push eax
call ebx
push 0x8
push 0x0
push edi
lea ecx [ esp + 0x34 ]
push ecx
call esi
mov eax [ esp + 0x10 ]
lea ecx [ esp + 0x14 ]
push ecx
mov [ esp + 0x18 ] 0x0
mov edx [ eax ]
mov edx [ edx ]
push r--data
push eax
call edx
test eax eax
jge r-xdata
mov edx [ esp + 0x20 ]
lea ecx [ esp + 0x3c ]
push ecx
push edx
call [ CLSIDFromProgID@IAT ]
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_419730
mov esp ebp
pop ebp
retn 0xc
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_419730
mov esp ebp
pop ebp
retn 0xc
sub_4049d0
push 0xffffffff
push sub_42b6c8
mov eax [ fs : 0x0 ]
push eax
sub esp 0xc
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
mov esi [ GetLastError@IAT ]
push 0x0
push 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x400
call esi
push eax
push 0x0
push 0x1100
call [ FormatMessageW@IAT ]
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0xc ] eax
mov [ esp + 0x20 ] 0x0
mov ecx [ esp + 0x10 ]
push ecx
call esi
push eax
lea edx [ esp + 0x14 ]
push r--data
push edx
call sub_401930
mov eax [ esp + 0x1c ]
add esp 0xc
add eax 0xfffffff0
mov [ esp + 0x18 ] esp
mov edi esp
push eax
call sub_4026f0
mov ecx [ esp + 0x30 ]
add esp 0x4
add eax 0x10
push ecx
mov [ edi ] eax
call sub_405ea0
mov edx [ esp + 0x10 ]
push edx
call [ LocalFree@IAT ]
call esi
push eax
call [ ExitProcess@IAT ]
int3
push 0x80004005
call sub_401fa0
sub_404aa0
push 0xffffffff
push sub_42b8e7
mov eax [ fs : 0x0 ]
push eax
sub esp 0x274
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x270 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x288 ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov eax [ edi + 0x234 ]
lea esi [ edi + 0x234 ]
sub eax 0x10
push eax
call sub_4026f0
add eax 0x10
add esp 0x4
mov [ esp + 0x18 ] eax
mov [ esp + 0x290 ] 0x0
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x1c ] eax
mov ebx 0x1
mov [ esp + 0x290 ] bl
mov eax [ esi ]
mov ecx [ eax - 0xc ]
test ecx ecx
jle r-xdata
push 0x80004005
call sub_401fa0
push 0x104
lea ecx [ esp + 0x80 ]
push ecx
push 0x0
call [ GetModuleFileNameW@IAT ]
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
push 0x5c
push eax
call sub_41a0c4
add esp 0x8
test eax eax
je r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
push ebx
push r--data
lea ecx [ esp + 0x1c ]
mov [ esp + 0x298 ] 0x4
call sub_402600
lea eax [ esp + 0x7c ]
lea edx [ eax + 0x2 ]
push 0x80004005
call sub_401fa0
sub eax [ esi ]
sar eax 0x1
mov ebp eax
js r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea ecx [ esp + 0x80 ]
push ecx
lea ecx [ esp + 0x1c ]
call sub_402600
push 0x9
push r--data
lea ecx [ esp + 0x1c ]
call sub_402600
xor esi esi
cmp [ edi + 0x258 ] esi
jle r-xdata
lea ecx [ ebp + 0x1 ]
push ecx
lea edx [ esp + 0x18 ]
push edx
mov ecx esi
call sub_408dd0
push eax
lea ecx [ esp + 0x1c ]
mov [ esp + 0x294 ] 0x2
call sub_402f40
mov [ esp + 0x290 ] bl
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
xor eax eax
push 0x40
push eax
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] eax
mov [ esp + 0x34 ] eax
lea eax [ esp + 0x44 ]
push eax
mov [ esp + 0x2c ] 0x0
call sub_41ae80
mov esi [ esp + 0x20 ]
mov eax [ edi + 0x238 ]
mov ebp [ esp + 0x28 ]
add esp 0xc
lea ecx [ esp + 0x20 ]
push ecx
lea edx [ esp + 0x3c ]
push edx
push 0x0
push 0x0
push 0x400
push esi
push 0x0
push ebx
push eax
mov eax [ esp + 0x3c ]
push ebp
push eax
mov [ esp + 0x64 ] 0x44
call [ CreateProcessWithLogonW@IAT ]
test eax eax
jne r-xdata
push 0x2
push r--data
lea ecx [ esp + 0x1c ]
call sub_402600
test esi esi
jl r-xdata
push ebp
lea ecx [ esp + 0x34 ]
push ecx
mov ecx esi
call sub_408e80
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x294 ] 0x3
call sub_402f40
mov [ esp + 0x290 ] bl
mov eax [ esp + 0x30 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x20 ]
push 0xffffffff
push ecx
call [ WaitForSingleObject@IAT ]
mov eax [ esp + 0x20 ]
lea edx [ esp + 0x34 ]
push edx
push eax
call [ GetExitCodeProcess@IAT ]
mov ecx [ esp + 0x20 ]
mov edi [ CloseHandle@IAT ]
push ecx
call edi
mov edx [ esp + 0x24 ]
push edx
call edi
mov edi [ esp + 0x34 ]
lea eax [ esi - 0x10 ]
mov [ esp + 0x290 ] bl
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push edi
call sub_4049d0
call sub_40a39e
cmp esi [ edi + 0x258 ]
jge r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea eax [ ebp - 0x10 ]
mov [ esp + 0x290 ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ edi + 0x254 ]
lea eax [ edx + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax - 0xc ]
push ecx
push eax
lea ecx [ esp + 0x1c ]
call sub_402600
push ebx
push r--data
lea ecx [ esp + 0x1c ]
call sub_402600
add esi ebx
cmp esi [ edi + 0x258 ]
jl r-xdata
mov [ esp + 0x290 ] 0xffffffff
mov eax [ esp + 0x18 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax edi
mov ecx [ esp + 0x288 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x270 ]
xor ecx esp
call sub_419730
add esp 0x280
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_404e30
push ebp
mov ebp esp
and esp 0xfffffff8
push 0xffffffff
push sub_42ba13
mov eax [ fs : 0x0 ]
push eax
sub esp 0xb0
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0xa8 ] eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc0 ]
mov [ fs : 0x0 ] eax
mov esi ecx
lea ecx [ esi + 0x230 ]
mov [ esp + 0x10 ] esi
call sub_401b90
push 0x2
push r--data
push 0x0
call [ FindResourceW@IAT ]
mov edi eax
test edi edi
je r-xdata
mov ecx [ esp + 0xc0 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov ecx [ esp + 0xa8 ]
xor ecx esp
call sub_419730
mov esp ebp
pop ebp
retn
push edi
push 0x0
call [ LoadResource@IAT ]
test eax eax
je r-xdata
push eax
call [ LockResource@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
push edi
push 0x0
call [ SizeofResource@IAT ]
lea edi [ ebx + 0x28 ]
push 0x400
lea ecx [ esp + 0x70 ]
lea ebx [ eax - 0x28 ]
call sub_414c79
push 0x0
push ebx
push edi
lea ecx [ esp + 0x78 ]
mov [ esp + 0xd4 ] 0x0
call sub_414cae
push 0x0
push 0x1000
push 0x1
lea eax [ esp + 0x78 ]
push eax
lea ecx [ esp + 0x24 ]
call sub_410670
push 0x1335ca
mov [ esp + 0xcc ] 0x1
call sub_419fc0
add esp 0x4
mov [ esp + 0xb4 ] 0x0
xor edi edi
cmp dl 0x34
jae r-xdata
add dl 0x41
jmp r-xdata
cmp dl cl
jae r-xdata
add dl 0x47
jmp r-xdata
mov [ esp + edi + 0x94 ] dl
inc edi
cmp edi 0x20
jl r-xdata
sub dl 0x4
call sub_419fd2
cdq
mov ecx 0x3e
idiv ecx
cmp dl 0x1a
jae r-xdata
test [ esp + 0x2c ] 0x1
jne r-xdata
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov edx [ esp + 0x28 ]
push edx
push 0x4
call sub_4108a1
add eax 0x4
test [ esp + 0x2c ] 0x1
mov [ esp + 0x3c ] eax
jne r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
push 0x4
call sub_4108a1
add eax 0x4
test [ esp + 0x2c ] 0x1
mov [ esp + 0x3c ] eax
jne r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
push 0x4
call sub_4108a1
mov edx [ eax ]
add eax 0x4
test [ esp + 0x2c ] 0x1
mov [ esp + 0x68 ] edx
mov [ esp + 0x3c ] eax
jne r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
push 0x4
call sub_4108a1
mov edx [ eax ]
add eax 0x4
test [ esp + 0x2c ] 0x1
mov [ esp + 0x60 ] edx
mov [ esp + 0x3c ] eax
jne r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov ecx [ esp + 0x40 ]
mov eax [ esp + 0x3c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
push 0x4
call sub_4108a1
mov edi [ eax ]
add eax 0x4
push edi
mov [ esp + 0x40 ] eax
call sub_409987
add esp 0x4
mov ebx eax
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_40fe07
lea eax [ esp + 0x94 ]
push eax
push ebx
mov eax edi
call sub_408960
mov edi eax
test edi edi
je r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov eax [ esp + 0x3c ]
mov esi [ esp + 0x10 ]
push eax
push edi
lea ecx [ esi + 0x230 ]
call sub_401d90
push edi
call sub_409992
push ebx
call sub_409992
add esp 0x8
test [ esp + 0x2c ] 0x1
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov ecx [ esp + 0x28 ]
push ecx
push 0x4
call sub_4108a1
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edi [ eax ]
add eax 0x4
push edi
mov [ esp + 0x40 ] eax
call sub_409987
add esp 0x4
mov ebx eax
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_40fe07
lea eax [ esp + 0x94 ]
push eax
push ebx
mov eax edi
call sub_408960
mov edi eax
lea ecx [ esi + 0x234 ]
test edi edi
je r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_401d90
push edi
call sub_409992
push ebx
call sub_409992
add esp 0x8
test [ esp + 0x2c ] 0x1
jne r-xdata
mov eax edi
lea edx [ eax + 0x2 ]
mov [ esp + 0x64 ] edx
nop
mov eax [ esp + 0x3c ]
mov ecx [ esp + 0x40 ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
mov eax [ esp + 0x28 ]
push eax
push 0x4
call sub_4108a1
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax [ esp + 0x64 ]
sar eax 0x1
mov edi [ eax ]
add eax 0x4
push edi
mov [ esp + 0x40 ] eax
call sub_409987
add esp 0x4
mov ebx eax
push edi
push ebx
lea ecx [ esp + 0x1c ]
call sub_40fe07
lea eax [ esp + 0x94 ]
push eax
push ebx
mov eax edi
call sub_408960
mov ecx esi
mov edi eax
add ecx 0x238
test edi edi
je r-xdata
sub eax ecx
add eax 0x4
push eax
lea ecx [ esp + 0x18 ]
call sub_40ffb0
mov eax [ esp + 0x3c ]
push eax
push edi
call sub_401d90
push edi
call sub_409992
push ebx
call sub_409992
mov eax [ esp + 0x18 ]
mov edx [ esp + 0x68 ]
xor ecx ecx
add esp 0x8
cmp [ esp + 0x68 ] ecx
mov [ eax + 0x228 ] edx
sete cl
mov [ eax + 0x224 ] ecx
lea ecx [ esp + 0x14 ]
call sub_4104b9
lea ecx [ esp + 0x14 ]
mov [ esp + 0xc8 ] 0x0
call sub_410632
lea ecx [ esp + 0x6c ]
mov [ esp + 0xc8 ] 0xffffffff
call sub_41500f
mov eax edi
lea esi [ eax + 0x2 ]
mov edi edi
mov dx [ eax ]
add eax 0x2
test dx dx
jne r-xdata
sub eax esi
sar eax 0x1
sub_4052a0
push 0xffffffff
push sub_42bc2b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x560
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x558 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x574 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x584 ]
mov esi edx
mov [ esp + 0x3c ] ecx
xor edx edx
push r--data
lea ecx [ esp + 0x18 ]
mov [ esp + 0x44 ] eax
mov [ esp + 0x158 ] dx
call sub_403300
mov [ esp + 0x57c ] 0x0
test esi esi
jne r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
lea esp [ esp ]
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_402600
mov ecx [ esp + 0x14 ]
mov ebx [ RegOpenKeyExW@IAT ]
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push 0x0
push ecx
push 0x80000000
call ebx
test eax eax
je r-xdata
mov esi [ RegEnumKeyExW@IAT ]
lea ecx [ esp + 0x4c ]
push ecx
mov ecx [ esp + 0x1c ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x3c ]
push edx
lea eax [ esp + 0x68 ]
push eax
push 0x0
mov edi 0x40
push ecx
mov [ esp + 0x54 ] 0x80
mov [ esp + 0x4c ] edi
mov [ esp + 0x50 ] 0x0
call esi
test eax eax
jne r-xdata
push r--data
lea ecx [ esp + 0x18 ]
call sub_403000
test esi esi
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call [ RegCloseKey@IAT ]
mov [ esp + 0x57c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
mov ecx [ esp + 0x18 ]
lea edx [ esp + 0x20 ]
push edx
push 0x20019
push 0x0
lea eax [ esp + 0x60 ]
push eax
push ecx
call ebx
test eax eax
jne r-xdata
mov eax esi
lea edx [ eax + 0x2 ]
xor eax eax
jmp r-xdata
xor eax eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x30 ]
lea ecx [ esp + 0x4c ]
push ecx
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x3c ]
push edx
mov edx [ esp + 0x2c ]
lea ecx [ esp + 0x68 ]
inc eax
push ecx
push eax
push edx
mov [ esp + 0x50 ] eax
mov [ esp + 0x4c ] edi
call esi
test eax eax
je r-xdata
xor ebp ebp
lea edx [ esp + 0x44 ]
push edx
mov edx [ esp + 0x24 ]
push ebp
push ebp
push ebp
lea eax [ esp + 0x38 ]
push eax
lea ecx [ esp + 0xe8 ]
push ecx
push ebp
push edx
mov [ esp + 0x48 ] edi
call esi
test eax eax
jne r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
push esi
lea ecx [ esp + 0x1c ]
call sub_402600
mov eax [ esp + 0x14 ]
lea edx [ esp + 0x18 ]
push edx
push 0x20019
push 0x0
push eax
push 0x80000000
call ebx
test eax eax
je r-xdata
mov edx [ esp + 0x20 ]
push edx
call [ RegCloseKey@IAT ]
mov edx [ esp + 0x20 ]
lea eax [ esp + 0x24 ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0xe0 ]
push ecx
push edx
call ebx
test eax eax
jne r-xdata
mov [ esp + 0x57c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jmp r-xdata
lea ecx [ esp + 0x44 ]
push ecx
mov ecx [ esp + 0x24 ]
push 0x0
push 0x0
push 0x0
lea edx [ esp + 0x38 ]
push edx
lea eax [ esp + 0xe8 ]
push eax
inc ebp
push ebp
push ecx
mov [ esp + 0x48 ] edi
call esi
test eax eax
je r-xdata
mov ecx [ esp + 0x24 ]
lea eax [ esp + 0x1c ]
push eax
push 0x20019
push 0x0
push r--data
push ecx
call ebx
test eax eax
je r-xdata
jg r-xdata
lea ecx [ esp + 0x34 ]
push ecx
mov ecx [ esp + 0x20 ]
lea edx [ esp + 0x158 ]
push edx
lea eax [ esp + 0x40 ]
push eax
push 0x0
push 0x0
push ecx
mov [ esp + 0x4c ] 0x105
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x24 ]
lea edx [ esp + 0x1c ]
push edx
push 0x20019
push 0x0
push r--data
push eax
call ebx
test eax eax
jne r-xdata
mov edx [ esp + 0x1c ]
push edx
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x38 ]
cmp eax 0x1
je r-xdata
mov eax [ esp + 0x24 ]
push eax
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x3c ]
mov edi [ esp + 0x40 ]
push eax
lea ecx [ esp + 0x158 ]
push ecx
call sub_405680
mov esi eax
test esi esi
jg r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x1c ]
push eax
call [ RegCloseKey@IAT ]
mov [ esp + 0x57c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov esi [ RegEnumKeyExW@IAT ]
mov edi 0x40
push 0x104
lea edx [ esp + 0x360 ]
push edx
lea eax [ esp + 0x15c ]
push eax
call [ ExpandEnvironmentStringsW@IAT ]
test eax eax
je r-xdata
mov eax esi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x35c ]
push ecx
lea edx [ esp + 0x158 ]
push 0x104
push edx
call sub_419ff4
add esp 0xc
mov ecx [ esp + 0x574 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x558 ]
xor ecx esp
call sub_419730
add esp 0x56c
retn 0x4
sub_405680
push 0xffffffff
push sub_42bbf1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x214 ] eax
push ebx
push ebp
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x228 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x238 ]
mov ebp [ esp + 0x23c ]
push eax
lea ecx [ esp + 0x14 ]
call sub_401ee0
lea ebx [ esp + 0x10 ]
mov [ esp + 0x230 ] 0x0
call sub_409120
mov ebx eax
call sub_4091a0
push 0xb
lea eax [ esp + 0x18 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_408e00
mov eax [ eax ]
push r--data
push eax
call sub_419d7f
add esp 0x8
test eax eax
mov [ esp + 0x230 ] 0x0
mov eax [ esp + 0x14 ]
sete bl
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test bl bl
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ esp + 0x10 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x2
push edx
call [ LoadTypeLibEx@IAT ]
test eax eax
jl r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx - 0xc ]
add eax 0xfffffff5
push eax
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x18 ]
call sub_408e80
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x234 ] 0x2
call sub_402f40
mov [ esp + 0x230 ] 0x0
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x230 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
xor esi esi
call edx
test eax eax
jbe r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
xor eax eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ebx [ StringFromGUID2@IAT ]
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0xc ]
push eax
inc esi
call edx
cmp esi eax
jb r-xdata
cmp [ esp + 0x1c ] 0x5
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push esi
push eax
mov eax [ ecx + 0x14 ]
call eax
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
lea edx [ esp + 0x14 ]
push edx
push esi
push eax
mov eax [ ecx + 0x10 ]
call eax
test eax eax
jl r-xdata
mov eax [ esp + 0x14 ]
mov ecx [ eax ]
lea edx [ esp + 0x20 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
mov edx [ esp + 0x20 ]
push 0x100
lea ecx [ esp + 0x28 ]
push ecx
push edx
call ebx
lea eax [ esp + 0x24 ]
push edi
push eax
call sub_419d7f
add esp 0x8
test eax eax
je r-xdata
mov esi [ esp + 0x14 ]
push ebp
call sub_404740
mov eax [ esp + 0x18 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov [ esp + 0x230 ] 0xffffffff
mov eax [ esp + 0x10 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ esp + 0x228 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x214 ]
xor ecx esp
call sub_419730
add esp 0x224
retn 0x8
sub_4058f0
push 0xffffffff
push sub_42bcdb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x744
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x740 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x758 ]
mov [ fs : 0x0 ] eax
mov eax [ esp + 0x768 ]
mov ebp [ esp + 0x76c ]
push eax
lea ecx [ esp + 0x20 ]
mov [ esp + 0x30 ] ebp
call sub_401ee0
xor eax eax
mov [ esp + 0x760 ] 0x0
mov [ esp + 0x34 ] ax
mov eax [ esp + 0x1c ]
cmp [ eax - 0xc ] 0x0
jne r-xdata
lea esi [ esp + 0x1c ]
call sub_408a20
mov edx [ esp + 0x1c ]
mov esi [ RegOpenKeyExW@IAT ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x20019
push 0x0
push edx
push 0x80000000
call esi
mov edi 0x80
test eax eax
jne r-xdata
add eax 0xfffffff0
mov [ esp + 0x760 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jmp r-xdata
mov ebx [ RegCloseKey@IAT ]
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x448 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
mov [ esp + 0x38 ] edi
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
jg r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jne r-xdata
mov eax [ esp + 0x18 ]
mov ebx [ RegCloseKey@IAT ]
push eax
call ebx
jmp r-xdata
cmp [ esp + 0x24 ] 0x1
jne r-xdata
xor eax eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push r--data
lea ecx [ esp + 0x138 ]
push edi
push ecx
call sub_419ff4
add esp 0xc
lea edx [ esp + 0x34 ]
push edx
lea eax [ esp + 0x138 ]
push edi
push eax
call sub_41a191
add esp 0xc
lea ecx [ esp + 0x28 ]
push ecx
push 0x20019
push 0x0
lea edx [ esp + 0x140 ]
push edx
push 0x80000000
call esi
test eax eax
je r-xdata
mov [ esp + 0x760 ] 0xffffffff
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jmp r-xdata
lea eax [ esp + 0x34 ]
lea edx [ eax + 0x2 ]
lea ecx [ esp + 0x444 ]
push ecx
lea edx [ esp + 0x38 ]
push 0x40
push edx
call sub_419ff4
add esp 0xc
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x20019
push 0x0
push r--data
push edx
call esi
test eax eax
jne r-xdata
push r--data
lea eax [ esp + 0x138 ]
push edi
push eax
call sub_419ff4
add esp 0xc
lea ecx [ esp + 0x34 ]
push ecx
lea edx [ esp + 0x138 ]
push edi
push edx
call sub_41a191
add esp 0xc
lea eax [ esp + 0x28 ]
push eax
push 0x20019
push 0x0
lea ecx [ esp + 0x140 ]
push ecx
push 0x80000000
call esi
test eax eax
jne r-xdata
mov edx [ esp + 0x28 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x20019
push 0x0
push r--data
push edx
call esi
mov ebp [ ExpandEnvironmentStringsW@IAT ]
mov ebx 0x105
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x448 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
mov [ esp + 0x38 ] edi
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov [ esp + 0x760 ] 0xffffffff
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
or ecx 0xffffffff
lea edx [ eax + 0xc ]
[ edx ] ecx
dec ecx
test ecx ecx
mov ecx [ esp + 0x28 ]
lea eax [ esp + 0x18 ]
push eax
push 0x20019
push 0x0
push r--data
push ecx
call esi
test eax eax
jne r-xdata
lea eax [ esp + 0x20 ]
push eax
mov eax [ esp + 0x1c ]
lea ecx [ esp + 0x238 ]
push ecx
lea edx [ esp + 0x2c ]
push edx
push 0x0
push 0x0
push eax
mov [ esp + 0x38 ] ebx
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
push eax
call ebx
jmp r-xdata
cmp [ esp + 0x24 ] 0x1
jne r-xdata
lea edx [ esp + 0x20 ]
push edx
mov edx [ esp + 0x1c ]
lea eax [ esp + 0x238 ]
push eax
lea ecx [ esp + 0x2c ]
push ecx
push 0x0
push 0x0
push edx
mov [ esp + 0x38 ] ebx
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x24 ]
cmp eax 0x1
je r-xdata
lea ecx [ esp + 0x34 ]
push ecx
mov ecx ebp
lea edx [ esp + 0x448 ]
call sub_4052a0
mov esi eax
test esi esi
jle r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call [ RegCloseKey@IAT ]
mov eax [ esp + 0x24 ]
cmp eax 0x1
je r-xdata
mov edx [ esp + 0x2c ]
push edx
lea eax [ esp + 0x238 ]
push eax
lea edi [ esp + 0x3c ]
call sub_405680
mov edi eax
test edi edi
jle r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ esp + 0x18 ]
push edx
call ebx
lea ecx [ esp + 0x1c ]
call sub_402040
mov eax esi
jmp r-xdata
mov ecx [ esp + 0x2c ]
push ecx
lea edx [ esp + 0x238 ]
push edx
lea edi [ esp + 0x3c ]
call sub_405680
mov esi eax
test esi esi
jle r-xdata
cmp eax 0x2
jne r-xdata
mov ecx [ esp + 0x18 ]
push ecx
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x1c ]
call sub_402040
mov eax edi
jmp r-xdata
push 0x104
lea ecx [ esp + 0x548 ]
push ecx
lea edx [ esp + 0x23c ]
push edx
call ebp
test eax eax
je r-xdata
mov ecx [ esp + 0x758 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x740 ]
xor ecx esp
call sub_419730
add esp 0x750
retn 0x8
mov eax [ esp + 0x18 ]
push eax
call [ RegCloseKey@IAT ]
lea ecx [ esp + 0x1c ]
call sub_402040
mov eax esi
jmp r-xdata
push 0x104
lea eax [ esp + 0x548 ]
push eax
lea ecx [ esp + 0x23c ]
push ecx
call ebp
test eax eax
je r-xdata
lea eax [ esp + 0x544 ]
push eax
lea ecx [ esp + 0x238 ]
push 0x104
push ecx
call sub_419ff4
add esp 0xc
lea edx [ esp + 0x544 ]
push edx
lea eax [ esp + 0x238 ]
push 0x104
push eax
call sub_419ff4
add esp 0xc
sub_405d70
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x44
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x40 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
lea eax [ esp + 0x3c ]
push eax
push esi
mov [ esp + 0x28 ] ecx
call [ CLSIDFromProgID@IAT ]
test eax eax
jge r-xdata
lea ecx [ esp + 0x10 ]
push ecx
push r--data
push 0x15
xor ebx ebx
push ebx
lea edx [ esp + 0x4c ]
push edx
mov [ esp + 0x24 ] ebx
call [ CoCreateInstance@IAT ]
test eax eax
jl r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov ecx [ esp + 0x40 ]
xor ecx esp
call sub_419730
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
push edx
mov [ esp + 0x18 ] ebx
mov ecx [ eax ]
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jl r-xdata
lea ecx [ esp + 0x28 ]
push ecx
call [ VariantInit@IAT ]
push 0x8
push ebx
push edi
lea edx [ esp + 0x34 ]
push edx
call [ VariantChangeType@IAT ]
test eax eax
jne r-xdata
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx + 0x8 ]
push eax
call edx
mov ecx [ esp + 0x4c ]
mov eax [ esp + 0x14 ]
pop edi
pop esi
pop ebx
xor ecx esp
call sub_419730
mov esp ebp
pop ebp
retn 0x8
mov eax [ esp + 0x10 ]
mov ecx [ eax ]
lea edx [ esp + 0x1c ]
push edx
push r--data
push eax
mov eax [ ecx ]
call eax
test eax eax
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
push esi
call sub_4058f0
mov eax [ esp + 0x1c ]
mov ecx [ eax ]
lea edx [ esp + 0x24 ]
push edx
push eax
mov eax [ ecx + 0xc ]
call eax
test eax eax
jl r-xdata
mov esi [ esp + 0x24 ]
lea ecx [ esp + 0x18 ]
push ecx
call sub_404740
jmp r-xdata
mov eax [ esp + 0x18 ]
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x20 ]
mov ebx [ esp + 0x30 ]
push eax
push ecx
push edx
call sub_4047e0
sub_405ea0
push 0xffffffff
push sub_42b698
mov eax [ fs : 0x0 ]
push eax
push ecx
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x18 ]
mov [ fs : 0x0 ] eax
push 0x2
push r--data
lea ecx [ esp + 0x34 ]
mov [ esp + 0x28 ] 0x0
call sub_402600
push 0xfffffff5
call [ GetStdHandle@IAT ]
mov ebp [ FlushFileBuffers@IAT ]
mov esi eax
push esi
call ebp
mov eax [ esp + 0x28 ]
cmp [ eax + 0x228 ] 0x0
je r-xdata
call [ GetConsoleOutputCP@IAT ]
push 0x1
mov [ esp + 0x2c ] eax
call [ SetConsoleOutputCP@IAT ]
mov edx [ esp + 0x2c ]
mov edi [ edx - 0xc ]
lea eax [ edi + 0x1 ]
push eax
call sub_409987
push edi
mov ebx eax
push 0x0
push ebx
call sub_41ae80
mov ecx [ esp + 0x3c ]
add esp 0x10
push edi
push ebx
push ecx
call [ CharToOemBuffW@IAT ]
push 0x0
lea edx [ esp + 0x18 ]
push edx
push edi
push ebx
push esi
mov [ ebx + edi ] 0x0
call [ WriteFile@IAT ]
push esi
call ebp
mov eax [ esp + 0x28 ]
push eax
call [ SetConsoleOutputCP@IAT ]
push ebx
push esi
call [ GetFileType@IAT ]
push 0x0
test al 0x1
jne r-xdata
mov ecx [ esp + 0x18 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x10
retn 0x8
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x30 ]
mov ecx [ eax - 0xc ]
lea edx [ esp + 0x18 ]
push edx
add ecx ecx
push ecx
push eax
push esi
call [ WriteFile@IAT ]
push esi
call ebp
jmp r-xdata
mov ecx [ esp + 0x30 ]
mov ebp [ WideCharToMultiByte@IAT ]
push 0x0
push 0x0
push 0x0
push 0xffffffff
push ecx
push 0x0
push 0xfde9
call ebp
mov ebx eax
push ebx
call sub_409987
mov edx [ esp + 0x30 ]
add esp 0x4
push 0x0
push 0x0
push ebx
mov edi eax
push edi
push 0xffffffff
push edx
push 0x0
push 0xfde9
call ebp
call [ GetConsoleOutputCP@IAT ]
mov ebp [ SetConsoleOutputCP@IAT ]
push 0xfde9
mov ebx eax
call ebp
mov eax edi
lea ecx [ eax + 0x1 ]
mov [ esp + 0x20 ] 0xffffffff
mov eax [ esp + 0x2c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push 0x0
sub eax ecx
lea ecx [ esp + 0x18 ]
push ecx
push eax
push edi
push esi
call [ WriteFile@IAT ]
push esi
call [ FlushFileBuffers@IAT ]
push ebx
call ebp
push edi
jmp r-xdata
call sub_409992
add esp 0x4
sub_406050
push 0xffffffff
push sub_42b9d8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x224 ] 0x0
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
mov eax [ esp + 0x20 ]
push eax
lea ecx [ esp + 0x24 ]
push ecx
call sub_4097a0
mov [ esp + 0x18 ] 0x0
mov eax [ esp + 0x20 ]
push ecx
add eax 0xfffffff0
mov [ esp + 0x10 ] esp
mov esi esp
push eax
call sub_4026f0
add esp 0x4
add eax 0x10
push edi
mov [ esi ] eax
call sub_405ea0
mov [ esp + 0x18 ] 0xffffffff
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_406110
push 0xffffffff
push sub_42bba1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x214 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x224 ]
mov [ fs : 0x0 ] eax
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x10 ] esi
push 0x104
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
mov [ esp + 0x238 ] 0x0
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x10 ]
call sub_401ee0
mov [ esp + 0x22c ] 0x1
mov eax [ esp + 0xc ]
push 0x5c
push eax
call sub_41a0ea
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi - 0x10 ]
mov [ esp + 0x22c ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov [ esp + 0x22c ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
sub eax [ esp + 0xc ]
sar eax 0x1
js r-xdata
mov eax edi
mov ecx [ esp + 0x224 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x214 ]
xor ecx esp
call sub_419730
add esp 0x224
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push eax
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_408e80
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x230 ] 0x2
call sub_402f40
mov [ esp + 0x22c ] 0x1
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4062b0
push 0xffffffff
push sub_42b99b
mov eax [ fs : 0x0 ]
push eax
sub esp 0x210
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x20c ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x21c ]
mov [ fs : 0x0 ] eax
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0xc ] esi
push 0x104
lea ecx [ esp + 0x14 ]
push ecx
push 0x0
mov [ esp + 0x230 ] 0x0
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea eax [ esp + 0x10 ]
lea edx [ eax + 0x2 ]
jmp r-xdata
lea eax [ esi - 0x10 ]
mov [ esp + 0x224 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov eax edi
mov ecx [ esp + 0x21c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x20c ]
xor ecx esp
call sub_419730
add esp 0x21c
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub eax edx
sar eax 0x1
push eax
lea edx [ esp + 0x14 ]
push edx
lea ecx [ esp + 0x14 ]
call sub_401d90
mov esi [ esp + 0xc ]
sub_4063d0
push 0xffffffff
push sub_42b888
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0xc ]
call sub_403300
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x8 ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esp + 0x8 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_406460
push 0xffffffff
push sub_42b888
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
push r--data
lea ecx [ esp + 0xc ]
call sub_403300
mov [ esp + 0x14 ] 0x0
mov eax [ esp + 0x8 ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov [ esp + 0x14 ] 0xffffffff
mov eax [ esp + 0x8 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov eax esi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x10
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_4064f0
push 0xffffffff
push sub_42bba1
mov eax [ fs : 0x0 ]
push eax
sub esp 0x218
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x214 ] eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x224 ]
mov [ fs : 0x0 ] eax
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x10 ] esi
push 0x104
lea ecx [ esp + 0x1c ]
push ecx
push 0x0
mov [ esp + 0x238 ] 0x0
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea edx [ esp + 0x18 ]
push edx
lea ecx [ esp + 0x10 ]
call sub_401ee0
mov [ esp + 0x22c ] 0x1
mov eax [ esp + 0xc ]
push 0x5c
push eax
call sub_41a0ea
add esp 0x8
test eax eax
je r-xdata
lea eax [ esi - 0x10 ]
mov [ esp + 0x22c ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov [ esp + 0x22c ] 0x0
mov eax [ esp + 0xc ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
sub eax [ esp + 0xc ]
sar eax 0x1
js r-xdata
mov eax edi
mov ecx [ esp + 0x224 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ esp + 0x214 ]
xor ecx esp
call sub_419730
add esp 0x224
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
inc eax
push eax
lea ecx [ esp + 0x18 ]
push ecx
lea ecx [ esp + 0x14 ]
call sub_408dd0
push eax
lea ecx [ esp + 0x14 ]
mov [ esp + 0x230 ] 0x2
call sub_402f40
mov [ esp + 0x22c ] 0x1
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov esi [ esp + 0x10 ]
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_406690
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
xor esi esi
call [ VariantInit@IAT ]
mov ecx [ esp + 0x18 ]
push 0x13
push esi
push ecx
lea edx [ esp + 0x10 ]
push edx
call [ VariantChangeType@IAT ]
test eax eax
jne r-xdata
push esi
call [ ExitProcess@IAT ]
pop esi
int3
mov esi [ esp + 0xc ]
sub_406720
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x264
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_4040e0
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_4067a0
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x2c
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_403d70
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_406820
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_403e00
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_4068a0
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_403f00
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_406920
push 0xffffffff
push sub_42b26a
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x4 ] eax
mov [ esp + 0x10 ] 0x0
test eax eax
je r-xdata
xor eax eax
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
push eax
call sub_403ff0
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
sub_4069d0
push 0xffffffff
push sub_42b238
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push esi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov eax [ ecx + 0x1c ]
push eax
lea ecx [ esp + 0xc ]
call sub_411d43
push r--data
mov [ esp + 0x1c ] 0x0
call sub_414742
mov [ esp + 0x18 ] 0xffffffff
cmp [ esp + 0xc ] 0x0
mov esi eax
je r-xdata
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop esi
add esp 0x14
retn
mov ecx [ esp + 0x8 ]
push ecx
push 0x0
call sub_4113e4
mov eax esi
sub_406b40
push 0xffffffff
push sub_42b550
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov [ esp + 0x18 ] ebx
cmp [ ebx + 0x24 ] 0x0
je r-xdata
mov edi [ esp + 0x2c ]
lea ecx [ edi + 0x1 ]
push ecx
call sub_409987
mov esi eax
add esp 0x4
mov [ esi ] 0x0
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov ebp [ esp + 0x2c ]
xor ecx ecx
lea eax [ ebp + 0x1 ]
mov edx 0x2
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_409987
mov edi eax
xor eax eax
add esp 0x4
mov [ edi ] ax
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea ebp [ eax + 0x10 ]
mov [ esp + 0x2c ] ebp
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push edi
mov [ esp + 0x30 ] 0x1
mov edx [ ebx + 0x20 ]
push esi
push edx
call [ ReadFile@IAT ]
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x14 ] esi
push 0x0
lea ecx [ esp + 0x30 ]
push ecx
lea edx [ ebp + ebp ]
push edx
mov [ esp + 0x30 ] 0x0
mov eax [ ebx + 0x20 ]
mov ebx [ ReadFile@IAT ]
push edi
push eax
call ebx
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov esi [ ebp - 0xc ]
push 0x0
push 0x0
push esi
push ebp
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
mov edi eax
push edi
push 0x0
call [ SysAllocStringLen@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ esp + 0x14 ]
test eax eax
jbe r-xdata
mov edi [ esi - 0xc ]
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
mov ebx eax
push ebx
push 0x0
call [ SysAllocStringLen@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
lea ecx [ ecx ]
call sub_409420
push edi
push ebx
push esi
push ebp
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
lea eax [ ebp - 0x10 ]
mov [ esp + 0x24 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ebp [ esp + 0x2c ]
mov [ eax + esi ] 0x0
mov eax esi
lea edx [ eax + 0x1 ]
push ebx
push ebp
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
lea eax [ esi - 0x10 ]
mov [ esp + 0x24 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov esi [ esp + 0x14 ]
mov edx [ esp + 0x2c ]
xor ecx ecx
push edi
lea esi [ esp + 0x18 ]
mov [ edi + edx * 2 ] cx
call sub_408fa0
sub ebp [ esp + 0x2c ]
test ebp ebp
jle r-xdata
mov eax ebx
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
push esi
lea ecx [ esp + 0x30 ]
push ecx
mov edx eax
call sub_4095d0
sub edi [ esp + 0x14 ]
test edi edi
jle r-xdata
mov eax ebp
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ esp + 0x18 ]
push 0x0
lea eax [ esp + 0x30 ]
push eax
mov eax [ edx + 0x20 ]
lea ecx [ ebp + ebp ]
push ecx
push edi
push eax
call ebx
test eax eax
jne r-xdata
mov eax [ ebx + 0x20 ]
push 0x0
lea edx [ esp + 0x18 ]
push edx
push edi
push esi
push eax
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
shr [ esp + 0x2c ] 0x1
je r-xdata
sub_406db0
push 0xffffffff
push sub_42b770
mov eax [ fs : 0x0 ]
push eax
sub esp 0x18
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x2c ]
mov [ fs : 0x0 ] eax
mov edi ecx
mov [ esp + 0x28 ] edi
cmp [ edi + 0x24 ] 0x0
je r-xdata
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x24 ] esi
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push 0x1
mov [ esp + 0x40 ] 0x1
mov eax [ edi + 0x20 ]
mov ebx [ ReadFile@IAT ]
lea edx [ esp + 0x23 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x24 ] esi
push 0x0
lea ecx [ esp + 0x20 ]
push ecx
push 0x2
mov [ esp + 0x40 ] 0x0
mov eax [ edi + 0x20 ]
mov ebx [ ReadFile@IAT ]
lea edx [ esp + 0x24 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov edi [ esi - 0xc ]
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
mov ebx eax
push ebx
push 0x0
call [ SysAllocStringLen@IAT ]
mov ebp eax
test ebp ebp
je r-xdata
jmp r-xdata
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
mov edi eax
test edi edi
jne r-xdata
jmp r-xdata
call sub_409420
push ebx
push ebp
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
add esi 0xfffffff0
mov [ esp + 0x34 ] 0xffffffff
lea edx [ esi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov eax [ esp + 0x20 ]
test eax eax
je r-xdata
add esi 0xfffffff0
mov [ esp + 0x34 ] 0xffffffff
lea eax [ esi + 0xc ]
or ecx 0xffffffff
[ eax ] ecx
dec ecx
test ecx ecx
jg r-xdata
call sub_409420
mov eax [ esp + 0x1c ]
test eax eax
je r-xdata
mov eax ebp
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
cmp eax 0x1
jne r-xdata
mov eax edi
mov ecx [ esp + 0x2c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x24
retn
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
cmp eax 0x2
jne r-xdata
mov eax [ edi + 0x20 ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push 0x1
lea edx [ esp + 0x23 ]
push edx
push eax
call ebx
test eax eax
jne r-xdata
mov al [ esp + 0x17 ]
cmp al 0xa
je r-xdata
mov ecx [ edi + 0x20 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
push 0x2
lea eax [ esp + 0x24 ]
push eax
push ecx
call ebx
test eax eax
jne r-xdata
mov ax [ esp + 0x18 ]
cmp ax 0xa
je r-xdata
jmp r-xdata
mov eax [ edi + 0x20 ]
push 0x0
lea ecx [ esp + 0x24 ]
push ecx
push 0x1
lea edx [ esp + 0x23 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
mov ecx [ edi + 0x20 ]
push 0x0
lea edx [ esp + 0x20 ]
push edx
push 0x2
lea eax [ esp + 0x24 ]
push eax
push ecx
call ebx
test eax eax
je r-xdata
cmp ax 0xd
je r-xdata
cmp [ esp + 0x20 ] 0x1
jne r-xdata
mov ebp [ esi - 0xc ]
mov bl al
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
lea edi [ ebp + 0x1 ]
sub eax edi
or eax ecx
jge r-xdata
cmp [ esp + 0x1c ] 0x2
jne r-xdata
mov ebp [ esi - 0xc ]
movzx ebx ax
mov eax [ esi - 0x8 ]
mov ecx 0x1
sub ecx [ esi - 0x4 ]
lea edi [ ebp + 0x1 ]
sub eax edi
or eax ecx
jge r-xdata
mov al [ esp + 0x17 ]
cmp al 0xa
je r-xdata
mov [ esi + ebp ] bl
test edi edi
jl r-xdata
push edi
lea ecx [ esp + 0x28 ]
call sub_409690
mov esi [ esp + 0x24 ]
mov ax [ esp + 0x18 ]
cmp ax 0xa
je r-xdata
mov [ esi + ebp * 2 ] bx
test edi edi
jl r-xdata
push edi
lea ecx [ esp + 0x28 ]
call sub_401cc0
mov esi [ esp + 0x24 ]
cmp al 0xd
je r-xdata
push 0x80070057
call sub_401fa0
cmp edi [ esi - 0x8 ]
jg r-xdata
cmp ax 0xd
je r-xdata
cmp edi [ esi - 0x8 ]
jg r-xdata
mov ecx [ edi + 0x20 ]
push 0x1
push 0x0
push 0xffffffff
push ecx
call [ SetFilePointer@IAT ]
mov ebx [ ReadFile@IAT ]
mov [ esi - 0xc ] edi
mov [ edi + esi ] 0x0
mov edi [ esp + 0x28 ]
mov edx [ edi + 0x20 ]
push 0x1
push 0x0
push 0xfffffffe
push edx
call [ SetFilePointer@IAT ]
mov ebx [ ReadFile@IAT ]
mov [ esi - 0xc ] edi
xor ecx ecx
mov [ esi + edi * 2 ] cx
mov edi [ esp + 0x28 ]
sub_407100
push 0xffffffff
push sub_42b656
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30c
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x308 ] eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x320 ]
mov [ fs : 0x0 ] eax
mov edi ecx
cmp [ edi + 0x24 ] 0x0
je r-xdata
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x14 ] esi
push 0x0
lea ecx [ esp + 0x1c ]
push ecx
push 0xff
mov [ esp + 0x334 ] 0x1
mov eax [ edi + 0x20 ]
mov ebx [ ReadFile@IAT ]
lea edx [ esp + 0x28 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
lea esi [ eax + 0x10 ]
mov [ esp + 0x18 ] esi
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x1fe
mov [ esp + 0x334 ] 0x0
mov eax [ edi + 0x20 ]
mov ebx [ ReadFile@IAT ]
lea edx [ esp + 0x128 ]
push edx
push eax
call ebx
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
mov edi [ esi - 0xc ]
push 0x0
push 0x0
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
mov ebp eax
push ebp
push 0x0
call [ SysAllocStringLen@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
nop
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
mov edi eax
test edi edi
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
call sub_409420
push ebp
push ebx
push edi
push esi
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
lea eax [ esi - 0x10 ]
mov [ esp + 0x328 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov esi [ esp + 0x14 ]
mov [ esp + eax + 0x1c ] 0x0
lea eax [ esp + 0x1c ]
lea edx [ eax + 0x1 ]
lea eax [ esi - 0x10 ]
mov [ esp + 0x328 ] 0xffffffff
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
mov esi [ esp + 0x18 ]
shr eax 0x1
xor ecx ecx
mov [ esp + 0x14 ] eax
mov [ esp + eax * 2 + 0x11c ] cx
lea eax [ esp + 0x11c ]
lea edx [ eax + 0x2 ]
mov eax ebx
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
lea ecx [ esp + 0x1c ]
push ecx
lea edx [ esp + 0x18 ]
push edx
mov edx eax
call sub_4095d0
mov edx [ edi + 0x20 ]
push 0x0
lea eax [ esp + 0x1c ]
push eax
push 0xff
lea ecx [ esp + 0x28 ]
push ecx
push edx
call ebx
test eax eax
jne r-xdata
mov eax edi
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push eax
lea edx [ esp + 0x120 ]
push edx
lea ecx [ esp + 0x20 ]
call sub_402600
mov edx [ edi + 0x20 ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x1fe
lea ecx [ esp + 0x128 ]
push ecx
push edx
call ebx
test eax eax
jne r-xdata
mov eax [ esp + 0x18 ]
test eax eax
je r-xdata
mov ecx [ esp + 0x320 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
mov ecx [ esp + 0x308 ]
xor ecx esp
call sub_419730
add esp 0x318
retn
sub_407380
push 0xffffffff
push sub_42bb58
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x30 ]
call sub_401ee0
mov [ esp + 0x24 ] 0x0
mov ecx [ ebp + 0x20 ]
mov esi [ FlushFileBuffers@IAT ]
push ecx
call esi
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov ecx [ esp + 0x2c ]
push ecx
lea ecx [ esp + 0x18 ]
call sub_408f00
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0xc ]
push 0x0
lea edx [ esp + 0x1c ]
push edx
push ecx
push eax
mov eax [ ebp + 0x20 ]
push eax
call [ WriteFile@IAT ]
mov ecx [ ebp + 0x20 ]
push ecx
call esi
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov edx [ ebp + 0x20 ]
push edx
call [ GetFileType@IAT ]
test al 0x1
mov eax [ esp + 0x2c ]
push 0x0
jne r-xdata
mov [ esp + 0x24 ] 0xffffffff
mov eax [ esp + 0x2c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax - 0xc ]
lea edx [ esp + 0x1c ]
push edx
mov edx [ ebp + 0x20 ]
add ecx ecx
push ecx
push eax
push edx
call [ WriteFile@IAT ]
mov eax [ ebp + 0x20 ]
push eax
call esi
jmp r-xdata
mov ebx [ WideCharToMultiByte@IAT ]
push 0x0
push 0x0
push 0x0
push 0xffffffff
push eax
push 0x0
push 0xfde9
call ebx
mov edi eax
push edi
call sub_409987
push edi
mov esi eax
push 0x0
push esi
call sub_41ae80
mov ecx [ esp + 0x3c ]
add esp 0x10
push 0x0
push 0x0
push edi
push esi
push 0xffffffff
push ecx
push 0x0
push 0xfde9
call ebx
mov [ esi + edi - 0x1 ] 0x0
call [ GetConsoleOutputCP@IAT ]
mov ebx [ SetConsoleOutputCP@IAT ]
push 0xfde9
mov edi eax
call ebx
mov eax esi
lea ecx [ eax + 0x1 ]
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x14
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov dl [ eax ]
inc eax
test dl dl
jne r-xdata
push 0x0
lea edx [ esp + 0x18 ]
push edx
sub eax ecx
push eax
mov eax [ ebp + 0x20 ]
push esi
push eax
call [ WriteFile@IAT ]
mov ecx [ ebp + 0x20 ]
push ecx
call [ FlushFileBuffers@IAT ]
push edi
call ebx
push esi
call sub_409992
add esp 0x4
jmp r-xdata
sub_407530
sub esp 0x10
push esi
lea eax [ esp + 0x4 ]
push eax
mov esi ecx
call [ VariantInit@IAT ]
mov ecx [ esp + 0x18 ]
push 0x8
push 0x0
push ecx
lea edx [ esp + 0x10 ]
push edx
call [ VariantChangeType@IAT ]
test eax eax
jne r-xdata
push 0x1
mov ecx esi
call sub_407580
pop esi
add esp 0x10
retn 0x4
mov eax [ esp + 0xc ]
push eax
mov ecx esi
call sub_407380
sub_407580
push 0xffffffff
push sub_42bca8
mov eax [ fs : 0x0 ]
push eax
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x14 ]
mov [ fs : 0x0 ] eax
mov ebx ecx
mov ebp [ esp + 0x24 ]
xor edi edi
test ebp ebp
jle r-xdata
mov ecx [ esp + 0x14 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0xc
retn 0x4
mov esi [ SysAllocStringLen@IAT ]
jmp r-xdata
push r--data
lea ecx [ esp + 0x28 ]
call sub_401ee0
mov [ esp + 0x1c ] 0x0
mov eax [ esp + 0x24 ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call esi
test eax eax
je r-xdata
call sub_409420
push eax
mov ecx ebx
call sub_407380
mov [ esp + 0x1c ] 0xffffffff
mov eax [ esp + 0x24 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
inc edi
cmp edi ebp
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
sub_407640
sub esp 0xc
push ebx
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ esp + 0x1c ]
mov edx [ esi + 0x20 ]
mov ebx [ ReadFile@IAT ]
push 0x0
je r-xdata
push 0x0
push r--data
push 0x0
call sub_413e83
lea eax [ esp + 0x18 ]
push eax
push 0x1
lea ecx [ esp + 0x1b ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x28 ]
push ecx
push edx
call ebx
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
lea ebx [ ebx ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
jne r-xdata
cmp eax 0x2
jne r-xdata
mov edx [ esi + 0x20 ]
push 0x0
lea eax [ esp + 0x18 ]
push eax
push 0x1
lea ecx [ esp + 0x1b ]
push ecx
push edx
call ebx
test eax eax
jne r-xdata
dec edi
test edi edi
jle r-xdata
mov edx [ esi + 0x20 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x28 ]
push ecx
push edx
call ebx
test eax eax
jne r-xdata
dec edi
test edi edi
jle r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
add esp 0xc
retn 0x4
sub_407710
sub esp 0x10
push esi
mov esi ecx
cmp [ esi + 0x28 ] 0x0
push edi
je r-xdata
cmp [ esi + 0x24 ] 0x0
mov edi [ ReadFile@IAT ]
push 0x0
je r-xdata
push 0x0
push r--data
push 0x0
call sub_413e83
mov eax [ esi + 0x20 ]
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
lea edx [ esp + 0x17 ]
push edx
push eax
call edi
test eax eax
je r-xdata
mov edx [ esi + 0x20 ]
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x10
retn
lea esp [ esp ]
jmp r-xdata
cmp eax 0x1
jne r-xdata
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
lea edx [ esp + 0x17 ]
push edx
push eax
call edi
test eax eax
jne r-xdata
mov al [ esp + 0xb ]
cmp al 0xa
je r-xdata
cmp eax 0x2
jne r-xdata
mov eax [ esp + 0x14 ]
test eax eax
je r-xdata
pop edi
pop esi
add esp 0x10
retn
mov eax [ esi + 0x20 ]
push 0x0
lea ecx [ esp + 0x18 ]
push ecx
push 0x1
lea edx [ esp + 0x17 ]
push edx
push eax
call edi
test eax eax
je r-xdata
cmp al 0xd
je r-xdata
mov edx [ esi + 0x20 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
push edx
call edi
test eax eax
jne r-xdata
mov ax [ esp + 0xc ]
cmp ax 0xa
je r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
pop edi
pop esi
add esp 0x10
retn
mov edx [ esi + 0x20 ]
push 0x0
lea eax [ esp + 0x14 ]
push eax
push 0x2
lea ecx [ esp + 0x18 ]
push ecx
push edx
call edi
test eax eax
je r-xdata
cmp ax 0xd
je r-xdata
mov al [ esp + 0xb ]
cmp al 0xa
je r-xdata
cmp [ esp + 0x10 ] 0x2
jne r-xdata
cmp al 0xd
je r-xdata
mov ax [ esp + 0xc ]
cmp ax 0xa
je r-xdata
mov ecx [ esi + 0x20 ]
push 0x1
push 0x0
push 0xffffffff
push ecx
call [ SetFilePointer@IAT ]
cmp ax 0xd
je r-xdata
mov eax [ esi + 0x20 ]
push 0x1
push 0x0
push 0xfffffffe
push eax
call [ SetFilePointer@IAT ]
pop edi
pop esi
add esp 0x10
retn
sub_4078b0
push 0xffffffff
push sub_42b522
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x1c ] esi
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x20 ] eax
xor ebp ebp
mov [ esp + 0x2c ] ebp
cmp eax ebp
je r-xdata
mov [ esp + 0x18 ] ebp
push eax
call sub_403ff0
mov [ esp + 0x18 ] eax
jmp r-xdata
test ebp ebp
jl r-xdata
mov ecx [ esp + 0x18 ]
push 0x1
call sub_4131cb
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esi + 0x28 ]
cmp eax ebp
jg r-xdata
call sub_40a39e
cmp ebp [ esi + 0x28 ]
jge r-xdata
mov eax [ esi + 0x24 ]
mov esi [ eax + ebp * 4 ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
lea eax [ eax + ebp * 4 ]
mov eax [ edx + 0x10 ]
sub esi 0x10
call eax
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
je r-xdata
cmp eax [ esi ]
jne r-xdata
call sub_409420
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
add esi 0x10
lea edx [ eax + eax + 0x2 ]
push esi
push edx
lea eax [ edi + 0x10 ]
push eax
call sub_41973f
add esp 0x10
mov edi esi
mov edx 0x1
[ ecx ] edx
jmp r-xdata
mov bl 0x1
test ecx ecx
jl r-xdata
add edi 0x10
mov [ esp + 0x14 ] edi
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0x1
call sub_408e80
mov eax [ eax ]
mov ecx [ eax - 0xc ]
cmp ecx 0x1
jne r-xdata
test bl bl
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x80070057
call sub_401fa0
movzx eax [ eax ]
cmp ax 0x2f
jne r-xdata
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x28 ]
add ecx 0x20
lea edx [ esp + 0x14 ]
push edx
push eax
call sub_409e7a
xor bl bl
jmp r-xdata
mov ecx [ esp + 0x1c ]
inc ebp
cmp ebp [ ecx + 0x28 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov esi ecx
jmp r-xdata
sub_407a80
push 0xffffffff
push sub_42b522
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x1c ] esi
push 0x34
call sub_409958
add esp 0x4
mov [ esp + 0x20 ] eax
xor ebp ebp
mov [ esp + 0x2c ] ebp
cmp eax ebp
je r-xdata
mov [ esp + 0x18 ] ebp
push eax
call sub_403f00
mov [ esp + 0x18 ] eax
jmp r-xdata
test ebp ebp
jl r-xdata
mov ecx [ esp + 0x18 ]
push 0x1
call sub_4131cb
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esi + 0x28 ]
cmp eax ebp
jg r-xdata
call sub_40a39e
cmp ebp [ esi + 0x28 ]
jge r-xdata
mov eax [ esi + 0x24 ]
mov esi [ eax + ebp * 4 ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
lea eax [ eax + ebp * 4 ]
mov eax [ edx + 0x10 ]
sub esi 0x10
call eax
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
je r-xdata
cmp eax [ esi ]
jne r-xdata
call sub_409420
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
add esi 0x10
lea edx [ eax + eax + 0x2 ]
push esi
push edx
lea eax [ edi + 0x10 ]
push eax
call sub_41973f
add esp 0x10
mov edi esi
mov edx 0x1
[ ecx ] edx
jmp r-xdata
xor bl bl
test ecx ecx
jl r-xdata
add edi 0x10
mov [ esp + 0x14 ] edi
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x1c ]
mov [ esp + 0x34 ] 0x1
call sub_408e80
mov eax [ eax ]
mov ecx [ eax - 0xc ]
cmp ecx 0x1
jne r-xdata
test bl bl
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x80070057
call sub_401fa0
movzx eax [ eax ]
cmp ax 0x2f
jne r-xdata
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ esp + 0x18 ]
mov eax [ ecx + 0x28 ]
add ecx 0x20
lea edx [ esp + 0x14 ]
push edx
push eax
call sub_409e7a
mov bl cl
jmp r-xdata
mov ecx [ esp + 0x1c ]
inc ebp
cmp ebp [ ecx + 0x28 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
mov esi ecx
jmp r-xdata
sub_407c70
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
call sub_40a39e
cmp eax [ ecx + 0x28 ]
jge r-xdata
mov ecx [ ecx + 0x24 ]
lea eax [ ecx + eax * 4 ]
mov eax [ eax ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
test eax eax
jne r-xdata
retn 0x4
call sub_409420
sub_407cb0
push 0xffffffff
push sub_42bb30
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x34 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0x30 ] esi
mov eax [ esp + 0x44 ]
push eax
lea ecx [ esp + 0x20 ]
call sub_401ee0
mov [ esp + 0x3c ] 0x0
mov eax [ esi + 0x28 ]
xor ebp ebp
mov [ esp + 0x18 ] ebp
test eax eax
jle r-xdata
push r--data
call [ SysAllocString@IAT ]
mov esi eax
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
mov eax esi
mov ecx [ esp + 0x34 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x2c
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push 0x80004005
call sub_401fa0
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esp + 0x14 ] eax
mov [ esp + 0x3c ] 0x1
test ebp ebp
jl r-xdata
call sub_40a39e
cmp ebp [ esi + 0x28 ]
jge r-xdata
mov ecx [ esi + 0x24 ]
mov esi [ ecx + ebp * 4 ]
lea eax [ ecx + ebp * 4 ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
sub esi 0x10
call eax
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
je r-xdata
cmp eax [ esi ]
jne r-xdata
call sub_409420
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
add esi 0x10
lea edx [ eax + eax + 0x2 ]
push esi
push edx
lea eax [ edi + 0x10 ]
push eax
call sub_41973f
add esp 0x10
mov edi esi
mov edx 0x1
[ ecx ] edx
jmp r-xdata
mov [ esp + 0x3c ] 0x2
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ esi + 0xc ] 0x0
lea edi [ esi + 0xc ]
jl r-xdata
lea esi [ edi + 0x10 ]
mov [ esp + 0x44 ] esi
push 0x1
lea ecx [ esp + 0x24 ]
push ecx
lea ecx [ esp + 0x4c ]
mov [ esp + 0x44 ] 0x2
call sub_408dd0
mov [ esp + 0x3c ] 0x3
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
add esi 0xfffffff0
cmp eax esi
je r-xdata
lea ecx [ esp + 0x44 ]
push ecx
call sub_408ad0
mov edi [ esp + 0x44 ]
cmp [ edi - 0xc ] 0x0
jle r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ esp + 0x4c ]
call sub_401d90
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
mov eax [ esp + 0x1c ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
push 0x3a
push edi
call sub_41a0c4
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_4026f0
mov ebx eax
add esp 0x4
or eax 0xffffffff
[ edi ] eax
dec eax
test eax eax
jg r-xdata
push eax
push edi
call sub_419d7f
add esp 0x8
test eax eax
je r-xdata
sub eax edi
sar eax 0x1
mov ebx eax
js r-xdata
add ebx 0x10
mov [ esp + 0x44 ] ebx
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov ebx [ esp + 0x14 ]
mov eax [ ebx - 0xc ]
push eax
push ebx
call [ SysAllocStringLen@IAT ]
mov esi eax
test esi esi
jne r-xdata
lea eax [ edi - 0x10 ]
mov [ esp + 0x3c ] 0x1
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
lea edx [ ebx + 0x1 ]
push edx
lea eax [ esp + 0x2c ]
push eax
lea ecx [ esp + 0x4c ]
call sub_408dd0
mov [ esp + 0x3c ] 0x4
mov ecx [ eax ]
mov esi [ esp + 0x14 ]
lea eax [ ecx - 0x10 ]
add esi 0xfffffff0
cmp eax esi
je r-xdata
lea eax [ edi - 0x10 ]
mov [ esp + 0x3c ] 0x1
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov [ esp + 0x3c ] 0x0
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x3c ] 0x2
mov eax [ esp + 0x28 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ esi + 0xc ] 0x0
lea ebp [ esi + 0xc ]
jl r-xdata
lea eax [ ebx - 0x10 ]
mov [ esp + 0x3c ] 0x0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov esi [ esp + 0x30 ]
inc ebp
cmp ebp [ esi + 0x28 ]
mov [ esp + 0x18 ] ebp
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push ebx
lea ecx [ esp + 0x30 ]
push ecx
lea ecx [ esp + 0x4c ]
call sub_408e80
mov [ esp + 0x3c ] 0x5
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
lea esi [ edi - 0x10 ]
cmp eax esi
je r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ esp + 0x1c ]
call sub_401d90
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
mov [ esp + 0x3c ] 0xffffffff
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
or edx 0xffffffff
lea ecx [ eax + 0xc ]
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
jmp r-xdata
mov [ esp + 0x3c ] 0x2
mov eax [ esp + 0x2c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ esi + 0xc ] 0x0
lea edi [ esi + 0xc ]
jl r-xdata
push eax
call sub_4026f0
mov [ esp + 0x28 ] eax
add esp 0x4
or eax 0xffffffff
[ ebp ] eax
dec eax
test eax eax
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ esp + 0x4c ]
call sub_401d90
mov edi [ esp + 0x44 ]
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
mov ecx [ esp + 0x24 ]
add ecx 0x10
mov [ esp + 0x14 ] ecx
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
push eax
call sub_4026f0
mov ebx eax
add esp 0x4
or eax 0xffffffff
[ edi ] eax
dec eax
test eax eax
jg r-xdata
mov ebp [ esp + 0x18 ]
lea edi [ ebx + 0x10 ]
mov [ esp + 0x44 ] edi
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_4080f0
push 0xffffffff
push sub_42bae0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push ebx
push ebp
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x24 ]
mov [ fs : 0x0 ] eax
mov ebp ecx
mov [ esp + 0x18 ] ebp
mov eax [ esp + 0x34 ]
push eax
lea ecx [ esp + 0x18 ]
call sub_401ee0
xor ebx ebx
mov [ esp + 0x2c ] ebx
mov eax [ ebp + 0x28 ]
cmp eax ebx
jle r-xdata
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
test ebx ebx
jl r-xdata
xor eax eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
call sub_40a39e
cmp ebx [ ebp + 0x28 ]
jge r-xdata
mov ecx [ ebp + 0x24 ]
mov esi [ ecx + ebx * 4 ]
lea eax [ ecx + ebx * 4 ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
sub esi 0x10
call eax
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
je r-xdata
cmp eax [ esi ]
jne r-xdata
call sub_409420
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
add esi 0x10
lea edx [ eax + eax + 0x2 ]
push esi
push edx
lea eax [ edi + 0x10 ]
push eax
call sub_41973f
add esp 0x10
mov edi esi
mov edx 0x1
[ ecx ] edx
jmp r-xdata
mov [ esp + 0x2c ] 0x1
mov eax [ esp + 0x1c ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ esi + 0xc ] 0x0
lea edi [ esi + 0xc ]
jl r-xdata
lea esi [ edi + 0x10 ]
mov [ esp + 0x34 ] esi
push 0x1
lea ecx [ esp + 0x20 ]
push ecx
lea ecx [ esp + 0x3c ]
mov [ esp + 0x34 ] 0x1
call sub_408dd0
mov [ esp + 0x2c ] 0x2
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
add esi 0xfffffff0
cmp eax esi
je r-xdata
lea ecx [ esp + 0x34 ]
push ecx
call sub_408ad0
mov esi [ esp + 0x34 ]
cmp [ esi - 0xc ] 0x0
jle r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ esp + 0x3c ]
call sub_401d90
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
mov eax [ esp + 0x14 ]
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
push 0x3a
push esi
call sub_41a0c4
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_4026f0
mov ebp eax
add esp 0x4
or eax 0xffffffff
[ edi ] eax
dec eax
test eax eax
jg r-xdata
push 0x80004005
call sub_401fa0
push eax
push esi
call sub_419d7f
add esp 0x8
or edx 0xffffffff
test eax eax
lea eax [ esi - 0x10 ]
mov [ esp + 0x2c ] 0x0
lea ecx [ eax + 0xc ]
je r-xdata
sub eax esi
sar eax 0x1
js r-xdata
add ebp 0x10
mov [ esp + 0x34 ] ebp
mov ebp [ esp + 0x18 ]
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
push eax
lea edx [ esp + 0x24 ]
push edx
lea ecx [ esp + 0x3c ]
call sub_408e80
mov [ esp + 0x2c ] 0x3
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
lea edi [ esi - 0x10 ]
cmp eax edi
je r-xdata
mov [ esp + 0x2c ] 0xffffffff
mov eax [ esp + 0x14 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
inc ebx
cmp ebx [ ebp + 0x28 ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ esp + 0x2c ] 0x1
mov eax [ esp + 0x20 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ edi + 0xc ] 0x0
lea esi [ edi + 0xc ]
jl r-xdata
mov eax 0x1
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ esp + 0x3c ]
call sub_401d90
mov esi [ esp + 0x34 ]
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
mov ecx [ esp + 0x24 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebp
pop ebx
add esp 0x1c
retn 0x4
push eax
call sub_4026f0
mov ebp eax
add esp 0x4
or eax 0xffffffff
[ esi ] eax
dec eax
test eax eax
jg r-xdata
lea esi [ ebp + 0x10 ]
mov ebp [ esp + 0x18 ]
mov [ esp + 0x34 ] esi
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
sub_408400
push ebp
mov ebp esp
push 0xffffffff
push sub_42b3bf
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov ebx ecx
push 0x34
call sub_409958
add esp 0x4
mov [ ebp - 0x20 ] eax
xor ecx ecx
mov [ ebp - 0x4 ] ecx
cmp eax ecx
je r-xdata
mov [ ebp - 0x1c ] ecx
push eax
call sub_402820
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_40a4a6
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
push r--data
mov [ ecx + 0x24 ] edx
mov [ ecx + 0x28 ] edi
mov [ ecx + 0x20 ] 0x0
call sub_4110fe
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
shl eax 0x4
add edi eax
push edi
call [ VariantInit@IAT ]
test esi esi
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov esi [ ebx + 0x28 ]
xor ecx ecx
mov eax esi
mov edx 0x10
mul edx
seto cl
mov [ ebp - 0x20 ] esi
neg ecx
or ecx eax
push ecx
call sub_409987
mov edi eax
add esp 0x4
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] edi
call sub_40a48e
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
xor esi esi
call sub_40a39e
cmp esi [ ebx + 0x28 ]
jge r-xdata
mov ecx [ ebx + 0x24 ]
lea eax [ ecx + esi * 4 ]
mov eax [ eax ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
test eax eax
jne r-xdata
mov edx 0x8
mov [ edi + 0x8 ] eax
mov [ edi ] dx
mov edi [ ebp - 0x14 ]
inc esi
jmp r-xdata
call sub_409420
cmp esi [ ebp - 0x20 ]
mov [ ebp - 0x18 ] esi
jge r-xdata
sub_408570
push ebp
mov ebp esp
push 0xffffffff
push sub_42b857
mov eax [ fs : 0x0 ]
push eax
sub esp 0x30
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x10 ] esp
mov esi ecx
mov [ ebp - 0x30 ] esi
push 0x34
call sub_409958
add esp 0x4
mov [ ebp - 0x2c ] eax
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp eax ebx
je r-xdata
mov [ ebp - 0x20 ] ebx
push eax
call sub_402820
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
call sub_40a4a6
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
push r--data
mov [ ecx + 0x24 ] edi
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x20 ] 0x0
call sub_4110fe
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jl r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov edi [ esi + 0x28 ]
xor ecx ecx
mov eax edi
mov edx 0x10
mul edx
seto cl
mov [ ebp - 0x2c ] edi
neg ecx
or ecx eax
push ecx
call sub_409987
add esp 0x4
lea ecx [ ebp - 0x3c ]
mov [ ebp - 0x1c ] eax
call sub_40a48e
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x4 ] 0x2
call sub_40a39e
cmp ebx [ esi + 0x28 ]
jge r-xdata
mov eax [ esi + 0x24 ]
mov esi [ eax + ebx * 4 ]
mov ecx [ esi - 0x10 ]
mov edx [ ecx ]
lea eax [ eax + ebx * 4 ]
mov eax [ edx + 0x10 ]
sub esi 0x10
call eax
cmp [ esi + 0xc ] 0x0
lea ecx [ esi + 0xc ]
jl r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ eax ]
mov edx [ edx ]
push 0x2
push ecx
mov ecx eax
call edx
mov edi eax
test edi edi
jne r-xdata
cmp eax [ esi ]
jne r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
lea ecx [ eax + eax + 0x2 ]
push ecx
add esi 0x10
lea edx [ eax + eax + 0x2 ]
push esi
push edx
lea eax [ edi + 0x10 ]
push eax
call sub_41973f
add esp 0x10
call sub_409420
mov edi esi
mov edx 0x1
[ ecx ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x24 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ esi + 0xc ] 0x0
lea edi [ esi + 0xc ]
jl r-xdata
lea esi [ edi + 0x10 ]
mov [ ebp - 0x14 ] esi
push 0x1
lea ecx [ ebp - 0x24 ]
push ecx
lea ecx [ ebp - 0x14 ]
mov [ ebp - 0x4 ] 0x3
call sub_408dd0
mov [ ebp - 0x4 ] 0x4
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
add esi 0xfffffff0
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
call sub_408ad0
mov esi [ ebp - 0x14 ]
cmp [ esi - 0xc ] 0x0
jle r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ ebp - 0x14 ]
call sub_401d90
mov edx [ eax ]
cmp edx [ esi ]
jne r-xdata
mov edx [ ebp - 0x1c ]
mov ecx ebx
shl ecx 0x4
lea edi [ ecx + edx ]
push edi
call [ VariantInit@IAT ]
mov eax [ esi - 0xc ]
push eax
push esi
call [ SysAllocStringLen@IAT ]
test eax eax
jne r-xdata
push 0x3a
push esi
call sub_41a0c4
add esp 0x8
test eax eax
je r-xdata
push eax
call sub_4026f0
mov ebx eax
add esp 0x4
or eax 0xffffffff
[ edi ] eax
dec eax
test eax eax
jg r-xdata
mov [ edi + 0x8 ] eax
mov eax 0x8
mov [ edi ] ax
lea eax [ esi - 0x10 ]
mov [ ebp - 0x4 ] 0x2
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
call sub_409420
sub eax esi
sar eax 0x1
js r-xdata
add ebx 0x10
mov [ ebp - 0x14 ] ebx
mov ebx [ ebp - 0x18 ]
jmp r-xdata
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
mov edi [ ebp - 0x2c ]
mov esi [ ebp - 0x30 ]
inc ebx
jmp r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
push eax
lea edx [ ebp - 0x28 ]
push edx
lea ecx [ ebp - 0x14 ]
call sub_408e80
mov [ ebp - 0x4 ] 0x5
mov ecx [ eax ]
lea eax [ ecx - 0x10 ]
lea edi [ esi - 0x10 ]
cmp eax edi
je r-xdata
cmp ebx edi
mov [ ebp - 0x18 ] ebx
jge r-xdata
mov [ ebp - 0x4 ] 0x3
mov eax [ ebp - 0x28 ]
add eax 0xfffffff0
lea ecx [ eax + 0xc ]
or edx 0xffffffff
[ ecx ] edx
dec edx
test edx edx
jg r-xdata
cmp [ edi + 0xc ] 0x0
lea esi [ edi + 0xc ]
jl r-xdata
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov eax [ ecx - 0xc ]
push eax
push ecx
lea ecx [ ebp - 0x14 ]
call sub_401d90
mov esi [ ebp - 0x14 ]
mov edx [ eax ]
cmp edx [ edi ]
jne r-xdata
push eax
call sub_4026f0
mov ebx eax
add esp 0x4
or eax 0xffffffff
[ esi ] eax
dec eax
test eax eax
jg r-xdata
lea esi [ ebx + 0x10 ]
mov ebx [ ebp - 0x18 ]
mov [ ebp - 0x14 ] esi
jmp r-xdata
mov ecx [ edi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push edi
call eax
sub_4088c0
mov eax [ esp + 0x8 ]
push ebx
push ebp
mov ebp [ esp + 0xc ]
push esi
push edi
lea edx [ eax + 0x1 ]
nop
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
mov [ esp + 0x14 ] eax
lea edi [ ebp + 0x20 ]
mov eax ebp
xor ecx ecx
sub eax edi
lea ebx [ eax + 0x120 ]
lea esp [ esp ]
xor edx edx
mov eax ecx
div [ esp + 0x14 ]
mov eax [ esp + 0x18 ]
lea esi [ edi + ecx ]
mov dl [ edx + eax ]
mov [ esi ] cl
inc ecx
cmp ecx 0xff
mov [ ebx + esi ] dl
jle r-xdata
xor eax eax
mov ecx edi
mov esi 0x100
lea esp [ esp ]
movzx eax al
mov bl [ eax + ebp + 0x20 ]
mov [ ecx ] bl
inc ecx
sub esi 0x1
mov [ eax + ebp + 0x20 ] dl
jne r-xdata
dec eax
or eax 0xffffff00
inc eax
mov dl [ ecx ]
movzx edi [ ecx + 0x100 ]
movzx ebx dl
add edi eax
add ebx edi
mov eax ebx
and eax 0x800000ff
jns r-xdata
pop edi
pop esi
pop ebp
pop ebx
retn 0x8
sub_408960
push ecx
push ebx
push ebp
mov ebx eax
push edi
lea ebp [ ebx + 0x1 ]
push ebp
call sub_409987
push ebp
mov edi eax
push 0x0
push edi
mov [ esp + 0x1c ] edi
call sub_41ae80
mov eax [ esp + 0x28 ]
add esp 0x10
push eax
push esi
call sub_4088c0
test ebx ebx
jbe r-xdata
mov eax edi
pop edi
pop ebp
pop ebx
pop ecx
retn 0x8
mov ebp [ esp + 0x14 ]
xor eax eax
xor ecx ecx
sub ebp edi
mov [ esp + 0x18 ] ebx
movzx eax al
mov dl [ eax + esi + 0x20 ]
movzx ebx dl
add ecx ebx
and ecx 0x800000ff
jns r-xdata
dec eax
or eax 0xffffff00
inc eax
movzx ecx cl
mov bl [ ecx + esi + 0x20 ]
mov [ eax + esi + 0x20 ] bl
mov [ ecx + esi + 0x20 ] dl
movzx ebx [ eax + esi + 0x20 ]
movzx edx dl
add ebx edx
and ebx 0x800000ff
jns r-xdata
dec ecx
or ecx 0xffffff00
inc ecx
movzx edx [ ebx + esi + 0x20 ]
xor dl [ edi + ebp ]
inc edi
sub [ esp + 0x18 ] 0x1
mov [ edi - 0x1 ] dl
jne r-xdata
dec ebx
or ebx 0xffffff00
inc ebx
inc eax
and eax 0x800000ff
jns r-xdata
mov eax [ esp + 0xc ]
pop edi
pop ebp
pop ebx
pop ecx
retn 0x8
sub_408a20
push 0xffffffff
push sub_42b738
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
lea ecx [ esp + 0x4 ]
push ecx
mov ecx eax
call sub_409050
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x4 ]
mov ecx [ eax - 0xc ]
push ecx
push eax
mov ecx esi
call sub_402600
mov [ esp + 0x10 ] 0xffffffff
mov eax [ esp + 0x4 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
sub_408ad0
sub esp 0x18
push ebp
mov ebp r--data
lea ecx [ ebp + 0x2 ]
lea esp [ esp ]
mov ax [ ebp ]
add ebp 0x2
test ax ax
jne r-xdata
sub ebp ecx
sar ebp 0x1
jne r-xdata
mov eax r--data
lea edx [ eax + 0x2 ]
xor eax eax
pop ebp
add esp 0x18
retn 0x4
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
push ebx
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x24 ]
push esi
mov esi [ eax ]
mov ecx [ esi - 0xc ]
push edi
lea edi [ esi + ecx * 2 ]
xor ebx ebx
cmp esi edi
jae r-xdata
pop edi
pop esi
mov eax ebx
pop ebx
pop ebp
add esp 0x18
retn 0x4
nop
test esi esi
je r-xdata
lea esi [ eax + ebp * 2 ]
push r--data
push esi
inc ebx
call sub_41a063
add esp 0x8
test eax eax
jne r-xdata
xor eax eax
mov eax esi
lea edx [ eax + 0x2 ]
push r--data
push esi
call sub_41a063
add esp 0x8
test eax eax
je r-xdata
mov [ esp + 0x18 ] ebx
test ebx ebx
jle r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jmp r-xdata
mov esi [ esp + 0x10 ]
mov edx [ esp + 0x2c ]
mov eax [ edx ]
mov edi [ eax - 0xc ]
sub esi ebp
imul esi ebx
add esi edi
cmp esi edi
mov [ esp + 0x14 ] edi
mov [ esp + 0x24 ] esi
mov ecx esi
jg r-xdata
lea esi [ esi + eax * 2 + 0x2 ]
cmp esi edi
jb r-xdata
mov edx 0x1
sub edx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax ecx
or edx eax
jge r-xdata
mov ecx edi
mov ecx [ esp + 0x2c ]
mov ebx [ ecx ]
lea eax [ ebx + edi * 2 ]
mov [ esp + 0x1c ] ebx
mov [ esp + 0x20 ] eax
cmp ebx eax
jae r-xdata
push ecx
mov ecx [ esp + 0x30 ]
call sub_401cc0
test esi esi
jl r-xdata
push r--data
push ebx
call sub_41a063
mov esi eax
add esp 0x8
test esi esi
je r-xdata
push 0x80070057
call sub_401fa0
mov ecx [ esp + 0x2c ]
mov eax [ ecx ]
cmp esi [ eax - 0x8 ]
jg r-xdata
test ebx ebx
je r-xdata
jmp r-xdata
mov ebx [ esp + 0x18 ]
mov [ eax - 0xc ] esi
mov edx [ ecx ]
xor eax eax
mov [ edx + esi * 2 ] ax
xor eax eax
mov eax ebx
lea edx [ eax + 0x2 ]
mov ebx [ esp + 0x10 ]
mov edx esi
sub edx [ esp + 0x1c ]
lea ecx [ esi + ebp * 2 ]
sar edx 0x1
sub edi edx
sub edi ebp
lea eax [ edi + edi ]
push eax
push ecx
add ebx ebx
push eax
add ebx esi
push ebx
call sub_4197bc
add esp 0x10
cmp eax 0x50
ja r-xdata
mov esi [ esp + 0x24 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
jmp r-xdata
call sub_40a39e
movzx edx [ eax + lookup_table_408d14 ]
jmp [ edx * 4 + jump_table_408d04 ]
lea ebx [ ebx + eax * 2 + 0x2 ]
cmp ebx [ esp + 0x20 ]
jb r-xdata
mov eax [ esp + 0x10 ]
add eax eax
push eax
push r--data
push eax
push esi
call sub_41973f
add esp 0x10
cmp eax 0x50
ja r-xdata
call sub_40a366
movzx eax [ eax + lookup_table_408d78 ]
jmp [ eax * 4 + jump_table_408d68 ]
mov eax [ esp + 0x10 ]
add edi eax
xor ecx ecx
sub eax ebp
add [ esp + 0x14 ] eax
push r--data
push ebx
mov [ esi + edi * 2 ] cx
call sub_41a063
mov edi [ esp + 0x1c ]
mov esi eax
add esp 0x8
test esi esi
jne r-xdata
sub_408d7c
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add [ ebx ] eax
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add al [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add eax [ ebx ]
add ah cl
int3
sub_408dd0
push ecx
mov eax [ ecx ]
mov edx [ eax - 0xc ]
mov eax [ esp + 0xc ]
push esi
mov esi [ esp + 0xc ]
sub edx eax
push edx
push eax
push esi
mov [ esp + 0x10 ] 0x0
call sub_409240
mov eax esi
pop esi
pop ecx
retn 0x8
sub_408e00
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov ebx ecx
mov [ esp + 0xc ] 0x0
test edi edi
jge r-xdata
mov eax [ ebx ]
mov esi [ eax - 0xc ]
cmp edi esi
jl r-xdata
xor edi edi
mov eax [ eax - 0x10 ]
test eax eax
je r-xdata
add eax 0xfffffff0
push eax
call sub_4026f0
add esp 0x4
mov ecx eax
mov eax [ esp + 0x14 ]
pop edi
add ecx 0x10
pop esi
mov [ eax ] ecx
pop ebx
pop ecx
retn 0x8
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ ebx ]
sub esi edi
push eax
lea edx [ ecx + esi * 2 ]
mov esi [ esp + 0x18 ]
push edi
push edx
mov ecx esi
call sub_409430
pop edi
mov eax esi
pop esi
pop ebx
pop ecx
retn 0x8
sub_408e80
push ecx
push esi
mov esi [ esp + 0x10 ]
push edi
mov edi ecx
mov [ esp + 0x8 ] 0x0
test esi esi
jge r-xdata
mov eax [ edi ]
cmp esi [ eax - 0xc ]
jl r-xdata
xor esi esi
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
add eax 0xfffffff0
push eax
call sub_4026f0
add esp 0x4
mov ecx eax
mov eax [ esp + 0x10 ]
add ecx 0x10
pop edi
mov [ eax ] ecx
pop esi
pop ecx
retn 0x8
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov ecx [ edi ]
push eax
push esi
mov esi [ esp + 0x18 ]
push ecx
mov ecx esi
call sub_409430
pop edi
mov eax esi
pop esi
pop ecx
retn 0x8
sub_408f00
push 0xffffffff
push sub_42ba58
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x10 ]
mov [ fs : 0x0 ] eax
mov esi ecx
mov [ esp + 0xc ] esi
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
mov eax [ esp + 0x20 ]
mov [ esp + 0x18 ] 0x0
test eax eax
je r-xdata
push 0x80004005
call sub_401fa0
push eax
mov ecx esi
call sub_409390
test eax 0xffff0000
jne r-xdata
movzx edi ax
push edi
call sub_40a542
test eax eax
je r-xdata
mov eax esi
mov ecx [ esp + 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x10
retn 0x4
push edi
push eax
mov ecx esi
call sub_409510
jmp r-xdata
sub_408fa0
push 0xffffffff
push sub_42b738
mov eax [ fs : 0x0 ]
push eax
push ecx
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x8 ]
mov [ fs : 0x0 ] eax
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
mov eax esi
mov ecx [ esp + 0x8 ]
mov [ fs : 0x0 ] ecx
pop ecx
add esp 0x10
retn 0x4
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov edx [ esp + 0x18 ]
lea ecx [ esp + 0x4 ]
push ecx
mov ecx eax
call sub_4092f0
mov [ esp + 0x10 ] 0x0
mov eax [ esp + 0x4 ]
mov edx [ eax - 0xc ]
push eax
push esi
call sub_4095d0
mov [ esp + 0x10 ] 0xffffffff
mov eax [ esp + 0x4 ]
add eax 0xfffffff0
lea edx [ eax + 0xc ]
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
sub_409050
push 0xffffffff
push sub_42b458
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ esp + 0x1c ]
xor eax eax
test ecx ecx
setne al
mov esi r--data
test eax eax
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
add eax 0x10
mov [ edi ] eax
mov eax r--data
mov [ esp + 0x14 ] 0x0
test eax 0xffff0000
jne r-xdata
push 0x80004005
call sub_401fa0
push r--data
mov ecx edi
call sub_403000
movzx esi si
push esi
call sub_40a542
test eax eax
je r-xdata
mov eax edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
push esi
push eax
mov ecx edi
call sub_401a90
jmp r-xdata
sub_4090f0
mov eax [ ecx ]
mov ecx [ eax - 0x10 ]
test ecx ecx
je r-xdata
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
jmp eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
retn
sub_409120
push esi
push edi
mov edi [ ebx ]
movzx eax [ edi ]
xor esi esi
test ax ax
je r-xdata
pop edi
mov eax ebx
pop esi
retn
mov edi edi
xor esi esi
test esi esi
jne r-xdata
movzx eax ax
push eax
call sub_41a161
add esp 0x4
test eax eax
je r-xdata
test esi esi
je r-xdata
movzx eax [ edi + 0x2 ]
add edi 0x2
test ax ax
jne r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ eax - 0x8 ]
sub esi eax
sar esi 0x1
mov ecx 0x1
sub ecx [ eax - 0x4 ]
sub edx esi
or ecx edx
jge r-xdata
test esi esi
jl r-xdata
push esi
mov ecx ebx
call sub_401cc0
push 0x80070057
call sub_401fa0
mov eax [ ebx ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov eax [ ebx ]
xor ecx ecx
mov [ eax + esi * 2 ] cx
sub_4091a0
push esi
mov esi [ ebx ]
movzx eax [ esi ]
push edi
push eax
call sub_41a161
add esp 0x4
test eax eax
je r-xdata
mov eax [ ebx ]
cmp esi eax
je r-xdata
movzx eax [ esi + 0x2 ]
add esi 0x2
push eax
call sub_41a161
add esp 0x4
test eax eax
jne r-xdata
pop edi
mov eax ebx
pop esi
retn
mov ecx [ eax - 0xc ]
sub esi eax
mov edx 0x1
sub edx [ eax - 0x4 ]
mov eax [ eax - 0x8 ]
sub eax ecx
sar esi 0x1
or edx eax
jge r-xdata
mov eax [ ebx ]
mov ecx [ eax - 0xc ]
mov edi ecx
sub edi esi
lea edx [ edi + edi + 0x2 ]
push edx
lea edx [ eax + esi * 2 ]
push edx
lea ecx [ ecx + ecx + 0x2 ]
push ecx
push eax
call sub_4197bc
push eax
call sub_401a00
add esp 0x14
test edi edi
jl r-xdata
push ecx
mov ecx ebx
call sub_401cc0
push 0x80070057
call sub_401fa0
mov eax [ ebx ]
cmp edi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] edi
mov edx [ ebx ]
xor eax eax
mov [ edx + edi * 2 ] ax
sub_409240
push ecx
push ebx
push esi
push edi
mov edi [ esp + 0x18 ]
mov ebx ecx
mov [ esp + 0xc ] 0x0
test edi edi
jge r-xdata
mov esi [ esp + 0x1c ]
test esi esi
jge r-xdata
xor edi edi
mov eax 0x7fffffff
sub eax edi
cmp eax esi
jl r-xdata
xor esi esi
push 0x80070057
call sub_401fa0
mov ecx [ ebx ]
mov eax [ ecx - 0xc ]
lea edx [ edi + esi ]
cmp edx eax
jle r-xdata
cmp edi eax
jle r-xdata
mov esi eax
sub esi edi
test edi edi
jne r-xdata
xor esi esi
mov ecx [ ecx - 0x10 ]
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
call sub_40a097
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0x10 ]
call eax
mov edx [ ecx ]
mov eax [ edx + 0x10 ]
call eax
test eax eax
jne r-xdata
lea eax [ ecx - 0x10 ]
push eax
call sub_4026f0
add esp 0x4
mov ecx eax
mov eax [ esp + 0x14 ]
pop edi
add ecx 0x10
pop esi
mov [ eax ] ecx
pop ebx
pop ecx
retn 0xc
mov ecx [ ebx ]
push eax
push esi
mov esi [ esp + 0x1c ]
lea edx [ ecx + edi * 2 ]
push edx
mov ecx esi
call sub_409430
pop edi
mov eax esi
pop esi
pop ebx
pop ecx
retn 0xc
sub_4092f0
push 0xffffffff
push sub_42b458
mov eax [ fs : 0x0 ]
push eax
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0xc ]
mov [ fs : 0x0 ] eax
mov esi edx
mov edi [ esp + 0x1c ]
xor eax eax
test ecx ecx
setne al
test eax eax
jne r-xdata
mov eax [ ecx ]
mov edx [ eax + 0xc ]
call edx
add eax 0x10
mov [ edi ] eax
mov [ esp + 0x14 ] 0x0
test esi esi
je r-xdata
push 0x80004005
call sub_401fa0
push esi
mov ecx edi
call sub_409390
test esi 0xffff0000
jne r-xdata
movzx esi si
push esi
call sub_40a542
test eax eax
je r-xdata
mov eax edi
mov ecx [ esp + 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0xc
retn 0x4
push esi
push eax
mov ecx edi
call sub_409510
jmp r-xdata
sub_409390
push ebx
mov ebx [ esp + 0x8 ]
push ebp
push esi
push edi
mov edi ecx
test ebx ebx
je r-xdata
mov ecx edi
call sub_4094b0
mov eax edi
pop edi
pop esi
pop ebp
pop ebx
retn 0x4
mov ebp [ WideCharToMultiByte@IAT ]
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
push ebx
push 0x0
push 0x3
call ebp
mov esi eax
dec esi
test esi esi
jle r-xdata
mov eax [ edi ]
mov edx [ eax - 0x8 ]
sub eax 0x10
mov ecx 0x1
sub ecx [ eax + 0xc ]
sub edx esi
or ecx edx
jge r-xdata
mov eax [ edi ]
push 0x0
push 0x0
push esi
push eax
push 0xffffffff
push ebx
push 0x0
push 0x3
call ebp
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
push esi
mov ecx edi
call sub_409690
push 0x80070057
call sub_401fa0
mov [ eax - 0xc ] esi
mov ecx [ edi ]
mov eax edi
pop edi
mov [ esi + ecx ] 0x0
pop esi
pop ebp
pop ebx
retn 0x4
sub_409430
push edi
mov edi ecx
mov ecx [ esp + 0x10 ]
test ecx ecx
jne r-xdata
push ebx
mov ebx [ esp + 0xc ]
push esi
mov esi [ esp + 0x14 ]
test ebx ebx
jne r-xdata
push 0x80004005
call sub_401fa0
mov eax [ ecx ]
mov edx [ eax ]
push 0x2
push esi
call edx
test eax eax
jne r-xdata
test esi esi
je r-xdata
add eax 0x10
mov [ edi ] eax
test esi esi
jl r-xdata
call sub_409420
push 0x80070057
call sub_401fa0
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov ecx [ edi ]
lea eax [ esi + esi ]
push eax
xor edx edx
push ebx
push eax
mov [ eax + ecx ] dx
mov eax [ edi ]
push eax
call sub_41973f
add esp 0x10
pop esi
pop ebx
mov eax edi
pop edi
retn 0xc
sub_4094b0
push esi
mov esi ecx
mov ecx [ esi ]
cmp [ ecx - 0xc ] 0x0
lea eax [ ecx - 0x10 ]
push edi
mov edi [ eax ]
je r-xdata
pop edi
pop esi
retn
cmp [ eax + 0xc ] 0x0
lea edx [ eax + 0xc ]
jge r-xdata
or ecx 0xffffffff
[ edx ] ecx
dec ecx
test ecx ecx
jg r-xdata
cmp [ ecx - 0x8 ] 0x0
jge r-xdata
mov edx [ edi ]
mov eax [ edx + 0xc ]
mov ecx edi
call eax
add eax 0x10
mov [ esi ] eax
mov ecx [ eax ]
mov edx [ ecx ]
push eax
mov eax [ edx + 0x4 ]
call eax
mov [ ecx - 0xc ] 0x0
mov eax [ esi ]
pop edi
mov [ eax ] 0x0
pop esi
retn
push 0x80070057
call sub_401fa0
sub_409510
push ebx
push esi
mov esi [ esp + 0x10 ]
mov eax esi
shr eax 0x4
push edi
mov edi [ esp + 0x10 ]
inc eax
mov ebx ecx
movzx ecx ax
push 0x6
push ecx
push edi
call [ FindResourceW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
xor eax eax
pop ebx
retn 0x8
push esi
push eax
push edi
call sub_401950
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
movzx eax [ edi ]
push ebp
push 0x0
push 0x0
push 0x0
push 0x0
push eax
lea ebp [ edi + 0x2 ]
push ebp
push 0x0
push 0x3
call [ WideCharToMultiByte@IAT ]
mov esi eax
mov eax [ ebx ]
sub eax 0x10
mov edx 0x1
sub edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub eax esi
or edx eax
jge r-xdata
mov ecx [ ebx ]
movzx edx [ edi ]
push 0x0
push 0x0
push esi
push ecx
push edx
push ebp
push 0x0
push 0x3
call [ WideCharToMultiByte@IAT ]
pop ebp
test esi esi
jl r-xdata
push esi
mov ecx ebx
call sub_409690
push 0x80070057
call sub_401fa0
mov eax [ ebx ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov eax [ ebx ]
pop edi
mov [ esi + eax ] 0x0
pop esi
mov eax 0x1
pop ebx
retn 0x8
sub_4095d0
mov eax [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
mov eax [ eax ]
push ebp
mov ebp [ eax - 0xc ]
push edi
mov edi ecx
sub edi eax
test edx edx
jge r-xdata
push ebx
test ecx ecx
jne r-xdata
push 0x80070057
call sub_401fa0
push edx
push ecx
call sub_41a174
add esp 0x8
mov ebx eax
xor ebx ebx
jmp r-xdata
mov ecx [ esp + 0x10 ]
mov eax [ ecx ]
sub eax 0x10
mov edx 0x1
sub edx [ eax + 0xc ]
mov eax [ eax + 0x8 ]
push esi
lea esi [ ebx + ebp ]
sub eax esi
or edx eax
jge r-xdata
push 0x80070057
call sub_401fa0
mov ecx 0x7fffffff
sub ecx ebx
cmp ecx ebp
jge r-xdata
mov eax [ ecx ]
cmp edi ebp
ja r-xdata
push esi
call sub_409690
mov ecx [ esp + 0x14 ]
mov edi [ esp + 0x18 ]
add edi eax
jmp r-xdata
push 0x80070057
call sub_401fa0
mov ecx [ esp + 0x14 ]
mov eax [ ecx ]
cmp esi [ eax - 0x8 ]
jg r-xdata
push ebx
push edi
add eax ebp
push ebx
push eax
call sub_41973f
add esp 0x10
test esi esi
jl r-xdata
mov [ eax - 0xc ] esi
mov ecx [ ecx ]
mov [ esi + ecx ] 0x0
pop esi
pop ebx
pop edi
pop ebp
retn 0x8
sub_409690
mov eax [ ecx ]
mov edx [ esp + 0x4 ]
sub eax 0x10
push esi
mov esi [ eax + 0x4 ]
cmp esi edx
jle r-xdata
cmp [ eax + 0xc ] 0x1
pop esi
jle r-xdata
mov edx esi
mov eax [ eax + 0x8 ]
cmp eax edx
jge r-xdata
mov [ esp + 0x4 ] edx
jmp sub_4096e0
retn 0x4
cmp eax 0x400
jle r-xdata
add eax eax
add eax 0x400
jmp r-xdata
mov [ esp + 0x4 ] eax
jmp sub_409760
mov eax edx
cmp eax edx
jge r-xdata
sub_4096e0
push ecx
push ebx
push ebp
push esi
mov esi [ ecx ]
mov ebx [ esi - 0xc ]
sub esi 0x10
mov [ esp + 0xc ] ecx
mov ecx [ esi ]
mov eax [ ecx ]
mov edx [ eax + 0x10 ]
push edi
call edx
mov edx [ eax ]
mov ebp [ esp + 0x18 ]
push 0x1
mov ecx eax
mov eax [ edx ]
push ebp
call eax
mov edi eax
test edi edi
jne r-xdata
cmp ebx ebp
jge r-xdata
call sub_409420
lea eax [ ebp + 0x1 ]
push eax
lea ecx [ esi + 0x10 ]
push ecx
push eax
lea ebp [ edi + 0x10 ]
push ebp
call sub_41973f
add esp 0x10
mov [ edi + 0x4 ] ebx
lea edx [ esi + 0xc ]
or eax 0xffffffff
[ edx ] eax
dec eax
test eax eax
jg r-xdata
mov ebp ebx
mov ecx [ esp + 0x10 ]
pop edi
pop esi
mov [ ecx ] ebp
pop ebp
pop ebx
pop ecx
retn 0x4
mov ecx [ esi ]
mov edx [ ecx ]
mov eax [ edx + 0x4 ]
push esi
call eax
sub_409760
mov edx [ esp + 0x4 ]
push esi
mov esi ecx
mov eax [ esi ]
mov ecx [ eax - 0x10 ]
sub eax 0x10
cmp [ eax + 0x8 ] edx
jge r-xdata
call sub_409420
test edx edx
jle r-xdata
push edi
mov edi [ ecx ]
push 0x1
push edx
push eax
mov eax [ edi + 0x8 ]
call eax
pop edi
test eax eax
jne r-xdata
add eax 0x10
mov [ esi ] eax
pop esi
retn 0x4
sub_4097a0
push 0xffffffff
push sub_42b970
mov eax [ fs : 0x0 ]
push eax
sub esp 0x10
push esi
push edi
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x1c ]
mov [ fs : 0x0 ] eax
mov esi [ esp + 0x2c ]
call sub_40a097
xor ecx ecx
test eax eax
setne cl
test ecx ecx
jne r-xdata
mov edx [ eax ]
mov ecx eax
mov eax [ edx + 0xc ]
call eax
add eax 0x10
mov [ esi ] eax
lea ecx [ esp + 0xc ]
push ecx
mov [ esp + 0x28 ] 0x0
call [ VariantInit@IAT ]
mov edx [ esp + 0x30 ]
push 0x8
push 0x0
push edx
lea eax [ esp + 0x18 ]
push eax
mov [ esp + 0x34 ] 0x1
call [ VariantChangeType@IAT ]
test eax eax
jge r-xdata
push 0x80004005
call sub_401fa0
mov edi [ esp + 0x14 ]
test edi edi
jne r-xdata
push eax
call sub_401fa0
mov eax edi
lea edx [ eax + 0x2 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push eax
push edi
mov ecx esi
call sub_401d90
lea ecx [ esp + 0xc ]
push ecx
call [ VariantClear@IAT ]
mov eax esi
mov ecx [ esp + 0x1c ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
add esp 0x1c
retn 0x8
sub eax edx
sar eax 0x1
sub_409890
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push ecx
push edx
push eax
call sub_4197bc
push eax
call sub_401a00
add esp 0x14
retn
sub_4098c0
push ebx
push esi
push edi
mov edi ecx
mov eax [ edi ]
mov ebx [ eax - 0xc ]
mov edx [ eax - 0x8 ]
mov ecx 0x1
sub ecx [ eax - 0x4 ]
lea esi [ ebx + 0x1 ]
sub edx esi
or ecx edx
jge r-xdata
mov eax [ edi ]
mov cx [ esp + 0x10 ]
mov [ eax + ebx * 2 ] cx
test esi esi
jl r-xdata
push esi
mov ecx edi
call sub_401cc0
push 0x80070057
call sub_401fa0
mov eax [ edi ]
cmp esi [ eax - 0x8 ]
jg r-xdata
mov [ eax - 0xc ] esi
mov edx [ edi ]
xor eax eax
pop edi
mov [ edx + esi * 2 ] ax
pop esi
pop ebx
retn 0x4
sub_409958
mov edi edi
push ebp
mov ebp esp
push esi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_41a3e1
mov esi eax
pop ecx
test esi esi
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax esi
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
sub_4099a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mul [ ebp + 0x10 ]
test edx edx
ja r-xdata
mov eax 0x80070057
pop ebp
retn
cmp eax 0xffffffff
jbe r-xdata
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
sub_4099c7
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push eax
push 0x3
call [ MultiByteToWideChar@IAT ]
pop ebp
retn
sub_4099e1
mov edi edi
push ebp
mov ebp esp
push ecx
push [ ebp + 0xc ]
lea eax [ ebp - 0x4 ]
push [ ebp + 0x8 ]
push eax
call sub_4099a3
add esp 0xc
test eax eax
jge r-xdata
mov eax [ ebp - 0x4 ]
leave
retn
push eax
call sub_401fa0
sub_409a3e
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_41a3e1
pop ecx
test eax eax
jne r-xdata
mov [ esi ] eax
pop esi
pop ebp
retn 0x4
push 0x8007000e
call sub_401fa0
sub_409a64
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
push edi
push 0x1
push [ eax - 0xc ]
mov edi ecx
push edi
call sub_41036c
mov eax [ esi ]
mov ecx [ eax - 0xc ]
add ecx ecx
push ecx
push eax
mov ecx edi
call sub_4104c9
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_409aa2
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x80
push esi
mov esi ecx
jbe r-xdata
lea eax [ esi + 0x4 ]
mov [ esi ] eax
push [ ebp + 0x8 ]
call sub_409a3e
jmp r-xdata
mov eax [ esi ]
pop esi
pop ebp
retn 0x4
sub_409ac9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a097
push eax
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call sub_409430
mov eax esi
pop esi
pop ebp
retn 0x8
sub_409aeb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi ]
sub ecx 0x10
call sub_402020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_409b11
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
dec [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
jmp sub_40a39e
mov ecx [ ebp + 0x8 ]
call sub_401ff0
add [ ebp + 0x8 ] 0x4
sub_409b3a
mov edi edi
push ebp
mov ebp esp
push esi
push 0x1
push [ ebp + 0x8 ]
mov esi ecx
call sub_4099e1
pop ecx
pop ecx
push eax
mov ecx esi
call sub_409aa2
pop esi
pop ebp
retn 0x4
sub_409b5b
mov edi edi
push ebp
mov ebp esp
push esi
push 0x2
push [ ebp + 0x8 ]
mov esi ecx
call sub_4099e1
pop ecx
pop ecx
push eax
mov ecx esi
call sub_409aa2
pop esi
pop ebp
retn 0x4
sub_409b7c
mov edi edi
push ebp
mov ebp esp
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
dec [ ebp + 0xc ]
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
jmp sub_40a39e
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_409aeb
add [ ebp + 0x8 ] 0x4
sub_409ba7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40a39e
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
call sub_409b7c
push [ esi + 0x4 ]
call sub_409992
add esp 0xc
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov eax edi
shl eax 0x2
push eax
call sub_409958
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_409b11
add esp 0xc
mov [ esi + 0xc ] edi
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
jge r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
jle r-xdata
mov edx edi
sub edx eax
push edx
lea eax [ ecx + eax * 4 ]
push eax
call sub_409b11
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
sub eax edi
push eax
lea eax [ ecx + edi * 4 ]
push eax
call sub_409b7c
pop ecx
pop ecx
shl eax 0x2
push eax
call sub_409958
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push ebx
call sub_401840
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
push ecx
lea eax [ ebx + eax * 4 ]
push eax
call sub_409b11
push [ esi + 0x4 ]
call sub_409992
mov eax [ ebp + 0x8 ]
add esp 0x20
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_409d11
push 0x4
mov eax sub_42a748
call sub_41a939
mov edi ecx
mov [ ebp - 0x10 ] edi
call sub_40a097
push eax
mov ecx edi
call sub_401fc0
xor eax eax
cmp [ ebp + 0xc ] eax
mov [ ebp - 0x4 ] eax
jle r-xdata
mov eax edi
call sub_41aa11
retn 0x8
cmp [ ebp + 0x8 ] eax
jne r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4099c7
pop ecx
pop ecx
mov esi eax
push esi
mov ecx edi
call sub_401d10
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push esi
push eax
call sub_402fe0
add esp 0x10
push esi
mov ecx edi
call sub_401d60
push 0x80070057
call sub_401fa0
sub_409d81
push 0x410
mov eax sub_42a76e
call sub_41a9d8
and [ ebp - 0x4 ] 0x0
mov esi ecx
push [ esi + 0x8 ]
mov [ esi ] r--data
push [ esi + 0x4 ]
call sub_409b7c
pop ecx
pop ecx
push [ esi + 0x4 ]
call sub_409992
pop ecx
call sub_41aa34
retn
sub_409db8
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x53
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x53
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_409e59
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_409d81
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_409e7a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jge r-xdata
cmp edi [ esi + 0x8 ]
jl r-xdata
call sub_40a39e
mov eax [ esi + 0x4 ]
push [ ebp + 0xc ]
lea ecx [ eax + edi * 4 ]
call sub_402fc0
pop edi
pop esi
pop ebp
retn 0x8
mov ecx [ esi + 0xc ]
cmp edi ecx
jl r-xdata
push 0xffffffff
lea eax [ edi + 0x1 ]
push eax
mov ecx esi
call sub_409ba7
mov eax [ esi + 0x4 ]
cmp [ ebp + 0xc ] eax
jb r-xdata
lea eax [ eax + ecx * 4 ]
cmp [ ebp + 0xc ] eax
jb r-xdata
sub_409ecc
push 0x118
mov eax sub_42a7c2
call sub_41a9a2
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0x124 ]
push eax
push ecx
mov [ ebp - 0x120 ] ecx
call sub_4102bb
cmp [ ebp - 0x124 ] 0x1
mov esi eax
push esi
jne r-xdata
lea ecx [ ebp - 0x94 ]
call sub_409cf7
mov ecx [ ebp - 0x120 ]
lea edi [ esi + esi ]
push edi
push [ ebp - 0x94 ]
mov [ ebp - 0x4 ] 0x2
call sub_40fe07
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x118 ]
call sub_409cdd
mov ecx [ ebp - 0x120 ]
and [ ebp - 0x4 ] 0x0
push esi
push [ ebp - 0x118 ]
call sub_40fe07
cmp eax esi
je r-xdata
push 0x0
push 0x3
call sub_4108a1
push esi
push [ ebp - 0x94 ]
lea ecx [ ebp - 0x11c ]
call sub_409ac9
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x3
call sub_402fc0
mov ecx [ ebp - 0x11c ]
add ecx 0xfffffff0
call sub_402020
lea eax [ ebp - 0x90 ]
cmp [ ebp - 0x94 ] eax
je r-xdata
push esi
push [ ebp - 0x118 ]
lea ecx [ ebp - 0x11c ]
call sub_409d11
push eax
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_402fc0
mov ecx [ ebp - 0x11c ]
add ecx 0xfffffff0
call sub_402020
lea eax [ ebp - 0x114 ]
cmp [ ebp - 0x118 ] eax
je r-xdata
mov eax [ ebp - 0x120 ]
call sub_41aa25
retn 0x4
lea ecx [ ebp - 0x94 ]
call sub_409a35
lea ecx [ ebp - 0x118 ]
call sub_409a35
jmp r-xdata
sub_409ff0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jge r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
call sub_40a39e
mov eax [ edi + 0x4 ]
push [ ebp + 0xc ]
lea ecx [ eax + esi * 4 ]
call sub_401ea0
pop edi
pop esi
pop ebp
retn 0x8
push 0xffffffff
lea eax [ esi + 0x1 ]
push eax
call sub_409ba7
sub_40a029
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x18 ]
push esi
not eax
mov esi ecx
push edi
mov ecx ebx
test al 0x1
je r-xdata
call sub_4105c1
push 0xffffffff
push eax
mov ecx esi
call sub_409ba7
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
push [ esi + 0x8 ]
call sub_410590
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
mov ecx ebx
call sub_409ecc
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
mov ecx ebx
call sub_409a64
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
jmp r-xdata
sub_40a09d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0xc ]
add eax 0x10
push eax
call sub_41a3e1
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
and [ eax + 0x4 ] 0x0
mov [ eax ] edi
mov [ eax + 0xc ] 0x1
mov [ eax + 0x8 ] esi
pop edi
pop esi
pop ebp
retn 0x8
sub_40a0dc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
test esi esi
jge r-xdata
lea eax [ esi + 0x1 ]
imul eax [ ebp + 0x10 ]
add eax 0x10
push eax
push [ ebp + 0x8 ]
call sub_41aa43
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax + 0x8 ] esi
pop esi
pop ebp
retn 0xc
sub_40a148
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41ac5e
push eax
call sub_401a00
add esp 0x14
pop ebp
retn
sub_40a181
push 0x4
mov eax sub_42a83a
call sub_41a939
push 0xc
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov ecx [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax + 0x8 ] ecx
mov [ ebp + 0x8 ] eax
push r--data
lea eax [ ebp + 0x8 ]
push eax
call sub_41ad31
int3
call sub_40a169
sub_40a1c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
xor edx edx
cmp eax edx
je r-xdata
push edx
push edx
lea eax [ ebp + 0x10 ]
push eax
push 0x800
push [ ecx + 0x8 ]
push edx
push 0x1100
call [ FormatMessageW@IAT ]
test eax eax
jne r-xdata
mov [ eax ] edx
push 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a148
add esp 0x10
push [ ebp + 0x10 ]
call [ LocalFree@IAT ]
xor eax eax
inc eax
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
jmp r-xdata
pop ebp
retn 0xc
sub_40a21d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
cmp eax 0xc
je r-xdata
push 0x8007000e
jmp r-xdata
cmp eax 0x16
je r-xdata
call sub_401fa0
push 0x80070057
jmp r-xdata
cmp eax 0x22
je r-xdata
cmp eax 0x50
je r-xdata
push 0x80004005
sub_40a257
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_40a279
mov edi edi
push ebp
mov ebp esp
movsx ax [ ebp + 0x8 ]
movzx eax ax
push esi
push eax
mov esi ecx
call sub_4098c0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a2af
mov edi edi
push ebp
mov ebp esp
sub esp 0x408
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ecx ]
lea edx [ ebp - 0x408 ]
push edx
push 0x200
lea edx [ ebp - 0x404 ]
push edx
call [ eax + 0xc ]
test eax eax
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push [ ebp - 0x408 ]
lea eax [ ebp - 0x404 ]
push [ ebp + 0x8 ]
push eax
call sub_415cca
jmp r-xdata
push [ ebp - 0x408 ]
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_415d18
mov [ ebp + 0xc ] 0xf020
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn 0x8
sub_40a33b
mov edi edi
push esi
mov esi ecx
push 0x80
lea eax [ esi + 0x14 ]
push eax
push [ esi + 0x114 ]
mov [ esi + 0xc ] 0x1
call sub_40a4da
neg eax
sbb eax eax
neg eax
mov [ esi + 0x10 ] eax
pop esi
retn
sub_40a3ba
push 0x4
mov eax sub_42a7f3
call sub_41a939
push 0x164
call sub_415ff6
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_41aa11
retn
call sub_411567
sub_40a404
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp [ esi + 0xc ] 0x0
jne r-xdata
and [ eax ] 0x0
cmp [ esi + 0x10 ] 0x0
je r-xdata
call sub_40a33b
xor eax eax
mov [ ebx ] ax
push 0xffffffff
lea eax [ esi + 0x14 ]
push eax
push [ ebp + 0xc ]
push ebx
call sub_40a148
add esp 0x10
jmp r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov eax [ esi + 0x10 ]
jmp r-xdata
sub_40a45b
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push sub_40a3ba
mov ecx rw-data
mov edi eax
call sub_416455
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
lea eax [ esi + 0x10 ]
pop esi
retn
call sub_40a39e
sub_40a4a6
mov edi edi
push esi
push edi
call sub_40a45b
mov edi eax
mov esi [ edi ]
test esi esi
je r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ esi ]
mov [ edi ] eax
call sub_40a296
sub_40a4da
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
test ebx ebx
je r-xdata
call sub_40a39e
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
call sub_411cf7
mov eax [ eax + 0xc ]
push [ ebp + 0x8 ]
push eax
call sub_4019c0
pop ecx
pop ecx
test eax eax
jne r-xdata
push edi
movzx edi [ eax ]
lea ecx [ esi - 0x1 ]
cmp ecx edi
jae r-xdata
mov [ ebx ] ax
lea esi [ edi + edi ]
push esi
add eax 0x2
push eax
lea eax [ ecx + ecx ]
push eax
push ebx
call sub_401840
add esp 0x10
xor eax eax
mov [ esi + ebx ] ax
mov eax edi
pop edi
jmp r-xdata
mov edi ecx
pop esi
pop ebx
pop ebp
retn 0xc
sub_40a54d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
cmp eax 0xffffffff
jne r-xdata
push eax
mov ecx esi
call sub_401d60
pop esi
pop ebp
retn 0x4
mov eax [ esi ]
push [ eax - 0x8 ]
push eax
call sub_4026d0
pop ecx
pop ecx
sub_40a577
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call sub_401d10
push [ ebp + 0x8 ]
mov ecx esi
mov edi eax
call sub_401d60
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_40a59c
mov edi edi
push ebp
mov ebp esp
sub esp 0x98
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x90
lea eax [ ebp - 0x94 ]
push 0x0
push eax
call sub_41ae80
add esp 0xc
lea eax [ ebp - 0x98 ]
push eax
mov [ ebp - 0x98 ] 0x94
call [ GetVersionExA@IAT ]
mov ecx [ ebp - 0x4 ]
xor eax eax
cmp [ ebp - 0x88 ] 0x2
sete al
xor ecx ebp
call sub_419730
leave
retn
sub_40a5f6
mov edi edi
push ebx
xor ebx ebx
cmp [ rw-data ] ebx
je r-xdata
push esi
push edi
call sub_40a59c
push r--data
mov [ rw-data ] eax
call [ GetModuleHandleW@IAT ]
mov edi eax
cmp edi ebx
je r-xdata
xor eax eax
cmp [ rw-data ] ebx
pop ebx
setne al
retn
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
mov [ rw-data ] ebx
xor eax eax
jmp r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
pop edi
pop esi
mov [ rw-data ] 0x1
pop ebx
retn
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push r--data
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
push r--data
push r--data
jmp r-xdata
xor eax eax
inc eax
push edi
call esi
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
sub_40a700
mov edi edi
push ebp
mov ebp esp
call sub_40a5f6
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
push esi
push edi
jne r-xdata
pop ebp
jmp [ rw-data ]
mov eax 0x12340042
mov esi [ ebp + 0x8 ]
xor eax eax
cmp [ esi + 0x8 ] eax
jle r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0xc ] eax
jle r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov edi [ GetSystemMetrics@IAT ]
push eax
call edi
cmp [ esi ] eax
jge r-xdata
push 0x1
call edi
cmp [ esi + 0x4 ] eax
jl r-xdata
sub_40a751
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
call sub_40a5f6
test eax eax
je r-xdata
test [ ebp + 0xc ] 0x3
je r-xdata
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
jmp r-xdata
push [ ebp + 0x8 ]
call [ IsIconic@IAT ]
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
leave
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowRect@IAT ]
lea eax [ ebp - 0x2c ]
push eax
push [ ebp + 0x8 ]
call [ GetWindowPlacement@IAT ]
jmp r-xdata
xor eax eax
push [ ebp + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_40a700
jmp r-xdata
test eax eax
je r-xdata
sub_40a7be
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
call sub_40a5f6
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x12340042
push ebx
jne r-xdata
mov esi [ ebp + 0xc ]
push esi
push [ ebp + 0x8 ]
call [ rw-data ]
mov edi eax
xor ecx ecx
cmp edi ecx
je r-xdata
xor eax eax
mov ebx [ ebp + 0xc ]
xor esi esi
cmp ebx esi
je r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] ecx
jne r-xdata
cmp [ ebx ] 0x28
jb r-xdata
pop edi
pop esi
leave
retn 0x8
cmp [ esi ] 0x68
jb r-xdata
push esi
lea eax [ ebp - 0x10 ]
push eax
push esi
push 0x30
call [ SystemParametersInfoA@IAT ]
test eax eax
je r-xdata
push 0x20
lea eax [ esi + 0x28 ]
push eax
push 0xffffffff
push eax
push ecx
push ecx
call [ MultiByteToWideChar@IAT ]
mov [ ebx + 0x4 ] esi
mov [ ebx + 0x8 ] esi
push esi
mov esi [ GetSystemMetrics@IAT ]
call esi
push 0x1
mov [ ebx + 0xc ] eax
call esi
lea edi [ ebx + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor esi esi
inc esi
cmp [ ebx ] 0x68
mov [ ebx + 0x10 ] eax
mov [ ebx + 0x24 ] esi
jb r-xdata
mov eax esi
jmp r-xdata
push 0x20
add ebx 0x28
push ebx
push 0xffffffff
push r--data
push 0x0
push 0x0
call [ MultiByteToWideChar@IAT ]
pop ebx
sub_40a884
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov ebx [ ebp + 0x8 ]
xor eax eax
xor edx edx
push esi
push edi
mov [ ebp - 0x20 ] ax
cmp ebx edx
jne r-xdata
mov edi [ ebp + 0x1c ]
cmp edi edx
jne r-xdata
mov eax 0x80070057
jmp r-xdata
mov ecx [ edi + 0x8 ]
cmp ecx 0x5
jbe r-xdata
mov eax 0x80020008
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x24
mov [ ebp + 0x8 ] edx
cmp [ edi + 0xc ] edx
jbe r-xdata
mov eax 0x8002000e
jmp r-xdata
cmp [ ebp + 0x8 ] ecx
jae r-xdata
mov eax [ edi + 0x4 ]
mov [ ebp + 0x1c ] eax
cmp [ ebp + 0x28 ] 0x0
mov esi 0x80020003
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx ecx
sub edx [ ebp + 0x8 ]
shl eax 0x4
add eax [ edi ]
sub ecx [ ebp + 0x8 ]
lea edx [ ebp + edx * 4 - 0x48 ]
mov esi [ edi ]
add [ ebp + 0x1c ] 0x4
add esi edx
inc [ ebp + 0x8 ]
mov [ ebp + eax * 4 - 0x44 ] esi
mov eax [ ebp + 0x8 ]
add edx 0x10
cmp eax [ edi + 0xc ]
jb r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
lea eax [ ebp + 0x18 ]
mov [ ebp + 0x28 ] eax
mov [ edx ] eax
add eax 0x10
sub edx 0x4
dec ecx
jne r-xdata
mov eax [ ebp + 0x1c ]
mov eax [ eax ]
cmp eax ecx
jae r-xdata
lea eax [ ebp - 0x10 ]
push eax
call [ VariantInit@IAT ]
mov eax [ ebp + 0xc ]
add eax 0x139a
cmp eax 0x12
ja r-xdata
lea eax [ ebp - 0x20 ]
mov [ ebp + 0x20 ] eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantClear@IAT ]
mov eax esi
mov cl [ ebp + 0x18 ]
push 0x2
pop edx
jmp [ eax * 4 + jump_table_40ae04 ]
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x5
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x4c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebx ]
push ebx
call [ eax + 0x48 ]
jmp r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x2
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test dl cl
je r-xdata
test dl cl
je r-xdata
cmp [ edi + 0x8 ] 0x1
je r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x20 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
push ebx
call [ eax + 0x1c ]
mov esi 0x8002000e
jmp r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x64 ]
jmp r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
mov edi [ VariantChangeType@IAT ]
je r-xdata
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x10 ]
mov eax [ ebp - 0x44 ]
cmp [ eax ] 0x3
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x50 ]
mov esi eax
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x44 ]
jmp r-xdata
mov esi [ ebp - 0x44 ]
movzx eax [ esi ]
test eax 0x4000
je r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x3c ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x38 ]
jmp r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x34 ]
jmp r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x30 ]
jmp r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
test cl 0x4
je r-xdata
cmp [ edi + 0x8 ] 0x1
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x24 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x9
mov eax [ eax + 0x8 ]
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x3
je r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
push [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov ecx [ ebp + 0x28 ]
and [ ecx ] 0x0
mov esi [ ebp - 0x34 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
push [ ebp - 0x4 ]
movsd [ edi ] [ esi ]
push [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
push [ ebp - 0xc ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
jmp r-xdata
test cl 0xf
je r-xdata
mov esi [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
push 0x8
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
mov ecx 0x400c
cmp ax cx
jne r-xdata
test al 0xc
jne r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x2c ]
jmp r-xdata
cmp [ edi + 0x8 ] edx
jne r-xdata
mov ecx [ ebp + 0x20 ]
mov esi [ ebp - 0x44 ]
mov eax [ ebx ]
add ecx 0x8
push ecx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ eax + 0x28 ]
jmp r-xdata
mov esi eax
test esi esi
jl r-xdata
push 0x3
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
push [ ebp + 0x18 ]
push ebx
call [ ecx + 0x60 ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call edi
mov esi eax
test esi esi
jl r-xdata
mov eax [ ebp + 0x28 ]
and [ eax ] 0x0
jmp r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
test cl 0xc
je r-xdata
lea eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x20 ]
pop eax
mov [ ecx ] ax
mov ecx 0x4008
cmp ax cx
jne r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x8
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax ecx
jmp r-xdata
mov esi 0x80020005
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov esi [ ebp - 0x44 ]
mov eax [ ebp - 0x40 ]
cmp [ eax ] 0x8
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
je r-xdata
mov eax [ ebp + 0x28 ]
mov [ eax ] 0x1
jmp r-xdata
lea eax [ ebp - 0x10 ]
mov eax [ esi + 0x8 ]
jmp r-xdata
push [ esi + 0x8 ]
call [ VariantClear@IAT ]
mov eax [ esi + 0x8 ]
push 0x3
pop ecx
mov [ eax ] cx
mov eax [ esi + 0x8 ]
add eax 0x8
jmp r-xdata
push esi
call [ VariantClear@IAT ]
push 0x8
pop ecx
lea eax [ esi + 0x8 ]
mov [ esi ] cx
mov eax [ esi + 0x8 ]
jmp r-xdata
mov edx [ ebp + 0x20 ]
mov esi [ ebp - 0x40 ]
mov ecx [ ebx ]
add edx 0x8
push edx
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x6c ]
jmp r-xdata
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jl r-xdata
mov eax [ eax + 0x8 ]
mov ecx [ ebx ]
push eax
sub esp 0x10
mov edi esp
lea esi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push ebx
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
push 0x3
push 0x0
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ VariantChangeType@IAT ]
mov esi eax
test esi esi
jge r-xdata
movzx ecx [ esi ]
test ecx 0x4000
je r-xdata
lea eax [ ebp - 0x10 ]
lea eax [ ebp - 0x10 ]
sub_40ae50
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
jbe r-xdata
xor eax eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
lea edi [ eax + ebx * 4 ]
xor esi esi
add esi 0x4
cmp esi 0x4c
jb r-xdata
mov eax [ esi + rw-data ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x1 ] 0x1
mov [ ecx + ebx * 4 ] eax
push [ esi + rw-data ]
push [ edi ]
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax 0x80020006
jmp r-xdata
inc ebx
cmp ebx [ ebp + 0x10 ]
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x14
sub_40aeb2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_410cd7
mov eax [ ebp + 0x8 ]
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
xor eax eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40af1e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x40 ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
push eax
call [ CallWindowProcW@IAT ]
mov eax [ esi ]
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call [ DefWindowProcW@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40af6b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411cf7
mov eax [ eax + 0x38 ]
test eax eax
je r-xdata
xor eax eax
pop esi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call eax
sub_40af8c
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
push [ ebp + 0xc ]
mov ebx ecx
push [ ebp + 0x8 ]
push [ ebx + 0x20 ]
call sub_4169a9
mov edi eax
test edi edi
je r-xdata
or eax 0xffffffff
push esi
push edi
call [ GetDlgCtrlID@IAT ]
mov esi [ ebp + 0x10 ]
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
pop esi
jmp r-xdata
cmp [ esi ] 0x2c
jb r-xdata
pop edi
pop ebx
leave
retn 0xc
mov eax [ ebx + 0x20 ]
or [ esi + 0x4 ] 0x1
or [ esi + 0x24 ] 0xffffffff
push 0x0
push 0x0
push 0x87
push edi
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] edi
call [ SendMessageW@IAT ]
test eax 0x2000
jne r-xdata
or [ esi + 0x4 ] 0x80000002
sub_40b014
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40afff
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_40b034
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov edx [ ebp + 0x10 ]
mov ecx [ ebp + 0x14 ]
xor eax eax
mov [ ebp + 0x8 ] eax
cmp eax [ ebx ]
je r-xdata
cmp edx [ ebx + 0x4 ]
jne r-xdata
add ebx 0x18
jmp r-xdata
cmp ecx [ ebx + 0x8 ]
jb r-xdata
cmp [ ebx + 0x10 ] 0x0
je r-xdata
cmp ecx [ ebx + 0xc ]
ja r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
pop ebx
pop ebp
retn 0x10
sub_40b076
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
mov esi ecx
mov eax [ esi ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0x10 ]
mov ecx esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ eax + 0x114 ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push [ ebp + 0x10 ]
mov eax [ esi ]
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0x118 ]
mov [ ebp - 0x4 ] eax
sub_40b107
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_416527
cmp [ ebp + 0xc ] 0x0
jne r-xdata
push eax
push 0x0
mov ecx esi
call sub_41650d
push eax
push [ ebp + 0x8 ]
call [ AdjustWindowRectEx@IAT ]
pop esi
pop ebp
retn 0x8
and eax 0xfffffdff
sub_40b1ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b20f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b234
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b259
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b27e
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b2a3
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b2c8
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b2ed
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
pop edi
pop esi
pop ebp
retn 0x18
sub_40b315
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b364
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b389
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b3ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
sub esp 0x10
mov edi esp
push [ ebp + 0x14 ]
lea esi [ ebp + 0x18 ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
pop edi
pop esi
pop ebp
retn 0x20
sub_40b3dc
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
push edi
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x8 ]
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
pop edi
pop esi
pop ebp
retn 0x18
sub_40b41f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
mov ecx [ eax ]
push esi
push edi
sub esp 0x10
mov edi esp
lea esi [ ebp + 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
pop edi
pop esi
pop ebp
retn 0x10
sub_40b441
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push esi
mov ecx [ eax ]
push edi
push [ ebp + 0x18 ]
lea esi [ ebp + 0x8 ]
sub esp 0x10
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebp
retn 0x14
sub_40b4f2
push 0x14
push r--data
call sub_41aefc
xor esi esi
mov [ ebp - 0x20 ] esi
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] esi
cmp eax esi
jne r-xdata
mov [ ebp - 0x4 ] esi
push [ ebp + 0x8 ]
call [ RegisterClassW@IAT ]
movzx eax ax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b54d
mov ax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b54d
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_4113e4
test esi esi
je r-xdata
sub_40b584
push 0x14
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b5e3
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b5e3
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4113e4
cmp esi ebx
je r-xdata
sub_40b618
push 0x14
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetClassInfoExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b677
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b677
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4113e4
cmp esi ebx
je r-xdata
sub_40b6ac
push 0x14
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x34 ]
push [ ebp + 0x30 ]
push [ ebp + 0x2c ]
push [ ebp + 0x28 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateWindowExW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b726
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b726
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4113e4
cmp esi ebx
je r-xdata
sub_40b75b
push 0x14
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ MessageBoxW@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b7bd
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b7bd
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4113e4
cmp esi ebx
je r-xdata
sub_40b7f2
push 0x14
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x20 ] ebx
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] ebx
cmp eax ebx
jne r-xdata
mov [ ebp - 0x4 ] ebx
push [ ebp + 0x8 ]
call [ LoadLibraryA@IAT ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b84b
mov eax [ ebp - 0x1c ]
xor eax eax
jmp r-xdata
call sub_41af41
retn
sub_40b84b
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] ebx
sete al
mov esi eax
cmp esi ebx
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push ebx
call sub_4113e4
cmp esi ebx
je r-xdata
sub_40b90e
mov edi edi
push ebp
mov ebp esp
push 0xffffffff
push [ ebp + 0xc ]
push 0xffffffff
push [ ebp + 0x8 ]
push 0x1
push 0x409
call [ CompareStringW@IAT ]
dec eax
dec eax
pop ebp
retn
sub_40b92e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax 0x7fffffff
cmp esi eax
je r-xdata
mov ecx [ ecx ]
pop esi
cmp ecx eax
je r-xdata
mov edx [ ecx ]
cmp edx eax
je r-xdata
call sub_40a39e
push ecx
call sub_416a43
pop ebp
retn 0x4
mov [ ecx ] esi
cmp edx esi
je r-xdata
sub_40b997
mov edi edi
push esi
mov esi ecx
call sub_410cd7
xor eax eax
mov [ esi ] r--data
mov [ esi + 0x30 ] r--data
mov [ esi + 0x34 ] r--data
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] al
mov [ esi + 0x2c ] eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x38 ] eax
mov [ esi + 0x3c ] eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] eax
mov [ esi + 0x48 ] eax
mov [ esi + 0x4c ] eax
mov [ esi + 0x50 ] eax
mov eax esi
pop esi
retn
sub_40ba1a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x1c ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x24 ]
mov eax [ ebp + 0x18 ]
push [ ebp + 0x20 ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
mov ebx [ ecx ]
sub edi edx
push edi
sub eax esi
push eax
push edx
push esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x20
sub_40ba65
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
push ebx
push esi
push edi
test eax eax
jne r-xdata
mov edi [ eax + 0x20 ]
xor edi edi
jmp r-xdata
push [ ebp + 0x20 ]
mov eax [ ebp + 0x14 ]
push [ ebp + 0x1c ]
mov edx [ eax + 0x4 ]
mov esi [ eax ]
mov ebx [ ecx ]
push edi
mov edi [ eax + 0xc ]
mov eax [ eax + 0x8 ]
sub edi edx
push edi
sub eax esi
push eax
mov eax [ ebp + 0x10 ]
push edx
push esi
or eax 0x40000000
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call [ ebx + 0x5c ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x1c
sub_40bab5
mov edi edi
push ebp
mov ebp esp
push esi
call sub_411d2a
mov esi eax
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
cmp [ ebp + 0x8 ] 0x0
mov esi [ esi + 0x50 ]
je r-xdata
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
pop esi
pop ebp
retn 0x4
test esi esi
je r-xdata
push 0x0
push 0x0
push 0x401
push eax
call [ SendMessageW@IAT ]
push 0x1
call [ GetKeyState@IAT ]
test ax ax
jl r-xdata
mov eax [ esi ]
push 0xffffffff
mov ecx esi
call [ eax + 0x178 ]
sub_40bb0b
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push [ esi + 0x4 ]
call [ GetMenuItemCount@IAT ]
xor edi edi
mov [ ebp + 0x8 ] eax
test eax eax
jle r-xdata
call sub_40a39e
xor eax eax
mov ebx [ ebp + 0xc ]
push edi
mov ecx esi
call sub_40b880
cmp eax ebx
je r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
push [ esi + 0x4 ]
call sub_4166ee
jmp r-xdata
inc edi
cmp edi [ ebp + 0x8 ]
jl r-xdata
push ebx
push eax
call sub_40bb0b
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push edi
mov ecx esi
call sub_40b895
test eax eax
je r-xdata
jmp r-xdata
sub_40bb77
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411cf7
mov eax [ eax + 0x4 ]
cmp [ eax + 0x6c ] 0x1
jne r-xdata
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x7c ]
mov eax [ ebp + 0xc ]
cmp eax 0x1
jne r-xdata
cmp eax 0x3
jne r-xdata
push 0xf
pop eax
jmp r-xdata
cmp eax 0xb
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov edx [ esi ]
push eax
push [ ebp + 0x8 ]
mov ecx esi
call [ edx + 0x80 ]
jmp r-xdata
xor eax eax
pop esi
pop ebp
retn 0x8
sub_40bbcd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop ebp
retn 0x8
call sub_411d2a
mov eax [ eax + 0x48 ]
test eax eax
je r-xdata
test [ eax + 0x4 ] 0x40000000
jne r-xdata
push 0x1
call sub_40bab5
sub_40bbfb
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_411241
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bc43
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_4112b2
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bc8b
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_41130a
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bcd9
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x28 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40a884
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bd35
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x94 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bd83
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0x98 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bdd1
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0x9c ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40be2b
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40be85
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bedf
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xa8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bf39
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xac ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bf93
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40bfed
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c047
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xb8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c0a4
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xbc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c0fe
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c14c
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xc4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c19a
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xc8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c1f4
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xcc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c24e
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x24
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c2b1
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x20 ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xd4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x1c
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c30e
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x14 ]
add esi 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x14 ]
mov eax [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call [ eax + 0xd8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x10
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c362
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xdc ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x14
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c3b9
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe0 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c413
push 0x8
mov eax sub_42a816
call sub_41a939
mov ebx [ ebp + 0x8 ]
push [ ebx - 0x14 ]
add ebx 0xffffffd0
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x1c ]
mov eax [ ebx ]
and [ ebp - 0x4 ] 0x0
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx ebx
movsd [ edi ] [ esi ]
call [ eax + 0xe4 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x18
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c46d
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_411d43
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_411241
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c4b5
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_411d43
and [ ebp - 0x4 ] 0x0
mov ecx esi
call sub_4112b2
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x4
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c4fd
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
mov ecx esi
call sub_41130a
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0xc
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c54b
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
add esi 0xffffffcc
lea ecx [ ebp - 0x14 ]
call sub_411d43
push [ ebp + 0xc ]
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
mov ecx esi
call [ eax + 0xe8 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] 0x0
mov esi eax
je r-xdata
mov eax esi
call sub_41aa11
retn 0x8
push [ ebp - 0x14 ]
push 0x0
call sub_4113e4
sub_40c599
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push [ esi - 0x18 ]
lea ecx [ ebp - 0x8 ]
call sub_411d43
cmp [ ebp - 0x4 ] 0x0
mov eax [ esi - 0x14 ]
mov [ edi ] eax
pop esi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
push [ ebp - 0x8 ]
push 0x0
call sub_4113e4
pop edi
leave
retn 0x8
sub_40c5e8
mov edi edi
push ebp
mov ebp esp
sub esp 0x60
push esi
mov esi ecx
push edi
mov [ ebp - 0x8 ] esi
call sub_41650d
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
test [ ebp - 0x4 ] 0x40000000
je r-xdata
mov edi [ eax + 0x20 ]
jmp r-xdata
push 0x4
push [ esi + 0x20 ]
call [ GetWindow@IAT ]
push [ esi + 0x20 ]
call [ GetParent@IAT ]
jmp r-xdata
push ebx
mov ebx [ GetWindowRect@IAT ]
lea eax [ ebp - 0x38 ]
push eax
push [ esi + 0x20 ]
call ebx
test [ ebp - 0x4 ] 0x40000000
jne r-xdata
push 0x0
push 0x0
push 0x36b
push edi
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
mov edi eax
test edi edi
je r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov esi [ GetClientRect@IAT ]
mov ebx eax
lea eax [ ebp - 0x18 ]
push eax
push ebx
call esi
lea eax [ ebp - 0x28 ]
push eax
push edi
call esi
push 0x2
lea eax [ ebp - 0x28 ]
push eax
push ebx
push edi
call [ MapWindowPoints@IAT ]
test edi edi
je r-xdata
mov edi eax
cmp ecx [ ebp - 0x18 ]
pop ebx
jge r-xdata
sub ebx [ ebp - 0x30 ]
add ebx [ ebp - 0x10 ]
mov ecx ebx
mov [ ebp - 0x60 ] 0x28
test edi edi
jne r-xdata
push 0xfffffff0
push edi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
mov eax [ ebp + 0x8 ]
add eax esi
cmp eax [ ebp - 0xc ]
jle r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x28 ]
push eax
push edi
call ebx
lea eax [ ebp - 0x60 ]
push eax
push 0x2
push edi
call sub_40a751
push eax
call sub_40a7be
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call [ CopyRect@IAT ]
jmp r-xdata
call sub_401890
test eax eax
je r-xdata
xor edi edi
test eax 0x20000000
je r-xdata
cmp esi [ ebp - 0x14 ]
jge r-xdata
mov esi [ ebp - 0x34 ]
sub esi [ ebp - 0x2c ]
add esi [ ebp - 0xc ]
mov ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x28 ]
mov edi [ ebp - 0x30 ]
mov ebx [ ebp - 0x38 ]
add eax ecx
cdq
sub eax edx
mov ecx eax
sub edi ebx
mov eax edi
cdq
sub eax edx
mov edx [ ebp - 0x1c ]
sar eax 0x1
sar ecx 0x1
sub ecx eax
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x34 ]
add edi ecx
mov [ ebp + 0x8 ] eax
mov eax [ ebp - 0x24 ]
add eax edx
cdq
sub eax edx
mov esi eax
mov eax [ ebp + 0x8 ]
cdq
sub eax edx
sar esi 0x1
sar eax 0x1
sub esi eax
cmp edi [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x60 ]
push ecx
push 0x1
push eax
call sub_40a751
push eax
call sub_40a7be
mov esi [ CopyRect@IAT ]
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x28 ]
push eax
call esi
lea eax [ ebp - 0x4c ]
push eax
lea eax [ ebp - 0x18 ]
push eax
call esi
jmp r-xdata
mov eax [ eax + 0x20 ]
push 0x15
push 0xffffffff
push 0xffffffff
push esi
push ecx
mov ecx [ ebp - 0x8 ]
push 0x0
call sub_4165aa
pop edi
pop esi
leave
retn 0x4
mov esi [ ebp - 0x14 ]
sub_40c7a8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x44 ] eax
mov eax [ ecx + 0x3c ]
test al 0x10
je r-xdata
pop ebp
retn 0x4
and eax 0xffffffef
mov [ ecx + 0x3c ] eax
xor eax eax
push eax
push eax
push eax
push [ ecx + 0x20 ]
call [ PostMessageW@IAT ]
sub_40c7d2
push 0x4
mov eax sub_42a83a
call sub_41a939
push 0x54
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_41aa11
retn
call sub_40b997
sub_40c826
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
pop esi
retn
push [ esi + 0xc ]
call [ GetModuleHandleW@IAT ]
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ LoadLibraryW@IAT ]
test eax eax
mov [ esi + 0x4 ] eax
setne al
mov [ esi + 0x8 ] al
sub_40c85a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov ecx [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_40c826
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x10 ] eax
sub_40c889
push 0x14
push r--data
call sub_41aefc
mov esi ecx
and [ ebp - 0x1c ] 0x0
lea eax [ ebp - 0x1c ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x20 ] eax
test eax eax
je r-xdata
call sub_41af41
retn
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x24 ]
push eax
mov ecx esi
call sub_40c85a
mov esi [ esi + 0x10 ]
xor eax eax
test esi esi
setne al
test eax eax
jne r-xdata
call esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c8ec
call sub_40a39e
sub_40c8fd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
pop esi
pop ebp
retn 0x4
push r--data
call sub_40c826
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x14 ] eax
sub_40c92c
push 0x18
push r--data
call sub_41aefc
mov esi ecx
xor edi edi
mov [ ebp - 0x20 ] edi
lea eax [ ebp - 0x20 ]
push eax
call sub_411cf7
push [ eax + 0x80 ]
call sub_4113fb
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x1c ] edi
cmp eax edi
jne r-xdata
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x28 ]
push eax
mov ecx esi
call sub_40c8fd
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp eax edi
setne cl
cmp ecx edi
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0x8 ]
call eax
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c9a1
mov eax [ ebp - 0x1c ]
call sub_40a39e
call sub_41af41
retn 0x4
sub_40c9a1
cmp [ ebp - 0x24 ] 0x2
je r-xdata
retn
xor eax eax
cmp [ ebp - 0x1c ] eax
sete al
mov esi eax
test esi esi
je r-xdata
xor edi edi
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push edi
call [ SetLastError@IAT ]
push [ ebp - 0x20 ]
push 0x0
call sub_4113e4
test esi esi
je r-xdata
sub_40c9f7
mov edi edi
push esi
push sub_40a3ba
mov ecx rw-data
call sub_416455
mov esi eax
test esi esi
jne r-xdata
call [ GetMessageTime@IAT ]
mov [ esi + 0x68 ] eax
call [ GetMessagePos@IAT ]
movsx ecx ax
shr eax 0x10
cwde
mov [ esi + 0x70 ] eax
mov [ esi + 0x6c ] ecx
lea eax [ esi + 0x58 ]
pop esi
retn
call sub_40a39e
sub_40ca35
mov edi edi
push esi
mov esi ecx
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
push [ eax + 0x64 ]
mov edx [ esi ]
push [ eax + 0x60 ]
mov ecx esi
push [ eax + 0x5c ]
call [ edx + 0x118 ]
pop esi
retn
call sub_40a39e
sub_40ca67
push 0x0
mov eax sub_42aea5
call sub_41a939
call sub_411d2a
mov esi eax
cmp [ esi + 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_41aa11
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_416956
call sub_409941
push 0x60
mov ebx eax
call sub_409958
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x20
push sub_416f81
push sub_40c7ff
push r--data
call sub_41755f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x14 ] eax
call sub_409941
sub_40cadb
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push 0x1
call sub_40ca67
push [ ebp + 0x8 ]
mov esi eax
mov ecx esi
call sub_4175e8
mov edi eax
push esi
mov ecx edi
call sub_4165e8
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
sub_40cb07
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_40ca67
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_416bbe
sub_40cb28
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
push ebx
push 0x1
call sub_40ca67
mov ebx eax
push esi
push edi
mov ecx ebx
mov [ esi + 0x20 ] edi
call sub_40b97e
push ebx
mov ecx esi
call sub_4165e8
xor eax eax
inc eax
pop ebx
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x4
sub_40cb64
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x20 ]
test edi edi
je r-xdata
and [ esi + 0x50 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_40ca67
test eax eax
je r-xdata
and [ esi + 0x20 ] 0x0
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_416c2c
sub_40cb94
mov edi edi
push esi
push sub_40a3ba
mov ecx rw-data
call sub_416455
mov esi eax
test esi esi
jne r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
je r-xdata
call sub_40a39e
cmp [ esi + 0x14 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
and [ esi + 0x14 ] 0x0
xor eax eax
pop esi
retn
push eax
call [ UnhookWindowsHookEx@IAT ]
and [ esi + 0x28 ] 0x0
sub_40cbe1
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x2c ]
and [ esi + 0x4c ] 0x0
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push 0x0
push 0x0
push eax
call [ ecx + 0xc ]
mov ecx esi
pop esi
jmp sub_40ca35
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40cc1e
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push ebx
push esi
push edi
mov esi ecx
call sub_40f65e
mov edi eax
xor ebx ebx
cmp edi ebx
je r-xdata
mov ecx [ esi + 0x48 ]
cmp ecx ebx
je r-xdata
cmp [ edi + 0x20 ] esi
jne r-xdata
mov ecx [ esi + 0x4c ]
xor ebx ebx
inc ebx
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x50 ]
mov [ esi + 0x48 ] ebx
cmp [ edi + 0x24 ] esi
jne r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] bl
jne r-xdata
and [ esi + 0x4c ] 0x0
test [ esi + 0x3c ] bl
je r-xdata
mov eax [ ecx ]
push ebx
call [ eax + 0x4 ]
mov [ edi + 0x24 ] ebx
mov [ edi + 0x20 ] ebx
call sub_411cf7
cmp edi [ eax + 0x4 ]
jne r-xdata
mov eax [ esi + 0x20 ]
mov edi [ GetWindowLongW@IAT ]
push 0xfffffffc
push eax
call edi
mov ecx esi
mov ebx eax
call sub_40ca35
mov eax [ esi + 0x20 ]
push 0xfffffffc
push eax
call edi
cmp eax ebx
jne r-xdata
call sub_411d2a
mov edi [ eax + 0x3c ]
test edi edi
je r-xdata
push ebx
call sub_412078
call sub_41103b
test eax eax
je r-xdata
mov ecx esi
call sub_40cb64
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
pop ebx
leave
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov eax [ eax ]
test eax eax
je r-xdata
cmp [ edi + 0x20 ] 0x0
je r-xdata
push eax
push 0xfffffffc
push [ esi + 0x20 ]
call [ SetWindowLongW@IAT ]
push 0x30
lea eax [ ebp - 0x30 ]
push 0x0
push eax
call sub_41ae80
mov eax [ esi + 0x20 ]
add esp 0xc
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x433
push [ edi + 0x20 ]
mov [ ebp - 0x30 ] 0x2c
mov [ ebp - 0x2c ] ebx
call [ SendMessageW@IAT ]
sub_40cd31
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
xor edi edi
cmp eax edi
jne r-xdata
push edi
call sub_40ca67
cmp eax edi
jne r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
push [ esi + 0x20 ]
lea ecx [ eax + 0x1c ]
call sub_416bbe
call sub_40a39e
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x50 ] edi
jne r-xdata
cmp [ esi + 0x50 ] edi
je r-xdata
mov eax [ esi + 0x20 ]
cmp eax edi
jne r-xdata
pop edi
pop esi
retn
mov ecx [ esi + 0x50 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
push eax
call [ DestroyWindow@IAT ]
jmp r-xdata
mov eax edi
mov edi eax
sub_40cd90
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov esi ecx
push sub_40a3ba
mov ecx rw-data
mov [ ebp - 0xc ] eax
call sub_416455
test eax eax
jne r-xdata
mov eax [ eax + 0x5c ]
lea ecx [ ebp - 0xc ]
push ecx
sub eax 0x132
push 0x0
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
push 0x19
mov ecx esi
call [ eax + 0x110 ]
pop esi
leave
retn 0x8
call sub_40a39e
sub_40cde1
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ GetDlgItem@IAT ]
mov edi [ GetTopWindow@IAT ]
mov esi eax
test esi esi
je r-xdata
push [ ebp + 0x8 ]
call edi
jmp r-xdata
push esi
call edi
test eax eax
je r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
push esi
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40cde1
test eax eax
jne r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40cde1
test eax eax
jne r-xdata
pop edi
pop esi
pop ebp
retn 0xc
call sub_40cb07
test eax eax
jne r-xdata
call sub_40cadb
jmp r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
sub_40ce5a
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ edi ]
jmp r-xdata
test esi esi
jne r-xdata
push esi
call sub_40cb07
test eax eax
je r-xdata
xor eax eax
cmp esi [ ebp + 0x8 ]
je r-xdata
mov edx [ eax ]
push edi
mov ecx eax
call [ edx + 0x108 ]
test eax eax
jne r-xdata
push esi
call [ GetParent@IAT ]
mov esi eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_40cea0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
mov edx [ esi ]
push [ eax + 0x64 ]
mov ecx esi
push [ eax + 0x60 ]
push [ eax + 0x5c ]
call [ edx + 0x120 ]
pop esi
pop ebp
retn 0x4
call sub_40a39e
sub_40cedb
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
mov ecx esi
call sub_40ca35
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
call [ eax + 0x90 ]
test eax eax
jne r-xdata
pop esi
retn 0x4
sub_40cf00
mov edi edi
push ebx
push esi
push edi
mov ebx ecx
call sub_41650d
test eax 0x40000000
jne r-xdata
mov ecx ebx
call sub_40ca35
neg eax
sbb eax eax
neg eax
call sub_401890
mov edi eax
test edi edi
je r-xdata
mov esi [ GetKeyState@IAT ]
push 0x10
call esi
test ax ax
jl r-xdata
push 0x11
call esi
test ax ax
jl r-xdata
push 0x12
call esi
test ax ax
jl r-xdata
push 0x0
push 0xe146
push 0x111
push [ edi + 0x20 ]
call [ SendMessageW@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn 0x4
sub_40cf6c
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
cmp [ esi + 0x24 ] 0x0
jne r-xdata
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp + 0xc ]
mov ecx esi
push [ ebp + 0x8 ]
call [ eax + 0xec ]
test eax eax
jge r-xdata
call sub_40ca35
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx esi
jmp r-xdata
pop esi
leave
retn 0x8
sub_40cfaa
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40ca35
push 0x0
call sub_40cea0
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0xc
sub_40cfd0
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push ebx
push esi
push edi
mov edi [ PeekMessageW@IAT ]
mov ebx ecx
mov esi 0x121
jmp r-xdata
push 0x1
push esi
push esi
push 0x0
lea eax [ ebp - 0x1c ]
push eax
call edi
test eax eax
jne r-xdata
lea eax [ ebp - 0x1c ]
push eax
call [ DispatchMessageW@IAT ]
mov ecx ebx
call sub_40ca35
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_40d012
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
mov esi ecx
mov ecx [ ebp + 0xc ]
push eax
call sub_40cea0
test eax eax
je r-xdata
mov ecx esi
call sub_40ca35
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40d03b
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
call sub_411cf7
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40c8fd
cmp [ eax ] edi
je r-xdata
mov eax [ ebp + 0xc ]
and eax 0x3fc0
cmp eax [ ebp + 0xc ]
jne r-xdata
push [ ebp + 0x8 ]
call sub_40c9d7
test eax eax
je r-xdata
mov eax edi
pop edi
leave
retn 0x8
call sub_411cf7
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40c889
mov edi 0x3fc0
mov edi [ ebp + 0xc ]
jmp r-xdata
sub_40d094
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40d0c6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40d0f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x24 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d138
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x28 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d178
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x2c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d1b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x30 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d1f8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x34 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d238
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x38 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d278
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x3c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d2b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x40 ]
sub_40d301
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x44 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d341
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40d373
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40d3a5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x1c ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x50 ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d3e5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x54 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x18
sub_40d418
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
xor ecx ecx
push esi
push edi
cmp eax ecx
jne r-xdata
cmp [ ebp + 0xc ] ecx
jne r-xdata
mov eax 0x80010108
jmp r-xdata
cmp [ ebp + 0x10 ] ecx
je r-xdata
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x24
cmp [ ebp + 0x14 ] ecx
je r-xdata
cmp [ ebp + 0x18 ] ecx
je r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0x18 ]
lea esi [ ebp + 0x1c ]
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
push [ ebp + 0xc ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x58 ]
sub_40d471
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x20 ]
mov ecx [ eax ]
sub esp 0x10
mov edi esp
push [ ebp + 0xc ]
lea esi [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x5c ]
mov eax 0x80004003
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x1c
sub_40d4b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax 0x80010108
jmp r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x60 ]
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x10
sub_40d4ec
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push esi
push edi
test eax eax
jne r-xdata
mov ecx [ eax ]
sub esp 0x10
mov edi esp
lea esi [ ebp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
movsd [ edi ] [ esi ]
call [ ecx + 0x64 ]
mov eax 0x80010108
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x14
sub_40d553
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x28 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x24 ]
mov ecx [ eax ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x18 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x24
sub_40d58d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x1c ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x18 ]
mov ecx [ eax ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x14 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x18
sub_40d5be
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0x8 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x8
sub_40d5e3
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
mov eax [ eax + 0x8 ]
push [ ebp + 0x10 ]
mov ecx [ eax ]
push [ ebp + 0xc ]
push eax
call [ ecx + 0x10 ]
mov eax 0x80010108
jmp r-xdata
pop ebp
retn 0x10
sub_40d63e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
test [ ebp + 0x10 ] 0x10000000
jne r-xdata
leave
retn 0xc
push esi
mov esi [ ebp + 0x8 ]
mov ecx esi
call sub_41650d
test eax 0x50000000
jne r-xdata
pop esi
lea eax [ ebp - 0x10 ]
push eax
push [ esi + 0x20 ]
call [ GetWindowRect@IAT ]
mov eax [ ebp + 0xc ]
mov ecx [ eax ]
cmp ecx [ ebp - 0x10 ]
jne r-xdata
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
push 0x4
mov ecx esi
call sub_40d623
test eax eax
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x124 ]
test eax eax
je r-xdata
mov ecx eax
call sub_416568
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_40c5e8
sub_40d6b4
push 0x38
mov eax sub_42a87c
call sub_41a96c
push sub_40a3ba
mov ecx rw-data
call sub_416455
mov ebx eax
xor eax eax
xor edx edx
cmp ebx edx
setne al
mov [ ebp - 0x18 ] ebx
cmp eax edx
jne r-xdata
lea eax [ ebx + 0x58 ]
push 0x7
mov esi eax
pop ecx
lea edi [ ebp - 0x44 ]
[ edi ] [ esi ]
mov ecx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
mov [ eax ] ecx
mov eax [ ebp + 0x14 ]
mov [ ebx + 0x60 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebx + 0x5c ] edi
mov [ ebx + 0x64 ] eax
mov [ ebp - 0x4 ] edx
cmp edi 0x2
jne r-xdata
call sub_40a39e
and [ ebp + 0x8 ] 0x0
cmp edi 0x110
jne r-xdata
cmp [ esi + 0x4c ] edx
je r-xdata
push [ ebp + 0x18 ]
mov eax [ esi ]
push [ ebp + 0x14 ]
mov ecx esi
push edi
call [ eax + 0x110 ]
mov [ ebp + 0x18 ] eax
cmp edi 0x110
jne r-xdata
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40b9dc
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push edx
call [ eax + 0x60 ]
mov eax [ ebp + 0x18 ]
push 0x7
lea edi [ ebx + 0x58 ]
pop ecx
lea esi [ ebp - 0x44 ]
[ edi ] [ esi ]
call sub_41aa11
retn 0x14
push [ ebp + 0x8 ]
lea eax [ ebp - 0x28 ]
push eax
push esi
call sub_40d63e
jmp r-xdata
sub_40d7a7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x360
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40cb07
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ DefWindowProcW@IAT ]
cmp [ eax + 0x20 ] esi
jne r-xdata
pop ebp
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push eax
call sub_40d6b4
jmp r-xdata
pop esi
sub_40d7f4
push 0x4
mov eax sub_42aa04
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x20 ] 0x0
je r-xdata
mov ecx [ esi + 0x4c ]
test ecx ecx
je r-xdata
cmp esi rw-data
je r-xdata
mov eax [ esi + 0x50 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp esi rw-data
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_410cff
call sub_41aa11
retn
cmp [ eax + 0x28 ] esi
jne r-xdata
cmp esi rw-data
je r-xdata
and [ eax + 0x28 ] 0x0
cmp esi rw-data
je r-xdata
call sub_40cd31
sub_40d869
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_40ca35
lea eax [ ebp + 0xc ]
push eax
call sub_40cea0
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40d896
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
mov esi [ esi + 0x4 ]
push 0x1
push esi
push [ edi + 0x20 ]
call sub_40cde1
test eax eax
je r-xdata
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
mov ecx edi
call sub_40ca35
push 0x0
mov ecx eax
call sub_40cea0
test eax eax
jne r-xdata
mov ecx [ eax + 0x74 ]
cmp ecx [ edi + 0x20 ]
jne r-xdata
call sub_40a39e
pop edi
pop esi
pop ebp
retn 0x8
mov eax [ edi ]
mov ecx edi
call [ eax + 0x6c ]
push [ eax + 0x78 ]
call sub_4166da
jmp r-xdata
push [ esi + 0x8 ]
push eax
call sub_40bb0b
test eax eax
je r-xdata
test eax eax
je r-xdata
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0x10 ]
jmp r-xdata
sub_40d91f
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
push edi
mov edi [ GetParent@IAT ]
push eax
jmp r-xdata
call edi
push eax
call sub_40cadb
mov esi eax
test esi esi
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x128 ]
test eax eax
jne r-xdata
pop edi
pop esi
retn
mov eax esi
jmp r-xdata
push [ esi + 0x20 ]
sub_40d95e
mov edi edi
push esi
mov esi ecx
test esi esi
je r-xdata
xor eax eax
pop esi
retn
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi ]
call [ eax + 0x128 ]
test eax eax
jne r-xdata
test esi esi
je r-xdata
mov ecx esi
call sub_40d91f
mov esi eax
mov eax esi
pop esi
retn
mov ecx esi
jmp r-xdata
call sub_40d91f
test eax eax
jne r-xdata
mov esi eax
mov ecx eax
sub_40d99f
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi [ GetTopWindow@IAT ]
call edi
jmp r-xdata
mov esi eax
test esi esi
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
pop edi
pop esi
pop ebp
retn 0x18
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call [ SendMessageW@IAT ]
push esi
call sub_40cb07
test eax eax
je r-xdata
push 0x2
push esi
call [ GetWindow@IAT ]
push esi
call edi
test eax eax
je r-xdata
cmp [ ebp + 0x18 ] 0x0
je r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ eax + 0x20 ]
push eax
call sub_40d6b4
jmp r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_40d99f
sub_40da1e
push 0x54
mov eax sub_42a89f
call sub_41a939
push 0x0
call sub_40ca67
test eax eax
jne r-xdata
mov edi [ ebp + 0x8 ]
lea esi [ eax + 0x1c ]
push edi
mov ecx esi
call sub_416bbe
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp + 0xc ]
mov ecx eax
call sub_40cea0
push edi
call [ GetParent@IAT ]
push eax
mov ecx esi
call sub_416bbe
test eax eax
je r-xdata
call sub_41aa11
retn 0x8
mov eax [ eax + 0x4c ]
test eax eax
je r-xdata
push edi
lea ecx [ eax + 0x24 ]
call sub_416bbe
mov esi eax
test esi esi
je r-xdata
push edi
lea ecx [ ebp - 0x60 ]
call sub_40aeb2
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x60 ]
mov [ ebp - 0x10 ] esi
call sub_40cea0
and [ ebp - 0x40 ] 0x0
xor ecx ecx
test eax eax
setne cl
or [ ebp - 0x4 ] 0xffffffff
mov esi ecx
lea ecx [ ebp - 0x60 ]
call sub_40d7f4
mov eax esi
jmp r-xdata
sub_40dabe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
push 0x0
push [ ebp + 0xc ]
call sub_40da1e
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_40ca35
sub_40daee
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x4 ]
mov esi ecx
call sub_40da1e
test eax eax
je r-xdata
mov ecx esi
call sub_40ca35
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_40db1a
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] eax
mov [ esi ] r--data
mov [ esi + 0x4 ] r--data
mov [ esi + 0x10 ] r--data
call sub_41104b
mov eax esi
pop esi
retn 0x4
sub_40db47
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx [ ebp + 0xc ]
cmp edx [ ecx ]
jne r-xdata
xor eax eax
pop ebp
retn
mov edx [ eax + 0x4 ]
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov edx [ eax + 0x8 ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov eax [ eax + 0xc ]
cmp eax [ ecx + 0xc ]
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40db9b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
cmp [ eax + 0x4 ] 0x0
jne r-xdata
cmp [ eax + 0x8 ] 0xc0
jne r-xdata
cmp [ eax + 0xc ] 0x46000000
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x4
sub_40dbcb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push ebx
push esi
push edi
je r-xdata
mov eax 0x80070057
mov esi [ ebp + 0xc ]
test esi esi
je r-xdata
mov ebx [ ebp + 0x14 ]
test ebx ebx
jne r-xdata
push [ ebp + 0x10 ]
and [ ebx ] 0x0
call sub_40db9b
test eax eax
je r-xdata
mov eax 0x80004003
jmp r-xdata
mov edi [ esi + 0x8 ]
test edi edi
jne r-xdata
mov esi [ esi + 0x4 ]
add esi [ ebp + 0x8 ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
mov [ ebx ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
mov eax [ esi ]
xor ecx ecx
test eax eax
sete cl
mov [ ebp + 0xc ] ecx
test ecx ecx
jne r-xdata
mov eax 0x80004002
jmp r-xdata
cmp edi 0x1
je r-xdata
push [ ebp + 0x10 ]
push eax
call sub_40db47
pop ecx
pop ecx
test eax eax
je r-xdata
push [ esi + 0x4 ]
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call edi
test eax eax
je r-xdata
add esi 0xc
cmp [ ebp + 0xc ] 0x0
jne r-xdata
test eax eax
jl r-xdata
sub_40dcbf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
dec [ ecx + 0x14 ]
push esi
mov esi [ ecx + 0x14 ]
jne r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
test ecx ecx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x70 ]
sub_40dcf9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40dc88
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_40dd6d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40d7f4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_40dd8e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0xc ]
cmp [ esi ] 0x1
push edi
mov edi ecx
jne r-xdata
push 0x0
push [ esi + 0x14 ]
call sub_40da1e
test eax eax
jne r-xdata
push [ esi + 0x14 ]
call sub_4166ee
test eax eax
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
mov ecx edi
call sub_40ca35
mov edx [ eax ]
push esi
mov ecx eax
call [ edx + 0xc ]
jmp r-xdata
sub_40ddd0
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0xc ]
push [ eax + 0x8 ]
mov esi ecx
call sub_40da1e
test eax eax
je r-xdata
mov ecx esi
call sub_40ca35
mov eax [ ebp + 0xc ]
jmp r-xdata
pop esi
pop ebp
retn 0x8
sub_40ddfc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
push 0x0
push [ eax + 0xc ]
mov esi ecx
call sub_40da1e
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
mov ecx esi
call sub_40ca35
sub_40de21
mov edi edi
push ebp
mov ebp esp
push esi
push 0xc
call sub_416a43
push sub_40d60e
mov ecx rw-data
call sub_416095
mov esi eax
test esi esi
jne r-xdata
cmp [ esi + 0x8 ] 0x0
jne r-xdata
call sub_40a39e
push 0xc
call sub_416ab5
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ esi + 0x8 ]
push r--data
call sub_40b7f2
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
jne r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ esi + 0x8 ] eax
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
and [ esi + 0x4 ] 0x0
jmp r-xdata
pop esi
pop ebp
retn 0x10
sub_40dea1
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
movzx edi ax
shr eax 0x10
xor ebx ebx
mov esi ecx
mov [ ebp + 0x8 ] eax
cmp [ ebp + 0xc ] ebx
jne r-xdata
push sub_40a3ba
mov ecx rw-data
call sub_416455
cmp eax ebx
jne r-xdata
cmp edi ebx
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ esi + 0x20 ]
je r-xdata
call sub_40a39e
lea ecx [ ebp - 0x2c ]
call sub_40b0bc
mov eax [ esi ]
push ebx
lea ecx [ ebp - 0x2c ]
push ecx
push 0xffffffff
push edi
mov ecx esi
mov [ ebp - 0x28 ] edi
call [ eax + 0xc ]
cmp [ ebp - 0x4 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
push ebx
push [ ebp + 0xc ]
call sub_40da1e
test eax eax
jne r-xdata
mov [ ebp + 0x8 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
cmp edi ebx
je r-xdata
mov eax [ esi ]
push ebx
push ebx
push [ ebp + 0x8 ]
mov ecx esi
push edi
call [ eax + 0xc ]
sub_40df3a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi [ ebp + 0xc ]
mov ebx [ esi ]
push edi
push ebx
mov edi ecx
call [ GetDlgCtrlID@IAT ]
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
push sub_40a3ba
mov ecx rw-data
mov [ ebp + 0xc ] eax
call sub_416455
test eax eax
jne r-xdata
mov eax [ eax + 0x13c ]
cmp eax [ edi + 0x20 ]
jne r-xdata
call sub_40a39e
push [ ebp + 0x10 ]
push ebx
call sub_40da1e
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
push 0x0
lea ecx [ ebp - 0xc ]
push ecx
movzx ecx [ ebp + 0xc ]
or ecx 0x4e0000
push ecx
push [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ edi ]
mov ecx edi
mov [ ebp - 0x8 ] esi
call [ eax + 0xc ]
pop edi
pop esi
pop ebx
leave
retn 0xc
sub_40dfbf
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40cb07
test eax eax
je r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
mov ecx eax
call sub_40dd56
test eax eax
je r-xdata
push 0x4
push esi
call [ GetWindow@IAT ]
push esi
call [ GetParent@IAT ]
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ eax + 0x20 ]
jmp r-xdata
sub_40e009
test ecx ecx
je r-xdata
xor eax eax
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
push esi
mov esi eax
push esi
jmp r-xdata
call sub_40dfbf
test eax eax
jne r-xdata
mov esi eax
push eax
push esi
call sub_40cadb
pop esi
retn
sub_40e031
mov edi edi
push esi
mov esi ecx
call sub_411cf7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_41650d
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
mov ecx esi
pop esi
jmp sub_40ca35
push 0x1
push 0x1
push 0x0
push 0x0
push 0x15
push [ esi + 0x20 ]
call sub_40d99f
mov ecx rw-data
call sub_415d90
sub_40e079
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411cf7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov ecx esi
call sub_41650d
test eax 0x40000000
jne r-xdata
cmp [ eax + 0x20 ] esi
jne r-xdata
pop esi
pop ebp
retn 0x4
call sub_40c9f7
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_40d99f
push [ ebp + 0x8 ]
mov ecx eax
call sub_412183
sub_40e0c9
mov edi edi
push esi
mov esi ecx
call sub_401890
cmp eax esi
jne r-xdata
mov ecx esi
call sub_41650d
test eax 0x40000000
jne r-xdata
mov ecx rw-data
call sub_415dd6
mov ecx esi
call sub_40ca35
pop esi
retn 0x8
call sub_40c9f7
push 0x1
push 0x1
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ esi + 0x20 ]
call sub_40d99f
sub_40e114
push 0x14
mov eax sub_42a8c4
call sub_41a96c
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
jne r-xdata
push 0x18
mov [ esi ] edi
mov [ ebp - 0x14 ] 0x8007000e
mov [ ebp - 0x4 ] edi
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] 0x1
cmp ecx edi
je r-xdata
mov eax 0x80004003
jmp r-xdata
xor eax eax
jmp r-xdata
push edi
call sub_40db1a
jmp r-xdata
call sub_41aa11
retn 0x4
cmp eax edi
je r-xdata
mov [ esi ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x14 ] edi
sub_40e186
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
mov edi [ ebp + 0x8 ]
mov ecx edi
call sub_41650d
test eax 0x40000000
jne r-xdata
pop edi
leave
retn 0xc
push ebx
mov ecx edi
call sub_40e009
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
push esi
mov esi [ ebp + 0x10 ]
test esi esi
je r-xdata
mov eax [ edi + 0x20 ]
mov [ ebp - 0x8 ] eax
test esi esi
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindow@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
and [ ebp - 0x4 ] esi
jmp r-xdata
mov ecx esi
call sub_40e009
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0xc ]
push 0x36e
push [ ebx + 0x20 ]
call [ SendMessageW@IAT ]
pop esi
sub_40e1fe
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0xfffffffe
push esi
jne r-xdata
xor eax eax
cmp [ ebp + 0x10 ] 0x201
je r-xdata
mov ecx [ ebp + 0x8 ]
call sub_40e009
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0x207
je r-xdata
push [ eax + 0x20 ]
call [ GetLastActivePopup@IAT ]
push eax
call sub_40cadb
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x10 ] 0x204
jne r-xdata
call [ GetForegroundWindow@IAT ]
push eax
call sub_40cadb
cmp esi eax
je r-xdata
mov ecx esi
call sub_416568
test eax eax
je r-xdata
push [ esi + 0x20 ]
call [ SetForegroundWindow@IAT ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40e276
push 0x40
mov eax sub_42a8df
call sub_41a96c
mov edi [ ebp + 0x8 ]
mov esi r--data
push esi
push edi
call [ GetPropW@IAT ]
and [ ebp - 0x14 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0xc ]
xor ebx ebx
inc ebx
sub eax 0x6
je r-xdata
push [ ebp + 0x14 ]
call sub_40cadb
push edi
mov esi eax
call sub_40cadb
push esi
push [ ebp + 0x10 ]
push eax
call sub_40e186
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_41aa11
retn 0x10
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
push edi
call sub_40cadb
mov ecx [ ebp + 0x14 ]
shr ecx 0x10
push ecx
movsx ecx [ ebp + 0x14 ]
push ecx
push eax
call sub_40e1fe
xor ebx ebx
test eax eax
sete bl
jmp r-xdata
sub eax 0x62
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x18 ]
push 0xfffffffc
push edi
call [ SetWindowLongW@IAT ]
push esi
push edi
call [ RemovePropW@IAT ]
push esi
call [ GlobalFindAtomW@IAT ]
movzx eax ax
push eax
call [ GlobalDeleteAtom@IAT ]
jmp r-xdata
sub eax 0x8e
jne r-xdata
push edi
call sub_40cadb
mov esi eax
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40b9dc
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x110
push edi
push [ ebp - 0x18 ]
call [ CallWindowProcW@IAT ]
push [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x30 ]
push eax
push esi
call sub_40d63e
sub_40e388
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x48 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x40 ] eax
lea eax [ ebp - 0x4c ]
push eax
push [ ebp - 0x1c ]
call sub_40f69a
cmp [ ebp - 0x1c ] 0x0
mov [ ebp - 0x14 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x1c ]
call sub_40a296
sub_40e3c3
push 0x248
mov eax sub_42a905
call sub_41a9a2
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0xc ]
push sub_40a3ba
mov ecx rw-data
mov [ ebp - 0x21c ] esi
call sub_416455
mov edi eax
xor eax eax
test edi edi
setne al
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x3
je r-xdata
call sub_40a39e
mov eax [ esi ]
mov esi [ edi + 0x14 ]
mov [ ebp - 0x214 ] eax
call sub_411cf7
movzx eax [ eax + 0x14 ]
mov [ ebp - 0x218 ] eax
test esi esi
jne r-xdata
push esi
push ebx
push [ ebp + 0x8 ]
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
jmp r-xdata
push [ esi + 0x1c ]
lea ecx [ ebp - 0x224 ]
call sub_411d43
and [ ebp - 0x4 ] 0x0
push ebx
mov ecx esi
call sub_40cb28
mov eax [ esi ]
mov ecx esi
call [ eax + 0x50 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xf8 ]
mov esi sub_40d7a7
push esi
push 0xfffffffc
push ebx
mov [ ebp - 0x214 ] eax
call [ SetWindowLongW@IAT ]
cmp eax esi
je r-xdata
mov ecx [ ebp - 0x214 ]
test [ ecx + 0x20 ] 0x40000000
jne r-xdata
call sub_41aa25
retn 0xc
and [ edi + 0x14 ] 0x0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x220 ] 0x0
je r-xdata
mov ecx [ ebp - 0x214 ]
mov [ ecx ] eax
push [ ebp - 0x21c ]
push ebx
push 0x3
push [ edi + 0x28 ]
call [ CallNextHookEx@IAT ]
cmp [ ebp - 0x218 ] 0x0
mov esi eax
je r-xdata
test eax eax
jne r-xdata
push [ ebp - 0x224 ]
push 0x0
call sub_4113e4
jmp r-xdata
mov eax esi
push [ edi + 0x28 ]
call [ UnhookWindowsHookEx@IAT ]
and [ edi + 0x28 ] 0x0
cmp [ rw-data ] si
jne r-xdata
push 0xffffffe0
push ebx
call [ GetClassLongW@IAT ]
movzx eax ax
cmp ax [ rw-data ]
jne r-xdata
push 0x30
pop esi
push esi
push eax
lea eax [ ebp - 0x254 ]
push eax
call sub_41ae80
lea eax [ ebp - 0x254 ]
mov [ ebp - 0x254 ] esi
push eax
mov esi r--data
push esi
push 0x0
call sub_40b618
add esp 0x18
mov [ rw-data ] ax
test ax ax
je r-xdata
push 0xfffffffc
push ebx
call [ GetWindowLongW@IAT ]
mov [ ebp - 0x214 ] eax
test eax eax
je r-xdata
jmp r-xdata
push 0x100
lea eax [ ebp - 0x210 ]
push eax
push ebx
call [ GetClassNameW@IAT ]
test eax eax
je r-xdata
mov esi r--data
push esi
push ebx
call [ GetPropW@IAT ]
test eax eax
jne r-xdata
xor eax eax
mov [ ebp - 0x12 ] ax
lea eax [ ebp - 0x210 ]
push esi
push eax
call sub_41b0ec
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp - 0x214 ]
push esi
push ebx
call [ SetPropW@IAT ]
push esi
push ebx
call [ GetPropW@IAT ]
cmp eax [ ebp - 0x214 ]
jne r-xdata
push esi
call [ GlobalAddAtomW@IAT ]
push sub_40e276
push 0xfffffffc
push ebx
call [ SetWindowLongW@IAT ]
sub_40e5e3
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push sub_40a3ba
mov ecx rw-data
call sub_416455
mov esi eax
test esi esi
jne r-xdata
mov edi [ ebp + 0x8 ]
cmp [ esi + 0x14 ] edi
je r-xdata
call sub_40a39e
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x28 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] edi
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_40e3c3
push 0x5
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x28 ] eax
test eax eax
jne r-xdata
call sub_40a366
sub_40e63d
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi ecx
test edi edi
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x24 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x28 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x2c ]
mov [ ebp - 0xc ] edi
mov [ ebp - 0x28 ] eax
call sub_411cf7
mov eax [ eax + 0x8 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp + 0x30 ]
lea ecx [ ebp - 0x30 ]
mov [ ebp - 0x30 ] eax
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
test eax eax
jne r-xdata
push 0xffffffff
push edi
call sub_415d67
test eax eax
jne r-xdata
push esi
call sub_40e5e3
push [ ebp - 0x30 ]
push [ ebp - 0x2c ]
push [ ebp - 0x28 ]
push [ ebp - 0x24 ]
push [ ebp - 0x20 ]
push [ ebp - 0x1c ]
push [ ebp - 0x18 ]
push [ ebp - 0x14 ]
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
call sub_40b6ac
add esp 0x30
mov edi eax
call sub_40cb94
test eax eax
jne r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
xor eax eax
jmp r-xdata
call sub_40a39e
xor eax eax
test edi edi
setne al
mov eax [ esi ]
mov ecx esi
call [ eax + 0x11c ]
pop edi
pop esi
leave
retn 0x2c
sub_40e71c
mov edi edi
push ebx
push esi
mov ebx ecx
mov eax [ ebx ]
push edi
call [ eax + 0x128 ]
test eax eax
je r-xdata
mov esi [ SendMessageW@IAT ]
xor edi edi
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_40d99f
mov ecx ebx
call sub_40e009
mov ebx eax
cmp ebx edi
jne r-xdata
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x188 ]
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call esi
push 0x1
push 0x1
push edi
push edi
push 0x1f
push [ ebx + 0x20 ]
call sub_40d99f
call [ GetCapture@IAT ]
cmp eax edi
je r-xdata
call sub_40a39e
pop edi
pop esi
pop ebx
retn
push edi
push edi
push 0x1f
push eax
call esi
sub_40e79a
push 0x70
mov eax sub_42a94d
call sub_41a939
mov edi ecx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] 0x7fffffff
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] eax
cmp ebx 0x111
jne r-xdata
cmp ebx 0x4e
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ edi ]
push [ ebp + 0xc ]
call [ eax + 0xf0 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x10 ]
cmp ebx 0x6
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp [ ecx ] eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40b962
xor eax eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
cmp ebx 0x20
jne r-xdata
push esi
call sub_40cadb
push eax
push [ ebp + 0xc ]
push edi
call sub_40e186
mov eax [ edi ]
lea edx [ ebp - 0x10 ]
push edx
push ecx
push [ ebp + 0xc ]
mov ecx edi
call [ eax + 0xf4 ]
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
mov eax esi
shr eax 0x10
push eax
movsx eax si
push eax
push edi
call sub_40e1fe
test eax eax
jne r-xdata
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x14 ]
call sub_40b962
xor eax eax
inc eax
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov [ eax ] ecx
mov eax [ edi ]
mov ecx edi
call [ eax + 0x28 ]
mov ebx eax
xor ebx [ ebp + 0x8 ]
push 0x7
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] eax
and ebx 0x1ff
call sub_40b92e
imul ebx ebx 0xc
mov eax [ ebp + 0x8 ]
add ebx rw-data
mov [ ebp - 0x18 ] ebx
cmp eax [ ebx ]
jne r-xdata
cmp [ eax + 0x74 ] 0x0
jle r-xdata
call sub_41aa11
retn 0x10
mov eax [ ebp - 0x18 ]
mov ebx [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov [ eax + 0x8 ] ebx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
mov eax ebx
cmp ecx [ eax + 0x8 ]
jne r-xdata
cmp ebx 0x200
jb r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov ebx [ eax + 0x4 ]
lea ecx [ ebp - 0x14 ]
mov [ ebp + 0x10 ] ebx
call sub_40b962
test ebx ebx
je r-xdata
cmp ebx 0x100
jb r-xdata
cmp ebx 0x209
jbe r-xdata
cmp [ ebp + 0x8 ] 0xc000
push 0x0
push 0x0
jae r-xdata
mov eax [ ebp - 0x18 ]
and [ eax + 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_40b962
cmp [ ebp + 0x8 ] 0xc000
jb r-xdata
lea eax [ ebx - 0x281 ]
cmp eax 0x10
ja r-xdata
cmp ebx 0x10f
jbe r-xdata
mov ecx [ edi + 0x4c ]
mov eax [ ecx ]
lea edx [ ebp - 0x10 ]
push edx
push esi
push [ ebp + 0xc ]
push ebx
call [ eax + 0x94 ]
test eax eax
jne r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax + 0x4 ]
push 0xc000
push eax
jmp r-xdata
push [ ebp + 0x8 ]
push [ ebx + 0x4 ]
call sub_40b034
mov [ ebp + 0x10 ] eax
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx [ eax + 0x14 ]
mov eax [ eax + 0x10 ]
lea ecx [ eax - 0x1 ]
cmp ecx 0x53
ja r-xdata
jmp r-xdata
call sub_40b034
mov ebx eax
test ebx ebx
jne r-xdata
call [ ebx ]
mov ebx eax
mov [ ebp + 0x10 ] ebx
mov ecx [ ebp - 0x18 ]
mov [ ecx + 0x4 ] eax
lea ecx [ ebp - 0x14 ]
call sub_40b962
jmp [ ecx * 4 + jump_table_40ed5e ]
mov ebx [ ebx + 0x14 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebp + 0x8 ]
cmp [ eax ] ecx
je r-xdata
mov ebx [ ebp + 0x10 ]
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push [ ebp + 0xc ]
call sub_41737f
push eax
push [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push esi
call sub_40cadb
mov eax esi
shr eax 0x10
push eax
movzx eax si
push eax
push [ ebp + 0xc ]
call sub_40cadb
push esi
push [ ebp + 0xc ]
call sub_40cadb
jmp r-xdata
push esi
jmp r-xdata
lea ecx [ ebp - 0x28 ]
call sub_416f94
mov eax [ esi + 0x4 ]
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x24 ] eax
call sub_40b997
mov eax [ esi ]
mov esi [ esi + 0x8 ]
push eax
mov [ ebp - 0x4 ] 0x2
mov [ ebp - 0x5c ] eax
call sub_40cb07
test eax eax
jne r-xdata
lea ecx [ ebp - 0x28 ]
call sub_416f94
mov eax [ esi + 0x4 ]
push [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] 0x3
call ebx
and [ ebp - 0x24 ] 0x0
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40cadb
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push esi
call sub_4166da
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
jmp r-xdata
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
push [ ebp + 0xc ]
call sub_40cadb
push eax
push esi
call sub_40cadb
push eax
xor eax eax
cmp [ edi + 0x20 ] esi
sete al
push [ ebp + 0xc ]
call sub_41737f
push [ ebp + 0xc ]
call sub_4166da
jmp r-xdata
mov eax esi
shr eax 0x10
cwde
push eax
movsx eax si
push eax
push [ ebp + 0xc ]
call sub_4166da
jmp r-xdata
push [ ebp + 0xc ]
push esi
jmp r-xdata
mov eax esi
shr eax 0x10
push eax
movzx eax si
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_40cadb
jmp r-xdata
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push esi
call sub_40cadb
mov ecx [ ebp + 0xc ]
movsx edx cx
shr ecx 0x10
movsx ecx cx
mov [ ebp + 0x8 ] edx
mov [ ebp + 0xc ] ecx
cmp eax 0x2a
jne r-xdata
push esi
jmp r-xdata
push esi
push [ ebp + 0xc ]
mov ecx edi
call ebx
jmp r-xdata
mov eax [ ebp + 0xc ]
push esi
shr eax 0x10
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
test eax eax
je r-xdata
push esi
call sub_4166da
jmp r-xdata
push esi
call sub_4166da
push eax
jmp r-xdata
push esi
push [ ebp + 0xc ]
call sub_4166da
jmp r-xdata
movzx ecx si
push ecx
mov eax esi
shr eax 0x10
mov ecx eax
and ecx 0xf000
push ecx
and eax 0xfff
push eax
push [ ebp + 0xc ]
call sub_40cadb
movzx eax [ ebp + 0xc ]
push esi
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
movsx eax si
shr esi 0x10
movsx ecx si
push ecx
push eax
mov eax [ ebp + 0xc ]
shr eax 0x10
push eax
push [ ebp + 0xc ]
jmp r-xdata
push esi
push esi
mov eax [ ebp - 0x18 ]
lea ecx [ ebp - 0x14 ]
mov [ eax + 0x4 ] ebx
call sub_40b962
push 0x0
push 0x0
push 0xc000
add ebx 0x18
push ebx
mov ecx edi
call ebx
mov [ ebp - 0x10 ] eax
mov ecx edi
call ebx
jmp r-xdata
push [ ebp + 0xc ]
push eax
jmp r-xdata
push esi
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
call ebx
and [ ebp - 0x24 ] 0x0
and [ ebp - 0x5c ] 0x0
lea ecx [ ebp - 0x7c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x1
call sub_40d7f4
mov eax [ edi + 0x4c ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x4 ] 0x0
call sub_4173c6
jmp r-xdata
push eax
mov ecx edi
call ebx
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
mov ecx edi
call ebx
jmp r-xdata
push eax
jmp r-xdata
push eax
jmp r-xdata
call sub_40cadb
jmp r-xdata
push eax
push [ ebp + 0xc ]
call sub_40cadb
jmp r-xdata
push ecx
push edx
jmp r-xdata
push esi
call sub_40cadb
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jmp r-xdata
push eax
movzx eax [ ebp + 0xc ]
jmp r-xdata
push eax
push [ ebp + 0xc ]
test eax eax
jne r-xdata
jmp r-xdata
push eax
jmp r-xdata
push [ ebp + 0xc ]
push eax
mov ecx edi
call ebx
jmp r-xdata
lea eax [ ebp - 0x7c ]
push [ ebp - 0x5c ]
lea ecx [ eax + 0x24 ]
call sub_416bbe
test eax eax
je r-xdata
mov [ ebp - 0x2c ] eax
sub_40eeae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
sub esp 0xc
mov edx 0x111
push esi
cmp eax edx
ja r-xdata
cmp eax 0x114
jb r-xdata
je r-xdata
lea edx [ eax - 0x132 ]
cmp edx 0x6
ja r-xdata
cmp eax 0x115
jbe r-xdata
mov eax [ ebp + 0xc ]
xor esi esi
push esi
shr eax 0x10
push esi
or eax 0xbd110000
push eax
push esi
call sub_410ae0
test eax eax
je r-xdata
cmp eax 0x2b
jb r-xdata
xor eax eax
mov edx [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x14 ]
add eax 0xfffffece
push edi
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0xc ]
push eax
xor esi esi
push esi
push 0xbc19
mov [ ebp - 0x8 ] edx
call sub_40e79a
cmp [ edi ] esi
pop edi
jne r-xdata
push [ ebp + 0x14 ]
add eax 0xbc00
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_40e79a
jmp r-xdata
cmp eax 0x210
jne r-xdata
mov ecx [ ebp + 0x14 ]
xor eax eax
inc eax
cmp ecx esi
je r-xdata
cmp eax 0x2f
jbe r-xdata
pop esi
leave
retn 0x10
mov [ ecx ] eax
jmp r-xdata
cmp eax 0x39
je r-xdata
cmp eax 0x4e
jne r-xdata
mov esi [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] eax
xor esi esi
push esi
lea eax [ ebp - 0x8 ]
push eax
movzx eax dx
or eax 0xbc4e0000
push eax
push esi
call sub_410ae0
jmp r-xdata
sub_40ef95
and [ rw-data ] 0x0
push esi
mov esi ecx
cmp [ esi + 0x4c ] 0x0
je r-xdata
push 0x0
push 0x0
mov ecx esi
call sub_40e0c9
pop esi
retn 0x8
mov ecx [ esi + 0x4c ]
mov eax [ ecx ]
push 0xfffffd3f
call [ eax + 0x50 ]
sub_40efc1
push 0x4
mov eax sub_42a970
call sub_41a939
mov esi ecx
cmp [ ebp + 0xc ] 0xfffffffc
mov edi 0x80004005
jne r-xdata
mov eax edi
call sub_41aa11
retn 0xc
mov eax [ esi ]
call [ eax + 0x90 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ esi + 0x2c ]
test eax eax
jne r-xdata
push eax
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
xor edi edi
lea eax [ ebp - 0x10 ]
push eax
call sub_40e114
mov edi eax
test edi edi
jl r-xdata
and [ ebp + 0xc ] 0x0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp - 0x10 ]
call sub_40b4d9
test eax eax
jl r-xdata
mov eax [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
xor edi edi
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
lea edx [ esi + 0x34 ]
push edx
lea edx [ esi + 0x30 ]
push edx
mov [ esi + 0x2c ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0xc ]
push [ esi + 0x2c ]
push [ ebp + 0x8 ]
push r--data
call LresultFromObject
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
sub_40f0a1
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x497
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_40f148
push 0x0
mov eax sub_42a9c6
call sub_41a939
mov edi ecx
call sub_411cf7
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_40b8f8
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40e71c
mov ecx edi
call sub_40e009
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call [ WinHelpW@IAT ]
test eax eax
jne r-xdata
call sub_40a39e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40f07b
call sub_41aa11
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_415d18
sub_40f1b8
push 0x0
mov eax sub_42a9c6
call sub_41a939
mov edi ecx
call sub_411cf7
mov esi [ eax + 0x4 ]
lea ecx [ ebp + 0xb ]
call sub_40b8f8
and [ ebp - 0x4 ] 0x0
mov ecx edi
call sub_40e71c
mov ecx edi
call sub_40e009
test eax eax
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push [ esi + 0x64 ]
push [ eax + 0x20 ]
call sub_40de21
test eax eax
jne r-xdata
call sub_40a39e
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp + 0xb ]
call sub_40f07b
call sub_41aa11
retn 0x8
push 0xffffffff
push eax
push 0xf107
call sub_415d18
sub_40f227
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
je r-xdata
pop ebp
jmp sub_40eeae
push esi
push [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
push [ ebp + 0xc ]
lea eax [ esi + 0x2000 ]
push eax
call sub_40b8b0
add esi 0xfffffece
cmp esi 0x6
pop esi
ja r-xdata
mov ecx [ ebp + 0x14 ]
test ecx ecx
je r-xdata
test eax eax
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
mov [ ecx ] eax
pop ebp
retn 0x10
sub_40f276
push 0x30
mov eax sub_42a9e1
call sub_41a96c
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x38 ]
push eax
push [ edi + 0x24 ]
push [ edi + 0x10 ]
call sub_40b584
add esp 0xc
test eax eax
jne r-xdata
xor eax eax
inc eax
push edi
call sub_40b4f2
pop ecx
test ax ax
jne r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
push 0x1
call sub_416a43
and [ ebp - 0x4 ] 0x0
call sub_411cf7
push [ edi + 0x24 ]
lea esi [ eax + 0x34 ]
mov ecx esi
call sub_402580
push 0xa
mov ecx esi
call sub_40a279
or [ ebp - 0x4 ] 0xffffffff
push 0x1
call sub_416ab5
call sub_41aa11
retn 0x4
sub_40f303
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
mov [ esi + 0x24 ] eax
call sub_411cf7
movzx ecx [ ebp + 0x10 ]
mov eax [ eax + 0xc ]
mov edi [ LoadIconW@IAT ]
push ecx
push eax
call edi
mov [ esi + 0x14 ] eax
test eax eax
jne r-xdata
push esi
call sub_40f276
pop edi
pop esi
pop ebp
retn 0xc
push 0x7f00
push eax
call edi
mov [ esi + 0x14 ] eax
sub_40f347
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
call sub_411cf7
mov [ ebp - 0x4 ] eax
mov eax [ eax + 0x18 ]
not eax
and [ ebp + 0x8 ] eax
jne r-xdata
push ebx
push esi
push edi
push 0x28
xor edi edi
lea eax [ ebp - 0x34 ]
push edi
push eax
xor esi esi
call sub_41ae80
mov eax [ DefWindowProcW@IAT ]
add esp 0xc
mov [ ebp - 0x30 ] eax
call sub_411cf7
test [ ebp + 0x8 ] 0x1
mov eax [ eax + 0x8 ]
push 0x8
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
pop ebx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0xc ] ebx
je r-xdata
xor eax eax
inc eax
jmp r-xdata
test [ ebp + 0x8 ] 0x20
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x10 ] r--data
call sub_40f276
test eax eax
je r-xdata
leave
retn 0x4
test [ ebp + 0x8 ] 0x2
je r-xdata
or [ ebp - 0x34 ] 0x8b
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40f276
test eax eax
je r-xdata
inc esi
test [ ebp + 0x8 ] 0x4
je r-xdata
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] edi
mov [ ebp - 0x10 ] r--data
mov [ ebp - 0x18 ] 0x10
call sub_40f276
test eax eax
je r-xdata
or esi 0x20
test [ ebp + 0x8 ] bl
je r-xdata
push 0x7a01
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] ebx
mov [ ebp - 0x18 ] edi
call sub_40f303
test eax eax
je r-xdata
or esi 0x2
test [ ebp + 0x8 ] 0x10
je r-xdata
push 0x7a02
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x18 ] 0x6
call sub_40f303
test eax eax
je r-xdata
or esi 0x4
test [ ebp + 0x8 ] 0x40
je r-xdata
push 0x3fc0
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0xff
call sub_40d03b
or esi eax
and [ ebp + 0x8 ] 0xffffc03f
or esi ebx
test [ ebp + 0x8 ] 0x80
je r-xdata
push 0x40
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x10
call sub_40d03b
or esi eax
mov eax 0x100
test [ ebp + 0x8 ] eax
je r-xdata
push 0x80
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x2
call sub_40d03b
or esi eax
mov eax 0x200
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_40d03b
or esi eax
mov ebx 0x400
test [ ebp + 0x8 ] ebx
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x20
call sub_40d03b
or esi eax
mov edi 0x800
test [ ebp + 0x8 ] edi
je r-xdata
push ebx
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1
call sub_40d03b
or esi eax
mov eax 0x1000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x40
call sub_40d03b
or esi eax
mov eax 0x2000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x4
call sub_40d03b
or esi eax
mov eax 0x4000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x80
call sub_40d03b
or esi eax
mov edi 0x8000
test [ ebp + 0x8 ] edi
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_40d03b
or esi eax
mov eax 0x10000
test [ ebp + 0x8 ] eax
je r-xdata
push edi
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] ebx
call sub_40d03b
or esi eax
mov eax 0x20000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x200
call sub_40d03b
or esi eax
mov eax 0x40000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x100
call sub_40d03b
or esi eax
mov eax 0x80000
test [ ebp + 0x8 ] eax
je r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] edi
call sub_40d03b
or esi eax
mov ecx [ ebp - 0x4 ]
or [ ecx + 0x18 ] esi
mov eax [ ecx + 0x18 ]
mov edx 0x3fc0
mov edi eax
and edi edx
cmp edi edx
jne r-xdata
push eax
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0x8 ] 0x1000
call sub_40d03b
or esi eax
mov eax esi
and eax [ ebp + 0x8 ]
pop edi
sub eax [ ebp + 0x8 ]
pop esi
neg eax
sbb eax eax
inc eax
pop ebx
or eax 0x10
mov [ ecx + 0x18 ] eax
or esi 0x10
sub_40f639
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi + 0x28 ] 0x0
jne r-xdata
xor eax eax
inc eax
pop esi
pop ebp
retn 0x4
push 0x1
call sub_40f347
mov [ esi + 0x28 ] r--data
sub_40f670
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx + 0x4 ]
cmp eax 0x1
jne r-xdata
cmp eax 0xf
jne r-xdata
or eax 0xffffffff
jmp r-xdata
xor eax eax
push 0x0
push [ ecx ]
call [ ValidateRect@IAT ]
pop ebp
retn 0x8
sub_40f6b7
mov edi edi
push esi
mov esi ecx
push edi
xor edi edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
call sub_41173f
mov [ eax + 0x34 ] edi
mov [ eax + 0x54 ] edi
add eax 0x4c
push eax
call [ GetCursorPos@IAT ]
mov [ esi + 0x40 ] edi
mov [ esi + 0x3c ] edi
pop edi
mov [ esi + 0x28 ] 0x1
pop esi
retn
sub_40f6f0
push 0x4
mov eax sub_42aa04
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov eax [ esi + 0x2c ]
and [ ebp - 0x4 ] 0x0
test eax eax
je r-xdata
call sub_411d2a
cmp [ eax + 0x4 ] esi
jne r-xdata
push eax
call [ CloseHandle@IAT ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_410cff
call sub_41aa11
retn
and [ eax + 0x4 ] 0x0
sub_40f746
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
push edi
mov esi ecx
call sub_41173f
xor edi edi
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] edi
mov eax [ esi ]
mov ecx esi
call [ eax + 0x5c ]
test eax eax
mov eax [ esi ]
mov ecx esi
je r-xdata
mov ebx [ ebp - 0xc ]
add ebx 0x30
call [ eax + 0x68 ]
pop edi
pop esi
pop ebx
leave
retn
mov ebx [ ebp - 0xc ]
add ebx 0x30
push ebx
call [ eax + 0x64 ]
test eax eax
je r-xdata
push [ ebp - 0x8 ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0x60 ]
inc [ ebp - 0x8 ]
test eax eax
jne r-xdata
push edi
push edi
push edi
push edi
push ebx
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0x1
mov [ ebp - 0x8 ] edi
cmp [ ebp - 0x4 ] edi
jne r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
push edi
push edi
push edi
push edi
push ebx
call [ PeekMessageW@IAT ]
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
sub_40f7e3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
call [ eax + 0x28 ]
mov esi eax
xor ebx ebx
cmp [ esi ] ebx
je r-xdata
xor eax eax
mov edi 0xc000
mov eax [ esi + 0x4 ]
jmp r-xdata
push eax
push [ esi + 0x4 ]
call sub_40b034
cmp eax ebx
je r-xdata
push edi
push eax
call sub_40b034
cmp eax ebx
jne r-xdata
call [ esi ]
mov esi eax
cmp [ esi ] ebx
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ eax + 0x10 ]
mov edx [ ecx ]
mov ecx [ ebp + 0x8 ]
cmp edx [ ecx + 0x4 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push ebx
push ebx
cmp eax edi
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
push [ ecx + 0xc ]
push [ ecx + 0x8 ]
mov ecx [ ebp - 0x4 ]
call [ eax + 0x14 ]
xor eax eax
inc eax
jmp r-xdata
push ebx
push ebx
add eax 0x18
sub_40f86c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x100
jne r-xdata
xor eax eax
pop ebp
retn
cmp [ eax + 0x8 ] 0xd
jne r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40f892
push 0x4
mov eax sub_42a7f3
call sub_41a939
push 0x54
call sub_415ff6
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_41aa11
retn
call sub_4116f5
sub_40f8be
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
xor eax eax
mov eax [ ecx + 0x4 ]
cmp eax [ ebp + 0xc ]
jne r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_40f8dd
mov edi edi
push ebp
mov ebp esp
push edi
call sub_411d2a
mov eax [ eax + 0x4 ]
mov edi [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
call sub_401890
mov esi eax
test esi esi
je r-xdata
cmp [ edi ] 0x0
jne r-xdata
push edi
push eax
call sub_40ce5a
test eax eax
je r-xdata
mov eax [ esi + 0x20 ]
push edi
mov ecx eax
call sub_40f7e3
test eax eax
je r-xdata
test esi esi
je r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
xor eax eax
push [ edi ]
call sub_40cadb
mov ecx eax
call sub_40e009
cmp eax esi
je r-xdata
pop esi
pop edi
pop ebp
retn
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x108 ]
jmp r-xdata
sub_40f950
mov edi edi
push ebp
mov ebp esp
call sub_411d2a
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_40f8dd
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x58 ]
pop ebp
retn
sub_40f971
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0x4 ]
cmp eax 0x200
je r-xdata
push ebx
push edi
call sub_41173f
push [ esi + 0x18 ]
mov ebx eax
push [ esi + 0x14 ]
lea edi [ ebx + 0x4c ]
mov ecx edi
call sub_40f8be
test eax eax
je r-xdata
cmp eax 0xa0
je r-xdata
mov eax [ esi + 0x14 ]
mov [ edi ] eax
mov eax [ esi + 0x18 ]
mov [ edi + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ ebx + 0x54 ] eax
xor eax eax
inc eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x54 ]
jne r-xdata
cmp eax 0xf
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
jmp r-xdata
cmp eax 0x118
je r-xdata
pop edi
pop ebx
pop esi
pop ebp
retn
xor eax eax
inc eax
jmp r-xdata
sub_40f9e2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40f6f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_40fa03
push 0x4
mov eax sub_42aa04
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_410cd7
xor eax eax
mov ecx esi
mov [ ebp - 0x4 ] eax
mov [ esi ] r--data
mov [ esi + 0x34 ] eax
mov [ esi + 0x38 ] eax
call sub_40f6b7
mov eax esi
call sub_41aa11
retn
sub_40fa8c
mov edi edi
push esi
push edi
call sub_41173f
mov esi eax
xor eax eax
push eax
push eax
push eax
lea edi [ esi + 0x30 ]
push edi
call [ GetMessageW@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
retn
cmp [ esi + 0x34 ] 0x36a
je r-xdata
xor eax eax
inc eax
push edi
call sub_40f950
pop ecx
test eax eax
jne r-xdata
push edi
call [ TranslateMessage@IAT ]
push edi
call [ DispatchMessageW@IAT ]
sub_40fad2
mov edi edi
push ebp
mov ebp esp
push esi
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
mov esi [ ebp + 0x8 ]
jne r-xdata
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
test esi esi
jge r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
push [ eax + 0x2c ]
call [ CallNextHookEx@IAT ]
call sub_40a39e
call sub_411d2a
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
cmp esi 0x8001
jne r-xdata
push [ ebp + 0x10 ]
mov eax [ ecx ]
push esi
call [ eax + 0x70 ]
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_40fb36
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
mov ebx [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x4 ] ecx
cmp ebx esi
jne r-xdata
mov eax [ ebp + 0x8 ]
sub eax esi
push edi
je r-xdata
xor eax eax
jmp r-xdata
call sub_401890
cmp [ ebp + 0x8 ] esi
jne r-xdata
dec eax
dec eax
je r-xdata
pop esi
pop ebx
leave
retn 0x8
xor eax eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24 ] esi
je r-xdata
push [ ebx ]
call sub_40cadb
cmp eax esi
je r-xdata
sub eax 0x7fff
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx eax
call sub_40d95e
mov edi eax
cmp edi esi
je r-xdata
cmp eax 0x109
ja r-xdata
mov ecx edi
call sub_40b47e
test eax eax
je r-xdata
push sub_40a3ba
mov ecx rw-data
call sub_416455
mov ebx eax
cmp ebx esi
jne r-xdata
cmp [ edi + 0x68 ] esi
je r-xdata
cmp [ ebx + 0x140 ] esi
jne r-xdata
call sub_40a39e
call sub_401890
mov edi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] esi
je r-xdata
mov esi [ ebp + 0xc ]
push 0x7
mov [ ebx + 0x140 ] 0x1
pop ecx
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov esi [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
call sub_416568
test eax eax
je r-xdata
push ebx
call sub_40f86c
pop ecx
test eax eax
jne r-xdata
and [ ebx + 0x140 ] 0x0
mov eax [ esi ]
lea ecx [ ebp - 0x20 ]
push ecx
mov ecx esi
call [ eax + 0x58 ]
test eax eax
je r-xdata
push esi
push 0xe146
push 0x111
push [ edi + 0x20 ]
call [ SendMessageW@IAT ]
jmp r-xdata
cmp [ ebx + 0x4 ] 0x202
jne r-xdata
and [ ebx + 0x140 ] 0x0
xor eax eax
inc eax
jmp r-xdata
pop edi
sub_40fc6a
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
retn
push esi
call sub_41173f
mov esi eax
call [ GetCurrentThreadId@IAT ]
push eax
push 0x0
push sub_40fad2
push 0xffffffff
call [ SetWindowsHookExW@IAT ]
mov [ esi + 0x2c ] eax
pop esi
sub_40fc98
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
cmp [ ebp + 0x8 ] esi
push edi
jg r-xdata
call sub_411cf7
add eax 0x74
mov ecx eax
call sub_40fa78
cmp [ eax + 0x10 ] esi
jne r-xdata
mov ebx [ ecx + 0x20 ]
mov edi 0x363
cmp ebx esi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] 0x1
pop edi
pop esi
setl al
pop ebx
pop ebp
retn 0x4
call sub_417556
push 0x1
call sub_41776e
call sub_411cf7
add eax 0x74
mov ecx eax
call sub_40fa78
mov esi [ eax + 0x8 ]
jmp r-xdata
mov eax [ ebx + 0x20 ]
cmp eax esi
je r-xdata
test esi esi
jne r-xdata
push eax
call [ IsWindowVisible@IAT ]
test eax eax
je r-xdata
cmp [ esi + 0x20 ] 0x0
je r-xdata
jmp r-xdata
push esi
inc esi
push esi
push edi
push [ ebx + 0x20 ]
push ebx
call sub_40d6b4
push esi
push esi
push 0x0
push esi
push edi
push [ ebx + 0x20 ]
call sub_40d99f
mov esi [ esi + 0x6c ]
cmp esi ebx
je r-xdata
cmp [ esi + 0xa0 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ IsWindowVisible@IAT ]
test eax eax
jne r-xdata
push 0x0
mov ecx esi
call sub_416541
push 0x0
push 0x1
push edi
push [ esi + 0x20 ]
push esi
call sub_40d6b4
push 0x1
push 0x1
push 0x0
push 0x1
push edi
push [ esi + 0x20 ]
call sub_40d99f
cmp [ esi + 0xa0 ] eax
jl r-xdata
or [ esi + 0xa0 ] 0xffffffff
push eax
mov ecx esi
call sub_416541
mov eax [ esi + 0xa0 ]
test eax eax
jle r-xdata
sub_40fd9a
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov esi ecx
xor edi edi
mov [ esi + 0x24 ] edi
cmp [ esi + 0x1c ] edi
jne r-xdata
mov ecx [ esi + 0x3c ]
cmp ecx edi
je r-xdata
push [ esi + 0x30 ]
call sub_409992
pop ecx
mov [ esi + 0x30 ] edi
mov [ esi + 0x28 ] edi
mov ecx [ esi + 0x3c ]
cmp ecx edi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_416c03
test eax eax
je r-xdata
mov ecx [ esi + 0x38 ]
mov [ esi + 0x3c ] edi
cmp ecx edi
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov ecx [ ebp - 0x4 ]
cmp ecx edi
je r-xdata
mov [ esi + 0x38 ] edi
pop edi
pop esi
leave
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40fe07
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
test [ esi + 0x18 ] 0x1
jne r-xdata
pop esi
pop ebx
leave
retn 0x8
mov eax [ esi + 0x28 ]
push edi
mov edi [ esi + 0x2c ]
sub edi eax
cmp ebx edi
jae r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4108a1
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_401840
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi ebx
mov eax [ ebp + 0xc ]
sub eax ebx
pop edi
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov edi ebx
sub edi edx
and [ ebp - 0x8 ] 0x0
mov [ ebp - 0x4 ] edi
sub ebx [ ebp - 0x8 ]
je r-xdata
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp + 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp + 0x8 ] eax
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
test eax eax
jbe r-xdata
xor edi edi
cmp [ esi + 0x8 ] edi
jne r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ edx + 0x50 ]
mov eax [ edi ]
cmp [ esi + 0xc ] edi
jne r-xdata
push edi
push eax
push ebx
push [ ebp + 0x8 ]
call sub_401840
add [ esi + 0x28 ] edi
add esp 0x10
sub ebx edi
mov edi ebx
mov [ ebp - 0x4 ] ebx
mov eax [ esi + 0x20 ]
mov [ ebp - 0x4 ] eax
cmp ebx eax
jbe r-xdata
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
mov [ esi + 0x2c ] ecx
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jbe r-xdata
mov eax [ esi + 0x30 ]
mov [ ebp - 0x8 ] eax
mov edi [ esi + 0x2c ]
sub edi eax
mov [ esi + 0x28 ] eax
cmp ebx edi
jae r-xdata
cmp edi ebx
jb r-xdata
push [ ebp - 0x4 ]
mov ecx [ esi + 0x24 ]
push [ ebp - 0x8 ]
mov eax [ ecx ]
call [ eax + 0x34 ]
add [ ebp - 0x8 ] eax
sub [ ebp - 0x4 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_40ff38
mov edi edi
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
mov eax [ esi + 0x28 ]
push edi
je r-xdata
cmp [ esi + 0x8 ] 0x0
lea edi [ esi + 0x30 ]
mov edx [ edi ]
push ebx
jne r-xdata
mov edx [ esi + 0x2c ]
cmp edx eax
je r-xdata
cmp eax edx
je r-xdata
cmp eax edx
je r-xdata
mov eax [ esi + 0x2c ]
jmp r-xdata
mov ecx [ esi + 0x24 ]
mov edi [ ecx ]
sub eax edx
cdq
push 0x1
push edx
push eax
call [ edi + 0x28 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
lea edx [ esi + 0x2c ]
push edx
push edi
push [ esi + 0x20 ]
push 0x1
call [ eax + 0x50 ]
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
push 0x0
push 0x0
sub eax edx
push eax
push 0x2
call [ ebx + 0x50 ]
mov eax [ edi ]
pop ebx
mov ecx [ esi + 0x24 ]
mov ebx [ ecx ]
sub eax edx
push eax
push edx
call [ ebx + 0x38 ]
jmp r-xdata
pop edi
mov [ esi + 0x28 ] eax
pop esi
retn
sub_40ffb0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov edx [ esi + 0x28 ]
mov eax [ ebp + 0x8 ]
lea ebx [ esi + 0x2c ]
mov ecx [ ebx ]
mov edi ecx
sub edi edx
add eax edi
cmp [ esi + 0x8 ] 0x0
mov [ ebp - 0x8 ] eax
jne r-xdata
push [ esi + 0x14 ]
push 0x4
test edi edi
je r-xdata
mov eax [ esi + 0x30 ]
cmp edx eax
jbe r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push ebx
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x0
call [ eax + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov ecx [ esi + 0x24 ]
mov eax edi
neg eax
cdq
push 0x1
push edx
push eax
mov eax [ ecx ]
call [ eax + 0x28 ]
mov eax [ ebx ]
sub eax [ esi + 0x28 ]
pop edi
pop esi
pop ebx
cmp eax [ ebp - 0x8 ]
jae r-xdata
test edi edi
jle r-xdata
leave
retn 0x4
push 0x0
push 0x3
jmp r-xdata
cmp [ esi + 0xc ] 0x0
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] edi
jne r-xdata
push edi
push edx
sub ecx eax
push ecx
push eax
call sub_409890
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
add esp 0x10
mov [ esi + 0x28 ] eax
mov [ ebx ] ecx
call sub_4108a1
sub ecx edi
mov [ ebp + 0x8 ] ecx
add edi eax
mov ecx [ esi + 0x20 ]
mov eax [ esi + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov [ esi + 0x28 ] eax
add eax ecx
mov [ ebx ] eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x8 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push edi
call [ eax + 0x34 ]
add [ ebp - 0x4 ] eax
sub [ ebp + 0x8 ] eax
add edi eax
test eax eax
jbe r-xdata
sub_41009f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
inc eax
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
mov eax [ esi + 0x28 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
inc [ esi + 0x28 ]
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40ff38
sub_4100da
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
add eax 0x8
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
mov eax [ esi + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
add [ esi + 0x28 ] 0x8
mov eax esi
pop esi
pop ebp
retn 0x8
call sub_40ff38
sub_41011e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
inc eax
inc eax
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
mov eax [ esi + 0x28 ]
mov cx [ ebp + 0x8 ]
mov [ eax ] cx
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40ff38
sub_41015d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
add eax 0x4
cmp eax [ esi + 0x2c ]
jbe r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
mov eax [ esi + 0x28 ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
call sub_40ff38
sub_41019b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x1 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4108a1
mov eax [ esi + 0x28 ]
mov al [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] al
inc [ esi + 0x28 ]
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
inc eax
push eax
mov ecx esi
call sub_40ffb0
sub_4101df
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x8 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4108a1
mov eax [ esi + 0x28 ]
mov edx [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] edx
mov eax [ eax + 0x4 ]
mov [ ecx + 0x4 ] eax
add [ esi + 0x28 ] 0x8
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
add eax 0x8
push eax
mov ecx esi
call sub_40ffb0
sub_41022c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x2 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4108a1
mov eax [ esi + 0x28 ]
mov ax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi + 0x28 ] 0x2
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
inc eax
inc eax
push eax
mov ecx esi
call sub_40ffb0
sub_410274
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
mov eax [ esi + 0x28 ]
mov ecx [ esi + 0x2c ]
lea edx [ eax + 0x4 ]
cmp edx ecx
jbe r-xdata
push [ esi + 0x14 ]
push 0x4
call sub_4108a1
mov eax [ esi + 0x28 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
add [ esi + 0x28 ] 0x4
mov eax esi
pop esi
pop ebp
retn 0x4
sub eax ecx
add eax 0x4
push eax
mov ecx esi
call sub_40ffb0
sub_4102bb
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp + 0xf ]
push eax
mov ecx edi
mov [ esi ] 0x1
call sub_41019b
cmp [ ebp + 0xf ] 0xff
jae r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
call sub_41022c
mov eax 0xfffe
cmp [ ebp + 0x8 ] ax
jne r-xdata
movzx eax [ ebp + 0xf ]
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jae r-xdata
lea eax [ ebp + 0xf ]
push eax
mov ecx edi
mov [ esi ] 0x2
call sub_41019b
cmp [ ebp + 0xf ] 0xff
jb r-xdata
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
call sub_410274
mov eax [ ebp + 0xc ]
cmp eax 0xffffffff
jb r-xdata
movzx eax [ ebp + 0x8 ]
jmp r-xdata
lea eax [ ebp + 0x8 ]
push eax
mov ecx edi
call sub_41022c
pop edi
pop esi
leave
retn 0x8
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_4101df
cmp [ ebp - 0x4 ] 0x0
ja r-xdata
push 0x0
push 0x1
call sub_4108a1
mov eax [ ebp - 0x8 ]
cmp eax 0x7fffffff
jbe r-xdata
sub_41036c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi 0xff
je r-xdata
mov ebx [ ebp + 0xc ]
mov ecx edi
cmp ebx esi
jae r-xdata
push esi
mov ecx edi
call sub_41009f
push 0xfffe
mov ecx edi
call sub_41011e
push esi
call sub_41009f
mov ecx edi
cmp ebx 0xfffe
jae r-xdata
push ebx
call sub_41009f
jmp r-xdata
push 0xffff
call sub_41011e
mov ecx edi
cmp ebx 0xffffffff
jae r-xdata
push ebx
call sub_41011e
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0xffffffff
call sub_41015d
push 0x0
push ebx
mov ecx edi
call sub_4100da
push ebx
call sub_41015d
jmp r-xdata
sub_4103f0
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
call sub_411cf7
push 0x0
mov esi eax
call sub_416a43
mov esi [ esi + 0x1c ]
jmp r-xdata
call sub_40a39e
test esi esi
jne r-xdata
push [ esi ]
push [ ebp + 0x8 ]
call [ lstrcmpA@IAT ]
test eax eax
je r-xdata
push esi
call sub_416ab5
xor eax eax
push 0x0
call sub_416ab5
mov eax esi
jmp r-xdata
mov esi [ esi + 0x14 ]
pop esi
pop ebp
retn 0x4
sub_410442
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
test esi esi
je r-xdata
xor eax eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_41022c
movzx eax [ ebp - 0x48 ]
mov [ esi ] eax
lea eax [ ebp - 0x48 ]
push eax
mov ecx edi
call sub_41022c
cmp [ ebp - 0x48 ] 0x40
jae r-xdata
movzx esi [ ebp - 0x48 ]
push esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx edi
call sub_40fe07
cmp eax esi
jne r-xdata
lea eax [ ebp - 0x44 ]
push eax
mov [ ebp + esi - 0x44 ] 0x0
call sub_4103f0
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_419730
leave
retn 0x8
sub_4104c9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
mov ecx [ esi + 0x28 ]
mov eax [ esi + 0x2c ]
sub eax ecx
push edi
mov edi ebx
cmp ebx eax
jb r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
push edi
push [ ebp + 0x8 ]
push eax
push ecx
call sub_401840
add [ esi + 0x28 ] edi
add [ ebp + 0x8 ] edi
add esp 0x10
sub ebx edi
je r-xdata
mov edi eax
pop edi
mov ecx esi
call sub_40ff38
xor edx edx
mov eax ebx
div [ esi + 0x20 ]
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
mov edi ebx
sub edi edx
push edi
push [ ebp + 0x8 ]
call [ eax + 0x38 ]
add [ ebp + 0x8 ] edi
sub ebx edi
cmp [ esi + 0x8 ] 0x0
je r-xdata
cmp ebx [ esi + 0x20 ]
jb r-xdata
mov ecx [ esi + 0x24 ]
mov edx [ ecx ]
lea eax [ esi + 0x2c ]
push eax
lea edi [ esi + 0x30 ]
push edi
push [ esi + 0x20 ]
push 0x1
call [ edx + 0x50 ]
mov eax [ edi ]
mov [ esi + 0x28 ] eax
mov eax [ esi + 0x28 ]
cmp eax [ esi + 0x30 ]
jne r-xdata
call sub_40a39e
push ebx
push [ ebp + 0x8 ]
push ebx
push eax
call sub_401840
add esp 0x10
add [ esi + 0x28 ] ebx
sub_410590
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
push esi
mov esi ecx
cmp [ ebp + 0x8 ] eax
jae r-xdata
push eax
call sub_41011e
push [ ebp + 0x8 ]
mov ecx esi
call sub_41015d
push [ ebp + 0x8 ]
call sub_41011e
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4105c1
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
lea eax [ ebp - 0x4 ]
push eax
mov esi ecx
call sub_41022c
mov eax 0xffff
cmp [ ebp - 0x4 ] ax
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_410274
mov eax [ ebp - 0x4 ]
movzx eax [ ebp - 0x4 ]
jmp r-xdata
pop esi
leave
retn
sub_4105f5
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov esi ecx
push [ esi ]
call [ lstrlenA@IAT ]
mov ecx [ ebp + 0x8 ]
movzx edi ax
movzx eax [ esi + 0x8 ]
push edi
push eax
call sub_41011e
mov ecx eax
call sub_41011e
mov ecx [ ebp + 0x8 ]
movzx eax di
push eax
push [ esi ]
call sub_4104c9
pop edi
pop esi
pop ebp
retn 0x4
sub_410632
push 0x4
mov eax sub_42aa2a
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
and [ ebp - 0x4 ] 0x0
cmp [ esi + 0x24 ] 0x0
je r-xdata
mov ecx esi
call sub_40fd9a
mov ecx [ esi + 0x14 ]
sub ecx 0x10
call sub_402020
call sub_41aa11
retn
test [ esi + 0x18 ] 0x2
jne r-xdata
call sub_4104b9
sub_410670
push 0x4
mov eax sub_42aa58
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
lea ecx [ esi + 0x14 ]
call sub_401ff0
mov edi [ ebp + 0x8 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
mov ecx edi
call [ eax + 0x18 ]
push eax
lea ecx [ esi + 0x14 ]
mov [ ebp - 0x4 ] 0x1
call sub_402fc0
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] bl
call sub_402020
mov ecx [ ebp + 0xc ]
or [ esi + 0x10 ] 0xffffffff
mov [ esi + 0x18 ] ecx
not cl
xor eax eax
inc eax
and cl al
movsx ecx cl
neg ecx
sbb ecx ecx
and ecx 0xffffffd0
add ecx 0x40
push ebx
mov [ esi + 0x40 ] ecx
mov ecx [ ebp + 0x14 ]
push ebx
mov [ esi + 0x30 ] ecx
push ebx
mov [ esi + 0x24 ] edi
mov [ esi + 0x3c ] ebx
mov [ esi + 0x38 ] ebx
mov [ esi ] ebx
mov [ esi + 0x4 ] eax
mov [ esi + 0x44 ] 0x89
mov [ esi + 0x1c ] eax
mov [ esi + 0x8 ] ebx
mov eax [ edi ]
push 0x3
mov ecx edi
call [ eax + 0x50 ]
mov ecx [ ebp + 0x10 ]
and eax 0x2
mov [ esi + 0xc ] eax
mov eax 0x80
cmp ecx eax
jge r-xdata
call sub_40a39e
mov [ esi + 0x20 ] ecx
mov [ esi + 0x20 ] eax
mov [ esi + 0x30 ] ebx
jmp r-xdata
test [ esi + 0x18 ] 0x1
mov eax [ esi + 0x30 ]
lea ecx [ eax + edi ]
mov [ esi + 0x2c ] ecx
je r-xdata
mov ecx [ esi + 0x24 ]
mov eax [ ecx ]
push ebx
push ebx
push ebx
push 0x3
call [ eax + 0x50 ]
and eax 0x1
mov [ esi + 0x8 ] eax
jne r-xdata
mov edi [ esi + 0x20 ]
cmp [ esi + 0x30 ] ebx
jne r-xdata
mov [ esi + 0x28 ] eax
mov eax esi
call sub_41aa11
retn 0x10
mov eax ecx
xor edi edi
push [ esi + 0x20 ]
call sub_409958
pop ecx
mov [ esi + 0x30 ] eax
mov [ esi + 0x1c ] ebx
jmp r-xdata
sub_41077f
push 0xc
mov eax sub_42aa83
call sub_41a96c
mov esi ecx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x14 ]
call sub_401ff0
lea eax [ esi + 0xc ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402760
mov edi [ ebp + 0x10 ]
cmp [ edi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x2
jne r-xdata
mov ecx [ esi + 0x8 ]
add ecx 0xf1b0
mov [ eax ] ecx
mov eax [ esi + 0x8 ]
push edi
add eax 0xf1b0
push eax
lea eax [ ebp - 0x14 ]
push eax
call sub_4179fd
push 0xffffffff
push [ ebp - 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a148
add esp 0x10
lea ecx [ edi - 0x10 ]
call sub_402020
mov ecx [ ebp - 0x14 ]
add ecx 0xfffffff0
call sub_402020
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_401b60
mov edi [ ebp + 0x10 ]
call sub_41aa11
retn 0xc
sub_410830
push 0x4
mov eax sub_42aaa9
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a3e9
lea edi [ esi + 0xc ]
mov ecx edi
mov [ esi ] r--data
call sub_401ff0
mov eax [ ebp + 0x8 ]
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
mov ecx edi
mov [ esi + 0x8 ] eax
call sub_401ea0
mov eax esi
call sub_41aa11
retn 0x8
sub_410874
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
sub ecx 0x10
mov [ esi ] r--data
call sub_402020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_4108a1
push 0x8
mov eax sub_42acd3
call sub_41a939
push 0x10
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_41ad31
int3
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_410830
sub_4108ea
push 0xc
mov eax sub_42aac4
call sub_41a96c
xor eax eax
xor edx edx
cmp ecx edx
setne al
cmp eax edx
jne r-xdata
cmp [ ecx + 0xc ] edx
jne r-xdata
call sub_40a39e
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x4 ] edx
call [ ecx + 0xc ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
xor eax eax
jmp r-xdata
call sub_41aa11
retn
sub_410934
mov edi edi
push ebp
mov ebp esp
mov eax ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_40a39e
cmp eax [ ebp + 0x8 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
sub_41095f
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
mov eax [ ecx ]
call [ eax ]
test eax eax
je r-xdata
call sub_40a39e
mov ecx eax
pop ebp
jmp sub_410934
sub_41097d
mov edi edi
push ebp
mov ebp esp
push esi
call sub_411cf7
push 0x0
mov esi eax
call sub_416a43
push [ ebp + 0x8 ]
lea ecx [ esi + 0x1c ]
call sub_416128
push 0x0
call sub_416ab5
pop esi
pop ebp
retn 0x4
sub_4109a8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x20 ]
push ebx
xor ebx ebx
inc ebx
test eax eax
je r-xdata
call sub_40a39e
mov eax [ ebp + 0x1c ]
add eax 0xffffffc7
push esi
cmp eax 0xb
ja r-xdata
mov [ eax ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4 ] ecx
mov eax ebx
jmp r-xdata
xor eax eax
jmp [ eax * 4 + jump_table_410ab0 ]
pop ebx
pop ebp
retn 0x1c
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
push [ ebp + 0xc ]
push [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
mov esi [ ebp + 0x18 ]
test esi esi
je r-xdata
push [ ebp + 0x18 ]
jmp r-xdata
push [ ebp + 0x18 ]
mov eax ebx
jmp r-xdata
mov ebx eax
call [ ebp + 0x14 ]
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push [ eax ]
push [ eax + 0x4 ]
push [ ebp + 0xc ]
call [ ebp + 0x14 ]
jmp r-xdata
push esi
call [ ebp + 0x14 ]
push [ ebp + 0xc ]
push esi
call [ ebp + 0x14 ]
jmp r-xdata
call [ ebp + 0x14 ]
jmp r-xdata
pop esi
xor ebx ebx
cmp [ esi + 0x1c ] ebx
sete bl
and [ esi + 0x1c ] 0x0
jmp r-xdata
sub_410ae0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push ebx
mov ebx ecx
cmp eax 0xfffffffe
jne r-xdata
push esi
push edi
cmp eax 0xfffffffd
jne r-xdata
call sub_411cf7
cmp [ eax + 0x3c ] 0x0
jne r-xdata
cmp eax 0xffffffff
je r-xdata
mov edi [ ebp + 0x10 ]
and [ ebp + 0xc ] 0x0
test edi edi
je r-xdata
call sub_411cf7
push [ ebp + 0x14 ]
mov eax [ eax + 0x3c ]
push [ ebp + 0x10 ]
mov edx [ eax ]
push [ ebp + 0x8 ]
mov ecx eax
push ebx
call [ edx + 0x4 ]
jmp r-xdata
call sub_40a39e
mov edi 0x111
mov edi eax
movzx eax ax
shr edi 0x10
mov [ ebp + 0xc ] eax
test edi edi
jne r-xdata
mov eax [ edi + 0x30 ]
mov [ ebp + 0x10 ] eax
mov eax [ ebx ]
call [ eax + 0x2c ]
mov ebx eax
jmp r-xdata
pop ebx
pop ebp
retn 0x10
mov esi eax
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx ]
call [ eax + 0x28 ]
jmp r-xdata
test ebx ebx
jne r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
push edi
push [ esi + 0x4 ]
call sub_40b034
test eax eax
jne r-xdata
xor eax eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
jmp r-xdata
push [ ebp + 0x14 ]
push [ eax + 0x10 ]
push [ ebp + 0x10 ]
push [ eax + 0x14 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ebx
call sub_4109a8
jmp r-xdata
call [ esi ]
mov esi [ ebx + 0x4 ]
jmp r-xdata
pop edi
pop esi
mov eax [ esi + 0x4 ]
test eax eax
jne r-xdata
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov ebx [ ebx ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] eax
jne r-xdata
add esi 0xc
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
push eax
push [ ebp + 0x10 ]
call sub_402060
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
mov [ edi + 0x4 ] eax
mov [ ebp + 0xc ] 0x1
jmp r-xdata
sub_410c27
mov edi edi
push esi
push 0xd
mov esi ecx
call sub_416a43
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
test eax eax
je r-xdata
push 0xd
call sub_416ab5
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
pop esi
retn
mov ecx eax
call sub_41152a
sub_410c63
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x20 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] ecx
mov [ eax + 0x24 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] ecx
mov [ eax + 0x1c ] ecx
mov [ eax + 0x18 ] ecx
retn
sub_410cd7
mov edi edi
push esi
mov esi ecx
call sub_411cf7
mov [ esi + 0x1c ] eax
xor eax eax
inc eax
xor ecx ecx
mov [ esi + 0x4 ] eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x8 ] ecx
mov [ esi + 0xc ] ecx
mov [ esi + 0x10 ] ecx
mov [ esi + 0x18 ] ecx
mov eax esi
pop esi
retn
sub_410d40
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
xor ebx ebx
cmp ecx ebx
je r-xdata
cmp [ esi + 0x14 ] ebx
je r-xdata
cmp [ esi + 0x10 ] ebx
jne r-xdata
call sub_40a39e
cmp [ ebp + 0x8 ] ebx
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
push [ ebp + 0x8 ]
mov ecx [ esi + 0x14 ]
call sub_416583
push edi
mov edi [ esi + 0x14 ]
call [ GetFocus@IAT ]
cmp eax [ edi + 0x20 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0xfffffffd
add edx 0x3
or edx 0x400
push edx
push eax
call sub_410ca1
jmp r-xdata
pop edi
push [ edi + 0x20 ]
call [ GetParent@IAT ]
push eax
call sub_40cadb
push ebx
push ebx
push 0x28
push [ eax + 0x20 ]
call [ SendMessageW@IAT ]
mov [ esi + 0x18 ] 0x1
sub_410dce
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0xc ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
call sub_40a39e
push edi
mov edi [ SendMessageW@IAT ]
push 0x0
push 0x0
push 0x87
push [ eax + 0x20 ]
call edi
test eax 0x2000
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
pop edi
mov eax [ esi + 0x14 ]
push 0x0
push [ ebp + 0x8 ]
push 0xf1
push [ eax + 0x20 ]
call edi
mov edx [ ebp + 0x8 ]
neg edx
sbb edx edx
and edx 0x8
or edx 0x400
push edx
push eax
call sub_410c89
jmp r-xdata
sub_410e44
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
jne r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
call sub_40a39e
mov esi [ esi + 0x14 ]
test esi esi
je r-xdata
cmp [ esi + 0x10 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push [ esi + 0x20 ]
call sub_41685e
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x8 ]
push edi
mov edi 0x400
push edi
push ecx
push [ eax + 0x4 ]
call [ GetMenuState@IAT ]
mov ecx [ esi + 0x8 ]
and eax 0xfffff6fb
cmp ecx [ esi + 0x20 ]
jae r-xdata
push [ ebp + 0x8 ]
or eax edi
push [ esi + 0x4 ]
push eax
push ecx
mov ecx [ esi + 0xc ]
call sub_410cb9
pop edi
jmp r-xdata
sub_410eb1
mov edi edi
push ebp
mov ebp esp
sub esp 0x90
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
call [ GetMenuCheckMarkDimensions@IAT ]
movsx ecx ax
shr eax 0x10
cmp ecx 0x4
movsx ebx ax
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x88 ] ebx
jle r-xdata
call sub_40a39e
cmp ebx 0x5
jg r-xdata
cmp ecx 0x20
jle r-xdata
lea eax [ ecx - 0x4 ]
cdq
sub eax edx
lea esi [ ecx + 0xf ]
sar esi 0x4
mov edi eax
sar edi 0x1
mov eax esi
shl eax 0x4
add edi eax
sub edi ecx
cmp edi 0xc
jle r-xdata
push 0x20
pop ecx
mov [ ebp - 0x8c ] ecx
cmp ebx 0x20
jle r-xdata
push 0xc
pop edi
push 0x80
lea eax [ ebp - 0x84 ]
push 0xff
push eax
call sub_41ae80
lea eax [ ebx - 0x6 ]
sar eax 0x1
imul eax esi
add esp 0xc
lea eax [ ebp + eax * 2 - 0x84 ]
mov edx r--data
add esi esi
mov [ ebp - 0x90 ] 0x5
push 0x20
pop ebx
mov [ ebp - 0x88 ] ebx
movzx bx [ edx ]
mov ecx edi
shl bx cl
inc edx
not bx
movzx ecx bx
mov ebx ecx
shr ebx 0x8
mov [ eax ] bl
mov [ eax + 0x1 ] cl
add eax esi
dec [ ebp - 0x90 ]
jne r-xdata
lea eax [ ebp - 0x84 ]
push eax
push 0x1
push 0x1
push [ ebp - 0x88 ]
push [ ebp - 0x8c ]
call [ CreateBitmap@IAT ]
pop edi
pop esi
mov [ rw-data ] eax
pop ebx
test eax eax
jne r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
push 0x7fe3
push eax
call [ LoadBitmapW@IAT ]
mov [ rw-data ] eax
sub_410fd3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi ]
push edi
xor ecx ecx
xor edi edi
cmp [ ebp + 0x8 ] edi
setne cl
push ecx
mov ecx esi
call [ eax + 0x4 ]
cmp [ esi + 0xc ] edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x10 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ esi + 0x20 ]
jb r-xdata
cmp [ rw-data ] edi
jne r-xdata
call sub_40a39e
push [ rw-data ]
mov eax [ esi + 0xc ]
push edi
push 0x400
push [ esi + 0x8 ]
push [ eax + 0x4 ]
call [ SetMenuItemBitmaps@IAT ]
call sub_410eb1
cmp [ rw-data ] edi
je r-xdata
sub_4110c4
call sub_411cf7
add eax 0x2c
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
retn
jmp r-xdata
call sub_411cf7
cmp [ eax + 0x30 ] 0x0
jne r-xdata
retn
push esi
push 0x1
call sub_41105b
call sub_411cf7
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
pop esi
push 0x0
call sub_412078
call sub_416568
test eax eax
je r-xdata
mov ecx [ esi + 0x20 ]
mov eax [ ecx ]
pop esi
jmp [ eax + 0x60 ]
sub_4110dd
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi ]
test eax eax
je r-xdata
xor eax eax
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi ] 0x0
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_4110fe
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov ebx ecx
mov eax [ ebx ]
push esi
call [ eax + 0x44 ]
test eax eax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebx ]
push edi
mov ecx ebx
call [ eax + 0x38 ]
mov edi eax
mov eax [ esi ]
cmp [ r--data ] eax
jne r-xdata
mov edx [ edi + 0x4 ]
jmp r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ r--data ]
jne r-xdata
mov ecx [ edx ]
test ecx ecx
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ r--data ]
jne r-xdata
mov eax [ esi ]
cmp [ ecx ] eax
jne r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ r--data ]
jne r-xdata
add edx 0x8
mov eax [ ecx + 0x4 ]
cmp eax [ esi + 0x4 ]
jne r-xdata
xor eax eax
mov ecx [ edi + 0x4 ]
xor edx edx
jmp r-xdata
mov eax [ ecx + 0x8 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
cmp [ ecx ] edx
jne r-xdata
mov eax [ ecx + 0xc ]
cmp eax [ esi + 0xc ]
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax ebx
cmp [ eax ] edx
jne r-xdata
mov edi [ edi ]
cmp edi edx
jne r-xdata
mov eax [ edx + 0x4 ]
add eax ebx
cmp [ eax ] 0x0
jne r-xdata
pop edi
add ecx 0x8
jmp r-xdata
sub_4111b1
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ecx ]
push esi
push edi
mov [ ebp - 0x8 ] ecx
call [ eax + 0x38 ]
mov edi eax
cmp [ eax ] 0x0
jne r-xdata
add eax 0x8
lea esi [ eax + 0x4 ]
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
mov eax [ esi ]
mov ecx [ ebp - 0x8 ]
mov eax [ ecx + eax ]
test eax eax
je r-xdata
mov edi [ edi ]
test edi edi
jne r-xdata
add esi 0x8
mov ecx [ eax ]
and [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x4 ]
push edx
push [ ebp + 0x8 ]
push eax
call [ ecx ]
test eax eax
jne r-xdata
mov eax [ edi + 0x4 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
test eax eax
jne r-xdata
pop edi
pop esi
leave
retn 0x4
sub_411213
mov edi edi
push esi
lea esi [ ecx + 0x4 ]
cmp [ esi ] 0x0
je r-xdata
pop esi
retn
push ebx
push r--data
call sub_4110fe
push esi
mov ebx eax
call [ InterlockedIncrement@IAT ]
push 0x0
push ebx
call [ CoDisconnectObject@IAT ]
and [ esi ] 0x0
pop ebx
sub_41125c
push 0x8
mov eax sub_42a816
call sub_41a939
mov esi ecx
lea eax [ esi + 0x4 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call [ InterlockedDecrement@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
push [ esi + 0x1c ]
lea ecx [ ebp - 0x14 ]
call sub_411d43
mov eax [ esi ]
and [ ebp - 0x4 ] ebx
mov ecx esi
call [ eax + 0x10 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x10 ] ebx
je r-xdata
call sub_41aa11
retn
push [ ebp - 0x14 ]
push ebx
call sub_4113e4
sub_4112c7
mov edi edi
push ebp
mov ebp esp
push esi
push edi
push [ ebp + 0x8 ]
mov edi ecx
call sub_4110fe
mov esi [ ebp + 0xc ]
mov [ esi ] eax
mov ecx edi
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_4111b1
mov [ esi ] eax
neg eax
sbb eax eax
and eax 0x7fffbffe
add eax 0x80004002
call sub_411241
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebp
retn 0x8
sub_41130a
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x8 ] 0x0
je r-xdata
pop ebp
jmp sub_4112c7
push [ ebp + 0xc ]
mov eax [ ecx + 0x8 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_411332
cmp [ rw-data ] 0x0
jne r-xdata
retn
push r--data
call [ GetModuleHandleW@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
push r--data
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
pop esi
call sub_40a39e
sub_4113fb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40a39e
push 0x2
pop eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4113cd
neg eax
sbb eax eax
neg eax
jmp r-xdata
pop ebp
retn 0x8
sub_41142e
mov edi edi
push ebp
mov ebp esp
sub esp 0x230
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
push edi
mov esi ecx
call sub_411332
mov edi [ esi + 0x8 ]
xor eax eax
mov [ ebp - 0x6 ] ax
mov [ ebp - 0x8 ] ax
push 0x105
lea eax [ ebp - 0x210 ]
push eax
push edi
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_419730
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x210 ]
mov [ ebp - 0x228 ] eax
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x230 ] 0x20
mov [ ebp - 0x22c ] 0x88
mov [ ebp - 0x21c ] 0x2
mov [ ebp - 0x214 ] edi
call sub_4113a0
mov [ esi + 0x80 ] eax
cmp eax 0xffffffff
jne r-xdata
push 0x6f
call [ SetLastError@IAT ]
jmp r-xdata
cmp [ esi + 0x80 ] 0xffffffff
jne r-xdata
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x21c ] 0x3
call sub_4113a0
mov [ esi + 0x80 ] eax
lea eax [ ebp - 0x230 ]
push eax
mov [ ebp - 0x21c ] 0x1
call sub_4113a0
mov [ esi + 0x80 ] eax
cmp eax 0xffffffff
jne r-xdata
and [ esi + 0x80 ] 0x0
sub_41152a
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x20 ]
push eax
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
pop esi
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x1c ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
and [ esi + 0x8 ] 0x0
sub_411580
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x2c ]
push edi
mov edi [ UnhookWindowsHookEx@IAT ]
mov [ esi ] r--data
test eax eax
je r-xdata
mov eax [ esi + 0x28 ]
test eax eax
je r-xdata
push eax
call edi
mov esi [ esi + 0xc ]
test esi esi
je r-xdata
push eax
call edi
pop edi
pop esi
retn
push esi
call sub_41a4ab
pop ecx
sub_4115b7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi ecx
mov eax [ esi + 0xc ]
neg eax
sbb eax eax
push edi
xor edi edi
xor ebx ebx
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
mov ecx esi
call sub_416b38
cmp [ ebp + 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_416c74
mov eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x4
test edi edi
je r-xdata
mov edi [ ebp - 0xc ]
mov ebx eax
push eax
call sub_409992
pop ecx
jmp r-xdata
push edi
mov ecx esi
call sub_416d85
mov [ eax ] ebx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_411627
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x3c ]
push edi
mov [ esi ] r--data
test ecx ecx
je r-xdata
push [ esi + 0x48 ]
call sub_409992
xor edi edi
pop ecx
mov ecx [ esi + 0x14 ]
inc edi
test ecx ecx
je r-xdata
mov eax [ ecx ]
call [ eax + 0x144 ]
mov ecx [ esi + 0x18 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x1c ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x20 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x24 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov ecx [ esi + 0x30 ]
test ecx ecx
je r-xdata
jmp r-xdata
mov ecx [ esi + 0x34 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov ecx [ esi + 0x38 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
mov ecx [ esi + 0x38 ]
call sub_417a60
push eax
call sub_409992
mov eax [ esi + 0x38 ]
pop ecx
pop edi
pop esi
retn
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
sub_4116d5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411580
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_41171f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411627
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_411758
push 0x4
mov eax sub_42aaf5
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x48 ]
xor edi edi
inc edi
mov [ ebp - 0x4 ] edi
test ecx ecx
je r-xdata
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ esi + 0x78 ]
mov ecx [ eax ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
lea edx [ esi + 0x4c ]
push edx
call [ eax + 0xc ]
mov ecx [ esi + 0x70 ]
test ecx ecx
je r-xdata
mov eax [ esi + 0x78 ]
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
mov eax [ ecx ]
push edi
call [ eax + 0x4 ]
push [ esi + 0x78 ]
call sub_409992
lea edi [ esi + 0x80 ]
mov eax [ edi ]
pop ecx
test eax eax
je r-xdata
mov eax [ ecx ]
push edi
call [ eax ]
lea ecx [ esi + 0x74 ]
mov [ ebp - 0x4 ] 0x0
call sub_4164df
mov ecx [ esi + 0x34 ]
sub ecx 0x10
call sub_402020
call sub_41aa11
retn
cmp eax 0xffffffff
je r-xdata
push eax
call sub_4113b8
or [ edi ] 0xffffffff
sub_4117fb
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_402760
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411849
push 0x4
mov eax sub_42ab18
call sub_41a939
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_401ee0
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_4117fb
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_402020
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x78 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x90 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x98 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0xa0 ] edi
mov [ esi + 0xa4 ] edi
mov [ esi + 0xa8 ] edi
mov [ esi + 0xac ] edi
mov [ esi + 0xb0 ] edi
mov [ esi + 0xb4 ] edi
mov [ esi + 0xb8 ] edi
mov [ esi + 0xbc ] edi
mov [ esi + 0xc0 ] edi
mov [ esi + 0xc4 ] edi
mov [ esi + 0xc8 ] edi
mov [ esi + 0xcc ] edi
mov [ esi + 0xd0 ] edi
mov [ esi + 0xd4 ] edi
mov [ esi + 0xd8 ] edi
mov [ esi + 0xdc ] edi
mov [ esi + 0xe0 ] edi
mov [ esi + 0xe4 ] edi
mov [ esi + 0xe8 ] edi
mov [ esi + 0xec ] edi
mov [ esi + 0xf0 ] edi
mov [ esi + 0xf4 ] edi
mov [ esi + 0xf8 ] edi
mov [ esi + 0xfc ] edi
mov [ esi + 0x100 ] edi
mov [ esi + 0x104 ] edi
mov [ esi + 0x108 ] edi
mov [ esi + 0x10c ] edi
mov [ esi + 0x110 ] edi
mov [ esi + 0x114 ] edi
mov [ esi + 0x118 ] edi
mov [ esi + 0x11c ] edi
mov [ esi + 0x120 ] edi
mov [ esi + 0x124 ] edi
mov [ esi + 0x128 ] edi
mov [ esi + 0x12c ] edi
mov [ esi + 0x130 ] edi
mov [ esi + 0x134 ] edi
mov [ esi + 0x138 ] edi
mov [ esi + 0x13c ] edi
mov [ esi + 0x140 ] edi
mov [ esi + 0x144 ] edi
mov [ esi + 0x148 ] edi
mov [ esi + 0x14c ] edi
mov [ esi + 0x150 ] edi
mov [ esi + 0x154 ] edi
mov [ esi + 0x158 ] edi
mov [ esi + 0x15c ] edi
mov [ esi + 0x160 ] edi
mov [ esi + 0x164 ] edi
mov [ esi + 0x168 ] edi
mov [ esi + 0x16c ] edi
mov [ esi + 0x170 ] edi
mov [ esi + 0x174 ] edi
mov [ esi + 0x178 ] edi
mov [ esi + 0x17c ] edi
mov [ esi + 0x180 ] edi
mov [ esi + 0x184 ] edi
mov eax esi
call sub_41aa11
retn
sub_411a6d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411823
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_411a8d
push 0x4
mov eax sub_42ab18
call sub_41a939
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_401ee0
lea eax [ ebp - 0x10 ]
xor edi edi
push eax
mov ecx esi
mov [ ebp - 0x4 ] edi
call sub_4117fb
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_402020
mov [ esi ] r--data
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
mov [ esi + 0x2c ] edi
mov [ esi + 0x30 ] edi
mov [ esi + 0x34 ] edi
mov [ esi + 0x38 ] edi
mov [ esi + 0x3c ] edi
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x4c ] edi
mov [ esi + 0x50 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x60 ] edi
mov eax esi
call sub_41aa11
retn
sub_411b10
push 0x4
mov eax sub_42ab18
call sub_41a939
mov esi ecx
push r--data
lea ecx [ ebp - 0x10 ]
call sub_401ee0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
call sub_4117fb
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_402020
mov [ esi ] r--data
and [ esi + 0x10 ] 0x0
mov eax esi
call sub_41aa11
retn
sub_411b57
push 0xc
mov eax sub_42ab64
call sub_41a96c
mov esi ecx
mov [ ebp - 0x14 ] esi
mov [ esi ] r--data
xor edi edi
mov [ esi + 0x1c ] edi
mov [ esi + 0x20 ] edi
lea ebx [ esi + 0x34 ]
mov ecx ebx
mov [ esi + 0x24 ] edi
mov [ esi + 0x28 ] edi
call sub_401ff0
mov [ esi + 0x40 ] edi
mov [ esi + 0x44 ] edi
or [ esi + 0x50 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x6c ] edi
mov al [ ebp + 0x8 ]
push 0x1000
mov ecx ebx
mov [ esi + 0x28 ] 0x20
mov [ esi + 0x20 ] 0x14
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] al
mov [ ebp - 0x4 ] 0x2
call sub_401d10
xor ebx ebx
inc ebx
mov [ ebp - 0x4 ] ebx
jmp sub_411bec
sub_411bec
push 0xc
mov [ esi + 0x30 ] ebx
mov [ esi + 0x44 ] 0x18
call sub_409958
mov [ esi + 0x78 ] eax
mov [ esp ] 0x188
call sub_415ff6
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x4
cmp ecx edi
je r-xdata
xor eax eax
call sub_411849
jmp r-xdata
xor eax eax
call sub_411a8d
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x64
mov [ ebp - 0x4 ] bl
mov [ ecx ] eax
call sub_415ff6
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x5
cmp ecx edi
je r-xdata
xor eax eax
call sub_411b10
jmp r-xdata
mov ecx [ esi + 0x78 ]
push 0x14
mov [ ebp - 0x4 ] bl
mov [ ecx + 0x4 ] eax
call sub_415ff6
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov [ ebp - 0x4 ] 0x6
cmp ecx edi
je r-xdata
mov ecx [ esi + 0x78 ]
mov [ ecx + 0x8 ] eax
mov [ esi + 0x7c ] ebx
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x88 ] edi
mov eax esi
call sub_41aa11
retn 0x4
sub_411ca8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411758
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_411cc8
push 0x4
mov eax sub_42a7f3
call sub_41a939
push 0x8c
call sub_415ff6
mov ecx eax
mov [ ebp - 0x10 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
call sub_41aa11
retn
call sub_411c92
sub_411cf7
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
jmp sub_40a39e
retn
push sub_411cc8
mov ecx rw-data
call sub_416095
test eax eax
je r-xdata
sub_411d43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_411cf7
cmp [ eax + 0x7c ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x80 ]
cmp eax 0xffffffff
je r-xdata
push esi
push eax
call sub_4113cd
mov [ esi + 0x4 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
sub_411d95
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax ecx
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ eax ] ecx
mov [ eax + 0x4 ] ebx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] bl
jne r-xdata
pop ebx
leave
retn 0x4
push esi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
cmp edi ebx
jne r-xdata
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
pop edi
mov [ rw-data ] eax
pop esi
cmp [ rw-data ] ebx
je r-xdata
call sub_40a39e
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ rw-data ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp eax ebx
jne r-xdata
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
sub_411e4c
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
push esi
mov esi ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov al 0x1
jmp r-xdata
cmp [ esi ] 0xffffffff
jne r-xdata
xor al al
jmp r-xdata
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
call eax
xor ecx ecx
cmp eax 0xffffffff
setne cl
mov [ esi ] eax
mov al cl
sub_411e86
mov edx [ rw-data ]
test edx edx
jne r-xdata
push esi
mov esi [ ecx ]
cmp esi 0xffffffff
je r-xdata
mov al 0x1
retn
xor al al
pop esi
retn
lea eax [ ecx + 0x4 ]
cmp [ eax ] 0x0
je r-xdata
push eax
push esi
call edx
dec eax
neg eax
sbb eax eax
inc eax
pop esi
retn
sub_411eb3
xor edx edx
cmp [ rw-data ] edx
je r-xdata
mov al 0x1
retn
mov eax [ ecx + 0x4 ]
cmp eax edx
je r-xdata
push eax
push edx
mov [ ecx + 0x4 ] edx
call [ rw-data ]
dec eax
neg eax
sbb eax eax
inc eax
retn
sub_411ed9
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push edi
xor edi edi
mov [ ecx + 0xa0 ] edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] edi
mov ebx rw-data
cmp [ rw-data ] edi
je r-xdata
xor eax eax
pop edi
inc eax
pop ebx
leave
retn
push esi
add ebx 0x8
cmp [ ebx ] edi
jne r-xdata
mov esi [ ebx + 0x4 ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push edi
push [ ebx ]
push 0x80000001
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
pop esi
mov eax [ esi ]
cmp eax edi
jne r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x8 ]
push ecx
lea ecx [ ebp - 0xc ]
push ecx
push edi
push eax
push [ ebp - 0x4 ]
call [ RegQueryValueExW@IAT ]
test eax eax
jne r-xdata
push [ ebp - 0x4 ]
call [ RegCloseKey@IAT ]
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0x14 ] 0x4
mov [ ebp - 0xc ] edi
add esi 0x8
cmp [ ebp - 0xc ] 0x4
jne r-xdata
mov ecx [ esi + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ ebp - 0x8 ] edi
je r-xdata
not ecx
and [ eax + 0xa0 ] ecx
or [ eax + 0xa0 ] ecx
jmp r-xdata
sub_411f9e
mov eax [ rw-data ]
xor edx edx
push esi
mov esi ecx
cmp eax edx
je r-xdata
mov ecx [ esi + 0x58 ]
cmp ecx edx
je r-xdata
cmp [ esi + 0x58 ] edx
jne r-xdata
mov [ rw-data ] edx
mov eax [ ecx ]
push edx
call [ eax + 0xc ]
jmp r-xdata
mov [ rw-data ] edx
mov [ esi + 0x58 ] eax
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb4 ]
xor eax eax
inc eax
pop esi
retn
sub_411fde
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x88 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ esi + 0x94 ]
test eax eax
je r-xdata
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x14 ]
pop esi
retn
push eax
push r--data
push r--data
mov ecx esi
call sub_417d1d
sub_412015
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x8c ]
test eax eax
je r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x6
je r-xdata
mov eax [ esi + 0x9c ]
test eax eax
je r-xdata
mov ecx esi
call sub_411fde
cmp eax 0x5
je r-xdata
mov eax [ esi + 0x7c ]
test eax eax
je r-xdata
call eax
xor esi esi
call sub_40f667
test eax eax
je r-xdata
push eax
call [ FreeLibrary@IAT ]
and [ esi + 0x7c ] 0x0
mov eax esi
pop esi
retn
call sub_40f667
mov esi [ eax + 0x8 ]
sub_412078
mov edi edi
push ebp
mov ebp esp
call sub_40f65e
test eax eax
je r-xdata
pop ebp
jmp [ PostQuitMessage@IAT ]
mov eax [ eax + 0x3c ]
test eax eax
je r-xdata
push 0x1
push 0x1
call eax
sub_41209a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx ebx
je r-xdata
call sub_40a39e
mov eax [ edx + 0x4 ]
mov esi eax
dec esi
je r-xdata
push edx
push edi
call sub_40f861
sub esi 0xe
je r-xdata
mov esi 0xf108
cmp eax 0x111
jne r-xdata
push r--data
mov ecx edi
call sub_41095f
mov ecx edi
test eax eax
je r-xdata
cmp [ edx + 0xc ] ebx
jne r-xdata
push r--data
call sub_41095f
test eax eax
jne r-xdata
push esi
push 0x1030
jmp r-xdata
xor ebx ebx
inc ebx
inc esi
mov eax ebx
jmp r-xdata
push esi
push 0x10
mov ecx edi
mov eax [ edi ]
call [ eax + 0x14 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41211d
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jg r-xdata
cmp ebx 0x1
jne r-xdata
push ebx
call sub_40fc98
and [ ebp + 0x8 ] 0x0
cmp [ esi + 0x58 ] 0x0
je r-xdata
xor eax eax
cmp ebx 0x1
pop esi
setl al
pop ebx
pop ebp
retn 0x4
push ebx
call sub_40fc98
mov ecx [ esi + 0x58 ]
mov eax [ ecx ]
call [ eax + 0x10 ]
mov [ ebp + 0x8 ] eax
test eax eax
je r-xdata
mov ecx [ esi + 0x58 ]
mov eax [ ecx ]
lea edx [ ebp + 0x8 ]
push edx
call [ eax + 0x14 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x88 ]
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jmp r-xdata
sub_412183
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi ecx
mov eax [ esi + 0x74 ]
push edi
xor edi edi
cmp eax edi
je r-xdata
pop edi
pop esi
leave
retn 0x4
push ebx
mov ebx [ GlobalLock@IAT ]
push eax
call ebx
movzx ecx [ eax + 0x2 ]
push [ ebp + 0x8 ]
lea eax [ eax + ecx * 2 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
jne r-xdata
pop ebx
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call OpenPrinterW
test eax eax
je r-xdata
mov eax [ esi + 0x70 ]
cmp eax edi
je r-xdata
push edi
push edi
push edi
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
push eax
push 0x42
call [ GlobalAlloc@IAT ]
push eax
mov [ esi + 0x70 ] eax
call ebx
push 0x2
push edi
push eax
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
push edi
call DocumentPropertiesW
cmp eax 0x1
je r-xdata
push eax
call sub_41691e
push [ ebp - 0x4 ]
call ClosePrinter
push [ esi + 0x70 ]
call sub_41691e
mov [ esi + 0x70 ] edi
sub_412262
mov edi edi
push ebp
mov ebp esp
sub esp 0x274
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x800
mov eax [ ebp + 0x8 ]
push esi
mov [ ebp - 0x234 ] eax
mov esi ecx
lea eax [ ebp - 0xc ]
jne r-xdata
push 0x4
push eax
push 0x3
push [ ebp + 0xc ]
call [ GetLocaleInfoW@IAT ]
test eax eax
jne r-xdata
push r--data
push 0x4
push eax
call sub_419ff4
push eax
call sub_401a00
add esp 0x10
push ebx
push edi
call sub_41adfe
mov edi [ eax ]
call sub_41adfe
xor ebx ebx
mov [ eax ] ebx
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x234 ]
lea eax [ ebp - 0x230 ]
push esi
push 0x111
mov esi 0x112
push esi
push eax
call sub_41ad9b
add esp 0x18
mov [ ebp - 0x234 ] eax
call sub_41adfe
cmp [ eax ] ebx
je r-xdata
jmp r-xdata
call sub_41adfe
mov [ eax ] edi
call sub_41adfe
push [ eax ]
call sub_40a21d
pop ecx
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_419730
leave
retn
xor eax eax
cmp [ ebp - 0x234 ] esi
jae r-xdata
cmp [ ebp - 0x234 ] 0xffffffff
je r-xdata
lea eax [ ebp - 0x230 ]
push eax
call [ PathFindFileNameW@IAT ]
push 0x3c
mov esi eax
lea eax [ ebp - 0x270 ]
push ebx
push eax
mov [ ebp - 0x274 ] 0x40
call sub_41ae80
add esp 0xc
push r--data
call [ GetModuleHandleW@IAT ]
cmp eax ebx
je r-xdata
push ebx
push ebx
lea eax [ ebp - 0x230 ]
push eax
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax ebx
je r-xdata
pop edi
pop ebx
lea ecx [ ebp - 0x274 ]
push ecx
push esi
push 0x2
push ebx
push ebx
call eax
test eax eax
je r-xdata
push ebx
push ebx
push esi
jmp r-xdata
call [ LoadLibraryExW@IAT ]
jmp r-xdata
sub_4123d1
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
call [ eax + 0x7c ]
mov eax [ esi ]
mov ecx esi
call [ eax + 0xb0 ]
mov [ esi + 0x7c ] eax
test eax eax
je r-xdata
xor eax eax
inc eax
pop esi
retn
push eax
call sub_412248
push [ esi + 0x7c ]
push rw-data
call [ InterlockedExchange@IAT ]
sub_412405
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov ecx esi
pop esi
jmp sub_40f746
call sub_41106f
test eax eax
je r-xdata
push 0x0
call sub_412078
sub_412428
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401890
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x7c ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40a39e
sub_412469
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401890
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x80 ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40a39e
sub_4124ad
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
call sub_401890
mov esi eax
xor eax eax
cmp esi eax
jne r-xdata
push eax
push eax
push 0x36a
mov [ edi + 0x5c ] eax
push [ esi + 0x20 ]
call [ PostMessageW@IAT ]
push [ ebp + 0xc ]
mov eax [ esi ]
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x84 ]
pop edi
pop esi
pop ebp
retn 0x8
call sub_40a39e
sub_4124f6
push 0x260
mov eax sub_42ab8a
call sub_41a9a2
mov eax [ ebp + 0x8 ]
mov esi [ GetModuleHandleW@IAT ]
mov [ ebp - 0x228 ] eax
mov eax [ ebp + 0xc ]
xor edi edi
push r--data
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x220 ] edi
call esi
mov ebx [ GetProcAddress@IAT ]
push r--data
push eax
mov [ ebp - 0x238 ] eax
call ebx
cmp eax edi
je r-xdata
push r--data
call esi
cmp eax edi
je r-xdata
call eax
mov esi [ ConvertDefaultLocale@IAT ]
movzx eax ax
mov [ ebp - 0x224 ] eax
movzx eax ax
mov ecx eax
shr eax 0xa
mov edi 0x3ff
shl eax 0xa
and ecx edi
movzx ecx cx
movzx eax ax
or eax ecx
push eax
mov [ ebp - 0x220 ] ecx
call esi
push [ ebp - 0x220 ]
mov [ ebp - 0x24c ] eax
call esi
push r--data
push [ ebp - 0x238 ]
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x220 ] 0x2
call ebx
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
lea ecx [ ebp - 0x224 ]
push ecx
push sub_411d7b
push 0x1
push 0x10
push eax
mov [ ebp - 0x224 ] edi
call [ EnumResourceLanguagesW@IAT ]
cmp [ ebp - 0x224 ] di
je r-xdata
call eax
movzx eax ax
mov [ ebp - 0x224 ] eax
movzx eax ax
mov ecx eax
shr eax 0xa
shl eax 0xa
and ecx edi
movzx edi cx
movzx eax ax
or eax edi
push eax
call esi
push edi
mov [ ebp - 0x244 ] eax
call esi
mov [ ebp - 0x240 ] eax
mov [ ebp - 0x220 ] 0x4
jmp r-xdata
xor eax eax
mov [ ebp - 0x12 ] ax
mov [ ebp - 0x14 ] ax
push 0x105
lea eax [ ebp - 0x21c ]
push eax
mov esi __dos_header
push esi
call [ GetModuleFileNameW@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x220 ]
inc [ ebp - 0x220 ]
mov [ ebp + eax * 4 - 0x24c ] 0x800
movzx eax [ ebp - 0x224 ]
mov esi [ ConvertDefaultLocale@IAT ]
mov ecx eax
shr eax 0xa
shl eax 0xa
and ecx 0x3ff
movzx edi cx
movzx eax ax
or eax edi
push eax
call esi
push edi
mov [ ebp - 0x24c ] eax
call esi
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x220 ] 0x2
push 0x20
pop edi
push edi
xor ebx ebx
lea eax [ ebp - 0x26c ]
push ebx
push eax
call sub_41ae80
add esp 0xc
lea eax [ ebp - 0x21c ]
push 0xffffffff
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x26c ] edi
mov [ ebp - 0x264 ] eax
mov [ ebp - 0x258 ] 0x3e8
mov [ ebp - 0x250 ] esi
mov [ ebp - 0x268 ] 0x88
call sub_411d95
lea eax [ ebp - 0x26c ]
push eax
lea ecx [ ebp - 0x230 ]
mov [ ebp - 0x4 ] ebx
call sub_411e4c
test al al
je r-xdata
call sub_41aa25
retn 0x8
xor esi esi
cmp [ ebp - 0x220 ] ebx
jle r-xdata
lea ecx [ ebp - 0x230 ]
call sub_411e86
xor esi esi
jmp r-xdata
push [ ebp + esi * 4 - 0x24c ]
mov ecx [ ebp - 0x228 ]
push [ ebp - 0x234 ]
call sub_412262
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ ebp - 0x230 ]
call sub_4123ac
mov eax esi
jmp r-xdata
mov esi eax
inc esi
cmp esi [ ebp - 0x220 ]
jl r-xdata
sub_412771
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
mov eax ecx
mov esi 0x104
push esi
lea ecx [ ebp - 0x220 ]
push ecx
push [ eax + 0x44 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
xor eax eax
cmp eax esi
je r-xdata
push edi
lea eax [ ebp - 0x220 ]
push eax
call [ PathFindExtensionW@IAT ]
xor ecx ecx
mov [ eax ] cx
mov esi r--data
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x220 ]
movsd [ edi ] [ esi ]
push eax
lea eax [ ebp - 0x18 ]
push eax
movsw [ edi ] [ esi ]
call sub_4124f6
pop edi
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_419730
leave
retn
sub_4127ea
push 0x4
mov eax sub_42abba
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40fa03
xor edi edi
mov [ ebp - 0x4 ] edi
mov [ esi ] r--data
cmp [ ebp + 0x8 ] edi
je r-xdata
mov [ esi + 0x50 ] edi
push [ ebp + 0x8 ]
call sub_41b45b
pop ecx
mov [ esi + 0x50 ] eax
jmp r-xdata
lea ecx [ ebx + 0x74 ]
call sub_40fa78
cmp eax edi
je r-xdata
call sub_40a39e
call sub_411cf7
mov ebx eax
cmp ebx edi
jne r-xdata
mov [ eax + 0x4 ] esi
call [ GetCurrentThread@IAT ]
mov [ esi + 0x2c ] eax
call [ GetCurrentThreadId@IAT ]
mov [ esi + 0x30 ] eax
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esi + 0x92 ] ax
mov [ esi + 0x90 ] ax
mov [ esi + 0x44 ] edi
mov [ esi + 0x7c ] edi
mov [ esi + 0x64 ] edi
mov [ esi + 0x68 ] edi
mov [ esi + 0x54 ] edi
mov [ esi + 0x60 ] edi
mov [ esi + 0x88 ] edi
mov [ esi + 0x58 ] edi
mov [ esi + 0x48 ] edi
mov [ esi + 0x8c ] edi
mov [ esi + 0x80 ] edi
mov [ esi + 0x84 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0x74 ] edi
mov [ esi + 0x94 ] edi
mov [ esi + 0x9c ] edi
mov [ esi + 0x5c ] edi
mov [ esi + 0x6c ] edi
mov [ esi + 0x98 ] 0x200
mov eax esi
call sub_41aa11
retn 0x4
sub_4128c1
push 0x414
mov eax sub_42abeb
call sub_41a9d8
mov esi ecx
mov [ ebp - 0x41c ] esi
mov [ esi ] r--data
mov ecx [ esi + 0x58 ]
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x4 ] 0x1
cmp ecx ebx
je r-xdata
mov ecx [ esi + 0x88 ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
call sub_411cf7
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x18 ]
mov eax [ esi + 0x70 ]
cmp eax ebx
je r-xdata
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ esi + 0x74 ]
cmp eax ebx
je r-xdata
push eax
call sub_41691e
mov ecx [ rw-data ]
cmp ecx ebx
je r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
movzx eax [ esi + 0x90 ]
cmp ax bx
je r-xdata
push eax
call sub_41691e
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
mov [ rw-data ] ebx
movzx eax [ esi + 0x92 ]
cmp ax bx
je r-xdata
push eax
call [ GlobalDeleteAtom@IAT ]
mov ecx [ esi + 0x8c ]
cmp ecx ebx
je r-xdata
push eax
call [ GlobalDeleteAtom@IAT ]
call sub_411cf7
mov ecx [ eax + 0x10 ]
cmp ecx [ esi + 0x50 ]
jne r-xdata
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
cmp [ eax + 0x4 ] esi
jne r-xdata
mov [ eax + 0x10 ] ebx
push [ esi + 0x50 ]
call sub_41a4ab
push [ esi + 0x54 ]
call sub_41a4ab
push [ esi + 0x60 ]
call sub_41a4ab
push [ esi + 0x64 ]
call sub_41a4ab
push [ esi + 0x68 ]
call sub_41a4ab
add esp 0x14
mov [ esi + 0x2c ] ebx
jmp r-xdata
mov [ eax + 0x4 ] ebx
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
call sub_40f6f0
call sub_41aa34
retn
sub_4129da
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x420 ]
mov eax [ esi ]
xor ebx ebx
push ebx
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x341
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x341
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
mov edi [ ebp - 0x418 ]
push ebx
push ebx
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_412a98
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4128c1
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_412ab9
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
call [ PathFindFileNameW@IAT ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40a39e
push 0xffffffff
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40a148
add esp 0x10
xor eax eax
push eax
call [ lstrlenW@IAT ]
inc eax
jmp r-xdata
pop ebp
retn 0xc
sub_412af9
mov edi edi
push ebp
mov ebp esp
sub esp 0x618
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov esi ecx
call sub_411cf7
mov ebx eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0xc ] eax
mov edi 0x104
push edi
lea eax [ ebp - 0x20c ]
push eax
push [ esi + 0x44 ]
call [ GetModuleFileNameW@IAT ]
test eax eax
je r-xdata
call sub_416f65
cmp eax edi
jne r-xdata
lea eax [ ebp - 0x20c ]
push eax
call [ PathFindExtensionW@IAT ]
mov [ ebp - 0x618 ] eax
test eax eax
jne r-xdata
mov ecx [ ebp - 0x618 ]
xor eax eax
mov [ ecx ] ax
push edi
lea eax [ ebp - 0x414 ]
push eax
lea eax [ ebp - 0x20c ]
push eax
call sub_412ab9
test eax eax
je r-xdata
call sub_416f65
cmp [ esi + 0x60 ] 0x0
jne r-xdata
call sub_416f65
mov eax [ esi + 0x50 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x414 ]
push eax
call sub_41b45b
pop ecx
mov [ esi + 0x60 ] eax
test eax eax
jne r-xdata
mov [ ebx + 0x10 ] eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
push 0x100
lea eax [ ebp - 0x614 ]
push eax
push 0xe000
call sub_40a4da
test eax eax
je r-xdata
call sub_40a366
cmp [ esi + 0x68 ] 0x0
jne r-xdata
mov eax [ ebp - 0x618 ]
lea ecx [ ebp - 0x20c ]
sub eax ecx
sar eax 0x1
mov ecx edi
sub ecx eax
cmp [ esi + 0x6c ] 0x1
jne r-xdata
push [ esi + 0x60 ]
lea eax [ ebp - 0x614 ]
push eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
push r--data
lea eax [ ebp - 0x414 ]
push edi
push eax
call sub_41a191
push eax
call sub_401a00
lea eax [ ebp - 0x414 ]
push eax
call sub_41b45b
add esp 0x14
mov [ esi + 0x68 ] eax
test eax eax
je r-xdata
push r--data
push r--data
jmp r-xdata
call sub_41b45b
mov [ esi + 0x50 ] eax
pop ecx
test eax eax
je r-xdata
mov ecx [ ebp - 0x618 ]
xor eax eax
mov [ ecx ] ax
push ecx
push [ ebp - 0x618 ]
call sub_41222a
lea eax [ ebp - 0x20c ]
add esp 0xc
push eax
call sub_41b45b
pop ecx
mov [ esi + 0x64 ] eax
test eax eax
je r-xdata
sub_412c8e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ SetErrorMode@IAT ]
push 0x0
call esi
or eax 0x8001
push eax
call esi
call sub_411cf7
mov esi [ ebp + 0x8 ]
mov ecx eax
mov [ eax + 0x8 ] esi
mov [ eax + 0xc ] esi
call sub_41142e
call sub_411cf7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
call sub_411cf7
cmp [ eax + 0x14 ] 0x0
pop esi
jne r-xdata
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x48 ] ecx
mov ecx [ ebp + 0x14 ]
mov [ eax + 0x4c ] ecx
mov ecx eax
mov [ eax + 0x44 ] esi
call sub_412af9
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
call sub_40fc6a
xor eax eax
inc eax
pop ebp
retn 0x10
push r--data
push eax
call [ GetProcAddress@IAT ]
mov [ rw-data ] eax
sub_412d23
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
retn
cmp [ esi + 0x4 ] 0x0
je r-xdata
and [ esi ] 0x0
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_412d45
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
mov eax ecx
mov ecx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0x10 ]
mov [ eax + 0x8 ] esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop esi
test ecx ecx
je r-xdata
call sub_40a39e
test edx edx
jne r-xdata
pop ebp
retn 0xc
sub_412d7f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
test [ ebp + 0x8 ] 0x1
je r-xdata
push [ esi ]
call sub_409992
pop ecx
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_412da9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor edi edi
cmp ebx edi
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax edi
jl r-xdata
call sub_40a39e
cmp ebx edi
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx edi
jne r-xdata
cmp [ esi + 0x4 ] edi
je r-xdata
cmp ebx [ esi + 0xc ]
jg r-xdata
mov eax [ esi + 0x10 ]
cmp ebx eax
mov [ ebp + 0x8 ] ebx
jg r-xdata
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] edi
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x8 ] edi
jle r-xdata
mov eax [ esi + 0x10 ]
cmp eax edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax ebx
jge r-xdata
mov edi [ ebp + 0x8 ]
imul edi edi 0xc
push edi
call sub_409958
push edi
xor edi edi
push edi
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
cmp ebx edi
jle r-xdata
mov [ ebp + 0x8 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ esi + 0x4 ]
call sub_409992
pop ecx
mov [ esi + 0x4 ] edi
mov [ ebp + 0x8 ] edi
mov ecx [ esi + 0xc ]
add eax ecx
cmp ebx eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
jle r-xdata
mov edx ebx
sub edx eax
imul eax eax 0xc
imul edx edx 0xc
push edx
add eax ecx
push edi
push eax
call sub_41ae80
mov eax ebx
sub eax [ esi + 0x8 ]
add esp 0xc
xor ecx ecx
test eax eax
jle r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi + 0xc ] eax
xor ecx ecx
mov edx ebx
mov ecx [ esi + 0x4 ]
add ecx [ ebp + 0x8 ]
push edi
call sub_412d7f
add [ ebp + 0x8 ] 0xc
inc ebx
cmp ebx [ esi + 0x8 ]
jl r-xdata
mov edi [ ebp + 0x8 ]
cmp edi ecx
jl r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx 0x400
cmp eax ecx
jle r-xdata
push 0x4
pop eax
jmp r-xdata
mov [ esi + 0x8 ] ebx
sub eax ebx
mov [ ebp + 0x8 ] edi
test eax eax
jle r-xdata
mov eax [ esi + 0x8 ]
add eax ecx
imul eax eax 0xc
add eax [ esi + 0x4 ]
je r-xdata
add ecx 0xc
dec edx
jne r-xdata
mov [ eax ] edi
mov [ eax + 0x4 ] edi
imul edi edi 0xc
push edi
call sub_409958
mov ecx [ esi + 0x8 ]
imul ecx ecx 0xc
push ecx
push [ esi + 0x4 ]
mov [ ebp + 0xc ] eax
push edi
push eax
call sub_401840
mov eax [ esi + 0x8 ]
mov edi [ ebp + 0xc ]
mov ecx ebx
sub ecx eax
imul eax eax 0xc
imul ecx ecx 0xc
push ecx
add eax edi
push 0x0
push eax
call sub_41ae80
mov eax ebx
sub eax [ esi + 0x8 ]
add esp 0x20
xor ecx ecx
test eax eax
jle r-xdata
mov eax ecx
mov edi ebx
imul edi edi 0xc
mov eax ebx
sub eax [ esi + 0x8 ]
inc ecx
cmp ecx eax
jl r-xdata
mov [ eax ] edi
mov [ eax + 0x4 ] edi
mov eax [ esi + 0x4 ]
add eax ecx
je r-xdata
jmp r-xdata
push [ esi + 0x4 ]
call sub_409992
pop ecx
mov [ esi + 0x4 ] edi
mov eax [ esi + 0x8 ]
add eax ecx
imul eax eax 0xc
add eax edi
je r-xdata
mov ecx [ esi + 0x4 ]
push 0x0
add ecx edi
call sub_412d7f
mov eax [ esi + 0x8 ]
inc [ ebp + 0x8 ]
sub eax ebx
add edi 0xc
cmp [ ebp + 0x8 ] eax
jl r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
sub eax [ esi + 0x8 ]
inc ecx
cmp ecx eax
jl r-xdata
and [ eax ] 0x0
and [ eax + 0x4 ] 0x0
sub_412faf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40a39e
cmp eax [ ecx + 0x8 ]
jge r-xdata
imul eax eax 0xc
add eax [ ecx + 0x4 ]
pop ebp
retn 0x4
sub_412fd0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_412d23
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
mov eax [ ebp + 0xc ]
mov [ esi + 0x4 ] eax
pop esi
pop ebp
retn 0x8
sub_412fed
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push ebx
push esi
not edx
push edi
mov edi eax
mov [ ebp + 0x10 ] ecx
test dl 0x1
je r-xdata
test ecx ecx
jne r-xdata
test eax eax
jbe r-xdata
test eax eax
jbe r-xdata
call sub_40a39e
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov ebx 0xaaaaaaa
cmp edi ebx
jae r-xdata
mov ebx 0xaaaaaaa
cmp edi ebx
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi ebx
imul esi esi 0xc
push esi
push [ ebp + 0x10 ]
call sub_401810
add [ ebp + 0x10 ] esi
sub edi ebx
test edi edi
ja r-xdata
mov ebx edi
mov ecx [ ebp + 0x8 ]
mov esi ebx
imul esi esi 0xc
push esi
push [ ebp + 0x10 ]
call sub_4104c9
add [ ebp + 0x10 ] esi
sub edi ebx
test edi edi
ja r-xdata
mov ebx edi
jmp r-xdata
sub_413075
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax ecx
cmp eax edx
je r-xdata
pop ebp
retn 0x4
cmp [ edx + 0x8 ] 0x0
mov ecx [ edx ]
je r-xdata
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
and [ edx ] 0x0
sub_4130a0
mov edi edi
push ebx
push esi
mov esi ecx
xor ebx ebx
mov [ esi ] r--data
cmp [ esi + 0x4 ] ebx
je r-xdata
pop esi
pop ebx
retn
push edi
xor edi edi
cmp [ esi + 0x8 ] ebx
jle r-xdata
push [ esi + 0x4 ]
call sub_409992
pop ecx
pop edi
mov ecx [ esi + 0x4 ]
push 0x0
add ecx ebx
call sub_412d7f
inc edi
add ebx 0xc
cmp edi [ esi + 0x8 ]
jl r-xdata
sub_4130dd
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
not eax
mov esi ecx
mov ecx edi
test al 0x1
je r-xdata
call sub_4105c1
push 0xffffffff
push eax
mov ecx esi
call sub_412da9
push [ esi + 0x8 ]
call sub_410590
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push edi
call sub_412fed
pop edi
pop esi
pop ebp
retn 0x4
sub_41311f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4130a0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_413140
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jge r-xdata
cmp edi [ esi + 0x8 ]
jl r-xdata
call sub_40a39e
push [ ebp + 0xc ]
mov ecx edi
imul ecx ecx 0xc
add ecx [ esi + 0x4 ]
call sub_413075
pop edi
pop esi
pop ebp
retn 0x8
push 0xffffffff
lea eax [ edi + 0x1 ]
push eax
call sub_412da9
sub_413199
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x8 ]
cmp [ ecx ] 0xffffffff
jne r-xdata
mov eax [ edx + 0x8 ]
mov eax [ eax ]
pop ebp
retn 0x4
push esi
mov esi [ edx + 0x4 ]
mov eax esi
jmp r-xdata
cmp [ eax + 0x18 ] 0xffffffff
jne r-xdata
add eax 0x20
sub eax esi
sar eax 0x5
mov [ ecx ] eax
pop esi
sub_4131cb
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push esi
mov esi ecx
je r-xdata
push r--data
mov ecx esi
call sub_4110fe
pop esi
pop ebp
retn 0x4
call sub_411241
sub_4131f7
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x16
jb r-xdata
movzx eax [ ebp + 0xc ]
mov eax [ eax * 4 + r--data ]
push esi
mov esi [ ebp + 0x8 ]
mov cl [ esi ]
add eax 0x4
test cl cl
je r-xdata
call sub_40a39e
pop esi
pop ebp
retn 0x8
push edi
inc esi
mov cl [ esi ]
test cl cl
jne r-xdata
mov edi r--data
test cl 0x40
jne r-xdata
cmp cl 0xff
je r-xdata
pop edi
mov dl cl
and dl 0xbf
cmp dl 0x16
jae r-xdata
mov edi r--data
movzx ecx cl
and ecx 0xbf
add eax [ edi + ecx * 4 ]
sub_4132b5
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push esi
push edi
mov edi [ ebp + 0x14 ]
lea esi [ eax - 0x10 ]
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x14 ]
push ecx
mov ecx esi
call [ eax + 0x18 ]
test eax eax
je r-xdata
mov eax 0x8002000b
jmp r-xdata
push edi
lea eax [ ebp - 0x14 ]
push eax
push [ ebp + 0x10 ]
mov ecx esi
call sub_414864
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_419730
leave
retn 0x10
sub_413313
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
or edx 0xffffffff
sub edx eax
cmp edx ecx
jae r-xdata
add eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn
mov eax 0x80070057
pop ebp
retn
sub_413339
push 0x20
mov eax sub_42ac1b
call sub_41a939
mov [ ebp - 0x14 ] ecx
lea eax [ ebp - 0x2c ]
xor esi esi
push eax
mov [ ebp - 0x10 ] esi
call sub_415d78
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
mov edi [ eax ]
movzx eax [ ebx + 0xc ]
cmp ax 0xc
je r-xdata
movzx eax [ ebx + 0xc ]
mov esi [ ebx + 0x18 ]
add esi [ ebp - 0x14 ]
add eax 0xfffffffe
cmp eax 0x13
ja r-xdata
cmp [ edi ] ax
je r-xdata
mov [ ebp - 0x10 ] 0x80020008
jmp [ eax * 4 + jump_table_41346d ]
push eax
push esi
push edi
lea eax [ ebp - 0x2c ]
push eax
call [ VariantChangeType@IAT ]
cmp eax esi
mov [ ebp - 0x10 ] eax
jge r-xdata
mov eax [ ebp - 0x10 ]
cmp [ ebx + 0x14 ] edi
je r-xdata
mov al [ edi + 0x8 ]
mov [ esi ] al
jmp r-xdata
mov ax [ edi + 0x8 ]
mov [ esi ] ax
jmp r-xdata
mov eax [ edi + 0x8 ]
mov eax [ edi + 0x8 ]
mov [ esi ] eax
mov eax [ edi + 0xc ]
mov [ esi + 0x4 ] eax
jmp r-xdata
fld [ edi + 0x8 ]
fstp [ esi ]
jmp r-xdata
fld [ edi + 0x8 ]
fstp [ esi ]
jmp r-xdata
push [ edi + 0x8 ]
push esi
call sub_41811a
jmp r-xdata
xor eax eax
cmp [ edi + 0x8 ] ax
setne al
jmp r-xdata
push edi
push esi
call [ VariantCopy@IAT ]
test eax eax
je r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
lea edi [ ebp - 0x2c ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] esi
jmp r-xdata
mov esi [ ebp - 0x14 ]
push [ esi + 0x1c ]
lea ecx [ ebp - 0x1c ]
call sub_411d43
mov ecx esi
mov [ ebp - 0x4 ] edi
call [ ebx + 0x14 ]
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
call [ VariantClear@IAT ]
xor edi edi
cmp [ ebp - 0x10 ] edi
jl r-xdata
mov [ esi ] eax
jmp r-xdata
jmp r-xdata
push esi
call sub_4110dd
jmp r-xdata
mov eax [ edi + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
call sub_41aa11
retn 0xc
push [ ebp - 0x1c ]
push edi
call sub_4113e4
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
sub_4134bd
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
jmp r-xdata
test esi esi
jne r-xdata
mov edi [ esi + 0x4 ]
push esi
call sub_413199
xor ebx ebx
mov [ ebp + 0x8 ] eax
test eax eax
jbe r-xdata
or eax 0xffffffff
mov esi [ esi ]
inc [ ebp - 0x4 ]
mov eax 0xfff
cmp [ edi + 0xc ] ax
je r-xdata
add edi 0x20
inc ebx
cmp ebx [ ebp + 0x8 ]
jb r-xdata
push [ ebp + 0xc ]
push [ edi ]
call sub_40b90e
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
cmp eax 0xffffffff
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn 0x8
movzx eax [ ebp - 0x4 ]
shl eax 0x10
inc ebx
movzx ecx bx
or eax ecx
jmp r-xdata
sub_41352f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push ebx
push esi
push edi
call [ eax + 0x30 ]
mov ebx [ ebp + 0xc ]
mov esi eax
mov [ ebp + 0x8 ] esi
test ebx ebx
jne r-xdata
jle r-xdata
mov ecx esi
test esi esi
je r-xdata
mov ecx esi
test esi esi
je r-xdata
xor eax eax
mov edi esi
test esi esi
je r-xdata
mov eax [ ecx + 0x4 ]
or edi 0xffffffff
jmp r-xdata
xor eax eax
mov eax [ ecx + 0x4 ]
jmp r-xdata
mov ecx ebx
shr ecx 0x10
cmp [ eax + 0x18 ] edi
jne r-xdata
cmp [ eax + 0x18 ] 0xffffffff
jne r-xdata
test edi edi
je r-xdata
mov edi [ edi ]
inc eax
test edi edi
jne r-xdata
mov edx 0xfff
cmp [ eax + 0xc ] dx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
cmp [ eax + 0x4 ] ebx
je r-xdata
mov ecx [ ecx ]
test ecx ecx
jne r-xdata
push edi
movzx esi bx
call sub_413199
cmp esi eax
ja r-xdata
movzx edx cx
cmp eax edx
jae r-xdata
mov ebx [ eax + 0x4 ]
cmp ebx edi
jne r-xdata
add eax 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
add eax 0x20
mov esi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
shl esi 0x5
lea eax [ esi + eax - 0x20 ]
mov ecx [ eax + 0x4 ]
cmp ecx 0xffffffff
je r-xdata
test ebx ebx
push [ eax ]
push esi
call sub_4134bd
mov ebx eax
cmp ebx edi
je r-xdata
cmp ecx ebx
je r-xdata
sub_4135fe
push 0x14
push r--data
call sub_41b624
mov [ ebp - 0x1d ] 0x1
xor ebx ebx
mov [ ebp - 0x4 ] ebx
mov [ ebp - 0x24 ] ebx
push 0x2000
push [ ebp + 0x8 ]
lea eax [ ebp - 0x24 ]
push eax
call sub_413313
add esp 0xc
cmp eax ebx
jge r-xdata
mov eax [ ebp - 0x24 ]
call sub_41b680
mov [ ebp - 0x18 ] esp
jmp r-xdata
mov [ ebp - 0x1d ] bl
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov al [ ebp - 0x1d ]
lea esp [ ebp - 0x34 ]
call sub_41b66c
retn
sub_413673
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
push 0xffffffff
push [ ecx + 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a148
xor eax eax
add esp 0x10
inc eax
pop ebp
retn 0xc
and [ eax ] 0x0
sub_41369c
mov edi edi
push esi
push edi
mov esi ecx
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
retn
push ebx
call sub_40a39e
push edi
mov ecx esi
call sub_412faf
cmp [ eax + 0x4 ] 0x0
je r-xdata
push edi
mov ecx esi
call sub_412faf
push edi
mov ecx esi
mov ebx eax
call sub_412faf
mov ecx [ ebx ]
mov ecx [ ecx ]
mov eax [ eax + 0x4 ]
neg ecx
sbb ecx ecx
inc edi
mov [ eax ] cx
cmp edi [ esi + 0x8 ]
jl r-xdata
push edi
mov ecx esi
call sub_412faf
cmp [ eax ] 0x0
je r-xdata
pop ebx
sub_4136f5
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x18 ]
add eax ecx
movzx ecx [ edx + 0xc ]
push esi
mov esi [ ebp + 0xc ]
cmp cx 0xc
je r-xdata
movzx ecx [ edx + 0xc ]
add ecx 0xfffffffe
cmp ecx 0x13
ja r-xdata
mov [ esi ] cx
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
jmp [ ecx * 4 + jump_table_413791 ]
mov al [ eax ]
mov [ esi + 0x8 ] al
jmp r-xdata
mov ax [ eax ]
mov eax [ eax ]
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
jmp r-xdata
fld [ eax ]
fstp [ esi + 0x8 ]
jmp r-xdata
fld [ eax ]
fstp [ esi + 0x8 ]
jmp r-xdata
mov ecx eax
call sub_403d40
jmp r-xdata
mov eax [ eax ]
neg eax
sbb eax eax
jmp r-xdata
push eax
push esi
call [ VariantCopy@IAT ]
test eax eax
je r-xdata
mov eax [ eax ]
mov [ esi + 0x8 ] eax
test eax eax
je r-xdata
pop esi
pop ebp
retn 0xc
mov [ esi + 0x8 ] eax
jmp r-xdata
mov [ esi + 0x8 ] ax
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
jmp r-xdata
sub_4137e9
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x18 ]
sub ecx 0x10
mov [ esi ] r--data
call sub_402020
mov ecx [ esi + 0x14 ]
sub ecx 0x10
call sub_402020
mov ecx [ esi + 0xc ]
sub ecx 0x10
pop esi
jmp sub_402020
sub_413816
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4137e9
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_413837
push 0x14
mov eax sub_42ac3e
call sub_41a939
mov edi [ ebp + 0x8 ]
mov [ edi ] ecx
add edi 0x4
cmp [ ebp + 0x14 ] 0x6
je r-xdata
mov eax [ ebp + 0x10 ]
mov [ edi ] eax
add edi 0x4
cmp [ ebp + 0x14 ] 0xc
jne r-xdata
cmp [ eax ] 0x0
jne r-xdata
mov ecx [ ebp + 0x18 ]
mov eax [ ecx ]
and [ ebp - 0x10 ] 0x0
mov [ ebp - 0x14 ] eax
mov eax [ ecx + 0x8 ]
mov [ ebp + 0x14 ] eax
mov eax [ ecx + 0xc ]
mov [ ebp + 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp + 0x8 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
movzx ax [ eax ]
mov edx [ ebp + 0x14 ]
movzx ebx ax
mov eax 0xff
dec edx
mov esi eax
mov [ ebp + 0x14 ] edx
cmp bx si
je r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp edx [ ebp + 0x10 ]
jl r-xdata
test bl 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax 0x8002000e
cmp bx ax
jne r-xdata
cmp bx ax
je r-xdata
and ebx 0xffbf
or ebx 0x4000
xor eax eax
mov eax [ ecx + 0x8 ]
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
mov eax 0x8002000f
jmp r-xdata
call sub_41aa11
retn 0x20
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
and [ ebp + 0x10 ] 0x0
mov [ ebp + 0x14 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x14 ]
shl eax 0x4
lea esi [ eax + edx ]
cmp bx 0xc
je r-xdata
cmp bx 0xc
jne r-xdata
inc [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
push 0x4
pop edx
test ebx 0x4000
je r-xdata
cmp bx [ esi ]
je r-xdata
push 0xa
pop eax
mov [ rw-data ] ax
mov [ rw-data ] 0x80020004
mov esi rw-data
movzx eax bx
add eax 0xfffffffe
cmp eax 0x13
ja r-xdata
mov eax 0x400b
cmp bx ax
jne r-xdata
mov ecx [ ebp + 0x20 ]
push ebx
push 0x0
add eax ecx
push esi
push eax
mov [ ebp + 0xc ] eax
call [ VariantChangeType@IAT ]
test eax eax
jl r-xdata
jmp [ eax * 4 + jump_table_413a57 ]
mov esi [ esi + 0x8 ]
cmp [ ebp + 0x24 ] 0x0
je r-xdata
mov ecx [ ebp + 0x1c ]
mov edx [ ebp + 0x14 ]
mov [ ecx ] edx
jmp r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x18 ]
jmp r-xdata
mov [ edi ] esi
jmp r-xdata
movsx eax [ esi + 0x8 ]
jmp r-xdata
movzx eax [ esi + 0x8 ]
jmp r-xdata
movsx eax [ esi + 0x8 ]
jmp r-xdata
movzx eax [ esi + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ edi ] eax
mov eax [ esi + 0xc ]
mov [ edi + 0x4 ] eax
fld [ esi + 0x8 ]
fstp [ edi ]
jmp r-xdata
fld [ esi + 0x8 ]
fstp [ edi ]
jmp r-xdata
xor eax eax
cmp [ esi + 0x8 ] ax
setne al
jmp r-xdata
mov eax [ esi + 0x8 ]
add edi edx
mov eax [ esi + 0x8 ]
xor ebx ebx
cmp [ eax ] bx
push edx
setne bl
call sub_409958
pop ecx
test eax eax
je r-xdata
mov [ edi ] eax
add edi 0x8
jmp r-xdata
xor ebx ebx
mov [ eax ] ebx
mov ebx eax
jmp r-xdata
mov ecx [ ebp + 0x18 ]
push 0x4
mov esi ebx
pop edx
jmp r-xdata
push [ ebp - 0x20 ]
call sub_409992
pop ecx
push 0x1
push [ esi + 0x8 ]
lea ecx [ ebp - 0x20 ]
push ebx
call sub_412d45
mov ecx [ ebp + 0x24 ]
and [ ebp - 0x4 ] 0x0
push eax
call sub_413180
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x18 ] 0x0
je r-xdata
sub_413aa7
push 0x50
mov eax sub_42ac69
call sub_41a9d8
mov [ ebp - 0x2c ] ecx
push [ ecx + 0x1c ]
lea ecx [ ebp - 0x28 ]
call sub_411d43
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x8 ]
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0x19 ] 0x0
mov [ ebp - 0x18 ] eax
test eax eax
jne r-xdata
push [ ebp - 0x18 ]
call [ lstrlenA@IAT ]
test [ ebp + 0xc ] 0xc
mov edi [ ebx + 0x10 ]
mov esi eax
movzx eax [ ebx + 0xc ]
mov [ ebp - 0x20 ] eax
je r-xdata
lea eax [ ebp - 0x19 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebp + 0x14 ]
mov eax [ esi + 0x8 ]
shl eax 0x4
push eax
call sub_4135fe
pop ecx
test al al
je r-xdata
lea edi [ esi + 0x3 ]
push edi
call sub_4135fe
pop ecx
test al al
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov esi [ esi + 0x8 ]
cmp esi 0x7ffffff
ja r-xdata
mov eax edi
call sub_41b680
mov [ ebp - 0x10 ] esp
mov edi esp
push esi
push [ ebp - 0x18 ]
lea eax [ esi + 0x3 ]
push eax
push edi
call sub_401840
movzx eax [ ebx + 0xc ]
mov [ edi + esi ] 0xff
add esp 0x10
inc esi
and [ ebp - 0x20 ] 0x0
mov [ edi + esi ] al
mov [ ebp - 0x18 ] edi
mov [ edi + esi + 0x1 ] 0x0
mov edi [ ebx + 0x14 ]
mov eax 0x8007000e
jmp r-xdata
push [ ebp - 0x28 ]
push 0x0
call sub_4113e4
shl esi 0x4
mov eax esi
call sub_41b680
mov [ ebp - 0x10 ] esp
mov [ ebp - 0x30 ] esp
push esi
push 0x0
push [ ebp - 0x30 ]
call sub_41ae80
add esp 0xc
push [ ebp - 0x20 ]
push [ ebp - 0x18 ]
call sub_4131f7
mov ebx eax
lea esi [ ebx + 0x10 ]
push esi
call sub_4135fe
pop ecx
test al al
je r-xdata
lea esp [ ebp - 0x6c ]
call sub_41aa34
retn 0x14
mov eax esi
call sub_41b680
mov [ ebp - 0x10 ] esp
xor eax eax
mov esi esp
mov [ ebp - 0x58 ] r--data
mov [ ebp - 0x54 ] eax
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x50 ] eax
mov ecx [ ebp - 0x2c ]
lea eax [ ebp - 0x58 ]
push eax
push [ ebp - 0x30 ]
lea eax [ ebp - 0x40 ]
push [ ebp + 0x18 ]
mov [ ebp - 0x4 ] 0x1
push [ ebp + 0x14 ]
push [ ebp - 0x20 ]
push eax
push [ ebp - 0x18 ]
push esi
call sub_413837
and [ ebp - 0x18 ] 0x0
mov [ ebp - 0x2c ] eax
test eax eax
jne r-xdata
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
movzx eax [ ebp - 0x20 ]
push ebx
push esi
mov [ ebp - 0x4 ] 0x2
push edi
cmp eax 0x4
je r-xdata
cmp [ ebp - 0x2c ] 0x0
lea ecx [ ebp - 0x58 ]
je r-xdata
mov ebx [ ebp - 0x30 ]
call sub_418159
fstp [ ebp - 0x44 ]
fld [ ebp - 0x44 ]
fstp [ ebp - 0x40 ]
cmp eax 0x5
je r-xdata
call sub_41369c
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0x0
call sub_4130a0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
push ebx
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x8 ]
jb r-xdata
call sub_418159
fstp [ ebp - 0x40 ]
jmp r-xdata
cmp eax 0x7
je r-xdata
movzx eax [ ebp - 0x20 ]
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x20 ]
mov [ eax ] cx
movzx ecx cx
add ecx 0xfffffffe
cmp ecx 0x13
ja r-xdata
mov eax [ ebp - 0x2c ]
jmp r-xdata
push [ ebp - 0x28 ]
push 0x0
call sub_4113e4
mov [ ebp - 0x4 ] 0x1
add eax 0xffffffec
cmp eax 0x1
ja r-xdata
push [ ebp - 0x18 ]
call [ SysFreeString@IAT ]
dec eax
je r-xdata
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x0
call sub_4130a0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
jmp [ ecx * 4 + jump_table_413daf ]
call sub_418159
mov [ ebp - 0x18 ] eax
jmp r-xdata
call sub_418159
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x3c ] edx
jmp r-xdata
xor eax eax
push [ ebp - 0x28 ]
push 0x0
call sub_4113e4
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub eax 0x3
je r-xdata
mov cl [ ebp - 0x18 ]
mov [ eax + 0x8 ] cl
jmp r-xdata
mov cx [ ebp - 0x18 ]
mov ecx [ ebp - 0x40 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ eax + 0xc ] ecx
jmp r-xdata
fld [ ebp - 0x40 ]
fstp [ eax + 0x8 ]
jmp r-xdata
fld [ ebp - 0x40 ]
fstp [ eax + 0x8 ]
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x18 ] cx
sete cl
dec ecx
jmp r-xdata
lea esi [ ebp - 0x40 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
dec eax
jne r-xdata
mov [ eax + 0x8 ] cx
jmp r-xdata
sub_413caa
mov esi [ ebp + 0x14 ]
xor edi edi
cmp [ esi + 0x8 ] edi
jbe r-xdata
push 0x0
push 0x0
call sub_41ad31
call sub_41369c
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
mov ebx [ ebp - 0x30 ]
movzx eax [ ebp - 0x20 ]
sub eax 0x8
je r-xdata
mov ecx [ ebp - 0x20 ]
mov [ eax ] cx
movzx ecx cx
add ecx 0xfffffffe
cmp ecx 0x13
ja r-xdata
push ebx
call [ VariantClear@IAT ]
inc edi
add ebx 0x10
cmp edi [ esi + 0x8 ]
jb r-xdata
push [ ebp - 0x18 ]
call [ SysFreeString@IAT ]
dec eax
je r-xdata
lea ecx [ ebp - 0x58 ]
mov [ ebp - 0x4 ] 0x0
call sub_4130a0
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x24 ] 0x0
je r-xdata
jmp [ ecx * 4 + jump_table_413daf ]
xor eax eax
lea esp [ ebp - 0x6c ]
call sub_41aa34
retn 0x14
push [ ebp - 0x28 ]
push 0x0
call sub_4113e4
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
sub eax 0x3
je r-xdata
mov cl [ ebp - 0x18 ]
mov [ eax + 0x8 ] cl
jmp r-xdata
mov cx [ ebp - 0x18 ]
mov ecx [ ebp - 0x40 ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp - 0x3c ]
mov [ eax + 0xc ] ecx
jmp r-xdata
fld [ ebp - 0x40 ]
fstp [ eax + 0x8 ]
jmp r-xdata
fld [ ebp - 0x40 ]
fstp [ eax + 0x8 ]
jmp r-xdata
xor ecx ecx
cmp [ ebp - 0x18 ] cx
sete cl
dec ecx
jmp r-xdata
lea esi [ ebp - 0x40 ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov ecx [ ebp - 0x18 ]
mov [ eax + 0x8 ] ecx
jmp r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
jmp r-xdata
lea eax [ ebp - 0x40 ]
push eax
call [ VariantClear@IAT ]
jmp r-xdata
dec eax
jne r-xdata
mov [ eax + 0x8 ] cx
jmp r-xdata
sub_413dff
push 0x4
mov eax sub_42acaf
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a3e9
lea edi [ esi + 0xc ]
mov ecx edi
mov [ esi ] r--data
call sub_401ff0
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x14 ]
call sub_401ff0
lea ecx [ esi + 0x18 ]
call sub_401ff0
mov eax [ ebp + 0xc ]
mov bx [ ebp + 0x10 ]
mov ecx eax
add eax 0x60000
neg ecx
sbb ecx ecx
and ecx eax
cmp [ ebp + 0x8 ] 0x0
mov [ ebp - 0x4 ] 0x2
mov [ esi + 0x10 ] ecx
mov [ esi + 0x8 ] bx
je r-xdata
xor eax eax
test bx bx
setne al
dec eax
and eax 0x8000ffff
mov [ esi + 0x1c ] eax
mov eax esi
call sub_41aa11
retn 0xc
push [ ebp + 0x8 ]
mov ecx edi
call sub_401ea0
sub_413e83
push 0x8
mov eax sub_42acd3
call sub_41a939
push 0x20
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_41ad31
int3
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_413dff
sub_413ec9
push 0x20c
mov eax sub_42acfa
call sub_41a9a2
push 0x100
lea eax [ ebp - 0x210 ]
push eax
push [ ebp + 0xc ]
call sub_40a4da
mov esi [ ebp + 0x10 ]
cmp esi 0xffffffff
jne r-xdata
push 0x20
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x218 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
mov esi [ ebp + 0xc ]
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x214 ] eax
push r--data
lea eax [ ebp - 0x214 ]
push eax
call sub_41ad31
int3
push [ ebp + 0x8 ]
lea eax [ ebp - 0x210 ]
push esi
push eax
call sub_413dff
sub_413f4b
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push r--data
push [ ebp + 0xc ]
lea esi [ edi - 0x10 ]
call sub_402780
pop ecx
pop ecx
test eax eax
je r-xdata
and [ ebp + 0x8 ] 0x0
cmp [ ebp + 0x18 ] 0x0
je r-xdata
mov eax 0x80020001
jmp r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x30 ]
mov esi eax
mov eax [ ebp + 0x10 ]
push [ eax ]
lea ecx [ ebp + 0x18 ]
call sub_401ee0
push [ ebp + 0x18 ]
push esi
call sub_4134bd
mov ecx [ ebp + 0x1c ]
mov [ ecx ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
lea ecx [ ebp + 0x8 ]
push ecx
push [ ebp + 0x18 ]
push 0x0
push edi
call [ eax + 0x10 ]
test eax eax
jl r-xdata
pop edi
pop esi
pop ebp
retn 0x18
xor esi esi
mov esi 0x80020006
jmp r-xdata
push [ ebp + 0x1c ]
mov eax [ ebp + 0x8 ]
push [ ebp + 0x14 ]
mov ecx [ eax ]
push [ ebp + 0x10 ]
push eax
call [ ecx + 0x28 ]
mov esi eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
cmp esi 0x8002802b
jne r-xdata
mov ecx [ ebp + 0x18 ]
add ecx 0xfffffff0
call sub_402020
lea edi [ ecx + 0x4 ]
lea ecx [ eax - 0x1 ]
or eax 0xffffffff
[ edi ]
mov eax [ ebp + 0x14 ]
cmp eax 0x1
jbe r-xdata
mov eax esi
mov esi 0x80020006
jmp r-xdata
sub_414016
mov edi edi
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0xc ]
push 0x20
push 0x0
push esi
call sub_41ae80
add esp 0xc
lea eax [ ebp - 0x204 ]
push r--data
mov ecx edi
mov [ ebp - 0x208 ] eax
call sub_41095f
mov ebx [ SysAllocString@IAT ]
test eax eax
je r-xdata
push r--data
mov ecx edi
call sub_41095f
test eax eax
push 0x100
lea eax [ ebp - 0x204 ]
push eax
mov edi 0xf10a
jne r-xdata
mov eax [ edi + 0xc ]
mov [ ebp - 0x208 ] eax
mov ax [ edi + 0x8 ]
mov [ esi ] ax
mov eax [ edi + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ edi + 0x1c ]
mov [ esi + 0x1c ] eax
lea eax [ edi + 0x14 ]
mov ecx [ eax ]
cmp [ ecx - 0xc ] 0x0
je r-xdata
push edi
call sub_40a4da
mov [ esi ] di
add edi 0xfffffffe
add edi 0x18
mov eax [ edi ]
cmp [ eax - 0xc ] 0x0
je r-xdata
push eax
lea ecx [ ebp - 0x20c ]
call sub_402760
push [ ebp - 0x20c ]
call ebx
mov ecx [ ebp - 0x20c ]
add ecx 0xfffffff0
mov [ esi + 0xc ] eax
call sub_402020
cmp [ esi + 0xc ] edi
jne r-xdata
call sub_411cf7
push [ eax + 0x10 ]
lea ecx [ ebp - 0x208 ]
call sub_401ee0
push [ eax ]
call ebx
mov ecx [ ebp - 0x208 ]
add ecx 0xfffffff0
mov [ esi + 0x4 ] eax
call sub_402020
push [ ebp - 0x208 ]
lea ecx [ ebp - 0x208 ]
call sub_401ee0
push [ eax ]
call ebx
mov ecx [ ebp - 0x208 ]
add ecx 0xfffffff0
mov [ esi + 0x8 ] eax
call sub_402020
xor edi edi
cmp [ esi + 0x4 ] edi
jne r-xdata
push edi
lea ecx [ ebp - 0x20c ]
call sub_402760
mov edi [ ebp - 0x20c ]
push edi
call ebx
lea ecx [ edi - 0x10 ]
mov [ esi + 0x4 ] eax
call sub_402020
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn 0x8
cmp [ esi + 0x10 ] edi
je r-xdata
call sub_411cf7
mov eax [ eax + 0x4 ]
push [ eax + 0x64 ]
lea ecx [ ebp - 0x208 ]
call sub_401ee0
push [ eax ]
call ebx
mov ecx [ ebp - 0x208 ]
add ecx 0xfffffff0
mov [ esi + 0xc ] eax
call sub_402020
sub_4141a4
push 0x60
mov eax sub_42ad2a
call sub_41a96c
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x1c ]
add ebx 0xfffffff0
mov [ ebp - 0x1c ] ebx
test esi esi
jne r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov eax 0x80070057
jmp r-xdata
push r--data
push [ ebp + 0x10 ]
call sub_402780
pop ecx
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x20 ]
call sub_415d78
call sub_41aa11
retn 0x24
push [ ebp + 0xc ]
mov eax [ ebx ]
mov ecx ebx
call [ eax + 0x14 ]
test eax eax
jne r-xdata
mov eax 0x80020001
jmp r-xdata
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor edi edi
cmp [ ebp - 0x30 ] edi
je r-xdata
mov eax 0x8000ffff
jmp r-xdata
push [ ebp + 0xc ]
push ebx
call sub_41352f
mov esi eax
mov [ ebp + 0x1c ] esi
cmp esi edi
jne r-xdata
cmp [ ebp - 0x30 ] 0x1
jne r-xdata
xor ebx ebx
inc ebx
cmp [ ebp + 0x18 ] bx
jne r-xdata
mov eax 0x80020003
jmp r-xdata
mov eax 0x80020007
jmp r-xdata
mov eax [ ebp - 0x38 ]
cmp [ eax ] 0xfffffffd
je r-xdata
mov eax [ ebp + 0x18 ]
and eax 0xc
mov [ ebp - 0x20 ] eax
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax edi
jne r-xdata
or [ ebp - 0x18 ] 0xffffffff
push 0xa
pop eax
mov [ ebp - 0x6c ] ax
lea eax [ ebp - 0x5c ]
push eax
mov [ ebp - 0x14 ] edi
call sub_415d78
cmp [ ebp + 0x18 ] 0x4
jne r-xdata
mov [ ebp + 0x20 ] edi
cmp [ esi + 0x10 ] edi
je r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
cmp [ esi + 0x14 ] edi
je r-xdata
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x3c ]
cmp [ eax ] 0x9
jne r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
cmp eax edi
je r-xdata
cmp eax edi
jne r-xdata
cmp eax 0x1
jbe r-xdata
test [ ebp + 0x18 ] 0x1
jne r-xdata
mov esi [ ebp + 0x1c ]
cmp [ esi + 0xc ] 0x9
jne r-xdata
cmp [ eax + 0x8 ] edi
je r-xdata
mov eax 0x80020005
jmp r-xdata
xor eax eax
push eax
call [ lstrlenA@IAT ]
jmp r-xdata
cmp [ esi + 0x14 ] edi
jne r-xdata
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp [ ebp - 0x20 ] di
je r-xdata
cmp [ esi + 0x8 ] edi
jne r-xdata
cmp [ esi + 0xc ] di
jne r-xdata
mov eax [ ebp - 0x34 ]
xor edi edi
xor ebx ebx
test [ ebp + 0x18 ] 0x3
mov [ ebp + 0x1c ] eax
je r-xdata
push 0x10
xor edi edi
lea eax [ ebp - 0x4c ]
push edi
push eax
call sub_41ae80
add esp 0xc
push [ ebp + 0x28 ]
lea edx [ ebp - 0x5c ]
push [ ebp + 0x24 ]
push edx
lea edx [ ebp - 0x4c ]
push edx
push 0x3
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
cmp [ esi + 0x8 ] edi
jne r-xdata
mov esi eax
lea edi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push eax
mov [ ebp - 0x14 ] eax
movsd [ edi ] [ esi ]
call sub_415d78
push 0x10
lea eax [ ebp - 0x4c ]
push 0x0
push eax
call sub_41ae80
mov eax [ ebp - 0x64 ]
add esp 0xc
push [ ebp + 0x28 ]
mov ecx [ eax ]
push [ ebp + 0x24 ]
lea edx [ ebp - 0x4c ]
push [ ebp - 0x3c ]
push edx
push 0x2
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push eax
call [ ecx + 0x18 ]
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ebp + 0x18 ] 0x8
mov [ ebp - 0x30 ] ebx
mov [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ebp - 0x34 ] eax
ja r-xdata
cmp eax edi
je r-xdata
mov ecx [ ebp - 0x1c ]
mov eax [ ecx + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
cmp [ ebp + 0x20 ] edi
mov [ ebp - 0x4 ] edi
setne al
mov [ ecx + 0x14 ] eax
lea eax [ ebp - 0x18 ]
push eax
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
cmp [ esi + 0x10 ] edi
jne r-xdata
cmp eax edi
jbe r-xdata
cmp [ ebp + 0x20 ] edi
jne r-xdata
mov eax 0x8002000e
jmp r-xdata
mov eax [ ebp - 0x3c ]
add eax 0x10
mov [ ebp - 0x4c ] eax
mov eax [ ebp - 0x34 ]
dec eax
mov [ ebp - 0x44 ] eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov ebx eax
cmp ebx edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov ebx eax
cmp ebx edi
jne r-xdata
cmp ebx 0x80020003
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push esi
call sub_413aa7
cmp [ ebp - 0x34 ] edi
jne r-xdata
cmp [ ebp + 0x20 ] edi
jne r-xdata
mov ebx 0x8002000e
jmp r-xdata
cmp [ esi + 0xc ] 0x9
jne r-xdata
mov eax 0x8002000f
jmp r-xdata
lea eax [ ebp - 0x5c ]
push eax
call [ VariantClear@IAT ]
cmp ebx 0x80020003
jne r-xdata
cmp [ ebp - 0x5c ] 0x9
jne r-xdata
cmp [ ebp - 0x5c ] 0x9
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x20 ]
mov [ eax + 0x14 ] ecx
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
push esi
call sub_413339
jmp r-xdata
push [ ebp + 0x20 ]
push esi
call sub_4136f5
jmp r-xdata
mov ebx 0x8002000f
jmp r-xdata
xor eax eax
mov [ ebp - 0x34 ] eax
cmp [ ebp + 0x20 ] edi
jne r-xdata
mov ebx 0x80020005
jmp r-xdata
mov eax [ ebp - 0x54 ]
cmp eax edi
jne r-xdata
mov eax [ ebp - 0x54 ]
cmp eax edi
je r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x3c ]
call [ VariantClear@IAT ]
mov edi [ ebp - 0x3c ]
lea esi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push [ ebp - 0x3c ]
and [ ebp - 0x14 ] 0x0
call [ VariantClear@IAT ]
mov edi [ ebp - 0x3c ]
lea esi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x1c ]
cmp eax [ ebp - 0x34 ]
jbe r-xdata
mov ebx eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
lea ecx [ ebp - 0x5c ]
mov [ ebp + 0x20 ] ecx
push [ ebp + 0x28 ]
mov ecx [ ebp - 0x30 ]
push [ ebp + 0x24 ]
lea esi [ ebp - 0x3c ]
push [ ebp + 0x20 ]
lea edi [ ebp - 0x4c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x4c ]
push edx
push 0x4
push [ ebp + 0x14 ]
movsd [ edi ] [ esi ]
push [ ebp + 0x10 ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x44 ] ecx
push 0x0
push [ ebp + 0x28 ]
lea edx [ ebp - 0x3c ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push edx
push 0x4
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push edi
jmp r-xdata
mov eax ebx
mov ecx [ ebp + 0x28 ]
test ecx ecx
je r-xdata
cmp [ edi ] 0x9
jne r-xdata
mov ecx [ eax ]
push eax
call [ ecx + 0x18 ]
mov ebx eax
mov eax [ ebp - 0x18 ]
cmp eax 0xffffffff
je r-xdata
mov ebx 0x80020005
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov [ ecx ] eax
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x5c ]
cmp edi eax
je r-xdata
xor edi edi
push edi
call sub_415d78
jmp r-xdata
push [ ebp + 0x28 ]
mov eax [ esi ]
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x3c ]
push edi
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push esi
call [ eax + 0x18 ]
mov ebx eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
sub_41454c
mov eax [ ebp - 0x1c ]
push [ eax + 0x1c ]
lea ecx [ ebp - 0x24 ]
call sub_411d43
xor esi esi
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0x24 ] esi
je r-xdata
mov ecx [ ebp - 0x28 ]
cmp ecx esi
je r-xdata
push [ ebp - 0x28 ]
push [ ebp + 0x24 ]
call sub_414016
mov [ ebp + 0xc ] 0x80020009
mov [ ebp - 0x4 ] 0x1
cmp [ ebp - 0x20 ] esi
je r-xdata
call sub_40a296
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_41459f
retn
push [ ebp - 0x24 ]
push esi
call sub_4113e4
sub_41459f
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0x1c ]
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + 0x20 ]
mov [ eax + 0x14 ] ecx
test ebx ebx
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x1c ]
cmp eax [ ebp - 0x34 ]
jbe r-xdata
test ebx ebx
je r-xdata
push [ ebp - 0x3c ]
call [ VariantClear@IAT ]
mov edi [ ebp - 0x3c ]
lea esi [ ebp - 0x6c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ edi ] 0x9
jne r-xdata
mov eax ebx
call sub_41aa11
retn 0x24
mov ecx [ ebp + 0x28 ]
test ecx ecx
je r-xdata
mov ebx 0x80020005
mov esi [ edi + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax 0xffffffff
je r-xdata
mov [ ebp - 0x34 ] eax
lea eax [ ebp - 0x5c ]
cmp edi eax
je r-xdata
mov [ ecx ] eax
xor edi edi
push edi
call sub_415d78
jmp r-xdata
push [ ebp + 0x28 ]
mov eax [ esi ]
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x3c ]
push edi
push ecx
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x0
push esi
call [ eax + 0x18 ]
mov ebx eax
mov eax [ esi ]
push esi
call [ eax + 0x8 ]
jmp r-xdata
sub_414668
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0xc ]
and [ eax ] 0x0
xor eax eax
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov ecx [ ecx + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x4 ]
xor eax eax
inc eax
jmp r-xdata
pop ebp
retn 0x8
sub_41469c
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push ebx
mov ebx ecx
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
push esi
push edi
mov [ ebx + 0x4 ] eax
lea edi [ ebx + 0xc ]
mov esi r--data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebx + 0x1c ]
push eax
movsd [ edi ] [ esi ]
call sub_4110dd
add ebx 0x8
push ebx
call sub_4110dd
mov eax [ ebp + 0xc ]
mov [ ebx ] eax
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
pop edi
pop esi
sub_4146e2
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn 0xc
mov eax [ ecx + 0x4 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
lea edi [ ecx + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea esi [ ecx + 0x1c ]
push esi
call sub_4110dd
mov [ esi ] ebx
mov eax [ ebx ]
push ebx
call [ eax + 0x4 ]
pop edi
pop esi
sub_41471b
mov edi edi
push esi
push 0xd
mov esi ecx
call sub_416a43
mov eax [ esi ]
mov ecx esi
call [ eax + 0x20 ]
pop esi
test eax eax
je r-xdata
push 0xd
call sub_416ab5
retn
mov ecx eax
call sub_414654
sub_414742
push 0x8
mov eax sub_42acd3
call sub_41a939
call sub_411cf7
mov edi eax
xor ebx ebx
cmp [ edi + 0x70 ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
mov ecx [ edi + 0x70 ]
lea eax [ ebp - 0x10 ]
push eax
push esi
call sub_416c03
test eax eax
jne r-xdata
lea esi [ edi + 0x4c ]
mov eax [ esi ]
cmp eax ebx
jne r-xdata
mov eax [ ebp - 0x10 ]
push 0x24
call sub_409958
pop ecx
cmp eax ebx
je r-xdata
cmp eax [ ebp + 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ esi ] eax
xor eax eax
or [ eax + 0x4 ] 0xffffffff
mov [ eax + 0x8 ] ebx
mov [ eax + 0x1c ] ebx
mov [ eax + 0x20 ] ebx
jmp r-xdata
mov eax esi
jmp r-xdata
push 0x1c
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] ebx
cmp ecx ebx
je r-xdata
call sub_41aa11
retn 0x4
push [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ eax ] esi
mov ecx [ edi + 0x70 ]
mov esi [ ebp - 0x10 ]
call sub_416d85
mov [ eax ] esi
xor eax eax
call sub_41463e
jmp r-xdata
push [ esi ]
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ edi + 0x70 ] eax
call sub_416d85
mov [ eax ] esi
sub_4147f3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_416d2a
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_414814
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x10 ]
and [ eax ] 0x0
xor eax eax
cmp eax [ ebp + 0x8 ]
jne r-xdata
cmp [ esi + 0x1c ] 0x0
je r-xdata
push [ ebp + 0xc ]
lea eax [ esi + 0xc ]
push eax
call sub_402060
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ esi + 0x1c ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov esi [ esi + 0x1c ]
mov eax [ esi ]
push esi
call [ eax + 0x4 ]
xor eax eax
inc eax
jmp r-xdata
pop esi
pop ebp
retn 0xc
sub_414864
push 0x224
mov eax sub_42ad50
call sub_41a9a2
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x10 ]
push 0xd
mov esi ecx
call sub_416a43
mov eax [ esi ]
mov ecx esi
mov [ ebp - 0x220 ] 0x80029c4a
call [ eax + 0x20 ]
and [ ebp - 0x21c ] 0x0
push edi
push ebx
push [ ebp + 0x8 ]
mov ecx eax
mov [ ebp - 0x224 ] ecx
call sub_414814
test eax eax
je r-xdata
mov ecx [ ebp - 0x224 ]
lea eax [ ebp - 0x21c ]
push eax
push [ ebp + 0x8 ]
call sub_414668
test eax eax
jne r-xdata
and [ ebp - 0x220 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x21c ]
test eax eax
je r-xdata
mov eax [ esi ]
lea ecx [ ebp - 0x21c ]
push ecx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x24 ]
test eax eax
jge r-xdata
push 0xd
call sub_416ab5
mov eax [ ebp - 0x220 ]
call sub_41aa25
retn 0xc
mov ecx [ eax ]
push edi
push ebx
push eax
call [ ecx + 0x18 ]
mov [ ebp - 0x220 ] eax
mov eax [ ebp - 0x21c ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
push [ edi ]
mov ecx [ ebp - 0x224 ]
push ebx
push [ ebp + 0x8 ]
call sub_4146e2
push [ ebp - 0x21c ]
mov ecx [ ebp - 0x224 ]
push [ ebp + 0x8 ]
call sub_41469c
push [ esi + 0x1c ]
lea ecx [ ebp - 0x230 ]
call sub_411d43
xor esi esi
mov [ ebp - 0x4 ] esi
call sub_411cf7
mov eax [ eax + 0x8 ]
push 0x104
lea ecx [ ebp - 0x218 ]
push ecx
push eax
call [ GetModuleFileNameW@IAT ]
lea eax [ ebp - 0x218 ]
push eax
lea ecx [ ebp - 0x228 ]
call sub_401ee0
lea eax [ ebp - 0x21c ]
push eax
push [ ebp - 0x228 ]
call [ LoadTypeLib@IAT ]
test eax eax
jge r-xdata
mov ecx [ ebp - 0x228 ]
add ecx 0xfffffff0
call sub_402020
or [ ebp - 0x4 ] 0xffffffff
cmp [ ebp - 0x22c ] esi
je r-xdata
mov [ ebp - 0x21c ] esi
push [ ebp - 0x230 ]
push esi
call sub_4113e4
sub_414a00
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40a39e
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_409992
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
mov ebx edi
shl ebx 0x2
push ebx
call sub_409958
push ebx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov edx edi
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_41ae80
add esp 0xc
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebp + 0x8 ]
cmp eax ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
shl eax 0x2
push eax
call sub_409958
mov ebx eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push ebx
call sub_401840
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ ebx + eax * 4 ]
push 0x0
push eax
call sub_41ae80
push [ esi + 0x4 ]
call sub_409992
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_414b26
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jge r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
call sub_40a39e
mov eax [ edi + 0x4 ]
mov ecx [ ebp + 0xc ]
pop edi
mov [ eax + esi * 4 ] ecx
pop esi
pop ebp
retn 0x8
push 0xffffffff
lea eax [ esi + 0x1 ]
push eax
call sub_414a00
sub_414b5a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jl r-xdata
call sub_40a39e
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp edi [ esi + 0x8 ]
push 0xffffffff
jl r-xdata
mov edi [ esi + 0x8 ]
lea eax [ edi + ebx ]
push eax
call sub_414a00
mov eax [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
sub edi eax
lea edx [ ecx + eax * 4 ]
shl edi 0x2
push edi
push edx
mov edx [ esi + 0x8 ]
sub edx eax
sub edx ebx
shl edx 0x2
add eax ebx
push edx
lea eax [ ecx + eax * 4 ]
push eax
call sub_409890
mov ecx [ esi + 0x4 ]
mov eax ebx
shl eax 0x2
push eax
mov eax [ ebp + 0x8 ]
shl eax 0x2
add ecx eax
push 0x0
push ecx
call sub_41ae80
mov edi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ edi + ebx ]
push eax
call sub_414a00
jmp r-xdata
mov ecx [ esi + 0x4 ]
mov edx [ ebp + 0xc ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax edi
shl eax 0x2
sub_414c00
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0xc ]
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
lea ecx [ edi + ebx ]
test edi edi
jl r-xdata
call sub_40a39e
test ebx ebx
jl r-xdata
mov eax [ esi + 0x8 ]
cmp ecx eax
jg r-xdata
cmp ecx edi
jl r-xdata
cmp ecx ebx
jl r-xdata
sub eax ecx
je r-xdata
sub [ esi + 0x8 ] ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov edx eax
mov eax [ esi + 0x4 ]
shl edx 0x2
push edx
lea ecx [ eax + ecx * 4 ]
push ecx
push edx
lea eax [ eax + edi * 4 ]
push eax
call sub_409890
add esp 0x10
sub_414c58
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4149f0
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_414c79
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4184ea
mov eax [ ebp + 0x8 ]
mov [ esi + 0x10 ] eax
xor eax eax
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x1c ] eax
mov [ esi + 0x20 ] eax
mov [ esi ] r--data
mov [ esi + 0x24 ] 0x1
mov eax esi
pop esi
pop ebp
retn 0x4
sub_414cae
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ ebp + 0x10 ]
and [ ecx + 0x14 ] 0x0
mov [ ecx + 0x10 ] eax
neg eax
sbb eax eax
not eax
and eax edx
and [ ecx + 0x24 ] 0x0
mov [ ecx + 0x20 ] esi
mov [ ecx + 0x18 ] edx
mov [ ecx + 0x1c ] eax
pop esi
pop ebp
retn 0xc
test edx edx
je r-xdata
call sub_40a39e
sub_414d2b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
push edi
mov edi [ esi + 0x18 ]
cmp [ ebp + 0x8 ] edi
jbe r-xdata
pop edi
pop esi
pop ebp
retn 0x4
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
cmp edi [ ebp + 0x8 ]
jb r-xdata
call sub_40a366
add edi eax
mov eax [ esi + 0x20 ]
push edi
test eax eax
jne r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x58 ]
mov eax [ esi ]
call [ eax + 0x54 ]
jmp r-xdata
mov [ esi + 0x20 ] eax
mov [ esi + 0x18 ] edi
test eax eax
je r-xdata
sub_414d7a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
push edi
mov esi ecx
ja r-xdata
call sub_40a366
mov edi [ ebp + 0x8 ]
cmp edi 0xffffffff
jbe r-xdata
mov eax [ esi + 0x18 ]
xor ecx ecx
cmp [ ebp + 0xc ] ecx
jb r-xdata
mov eax [ esi + 0x14 ]
xor ecx ecx
cmp [ ebp + 0xc ] ecx
ja r-xdata
ja r-xdata
mov [ esi + 0x1c ] edi
pop edi
pop esi
pop ebp
retn 0x8
jb r-xdata
mov eax [ esi ]
push edi
mov ecx esi
call [ eax + 0x64 ]
cmp edi eax
jbe r-xdata
mov [ esi + 0x14 ] edi
cmp edi eax
jae r-xdata
sub_414dca
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov ecx [ esi + 0x14 ]
mov eax [ esi + 0x1c ]
cmp ecx eax
ja r-xdata
call sub_40a39e
pop edi
pop esi
pop ebp
retn 0x8
lea edx [ ecx + edi ]
cmp edx eax
ja r-xdata
sub eax ecx
mov edi eax
cmp edx ecx
jae r-xdata
mov edx [ esi + 0x20 ]
mov eax [ esi ]
push edi
add edx ecx
push edx
push [ ebp + 0x8 ]
mov ecx esi
call [ eax + 0x5c ]
add [ esi + 0x14 ] edi
mov eax edi
sub_414e1e
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ eax + edi ]
cmp ecx eax
jb r-xdata
call sub_40a39e
cmp ecx [ esi + 0x18 ]
jbe r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ eax + edi ]
cmp ecx [ esi + 0x18 ]
ja r-xdata
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov ecx [ esi + 0x20 ]
mov edx [ esi ]
push edi
push [ ebp + 0x8 ]
add ecx eax
push ecx
mov ecx esi
call [ edx + 0x5c ]
add [ esi + 0x14 ] edi
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
mov [ esi + 0x1c ] eax
sub_414e80
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi ecx
mov esi [ edi + 0x14 ]
xor ecx ecx
xor eax eax
cmp [ ebp + 0x10 ] ecx
jne r-xdata
cmp [ ebp + 0x10 ] 0x1
jne r-xdata
mov esi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
jmp r-xdata
cmp [ ebp + 0x10 ] 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add esi edx
mov edx [ ebp + 0xc ]
adc eax edx
jmp r-xdata
cmp eax ecx
jg r-xdata
pop edi
mov eax esi
xor edx edx
pop esi
pop ebp
retn 0xc
cmp [ ebp + 0xc ] ecx
jl r-xdata
cmp esi [ edi + 0x1c ]
jbe r-xdata
jl r-xdata
mov esi [ edi + 0x1c ]
xor eax eax
add esi [ ebp + 0x8 ]
adc eax [ ebp + 0xc ]
jg r-xdata
mov [ edi + 0x14 ] esi
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x64 ]
push ecx
push 0xffffffff
push 0x9
call sub_4192fb
cmp esi ecx
jb r-xdata
cmp [ ebp + 0x8 ] ecx
jbe r-xdata
sub_414efa
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push edi
xor edi edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
cmp eax edi
je r-xdata
mov [ esi + 0x20 ] edi
pop edi
pop esi
retn
cmp [ esi + 0x24 ] edi
je r-xdata
mov edx [ esi ]
push eax
call [ edx + 0x60 ]
sub_414f36
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x3
push esi
mov esi ecx
jne r-xdata
cmp [ ebp + 0x8 ] 0x2
jne r-xdata
xor eax eax
cmp eax [ esi + 0x10 ]
sbb eax eax
neg eax
jmp r-xdata
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0xc ]
add [ esi + 0x14 ] eax
mov eax [ esi + 0x14 ]
cmp eax [ esi + 0x1c ]
jbe r-xdata
pop esi
pop ebp
retn 0x10
xor eax eax
mov edx [ ebp + 0x14 ]
test edx edx
je r-xdata
xor eax eax
jmp r-xdata
mov [ esi + 0x1c ] eax
cmp [ ebp + 0x8 ] 0x1
push edi
mov edi [ ebp + 0xc ]
jne r-xdata
mov eax [ esi + 0x14 ]
add eax [ esi + 0x20 ]
cmp [ ebp + 0x8 ] 0x1
mov [ ebx ] eax
jne r-xdata
mov eax [ esi + 0x14 ]
lea ecx [ eax + edi ]
cmp ecx eax
jb r-xdata
cmp edi 0xffffffff
jne r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x18 ]
add eax edi
cmp ecx eax
jae r-xdata
call sub_40a39e
cmp ecx edi
jb r-xdata
mov eax [ esi + 0x14 ]
mov ecx [ esi + 0x1c ]
add eax edi
cmp ecx eax
jae r-xdata
mov edi [ esi + 0x18 ]
sub edi [ esi + 0x14 ]
mov ecx [ esi + 0x20 ]
add ecx eax
mov [ edx ] ecx
jmp r-xdata
mov eax ecx
cmp ecx [ esi + 0x18 ]
jbe r-xdata
mov ecx [ esi + 0x20 ]
add eax ecx
mov [ edx ] eax
sub eax [ ebx ]
add [ esi + 0x14 ] eax
mov eax ecx
mov eax [ edx ]
sub eax [ ebx ]
pop edi
jmp r-xdata
mov eax [ esi ]
push ecx
mov ecx esi
call [ eax + 0x64 ]
mov edx [ ebp + 0x14 ]
pop ebx
sub_41500f
push 0x4
mov eax sub_42ad80
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
xor edi edi
mov [ ebp - 0x4 ] edi
cmp [ esi + 0x20 ] edi
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov ecx esi
mov [ esi + 0x10 ] edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x18 ] edi
mov [ esi + 0x1c ] edi
call sub_4185f2
call sub_41aa11
retn
call sub_414efa
sub_415072
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41500f
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_4150ad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40a39e
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_4150f9
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
test ebx ebx
jge r-xdata
mov eax [ ebp + 0xc ]
test eax eax
jl r-xdata
call sub_40a39e
test ebx ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edi [ esi + 0xc ]
cmp ebx edi
jg r-xdata
mov edi [ esi + 0x10 ]
cmp ebx edi
jle r-xdata
and [ esi + 0xc ] 0x0
and [ esi + 0x8 ] 0x0
jmp r-xdata
push eax
call sub_409992
and [ esi + 0x4 ] ebx
pop ecx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp ebx eax
jle r-xdata
mov eax edi
shl eax 0x2
push eax
call sub_409958
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
mov edi ebx
pop esi
pop ebx
pop ebp
retn 0x8
add eax edi
cmp ebx eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jge r-xdata
mov [ esi + 0x8 ] ebx
pop edi
mov edx ebx
sub edx eax
shl edx 0x2
push edx
lea eax [ ecx + eax * 4 ]
push 0x0
push eax
call sub_41ae80
add esp 0xc
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edi
jl r-xdata
mov [ ebp + 0x8 ] ebx
mov ecx 0x400
cmp eax ecx
jle r-xdata
push 0x4
pop eax
jmp r-xdata
shl eax 0x2
push eax
call sub_409958
mov edi eax
mov eax [ esi + 0x8 ]
shl eax 0x2
push eax
push [ esi + 0x4 ]
mov eax [ ebp + 0x8 ]
shl eax 0x2
push eax
push edi
call sub_401840
mov eax [ esi + 0x8 ]
mov ecx ebx
sub ecx eax
shl ecx 0x2
push ecx
lea eax [ edi + eax * 4 ]
push 0x0
push eax
call sub_41ae80
push [ esi + 0x4 ]
call sub_409992
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x4 ] edi
mov [ esi + 0xc ] eax
mov eax ecx
sub_415234
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
test esi esi
jl r-xdata
call sub_40a39e
mov ebx [ ebp + 0x10 ]
test ebx ebx
jle r-xdata
cmp esi [ edi + 0x8 ]
push 0xffffffff
jl r-xdata
mov esi [ edi + 0x8 ]
lea eax [ esi + ebx ]
push eax
call sub_4150f9
mov ecx [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
sub esi ecx
mov edx esi
shl edx 0x2
mov esi ecx
push edx
mov [ ebp + 0x10 ] edx
shl esi 0x2
lea edx [ eax + esi ]
push edx
push [ ebp + 0x10 ]
add ecx ebx
lea eax [ eax + ecx * 4 ]
push eax
call sub_409890
mov eax ebx
shl eax 0x2
push eax
mov eax [ edi + 0x4 ]
add eax esi
push 0x0
push eax
call sub_41ae80
mov esi [ ebp + 0x8 ]
add esp 0x1c
lea eax [ esi + ebx ]
push eax
call sub_4150f9
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ edi + 0x4 ]
mov edx [ edx ]
dec ebx
mov [ eax + ecx ] edx
add eax 0x4
test ebx ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov eax esi
shl eax 0x2
sub_4152e9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4152d4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41530a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x18 ]
push ebx
not edx
push esi
push edi
mov ebx eax
mov [ ebp + 0x10 ] ecx
test dl 0x1
je r-xdata
test ecx ecx
jne r-xdata
test eax eax
jbe r-xdata
test eax eax
jbe r-xdata
call sub_40a39e
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov edi 0x1fffffff
cmp ebx edi
jae r-xdata
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_401810
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
mov ecx [ ebp + 0x8 ]
mov esi edi
shl esi 0x2
push esi
push [ ebp + 0x10 ]
call sub_4104c9
add [ ebp + 0x10 ] esi
sub ebx edi
test ebx ebx
ja r-xdata
mov edi ebx
jmp r-xdata
sub_415392
push 0x1c
mov eax sub_42ada4
call sub_41a96c
mov ebx ecx
mov [ ebp - 0x24 ] ebx
mov esi [ ebx + 0x3c ]
xor edi edi
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x18 ] edi
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
push 0x1
mov ecx esi
call sub_416c03
test eax eax
je r-xdata
push 0x1c
call sub_409958
pop ecx
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] edi
cmp eax edi
je r-xdata
push 0x14
call sub_409958
pop ecx
cmp eax edi
je r-xdata
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
jmp r-xdata
xor eax eax
push 0xa
mov ecx eax
call sub_416cf7
jmp r-xdata
mov [ ebp - 0x1c ] edi
mov ecx eax
call sub_4150e2
mov edi eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x3c ] esi
test eax eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov esi eax
mov [ ebp - 0x20 ] eax
push [ ebx + 0x40 ]
xor eax eax
inc eax
push eax
mov ecx edi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x4 ] eax
call sub_4150f9
push 0x1
mov ecx esi
call sub_416d85
mov [ eax ] edi
jmp r-xdata
call sub_41aa11
retn 0x4
mov ecx [ ebp - 0x14 ]
mov [ eax ] ecx
sub_415466
push 0xc
mov eax sub_42add1
call sub_41a939
mov esi ecx
mov eax [ esi + 0x18 ]
xor ebx ebx
not eax
inc ebx
xor edi edi
test bl al
je r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ esi + 0x38 ] edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x14
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] ebx
cmp ecx edi
je r-xdata
cmp [ ebp + 0x8 ] edi
je r-xdata
push 0x1c
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x4 ] edi
cmp ecx edi
je r-xdata
call sub_41aa11
retn 0x4
mov ecx esi
call sub_4150ce
mov ecx [ esi + 0x38 ]
push ebx
push [ ebp + 0x8 ]
push [ esi + 0x34 ]
call sub_414b5a
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push ebx
mov [ ebp - 0x14 ] edi
call sub_416c03
mov ecx [ ebp - 0x14 ]
cmp ecx edi
je r-xdata
xor eax eax
call sub_4149d9
jmp r-xdata
mov ecx esi
call sub_4150ce
push [ ebp + 0x8 ]
mov ecx [ esi + 0x38 ]
call sub_416d85
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
jmp r-xdata
xor eax eax
push [ esi + 0x40 ]
call sub_416cf7
jmp r-xdata
call sub_40a39e
push ebx
lea eax [ ebp + 0x8 ]
push eax
push [ esi + 0x34 ]
mov [ ebp + 0x8 ] 0x2
call sub_415234
mov eax [ eax + 0x4 ]
mov [ eax ] edi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
mov [ esi + 0x34 ] ebx
mov [ ebp - 0x10 ] edi
call sub_415392
mov ecx [ ebp - 0x10 ]
push ebx
lea eax [ ebp - 0x18 ]
push eax
push edi
mov [ ebp - 0x18 ] edi
call sub_415234
push [ esi + 0x40 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_414a00
mov eax [ esi + 0x38 ]
cmp [ eax + 0x8 ] edi
jg r-xdata
inc [ esi + 0x34 ]
or [ ebp - 0x4 ] 0xffffffff
push ebx
push [ esi + 0x44 ]
mov ecx eax
mov [ esi + 0x38 ] eax
call sub_416ada
mov ecx [ esi + 0x38 ]
push edi
call sub_416d85
mov [ eax ] edi
mov [ esi + 0x34 ] ebx
sub_4155a5
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov esi ecx
test ebx ebx
jne r-xdata
mov eax [ esi + 0x18 ]
not eax
test al 0x1
jne r-xdata
push [ esi + 0x14 ]
push 0x6
cmp [ ebx + 0x8 ] 0xffff
jne r-xdata
push [ esi + 0x14 ]
push 0x1
jmp r-xdata
push 0x0
call sub_415466
mov ecx [ esi + 0x38 ]
push ebx
call sub_416d85
mov edi [ eax ]
mov ecx esi
test edi edi
je r-xdata
call sub_40a382
call sub_4108a1
push 0xffff
call sub_41011e
push esi
mov ecx ebx
call sub_4105f5
mov ecx esi
call sub_4150ce
mov ecx [ esi + 0x38 ]
push ebx
call sub_416d85
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax 0x7fff
cmp edi eax
jae r-xdata
push eax
call sub_41011e
or edi 0x80000000
push edi
mov ecx esi
call sub_41015d
jmp r-xdata
or edi 0x8000
push edi
call sub_41011e
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_415654
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi ecx
test [ esi + 0x18 ] 0x1
push edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov ebx 0xffff
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x1
push 0x0
call sub_415466
lea eax [ ebp - 0x4 ]
push eax
mov ecx esi
call sub_41022c
mov eax 0x7fff
cmp [ ebp - 0x4 ] ax
jne r-xdata
cmp [ eax + 0x8 ] ebx
jne r-xdata
movzx ecx [ ebp - 0x4 ]
mov eax ecx
and eax 0xffff8000
shl eax 0x10
or eax ecx
and eax 0xffff7fff
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0xc ]
push eax
mov ecx esi
call sub_410274
mov eax [ ebp - 0xc ]
jmp r-xdata
call sub_40a382
cmp [ ebp - 0x4 ] bx
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edi 0x80000000
test edi eax
jne r-xdata
mov edi eax
and edi 0x7fffffff
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push esi
call sub_410442
mov ebx eax
test ebx ebx
jne r-xdata
mov [ ecx ] eax
xor eax eax
jmp r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx eax
and ecx 0x7fffffff
cmp ecx [ ebp - 0x8 ]
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn 0xc
call sub_4108a1
mov ecx [ esi + 0x3c ]
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x1
call sub_416c03
mov ecx [ ebp - 0x4 ]
test ecx ecx
je r-xdata
mov ecx esi
call sub_4150ce
mov ecx [ esi + 0x38 ]
xor edi edi
inc edi
push edi
push ebx
push [ esi + 0x34 ]
call sub_414b5a
mov ecx [ esi + 0x3c ]
and [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x10 ]
push eax
push edi
call sub_416c03
mov ecx [ ebp - 0x10 ]
test ecx ecx
jne r-xdata
test edi eax
jne r-xdata
call sub_40a39e
push edi
call sub_4150ad
cmp [ eax ] 0x2
je r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x4 ] edi
call sub_415234
inc [ esi + 0x34 ]
mov eax [ ebp - 0x8 ]
jmp r-xdata
push 0x0
mov ecx esi
call sub_415392
mov ecx [ esi + 0x3c ]
mov edi [ ebp - 0x8 ]
push ebx
call sub_416d85
mov [ eax ] edi
push [ esi + 0x14 ]
push 0x7
jmp r-xdata
mov ecx [ esi + 0x38 ]
push edi
call sub_409920
mov ecx [ esi + 0x3c ]
and [ ebp - 0x8 ] 0x0
mov ebx eax
test ecx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x8 ]
and eax 0x7fffffff
lea eax [ ebp - 0x4 ]
push eax
push ebx
call sub_416c03
test eax eax
je r-xdata
mov ecx [ ebp + 0xc ]
test ecx ecx
je r-xdata
push [ ebp + 0x8 ]
mov ecx ebx
call sub_410934
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov [ esi + 0x10 ] eax
mov [ ecx ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov ecx [ ebp - 0xc ]
mov [ eax ] ecx
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
sub_415848
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x18 ]
not eax
mov esi ecx
mov ecx edi
test al 0x1
je r-xdata
call sub_4105c1
push 0xffffffff
push eax
mov ecx esi
call sub_4150f9
push [ esi + 0x8 ]
call sub_410590
jmp r-xdata
push [ esi + 0x8 ]
push [ esi + 0x4 ]
push edi
call sub_41530a
pop edi
pop esi
pop ebp
retn 0x4
sub_41588a
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x18 ]
not eax
push edi
test al 0x1
jne r-xdata
push 0x0
call sub_415466
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push [ esi + 0x14 ]
push 0x2
call sub_4108a1
mov ecx [ esi + 0x38 ]
push ebx
push edi
call sub_416d85
mov ebx [ eax ]
test ebx ebx
je r-xdata
push edi
mov ecx esi
call sub_41011e
jmp r-xdata
mov eax [ edi ]
mov ecx edi
call [ eax ]
push eax
mov ecx esi
call sub_4155a5
mov ecx esi
call sub_4150ce
mov ecx [ esi + 0x38 ]
push edi
call sub_416d85
mov ecx [ esi + 0x34 ]
mov [ eax ] ecx
inc [ esi + 0x34 ]
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov eax 0x7fff
mov ecx esi
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebp
retn 0x4
push eax
call sub_41011e
push ebx
mov ecx esi
call sub_41015d
jmp r-xdata
push ebx
call sub_41011e
jmp r-xdata
pop ebx
sub_415926
push 0x14
mov eax sub_42adec
call sub_41a96c
mov esi ecx
test [ esi + 0x18 ] 0x1
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push [ ebp + 0x8 ]
call sub_415654
xor ebx ebx
mov [ ebp - 0x14 ] ebx
cmp eax ebx
jne r-xdata
push [ esi + 0x14 ]
push 0x4
mov ecx eax
mov [ ebp - 0x4 ] ebx
call sub_4108ea
mov edi eax
mov [ ebp - 0x14 ] edi
cmp edi ebx
jne r-xdata
mov eax [ esi + 0x38 ]
mov eax [ eax + 0x8 ]
mov edi [ ebp - 0x18 ]
dec eax
cmp edi eax
jbe r-xdata
mov ecx esi
call sub_4150ce
mov ecx [ esi + 0x38 ]
push 0x1
push edi
push [ esi + 0x34 ]
call sub_414b5a
mov ecx [ esi + 0x3c ]
lea eax [ ebp + 0x8 ]
push eax
push 0x1
mov [ ebp + 0x8 ] ebx
call sub_416c03
mov ecx [ ebp + 0x8 ]
xor eax eax
cmp ecx ebx
setne al
cmp eax ebx
je r-xdata
call sub_40a366
mov ecx [ esi + 0x3c ]
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov [ ebp - 0x14 ] ebx
call sub_416c03
test eax eax
je r-xdata
push [ esi + 0x14 ]
push 0x5
jmp r-xdata
call sub_40a39e
push 0x1
lea eax [ ebp - 0x18 ]
push eax
push [ esi + 0x34 ]
mov [ ebp - 0x18 ] 0x2
call sub_415234
mov eax [ ebp - 0x1c ]
mov ebx [ esi + 0x10 ]
inc [ esi + 0x34 ]
mov [ esi + 0x10 ] eax
mov eax [ edi ]
push esi
mov ecx edi
call [ eax + 0x8 ]
mov [ esi + 0x10 ] ebx
mov ecx [ esi + 0x38 ]
push edi
call sub_409920
mov edi eax
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x14 ]
cmp ecx ebx
jne r-xdata
call sub_4108a1
mov eax edi
call sub_41aa11
retn 0x4
cmp [ ebp + 0x8 ] ebx
je r-xdata
mov eax [ ecx + 0x8 ]
dec eax
cmp edi eax
ja r-xdata
push [ ebp + 0x8 ]
mov ecx edi
call sub_41095f
test eax eax
jne r-xdata
push edi
call sub_4150ad
cmp [ eax ] 0x1
je r-xdata
push [ esi + 0x14 ]
push 0x6
jmp r-xdata
sub_415a8c
mov edi edi
push ebp
mov ebp esp
push esi
call sub_401890
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
mov ecx esi
call [ eax + 0x128 ]
test eax eax
je r-xdata
lea eax [ esi + 0x80 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ eax ]
push [ ebp + 0x8 ]
mov edx [ eax ]
mov ecx eax
call [ edx + 0x64 ]
sub_415ac5
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ GetParent@IAT ]
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
jne r-xdata
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x40000000
je r-xdata
call sub_415a80
test eax eax
jne r-xdata
mov edi esi
mov eax esi
test esi esi
je r-xdata
push esi
call ebx
mov esi eax
mov esi [ eax + 0x20 ]
jmp r-xdata
call sub_401890
test eax eax
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push eax
mov edi eax
call ebx
test eax eax
jne r-xdata
test esi esi
jne r-xdata
xor esi esi
jmp r-xdata
mov ebx [ ebp + 0xc ]
test ebx ebx
je r-xdata
test esi esi
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x8
test edi edi
je r-xdata
push esi
call [ GetLastActivePopup@IAT ]
mov esi eax
and [ ebx ] 0x0
push edi
call [ IsWindowEnabled@IAT ]
test eax eax
je r-xdata
cmp edi esi
je r-xdata
push 0x0
push edi
mov [ ebx ] edi
call [ EnableWindow@IAT ]
jmp r-xdata
sub_415b65
mov edi edi
push ebp
mov ebp esp
sub esp 0x220
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
push esi
mov [ ebp - 0x220 ] eax
call sub_415a8c
pop ecx
lea eax [ ebp - 0x210 ]
push eax
push esi
call sub_415ac5
mov ebx eax
mov [ ebp - 0x21c ] ebx
cmp ebx [ ebp - 0x210 ]
je r-xdata
and [ ebp - 0x218 ] esi
lea eax [ ebp - 0x218 ]
push eax
push ebx
call [ GetWindowThreadProcessId@IAT ]
test ebx ebx
je r-xdata
push 0x1
push ebx
call [ EnableWindow@IAT ]
test edi edi
je r-xdata
call [ GetCurrentProcessId@IAT ]
cmp [ ebp - 0x218 ] eax
jne r-xdata
and [ ebp - 0x214 ] 0x0
test esi esi
je r-xdata
lea esi [ edi + 0x78 ]
push 0x0
push 0x0
push 0x376
push ebx
call [ SendMessageW@IAT ]
test eax eax
je r-xdata
test [ ebp + 0x10 ] 0xf0
jne r-xdata
mov eax [ esi ]
mov [ ebp - 0x214 ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x20c ] ax
test edi edi
je r-xdata
mov eax [ ebp + 0x10 ]
and eax 0xf
cmp eax 0x1
jbe r-xdata
add eax 0x30000
mov [ esi ] eax
lea ebx [ ebp - 0x20c ]
mov edi 0x104
push edi
mov eax ebx
push eax
push 0x0
call [ GetModuleFileNameW@IAT ]
cmp eax edi
jne r-xdata
mov ebx [ edi + 0x50 ]
jmp r-xdata
or [ ebp + 0x10 ] 0x30
add eax 0xfffffffd
cmp eax 0x1
ja r-xdata
push [ ebp + 0x10 ]
push ebx
push [ ebp - 0x220 ]
push [ ebp - 0x21c ]
call sub_40b75b
add esp 0x10
mov edi eax
test esi esi
je r-xdata
xor eax eax
mov [ ebp - 0x6 ] ax
or [ ebp + 0x10 ] 0x20
jmp r-xdata
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x214 ]
mov [ esi ] eax
push 0x1
call sub_415a8c
pop ecx
mov ecx [ ebp - 0x4 ]
mov eax edi
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
push 0x1
push [ ebp - 0x210 ]
call [ EnableWindow@IAT ]
sub_415cca
mov edi edi
push ebp
mov ebp esp
call sub_411cf7
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push 0x0
call sub_415b65
add esp 0x10
pop ebp
retn 0xc
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x98 ]
sub_415d18
push 0x4
mov eax sub_42ab18
call sub_41a939
lea ecx [ ebp - 0x10 ]
call sub_401ff0
push [ ebp + 0x8 ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401b60
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x10 ]
push eax
push [ ebp + 0xc ]
push esi
call sub_415cca
lea ecx [ esi - 0x10 ]
mov edi eax
call sub_402020
mov eax edi
call sub_41aa11
retn 0xc
mov eax [ ebp + 0x8 ]
sub_415d90
mov edi edi
push esi
push edi
mov edi [ GetSysColor@IAT ]
push 0xf
mov esi ecx
call edi
push 0x10
mov [ esi + 0x28 ] eax
call edi
push 0x14
mov [ esi + 0x2c ] eax
call edi
push 0x12
mov [ esi + 0x30 ] eax
call edi
push 0x6
mov [ esi + 0x34 ] eax
call edi
mov edi [ GetSysColorBrush@IAT ]
push 0xf
mov [ esi + 0x38 ] eax
call edi
push 0x6
mov [ esi + 0x24 ] eax
call edi
pop edi
mov [ esi + 0x20 ] eax
pop esi
retn
sub_415dd6
mov edi edi
push ebx
push esi
mov esi [ GetSystemMetrics@IAT ]
push edi
push 0xb
mov edi ecx
call esi
push 0xc
mov [ edi + 0x8 ] eax
call esi
push 0x2
mov [ edi + 0xc ] eax
call esi
inc eax
push 0x3
mov [ rw-data ] eax
call esi
inc eax
push 0x0
mov [ rw-data ] eax
call [ GetDC@IAT ]
mov esi [ GetDeviceCaps@IAT ]
mov ebx eax
push 0x58
push ebx
call esi
push 0x5a
push ebx
mov [ edi + 0x18 ] eax
call esi
push ebx
push 0x0
mov [ edi + 0x1c ] eax
call [ ReleaseDC@IAT ]
pop edi
pop esi
pop ebx
retn
sub_415e32
mov edi edi
push ebx
push esi
push edi
mov esi ecx
call sub_415dd6
xor ebx ebx
mov ecx esi
mov [ esi + 0x24 ] ebx
call sub_415d90
mov edi [ LoadCursorW@IAT ]
push 0x7f02
push ebx
call edi
push 0x7f00
push ebx
mov [ esi + 0x3c ] eax
call edi
push 0x2
mov [ esi + 0x40 ] eax
pop eax
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] eax
pop edi
mov [ esi + 0x50 ] ebx
mov [ esi + 0x44 ] ebx
mov eax esi
pop esi
pop ebx
retn
sub_415e9f
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x38
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_415f57
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0x18 ]
lea ebx [ esi + edi ]
push ebx
call sub_401d10
push esi
push [ ebp + 0xc ]
mov [ ebp + 0x10 ] eax
push esi
push eax
call sub_401d40
mov eax [ ebp + 0x10 ]
push edi
push [ ebp + 0x14 ]
lea eax [ eax + esi * 2 ]
push edi
push eax
call sub_401d40
mov ecx [ ebp + 0x8 ]
add esp 0x20
push ebx
call sub_401d60
pop edi
pop esi
pop ebx
pop ebp
retn
sub_415fa1
push 0x4
mov eax sub_42af63
call sub_41a939
mov esi [ ebp + 0x10 ]
and [ ebp - 0x10 ] 0x0
mov ecx esi
call sub_4090f0
mov ecx [ ebp + 0x8 ]
push eax
call sub_415f40
mov eax [ esi ]
push [ eax - 0xc ]
and [ ebp - 0x4 ] 0x0
push eax
push [ ebp + 0xc ]
mov [ ebp - 0x10 ] 0x1
call sub_401e40
pop ecx
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_415f57
mov eax [ ebp + 0x8 ]
add esp 0x14
call sub_41aa11
retn
sub_416029
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
push edi
lea ebx [ esi + 0x1c ]
push ebx
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push ebx
call [ LeaveCriticalSection@IAT ]
xor eax eax
cmp edi [ esi + 0xc ]
jge r-xdata
push [ esi ]
call [ TlsGetValue@IAT ]
test eax eax
je r-xdata
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax [ eax + 0xc ]
mov edi [ eax + edi * 4 ]
push ebx
call [ LeaveCriticalSection@IAT ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_416095
push 0x8
mov eax sub_42ae3a
call sub_41a96c
mov esi ecx
mov eax [ esi ]
test eax eax
jne r-xdata
mov eax [ esi ]
call sub_41aa11
retn 0x4
push 0x10
call sub_416a43
mov eax [ esi ]
and [ ebp - 0x4 ] 0x0
test eax eax
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push 0x10
call sub_416ab5
call [ ebp + 0x8 ]
mov [ esi ] eax
sub_4160e5
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax [ ecx ]
test eax eax
je r-xdata
leave
retn
mov eax [ ecx ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_416128
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
push edi
mov esi ecx
call sub_41610e
mov ecx [ esi ]
mov [ eax ] ecx
mov [ esi ] edi
pop edi
pop esi
pop ebp
retn 0x4
sub_416146
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
mov esi ecx
lea eax [ esi + 0x1c ]
push edi
push eax
mov [ ebp - 0x4 ] eax
call [ EnterCriticalSection@IAT ]
mov ebx [ esi + 0x4 ]
mov edi [ esi + 0x8 ]
cmp edi ebx
jge r-xdata
xor edi edi
inc edi
cmp ebx edi
jle r-xdata
mov eax [ esi + 0x10 ]
test [ eax + edi * 8 ] 0x1
je r-xdata
mov eax [ esi + 0x10 ]
add ebx 0x20
test eax eax
jne r-xdata
mov eax [ esi + 0x10 ]
add eax 0x8
cmp edi [ esi + 0xc ]
jl r-xdata
push eax
call [ GlobalHandle@IAT ]
push eax
mov [ ebp - 0x8 ] eax
call [ GlobalUnlock@IAT ]
push 0x2002
push 0x8
push ebx
call sub_4099e1
pop ecx
pop ecx
push eax
push [ ebp - 0x8 ]
call [ GlobalReAlloc@IAT ]
push 0x8
push ebx
call sub_4099e1
pop ecx
pop ecx
push eax
push 0x2
call [ GlobalAlloc@IAT ]
jmp r-xdata
cmp edi ebx
jl r-xdata
inc edi
add eax 0x8
cmp edi ebx
jl r-xdata
mov eax [ esi + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
or [ eax ] 0x1
lea eax [ edi + 0x1 ]
mov [ esi + 0x8 ] eax
call [ LeaveCriticalSection@IAT ]
mov eax edi
pop edi
pop esi
pop ebx
leave
retn
lea eax [ edi + 0x1 ]
mov [ esi + 0xc ] eax
push eax
call [ GlobalLock@IAT ]
mov ecx [ esi + 0x4 ]
mov edx ebx
sub edx ecx
shl edx 0x3
push edx
mov [ ebp - 0x8 ] eax
lea eax [ eax + ecx * 8 ]
push 0x0
push eax
call sub_41ae80
mov eax [ ebp - 0x8 ]
add esp 0xc
mov [ esi + 0x4 ] ebx
mov [ esi + 0x10 ] eax
mov esi [ esi + 0x10 ]
test esi esi
je r-xdata
test eax eax
jne r-xdata
test [ eax ] 0x1
je r-xdata
push [ ebp - 0x4 ]
call [ LeaveCriticalSection@IAT ]
call sub_40a366
push esi
call [ GlobalHandle@IAT ]
push eax
call [ GlobalLock@IAT ]
sub_41625e
xor eax eax
push esi
mov esi ecx
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0x4
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x1
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] eax
call [ TlsAlloc@IAT ]
mov [ esi ] eax
cmp eax 0xffffffff
jne r-xdata
lea eax [ esi + 0x1c ]
push eax
call [ InitializeCriticalSection@IAT ]
mov eax esi
pop esi
retn
call sub_40a366
sub_41629d
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
push edi
lea esi [ ebx + 0x1c ]
push esi
mov [ ebp - 0x4 ] esi
call [ EnterCriticalSection@IAT ]
mov edi [ ebp + 0x8 ]
test edi edi
jle r-xdata
push esi
cmp edi [ ebx + 0xc ]
jge r-xdata
mov esi [ ebx + 0x14 ]
jmp r-xdata
test esi esi
jne r-xdata
cmp edi [ esi + 0x8 ]
jge r-xdata
mov eax [ ebx + 0x10 ]
push [ ebp - 0x4 ]
lea eax [ eax + edi * 8 ]
and [ eax ] 0xfffffffe
jmp r-xdata
mov esi [ esi + 0x4 ]
mov eax [ esi + 0xc ]
mov ecx [ eax + edi * 4 ]
test ecx ecx
je r-xdata
call [ LeaveCriticalSection@IAT ]
pop edi
pop esi
pop ebx
leave
retn 0x4
mov eax [ esi + 0xc ]
and [ eax + edi * 4 ] 0x0
mov eax [ ecx ]
push 0x1
call [ eax ]
sub_416305
push 0x10
mov eax sub_42ae55
call sub_41a96c
mov edi ecx
mov [ ebp - 0x18 ] edi
lea esi [ edi + 0x1c ]
push esi
mov [ ebp - 0x14 ] esi
call [ EnterCriticalSection@IAT ]
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jle r-xdata
push esi
cmp eax [ edi + 0xc ]
jge r-xdata
push [ edi ]
call [ TlsGetValue@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x10
mov [ ebp - 0x4 ] ebx
call sub_415ff6
cmp eax ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ esi + 0x8 ]
jl r-xdata
xor esi esi
mov [ eax ] r--data
mov esi eax
jmp r-xdata
mov eax [ esi + 0xc ]
cmp eax ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
cmp [ esi + 0xc ] ebx
jne r-xdata
or [ ebp - 0x4 ] 0xffffffff
push esi
lea ecx [ edi + 0x14 ]
mov [ esi + 0x8 ] ebx
mov [ esi + 0xc ] ebx
call sub_416128
jmp r-xdata
push [ ebp - 0x14 ]
jmp r-xdata
cmp ecx [ esi + 0x8 ]
jge r-xdata
push 0x2
push 0x4
push [ edi + 0xc ]
call sub_4099e1
pop ecx
pop ecx
push eax
push [ esi + 0xc ]
call [ LocalReAlloc@IAT ]
push 0x4
push [ edi + 0xc ]
call sub_4099e1
pop ecx
pop ecx
push eax
push ebx
call [ LocalAlloc@IAT ]
jmp r-xdata
call [ LeaveCriticalSection@IAT ]
call sub_41aa11
retn 0x8
mov edx [ ebp + 0xc ]
mov [ eax + ecx * 4 ] edx
mov ecx [ esi + 0x8 ]
mov [ esi + 0xc ] eax
mov edx [ edi + 0xc ]
sub edx ecx
shl edx 0x2
push edx
lea eax [ eax + ecx * 4 ]
push ebx
push eax
call sub_41ae80
mov eax [ edi + 0xc ]
add esp 0xc
push esi
mov [ esi + 0x8 ] eax
push [ edi ]
call [ TlsSetValue@IAT ]
mov ecx [ ebp + 0x8 ]
push [ ebp - 0x14 ]
call [ LeaveCriticalSection@IAT ]
call sub_40a366
cmp eax ebx
jne r-xdata
sub_41643a
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_416013
sub_416455
push 0x4
mov eax sub_42ae80
call sub_41a939
mov esi ecx
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
test eax eax
jne r-xdata
cmp [ esi ] 0x0
jne r-xdata
call sub_40a39e
push [ esi ]
mov ecx [ rw-data ]
call sub_416029
mov edi eax
test edi edi
jne r-xdata
mov ecx [ rw-data ]
test ecx ecx
jne r-xdata
mov eax edi
call sub_41aa11
retn 0x4
call [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov edi eax
push edi
push [ esi ]
call sub_416305
call sub_416146
mov [ esi ] eax
test eax eax
je r-xdata
mov ecx rw-data
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
call sub_41625e
or [ ebp - 0x4 ] 0xffffffff
mov ecx eax
mov [ rw-data ] ecx
test eax eax
je r-xdata
sub_4164df
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi ] 0x0
pop esi
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_41629d
sub_416541
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0xa0 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ ShowWindow@IAT ]
pop ebp
retn 0x4
sub_416583
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0xa8 ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
pop ebp
retn 0x4
sub_4165aa
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x9c ]
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x20 ]
call [ SetWindowPos@IAT ]
pop ebp
retn 0x18
mov eax [ eax + 0x20 ]
sub_4165e8
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x50 ] 0x0
jne r-xdata
push [ esi + 0x20 ]
call [ GetParent@IAT ]
mov ecx [ ebp + 0x8 ]
push eax
add ecx 0x1c
call sub_416bbe
test eax eax
je r-xdata
cmp [ eax + 0x4c ] 0x0
je r-xdata
mov ecx [ eax + 0x4c ]
mov eax [ ecx ]
push 0x0
push esi
call [ eax + 0x9c ]
sub_416666
push 0x0
mov eax sub_42aea5
call sub_41a939
call sub_411d2a
mov esi eax
cmp [ esi + 0x18 ] 0x0
jne r-xdata
mov eax [ esi + 0x18 ]
call sub_41aa11
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_416956
call sub_409941
push 0x60
mov ebx eax
call sub_409958
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_416f81
push sub_41664c
push r--data
call sub_41755f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x18 ] eax
call sub_409941
sub_4166ee
mov edi edi
push ebp
mov ebp esp
push 0x0
call sub_416666
mov ecx eax
xor eax eax
test ecx ecx
je r-xdata
pop ebp
retn 0x4
add ecx 0x1c
pop ebp
jmp sub_416bbe
sub_41670f
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_416666
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_416c2c
sub_416751
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_41673b
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41679c
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x41c ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x2
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x6d
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x6d
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x1
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_41683d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_416778
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41685e
mov edi edi
push ebp
mov ebp esp
sub esp 0x204
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
test ebx ebx
jne r-xdata
test esi esi
je r-xdata
call sub_40a39e
push esi
call [ lstrlenW@IAT ]
mov edi eax
xor eax eax
push 0x1fe
push eax
mov [ ebp - 0x204 ] ax
lea eax [ ebp - 0x202 ]
push eax
call sub_41ae80
mov eax 0x100
add esp 0xc
cmp edi eax
ja r-xdata
push esi
push ebx
call [ SetWindowTextW@IAT ]
push eax
lea eax [ ebp - 0x204 ]
push eax
push ebx
call [ GetWindowTextW@IAT ]
cmp eax edi
jne r-xdata
push esi
lea eax [ ebp - 0x204 ]
push eax
call [ lstrcmpW@IAT ]
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn 0x8
sub_4168f7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40a39e
pop esi
pop ebp
retn 0x4
push eax
call [ DeleteObject@IAT ]
and [ esi ] 0x0
sub_41691e
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push edi
call [ GlobalFlags@IAT ]
mov esi eax
and esi 0xff
je r-xdata
push edi
call [ GlobalFree@IAT ]
pop esi
push edi
dec esi
call [ GlobalUnlock@IAT ]
test esi esi
jne r-xdata
sub_416956
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41173f
mov esi eax
test esi esi
je r-xdata
call sub_40a366
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
push eax
call sub_41ba09
pop ecx
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + 0x4 ]
cmp eax edx
ja r-xdata
sub eax ecx
sub eax 0x4
push eax
push [ esi + 0xc ]
call sub_41b8c9
pop ecx
push [ esi + 0xc ]
call sub_41a4ab
and [ esi + 0xc ] 0x0
jmp r-xdata
pop ecx
xor eax eax
inc eax
pop esi
pop ebp
retn
sub_4169a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push edi
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0x8 ]
call [ ClientToScreen@IAT ]
mov edi [ GetWindow@IAT ]
push 0x5
push [ ebp + 0x8 ]
jmp r-xdata
call edi
mov esi eax
test esi esi
jne r-xdata
push esi
call [ GetDlgCtrlID@IAT ]
cmp eax 0xffff
je r-xdata
pop edi
pop esi
leave
retn 0xc
push 0x2
push esi
push 0xfffffff0
push esi
call [ GetWindowLongW@IAT ]
test eax 0x10000000
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call [ GetWindowRect@IAT ]
push [ ebp + 0x10 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0xc ]
push eax
call [ PtInRect@IAT ]
test eax eax
jne r-xdata
mov eax esi
jmp r-xdata
sub_416a43
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp edi 0x11
jb r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call sub_40a39e
mov ebx [ EnterCriticalSection@IAT ]
lea esi [ edi * 4 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
call sub_416a1f
imul edi edi 0x18
add edi rw-data
push edi
call ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push rw-data
call ebx
cmp [ esi ] 0x0
jne r-xdata
push rw-data
call [ LeaveCriticalSection@IAT ]
mov eax edi
imul eax eax 0x18
add eax rw-data
push eax
call [ InitializeCriticalSection@IAT ]
inc [ esi ]
sub_416ab5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x11
jb r-xdata
imul eax eax 0x18
add eax rw-data
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn 0x4
call sub_40a39e
sub_416ada
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
jne r-xdata
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
push 0x11
pop edi
cmp [ ebp + 0xc ] 0x0
je r-xdata
push eax
call sub_409992
and [ esi + 0x4 ] 0x0
pop ecx
mov [ esi + 0x8 ] edi
pop edi
pop esi
pop ebp
retn 0x8
xor ecx ecx
push 0x4
pop edx
mov eax edi
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_409958
mov ecx edi
shl ecx 0x2
push ecx
push 0x0
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
sub_416b38
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov ecx [ esi + 0x14 ]
and [ esi + 0xc ] 0x0
and [ esi + 0x10 ] 0x0
call sub_41958d
and [ esi + 0x14 ] 0x0
pop esi
retn
push eax
call sub_409992
and [ esi + 0x4 ] 0x0
pop ecx
sub_416b83
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0x8 ]
mov eax esi
shr eax 0x4
mov [ edx ] eax
xor edx edx
div [ ecx + 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] edx
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
xor eax eax
mov eax [ ecx + edx * 4 ]
jmp r-xdata
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] esi
je r-xdata
pop esi
pop ebp
retn 0xc
mov eax [ eax ]
sub_416bbe
mov edi edi
push ebp
mov ebp esp
test ecx ecx
jne r-xdata
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
call sub_40a39e
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
xor edx edx
shr eax 0x4
div [ ecx + 0x8 ]
mov edx [ esi + edx * 4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
test edx edx
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ edx + 0x4 ] edi
je r-xdata
xor eax eax
mov eax [ edx + 0x8 ]
jmp r-xdata
mov edx [ edx ]
pop edi
sub_416c03
mov edi edi
push ebp
mov ebp esp
push ecx
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x8 ]
call sub_416b83
test eax eax
je r-xdata
leave
retn 0x8
mov eax [ eax + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
sub_416c2c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ecx + 0x4 ]
test esi esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
shr eax 0x4
xor edx edx
div [ ecx + 0x8 ]
lea edx [ esi + edx * 4 ]
mov eax [ edx ]
jmp r-xdata
xor eax eax
jmp r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x4
cmp [ eax + 0x4 ] edi
je r-xdata
pop edi
mov esi [ eax ]
push eax
mov [ edx ] esi
call sub_416b65
xor eax eax
inc eax
jmp r-xdata
mov edx eax
mov eax [ eax ]
sub_416c74
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi [ eax ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0xc
push edi
cmp esi 0xffffffff
jne r-xdata
mov edi [ esi ]
test edi edi
jne r-xdata
mov edx [ ecx + 0x8 ]
xor edi edi
test edx edx
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edi
mov eax [ esi + 0x4 ]
mov [ ecx ] eax
mov eax [ esi + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop edi
mov eax [ esi + 0x4 ]
shr eax 0x4
xor edx edx
push ebx
mov ebx [ ecx + 0x8 ]
div ebx
inc edx
cmp edx ebx
jae r-xdata
mov eax [ ecx + 0x4 ]
pop ebx
mov eax [ ecx + 0x4 ]
lea eax [ eax + edx * 4 ]
inc edi
add eax 0x4
cmp edi edx
jb r-xdata
inc edx
add eax 0x4
cmp edx ebx
jb r-xdata
mov esi [ eax ]
test esi esi
jne r-xdata
call sub_40a39e
mov edi [ eax ]
test edi edi
jne r-xdata
sub_416cf7
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
xor edx edx
cmp ecx edx
mov [ eax ] r--data
jg r-xdata
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] 0x11
mov [ eax + 0xc ] edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov [ eax + 0x18 ] ecx
pop ebp
retn 0x4
push 0xa
pop ecx
sub_416d35
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x10 ] 0x0
jne r-xdata
mov eax [ esi + 0x10 ]
mov ecx [ eax ]
inc [ esi + 0xc ]
mov [ esi + 0x10 ] ecx
and [ eax + 0x4 ] 0x0
and [ eax + 0x8 ] 0x0
pop esi
retn
push 0xc
push [ esi + 0x18 ]
lea eax [ esi + 0x14 ]
push eax
call sub_41955a
mov ecx [ esi + 0x18 ]
mov edx ecx
imul edx edx 0xc
add eax 0x4
dec ecx
lea eax [ eax + edx - 0xc ]
js r-xdata
mov edx [ esi + 0x10 ]
mov [ eax ] edx
mov [ esi + 0x10 ] eax
dec ecx
sub eax 0xc
test ecx ecx
jge r-xdata
sub_416d85
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
push edi
mov edi [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp + 0x8 ]
push eax
push edi
mov esi ecx
call sub_416b83
test eax eax
jne r-xdata
pop edi
add eax 0x8
pop esi
leave
retn 0x4
cmp [ esi + 0x4 ] eax
jne r-xdata
mov ecx esi
call sub_416d35
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edi
mov edx [ esi + 0x4 ]
shl ecx 0x2
mov edx [ ecx + edx ]
mov [ eax ] edx
mov edx [ esi + 0x4 ]
mov [ ecx + edx ] eax
push 0x1
push [ esi + 0x8 ]
mov ecx esi
call sub_416ada
sub_416ddc
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_416b38
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_416e2b
mov edi edi
push ebx
push esi
mov esi ecx
mov eax [ esi + 0x8 ]
xor ebx ebx
push edi
mov edi [ SaveDC@IAT ]
test eax eax
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
je r-xdata
push eax
call edi
mov ebx eax
pop edi
pop esi
mov eax ebx
pop ebx
retn
push eax
call edi
test eax eax
je r-xdata
or ebx 0xffffffff
sub_416e5e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
inc eax
push edi
mov edi [ RestoreDC@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
test eax eax
je r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
call edi
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
sub_416ea0
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetBkColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_416ed3
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
or eax 0xffffffff
push edi
mov edi [ SetTextColor@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_416f06
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SetMapMode@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push ecx
call edi
pop edi
pop esi
pop ebp
retn 0x4
push [ ebp + 0x8 ]
push esi
call edi
sub_416ff3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ExtTextOutW@IAT ]
pop ebp
retn 0x1c
sub_41701a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ecx + 0x4 ]
call [ TabbedTextOutW@IAT ]
mov ecx [ ebp + 0x8 ]
movsx edx ax
shr eax 0x10
cwde
mov [ ecx + 0x4 ] eax
mov [ ecx ] edx
mov eax ecx
pop ebp
retn 0x20
sub_417091
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
push [ ecx + 0x4 ]
call [ GrayStringW@IAT ]
pop ebp
retn 0x20
mov eax [ eax + 0x4 ]
sub_4170e1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_417120
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ OffsetViewportOrgEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_41715f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_41719e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleViewportExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_4171e9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ SetWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0xc
push [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_417228
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
mov edi [ ScaleWindowExtEx@IAT ]
cmp eax [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call edi
mov eax [ ebp + 0x8 ]
pop edi
pop esi
pop ebp
retn 0x14
push [ ebp + 0x8 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call edi
sub_417273
push 0x10
call sub_409958
pop ecx
xor ecx ecx
cmp eax ecx
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_4172ae
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
cmp eax ecx
je r-xdata
pop ebp
retn 0x4
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
sub_4172e9
mov edi edi
push ebp
mov ebp esp
test [ ebp + 0x8 ] 0x1
push esi
mov esi ecx
mov [ esi ] r--data
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41730b
push 0x0
mov eax sub_42aea5
call sub_41a939
call sub_411d2a
mov esi eax
cmp [ esi + 0x1c ] 0x0
jne r-xdata
mov eax [ esi + 0x1c ]
call sub_41aa11
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_416956
call sub_409941
push 0x60
mov ebx eax
call sub_409958
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x2
push 0x4
push sub_416f81
push sub_4172ae
push r--data
call sub_41755f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x1c ] eax
call sub_409941
sub_417393
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
mov eax [ esi ]
mov ecx esi
call [ eax + 0x14 ]
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_41730b
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_416c2c
sub_4173df
push 0x0
mov eax sub_42aea5
call sub_41a939
call sub_411d2a
mov esi eax
cmp [ esi + 0x20 ] 0x0
jne r-xdata
mov eax [ esi + 0x20 ]
call sub_41aa11
retn 0x4
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push sub_416956
call sub_409941
push 0x60
mov ebx eax
call sub_409958
pop ecx
mov ecx eax
mov [ ebp + 0x8 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
xor eax eax
push 0x1
push 0x4
push sub_416f81
push sub_4172cf
push r--data
call sub_41755f
jmp r-xdata
or [ ebp - 0x4 ] 0xffffffff
push ebx
mov [ esi + 0x20 ] eax
call sub_409941
sub_417467
mov edi edi
push esi
mov esi ecx
push edi
mov edi [ esi + 0x4 ]
test edi edi
je r-xdata
and [ esi + 0x4 ] 0x0
mov eax edi
pop edi
pop esi
retn
push 0x0
call sub_4173df
test eax eax
je r-xdata
push [ esi + 0x4 ]
lea ecx [ eax + 0x1c ]
call sub_416c2c
sub_4174a9
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4173c6
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_4174ca
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
push [ ebp + 0x8 ]
mov esi ecx
call [ GetStockObject@IAT ]
mov ecx [ esi + 0x4 ]
mov edi [ SelectObject@IAT ]
mov ebx eax
xor eax eax
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
push ebx
push ecx
call edi
push eax
call sub_417453
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push ebx
push esi
call edi
sub_41750b
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov ecx [ esi + 0x4 ]
xor eax eax
push edi
mov edi [ SelectObject@IAT ]
cmp ecx [ esi + 0x8 ]
je r-xdata
mov esi [ esi + 0x8 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
push eax
call sub_417453
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
test ebx ebx
jne r-xdata
push eax
push ecx
call edi
mov eax [ ebx + 0x4 ]
mov eax [ ebx + 0x4 ]
xor eax eax
jmp r-xdata
push eax
push esi
call edi
sub_41755f
push 0x4
mov eax sub_42af14
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov edi [ ebp + 0x8 ]
push 0x40
mov [ esi ] r--data
push [ edi + 0x4 ]
lea ecx [ esi + 0x4 ]
call sub_4195a3
and [ ebp - 0x4 ] 0x0
push 0xa
lea ecx [ esi + 0x1c ]
call sub_416cf7
lea ebx [ esi + 0x38 ]
push 0x4
mov ecx ebx
mov [ ebp - 0x4 ] 0x1
call sub_416cf7
xor eax eax
mov [ ebp - 0x4 ] 0x2
cmp [ ebp + 0xc ] eax
jne r-xdata
cmp [ ebp + 0x10 ] eax
je r-xdata
call sub_40a39e
push eax
push 0x7
mov ecx ebx
call sub_416ada
mov eax [ ebp + 0xc ]
mov [ esi + 0x14 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp + 0x14 ]
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x18 ]
mov [ esi + 0x5c ] eax
mov [ esi + 0x54 ] edi
mov eax esi
call sub_41aa11
retn 0x14
sub_4175e8
push 0x8
mov eax sub_42af2f
call sub_41a96c
mov esi ecx
mov edi [ ebp + 0x8 ]
test edi edi
jne r-xdata
push edi
lea ecx [ esi + 0x1c ]
call sub_416bbe
test eax eax
jne r-xdata
xor eax eax
call sub_41aa11
retn 0x4
lea ecx [ esi + 0x38 ]
push edi
call sub_416bbe
test eax eax
je r-xdata
push sub_416956
call sub_409941
and [ ebp - 0x4 ] 0x0
lea ecx [ esi + 0x4 ]
mov [ ebp + 0x8 ] eax
call sub_4195ed
mov ebx eax
test ebx ebx
jne r-xdata
mov ecx [ esi + 0x58 ]
add ecx eax
mov [ ecx ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
push ebx
call [ esi + 0x14 ]
push edi
lea ecx [ esi + 0x38 ]
call sub_416d85
push [ ebp + 0x8 ]
or [ ebp - 0x4 ] 0xffffffff
mov [ eax ] ebx
call sub_409941
mov eax [ esi + 0x58 ]
add eax ebx
mov [ eax ] edi
cmp [ esi + 0x5c ] 0x2
jne r-xdata
call sub_40a366
mov [ ecx + 0x4 ] edi
jmp r-xdata
mov eax ebx
jmp r-xdata
mov [ eax + 0x4 ] edi
sub_41769b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi ecx
test esi esi
je r-xdata
pop esi
leave
retn
mov eax [ esi + 0x44 ]
neg eax
sbb eax eax
mov [ ebp - 0x8 ] eax
je r-xdata
lea ecx [ esi + 0x38 ]
call sub_416b38
lea ecx [ esi + 0x4 ]
call sub_4195d1
push edi
lea edi [ esi + 0x38 ]
push [ ebp - 0x4 ]
call [ esi + 0x18 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
and [ eax + 0x4 ] 0x0
lea eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
mov ecx edi
call sub_416c74
mov eax [ esi + 0x58 ]
add eax [ ebp - 0x4 ]
and [ eax ] 0x0
cmp [ esi + 0x5c ] 0x2
jne r-xdata
pop edi
sub_417700
push 0x4
mov eax sub_42af14
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
mov [ esi ] r--data
mov [ ebp - 0x4 ] 0x2
call sub_41769b
lea ecx [ esi + 0x38 ]
mov [ ebp - 0x4 ] 0x1
call sub_416d2a
lea ecx [ esi + 0x1c ]
mov [ ebp - 0x4 ] 0x0
call sub_416d2a
or [ ebp - 0x4 ] 0xffffffff
lea ecx [ esi + 0x4 ]
call j_sub_4195d1
call sub_41aa11
retn
sub_41774d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_417700
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41776e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
call sub_411d2a
mov ebx eax
mov eax [ ebx + 0x10 ]
xor esi esi
cmp eax esi
je r-xdata
xor eax eax
cmp [ ebx + 0x10 ] eax
pop esi
setne al
pop ebx
pop ebp
retn 0x4
dec eax
mov [ ebx + 0x10 ] eax
cmp eax esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
je r-xdata
push edi
call sub_411cf7
mov edi [ eax + 0x4 ]
mov ecx rw-data
call sub_41607b
mov esi eax
test esi esi
je r-xdata
cmp [ ebp + 0x8 ] 0xffffffff
je r-xdata
pop edi
test edi edi
je r-xdata
mov ecx [ ebx + 0x20 ]
call sub_41769b
mov ecx [ ebx + 0x1c ]
call sub_41769b
mov ecx [ ebx + 0x18 ]
call sub_41769b
mov ecx [ ebx + 0x14 ]
call sub_41769b
mov ecx [ ebx + 0x24 ]
call sub_41769b
call sub_40f65e
cmp eax esi
je r-xdata
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
mov eax [ eax + 0x3c ]
cmp eax esi
je r-xdata
cmp [ edi + 0x98 ] 0x0
je r-xdata
push eax
call sub_41ba09
pop ecx
cmp eax [ edi + 0x98 ]
jae r-xdata
push esi
push esi
call eax
mov eax [ esi + 0xc ]
and [ ebp + 0x8 ] 0x0
test eax eax
je r-xdata
push [ edi + 0x98 ]
call sub_41a3e1
pop ecx
mov [ esi + 0xc ] eax
test eax eax
jne r-xdata
push eax
call sub_41ba09
push [ esi + 0xc ]
mov [ ebp + 0x8 ] eax
call sub_41a4ab
pop ecx
pop ecx
cmp [ ebp + 0x8 ] eax
je r-xdata
push [ ebp + 0x8 ]
call sub_41a3e1
pop ecx
mov [ esi + 0xc ] eax
sub_417869
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ebx [ ebp + 0x10 ]
test ebx ebx
je r-xdata
call sub_40a39e
and [ ebp + 0xc ] 0x0
cmp [ edi ] 0x0
mov esi edi
je r-xdata
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx edi
call sub_401d10
cmp [ edi ] 0x0
mov esi eax
je r-xdata
cmp [ esi ] 0x25
jne r-xdata
mov ecx [ ebp + 0x8 ]
sub esi [ ecx ]
sar esi 0x1
push esi
call sub_40a54d
pop edi
pop esi
pop ebx
leave
retn 0x10
movzx ecx [ ebx ]
cmp cx 0x25
jne r-xdata
inc esi
inc esi
movzx eax [ esi + 0x2 ]
cmp ax 0x31
jb r-xdata
mov [ esi ] cx
inc esi
inc esi
inc ebx
inc ebx
movzx eax [ ebx + 0x2 ]
cmp ax 0x31
jb r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x41
jb r-xdata
cmp ax 0x39
jbe r-xdata
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x5a
ja r-xdata
movzx eax ax
sub eax 0x31
cmp ax 0x39
jbe r-xdata
inc [ ebp + 0xc ]
mov eax [ ebx + eax * 4 ]
test eax eax
je r-xdata
cmp ax 0x39
jbe r-xdata
mov ecx [ ebp + 0x10 ]
lea edi [ ecx + eax * 4 ]
mov eax [ edi ]
test eax eax
je r-xdata
push 0x3f
pop eax
mov [ esi ] ax
inc esi
inc esi
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
add [ ebp + 0xc ] eax
jmp r-xdata
movzx eax ax
sub eax 0x38
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
push eax
call [ lstrlenW@IAT ]
push [ edi ]
mov ebx eax
mov eax [ ebp + 0xc ]
inc eax
push eax
push esi
call sub_41222a
add esp 0xc
sub [ ebp + 0xc ] ebx
lea esi [ esi + ebx * 2 ]
mov ebx [ ebp - 0x4 ]
jmp r-xdata
dec [ ebp + 0xc ]
add esi 0x4
cmp eax [ ebp + 0x14 ]
jge r-xdata
add ebx 0x4
cmp eax [ ebp + 0x14 ]
mov [ ebp - 0x4 ] ebx
jl r-xdata
sub_4179ac
push 0x4
mov eax sub_42ab18
call sub_41a939
lea ecx [ ebp - 0x10 ]
call sub_401ff0
push [ ebp + 0xc ]
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp - 0x10 ]
call sub_401b60
test eax eax
jne r-xdata
push [ ebp + 0x14 ]
mov esi [ ebp - 0x10 ]
push [ ebp + 0x10 ]
push esi
push [ ebp + 0x8 ]
call sub_417869
lea ecx [ esi - 0x10 ]
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
jmp r-xdata
call sub_402020
call sub_41aa11
retn 0x10
sub_417a17
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x14 ]
push edi
xor edi edi
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0x4 ] edi
call sub_41958d
mov [ esi + 0x14 ] edi
pop edi
pop esi
retn
sub_417a39
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov edx [ ecx + 0x10 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
call sub_40a39e
pop ebp
retn 0x4
call sub_417a17
sub_417a60
test ecx ecx
jne r-xdata
mov edx [ ecx + 0x4 ]
test edx edx
je r-xdata
call sub_40a39e
mov eax [ edx ]
push esi
mov esi [ edx + 0x8 ]
mov [ ecx + 0x4 ] eax
test eax eax
je r-xdata
and [ ecx + 0x8 ] 0x0
and [ eax + 0x4 ] 0x0
jmp r-xdata
push edx
call sub_417a39
mov eax esi
pop esi
retn
sub_417a91
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov esi ecx
test edi edi
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp edi 0x1
je r-xdata
call sub_40a39e
push 0x2
call sub_416a43
add [ esi + 0x80 ] edi
cmp [ esi + 0x80 ] 0x0
jle r-xdata
cmp edi 0xffffffff
je r-xdata
push [ esi + 0x84 ]
and [ esi + 0x80 ] 0x0
call [ SetCursor@IAT ]
push [ rw-data ]
call [ SetCursor@IAT ]
test edi edi
jle r-xdata
push 0x2
call sub_416ab5
pop edi
pop esi
pop ebp
retn 0x4
cmp [ esi + 0x80 ] 0x1
jne r-xdata
mov [ esi + 0x84 ] eax
jmp r-xdata
sub_417b22
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
lea eax [ ecx + 0x88 ]
cmp [ eax ] 0x0
je r-xdata
call sub_40a39e
pop ebp
retn 0x4
mov eax [ eax ]
mov edx [ eax ]
mov ecx eax
pop ebp
jmp [ edx + 0x4 ]
sub_417b64
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
test ecx ecx
jne r-xdata
add eax 0x88
cmp [ eax ] 0x0
jne r-xdata
call sub_40a39e
mov eax [ eax ]
mov edx [ eax ]
push ecx
mov ecx eax
call [ edx + 0xc ]
mov eax [ ecx ]
push 0x0
call [ eax ]
jmp r-xdata
pop ebp
retn 0x4
sub_417bb1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jl r-xdata
call sub_40a39e
cmp eax [ ecx + 0x4 ]
jl r-xdata
mov ecx [ ecx + 0x8 ]
lea eax [ ecx + eax * 4 ]
pop ebp
retn 0x4
sub_417be4
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x88 ]
push edi
test ecx ecx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx 0xe110
cmp eax edx
jb r-xdata
call sub_40a39e
mov edi [ ecx + 0x4 ]
add edi edx
cmp eax edi
jae r-xdata
lea edi [ eax - 0xe110 ]
push edi
call sub_417bb1
mov eax [ eax ]
mov edx [ esi ]
push eax
mov ecx esi
call [ edx + 0x88 ]
test eax eax
jne r-xdata
xor eax eax
pop edi
inc eax
pop esi
pop ebp
retn 0x4
mov ecx [ esi + 0x88 ]
mov eax [ ecx ]
push edi
call [ eax ]
sub_417c42
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
lea eax [ ebp - 0x4 ]
push eax
xor edi edi
mov esi 0x2001f
push esi
push edi
push r--data
mov ebx ecx
push 0x80000001
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] edi
call [ RegOpenKeyExW@IAT ]
test eax eax
jne r-xdata
mov esi [ RegCloseKey@IAT ]
cmp [ ebp - 0x4 ] edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push edi
push esi
push edi
push edi
push edi
push [ ebx + 0x54 ]
mov ebx [ RegCreateKeyExW@IAT ]
push [ ebp - 0x4 ]
call ebx
test eax eax
jne r-xdata
cmp [ ebp - 0x8 ] edi
je r-xdata
push [ ebp - 0x4 ]
call esi
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push edi
push esi
push edi
push edi
push edi
push [ eax + 0x68 ]
push [ ebp - 0x8 ]
call ebx
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
leave
retn
push [ ebp - 0x8 ]
call esi
sub_417cd5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
xor esi esi
push edi
mov [ ebp - 0x4 ] esi
call sub_417c42
mov edi eax
cmp edi esi
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push 0x2001f
push esi
push esi
push esi
push [ ebp + 0x8 ]
push edi
call [ RegCreateKeyExW@IAT ]
push edi
call [ RegCloseKey@IAT ]
mov eax [ ebp - 0x4 ]
xor eax eax
jmp r-xdata
pop edi
pop esi
leave
retn 0x4
sub_417d1d
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
cmp [ esi + 0x54 ] 0x0
push edi
mov edi [ ebp + 0x8 ]
je r-xdata
push [ ebp + 0x10 ]
lea eax [ ebp - 0x24 ]
push r--data
push 0x10
push eax
call sub_41ad7d
add esp 0x10
push [ esi + 0x68 ]
lea eax [ ebp - 0x24 ]
push eax
push ebx
push edi
call [ WritePrivateProfileStringW@IAT ]
push edi
call sub_417cd5
mov esi eax
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn 0xc
push 0x4
lea eax [ ebp + 0x10 ]
push eax
push 0x4
push 0x0
push ebx
push esi
call [ RegSetValueExW@IAT ]
push esi
mov edi eax
call [ RegCloseKey@IAT ]
xor eax eax
test edi edi
sete al
jmp r-xdata
sub_417dd4
push 0x4
mov eax sub_42af63
call sub_41a939
mov esi [ ebp + 0xc ]
and [ ebp - 0x10 ] 0x0
mov ecx esi
call sub_4090f0
mov ecx [ ebp + 0x8 ]
push eax
call sub_415f40
mov esi [ esi ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov edi [ esi - 0xc ]
mov [ ebp - 0x10 ] 0x1
call sub_401e40
push eax
push [ ebp + 0x10 ]
push edi
push esi
push [ ebp + 0x8 ]
call sub_415f57
mov eax [ ebp + 0x8 ]
add esp 0x18
call sub_41aa11
retn
sub_417e29
push 0x228
mov eax sub_42af9f
call sub_41a9d8
mov eax [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x230 ] esi
call sub_402760
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi 0x80000000
jne r-xdata
lea eax [ ebp - 0x22c ]
push eax
push [ ebp - 0x228 ]
push [ ebp - 0x230 ]
call [ RegOpenKeyW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
call sub_411561
cmp eax 0x1
jne r-xdata
mov ecx [ ebp - 0x228 ]
add ecx 0xfffffff0
call sub_402020
mov eax esi
call sub_41aa34
retn 0x8
push 0x104
lea eax [ ebp - 0x220 ]
push eax
push edi
push [ ebp - 0x22c ]
call [ RegEnumKeyW@IAT ]
mov esi eax
cmp esi edi
jne r-xdata
lea eax [ ebp - 0x228 ]
push eax
lea eax [ ebp - 0x224 ]
push r--data
push eax
call sub_415fa1
add esp 0xc
push eax
lea ecx [ ebp - 0x228 ]
mov [ ebp - 0x4 ] 0x1
call sub_402f40
mov ecx [ ebp - 0x224 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x0
call sub_402020
mov [ ebp - 0x230 ] 0x80000001
cmp esi 0x103
je r-xdata
lea eax [ ebp - 0x220 ]
push eax
lea ecx [ ebp - 0x224 ]
mov [ ebp - 0x4 ] 0x2
call sub_401ee0
lea eax [ ebp - 0x224 ]
push eax
push [ ebp - 0x22c ]
mov [ ebp - 0x4 ] 0x3
call sub_417e29
mov ecx [ ebp - 0x224 ]
mov esi eax
cmp esi edi
setne bl
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x2
call sub_402020
test bl bl
jne r-xdata
push [ ebp - 0x228 ]
push [ ebp - 0x230 ]
call [ RegDeleteKeyW@IAT ]
mov esi eax
cmp esi 0x3f2
jne r-xdata
mov [ ebp - 0x4 ] edi
jmp r-xdata
push [ ebp - 0x22c ]
call [ RegCloseKey@IAT ]
sub_417fa7
push 0x228
mov eax sub_42afe8
call sub_41a9a2
xor edi edi
mov esi ecx
mov [ ebp - 0x224 ] edi
mov [ ebp - 0x230 ] edi
call sub_417daa
mov [ ebp - 0x22c ] eax
cmp eax edi
je r-xdata
cmp [ esi + 0x54 ] edi
je r-xdata
lea eax [ ebp - 0x22c ]
push eax
mov ecx esi
call sub_417dbb
cmp eax edi
je r-xdata
xor eax eax
inc eax
call sub_41aa25
retn
xor eax eax
cmp [ esi + 0x68 ] edi
setne al
cmp eax edi
jne r-xdata
cmp [ ebp - 0x22c ] edi
jne r-xdata
mov edx [ eax ]
push edi
push edi
push 0xfffffffc
push edi
mov ecx eax
call [ edx + 0xc ]
push r--data
lea ecx [ ebp - 0x220 ]
call sub_401ee0
push [ esi + 0x54 ]
lea ecx [ ebp - 0x220 ]
mov [ ebp - 0x4 ] edi
call sub_4025c0
push r--data
lea eax [ ebp - 0x220 ]
push eax
lea eax [ ebp - 0x234 ]
push eax
call sub_417dd4
push [ esi + 0x68 ]
mov [ ebp - 0x4 ] 0x1
push eax
lea eax [ ebp - 0x228 ]
push eax
call sub_417dd4
add esp 0x18
mov ecx [ ebp - 0x234 ]
add ecx 0xfffffff0
mov [ ebp - 0x4 ] 0x3
call sub_402020
lea eax [ ebp - 0x228 ]
push eax
mov esi 0x80000001
push esi
call sub_417e29
lea eax [ ebp - 0x224 ]
push eax
push [ ebp - 0x220 ]
push esi
call [ RegOpenKeyW@IAT ]
test eax eax
jne r-xdata
call sub_40a39e
lea eax [ ebp - 0x230 ]
push eax
lea eax [ ebp - 0x21c ]
push eax
push [ ebp - 0x228 ]
push esi
call [ RegQueryValueW@IAT ]
mov ecx [ ebp - 0x228 ]
add ecx 0xfffffff0
call sub_402020
mov ecx [ ebp - 0x220 ]
add ecx 0xfffffff0
call sub_402020
push 0x104
lea eax [ ebp - 0x21c ]
push eax
push edi
push [ ebp - 0x224 ]
call [ RegEnumKeyW@IAT ]
cmp eax 0x103
jne r-xdata
push [ ebp - 0x224 ]
call [ RegCloseKey@IAT ]
lea eax [ ebp - 0x220 ]
push eax
push esi
call sub_417e29
sub_41811a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x8
push esi
push [ ebp + 0xc ]
call [ SysStringLen@IAT ]
mov ecx [ ebp + 0x8 ]
mov esi eax
push esi
call sub_40a577
lea ecx [ esi + esi ]
push ecx
push [ ebp + 0xc ]
push ecx
push eax
call sub_401840
mov ecx [ ebp + 0x8 ]
add esp 0x10
push esi
call sub_40a54d
pop esi
sub_41816a
mov edi edi
push esi
mov esi eax
xor eax eax
mov ecx edx
test edx edx
je r-xdata
mov eax 0x80070057
cmp [ esi ] ax
je r-xdata
retn
test eax eax
jl r-xdata
test edx edx
jne r-xdata
inc esi
inc esi
dec edx
jne r-xdata
and [ edi ] 0x0
sub ecx edx
mov [ edi ] ecx
retn
pop esi
test edi edi
je r-xdata
sub_4181a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push edi
mov edi [ ebp + 0x10 ]
test eax eax
je r-xdata
mov eax 0x80070057
mov edx [ ebp + 0xc ]
cmp edx 0x7fffffff
ja r-xdata
pop edi
pop ebp
retn 0xc
test edi edi
je r-xdata
call sub_41816a
jmp r-xdata
and [ edi ] 0x0
test eax eax
jge r-xdata
sub_4181de
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0xc ] 0x0
push esi
mov esi ecx
jne r-xdata
push 0x0
lea eax [ ebp + 0xc ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ ReadFile@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0xc ]
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
pop esi
pop ebp
retn 0x8
sub_418220
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi ecx
test edi edi
je r-xdata
pop edi
pop esi
pop ebp
retn 0x8
push 0x0
lea eax [ ebp + 0xc ]
push eax
push edi
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ WriteFile@IAT ]
test eax eax
jne r-xdata
cmp [ ebp + 0xc ] edi
je r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
push [ esi + 0xc ]
push 0xffffffff
push 0xd
call sub_4192fb
sub_41826d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
push [ ebp + 0x10 ]
mov esi ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x4 ] ecx
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
leave
retn 0xc
push edi
mov edi [ GetLastError@IAT ]
call edi
test eax eax
je r-xdata
pop edi
push [ esi + 0xc ]
call edi
push eax
call sub_419341
sub_4182c0
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi ecx
push 0x1
xor eax eax
lea ecx [ ebp - 0x4 ]
push ecx
push eax
push [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
leave
retn
push edi
mov edi [ GetLastError@IAT ]
call edi
test eax eax
je r-xdata
pop edi
push [ esi + 0xc ]
call edi
push eax
call sub_419341
sub_41830c
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
pop esi
retn
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
sub_418335
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ LockFile@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x10
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
sub_41836a
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x14 ]
mov esi ecx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ esi + 0x4 ]
call [ UnlockFile@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x10
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
sub_41839f
mov edi edi
push ebp
mov ebp esp
push esi
push 0x0
push [ ebp + 0xc ]
mov esi ecx
push [ ebp + 0x8 ]
mov eax [ esi ]
call [ eax + 0x28 ]
push [ esi + 0x4 ]
call [ SetEndOfFile@IAT ]
test eax eax
jne r-xdata
pop esi
pop ebp
retn 0x8
push [ esi + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
sub_4183d5
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push edi
lea eax [ ebp - 0x4 ]
mov edi ecx
push eax
push [ edi + 0x4 ]
call [ GetFileSize@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop edi
leave
retn
push esi
mov esi [ GetLastError@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ edi + 0xc ]
call esi
push eax
call sub_419341
sub_418416
mov edi edi
push ebp
mov ebp esp
sub esp 0x20c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x8 ]
mov ebx esi
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push ebx
push edi
call [ GetFileTitleW@IAT ]
test ax ax
je r-xdata
lea ebx [ ebp - 0x20c ]
mov [ ebp + 0x10 ] 0x104
test esi esi
jne r-xdata
push [ ebp + 0x10 ]
push esi
push edi
call sub_412ab9
jmp r-xdata
xor eax eax
push ebx
call [ lstrlenW@IAT ]
inc eax
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn 0xc
sub_418484
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
push edi
xor edi edi
cmp eax 0xffffffff
je r-xdata
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
add esi 0xc
mov ecx esi
call sub_401b90
test edi edi
je r-xdata
push eax
call [ CloseHandle@IAT ]
mov edi eax
neg edi
sbb edi edi
inc edi
pop edi
pop esi
retn
push [ esi ]
call [ GetLastError@IAT ]
push eax
call sub_419341
sub_418509
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push edi
push 0x10
mov ebx ecx
call sub_409958
pop ecx
test eax eax
je r-xdata
xor edi edi
mov ecx eax
call sub_4184ea
mov edi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ edi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ edi + 0x8 ] eax
mov eax edi
pop edi
pop ebx
leave
retn
test edi edi
je r-xdata
push esi
mov esi [ GetCurrentProcess@IAT ]
push 0x2
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
call esi
push eax
push [ ebx + 0x4 ]
call esi
push eax
call [ DuplicateHandle@IAT ]
pop esi
test eax eax
jne r-xdata
push [ ebx + 0xc ]
call [ GetLastError@IAT ]
push eax
call sub_419341
mov eax [ edi ]
push 0x1
mov ecx edi
call [ eax + 0x4 ]
sub_41857f
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push esi
push edi
mov esi 0x104
push esi
call sub_401d10
push esi
mov edi eax
push 0x0
push edi
call sub_41ae80
push 0xffffffff
push [ ebp + 0x8 ]
push esi
push edi
call sub_40a148
add esp 0x1c
push edi
call [ PathStripToRootW@IAT ]
mov ecx [ ebp + 0xc ]
push 0xffffffff
call sub_40a54d
pop edi
pop esi
pop ebp
retn 0x8
sub_4185c5
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov ecx [ esi + 0x10 ]
sub ecx 0x10
mov [ esi ] r--data
call sub_402020
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_4185f2
push 0x414
mov eax sub_42b029
call sub_41a9d8
mov esi ecx
mov [ ebp - 0x41c ] esi
mov [ esi ] r--data
xor edi edi
cmp [ esi + 0x4 ] 0xffffffff
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x4 ] 0x1
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
call sub_402020
call sub_41aa34
retn
cmp [ esi + 0x8 ] edi
je r-xdata
call sub_418484
jmp r-xdata
sub_418635
lea ecx [ ebp - 0x418 ]
call sub_401ff0
mov esi [ ebp - 0x420 ]
mov eax [ esi ]
xor edi edi
push edi
push 0x200
lea ecx [ ebp - 0x414 ]
push ecx
mov ecx esi
mov [ ebp - 0x4 ] 0x3
call [ eax + 0xc ]
test eax eax
je r-xdata
push 0x6f
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x14
lea eax [ ebp - 0x414 ]
push eax
push 0x6f
push r--data
push r--data
lea eax [ ebp - 0x418 ]
push r--data
push eax
call sub_401930
add esp 0x18
jmp r-xdata
push edi
push edi
mov edi [ ebp - 0x418 ]
push edi
call sub_415cca
lea ecx [ edi - 0x10 ]
mov [ ebp - 0x4 ] 0x2
call sub_402020
mov eax [ esi ]
push 0x1
mov ecx esi
call [ eax + 0x4 ]
mov eax r-xdata
retn
sub_4186ed
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_4185f2
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41870e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x8
call [ GetLastError@IAT ]
push eax
mov [ esi + 0xc ] eax
call sub_418faf
push [ ebp + 0xc ]
lea ecx [ esi + 0x10 ]
mov [ esi + 0x8 ] eax
call sub_401ea0
sub_41873d
push 0x268
mov eax sub_42b05c
call sub_41a9a2
mov edi [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
mov ebx [ ebp + 0x10 ]
xor ecx ecx
test edi edi
setne cl
mov [ ebp - 0x268 ] eax
test ecx ecx
jne r-xdata
xor ecx ecx
test eax eax
setne cl
test ecx ecx
je r-xdata
call sub_40a39e
lea ecx [ ebp - 0x26c ]
push ecx
push edi
mov esi 0x104
push esi
push eax
call [ GetFullPathNameW@IAT ]
test eax eax
jne r-xdata
cmp eax esi
jb r-xdata
push 0xffffffff
push [ ebp - 0x268 ]
push esi
push edi
call sub_40a148
add esp 0x10
push [ ebp - 0x268 ]
push ebx
call sub_41870e
lea ecx [ ebp - 0x264 ]
call sub_401ff0
and [ ebp - 0x4 ] 0x0
lea eax [ ebp - 0x264 ]
push eax
push edi
call sub_41857f
push [ ebp - 0x264 ]
call [ PathIsUNCW@IAT ]
test eax eax
jne r-xdata
test ebx ebx
je r-xdata
call sub_41aa25
retn 0xc
mov ecx [ ebp - 0x264 ]
add ecx 0xfffffff0
call sub_402020
xor eax eax
inc eax
push eax
push eax
lea ecx [ ebp - 0x270 ]
push ecx
lea ecx [ ebp - 0x274 ]
push ecx
push eax
push eax
push eax
push [ ebp - 0x264 ]
call [ GetVolumeInformationW@IAT ]
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
push [ ebp - 0x268 ]
lea ecx [ ebx + 0x10 ]
mov [ ebx + 0x8 ] 0x3
call sub_401ea0
jmp r-xdata
test [ ebp - 0x270 ] 0x2
jne r-xdata
push [ ebp - 0x268 ]
push ebx
call sub_41870e
test [ ebp - 0x270 ] 0x4
jne r-xdata
push edi
call [ CharUpperW@IAT ]
lea eax [ ebp - 0x260 ]
push eax
push [ ebp - 0x268 ]
call [ FindFirstFileW@IAT ]
cmp eax 0xffffffff
je r-xdata
push eax
call [ FindClose@IAT ]
cmp [ ebp - 0x26c ] 0x0
je r-xdata
cmp [ ebp - 0x26c ] edi
jbe r-xdata
lea eax [ ebp - 0x234 ]
push eax
call [ lstrlenW@IAT ]
mov ecx [ ebp - 0x26c ]
sub ecx edi
sar ecx 0x1
add eax ecx
cmp eax esi
jge r-xdata
test ebx ebx
je r-xdata
lea eax [ ebp - 0x234 ]
push eax
sub esi ecx
push esi
push [ ebp - 0x26c ]
call sub_41222a
add esp 0xc
mov ecx [ ebp - 0x264 ]
add ecx 0xfffffff0
call sub_402020
jmp r-xdata
push [ ebp - 0x268 ]
lea ecx [ ebx + 0x10 ]
mov [ ebx + 0x8 ] 0x3
call sub_401ea0
jmp r-xdata
sub_4188fe
push 0x4
mov eax sub_42b08f
call sub_41a939
mov esi ecx
mov [ ebp - 0x10 ] esi
call sub_40a3e9
lea edi [ esi + 0x10 ]
mov ecx edi
mov [ esi ] r--data
call sub_401ff0
mov eax [ ebp + 0x8 ]
push [ ebp + 0x10 ]
and [ ebp - 0x4 ] 0x0
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov ecx edi
mov [ esi + 0xc ] eax
call sub_401ea0
mov eax esi
call sub_41aa11
retn 0xc
sub_418948
mov edi edi
push ebp
mov ebp esp
sub esp 0x224
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi ecx
and [ esi + 0x8 ] 0x0
or [ esi + 0x4 ] 0xffffffff
push edi
mov [ ebp - 0x210 ] eax
mov eax [ ebp + 0x10 ]
lea edi [ esi + 0xc ]
mov ecx edi
mov [ ebp - 0x218 ] eax
and ebx 0xffff7fff
call sub_401b90
cmp [ ebp - 0x210 ] 0x0
je r-xdata
mov eax [ ebp - 0x218 ]
test eax eax
je r-xdata
push 0x0
push 0x104
push [ ebp - 0x210 ]
call sub_4181a7
test eax eax
jl r-xdata
xor eax eax
push [ ebp - 0x210 ]
lea ecx [ eax + 0x10 ]
mov [ eax + 0x8 ] 0x3
call sub_401ea0
push [ ebp - 0x218 ]
lea eax [ ebp - 0x20c ]
push [ ebp - 0x210 ]
push eax
call sub_41873d
test eax eax
je r-xdata
lea eax [ ebp - 0x20c ]
push eax
mov ecx edi
call sub_401e60
push 0x3
mov eax ebx
pop edx
xor ecx ecx
and eax edx
sub eax ecx
mov [ ebp - 0x214 ] ecx
je r-xdata
mov [ ebp - 0x214 ] 0x80000000
dec eax
je r-xdata
xor edx edx
cmp eax 0x10
je r-xdata
mov [ ebp - 0x214 ] 0x40000000
jmp r-xdata
dec eax
jne r-xdata
push 0x3
pop eax
mov eax ebx
and eax 0x2000
neg eax
sbb eax eax
and eax 0x2
inc eax
inc eax
jmp r-xdata
cmp eax 0x20
je r-xdata
mov eax ebx
and eax 0x70
push 0x1
pop edi
je r-xdata
mov [ ebp - 0x214 ] 0xc0000000
jmp r-xdata
test ebx 0x20000
je r-xdata
mov ecx 0x20000080
mov ecx 0x80
test ebx 0x10000
je r-xdata
mov edx edi
jmp r-xdata
cmp eax 0x30
je r-xdata
test ebx 0x40000
je r-xdata
or ecx 0x80000000
mov eax ebx
shr eax 0x7
not eax
and eax edi
mov [ ebp - 0x224 ] 0xc
mov [ ebp - 0x220 ] ecx
mov [ ebp - 0x21c ] eax
test ebx 0x1000
je r-xdata
push 0x2
pop edx
jmp r-xdata
cmp eax 0x40
je r-xdata
test ebx 0x80000
je r-xdata
or ecx 0x10000000
push 0x0
push ecx
push eax
lea eax [ ebp - 0x224 ]
push eax
push edx
push [ ebp - 0x214 ]
push [ ebp - 0x210 ]
call [ CreateFileW@IAT ]
cmp eax 0xffffffff
jne r-xdata
or ecx 0x8000000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] edi
mov eax edi
jmp r-xdata
push [ ebp - 0x210 ]
push [ ebp - 0x218 ]
call sub_41870e
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn 0xc
sub_418b32
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
lea eax [ ebp - 0x8 ]
push eax
push [ ebp + 0x8 ]
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
je r-xdata
leave
retn 0x4
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x8 ]
push eax
call [ FileTimeToSystemTime@IAT ]
neg eax
sbb eax eax
neg eax
sub_418b63
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
cmp [ ebp + 0x8 ] 0x76c
push esi
mov esi ecx
jge r-xdata
push ebx
mov ebx [ ebp + 0xc ]
lea eax [ ebx - 0x1 ]
push edi
cmp eax 0xb
ja r-xdata
push 0x80004005
mov edx [ ebp + 0x10 ]
lea eax [ edx - 0x1 ]
cmp eax 0x1e
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp edi 0x17
ja r-xdata
mov ecx [ ebp + 0x18 ]
cmp ecx 0x3b
ja r-xdata
mov eax [ ebp + 0x1c ]
cmp eax 0x3b
ja r-xdata
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xfffff894
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
dec ebx
push eax
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x14 ] ebx
call sub_41bd90
pop ecx
mov [ esi ] eax
and eax edx
pop edi
mov [ esi + 0x4 ] edx
pop ebx
cmp eax 0xffffffff
jne r-xdata
mov eax esi
pop esi
leave
retn 0x1c
push 0x80070057
jmp r-xdata
call sub_401fa0
sub_418bf8
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
movzx ecx [ eax ]
mov edx 0x76c
cmp cx dx
jae r-xdata
push [ ebp + 0xc ]
movzx edx [ eax + 0xc ]
push edx
movzx edx [ eax + 0xa ]
push edx
movzx edx [ eax + 0x8 ]
push edx
movzx edx [ eax + 0x6 ]
movzx eax [ eax + 0x2 ]
push edx
push eax
movzx eax cx
push eax
lea ecx [ ebp - 0x8 ]
call sub_418b63
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
jmp r-xdata
mov eax esi
pop esi
leave
retn 0x8
sub_418c55
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
lea eax [ ebp - 0x10 ]
push eax
push [ ebp + 0x8 ]
mov esi ecx
call [ FileTimeToLocalFileTime@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call [ FileTimeToSystemTime@IAT ]
test eax eax
je r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
push 0x80070057
call sub_401fa0
push [ ebp + 0xc ]
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x8 ]
call sub_418bf8
mov eax [ ebp - 0x8 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov eax esi
pop esi
leave
retn 0x8
sub_418cb5
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
push esi
mov esi [ ebp + 0x8 ]
push edi
push 0x22c
push 0x0
push esi
mov edi ecx
call sub_41ae80
push 0xffffffff
push [ edi + 0xc ]
lea eax [ esi + 0x22 ]
push 0x104
push eax
call sub_40a148
mov eax [ edi + 0x4 ]
add esp 0x1c
cmp eax [ r--data ]
je r-xdata
xor eax eax
inc eax
lea ecx [ ebp - 0x20 ]
push ecx
lea ecx [ ebp - 0x18 ]
push ecx
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call [ GetFileTime@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
push [ edi + 0x4 ]
call [ GetFileSizeEx@IAT ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ esi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ esi + 0x1c ] eax
mov edi [ edi + 0xc ]
cmp [ edi - 0xc ] 0x0
jne r-xdata
pop edi
pop esi
leave
retn 0x4
push edi
call [ GetFileAttributesW@IAT ]
cmp eax 0xffffffff
sete cl
dec cl
and cl al
mov [ esi + 0x20 ] cl
mov [ esi + 0x20 ] 0x0
jmp r-xdata
and [ esi ] 0x0
and [ esi + 0x4 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_418c55
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
call sub_418b32
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x10 ] eax
mov [ esi + 0x14 ] ecx
push 0xffffffff
lea eax [ ebp - 0x18 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_418c55
mov ecx [ eax ]
mov [ esi + 0x10 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x14 ] eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
call sub_418b32
test eax eax
je r-xdata
xor eax eax
xor ecx ecx
mov [ esi + 0x8 ] eax
mov [ esi + 0xc ] ecx
push 0xffffffff
lea eax [ ebp - 0x20 ]
push eax
lea ecx [ ebp - 0x28 ]
call sub_418c55
mov ecx [ eax ]
mov [ esi + 0x8 ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0xc ] eax
jmp r-xdata
lea eax [ ebp - 0x20 ]
push eax
call sub_418b32
test eax eax
je r-xdata
mov eax [ esi + 0x10 ]
or eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x4 ] eax
mov eax [ esi ]
or eax [ esi + 0x4 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ esi + 0x10 ] eax
mov eax [ esi + 0xc ]
mov [ esi + 0x14 ] eax
sub_418e15
push 0x238
mov eax sub_42b0cc
call sub_41a9a2
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x240 ] esi
lea eax [ ebp - 0x23c ]
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x244 ] edi
mov [ ebp - 0x23c ] esi
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x234 ] esi
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x228 ] esi
call sub_418cb5
mov ecx edi
call sub_401ff0
mov eax 0x100
push eax
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x240 ] 0x1
call sub_401d10
push eax
lea eax [ ebp - 0x21a ]
push eax
call sub_412ab9
push 0xffffffff
mov ecx edi
call sub_40a54d
mov eax edi
call sub_41aa25
retn 0x4
sub_418eaa
push 0x238
mov eax sub_42b0cc
call sub_41a9a2
mov edi [ ebp + 0x8 ]
xor esi esi
mov [ ebp - 0x240 ] esi
lea eax [ ebp - 0x23c ]
push eax
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x244 ] edi
mov [ ebp - 0x23c ] esi
mov [ ebp - 0x238 ] esi
mov [ ebp - 0x234 ] esi
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x22c ] esi
mov [ ebp - 0x228 ] esi
call sub_418cb5
mov ecx edi
call sub_401ff0
mov eax 0x100
push eax
push eax
mov ecx edi
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x240 ] 0x1
call sub_401d10
push eax
lea eax [ ebp - 0x21a ]
push eax
call sub_418416
push 0xffffffff
mov ecx edi
call sub_40a54d
mov eax edi
call sub_41aa25
retn 0x4
sub_418f3f
mov edi edi
push ebp
mov ebp esp
sub esp 0x234
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
xor eax eax
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x22c ] eax
mov [ ebp - 0x228 ] eax
mov [ ebp - 0x224 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x230 ]
push eax
call sub_418cb5
lea eax [ ebp - 0x20e ]
push eax
mov ecx esi
call sub_401ee0
mov ecx [ ebp - 0x4 ]
mov eax esi
xor ecx ebp
pop esi
call sub_419730
leave
retn 0x4
sub_418faf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx 0x10b
cmp eax ecx
ja r-xdata
sub eax 0x3e3
je r-xdata
je r-xdata
push 0xa
dec eax
je r-xdata
push 0x3
jmp r-xdata
cmp eax 0x3e
ja r-xdata
dec eax
je r-xdata
pop eax
cmp eax 0x6b
ja r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
mov ecx 0x90
cmp eax ecx
ja r-xdata
je r-xdata
push 0x8
jmp r-xdata
cmp eax 0x19
ja r-xdata
push 0x5
jmp r-xdata
xor eax eax
inc eax
jmp r-xdata
mov ecx 0xb6
cmp eax ecx
ja r-xdata
je r-xdata
push 0x2
jmp r-xdata
cmp eax 0x47
ja r-xdata
cmp eax 0x27
ja r-xdata
je r-xdata
pop ebp
retn 0x4
sub eax 0xb7
je r-xdata
je r-xdata
cmp eax 0x75
ja r-xdata
sub eax 0x50
je r-xdata
je r-xdata
add eax 0xffffffcc
cmp eax 0x8
ja r-xdata
je r-xdata
push 0x9
jmp r-xdata
cmp eax 0x18
ja r-xdata
sub eax 0x8
je r-xdata
push 0x6
jmp r-xdata
sub eax 0x91
je r-xdata
sub eax 0x7b
je r-xdata
je r-xdata
dec eax
dec eax
je r-xdata
sub eax 0x40
je r-xdata
jmp [ eax * 4 + jump_table_419223 ]
push 0xd
jmp r-xdata
cmp eax 0x20
ja r-xdata
jmp [ eax * 4 + jump_table_4191bf ]
dec eax
dec eax
je r-xdata
push 0x7
jmp r-xdata
sub eax 0x9
je r-xdata
dec eax
je r-xdata
sub eax 0x6c
je r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
sub eax 0x21
je r-xdata
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
jmp r-xdata
sub eax 0xd
je r-xdata
sub eax 0x7
je r-xdata
dec eax
je r-xdata
push 0xc
jmp r-xdata
sub eax 0x3
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
push 0xb
jmp r-xdata
sub eax 0x1a
je r-xdata
jmp r-xdata
sub eax 0x6
je r-xdata
sub eax 0x6
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
je r-xdata
dec eax
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
sub eax 0x3
jne r-xdata
jmp r-xdata
dec eax
je r-xdata
dec eax
je r-xdata
dec eax
dec eax
jne r-xdata
dec eax
dec eax
je r-xdata
dec eax
jne r-xdata
dec eax
jne r-xdata
push 0xe
jmp r-xdata
sub_41924d
push 0x4
mov eax sub_42b104
call sub_41a939
mov edi ecx
xor esi esi
cmp [ ebp + 0x8 ] esi
je r-xdata
xor eax eax
cmp [ ebp + 0xc ] esi
je r-xdata
mov eax [ ebp + 0x10 ]
mov ebx 0xf1a0
cmp eax esi
je r-xdata
lea ecx [ ebp - 0x10 ]
call sub_401ff0
lea eax [ edi + 0x10 ]
push eax
lea ecx [ ebp + 0x10 ]
mov [ ebp - 0x4 ] esi
call sub_402760
mov esi [ ebp + 0x10 ]
cmp [ esi - 0xc ] 0x0
mov [ ebp - 0x4 ] 0x1
jne r-xdata
mov ecx [ edi + 0x8 ]
add ecx ebx
mov [ eax ] ecx
mov eax [ edi + 0x8 ]
push esi
add eax ebx
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_4179fd
push 0xffffffff
push [ ebp - 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40a148
add esp 0x10
lea ecx [ esi - 0x10 ]
call sub_402020
mov ecx [ ebp - 0x10 ]
add ecx 0xfffffff0
call sub_402020
xor eax eax
inc eax
jmp r-xdata
push 0xf006
lea ecx [ ebp + 0x10 ]
call sub_401b60
mov esi [ ebp + 0x10 ]
call sub_41aa11
retn 0xc
sub_4192fb
push 0x8
mov eax sub_42acd3
call sub_41a939
push 0x14
call sub_409958
pop ecx
mov ecx eax
mov [ ebp - 0x14 ] ecx
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ecx eax
je r-xdata
or [ ebp - 0x4 ] 0xffffffff
mov [ ebp - 0x10 ] eax
push r--data
lea eax [ ebp - 0x10 ]
push eax
call sub_41ad31
int3
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4188fe
sub_419341
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x8 ]
call sub_418faf
push eax
call sub_4192fb
sub_419391
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
xor ebx ebx
cmp edi ebx
mov esi ecx
jge r-xdata
mov eax [ ebp + 0xc ]
cmp eax ebx
jl r-xdata
call sub_40a39e
cmp edi ebx
jne r-xdata
mov [ esi + 0x10 ] eax
mov ecx [ esi + 0x4 ]
cmp ecx ebx
jne r-xdata
push [ esi + 0x4 ]
call sub_409992
pop ecx
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] ebx
jmp r-xdata
mov ebx [ esi + 0xc ]
cmp edi ebx
jg r-xdata
cmp edi 0xffffffff
ja r-xdata
mov [ esi + 0x4 ] ebx
mov eax [ esi + 0x10 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
cmp edi eax
jle r-xdata
push edi
call sub_409958
push edi
push ebx
push eax
mov [ esi + 0x4 ] eax
call sub_41ae80
add esp 0x10
mov [ esi + 0xc ] edi
jmp r-xdata
add eax ebx
cmp edi eax
mov [ ebp + 0x8 ] eax
jl r-xdata
mov eax [ esi + 0x8 ]
cdq
and edx 0x7
add eax edx
sar eax 0x3
cmp eax 0x4
jl r-xdata
mov [ esi + 0x8 ] edi
jmp r-xdata
mov edx edi
sub edx eax
push edx
add eax ecx
push 0x0
push eax
call sub_41ae80
add esp 0xc
cmp [ ebp + 0x8 ] ebx
jl r-xdata
mov [ ebp + 0x8 ] edi
push 0x4
pop eax
mov ecx 0x400
cmp eax ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0x8 ]
call sub_409958
push [ esi + 0x8 ]
mov ebx eax
push [ esi + 0x4 ]
push [ ebp + 0x8 ]
push ebx
call sub_401840
mov eax [ esi + 0x8 ]
mov ecx edi
sub ecx eax
push ecx
add eax ebx
push 0x0
push eax
call sub_41ae80
push [ esi + 0x4 ]
call sub_409992
mov eax [ ebp + 0x8 ]
add esp 0x24
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] eax
cmp eax 0x4
jge r-xdata
mov eax ecx
jmp r-xdata
sub_4194a3
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x18 ]
not eax
push edi
test al 0x1
je r-xdata
call sub_4105c1
push 0xffffffff
push eax
mov ecx esi
call sub_419391
mov edi [ esi + 0x8 ]
mov esi [ esi + 0x4 ]
test edi edi
jbe r-xdata
push [ esi + 0x8 ]
call sub_410590
mov edi [ esi + 0x8 ]
mov ebx [ esi + 0x4 ]
test edi edi
jbe r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov ebx 0x7fffffff
cmp edi ebx
jae r-xdata
mov esi 0x7fffffff
cmp edi esi
jae r-xdata
mov ecx [ ebp + 0x8 ]
push ebx
push esi
call sub_401810
add esi ebx
sub edi ebx
jne r-xdata
mov ebx edi
mov ecx [ ebp + 0x8 ]
push esi
push ebx
call sub_4104c9
add ebx esi
sub edi esi
jne r-xdata
mov esi edi
jmp r-xdata
sub_419539
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419381
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41955a
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
call sub_40a39e
cmp [ ebp + 0x10 ] 0x0
je r-xdata
imul eax [ ebp + 0x10 ]
add eax 0x4
push eax
call sub_409958
pop ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ecx ]
mov [ eax ] edx
mov [ ecx ] eax
pop ebp
retn 0xc
sub_4195a3
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jae r-xdata
mov edx [ ebp + 0xc ]
cmp edx 0x1
ja r-xdata
push 0x4
pop ecx
and [ eax + 0xc ] 0x0
and [ eax + 0x8 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
pop ebp
retn 0x8
push 0x40
pop edx
sub_4195ed
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax ]
mov [ esi + 0xc ] ecx
pop esi
retn
push [ esi ]
lea eax [ esi + 0x8 ]
push [ esi + 0x4 ]
push eax
call sub_41955a
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add eax 0x4
dec ecx
imul edx ecx
add eax edx
jmp r-xdata
test ecx ecx
jge r-xdata
mov edx [ esi + 0xc ]
mov [ eax ] edx
mov [ esi + 0xc ] eax
dec ecx
sub eax [ esi ]
sub_41968e
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov eax [ ebx + 0x18 ]
push esi
not eax
mov esi ecx
push edi
mov ecx ebx
test al 0x1
je r-xdata
call sub_4105c1
push 0xffffffff
push eax
mov ecx esi
call sub_414a00
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
push [ esi + 0x8 ]
call sub_410590
xor edi edi
cmp [ esi + 0x8 ] edi
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
lea eax [ eax + edi * 4 ]
push eax
push ebx
call sub_41964c
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
mov eax [ esi + 0x4 ]
push [ eax + edi * 4 ]
push ebx
call sub_419635
inc edi
cmp edi [ esi + 0x8 ]
jl r-xdata
jmp r-xdata
sub_41970f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_41967e
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_41973f
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x14 ]
push edi
xor edi edi
cmp esi edi
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
pop edi
pop esi
pop ebp
retn
push [ ebp + 0xc ]
push edi
push [ ebp + 0x8 ]
call sub_41ae80
add esp 0xc
cmp [ ebp + 0x10 ] edi
je r-xdata
cmp [ ebp + 0xc ] esi
jb r-xdata
cmp [ ebp + 0xc ] esi
jae r-xdata
push esi
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41c1d0
add esp 0xc
jmp r-xdata
push 0x16
pop eax
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_4197bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
push esi
push edi
xor edi edi
cmp eax edi
je r-xdata
xor eax eax
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
cmp [ ebp + 0xc ] eax
jae r-xdata
pop edi
pop esi
pop ebp
retn
push eax
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_41c6a0
add esp 0xc
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_419819
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi [ ebp + 0x10 ]
cmp edi ebx
je r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov [ ebp - 0x14 ] 0x42
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
cmp edi 0x3fffffff
jbe r-xdata
cmp esi ebx
jne r-xdata
pop ebx
leave
retn
lea eax [ edi + edi ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop edi
pop esi
cmp eax ebx
jl r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push eax
call [ ebp + 0x8 ]
add esp 0x10
mov [ ebp + 0x14 ] eax
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp - 0x1c ] ebx
mov [ esi + edi * 2 - 0x2 ] ax
setge al
dec eax
dec eax
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41ca05
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
inc [ ebp - 0x20 ]
jmp r-xdata
dec [ ebp - 0x1c ]
js r-xdata
lea eax [ ebp - 0x20 ]
push eax
push ebx
call sub_41ca05
pop ecx
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ eax ] bl
jmp r-xdata
mov eax [ ebp + 0x14 ]
jmp r-xdata
sub_419911
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
push edi
mov edi [ ebp + 0x8 ]
cmp edi esi
je r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x16
jmp r-xdata
cmp [ ebp + 0xc ] esi
ja r-xdata
pop esi
pop ebp
retn
push esi
push esi
push esi
push esi
push esi
call sub_41c66c
add esp 0x14
or eax 0xffffffff
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push edi
push sub_41d7a9
call sub_419819
add esp 0x18
cmp eax esi
jge r-xdata
cmp eax 0xfffffffe
jne r-xdata
xor ecx ecx
mov [ edi ] cx
pop edi
call sub_41adfe
mov [ eax ] 0x22
sub_4199b9
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x14 ] ebx
jne r-xdata
push esi
mov esi [ ebp + 0x8 ]
push edi
cmp [ ebp + 0x10 ] ebx
jne r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
pop ebx
pop ebp
retn
call sub_41adfe
mov [ eax ] 0x16
jmp r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
call sub_41adfe
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
cmp edi [ ebp + 0x10 ]
jbe r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax ]
push edi
push esi
push sub_41d7a9
call sub_419819
xor ecx ecx
add esp 0x18
mov [ esi + edi * 2 - 0x2 ] cx
cmp eax 0xfffffffe
jne r-xdata
mov edi [ eax ]
mov eax [ ebp + 0x10 ]
inc eax
push eax
push esi
push sub_41d7a9
call sub_419819
add esp 0x18
cmp eax 0xfffffffe
jne r-xdata
pop edi
pop esi
xor ebx ebx
cmp [ ebp + 0x10 ] 0xffffffff
jne r-xdata
cmp eax ebx
jge r-xdata
call sub_41adfe
cmp [ eax ] 0x22
jne r-xdata
jmp r-xdata
xor ebx ebx
call sub_41adfe
cmp [ eax ] 0x22
jne r-xdata
or eax 0xffffffff
call sub_41adfe
mov [ eax ] edi
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
cmp eax 0xfffffffe
jne r-xdata
call sub_41adfe
mov [ eax ] 0x22
call sub_41adfe
mov [ eax ] ebx
jmp r-xdata
sub_419ac5
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
push esi
xor esi esi
cmp [ ebp + 0xc ] esi
jne r-xdata
push [ ebp + 0x14 ]
lea eax [ ebp - 0x20 ]
push [ ebp + 0x10 ]
mov [ ebp - 0x1c ] 0x7fffffff
push [ ebp + 0xc ]
mov [ ebp - 0x14 ] 0x42
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x20 ] esi
call [ ebp + 0x8 ]
add esp 0x10
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
leave
retn
sub_419b38
push 0xc
push r--data
call sub_41aefc
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_41e349
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_41e461
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_41e349
add eax ebx
push eax
call sub_41e4fe
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_41e349
add eax ebx
push eax
call sub_41cbbf
mov [ ebp - 0x1c ] eax
call sub_41e349
add eax ebx
push eax
push edi
call sub_41e59a
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419bd4
mov eax [ ebp - 0x1c ]
call sub_41adfe
mov [ eax ] 0x16
push esi
push esi
push esi
push esi
push esi
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_41af41
retn
sub_419be7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_41f29d
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_41ef60
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_41e7f4
mov [ esi + 0x4 ] eax
sub_419c6e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov ebx [ ebp + 0x8 ]
xor esi esi
cmp ebx esi
jne r-xdata
push edi
mov edi [ ebp + 0xc ]
cmp edi esi
jne r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] esi
jne r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx eax [ ebx ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_41f573
movzx esi ax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
inc ebx
push eax
inc ebx
call sub_41f573
add esp 0x10
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
movzx eax [ ebx ]
cmp ax 0x41
jb r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
pop ebx
leave
retn
movzx ecx ax
movzx eax si
sub eax ecx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp si ax
je r-xdata
movzx esi ax
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
pop edi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
inc ebx
inc ebx
inc edi
inc edi
movzx eax ax
test si si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
cmp si ax
je r-xdata
add eax 0x20
jmp r-xdata
sub_419d7f
mov edi edi
push ebp
mov ebp esp
push esi
xor esi esi
push edi
cmp [ rw-data ] esi
jne r-xdata
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419c6e
add esp 0xc
mov edi [ ebp + 0x8 ]
cmp edi esi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx esi
je r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
mov eax 0x7fffffff
jmp r-xdata
movzx eax [ edi ]
cmp ax 0x41
jb r-xdata
pop edi
pop esi
pop ebp
retn
movzx ecx ax
movzx eax [ edx ]
cmp ax 0x41
jb r-xdata
cmp ax 0x5a
ja r-xdata
inc edi
inc edi
inc edx
inc edx
movzx eax ax
cmp cx si
je r-xdata
cmp ax 0x5a
ja r-xdata
add eax 0x20
movzx edx ax
movzx eax cx
sub eax edx
jmp r-xdata
cmp cx ax
je r-xdata
add eax 0x20
sub_419e22
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_419e12
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_419e43
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_41f6a0
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_419e63
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_419e82
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
push [ rw-data ]
call sub_41f051
push [ rw-data ]
mov edi eax
mov [ ebp - 0x4 ] edi
call sub_41f051
mov esi eax
pop ecx
pop ecx
cmp esi edi
jb r-xdata
xor eax eax
mov ebx esi
sub ebx edi
lea eax [ ebx + 0x4 ]
cmp eax 0x4
jb r-xdata
push edi
call sub_41ba09
mov edi eax
lea eax [ ebx + 0x4 ]
pop ecx
cmp edi eax
jae r-xdata
push [ ebp + 0x8 ]
call sub_41efd6
mov [ esi ] eax
add esi 0x4
push esi
call sub_41efd6
pop ecx
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
pop ecx
jmp r-xdata
mov eax 0x800
cmp edi eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax edi
cmp eax edi
jb r-xdata
mov eax edi
lea eax [ edi + 0x10 ]
cmp eax edi
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41f7b9
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_41f7b9
pop ecx
pop ecx
test eax eax
je r-xdata
sar ebx 0x2
push eax
lea esi [ eax + ebx * 4 ]
call sub_41efd6
pop ecx
mov [ rw-data ] eax
sub_419f3c
mov edi edi
push esi
push 0x4
push 0x20
call sub_41f76d
mov esi eax
push esi
call sub_41efd6
add esp 0xc
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_419f6d
push 0xc
push r--data
call sub_41aefc
call sub_41b1bf
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_419e82
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_419fa3
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_419ff4
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
mov eax esi
sub_41a063
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0xc ]
cmp [ ebx ] 0x0
push edi
mov edi eax
je r-xdata
pop edi
pop ebx
pop ebp
retn
movzx ecx [ eax ]
test cx cx
je r-xdata
xor eax eax
movzx edx cx
sub eax ebx
cmp [ ecx ] 0x0
je r-xdata
movzx edx [ ecx ]
test dx dx
je r-xdata
mov eax edi
jmp r-xdata
inc edi
inc edi
movzx edx [ edi ]
inc eax
inc eax
test dx dx
jne r-xdata
movzx ebx [ eax + ecx ]
movzx edx dx
sub ebx edx
jne r-xdata
mov ecx [ ebp + 0xc ]
test dx dx
je r-xdata
inc ecx
inc ecx
cmp [ eax + ecx ] bx
jne r-xdata
sub_41a0c4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov dx [ ebp + 0xc ]
jmp r-xdata
movzx ecx [ eax ]
test cx cx
jne r-xdata
cmp cx dx
je r-xdata
cmp [ eax ] dx
je r-xdata
pop ebp
retn
inc eax
inc eax
xor eax eax
sub_41a0ea
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov edx eax
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
mov cx [ ebp + 0xc ]
cmp [ eax ] cx
je r-xdata
cmp [ eax ] cx
jne r-xdata
pop ebp
retn
xor eax eax
dec eax
dec eax
cmp eax edx
je r-xdata
sub_41a116
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41a174
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0xc ] eax
jbe r-xdata
pop ebp
retn
mov ecx [ ebp + 0x8 ]
inc eax
inc ecx
cmp eax [ ebp + 0xc ]
jb r-xdata
cmp [ ecx ] 0x0
je r-xdata
sub_41a191
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
push esi
push edi
xor edi edi
cmp edx edi
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
mov esi [ ebp + 0x10 ]
cmp esi edi
jne r-xdata
mov ecx edx
xor eax eax
mov [ edx ] ax
jmp r-xdata
cmp ebx edi
je r-xdata
inc ecx
inc ecx
dec ebx
jne r-xdata
movzx eax [ esi ]
mov [ ecx ] ax
inc ecx
inc ecx
inc esi
inc esi
cmp ax di
je r-xdata
cmp [ ecx ] di
je r-xdata
xor eax eax
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov [ edx ] ax
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
mov eax esi
sub_41a237
push 0x14
push r--data
call sub_41aefc
mov eax 0x5a4d
cmp [ __dos_header ] ax
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
call sub_41f3e6
test eax eax
jne r-xdata
push 0x1c
call sub_41a20e
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_42027b
and [ ebp - 0x4 ] 0x0
call sub_420027
test eax eax
jge r-xdata
push 0x10
call sub_41a20e
cmp [ eax + r--data ] 0xe
jbe r-xdata
call GetCommandLineW
mov [ rw-data ] eax
call sub_41ffca
mov [ rw-data ] eax
call sub_41ff1c
test eax eax
jge r-xdata
push 0x1b
call sub_41b153
pop ecx
xor ecx ecx
cmp [ eax + r--data ] ecx
setne cl
mov [ ebp - 0x1c ] ecx
jmp r-xdata
call sub_41fced
test eax eax
jge r-xdata
push 0x8
call sub_41b153
pop ecx
push 0x1
call sub_4202c7
pop ecx
test eax eax
jne r-xdata
push 0x1
call sub_41b212
pop ecx
test eax eax
je r-xdata
push 0x9
call sub_41b153
pop ecx
mov eax [ rw-data ]
mov [ rw-data ] eax
push eax
push [ rw-data ]
push [ rw-data ]
call sub_403090
add esp 0xc
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push eax
call sub_41b153
pop ecx
call sub_41b3ef
jmp r-xdata
push eax
call sub_41b3c3
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_41af41
retn
sub_41a392
push 0xc
push r--data
call sub_41aefc
and [ ebp - 0x1c ] 0x0
mov esi [ ebp + 0x8 ]
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
push 0x4
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_420d1b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a3d8
sub_41a3e1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
cmp esi 0xffffffe0
ja r-xdata
push esi
call sub_42100f
pop ecx
call sub_41adfe
mov [ eax ] 0xc
xor eax eax
push ebx
push edi
mov edi [ HeapAlloc@IAT ]
mov eax [ rw-data ]
cmp eax 0x1
jne r-xdata
call sub_41fb54
push 0x1e
call sub_41f9a9
push 0xff
call sub_41b1a7
cmp eax 0x3
jne r-xdata
test esi esi
je r-xdata
test esi esi
jne r-xdata
push esi
call sub_41a392
pop ecx
test eax eax
jne r-xdata
xor eax eax
inc eax
mov eax esi
jmp r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
inc esi
mov ebx eax
test ebx ebx
jne r-xdata
push 0x0
push [ rw-data ]
call edi
push eax
jmp r-xdata
pop edi
mov eax ebx
pop ebx
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
pop esi
pop ebp
retn
call sub_41adfe
mov [ eax ] esi
push [ ebp + 0x8 ]
call sub_42100f
pop ecx
test eax eax
je r-xdata
call sub_41adfe
mov [ eax ] esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
sub_41a4ab
push 0xc
push r--data
call sub_41aefc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41af41
retn
cmp [ rw-data ] 0x3
jne r-xdata
push esi
push 0x4
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_42053c
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
call sub_41adfe
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41adbc
mov [ esi ] eax
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41a501
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
push esi
push eax
call sub_42056c
pop ecx
pop ecx
push [ ebp + 0x8 ]
jmp r-xdata
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
sub_41a539
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
inc eax
inc eax
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_41a553
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_41a58c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_41a5e0
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_421c0a
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_41a616
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_419730
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_421c0a
add esp 0x20
pop esi
pop ebp
retn
sub_41a649
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_41a720
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_41f29d
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_41a720
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_419730
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_421c0a
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_41a649
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_41a58c
pop ebx
leave
retn
sub_41a7bf
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp - 0x4 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax ecx
mov ecx [ ebp + 0x10 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_421d3c
call sub_421d3c
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_41a834
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_41f29d
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_41f29d
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_41a860
mov edi edi
push ebp
mov ebp esp
call sub_41f29d
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_41a887
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41f29d
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_41f29d
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_41f29d
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_421d3c
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_41a8d9
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_41a616
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_421d90
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_41a939
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a96c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a9a2
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] eax
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41a9d8
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_41aa43
push 0x10
push r--data
call sub_41aefc
mov ebx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_41a3e1
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
push ebx
call sub_41a4ab
pop ecx
jmp r-xdata
call sub_41af41
retn
cmp esi 0xffffffe0
jbe r-xdata
xor edi edi
mov [ ebp - 0x1c ] edi
cmp esi 0xffffffe0
ja r-xdata
xor eax eax
test esi esi
jne r-xdata
push esi
call sub_42100f
pop ecx
call sub_41adfe
push 0x4
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_42053c
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ab87
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp esi [ rw-data ]
ja r-xdata
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
mov edi [ ebp - 0x1c ]
test esi esi
jne r-xdata
cmp [ ebp - 0x1c ] edi
jne r-xdata
push esi
push ebx
push eax
call sub_420a3a
add esp 0xc
test eax eax
je r-xdata
test edi edi
jne r-xdata
push esi
call sub_42100f
pop ecx
test eax eax
je r-xdata
cmp [ rw-data ] edi
je r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push ebx
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
jmp r-xdata
inc esi
cmp esi edi
jne r-xdata
push esi
call sub_420d1b
pop ecx
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
call sub_41adfe
call sub_41adfe
jmp r-xdata
test edi edi
jne r-xdata
push esi
call sub_42100f
pop ecx
test eax eax
jne r-xdata
test edi edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
push esi
push edi
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
je r-xdata
xor esi esi
inc esi
mov [ ebp + 0xc ] esi
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41adbc
pop ecx
mov [ esi ] eax
jmp r-xdata
call sub_41adfe
cmp [ ebp - 0x20 ] edi
je r-xdata
call sub_41adfe
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov eax [ ebx - 0x4 ]
dec eax
cmp eax esi
jb r-xdata
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41c1d0
push ebx
call sub_42053c
mov [ ebp - 0x20 ] eax
push ebx
push eax
call sub_42056c
add esp 0x18
mov eax esi
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41adbc
mov [ esi ] eax
pop ecx
mov [ eax ] 0xc
jmp r-xdata
mov [ eax ] 0xc
push eax
push ebx
push [ ebp - 0x1c ]
call sub_41c1d0
push ebx
push [ ebp - 0x20 ]
call sub_42056c
add esp 0x14
mov eax esi
sub_41ac5e
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
cmp [ ebp + 0x14 ] edi
jne r-xdata
cmp esi edi
je r-xdata
cmp esi edi
jne r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov ebx [ ebp + 0xc ]
cmp ebx edi
ja r-xdata
cmp [ ebp + 0xc ] edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] edi
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx edi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
xor eax eax
mov [ esi ] ax
jmp r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
movzx ecx [ edx ]
mov [ eax ] cx
inc eax
inc eax
inc edx
inc edx
cmp cx di
je r-xdata
cmp [ ebp + 0x14 ] edi
jne r-xdata
dec ebx
je r-xdata
cmp ebx edi
jne r-xdata
dec ebx
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec [ ebp + 0x14 ]
jne r-xdata
xor eax eax
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] ax
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ esi + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_41ad31
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_41ad7d
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x14 ]
push eax
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419911
add esp 0x14
pop ebp
retn
sub_41ad9b
mov edi edi
push ebp
mov ebp esp
lea eax [ ebp + 0x18 ]
push eax
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4199b9
add esp 0x18
pop ebp
retn
sub_41adbc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_41ae24
mov edi edi
push ebp
mov ebp esp
push esi
call sub_41ae11
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_41adbc
pop ecx
mov esi eax
call sub_41adfe
mov [ eax ] esi
pop esi
pop ebp
retn
sub_41ae47
push [ rw-data ]
call sub_41f051
pop ecx
test eax eax
je r-xdata
push 0x19
call sub_41f9a9
push 0x1
push 0x0
call sub_421ef3
add esp 0xc
jmp sub_421ddc
call eax
sub_41ae80
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x100
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_421f7a
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_41aefc
push sub_41af60
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41af60
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_419730
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_419730
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_422204
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_4221ba
mov [ ebp - 0x1 ] 0x1
test eax eax
jl r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_419730
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_419730
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
call sub_4221ea
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_422204
mov eax [ ebp + 0xc ]
push r--data
call sub_4222b0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_419730
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_4221d1
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_419730
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_41b0ec
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
mov esi [ ebp + 0xc ]
push edi
jmp r-xdata
movzx ecx [ esi ]
movzx eax [ edx ]
movzx edi cx
sub eax edi
je r-xdata
test cx cx
je r-xdata
pop edi
pop esi
test eax eax
jge r-xdata
inc edx
inc edx
inc esi
inc esi
jle r-xdata
or eax 0xffffffff
pop ebp
retn
pop ebp
retn
xor eax eax
inc eax
sub_41b123
mov edi edi
push ebp
mov ebp esp
push edi
mov edi 0x3e8
pop edi
pop ebp
retn
test eax eax
je r-xdata
push edi
call [ Sleep@IAT ]
push [ ebp + 0x8 ]
call [ GetModuleHandleW@IAT ]
add edi 0x3e8
cmp edi 0xea60
ja r-xdata
sub_41b153
mov edi edi
push ebp
mov ebp esp
call sub_41fb54
push [ ebp + 0x8 ]
call sub_41f9a9
push [ rw-data ]
call sub_41f051
push 0xff
call eax
add esp 0xc
pop ebp
retn
sub_41b17c
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_41b1d1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jb r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebp
retn
add esi 0x4
call eax
sub_41b1ee
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_41b212
mov edi edi
push ebp
mov ebp esp
cmp [ r--data ] 0x0
je r-xdata
call sub_42236d
push r--data
push r--data
call sub_41b1ee
pop ecx
pop ecx
test eax eax
jne r-xdata
push r--data
call sub_4222b0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push sub_4202a1
call sub_419fa9
mov eax r--data
mov [ esp ] r--data
call sub_41b1d1
cmp [ rw-data ] 0x0
pop ecx
je r-xdata
push [ ebp + 0x8 ]
call [ r--data ]
pop ecx
xor eax eax
push rw-data
call sub_4222b0
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_41b297
push 0x18
push r--data
call sub_41aefc
push 0x8
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
xor ebx ebx
inc ebx
cmp [ rw-data ] ebx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b3ae
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_41af41
retn
mov [ rw-data ] ebx
push 0x8
call sub_42042f
pop ecx
push [ ebp + 0x8 ]
call sub_41b1a7
push r--data
mov eax r--data
call sub_41b1d1
pop ecx
push [ rw-data ]
call sub_41f051
pop ecx
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
je r-xdata
push r--data
mov eax r--data
call sub_41b1d1
pop ecx
push [ rw-data ]
call sub_41f051
pop ecx
mov esi eax
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x20 ] esi
call sub_41f048
cmp [ esi ] eax
je r-xdata
sub esi 0x4
mov [ ebp - 0x24 ] esi
cmp esi edi
jb r-xdata
cmp esi edi
jb r-xdata
push [ esi ]
call sub_41f051
mov edi eax
call sub_41f048
mov [ esi ] eax
call edi
push [ rw-data ]
call sub_41f051
mov edi eax
push [ rw-data ]
call sub_41f051
add esp 0xc
cmp [ ebp - 0x1c ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x20 ] eax
mov esi eax
mov [ ebp - 0x24 ] esi
cmp [ ebp - 0x20 ] eax
je r-xdata
mov edi [ ebp - 0x28 ]
jmp r-xdata
sub_41b40d
mov edi edi
push esi
call sub_41f048
mov esi eax
push esi
call sub_421000
push esi
call sub_4225af
push esi
call sub_41c535
push esi
call sub_421f14
push esi
call sub_4225a0
push esi
call sub_42238e
push esi
call sub_412d22
push esi
call sub_421d74
push sub_41b3d9
call sub_41efd6
add esp 0x24
mov [ rw-data ] eax
pop esi
retn
sub_41b45b
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_41a539
mov esi eax
inc esi
push 0x2
push esi
call sub_41c07f
mov edi eax
add esp 0xc
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_419ff4
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
pop edi
pop esi
sub_41b536
mov edi edi
push ebp
mov ebp esp
sub esp 0x54
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push 0x4
pop eax
call sub_41bab0
mov [ ebp - 0xc ] esp
push 0x1c
lea eax [ ebp - 0x30 ]
push eax
push [ ebp - 0xc ]
call [ VirtualQuery@IAT ]
test eax eax
je r-xdata
xor eax eax
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x54 ]
push eax
call [ GetSystemInfo@IAT ]
mov edi [ ebp - 0x50 ]
push r--data
xor esi esi
call [ GetModuleHandleW@IAT ]
cmp eax esi
je r-xdata
lea eax [ edi - 0x1 ]
lea ebx [ esi + edi - 0x1 ]
not eax
and ebx eax
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
cmp eax esi
je r-xdata
lea eax [ edi + edi ]
cmp ebx eax
jae r-xdata
add ebx edi
lea ecx [ ebp - 0x8 ]
push ecx
mov [ ebp - 0x8 ] esi
call eax
pop ecx
cmp eax 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
lea esi [ edi - 0x1 ]
not esi
and esi [ ebp - 0xc ]
add edi eax
sub esi ebx
cmp esi edi
jb r-xdata
mov ebx eax
cmp [ ebp - 0x8 ] esi
jbe r-xdata
push 0x4
push 0x1000
push ebx
push esi
call [ VirtualAlloc@IAT ]
test eax eax
je r-xdata
mov esi [ ebp - 0x8 ]
lea eax [ ebp - 0x14 ]
push eax
push 0x104
push ebx
push esi
call [ VirtualProtect@IAT ]
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
lea esp [ ebp - 0x60 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
sub_41b624
push sub_41af60
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
mov [ ebp - 0x1c ] eax
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_41b6b0
cmp [ rw-data ] 0x0
je r-xdata
push ebp
mov ebp esp
sub esp 0x20
and esp 0xfffffff0
fld st0
fst [ esp + 0x18 ]
fistp [ esp + 0x10 ]
fild [ esp + 0x10 ]
mov edx [ esp + 0x18 ]
mov eax [ esp + 0x10 ]
test eax eax
je r-xdata
push ebp
mov ebp esp
sub esp 0x8
and esp 0xfffffff8
fstp [ esp ]
cvttsd2si eax [ esp ]
leave
retn
mov edx [ esp + 0x14 ]
test edx 0x7fffffff
jne r-xdata
fsubp st1
test edx edx
jns r-xdata
fstp [ esp + 0x18 ]
fstp [ esp + 0x18 ]
fstp [ esp ]
mov ecx [ esp ]
add ecx 0x7fffffff
sbb eax 0x0
mov edx [ esp + 0x14 ]
sbb edx 0x0
jmp r-xdata
fstp [ esp ]
mov ecx [ esp ]
xor ecx 0x80000000
add ecx 0x7fffffff
adc eax 0x0
mov edx [ esp + 0x14 ]
adc edx 0x0
jmp r-xdata
leave
retn
sub_41b760
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_41b7a0
push edi
push esi
push ebx
xor edi edi
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov edx ebx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
dec edi
jne r-xdata
dec esi
cmp edx [ esp + 0x14 ]
ja r-xdata
pop ebx
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_41b84a
mov edi edi
push ebp
mov ebp esp
push ecx
or [ ebp - 0x4 ] 0xffffffff
cmp [ rw-data ] 0x0
jne r-xdata
call sub_41f048
mov ecx [ rw-data ]
cmp ecx eax
je r-xdata
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
xor eax eax
leave
retn
push 0x0
push 0x4
lea eax [ ebp - 0x4 ]
push eax
push 0x0
push [ rw-data ]
push ecx
call sub_41f051
pop ecx
call eax
test eax eax
je r-xdata
mov [ rw-data ] 0x1
push r--data
push eax
call [ GetProcAddress@IAT ]
push eax
call sub_41efd6
pop ecx
mov [ rw-data ] eax
cmp [ ebp - 0x4 ] 0x2
jne r-xdata
xor eax eax
inc eax
leave
retn
sub_41b8c9
push 0x10
push r--data
call sub_41aefc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
mov esi [ ebp + 0xc ]
cmp esi 0xffffffe0
jbe r-xdata
call sub_41adfe
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
cmp [ rw-data ] 0x3
jne r-xdata
call sub_41adfe
mov [ eax ] 0xc
jmp r-xdata
call sub_41af41
retn
cmp esi edi
jne r-xdata
push 0x4
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_42053c
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov edi eax
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
test eax eax
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41b9b8
cmp [ ebp - 0x20 ] edi
jne r-xdata
mov [ ebp - 0x1c ] edi
cmp esi [ rw-data ]
ja r-xdata
mov eax [ ebp - 0x1c ]
cmp edi 0x4000
ja r-xdata
cmp esi edi
jne r-xdata
push esi
push ebx
push eax
call sub_420a3a
add esp 0xc
test eax eax
je r-xdata
call sub_41adfe
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_41adbc
mov [ esi ] eax
pop ecx
cmp esi edi
ja r-xdata
add esi 0xf
and esi 0xfffffff0
push esi
push ebx
push 0x10
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov [ ebp - 0x1c ] eax
cmp eax edi
jne r-xdata
xor esi esi
inc esi
mov [ ebp - 0x1c ] ebx
call sub_41b84a
test eax eax
je r-xdata
mov [ ebp - 0x1c ] ebx
jmp r-xdata
sub_41ba09
push 0x10
push r--data
call sub_41aefc
xor eax eax
mov ebx [ ebp + 0x8 ]
xor edi edi
cmp ebx edi
setne al
cmp eax edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_41adfe
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
push [ rw-data ]
call [ HeapSize@IAT ]
mov esi eax
push 0x4
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
push ebx
call sub_42053c
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
call sub_41af41
retn
mov esi [ ebp - 0x1c ]
mov esi [ ebx - 0x4 ]
sub esi 0x9
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov eax esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41baa3
cmp [ ebp - 0x20 ] edi
jne r-xdata
sub_41bab0
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41badb
mov edi edi
push ebp
mov ebp esp
sub esp 0x48
push ebx
xor ebx ebx
push edi
mov edi eax
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
jne r-xdata
mov eax [ edi + 0x14 ]
cdq
mov ecx eax
mov eax edx
mov [ ebp - 0x14 ] ecx
add ecx 0xffffffbb
mov [ ebp - 0x10 ] eax
adc eax 0xffffffff
push esi
cmp eax ebx
ja r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_41adfe
or edx 0xffffffff
mov [ eax ] 0x16
mov eax edx
jb r-xdata
pop edi
pop ebx
leave
retn
mov eax [ edi + 0x10 ]
cmp eax ebx
jl r-xdata
cmp ecx 0x408
ja r-xdata
cdq
push 0xc
pop ecx
idiv ecx
mov ecx edx
cdq
add [ ebp - 0x14 ] eax
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] edx
cmp ecx ebx
jge r-xdata
cmp eax 0xb
jle r-xdata
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
add ecx 0xffffffbb
adc eax 0xffffffff
cmp eax ebx
ja r-xdata
add ecx 0xc
add [ ebp - 0x14 ] 0xffffffff
mov [ edi + 0x10 ] ecx
adc [ ebp - 0x10 ] 0xffffffff
mov esi [ edi + 0x10 ]
mov eax [ esi * 4 + rw-data ]
push ebx
push 0x4
push [ ebp - 0x10 ]
cdq
push [ ebp - 0x14 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] edx
call sub_423d10
or eax edx
mov ebx 0x190
jne r-xdata
jb r-xdata
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x10 ]
push 0x0
add eax 0x76c
push ebx
adc ecx 0x0
push ecx
push eax
call sub_423d10
or eax edx
jne r-xdata
push 0x0
push 0x64
push [ ebp - 0x10 ]
push [ ebp - 0x14 ]
call sub_423d10
or eax edx
jne r-xdata
cmp ecx 0x408
ja r-xdata
mov esi [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
push 0x0
pop ecx
sub esi 0x1
sbb eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
push ecx
add eax 0x12b
push ebx
adc edx ecx
push edx
push eax
mov [ ebp - 0x24 ] esi
call sub_41b7a0
mov ebx eax
mov eax edx
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
cdq
push 0x0
push 0x64
push [ ebp - 0x20 ]
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_41b7a0
push 0x0
push 0x4
push [ ebp - 0x20 ]
sub ebx eax
mov eax [ ebp - 0xc ]
sbb eax edx
push esi
mov [ ebp - 0xc ] eax
call sub_41b7a0
push 0x0
push 0x16d
push [ ebp - 0x10 ]
add ebx eax
mov eax [ ebp - 0xc ]
push [ ebp - 0x14 ]
adc eax edx
mov [ ebp - 0xc ] eax
call sub_41b760
add ebx eax
mov eax [ ebp - 0xc ]
adc eax edx
add ebx [ ebp - 0x1c ]
push 0x0
adc eax [ ebp - 0x18 ]
pop esi
push esi
sub ebx 0x63df
push 0x18
sbb eax esi
push eax
push ebx
call sub_41b760
mov ecx eax
mov eax [ edi + 0x8 ]
mov ebx edx
cdq
push esi
add eax ecx
push 0x3c
adc edx ebx
push edx
push eax
call sub_41b760
mov ecx eax
mov eax [ edi + 0x4 ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
push esi
push 0x3c
push edx
push eax
call sub_41b760
mov ecx eax
mov eax [ edi ]
mov ebx edx
cdq
add eax ecx
adc edx ebx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] edx
cmp [ ebp + 0x8 ] esi
je r-xdata
cmp esi 0x1
jle r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call sub_423225
call sub_423c73
lea eax [ ebp - 0x8 ]
push eax
call sub_4234a1
pop ecx
test eax eax
je r-xdata
add [ ebp - 0x1c ] 0x1
adc [ ebp - 0x18 ] 0x0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
push 0x9
pop ecx
lea esi [ ebp - 0x48 ]
[ edi ] [ esi ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_4234da
pop ecx
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
pop esi
mov eax [ ebp - 0x4 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_41bda2
pop ecx
pop ecx
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
mov eax [ edi + 0x20 ]
cmp eax esi
jg r-xdata
mov eax [ ebp - 0x8 ]
cdq
add [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
adc [ ebp - 0x10 ] edx
lea eax [ ebp - 0x48 ]
push eax
call sub_41bda2
jmp r-xdata
jge r-xdata
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp - 0x28 ] esi
jle r-xdata
sub_41bda2
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
xor ebx ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x4 ] ebx
cmp esi ebx
jne r-xdata
push edi
push 0x24
push 0xff
push esi
call sub_41ae80
mov edi [ ebp + 0xc ]
add esp 0xc
cmp edi ebx
jne r-xdata
call sub_41adfe
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
mov ecx [ edi ]
jg r-xdata
call sub_41adfe
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
jmp r-xdata
pop esi
pop ebx
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
mov eax esi
jmp r-xdata
call sub_423c73
lea eax [ ebp - 0x8 ]
push eax
call sub_423468
pop ecx
test eax eax
je r-xdata
jg r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
cmp ecx ebx
jb r-xdata
pop edi
lea eax [ ebp - 0xc ]
push eax
call sub_4234a1
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
cmp ecx 0x93406fff
jbe r-xdata
lea eax [ ebp - 0x4 ]
push eax
call sub_4234da
pop ecx
test eax eax
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx ebx
mov edi [ edi ]
jl r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
push eax
push esi
call sub_423225
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
jg r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cdq
sub edi eax
lea eax [ ebp - 0x14 ]
push eax
sbb ecx edx
push esi
mov [ ebp - 0x14 ] edi
mov [ ebp - 0x10 ] ecx
call sub_423225
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
cmp edi 0x3f480
jbe r-xdata
mov eax [ esi ]
cdq
mov edi eax
mov eax [ ebp - 0x4 ]
mov ebx edx
cdq
sub edi eax
sbb ebx edx
push esi
call sub_423cc2
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_41b7a0
mov edi eax
mov eax [ esi + 0x4 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x3c
adc ebx edx
push ebx
push edi
call sub_423d10
mov [ esi + 0x4 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi ] eax
adc ebx 0xffffffff
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
add eax ecx
cdq
mov ecx eax
mov eax edx
mov [ ebp + 0x8 ] eax
mov eax [ esi ]
cdq
mov edi eax
sub edi ecx
mov ecx [ ebp + 0x8 ]
mov ebx edx
sbb ebx ecx
mov [ esi + 0x20 ] 0x1
jmp r-xdata
xor eax eax
push esi
call sub_423cc2
pop ecx
test eax eax
je r-xdata
push 0x0
push 0x3c
push ebx
push edi
call sub_41b7a0
mov edi eax
mov eax [ esi + 0x8 ]
mov ebx edx
cdq
push 0x0
add edi eax
push 0x18
adc ebx edx
push ebx
push edi
call sub_423d10
mov [ esi + 0x8 ] eax
test eax eax
jge r-xdata
add eax 0x3c
add edi 0xffffffc4
mov [ esi + 0x4 ] eax
adc ebx 0xffffffff
push 0x0
push 0x3c
push ebx
push edi
call sub_423d10
mov [ esi ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0xc ]
cdq
sub [ ebp - 0x14 ] eax
lea eax [ ebp - 0x14 ]
push eax
sbb [ ebp - 0x10 ] edx
push esi
call sub_423225
pop ecx
pop ecx
cmp eax ebx
jne r-xdata
push 0x0
push 0x18
push ebx
push edi
call sub_41b7a0
mov ecx eax
test edx edx
jl r-xdata
add eax 0x18
add edi 0xffffffe8
mov [ esi + 0x8 ] eax
adc ebx 0xffffffff
mov [ esi + 0x20 ] 0x1
jmp r-xdata
mov eax [ esi + 0x18 ]
lea eax [ ecx + eax + 0x7 ]
cdq
push 0x7
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov eax [ esi + 0xc ]
mov [ esi + 0x18 ] edx
test eax eax
jg r-xdata
jg r-xdata
add [ esi + 0x1c ] ecx
add ecx 0x16d
add [ esi + 0x1c ] ecx
add eax 0x1f
dec [ esi + 0x14 ]
mov [ esi + 0xc ] eax
mov [ esi + 0x10 ] 0xb
jmp r-xdata
mov eax [ esi + 0x18 ]
add eax ecx
push 0x7
cdq
pop edi
idiv edi
add [ esi + 0xc ] ecx
mov [ esi + 0x18 ] edx
test ecx ecx
jbe r-xdata
test edx edx
jg r-xdata
jl r-xdata
test ecx ecx
jae r-xdata
sub_41c060
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov edx eax
xor eax eax
and cl 0x1f
shl edx cl
retn
shld edx eax cl
shl eax cl
retn
sub_41c07f
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423dc2
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_41adfe
test eax eax
je r-xdata
call sub_41adfe
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_41c0bf
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_423ee0
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_423ee0
pop ecx
sub_41c1d0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41c258 ]
jmp [ ecx * 4 + jump_table_41c2d8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c344 ]
pop esi
pop edi
pop ebp
jmp sub_423f6f
jmp [ ecx * 4 + jump_table_41c4e0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41c3e4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c4e0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c344 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c4e0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c344 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c344 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c4e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c4e0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c4e0 ]
sub_41c544
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
and [ ebp - 0x328 ] 0x0
push ebx
push 0x4c
lea eax [ ebp - 0x324 ]
push 0x0
push eax
call sub_41ae80
lea eax [ ebp - 0x328 ]
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x2d4 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x20c ] ecx
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x328 ] 0xc0000417
mov [ ebp - 0x324 ] 0x1
mov [ ebp - 0x31c ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov ebx eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push 0xc0000417
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop ebx
call sub_419730
leave
retn
test ebx ebx
jne r-xdata
push 0x2
call sub_423ee0
pop ecx
sub_41c66c
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41f051
pop ecx
test eax eax
je r-xdata
push 0x2
call sub_423ee0
pop ecx
pop ebp
jmp sub_41c544
pop ebp
jmp eax
sub_41c6a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x100
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_41c728 ]
jmp [ ecx * 4 + jump_table_41c7a8 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c814 ]
pop esi
pop edi
pop ebp
jmp sub_423f6f
jmp [ ecx * 4 + jump_table_41c9b0 ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_41c8b4 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c9b0 ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c814 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_41c9b0 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c814 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c814 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_41c814 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c9b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c9b0 ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_41c9b0 ]
sub_41ca05
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_424aac
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41adfe
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_41adfe
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41e349
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_424923
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
cmp edi ebx
mov [ esi + 0x4 ] ecx
jle r-xdata
push [ ebp + 0xc ]
call sub_424a48
pop ecx
test eax eax
jne r-xdata
call sub_41e349
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_424923
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4249ff
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4240d7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_41cb69
mov edi edi
push ebp
mov ebp esp
test [ eax + 0xc ] 0x40
je r-xdata
push eax
push [ ebp + 0x8 ]
call sub_424ade
pop ecx
pop ecx
mov ecx 0xffff
cmp ax cx
jne r-xdata
cmp [ eax + 0x8 ] 0x0
je r-xdata
inc [ esi ]
pop ebp
retn
or [ esi ] 0xffffffff
pop ebp
retn
sub_41cb98
mov edi edi
push ebp
mov ebp esp
push esi
mov esi eax
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jg r-xdata
push [ ebp + 0x8 ]
mov eax [ ebp + 0x10 ]
dec [ ebp + 0xc ]
call sub_41cb69
cmp [ esi ] 0xffffffff
pop ecx
je r-xdata
pop esi
pop ebp
retn
sub_41cbbf
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0xc ]
push edi
push [ ebp + 0x10 ]
xor edi edi
lea ecx [ ebp - 0x458 ]
mov [ ebp - 0x430 ] eax
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] edi
mov [ ebp - 0x408 ] edi
mov [ ebp - 0x42c ] edi
mov [ ebp - 0x40c ] edi
mov [ ebp - 0x424 ] edi
mov [ ebp - 0x43c ] edi
mov [ ebp - 0x428 ] edi
call sub_419be7
cmp [ ebp - 0x430 ] edi
jne r-xdata
cmp esi edi
je r-xdata
call sub_41adfe
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
push edi
movzx edx [ esi ]
xor ecx ecx
mov [ ebp - 0x420 ] edi
mov [ ebp - 0x414 ] edi
mov [ ebp - 0x444 ] edi
mov [ ebp - 0x418 ] edx
cmp dx di
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x44c ] 0x0
je r-xdata
push 0x2
pop edi
add esi edi
cmp [ ebp - 0x420 ] 0x0
mov [ ebp - 0x440 ] esi
jl r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x450 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp ax 0x58
ja r-xdata
xor eax eax
movzx eax dx
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov esi [ ebp - 0x440 ]
movzx eax [ esi ]
mov [ ebp - 0x418 ] eax
test ax ax
je r-xdata
jmp [ eax * 4 + jump_table_41d737 ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x45c ] eax
cmp eax ecx
ja r-xdata
mov ecx [ ebp - 0x45c ]
mov ebx [ ebp - 0x41c ]
mov edx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x460 ] eax
mov [ ebp - 0x43c ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax dx
sub eax 0x20
je r-xdata
cmp dx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp dx 0x2a
jne r-xdata
movzx eax dx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x430 ]
push edx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41cb69
jmp r-xdata
movzx eax dx
cmp eax 0x64
jg r-xdata
or [ ebp - 0x408 ] edi
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x42c ] ebx
test ebx ebx
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx dx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
add ebx 0x4
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x40c ] ebx
test ebx ebx
jge r-xdata
movzx eax [ esi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
pop ecx
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax 0x8
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ esi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edi
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ esi + 0x2 ] 0x32
jne r-xdata
add esi 0x4
or [ ebp - 0x408 ] 0x8000
mov [ ebp - 0x440 ] esi
jmp r-xdata
cmp [ esi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edi
je r-xdata
mov [ ebp - 0x40c ] 0x8
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
mov eax [ ebx ]
mov edx [ ebx + 0x4 ]
add ebx 0x8
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add esi 0x4
and [ ebp - 0x408 ] 0xffff7fff
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add esi edi
or [ ebp - 0x408 ] 0x1000
mov [ ebp - 0x440 ] esi
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x41c ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x418 ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x10
je r-xdata
cmp [ ebp - 0x43c ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x448 ] ecx
jmp r-xdata
sub eax edi
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] 0x8
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x448 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x438 ] ax
mov eax [ ebp - 0x448 ]
add eax 0x51
mov [ ebp - 0x436 ] ax
mov [ ebp - 0x424 ] edi
jmp r-xdata
cmp [ ebp - 0x444 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x41c ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
test eax eax
je r-xdata
sub eax ecx
je r-xdata
or [ ebp - 0x408 ] 0x20
add edx 0x20
mov [ ebp - 0x460 ] 0x1
mov [ ebp - 0x418 ] edx
sub eax edi
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x444 ]
call sub_41a4ab
and [ ebp - 0x444 ] 0x0
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edi
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edi
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x438 ]
call sub_41d757
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41cb98
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp dx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x458 ]
push eax
push [ ebp - 0x460 ]
movsx eax dl
push [ ebp - 0x40c ]
mov [ ebp - 0x41c ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_41f051
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x41c ] ebx
call sub_424c65
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x41c ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edi
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x458 ]
movzx eax al
push ecx
push eax
call sub_41a116
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x438 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x418 ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
call sub_41adfe
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
jmp r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x418 ] 0x8
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x434 ] al
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
mov [ ebp - 0x433 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x434 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_424d0b
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x45c ] 0x0
inc eax
inc eax
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_41d757
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41cb98
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41f728
mov edx [ ebp - 0x418 ]
pop ecx
mov [ ebp - 0x444 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41f051
pop ecx
call eax
pop ecx
pop ecx
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x44c ] 0x0
je r-xdata
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x43c ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x418 ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x458 ]
push eax
push esi
push [ rw-data ]
call sub_41f051
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x43c ] 0x1
jmp r-xdata
mov eax [ ebp - 0x418 ]
cdq
push edx
push eax
push ebx
push edi
call sub_423190
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x430 ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41cb98
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x430 ]
lea esi [ ebp - 0x420 ]
call sub_41cb69
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x418 ] 0x0
pop ecx
jg r-xdata
call sub_424c80
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x448 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x418 ]
lea eax [ ebp - 0x458 ]
push eax
mov eax [ ebp - 0x458 ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_424d0b
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41d757
mov edi edi
push ebp
mov ebp esp
test [ edi + 0xc ] 0x40
push ebx
push esi
mov esi eax
mov ebx ecx
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jg r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
movzx eax [ ebx ]
dec [ ebp + 0x8 ]
push eax
mov eax edi
call sub_41cb69
inc ebx
inc ebx
cmp [ esi ] 0xffffffff
pop ecx
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
add [ esi ] eax
jmp r-xdata
call sub_41adfe
cmp [ eax ] 0x2a
jne r-xdata
push 0x3f
mov eax edi
call sub_41cb69
pop ecx
sub_41d7a9
mov edi edi
push ebp
mov ebp esp
sub esp 0x474
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x44c ]
mov [ ebp - 0x43c ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x428 ] eax
call sub_419be7
test esi esi
jne r-xdata
xor esi esi
cmp edi esi
jne r-xdata
call sub_41adfe
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
movzx ecx [ edi ]
mov [ ebp - 0x420 ] esi
mov [ ebp - 0x414 ] esi
mov [ ebp - 0x434 ] esi
mov [ ebp - 0x458 ] esi
mov [ ebp - 0x41c ] ecx
cmp cx si
je r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
push esi
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x440 ] 0x0
je r-xdata
push 0x2
pop edx
add edi edx
cmp [ ebp - 0x420 ] esi
mov [ ebp - 0x460 ] edi
jl r-xdata
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x440 ] 0x0
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
mov eax [ ebp - 0x420 ]
mov eax [ ebp - 0x444 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x434 ] esi
je r-xdata
lea eax [ ecx - 0x20 ]
cmp ax 0x58
ja r-xdata
cmp [ ebp - 0x434 ] 0x7
jne r-xdata
xor eax eax
movzx eax cx
movzx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
cmp eax 0x7
ja r-xdata
mov esi [ ebp - 0x434 ]
imul eax eax 0x9
movzx eax [ eax + esi + lookup_table_430090 ]
push 0x8
shr eax 0x4
pop esi
mov [ ebp - 0x434 ] eax
cmp eax esi
je r-xdata
mov edi [ ebp - 0x460 ]
mov ebx [ ebp - 0x418 ]
jmp [ eax * 4 + jump_table_41e329 ]
mov ecx eax
jmp r-xdata
xor eax eax
or [ ebp - 0x40c ] 0xffffffff
mov [ ebp - 0x45c ] eax
mov [ ebp - 0x450 ] eax
mov [ ebp - 0x42c ] eax
mov [ ebp - 0x424 ] eax
mov [ ebp - 0x408 ] eax
mov [ ebp - 0x428 ] eax
jmp r-xdata
movzx eax cx
sub eax 0x20
je r-xdata
cmp cx 0x2a
jne r-xdata
and [ ebp - 0x40c ] 0x0
jmp r-xdata
cmp cx 0x2a
jne r-xdata
movzx eax cx
cmp eax 0x49
je r-xdata
mov eax [ ebp - 0x43c ]
push ecx
lea esi [ ebp - 0x420 ]
mov [ ebp - 0x428 ] 0x1
call sub_41cb69
pop ecx
jmp r-xdata
movzx eax cx
cmp eax 0x64
jg r-xdata
movzx eax [ edi ]
xor esi esi
mov [ ebp - 0x41c ] eax
cmp ax si
je r-xdata
or [ ebp - 0x408 ] edx
jmp r-xdata
sub eax 0x3
je r-xdata
mov eax [ ebp - 0x42c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x42c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x42c ] eax
test eax eax
jge r-xdata
mov eax [ ebp - 0x40c ]
imul eax eax 0xa
movzx ecx cx
lea eax [ eax + ecx - 0x30 ]
mov [ ebp - 0x40c ] eax
jmp r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x40c ] eax
test eax eax
jge r-xdata
movzx eax [ edi ]
cmp ax 0x36
jne r-xdata
cmp eax 0x68
je r-xdata
cmp eax 0x70
jg r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x80
jmp r-xdata
sub eax esi
je r-xdata
or [ ebp - 0x408 ] 0x4
neg [ ebp - 0x42c ]
jmp r-xdata
or [ ebp - 0x40c ] 0xffffffff
jmp r-xdata
cmp ax 0x33
jne r-xdata
cmp [ edi + 0x2 ] 0x34
jne r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
cmp eax 0x6c
je r-xdata
sub eax 0x73
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp eax 0x53
jg r-xdata
or [ ebp - 0x408 ] 0x1
jmp r-xdata
sub eax edx
je r-xdata
cmp ax 0x64
je r-xdata
cmp [ edi + 0x2 ] 0x32
jne r-xdata
add edi 0x4
or [ ebp - 0x408 ] 0x8000
jmp r-xdata
cmp [ edi ] 0x6c
jne r-xdata
cmp eax 0x77
jne r-xdata
mov edi [ ebp - 0x40c ]
cmp edi 0xffffffff
jne r-xdata
sub eax edx
je r-xdata
mov [ ebp - 0x40c ] esi
cmp eax 0x65
jl r-xdata
test [ ebp - 0x408 ] 0x1000
jne r-xdata
add ebx esi
mov eax [ ebx - 0x8 ]
mov edx [ ebx - 0x4 ]
jmp r-xdata
sub eax 0x58
je r-xdata
je r-xdata
or [ ebp - 0x408 ] 0x4
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp ax 0x69
je r-xdata
add edi 0x4
and [ ebp - 0x408 ] 0xffff7fff
jmp r-xdata
or [ ebp - 0x408 ] 0x10
jmp r-xdata
add edi edx
or [ ebp - 0x408 ] 0x1000
jmp r-xdata
or [ ebp - 0x408 ] 0x800
jmp r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x418 ] ebx
mov ebx [ ebx - 0x4 ]
mov [ ebp - 0x410 ] ebx
je r-xdata
mov edi 0x7fffffff
mov [ ebp - 0x41c ] 0xa
sub eax 0x3
jne r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] 0x10
je r-xdata
cmp [ ebp - 0x450 ] 0x0
jne r-xdata
cmp eax 0x67
jle r-xdata
add ebx 0x4
test [ ebp - 0x408 ] 0x20
je r-xdata
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x454 ] 0x7
jmp r-xdata
sub eax edx
je r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax 0x41
je r-xdata
or [ ebp - 0x408 ] esi
jmp r-xdata
cmp ax 0x6f
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
mov [ ebp - 0x454 ] 0x27
test [ ebp - 0x408 ] 0x8000
je r-xdata
push 0x30
pop eax
mov [ ebp - 0x430 ] ax
mov eax [ ebp - 0x454 ]
add eax 0x51
mov [ ebp - 0x42e ] ax
mov [ ebp - 0x424 ] edx
jmp r-xdata
cmp [ ebp - 0x458 ] 0x0
je r-xdata
mov eax [ ebp - 0x408 ]
test al 0x40
je r-xdata
or [ ebp - 0x408 ] 0x40
cmp [ ebp - 0x40c ] 0x0
lea esi [ ebp - 0x404 ]
mov eax 0x200
mov [ ebp - 0x410 ] esi
mov [ ebp - 0x414 ] eax
jge r-xdata
cmp eax 0x69
je r-xdata
test [ ebp - 0x408 ] 0x40
mov eax [ ebx - 0x4 ]
je r-xdata
test [ ebp - 0x408 ] 0x40
mov [ ebp - 0x418 ] ebx
je r-xdata
test [ ebp - 0x408 ] 0x9000
mov ebx edx
mov edi eax
jne r-xdata
test edx edx
jg r-xdata
mov eax [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
test eax eax
je r-xdata
sub eax 0x7
je r-xdata
or [ ebp - 0x408 ] 0x20
add ecx 0x20
mov [ ebp - 0x45c ] 0x1
mov [ ebp - 0x41c ] ecx
sub eax edx
je r-xdata
cmp ax 0x75
je r-xdata
mov eax [ ebp - 0x410 ]
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
and [ ebp - 0x414 ] 0x0
mov esi [ ebp - 0x410 ]
test edi edi
jle r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push [ ebp - 0x458 ]
call sub_41a4ab
and [ ebp - 0x458 ] 0x0
pop ecx
mov ebx [ ebp - 0x42c ]
mov esi [ ebp - 0x414 ]
sub ebx esi
sub ebx [ ebp - 0x424 ]
test [ ebp - 0x408 ] 0xc
jne r-xdata
test eax 0x100
je r-xdata
jne r-xdata
mov [ ebp - 0x40c ] 0x6
jmp r-xdata
cmp eax 0x6e
je r-xdata
xor edx edx
cdq
jmp r-xdata
movzx eax [ ebx - 0x4 ]
movsx eax [ ebx - 0x4 ]
jmp r-xdata
cmp [ ebp - 0x40c ] 0x0
jge r-xdata
xor ebx ebx
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x410 ] eax
push eax
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
sub eax edx
jne r-xdata
test [ ebp - 0x408 ] 0x830
jne r-xdata
sub eax edx
je r-xdata
cmp ax 0x78
je r-xdata
test edi edi
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
push [ ebp - 0x424 ]
mov edi [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
lea ecx [ ebp - 0x430 ]
call sub_41d757
test [ ebp - 0x408 ] 0x8
pop ecx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41cb98
add esp 0xc
test al 0x1
je r-xdata
push 0x2d
jmp r-xdata
cmp [ ebp - 0x40c ] eax
jle r-xdata
cmp cx 0x67
jne r-xdata
mov eax [ ebx ]
add ebx 0x8
mov [ ebp - 0x46c ] eax
mov eax [ ebx - 0x4 ]
mov [ ebp - 0x468 ] eax
lea eax [ ebp - 0x44c ]
push eax
push [ ebp - 0x45c ]
movsx eax cl
push [ ebp - 0x40c ]
mov [ ebp - 0x418 ] ebx
push eax
push [ ebp - 0x414 ]
lea eax [ ebp - 0x46c ]
push esi
push eax
push [ rw-data ]
call sub_41f051
pop ecx
call eax
mov ebx [ ebp - 0x408 ]
add esp 0x1c
and ebx 0x80
je r-xdata
mov esi [ ebx ]
add ebx 0x4
mov [ ebp - 0x418 ] ebx
call sub_424c65
test eax eax
je r-xdata
cmp eax 0x6f
jne r-xdata
test [ ebp - 0x408 ] 0x40
je r-xdata
cdq
jmp r-xdata
and [ ebp - 0x408 ] 0xfffffff7
mov eax 0x200
cmp [ ebp - 0x40c ] eax
jle r-xdata
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
neg eax
adc edx 0x0
neg edx
or [ ebp - 0x408 ] 0x100
test eax eax
jae r-xdata
mov [ ebp - 0x414 ] eax
test [ ebp - 0x408 ] 0x800
movsx eax [ eax ]
mov [ ebp - 0x410 ] ecx
je r-xdata
movzx eax [ ebx ]
add ebx 0x4
xor esi esi
inc esi
test [ ebp - 0x408 ] 0x20
mov [ ebp - 0x428 ] esi
mov [ ebp - 0x418 ] ebx
mov [ ebp - 0x464 ] eax
je r-xdata
or [ ebp - 0x408 ] 0x20
jmp r-xdata
sub eax edx
jne r-xdata
cmp ax 0x58
je r-xdata
dec edi
cmp [ eax ] 0x0
je r-xdata
sub eax [ ebp - 0x410 ]
lea ecx [ ebp - 0x44c ]
movzx eax al
push ecx
push eax
call sub_41a116
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x428 ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x4
jne r-xdata
test al 0x2
je r-xdata
push 0x2b
jmp r-xdata
pop eax
mov [ ebp - 0x430 ] ax
mov [ ebp - 0x424 ] 0x1
cmp [ ebp - 0x40c ] 0xa3
jle r-xdata
mov [ ebp - 0x40c ] eax
mov [ ebp - 0x40c ] 0x1
jmp r-xdata
cmp [ ebp - 0x41c ] 0x67
jne r-xdata
cmp [ ebp - 0x40c ] 0x0
jne r-xdata
test [ ebp - 0x408 ] 0x20
je r-xdata
test [ ebp - 0x408 ] 0x80
mov [ ebp - 0x41c ] esi
je r-xdata
mov eax edi
or eax ebx
jne r-xdata
mov [ ebp - 0x40c ] eax
and [ ebp - 0x428 ] 0x0
jmp r-xdata
cdq
sub eax edx
mov [ ebp - 0x428 ] 0x1
jmp r-xdata
mov [ ebp - 0x404 ] ax
mov [ ebp - 0x438 ] al
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
mov [ ebp - 0x437 ] 0x0
push [ eax + 0xac ]
lea eax [ ebp - 0x438 ]
push eax
lea eax [ ebp - 0x404 ]
push eax
call sub_424d0b
add esp 0x10
test eax eax
jge r-xdata
and [ ebp - 0x434 ] 0x0
add eax edx
inc esi
inc [ ebp - 0x414 ]
cmp [ ebp - 0x414 ] edi
jl r-xdata
inc esi
mov ecx [ ebp - 0x410 ]
push esi
lea eax [ ebp - 0x420 ]
call sub_41d757
pop ecx
test esi esi
jle r-xdata
push edi
push ebx
push 0x30
lea eax [ ebp - 0x420 ]
call sub_41cb98
add esp 0xc
push 0x20
mov edi [ ebp - 0x40c ]
add edi 0x15d
push edi
call sub_41f728
pop ecx
mov ecx [ ebp - 0x41c ]
mov [ ebp - 0x458 ] eax
test eax eax
je r-xdata
cmp [ esi ] 0x2d
jne r-xdata
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_41f051
pop ecx
call eax
pop ecx
pop ecx
mov eax [ ebp - 0x420 ]
mov [ esi ] eax
mov ax [ ebp - 0x420 ]
mov [ esi ] ax
jmp r-xdata
or [ ebp - 0x408 ] 0x200
jmp r-xdata
lea esi [ ebp - 0x205 ]
and [ ebp - 0x424 ] eax
sar eax 0x1
lea eax [ ebp - 0x404 ]
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] esi
jmp r-xdata
mov [ ebp - 0x450 ] esi
jmp r-xdata
jmp r-xdata
test [ ebp - 0x408 ] 0x4
je r-xdata
mov edi [ ebp - 0x410 ]
mov [ ebp - 0x41c ] esi
mov [ ebp - 0x40c ] 0xa3
mov [ ebp - 0x410 ] eax
mov [ ebp - 0x414 ] edi
mov esi eax
jmp r-xdata
push esi
jmp r-xdata
or [ ebp - 0x408 ] 0x100
inc esi
mov [ ebp - 0x410 ] esi
lea eax [ ebp - 0x44c ]
push eax
push esi
push [ rw-data ]
call sub_41f051
pop ecx
call eax
pop ecx
pop ecx
mov [ ebp - 0x450 ] 0x1
jmp r-xdata
mov eax [ ebp - 0x41c ]
cdq
push edx
push eax
push ebx
push edi
call sub_423190
add ecx 0x30
cmp ecx 0x39
mov [ ebp - 0x470 ] ebx
mov edi eax
mov ebx edx
jle r-xdata
mov eax edi
or eax ebx
je r-xdata
push [ ebp - 0x43c ]
lea eax [ ebp - 0x420 ]
push ebx
push 0x20
call sub_41cb98
add esp 0xc
or [ ebp - 0x420 ] 0xffffffff
jmp r-xdata
push [ ebp - 0x464 ]
mov eax [ ebp - 0x43c ]
lea esi [ ebp - 0x420 ]
call sub_41cb69
add edi [ ebp - 0x470 ]
cmp [ ebp - 0x41c ] 0x0
pop ecx
jg r-xdata
call sub_424c80
pop ecx
jmp r-xdata
mov [ esi ] cl
dec esi
jmp r-xdata
add ecx [ ebp - 0x454 ]
lea eax [ ebp - 0x205 ]
sub eax esi
inc esi
test [ ebp - 0x408 ] 0x200
mov [ ebp - 0x414 ] eax
mov [ ebp - 0x410 ] esi
je r-xdata
cmp [ ebp - 0x420 ] 0x0
jl r-xdata
dec [ ebp - 0x41c ]
lea eax [ ebp - 0x44c ]
push eax
mov eax [ ebp - 0x44c ]
push [ eax + 0xac ]
lea eax [ ebp - 0x464 ]
push edi
push eax
call sub_424d0b
add esp 0x10
mov [ ebp - 0x470 ] eax
test eax eax
jle r-xdata
jmp r-xdata
mov eax [ ebp - 0x40c ]
dec [ ebp - 0x40c ]
test eax eax
jg r-xdata
test eax eax
je r-xdata
dec [ ebp - 0x410 ]
mov ecx [ ebp - 0x410 ]
mov [ ecx ] 0x30
inc eax
jmp r-xdata
mov ecx esi
cmp [ ecx ] 0x30
je r-xdata
sub_41e34f
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_41f76d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_41f76d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_41e420
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_420509
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_41e461
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_420509
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_41e493
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_42042f
pop ecx
pop ebp
retn
sub_41e4cf
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x14
mov eax [ ebp + 0xc ]
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_42042f
pop ecx
pop ebp
retn
sub_41e4fe
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_424aac
push eax
call sub_424a48
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_41e349
add eax 0x20
cmp esi eax
jne r-xdata
call sub_41e349
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_41f728
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_41e59a
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_424edb
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_41e5ce
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_41e5fd
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_41ae80
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_41e661
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
mov dl cl
add dl 0x20
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
mov dl cl
sub dl 0x20
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_425632
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_425433
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_425433
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
inc ebx
mov al [ ebx ]
inc ebx
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_41ae80
add esp 0xc
mov [ esi + eax + 0x11d ] 0x0
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_41e7f4
push 0xc
push r--data
call sub_41aefc
call sub_41f29d
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41e88f
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_41af41
retn
push 0x20
call sub_41b153
pop ecx
cmp esi rw-data
je r-xdata
push esi
call sub_41a4ab
pop ecx
sub_41e898
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_41e914
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_41e898
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_41e5fd
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41ae80
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_41e5ce
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
inc ecx
mov [ eax ] si
inc ecx
inc eax
inc eax
dec edx
jne r-xdata
mov esi ebx
call sub_41e661
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
inc esi
inc esi
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_41ae80
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_41e5ce
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
inc esi
inc esi
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_41eaf9
push 0x14
push r--data
call sub_41aefc
or [ ebp - 0x20 ] 0xffffffff
call sub_41f29d
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_41e7f4
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_41e898
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_41f728
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_41af41
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_41e914
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_41adfe
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_41a4ab
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_41a4ab
pop ecx
push 0xd
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41ec5a
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_41a4ab
pop ecx
sub_41ecb1
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
lea edi [ esi + 0xd4 ]
mov eax [ edi ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_41a4ab
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_41a4ab
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_41a4ab
push [ esi + 0xc0 ]
call sub_41a4ab
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_425674
push [ edi ]
call sub_41a4ab
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_41a4ab
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a4ab
pop ecx
push [ esi + 0xb0 ]
call sub_41a4ab
push [ esi + 0xbc ]
call sub_41a4ab
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_41a4ab
push [ esi + 0xbc ]
call sub_42584e
pop ecx
pop ecx
push eax
call sub_41a4ab
pop ecx
push eax
call sub_41a4ab
push [ esi + 0xbc ]
call sub_425809
pop ecx
pop ecx
sub_41edfa
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_41ee89
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_41ef22
test edi edi
je r-xdata
xor eax eax
retn
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
retn
push edi
mov [ eax ] edi
call sub_41edfa
pop ecx
test esi esi
je r-xdata
push esi
call sub_41ee89
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_41ecb1
pop ecx
sub_41ef60
push 0xc
push r--data
call sub_41aefc
call sub_41f29d
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
lea eax [ esi + 0x6c ]
mov edi [ rw-data ]
call sub_41ef22
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41efca
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_41f29d
mov esi [ eax + 0x6c ]
mov eax esi
call sub_41af41
retn
push 0x20
call sub_41b153
pop ecx
sub_41efd6
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_41b123
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1f8 ]
jmp r-xdata
test eax eax
je r-xdata
sub_41f051
mov edi edi
push ebp
mov ebp esp
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
push esi
call sub_41b123
pop ecx
test eax eax
je r-xdata
push eax
push [ rw-data ]
call esi
call eax
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop ebp
retn
push [ ebp + 0x8 ]
call eax
mov [ ebp + 0x8 ] eax
mov eax [ eax + 0x1fc ]
jmp r-xdata
test eax eax
je r-xdata
sub_41f0cc
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call sub_41f051
pop ecx
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_41f100
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call sub_41f051
pop ecx
call eax
or [ rw-data ] 0xffffffff
jmp r-xdata
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_41a4ab
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_41f13d
push 0xc
push r--data
call sub_41aefc
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] eax
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
test eax eax
je r-xdata
push esi
call sub_41b123
pop ecx
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f212
push 0xc
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push r--data
push eax
mov ebx [ GetProcAddress@IAT ]
call ebx
mov [ esi + 0x1f8 ] eax
push r--data
push [ ebp - 0x1c ]
call ebx
mov [ esi + 0x1fc ] eax
push [ esi + 0x6c ]
call sub_41edfa
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f21b
call sub_41af41
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_41f224
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_41f0cc
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_41f76d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41f051
pop ecx
call eax
test eax eax
je r-xdata
push esi
call sub_41a4ab
pop ecx
xor esi esi
push 0x0
push esi
call sub_41f13d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_41f2b7
push 0x8
push r--data
call sub_41aefc
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_41af41
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_41a4ab
pop ecx
push 0xd
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f3d1
push 0xc
call sub_420509
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f3dd
push esi
call sub_41a4ab
pop ecx
push edi
call sub_41ee89
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_41a4ab
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_41ecb1
pop ecx
sub_41f3e6
mov edi edi
push esi
push edi
mov esi r--data
push esi
call [ GetModuleHandleW@IAT ]
test eax eax
jne r-xdata
mov edi eax
test edi edi
je r-xdata
push esi
call sub_41b123
pop ecx
call sub_41f100
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_41f0c3
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_41b40d
push [ rw-data ]
call sub_41efd6
push [ rw-data ]
mov [ rw-data ] eax
call sub_41efd6
push [ rw-data ]
mov [ rw-data ] eax
call sub_41efd6
push [ rw-data ]
mov [ rw-data ] eax
call sub_41efd6
add esp 0x10
mov [ rw-data ] eax
call sub_42038d
test eax eax
je r-xdata
test eax eax
jne r-xdata
push sub_41f2b7
push [ rw-data ]
call sub_41f051
pop ecx
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_41f76d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call sub_41f051
pop ecx
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_41f13d
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop edi
pop esi
retn
sub_41f573
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
mov ecx eax
sub esp 0x14
cmp [ ebp + 0x8 ] cx
je r-xdata
leave
retn
push ebx
push [ ebp + 0xc ]
lea ecx [ ebp - 0x14 ]
call sub_419be7
mov ecx [ ebp - 0x14 ]
mov edx [ ecx + 0x14 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
push esi
mov eax 0x100
mov esi eax
cmp [ ebp + 0x8 ] si
pop esi
jae r-xdata
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp cx 0x19
ja r-xdata
push [ ecx + 0x4 ]
lea ecx [ ebp - 0x4 ]
push 0x1
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
push edx
lea eax [ ebp - 0x14 ]
push eax
call sub_425b30
add esp 0x20
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
push 0x1
push [ ebp + 0x8 ]
call sub_41f859
add esp 0xc
test eax eax
movzx eax [ ebp + 0x8 ]
je r-xdata
movzx eax ax
jmp r-xdata
add eax 0x20
cmp [ ebp - 0x8 ] bl
je r-xdata
movzx eax [ ebp - 0x4 ]
mov ecx [ ebp - 0x14 ]
mov ecx [ ecx + 0xcc ]
movzx ax [ ecx + eax ]
jmp r-xdata
pop ebx
mov ecx [ ebp - 0xc ]
and [ ecx + 0x70 ] 0xfffffffd
sub_41f628
push 0xc
push r--data
call sub_41aefc
push 0xe
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41f68f
call sub_41af41
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_41a4ab
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_41a4ab
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_41f6a0
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_41f728
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_41a3e1
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_41f76d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_423dc2
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41f7b9
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aa43
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_41f807
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0x10 ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_425b87
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_41f859
mov edi edi
push ebp
mov ebp esp
mov eax 0xffff
sub esp 0x14
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x14 ]
call sub_419be7
mov eax [ ebp - 0x14 ]
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x14 ]
push 0x1
push eax
call sub_425c02
add esp 0x1c
test eax eax
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
mov ax [ ecx + eax * 2 ]
and ax [ ebp + 0xc ]
movzx eax ax
mov [ ebp - 0x4 ] eax
jmp r-xdata
movzx eax [ ebp - 0x4 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
cmp [ ebp - 0x8 ] 0x0
je r-xdata
and [ ebp - 0x4 ] eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
sub_41f8e3
mov edi edi
push ebp
mov ebp esp
push ecx
mov eax 0xffff
cmp [ ebp + 0x8 ] ax
jne r-xdata
mov eax 0x100
cmp [ ebp + 0x8 ] ax
jae r-xdata
xor eax eax
leave
retn
cmp [ rw-data ] 0x0
jne r-xdata
movzx eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
movzx ecx [ ebp + 0xc ]
and eax ecx
leave
retn
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41f859
add esp 0xc
leave
retn
push [ rw-data ]
lea eax [ ebp - 0x4 ]
push [ rw-data ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push rw-data
call sub_425c02
add esp 0x1c
sub_41f959
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_421cf0
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_41f9a9
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
xor esi esi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jae r-xdata
inc edi
mov [ ebp - 0x4 ] edi
cmp edi 0x17
jb r-xdata
pop edi
pop esi
pop ebx
leave
retn
push 0x3
call sub_425da9
pop ecx
cmp eax 0x1
je r-xdata
cmp ebx [ edi * 8 + rw-data ]
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
push 0x3
call sub_425da9
pop ecx
test eax eax
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
lea esi [ edi * 8 + rw-data ]
push [ esi ]
call sub_424c80
pop ecx
push eax
push [ esi ]
push ebx
call [ WriteFile@IAT ]
push r--data
mov ebx 0x314
push ebx
mov edi rw-data
push edi
call sub_425a7b
add esp 0xc
test eax eax
je r-xdata
push 0x104
mov esi rw-data
push esi
push 0x0
mov [ rw-data ] 0x0
call [ GetModuleFileNameA@IAT ]
test eax eax
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
push esi
call sub_424c80
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push 0x2fb
push esi
call sub_425a7b
add esp 0xc
test eax eax
je r-xdata
xor esi esi
push esi
call sub_424c80
sub esi 0x3b
add eax esi
push 0x3
mov ecx rw-data
push r--data
sub ecx eax
push ecx
push eax
call sub_4259c6
add esp 0x14
test eax eax
je r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c544
add esp 0x14
mov eax [ ebp - 0x4 ]
push [ eax * 8 + rw-data ]
push ebx
push edi
call sub_425902
add esp 0xc
test eax eax
je r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
xor esi esi
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
jmp r-xdata
push 0x12010
push r--data
push edi
call sub_425c40
add esp 0xc
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
push r--data
push ebx
push edi
call sub_425902
add esp 0xc
test eax eax
je r-xdata
sub_41fb54
push 0x3
call sub_425da9
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_41f9a9
push 0xff
call sub_41f9a9
pop ecx
pop ecx
push 0x3
call sub_425da9
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_41fb8d
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
call sub_41f224
mov esi eax
test esi esi
je r-xdata
pop esi
leave
retn
mov edx [ esi + 0x5c ]
mov eax [ rw-data ]
push edi
mov edi [ ebp + 0x8 ]
mov ecx edx
push ebx
imul eax eax 0xc
add eax edx
cmp ecx eax
jae r-xdata
mov ebx eax
imul ebx ebx 0xc
add ecx 0xc
add ebx edx
cmp ecx ebx
jb r-xdata
xor eax eax
cmp [ ecx ] edi
jne r-xdata
cmp [ ecx ] edi
je r-xdata
xor eax eax
jmp r-xdata
mov ebx [ eax + 0x8 ]
mov [ ebp - 0x4 ] ebx
test ebx ebx
jne r-xdata
mov eax ecx
jmp r-xdata
pop ebx
pop edi
cmp ebx 0x5
jne r-xdata
test eax eax
je r-xdata
cmp ebx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ esi + 0x60 ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp + 0xc ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call ebx
mov ecx [ rw-data ]
mov edi [ rw-data ]
mov edx ecx
add edi ecx
cmp edx edi
jge r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
imul ecx ecx 0xc
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
mov edi [ rw-data ]
mov ebx [ rw-data ]
inc edx
add ebx edi
add ecx 0xc
cmp edx ebx
jl r-xdata
mov ebx [ ebp - 0x4 ]
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call ebx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
mov [ esi + 0x60 ] eax
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
mov [ esi + 0x64 ] 0x8a
sub_41fced
mov edi edi
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
movzx eax [ esi ]
test ax ax
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp ax 0x3d
je r-xdata
push ebx
push 0x4
inc edi
push edi
call sub_41f76d
mov ebx eax
pop ecx
pop ecx
mov [ rw-data ] ebx
test ebx ebx
jne r-xdata
pop edi
pop esi
retn
push esi
call sub_41a539
pop ecx
lea esi [ esi + eax * 2 + 0x2 ]
inc edi
mov esi [ rw-data ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
pop ebx
push esi
call sub_41a539
mov edi eax
inc edi
cmp [ esi ] 0x3d
pop ecx
je r-xdata
push [ rw-data ]
call sub_41a4ab
and [ rw-data ] 0x0
and [ ebx ] 0x0
mov [ rw-data ] 0x1
xor eax eax
lea esi [ esi + edi * 2 ]
push 0x2
push edi
call sub_41f76d
pop ecx
pop ecx
mov [ ebx ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_41a4ab
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push edi
push eax
call sub_419ff4
add esp 0xc
test eax eax
je r-xdata
pop ecx
add ebx 0x4
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c544
add esp 0x14
sub_41fdcb
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
xor edx edx
push edi
mov edi [ ebp + 0xc ]
mov [ ebx ] edx
mov esi ecx
mov [ edi ] 0x1
cmp [ ebp + 0x8 ] edx
je r-xdata
cmp [ eax ] 0x22
jne r-xdata
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
inc [ ebx ]
test esi esi
je r-xdata
mov edi [ ebp + 0xc ]
xor ecx ecx
test edx edx
sete cl
push 0x22
inc eax
inc eax
mov edx ecx
pop ecx
jmp r-xdata
movzx ecx [ eax ]
inc eax
inc eax
test cx cx
je r-xdata
mov cx [ eax ]
mov [ esi ] cx
inc esi
inc esi
test edx edx
jne r-xdata
dec eax
dec eax
jmp r-xdata
cmp cx 0x20
je r-xdata
and [ ebp - 0x4 ] 0x0
test esi esi
je r-xdata
cmp cx 0x9
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax edx
je r-xdata
movzx ecx [ eax ]
cmp cx 0x20
je r-xdata
xor ecx ecx
mov [ esi - 0x2 ] cx
inc [ edi ]
pop edi
pop esi
leave
retn
mov [ eax ] edx
inc eax
inc eax
jmp r-xdata
cmp cx 0x9
jne r-xdata
cmp [ eax ] dx
je r-xdata
cmp [ ebp + 0x8 ] edx
je r-xdata
inc [ edi ]
mov ecx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ecx ] esi
cmp [ eax ] 0x5c
je r-xdata
inc eax
inc eax
inc edx
cmp [ eax ] 0x22
jne r-xdata
test edx edx
jne r-xdata
test dl 0x1
jne r-xdata
dec edx
test esi esi
je r-xdata
movzx ecx [ eax ]
test cx cx
je r-xdata
shr edx 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc [ ebx ]
push 0x5c
pop ecx
mov [ esi ] cx
inc esi
inc esi
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] edx
jne r-xdata
xor ecx ecx
xor edi edi
cmp [ ebp - 0x4 ] ecx
sete cl
mov [ ebp - 0x4 ] ecx
lea ecx [ eax + 0x2 ]
cmp [ ecx ] 0x22
jne r-xdata
inc [ ebx ]
mov edi [ ebp + 0xc ]
jmp r-xdata
xor ecx ecx
mov [ esi ] cx
inc esi
inc esi
test edi edi
je r-xdata
cmp cx 0x20
je r-xdata
mov eax ecx
jmp r-xdata
xor edx edx
cmp [ eax ] dx
je r-xdata
inc eax
inc eax
jmp r-xdata
test esi esi
je r-xdata
cmp cx 0x9
je r-xdata
xor edi edi
inc edi
xor edx edx
jmp r-xdata
inc [ ebx ]
mov [ esi ] cx
inc esi
inc esi
sub_41ff1c
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
push 0x104
mov esi rw-data
push esi
xor eax eax
xor ebx ebx
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
mov edi esi
mov edi eax
cmp [ eax ] bx
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0x8 ]
cmp ecx 0x7fffffff
jae r-xdata
lea eax [ ebp - 0x4 ]
push eax
push ebx
lea ebx [ ebp - 0x8 ]
xor ecx ecx
mov eax edi
call sub_41fdcb
mov ebx [ ebp - 0x4 ]
pop ecx
pop ecx
cmp ebx 0x3fffffff
jae r-xdata
lea eax [ ecx + ebx * 2 ]
add eax eax
add ecx ecx
cmp eax ecx
jb r-xdata
push eax
call sub_41f728
mov esi eax
pop ecx
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ esi + ebx * 4 ]
push esi
lea ebx [ ebp - 0x8 ]
mov eax edi
call sub_41fdcb
mov eax [ ebp - 0x4 ]
dec eax
pop ecx
mov [ rw-data ] eax
pop ecx
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_41ffca
mov edi edi
push esi
call [ GetEnvironmentStringsW@IAT ]
mov esi eax
xor ecx ecx
cmp esi ecx
jne r-xdata
cmp [ esi ] cx
je r-xdata
xor eax eax
pop esi
retn
sub eax esi
inc eax
push ebx
inc eax
mov ebx eax
push edi
push ebx
call sub_41f728
mov edi eax
pop ecx
test edi edi
jne r-xdata
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
push ebx
push esi
push edi
call sub_41c1d0
add esp 0xc
jmp r-xdata
push esi
call [ FreeEnvironmentStringsW@IAT ]
mov eax edi
pop edi
pop ebx
pop esi
retn
inc eax
inc eax
cmp [ eax ] cx
jne r-xdata
sub_420027
push 0x54
push r--data
call sub_41aefc
xor edi edi
mov [ ebp - 0x4 ] edi
lea eax [ ebp - 0x64 ]
push eax
call [ GetStartupInfoA@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
push 0x40
push 0x20
pop esi
push esi
call sub_41f76d
pop ecx
pop ecx
cmp eax edi
je r-xdata
or eax 0xffffffff
mov [ rw-data ] eax
mov [ rw-data ] esi
lea ecx [ eax + 0x800 ]
jmp r-xdata
cmp eax ecx
jb r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
mov [ eax + 0x8 ] edi
mov [ eax + 0x24 ] 0x0
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
mov [ eax + 0x38 ] edi
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov ecx [ rw-data ]
add ecx 0x800
cmp [ ebp - 0x32 ] di
je r-xdata
xor ebx ebx
mov eax [ ebp - 0x30 ]
cmp eax edi
je r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov edi [ eax ]
lea ebx [ eax + 0x4 ]
lea eax [ ebx + edi ]
mov [ ebp - 0x1c ] eax
mov esi 0x800
cmp edi esi
jl r-xdata
mov eax ebx
dec eax
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
mov [ ebp - 0x20 ] 0x1
jmp r-xdata
mov edi esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
cmp [ rw-data ] edi
jl r-xdata
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
jmp r-xdata
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
push 0x40
push 0x20
call sub_41f76d
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
call sub_41af41
retn
mov [ esi ] edi
and eax 0xff
cmp eax 0x2
jne r-xdata
mov edi [ rw-data ]
mov ecx [ ebp - 0x20 ]
lea ecx [ ecx * 4 + rw-data ]
mov [ ecx ] eax
add [ rw-data ] 0x20
lea edx [ eax + 0x800 ]
jmp r-xdata
and [ ebp - 0x20 ] 0x0
test edi edi
jle r-xdata
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov eax [ ebp - 0x1c ]
mov ecx [ eax ]
cmp ecx 0xffffffff
je r-xdata
cmp eax edx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4225be
pop ecx
pop ecx
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
inc [ ebp - 0x20 ]
inc ebx
add [ ebp - 0x1c ] 0x4
cmp [ ebp - 0x20 ] edi
jl r-xdata
cmp ecx 0xfffffffe
je r-xdata
mov [ eax + 0x4 ] 0x0
or [ eax ] 0xffffffff
mov [ eax + 0x5 ] 0xa
and [ eax + 0x8 ] 0x0
and [ eax + 0x24 ] 0x80
mov [ eax + 0x25 ] 0xa
mov [ eax + 0x26 ] 0xa
and [ eax + 0x38 ] 0x0
mov [ eax + 0x34 ] 0x0
add eax 0x40
mov edx [ ecx ]
add edx esi
inc [ ebp - 0x20 ]
inc [ esi + 0x8 ]
jmp r-xdata
mov al [ ebx ]
test al 0x1
je r-xdata
test al 0x8
jne r-xdata
mov esi [ ebp - 0x20 ]
mov eax esi
sar eax 0x5
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
mov [ esi ] eax
mov al [ ebx ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4225be
pop ecx
pop ecx
test eax eax
je r-xdata
push ecx
call [ GetFileType@IAT ]
test eax eax
je r-xdata
inc [ esi + 0x8 ]
sub_42027b
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4202a1
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_4202c7
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
push 0x0
sete al
push 0x1000
push eax
call [ HeapCreate@IAT ]
mov [ rw-data ] eax
test eax eax
jne r-xdata
xor eax eax
inc eax
mov [ rw-data ] eax
pop ebp
retn
pop ebp
retn
sub_4202f7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_42038d
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call sub_4225be
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_420446
push 0xc
push r--data
call sub_41aefc
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_41fb54
push 0x1e
call sub_41f9a9
push 0xff
call sub_41b1a7
push 0x18
call sub_41f728
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_420509
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_41adfe
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_41af41
retn
push edi
call sub_41a4ab
pop ecx
push 0xfa0
push edi
call sub_4225be
pop ecx
pop ecx
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_41a4ab
pop ecx
call sub_41adfe
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_420500
mov eax [ ebp - 0x1c ]
sub_420509
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_420446
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_41b153
pop ecx
sub_42053c
mov edi edi
push ebp
mov ebp esp
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
add ecx eax
jmp r-xdata
cmp eax ecx
jb r-xdata
mov edx [ ebp + 0x8 ]
sub edx [ eax + 0xc ]
cmp edx 0x100000
jb r-xdata
xor eax eax
pop ebp
retn
add eax 0x14
sub_42056c
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
push edi
mov edi esi
sub edi [ ecx + 0xc ]
add esi 0xfffffffc
shr edi 0xf
mov ecx edi
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0x10 ] ecx
mov ecx [ esi ]
dec ecx
mov [ ebp - 0x4 ] ecx
test cl 0x1
jne r-xdata
pop edi
pop esi
leave
retn
push ebx
lea ebx [ ecx + esi ]
mov edx [ ebx ]
mov [ ebp - 0xc ] edx
mov edx [ esi - 0x4 ]
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0xc ]
mov [ ebp + 0xc ] ebx
test dl 0x1
jne r-xdata
mov edx ecx
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
sar edx 0x4
dec edx
cmp edx 0x3f
jbe r-xdata
mov ebx [ ebp - 0x8 ]
and ebx 0x1
mov [ ebp - 0xc ] ebx
jne r-xdata
push 0x3f
pop edx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
push 0x3f
pop edx
mov ebx [ ebp + 0x8 ]
sub esi [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
sar ebx 0x4
push 0x3f
mov [ ebp + 0xc ] esi
dec ebx
pop esi
cmp ebx esi
jbe r-xdata
mov edx [ ebx + 0x8 ]
mov ebx [ ebx + 0x4 ]
mov ecx [ ebp - 0x4 ]
add ecx [ ebp - 0xc ]
mov [ edx + 0x4 ] ebx
mov edx [ ebp + 0xc ]
mov ebx [ edx + 0x4 ]
mov edx [ edx + 0x8 ]
mov [ ebx + 0x8 ] edx
mov [ ebp - 0x4 ] ecx
mov ebx 0x80000000
cmp edx 0x20
jae r-xdata
mov ecx [ ebp - 0x10 ]
lea ecx [ ecx + edx * 8 ]
mov ebx [ ecx + 0x4 ]
mov [ esi + 0x8 ] ecx
mov [ esi + 0x4 ] ebx
mov [ ecx + 0x4 ] esi
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov ecx [ esi + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
cmp ebx edx
je r-xdata
add ecx [ ebp - 0x8 ]
mov edx ecx
sar edx 0x4
dec edx
mov [ ebp - 0x4 ] ecx
cmp edx esi
jbe r-xdata
mov ebx esi
lea ecx [ edx - 0x20 ]
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx edx
shr ebx cl
lea ecx [ edx + eax + 0x4 ]
not ebx
and [ eax + edi * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov [ eax + esi - 0x4 ] eax
mov eax [ ebp - 0x10 ]
dec [ eax ]
jne r-xdata
mov cl [ edx + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ edx + eax + 0x4 ] cl
cmp edx 0x20
jae r-xdata
cmp ebx edx
je r-xdata
mov edx esi
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
pop ebx
mov eax [ rw-data ]
test eax eax
je r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov esi [ ebp + 0xc ]
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
cmp esi [ ecx + 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] edi
mov ecx [ rw-data ]
mov esi [ VirtualFree@IAT ]
push 0x4000
shl ecx 0xf
add ecx [ eax + 0xc ]
mov ebx 0x8000
push ebx
push ecx
call esi
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov edx 0x80000000
shr edx cl
or [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
mov ecx [ rw-data ]
and [ eax + ecx * 4 + 0xc4 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
dec [ eax + 0x43 ]
mov eax [ rw-data ]
mov ecx [ eax + 0x10 ]
cmp [ ecx + 0x43 ] 0x0
jne r-xdata
lea ecx [ edx - 0x20 ]
mov edx 0x80000000
shr edx cl
lea eax [ eax + edi * 4 + 0xc4 ]
or [ eax ] edx
lea ecx [ edx - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
mov ebx 0x80000000
mov ecx edx
shr ebx cl
lea eax [ eax + edi * 4 + 0x44 ]
or [ eax ] ebx
jmp r-xdata
mov ecx edx
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x8 ]
mov ecx [ ecx + 0x4 ]
mov [ esi + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov esi [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov [ esi + 0x8 ] ecx
mov esi 0x80000000
cmp ebx 0x20
jae r-xdata
cmp [ eax + 0x8 ] 0xffffffff
jne r-xdata
and [ eax + 0x4 ] 0xfffffffe
mov eax [ rw-data ]
lea ecx [ ebx - 0x20 ]
shr esi cl
not esi
and [ eax + edi * 4 + 0xc4 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
mov ecx ebx
shr esi cl
not esi
and [ eax + edi * 4 + 0x44 ] esi
dec [ ebx + eax + 0x4 ]
jne r-xdata
push ebx
push 0x0
push [ eax + 0xc ]
call esi
mov eax [ rw-data ]
push [ eax + 0x10 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
mov ecx [ rw-data ]
mov eax [ rw-data ]
imul ecx ecx 0x14
mov edx [ rw-data ]
sub ecx eax
lea ecx [ ecx + edx - 0x14 ]
push ecx
lea ecx [ eax + 0x14 ]
push ecx
push eax
call sub_41c6a0
mov eax [ ebp + 0x8 ]
add esp 0xc
dec [ rw-data ]
cmp eax [ rw-data ]
jbe r-xdata
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
and [ ecx ] esi
jmp r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
sub [ ebp + 0x8 ] 0x14
sub_420882
mov eax [ rw-data ]
push esi
mov esi [ rw-data ]
push edi
xor edi edi
cmp esi eax
jne r-xdata
imul esi esi 0x14
add esi [ rw-data ]
push 0x41c4
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov [ esi + 0x10 ] eax
cmp eax edi
je r-xdata
add eax 0x10
imul eax eax 0x14
push eax
push [ rw-data ]
push edi
push [ rw-data ]
call [ HeapReAlloc@IAT ]
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
push 0x4
push 0x2000
push 0x100000
push edi
call [ VirtualAlloc@IAT ]
mov [ esi + 0xc ] eax
cmp eax edi
jne r-xdata
add [ rw-data ] 0x10
mov esi [ rw-data ]
mov [ rw-data ] eax
pop edi
pop esi
retn
or [ esi + 0x8 ] 0xffffffff
mov [ esi ] edi
mov [ esi + 0x4 ] edi
inc [ rw-data ]
mov eax [ esi + 0x10 ]
or [ eax ] 0xffffffff
mov eax esi
push [ esi + 0x10 ]
push edi
push [ rw-data ]
call [ HeapFree@IAT ]
jmp r-xdata
sub_420932
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
push ebx
push esi
mov esi [ ecx + 0x10 ]
push edi
xor ebx ebx
jmp r-xdata
test eax eax
jge r-xdata
add eax eax
inc ebx
mov eax ebx
imul eax eax 0x204
lea eax [ eax + esi + 0x144 ]
push 0x3f
mov [ ebp - 0x8 ] eax
pop edx
mov [ eax + 0x8 ] eax
mov [ eax + 0x4 ] eax
add eax 0x8
dec edx
jne r-xdata
push 0x4
mov edi ebx
push 0x1000
shl edi 0xf
add edi [ ecx + 0xc ]
push 0x8000
push edi
call [ VirtualAlloc@IAT ]
test eax eax
jne r-xdata
lea edx [ edi + 0x7000 ]
mov [ ebp - 0x4 ] edx
cmp edi edx
ja r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x1f8
lea ecx [ edi + 0xc ]
mov [ eax + 0x4 ] ecx
mov [ ecx + 0x8 ] eax
lea ecx [ edx + 0xc ]
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
and [ esi + ebx * 4 + 0x44 ] 0x0
xor edi edi
inc edi
mov [ esi + ebx * 4 + 0xc4 ] edi
mov al [ esi + 0x43 ]
mov cl al
inc cl
test al al
mov eax [ ebp + 0x8 ]
mov [ esi + 0x43 ] cl
jne r-xdata
mov ecx edx
sub ecx edi
shr ecx 0xc
lea eax [ edi + 0x10 ]
inc ecx
pop edi
pop esi
pop ebx
leave
retn
mov edx 0x80000000
mov ecx ebx
shr edx cl
not edx
and [ eax + 0x8 ] edx
mov eax ebx
or [ eax + 0x4 ] edi
or [ eax - 0x8 ] 0xffffffff
or [ eax + 0xfec ] 0xffffffff
lea edx [ eax + 0xffc ]
mov [ eax ] edx
lea edx [ eax - 0x1004 ]
mov [ eax - 0x4 ] 0xff0
mov [ eax + 0x4 ] edx
mov [ eax + 0xfe8 ] 0xff0
add eax 0x1000
dec ecx
jne r-xdata
mov edx [ ebp - 0x4 ]
sub_420a3a
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x10 ]
push ebx
push esi
mov esi [ ebp + 0x10 ]
push edi
mov edi [ ebp + 0xc ]
mov edx edi
sub edx [ ecx + 0xc ]
add esi 0x17
shr edx 0xf
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ edi - 0x4 ]
and esi 0xfffffff0
dec ecx
cmp esi ecx
lea edi [ ecx + edi - 0x4 ]
mov ebx [ edi ]
mov [ ebp + 0x10 ] ecx
mov [ ebp - 0x4 ] ebx
jle r-xdata
jge r-xdata
test bl 0x1
jne r-xdata
xor eax eax
inc eax
mov ebx [ ebp + 0xc ]
sub [ ebp + 0x10 ] esi
lea ecx [ esi + 0x1 ]
mov [ ebx - 0x4 ] ecx
lea ebx [ ebx + esi - 0x4 ]
mov esi [ ebp + 0x10 ]
sar esi 0x4
dec esi
mov [ ebp + 0xc ] ebx
mov [ ebx - 0x4 ] ecx
cmp esi 0x3f
jbe r-xdata
xor eax eax
jmp r-xdata
add ebx ecx
cmp esi ebx
jg r-xdata
test [ ebp - 0x4 ] 0x1
jne r-xdata
push 0x3f
pop esi
pop edi
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x4 ]
sar ecx 0x4
dec ecx
mov [ ebp - 0x8 ] ecx
cmp ecx 0x3f
jbe r-xdata
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] edi
mov [ ecx + 0x4 ] ebx
mov ecx [ ebx + 0x4 ]
mov [ ecx + 0x8 ] ebx
mov ecx [ ebx + 0x4 ]
cmp ecx [ ebx + 0x8 ]
jne r-xdata
mov esi [ ebp - 0x4 ]
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx [ edi + 0x4 ]
cmp ebx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop ecx
mov [ ebp - 0x8 ] ecx
mov eax [ ebp + 0x10 ]
mov [ ebx ] eax
mov [ eax + ebx - 0x4 ] eax
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xf ] cl
inc cl
mov [ esi + eax + 0x4 ] cl
cmp esi 0x20
jae r-xdata
mov ecx [ edi + 0x4 ]
cmp ecx [ edi + 0x8 ]
jne r-xdata
push 0x3f
pop esi
mov ecx [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ecx [ edi + 0x4 ]
mov edi [ edi + 0x8 ]
mov [ ecx + 0x8 ] edi
mov ecx [ ebp + 0x10 ]
sub ecx esi
add [ ebp - 0x4 ] ecx
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov ebx 0x80000000
cmp ecx 0x20
jae r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
cmp [ ebp + 0xf ] 0x0
jne r-xdata
mov ecx [ edi + 0x8 ]
mov esi [ edi + 0x4 ]
mov [ ecx + 0x4 ] esi
mov esi [ edi + 0x8 ]
mov ecx [ edi + 0x4 ]
mov [ ecx + 0x8 ] esi
mov esi [ ebp + 0x10 ]
add esi [ ebp - 0x4 ]
mov [ ebp + 0x10 ] esi
sar esi 0x4
dec esi
cmp esi 0x3f
jbe r-xdata
mov ebx 0x80000000
cmp esi 0x20
jae r-xdata
mov edx [ ebp + 0xc ]
mov edi [ ebp - 0x4 ]
mov ecx [ ebp + 0xc ]
sar edi 0x4
dec edi
lea ecx [ ecx + esi - 0x4 ]
cmp edi 0x3f
jbe r-xdata
add ecx 0xffffffe0
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
shr ebx cl
mov ecx [ ebp - 0x8 ]
lea ecx [ ecx + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ ecx ]
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] edi
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx esi
jmp r-xdata
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] edi
push 0x3f
pop esi
lea ecx [ esi - 0x20 ]
shr ebx cl
lea ecx [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0xc4 ] ebx
dec [ ecx ]
jne r-xdata
mov ecx esi
shr ebx cl
lea esi [ esi + eax + 0x4 ]
not ebx
and [ eax + edx * 4 + 0x44 ] ebx
dec [ esi ]
jne r-xdata
mov ebx [ ebp - 0xc ]
lea ebx [ ebx + edi * 8 ]
mov [ ebp + 0x10 ] ebx
mov ebx [ ebx + 0x4 ]
mov [ ecx + 0x4 ] ebx
mov ebx [ ebp + 0x10 ]
mov [ ecx + 0x8 ] ebx
mov [ ebx + 0x4 ] ecx
mov ebx [ ecx + 0x4 ]
mov [ ebx + 0x8 ] ecx
mov ebx [ ecx + 0x4 ]
cmp ebx [ ecx + 0x8 ]
jne r-xdata
push 0x3f
pop edi
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx 0x80000000
shr edx cl
or [ eax ] edx
mov ebx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
and [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
and [ ecx ] ebx
jmp r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x4 ]
lea eax [ edx + esi - 0x4 ]
mov [ eax ] ecx
mov [ ecx + eax - 0x4 ] ecx
jmp r-xdata
mov cl [ edi + eax + 0x4 ]
mov [ ebp + 0x13 ] cl
inc cl
mov [ edi + eax + 0x4 ] cl
cmp edi 0x20
jae r-xdata
lea eax [ esi + 0x1 ]
mov [ edx - 0x4 ] eax
mov [ edx + esi - 0x8 ] eax
jmp r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
cmp [ ebp + 0x13 ] 0x0
jne r-xdata
lea eax [ eax + edx * 4 + 0xc4 ]
lea ecx [ edi - 0x20 ]
lea ecx [ edi - 0x20 ]
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx + 0x4 ] ebx
lea eax [ eax + edx * 4 + 0x44 ]
mov ecx edi
jmp r-xdata
mov ecx edi
mov ebx 0x80000000
shr ebx cl
mov ecx [ ebp + 0x8 ]
or [ ecx ] ebx
mov edx 0x80000000
shr edx cl
or [ eax ] edx
sub_420d1b
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
mov ecx [ ebp + 0x8 ]
imul eax eax 0x14
add eax [ rw-data ]
add ecx 0x17
and ecx 0xfffffff0
mov [ ebp - 0x10 ] ecx
sar ecx 0x4
push ebx
dec ecx
cmp ecx 0x20
push esi
push edi
jge r-xdata
add ecx 0xffffffe0
or edx 0xffffffff
xor esi esi
shr edx cl
mov [ ebp - 0x8 ] edx
or esi 0xffffffff
shr esi cl
or [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx eax
jb r-xdata
mov ecx [ rw-data ]
mov ebx ecx
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx eax
jne r-xdata
add ebx 0x14
mov [ rw-data ] ebx
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
mov [ ebp - 0x4 ] edx
cmp edx 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
mov edx [ eax + 0xc4 ]
lea ecx [ eax + 0x44 ]
mov ecx [ eax + edx * 4 + 0xc4 ]
mov edi [ eax + edx * 4 + 0x44 ]
and ecx [ ebp - 0x8 ]
and edi esi
or ecx edi
jne r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov edx [ ebp - 0x4 ]
inc [ ebp - 0x4 ]
mov edx [ ecx + 0x84 ]
add ecx 0x4
jmp r-xdata
mov ecx edx
imul ecx ecx 0x204
lea ecx [ ecx + eax + 0x144 ]
mov [ ebp - 0xc ] ecx
mov ecx [ eax + edx * 4 + 0x44 ]
xor edi edi
and ecx esi
jne r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ ebx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
cmp ebx ecx
jne r-xdata
test ecx ecx
jge r-xdata
mov ecx [ eax + edx * 4 + 0xc4 ]
and ecx [ ebp - 0x8 ]
push 0x20
pop edi
jmp r-xdata
mov edi [ ecx ]
and edx [ ebp - 0x8 ]
and edi esi
or edx edi
jne r-xdata
add ebx 0x14
jmp r-xdata
add ecx ecx
inc edi
mov ecx [ ebp - 0xc ]
mov edx [ ecx + edi * 8 + 0x4 ]
mov ecx [ edx ]
sub ecx [ ebp - 0x10 ]
mov esi ecx
sar esi 0x4
dec esi
cmp esi 0x3f
mov [ ebp - 0x8 ] ecx
jle r-xdata
cmp ebx eax
jb r-xdata
cmp esi edi
je r-xdata
push 0x3f
pop esi
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx eax
jne r-xdata
test ecx ecx
je r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
add ebx 0x14
mov [ ebp + 0x8 ] ebx
push ebx
call sub_420932
pop ecx
mov ecx [ ebx + 0x10 ]
mov [ ecx ] eax
mov eax [ ebx + 0x10 ]
cmp [ eax ] 0xffffffff
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
mov esi [ ebp - 0x10 ]
add edx ecx
lea ecx [ esi + 0x1 ]
mov [ edx ] ecx
mov [ edx + esi - 0x4 ] ecx
mov esi [ ebp - 0xc ]
mov ecx [ esi ]
lea edi [ ecx + 0x1 ]
mov [ esi ] edi
test ecx ecx
jne r-xdata
mov [ edx ] ecx
mov [ ecx + edx - 0x4 ] ecx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
mov ecx [ edx + 0x8 ]
mov edi [ edx + 0x4 ]
mov [ ecx + 0x4 ] edi
mov ecx [ edx + 0x4 ]
mov edi [ edx + 0x8 ]
mov [ ecx + 0x8 ] edi
je r-xdata
cmp edi 0x20
mov ebx 0x80000000
jge r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x8 ] ebx
cmp ebx ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
lea eax [ edx + 0x4 ]
cmp ebx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
lea ecx [ ecx + esi * 8 ]
mov edi [ ecx + 0x4 ]
mov [ edx + 0x8 ] ecx
mov [ edx + 0x4 ] edi
mov [ ecx + 0x4 ] edx
mov ecx [ edx + 0x4 ]
mov [ ecx + 0x8 ] edx
mov ecx [ edx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
lea ecx [ edi - 0x20 ]
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea ecx [ eax + ecx * 4 + 0xc4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
and [ ecx ] ebx
dec [ edi ]
mov [ ebp - 0x14 ] ebx
jne r-xdata
mov ecx edi
shr ebx cl
mov ecx [ ebp - 0x4 ]
lea edi [ eax + edi + 0x4 ]
not ebx
mov [ ebp - 0x14 ] ebx
and ebx [ eax + ecx * 4 + 0x44 ]
mov [ eax + ecx * 4 + 0x44 ] ebx
dec [ edi ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
cmp ebx ecx
jne r-xdata
mov ecx [ ebp - 0x4 ]
cmp ecx [ rw-data ]
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov cl [ esi + eax + 0x4 ]
mov [ ebp + 0xb ] cl
inc cl
cmp esi 0x20
mov [ esi + eax + 0x4 ] cl
jge r-xdata
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp - 0x14 ]
and [ ebx + 0x4 ] ecx
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov ebx [ ebp + 0x8 ]
and [ ebx ] ecx
jmp r-xdata
add ebx 0x14
call sub_420882
mov ebx eax
mov [ ebp + 0x8 ] ebx
test ebx ebx
jne r-xdata
and [ rw-data ] 0x0
cmp [ ebp + 0xb ] 0x0
jne r-xdata
cmp [ ebp + 0xb ] 0x0
jne r-xdata
mov ecx [ ebp - 0x4 ]
lea edi [ eax + ecx * 4 + 0xc4 ]
lea ecx [ esi - 0x20 ]
mov esi 0x80000000
shr esi cl
or [ edi ] esi
lea ecx [ esi - 0x20 ]
mov edi 0x80000000
shr edi cl
or [ ebx + 0x4 ] edi
mov ecx esi
mov edi 0x80000000
shr edi cl
mov ecx [ ebp - 0x4 ]
or [ eax + ecx * 4 + 0x44 ] edi
jmp r-xdata
mov edi 0x80000000
mov ecx esi
shr edi cl
or [ ebx ] edi
sub_42100f
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call sub_41f051
pop ecx
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_421037
mov edi edi
push ebp
mov ebp esp
push esi
lea eax [ ebp + 0x8 ]
push eax
mov esi ecx
call sub_425df4
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421060
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_425ea4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_421087
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_41f6a0
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_4210e6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434f4d
je r-xdata
call sub_41f29d
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn
call sub_41f29d
add eax 0x90
dec [ eax ]
call sub_41f29d
and [ eax + 0x90 ] 0x0
jmp sub_421cf0
sub_42112f
push 0x10
push r--data
call sub_41aefc
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4211f5
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_41f29d
add eax 0x90
inc [ eax ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_41af41
retn
call sub_421d3c
call sub_421d3c
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
shl eax 0x3
mov ecx [ edi + 0x8 ]
add ecx eax
mov esi [ ecx ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax + 0x4 ]
call sub_421d90
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_421210
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_41f29d
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_421255
push 0x8
push r--data
call sub_41aefc
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_41af41
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_41a585
mov [ ebp - 0x4 ] 0xfffffffe
sub_4212aa
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_4212d3
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_421d3c
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_421087
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_421397
push 0x2c
push r--data
call sub_41aefc
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_41a834
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_41f29d
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_41f29d
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_41f29d
mov [ eax + 0x88 ] esi
call sub_41f29d
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_41a8d9
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4214bd
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_421430
mov esp [ ebp - 0x18 ]
call sub_41f29d
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_42112f
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4214bd
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
imul eax eax 0x14
add eax ebx
mov edx [ eax + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_4214bd
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_41a887
pop ecx
call sub_41f29d
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_41f29d
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_41a860
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_421255
pop ecx
pop ecx
sub_421533
push 0xc
push r--data
call sub_41aefc
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_421d3c
push ebx
push esi
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_425ee8
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_41c6a0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_425ee8
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_4212aa
pop ecx
pop ecx
push eax
push esi
call sub_41c6a0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_41af41
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_4212aa
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_4216b2
push 0x8
push r--data
call sub_41aefc
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4212aa
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41a585
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_421533
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41af41
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_4212aa
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_41a585
jmp r-xdata
sub_421744
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_4216b2
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_41a553
call sub_41a58c
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_42112f
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_421397
add esp 0x28
test eax eax
je r-xdata
sub_4217b2
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_41f29d
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_41f29d
lea edi [ eax + 0x80 ]
call sub_41f048
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_41a7bf
mov edi eax
mov eax [ ebp - 0x4 ]
add esp 0x14
cmp eax [ ebp - 0x8 ]
jae r-xdata
call sub_421d3c
cmp [ esi ] 0xe0434f4d
je r-xdata
pop edi
push ebx
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_41a649
add esp 0x1c
test eax eax
jne r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
add edi 0x14
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp esi [ edi + 0x4 ]
jg r-xdata
cmp esi [ edi ]
jl r-xdata
pop ebx
mov eax [ edi + 0xc ]
mov ecx [ edi + 0x10 ]
shl eax 0x4
add eax ecx
mov ecx [ eax - 0xc ]
test ecx ecx
je r-xdata
lea ebx [ eax - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_421744
mov esi [ ebp + 0x1c ]
add esp 0x1c
sub_4218a6
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
cmp eax 0x80
push esi
push edi
mov [ ebp - 0x1 ] 0x0
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_421d3c
cmp ecx eax
jl r-xdata
cmp ecx 0xffffffff
mov [ ebp - 0x8 ] ecx
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_41f29d
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_421d3c
call sub_421cf0
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4217b2
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_41f29d
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_41f29d
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_41f29d
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_425ee8
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_41a7bf
add esp 0x14
mov edi eax
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_421d3c
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_421255
pop ecx
pop ecx
mov edi [ ebp + 0x18 ]
mov eax [ ebp - 0x8 ]
cmp [ edi ] eax
jg r-xdata
call sub_41f29d
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
add edi 0x14
jmp r-xdata
cmp eax [ edi + 0x4 ]
jg r-xdata
call sub_41f29d
mov edi [ eax + 0x94 ]
call sub_41f29d
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_4212d3
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x1c ]
jae r-xdata
mov eax [ edi + 0x10 ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0xc ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_4212d3
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_419e43
test al al
jne r-xdata
call sub_421d3c
cmp eax 0x19930522
jne r-xdata
call sub_41f29d
call sub_41f29d
call sub_41f29d
mov [ eax + 0x88 ] esi
call sub_41f29d
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x20 ] eax
call sub_421087
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_421255
pop ecx
pop ecx
push r--data
lea ecx [ ebp - 0x2c ]
call sub_421037
push r--data
lea eax [ ebp - 0x2c ]
push eax
call sub_41ad31
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov ebx [ ebp - 0xc ]
push [ ebp + 0x20 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp - 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_421744
mov esi [ ebp + 0x8 ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_41a58c
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42112f
add esp 0x10
push [ esi + 0x1c ]
call sub_42134e
sub_421c0a
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_41f29d
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_4218a6
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_42112f
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_421d3c
push 0x8
push r--data
call sub_41aefc
push [ rw-data ]
call sub_41f051
pop ecx
test eax eax
je r-xdata
call sub_421cf0
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_421d90
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_426008
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_426008
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_421ddc
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
test [ rw-data ] 0x1
push esi
je r-xdata
call sub_4223e3
test eax eax
je r-xdata
push 0xa
call sub_41f9a9
pop ecx
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_4223f0
pop ecx
push 0x3
call sub_41b3d9
int3
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov esi [ ebp + 0x4 ]
lea eax [ ebp + 0x4 ]
mov [ ebp - 0x20c ] eax
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] esi
mov eax [ eax - 0x4 ]
push 0x50
mov [ ebp - 0x21c ] eax
lea eax [ ebp - 0x328 ]
push 0x0
push eax
call sub_41ae80
lea eax [ ebp - 0x328 ]
add esp 0xc
mov [ ebp - 0x2d8 ] eax
lea eax [ ebp - 0x2d0 ]
push 0x0
mov [ ebp - 0x328 ] 0x40000015
mov [ ebp - 0x31c ] esi
mov [ ebp - 0x2d4 ] eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x2d8 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
sub_421ef3
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
and edx [ ebp + 0xc ]
not ecx
and ecx eax
or ecx edx
mov [ rw-data ] ecx
pop ebp
retn
sub_421f23
push ebp
mov ebp esp
sub esp 0x4
mov [ ebp - 0x4 ] edi
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
shr ecx 0x7
pxor xmm0 xmm0
jmp r-xdata
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm0
movdqa [ edi + 0x20 ] xmm0
movdqa [ edi + 0x30 ] xmm0
movdqa [ edi + 0x40 ] xmm0
movdqa [ edi + 0x50 ] xmm0
movdqa [ edi + 0x60 ] xmm0
movdqa [ edi + 0x70 ] xmm0
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_421f7a
push ebp
mov ebp esp
sub esp 0x10
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0x8 ]
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
test edi edi
jne r-xdata
neg edi
add edi 0x10
mov [ ebp - 0x10 ] edi
xor eax eax
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
[ edi ]
mov eax [ ebp - 0x10 ]
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0x10 ]
add ecx eax
sub edx eax
push edx
push 0x0
push ecx
call sub_421f7a
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
and edx 0x7f
mov [ ebp - 0xc ] edx
cmp ecx edx
je r-xdata
test edx edx
je r-xdata
sub ecx edx
push ecx
push eax
call sub_421f23
add esp 0x8
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
add eax [ ebp + 0x10 ]
sub eax edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov edi [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
[ edi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_422059
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
xor eax eax
push ebx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] eax
push ebx
pushfd
pop eax
mov ecx eax
xor eax 0x200000
push eax
popfd
pushfd
pop edx
sub edx ecx
je r-xdata
pop ebx
test [ ebp - 0x4 ] 0x4000000
je r-xdata
push ecx
popfd
xor eax eax
cpuid
mov [ ebp - 0xc ] eax
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] edx
mov [ ebp - 0x10 ] ecx
mov eax 0x1
cpuid
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
call sub_422009
test eax eax
je r-xdata
xor eax eax
inc eax
jmp r-xdata
pop ebx
leave
retn
sub_4220c8
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_422158
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_426011
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_426030
jmp r-xdata
sub_422158
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_419730
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_4220c8
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4221ba
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_4221ea
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push 0x0
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_422220
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_422260
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
jbe r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4222b0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_41af60
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_422220
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_422260
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42236d
mov edi edi
push esi
push edi
xor edi edi
lea esi [ edi + rw-data ]
push [ esi ]
call sub_41efd6
add edi 0x4
pop ecx
mov [ esi ] eax
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_4223ac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_4223f0
push 0x20
push r--data
call sub_41aefc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_41f224
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_41af41
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_4223ac
mov esi eax
add esi 0x8
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_41b3d9
mov [ ebp - 0x1c ] 0x1
push eax
call sub_41f051
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x16
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c66c
add esp 0x14
jmp r-xdata
mov [ ebp - 0x20 ] eax
pop ecx
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_420509
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_41f048
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ rw-data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_422564
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ rw-data ]
mov edx [ rw-data ]
add ecx edx
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_4225be
push 0x10
push r--data
call sub_41aefc
and [ ebp - 0x4 ] 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ InitializeCriticalSectionAndSpinCount@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_42261e
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov esi [ ebp + 0x8 ]
movsx eax [ esi ]
push eax
call sub_426202
cmp eax 0x65
jmp r-xdata
pop ecx
jne r-xdata
inc esi
movzx eax [ esi ]
push eax
call sub_426084
test eax eax
movsx eax [ esi ]
push eax
call sub_426202
pop ecx
cmp eax 0x78
jne r-xdata
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov al [ esi ]
mov cl [ ecx ]
mov [ esi ] cl
inc esi
inc esi
inc esi
mov cl [ esi ]
mov [ esi ] al
mov al cl
mov cl [ esi ]
inc esi
test cl cl
jne r-xdata
pop esi
cmp [ ebp - 0x4 ] cl
je r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_422691
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp + 0x8 ]
mov cl [ eax ]
mov esi [ ebp - 0x10 ]
test cl cl
je r-xdata
mov cl [ eax ]
inc eax
test cl cl
je r-xdata
mov edx [ esi + 0xbc ]
mov edx [ edx ]
mov dl [ edx ]
cmp [ ebp - 0x4 ] 0x0
pop esi
je r-xdata
jmp r-xdata
inc eax
mov cl [ eax ]
test cl cl
jne r-xdata
leave
retn
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov cl [ eax ]
test cl cl
jne r-xdata
cmp cl dl
je r-xdata
cmp cl 0x65
je r-xdata
mov edx eax
cmp cl 0x45
je r-xdata
dec eax
cmp [ eax ] 0x30
je r-xdata
mov ecx [ esi + 0xbc ]
mov ecx [ ecx ]
push ebx
mov bl [ eax ]
cmp bl [ ecx ]
pop ebx
jne r-xdata
inc eax
mov cl [ edx ]
inc eax
inc edx
mov [ eax ] cl
test cl cl
jne r-xdata
dec eax
sub_422713
mov edi edi
push ebp
mov ebp esp
fldz
mov eax [ ebp + 0x8 ]
fcomp [ eax ]
fnstsw ax
test ah 0x41
jpe r-xdata
xor eax eax
pop ebp
retn
xor eax eax
inc eax
pop ebp
retn
sub_42272f
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
cmp [ ebp + 0x8 ] 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
je r-xdata
lea eax [ ebp + 0x8 ]
push eax
call sub_4262d6
mov eax [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
lea eax [ ebp - 0x8 ]
push eax
call sub_42622e
mov ecx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov ecx [ ebp - 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
add esp 0xc
leave
retn
sub_42278b
mov edi edi
push esi
mov esi eax
test edi edi
je r-xdata
pop esi
retn
push esi
call sub_424c80
inc eax
push eax
push esi
add esi edi
push esi
call sub_41c6a0
add esp 0x10
sub_4227d0
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x10 ]
mov ebx eax
call sub_419be7
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebp + 0x8 ] esi
jbe r-xdata
call sub_41adfe
push 0x16
cmp [ ebp + 0xc ] esi
jle r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
xor eax eax
mov eax [ ebp + 0xc ]
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0x18 ] 0x0
je r-xdata
call sub_41adfe
push 0x22
jmp r-xdata
add eax 0x9
cmp [ ebp + 0x8 ] eax
ja r-xdata
mov edi [ ebp + 0x14 ]
cmp [ edi ] 0x2d
mov esi ebx
jne r-xdata
mov edx [ ebp + 0x14 ]
xor eax eax
cmp [ ebp + 0xc ] esi
setg al
xor ecx ecx
cmp [ edx ] 0x2d
sete cl
mov edi eax
add ecx ebx
mov eax ecx
call sub_42278b
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
mov [ ebx ] 0x2d
lea esi [ ebx + 0x1 ]
xor eax eax
cmp [ ebp + 0x18 ] al
sete al
add eax [ ebp + 0xc ]
add esi eax
cmp [ ebp + 0x8 ] 0xffffffff
jne r-xdata
lea eax [ esi + 0x1 ]
mov cl [ eax ]
mov [ esi ] cl
mov esi eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
sub ebx esi
add ebx [ ebp + 0x8 ]
or ebx 0xffffffff
jmp r-xdata
lea ecx [ esi + 0x2 ]
cmp [ ebp + 0x10 ] ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
push r--data
push ebx
push esi
call sub_425a7b
add esp 0xc
xor ebx ebx
test eax eax
je r-xdata
mov eax [ edi + 0xc ]
inc esi
cmp [ eax ] 0x30
je r-xdata
mov [ esi ] 0x45
test [ rw-data ] 0x1
je r-xdata
mov eax [ edi + 0x4 ]
dec eax
jns r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ecx ] 0x30
jne r-xdata
inc esi
cmp eax 0x64
jl r-xdata
neg eax
mov [ esi ] 0x2d
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push 0x3
lea eax [ ecx + 0x1 ]
push eax
push ecx
call sub_41c6a0
add esp 0xc
inc esi
cmp eax 0xa
jl r-xdata
cdq
push 0x64
pop edi
idiv edi
add [ esi ] al
mov eax edx
add [ esi + 0x1 ] al
cdq
push 0xa
pop edi
idiv edi
add [ esi ] al
mov eax edx
sub_42293f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4264f5
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
mov esi [ ebp + 0x14 ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
xor ecx ecx
cmp esi ebx
setg cl
sub eax ecx
or eax 0xffffffff
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x2c ]
push ebx
push eax
push [ ebp + 0x18 ]
mov eax edi
push esi
push [ ebp + 0x10 ]
call sub_4227d0
add esp 0x18
mov [ edi ] bl
jmp r-xdata
lea ecx [ ebp - 0x2c ]
push ecx
lea ecx [ esi + 0x1 ]
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
xor ecx ecx
cmp esi ebx
setg cl
add eax edi
add ecx eax
push ecx
call sub_42637e
add esp 0x10
cmp eax ebx
je r-xdata
sub_422a0f
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42293f
add esp 0x18
pop ebp
retn
sub_422a2f
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
push esi
push edi
push [ ebp + 0x1c ]
lea ecx [ ebp - 0x24 ]
mov [ ebp - 0x14 ] 0x3ff
xor edi edi
mov [ ebp - 0x4 ] 0x30
call sub_419be7
cmp [ ebp + 0x14 ] edi
jge r-xdata
mov esi [ ebp + 0xc ]
cmp esi edi
jne r-xdata
mov [ ebp + 0x14 ] edi
cmp [ ebp + 0x10 ] edi
jbe r-xdata
call sub_41adfe
push 0x16
mov eax [ ebp + 0x14 ]
add eax 0xb
mov [ esi ] 0x0
cmp [ ebp + 0x10 ] eax
ja r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov edi [ ebp + 0x8 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x4 ]
mov ecx eax
shr ecx 0x14
mov edx 0x7ff
push ebx
and ecx edx
xor ebx ebx
cmp ecx edx
jne r-xdata
call sub_41adfe
push 0x22
jmp r-xdata
pop edi
pop esi
leave
retn
and eax 0x80000000
xor ecx ecx
or ecx eax
je r-xdata
test ebx ebx
jne r-xdata
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov ebx [ ebp + 0x18 ]
mov [ esi ] 0x30
inc esi
test ebx ebx
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
mov ecx [ edi + 0x4 ]
inc esi
neg ebx
sbb ebx ebx
and ebx 0xffffffe0
and ecx 0x7ff00000
xor eax eax
add ebx 0x27
xor edx edx
or eax ecx
jne r-xdata
mov [ esi ] 0x2d
inc esi
mov eax [ ebp + 0x10 ]
cmp eax 0xffffffff
jne r-xdata
mov [ esi ] 0x31
inc esi
mov [ esi ] 0x30
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
inc esi
or eax ecx
jne r-xdata
add eax 0xfffffffe
or eax eax
jmp r-xdata
mov ecx [ ebp - 0x24 ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax ] dl
jmp r-xdata
mov [ ebp - 0x14 ] 0x3fe
jmp r-xdata
mov [ ebp - 0x14 ] edx
jmp r-xdata
cmp [ ebx ] 0x2d
jne r-xdata
cmp [ ebp - 0x18 ] 0x0
mov [ esi ] 0x0
je r-xdata
push 0x0
push [ ebp + 0x14 ]
lea ebx [ esi + 0x2 ]
push eax
push ebx
push edi
call sub_422a0f
add esp 0x14
test eax eax
je r-xdata
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] 0xf0000
cmp eax edx
jbe r-xdata
mov ecx [ edi + 0x4 ]
mov eax [ edi ]
and ecx 0xfffff
mov [ ebp - 0x8 ] ecx
ja r-xdata
mov eax esi
inc esi
mov [ ebp + 0xc ] eax
cmp [ ebp + 0x14 ] edx
jne r-xdata
mov [ esi ] 0x30
inc esi
cmp [ ebp + 0x18 ] 0x0
push 0x65
sete al
dec al
and al 0xe0
add al 0x78
mov [ esi ] al
inc esi
push esi
call sub_4260c0
pop ecx
pop ecx
test eax eax
je r-xdata
mov [ esi ] 0x2d
inc esi
pop ebx
mov ecx [ ebp - 0x1c ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
jl r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_426670
add ax 0x30
movzx eax ax
cmp ax 0x39
jbe r-xdata
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x18 ] 0x0
sete cl
dec cl
and cl 0xe0
add cl 0x70
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
jmp r-xdata
mov edx [ edi + 0x4 ]
and edx [ ebp - 0x8 ]
mov eax [ edi ]
movsx ecx [ ebp - 0x4 ]
and eax [ ebp - 0xc ]
and edx 0xfffff
call sub_426670
cmp ax 0x8
jbe r-xdata
mov ecx [ ebp - 0x8 ]
sub [ ebp - 0x4 ] 0x4
mov [ esi ] al
mov eax [ ebp - 0xc ]
shrd eax ecx 0x4
shr ecx 0x4
inc esi
dec [ ebp + 0x14 ]
cmp [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] ecx
jge r-xdata
add eax ebx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jne r-xdata
push [ ebp + 0x14 ]
push 0x30
push esi
call sub_41ae80
add esp 0xc
add esi [ ebp + 0x14 ]
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ esi - 0x1 ]
cmp [ ebp + 0x14 ] 0x0
jle r-xdata
cmp [ ebp + 0x18 ] 0x0
mov cl 0x34
sete al
dec al
and al 0xe0
add al 0x70
mov [ esi ] al
mov eax [ edi ]
mov edx [ edi + 0x4 ]
inc esi
call sub_426670
xor ebx ebx
and eax 0x7ff
and edx ebx
sub eax [ ebp - 0x14 ]
push ebx
pop ecx
sbb edx ecx
js r-xdata
mov esi eax
mov [ eax ] 0x30
dec eax
jmp r-xdata
cmp cl 0x46
jne r-xdata
mov [ esi ] 0x2d
inc esi
neg eax
adc edx ebx
neg edx
jg r-xdata
mov cl [ eax ]
cmp cl 0x66
je r-xdata
cmp eax [ ebp + 0xc ]
je r-xdata
test edx edx
jl r-xdata
mov ecx 0x3e8
jg r-xdata
mov [ esi ] 0x2b
inc esi
jmp r-xdata
cmp eax ebx
jb r-xdata
inc [ eax - 0x1 ]
mov cl [ eax ]
cmp cl 0x39
jne r-xdata
cmp esi edi
jne r-xdata
jg r-xdata
push ebx
push ecx
push edx
push eax
call sub_426590
add al 0x30
mov [ esi ] al
inc esi
mov [ ebp - 0x10 ] edx
mov eax ecx
mov edx ebx
cmp esi edi
jne r-xdata
cmp eax ecx
jb r-xdata
cmp edx ebx
mov edi esi
mov [ esi ] 0x30
jl r-xdata
inc cl
mov [ eax ] cl
jmp r-xdata
add bl 0x3a
mov [ eax ] bl
jmp r-xdata
push 0x0
push 0xa
push edx
push eax
call sub_426590
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov [ ebp - 0x10 ] ebx
test edx edx
jl r-xdata
push 0x0
push 0x64
push edx
push eax
call sub_426590
add al 0x30
mov [ esi ] al
mov [ ebp - 0x10 ] edx
inc esi
mov eax ecx
mov edx ebx
cmp eax 0x64
jb r-xdata
add al 0x30
mov [ esi ] al
mov [ esi + 0x1 ] 0x0
jg r-xdata
cmp eax 0xa
jb r-xdata
sub_422da2
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push [ ebp + 0x14 ]
mov ebx eax
mov esi [ ebx + 0x4 ]
mov edi ecx
lea ecx [ ebp - 0x10 ]
dec esi
call sub_419be7
test edi edi
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jbe r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebx ] 0x2d
mov esi edi
jne r-xdata
cmp esi [ ebp + 0xc ]
jne r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebx + 0x4 ]
xor edi edi
inc edi
test eax eax
jg r-xdata
mov [ edi ] 0x2d
lea esi [ edi + 0x1 ]
xor eax eax
cmp [ ebx ] 0x2d
sete al
add eax esi
add eax edi
mov [ eax ] 0x30
mov [ eax + 0x1 ] 0x0
add esi eax
mov eax esi
call sub_42278b
mov [ esi ] 0x30
inc esi
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
call sub_42278b
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xbc ]
mov eax [ eax ]
mov al [ eax ]
mov [ esi ] al
mov ebx [ ebx + 0x4 ]
inc esi
test ebx ebx
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jle r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
neg ebx
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ ebp + 0xc ] ebx
cmp [ ebp + 0xc ] ebx
jl r-xdata
mov edi [ ebp + 0xc ]
mov eax esi
call sub_42278b
push edi
push 0x30
push esi
call sub_41ae80
add esp 0xc
sub_422e99
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
push 0x16
pop esi
push esi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x2c ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4264f5
xor ebx ebx
add esp 0x14
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x10 ]
cmp eax ebx
jbe r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
xor ecx ecx
cmp [ ebp - 0x2c ] 0x2d
sete cl
sub eax ecx
or eax eax
jmp r-xdata
push [ ebp + 0x18 ]
lea eax [ ebp - 0x2c ]
push ebx
push esi
push [ ebp + 0x10 ]
mov ecx edi
call sub_422da2
add esp 0x10
mov [ edi ] bl
jmp r-xdata
mov esi [ ebp + 0x14 ]
lea ecx [ ebp - 0x2c ]
push ecx
mov ecx [ ebp - 0x28 ]
add ecx esi
push ecx
push eax
xor eax eax
cmp [ ebp - 0x2c ] 0x2d
sete al
add eax edi
push eax
call sub_42637e
add esp 0x10
cmp eax ebx
je r-xdata
sub_422f54
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
push esi
mov esi [ ebp + 0xc ]
push edi
push 0x16
pop edi
push edi
lea ecx [ ebp - 0x1c ]
push ecx
lea ecx [ ebp - 0x30 ]
push ecx
push [ eax + 0x4 ]
push [ eax ]
call sub_4264f5
xor ebx ebx
add esp 0x14
cmp esi ebx
jne r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx ebx
jbe r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] edi
call sub_41c66c
add esp 0x14
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x30 ] 0x2d
sete al
lea edi [ eax + esi ]
cmp ecx 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
sub ecx eax
or ecx ecx
jmp r-xdata
mov eax [ ebp - 0x2c ]
dec eax
cmp [ ebp - 0x20 ] eax
setl cl
cmp eax 0xfffffffc
jl r-xdata
mov [ esi ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push [ ebp + 0x14 ]
push ecx
push edi
call sub_42637e
add esp 0x10
cmp eax ebx
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push eax
push [ ebp + 0x18 ]
mov eax esi
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
call sub_4227d0
add esp 0x18
cmp eax [ ebp + 0x14 ]
jge r-xdata
cmp cl bl
je r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x30 ]
push 0x1
push [ ebp + 0x14 ]
mov ecx esi
push [ ebp + 0x10 ]
call sub_422da2
add esp 0x10
jmp r-xdata
mov al [ edi ]
inc edi
test al al
jne r-xdata
mov [ edi - 0x2 ] bl
sub_42304e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x14 ]
cmp eax 0x65
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42293f
cmp eax 0x45
je r-xdata
cmp eax 0x66
jne r-xdata
cmp eax 0x61
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422e99
add esp 0x14
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422a2f
jmp r-xdata
cmp eax 0x41
je r-xdata
add esp 0x18
pop ebp
retn
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_422f54
jmp r-xdata
sub_4230d6
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42304e
add esp 0x1c
pop ebp
retn
sub_4230f9
mov edi edi
push esi
push 0x30000
push 0x10000
xor esi esi
push esi
call sub_42668f
add esp 0xc
test eax eax
je r-xdata
pop esi
retn
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
sub_423162
push r--data
call [ GetModuleHandleA@IAT ]
test eax eax
je r-xdata
jmp r-xdata
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
fld [ r--data ]
fstp [ ebp - 0x10 ]
fld [ r--data ]
fstp [ ebp - 0x18 ]
fld [ ebp - 0x18 ]
fdiv [ ebp - 0x10 ]
fmul [ ebp - 0x10 ]
fsubr [ ebp - 0x18 ]
fstp [ ebp - 0x8 ]
fld1
fcomp [ ebp - 0x8 ]
fnstsw ax
test ah 0x5
jpe r-xdata
push 0x0
call eax
retn
xor eax eax
leave
retn
xor eax eax
inc eax
leave
retn
sub_423190
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_423225
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x4 ] edi
cmp esi edi
jne r-xdata
push 0x24
push 0xff
push esi
call sub_41ae80
mov eax [ ebp + 0xc ]
add esp 0xc
cmp eax edi
je r-xdata
call sub_41adfe
push 0x16
pop esi
push edi
push edi
push edi
push edi
push edi
mov [ eax ] esi
call sub_41c66c
add esp 0x14
mov ecx [ eax ]
mov eax [ eax + 0x4 ]
cmp eax 0xffffffff
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] eax
jg r-xdata
pop edi
pop esi
leave
retn
cmp eax 0x7
jl r-xdata
jl r-xdata
push ebx
push edi
push 0x1e13380
push eax
push ecx
call sub_41b7a0
mov ecx eax
add ecx 0x46
lea eax [ ecx + 0x12b ]
cdq
mov ebx 0x190
idiv ebx
lea edi [ ecx - 0x1 ]
push 0x64
mov [ ebp - 0x8 ] edi
mov [ ebp + 0x8 ] ecx
mov ebx eax
mov eax edi
cdq
pop edi
idiv edi
push 0xffffffff
push 0xfffffe93
sub ebx eax
mov eax [ ebp - 0x8 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
lea eax [ ebx + eax - 0x11 ]
cdq
mov edi eax
lea eax [ ecx - 0x46 ]
mov ebx edx
cdq
push edx
push eax
call sub_41b760
sub eax edi
sbb edx ebx
push 0x0
mov ebx 0x15180
push ebx
push edx
push eax
call sub_41b760
mov edi [ ebp - 0x10 ]
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0xc ] 0x0
jg r-xdata
jg r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
jmp r-xdata
cmp ecx 0xffff5740
jae r-xdata
mov eax [ ebp + 0x8 ]
mov ecx eax
and ecx 0x80000003
jns r-xdata
jl r-xdata
cmp ecx 0x934126cf
ja r-xdata
mov eax esi
jmp r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp - 0x8 ]
add edi 0x1e13380
adc [ ebp - 0xc ] 0x0
mov ecx eax
and ecx 0x80000003
mov [ ebp + 0x8 ] eax
jns r-xdata
test edi edi
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
jne r-xdata
dec ecx
or ecx 0xfffffffc
inc ecx
mov eax [ ebp + 0x8 ]
push 0x0
push ebx
push [ ebp - 0xc ]
mov [ esi + 0x14 ] eax
push edi
call sub_41b7a0
push 0xffffffff
mov [ esi + 0x1c ] eax
cdq
push 0xfffeae80
push edx
push eax
call sub_41b760
add edi eax
adc [ ebp - 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
mov edx rw-data
jne r-xdata
mov [ ebp - 0x4 ] 0x1
add eax 0x76c
cdq
mov ecx 0x190
idiv ecx
test edx edx
jne r-xdata
push 0x64
cdq
pop ecx
idiv ecx
test edx edx
jne r-xdata
mov eax [ esi + 0x1c ]
xor ecx ecx
inc ecx
cmp [ edx + 0x4 ] eax
jge r-xdata
mov edx rw-data
add edi ebx
adc [ ebp - 0xc ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec ecx
mov [ esi + 0x10 ] ecx
sub eax [ edx + ecx * 4 ]
push 0x0
mov [ esi + 0xc ] eax
mov eax [ ebp + 0xc ]
push ebx
push [ eax + 0x4 ]
push [ eax ]
call sub_41b7a0
push 0x7
add eax 0x4
pop ecx
cdq
idiv ecx
xor ebx ebx
push ebx
push 0xe10
push [ ebp - 0xc ]
push edi
mov [ esi + 0x18 ] edx
call sub_41b7a0
push 0xffffffff
mov [ esi + 0x8 ] eax
cdq
push 0xfffff1f0
push edx
push eax
call sub_41b760
push ebx
add edi eax
adc [ ebp - 0xc ] edx
push 0x3c
push [ ebp - 0xc ]
push edi
call sub_41b7a0
mov [ esi + 0x4 ] eax
imul eax eax 0x3c
sub edi eax
mov [ esi + 0x20 ] ebx
mov [ esi ] edi
xor eax eax
pop ebx
mov ebx eax
inc ecx
cmp [ edx + ecx * 4 ] ebx
jl r-xdata
mov ebx 0x15180
sub_423468
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4234a1
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_4234da
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov ecx [ rw-data ]
mov [ eax ] ecx
xor eax eax
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
push 0x16
pop eax
jmp r-xdata
pop esi
pop ebp
retn
sub_42355e
push 0x2c
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x38 ] ebx
mov [ ebp - 0x2c ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x20 ] ebx
push 0x7
call sub_420509
pop ecx
mov [ ebp - 0x4 ] ebx
call sub_423525
mov [ ebp - 0x20 ] eax
lea eax [ ebp - 0x1c ]
push eax
call sub_4234da
pop ecx
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x24 ]
push eax
call sub_423468
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
lea eax [ ebp - 0x28 ]
push eax
call sub_4234a1
pop ecx
cmp eax ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
call sub_4258dc
mov [ ebp - 0x34 ] eax
mov [ rw-data ] ebx
or edi 0xffffffff
mov [ rw-data ] edi
mov [ rw-data ] edi
push r--data
call sub_426711
pop ecx
mov esi eax
mov [ ebp - 0x3c ] esi
cmp esi ebx
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ esi ] bl
je r-xdata
push rw-data
call [ GetTimeZoneInformation@IAT ]
cmp eax edi
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov [ rw-data ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
mov [ ebp - 0x2c ] 0x1
xor ecx ecx
inc ecx
mov [ rw-data ] ecx
mov eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] bx
je r-xdata
push esi
call sub_424c80
inc eax
push eax
call sub_41f728
pop ecx
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
push eax
push esi
call sub_41f6a0
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_41af41
retn
push 0x3
push esi
push 0x40
mov edi [ ebp - 0x20 ]
push [ edi ]
call sub_4259c6
add esp 0x10
test eax eax
je r-xdata
cmp [ rw-data ] bx
je r-xdata
mov edx [ rw-data ]
imul edx edx 0x3c
add eax edx
mov [ ebp - 0x1c ] eax
push esi
push esi
call sub_424c80
pop ecx
inc eax
push eax
push [ rw-data ]
call sub_425a7b
add esp 0xc
cmp eax ebx
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
add esi 0x3
cmp [ esi ] 0x2d
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] ebx
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push [ ebp - 0x1c ]
call sub_42354d
push [ ebp - 0x24 ]
call sub_42352b
push [ ebp - 0x28 ]
call sub_42353c
add esp 0xc
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42380a
cmp [ ebp - 0x2c ] ebx
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
jmp r-xdata
push eax
call sub_41a4ab
pop ecx
push esi
call sub_4266fb
pop ecx
imul eax eax 0xe10
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x38 ] 0x1
inc esi
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ecx
sub eax [ rw-data ]
imul eax eax 0x3c
mov [ ebp - 0x28 ] eax
jmp r-xdata
inc esi
jmp r-xdata
cmp al 0x30
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax ] bl
cmp [ ebp - 0x30 ] ebx
jne r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax ]
push edi
push rw-data
push ebx
push [ ebp - 0x34 ]
mov edi [ WideCharToMultiByte@IAT ]
call edi
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x2b
je r-xdata
cmp [ esi ] 0x3a
jne r-xdata
cmp al 0x39
jg r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x4 ]
mov [ eax + 0x3f ] bl
jmp r-xdata
lea eax [ ebp - 0x30 ]
push eax
push ebx
push 0x3f
mov eax [ ebp - 0x20 ]
push [ eax + 0x4 ]
push 0xffffffff
push rw-data
push ebx
push [ ebp - 0x34 ]
call edi
test eax eax
je r-xdata
cmp [ ebp - 0x38 ] ebx
je r-xdata
inc esi
push esi
call sub_4266fb
pop ecx
imul eax eax 0x3c
add [ ebp - 0x1c ] eax
jmp r-xdata
movsx eax [ esi ]
mov [ ebp - 0x24 ] eax
cmp eax ebx
je r-xdata
neg [ ebp - 0x1c ]
mov al [ esi ]
cmp al 0x30
jge r-xdata
mov eax [ edi + 0x4 ]
mov [ eax ] bl
push 0x3
push esi
push 0x40
push [ edi + 0x4 ]
call sub_4259c6
add esp 0x10
test eax eax
je r-xdata
cmp al 0x39
jg r-xdata
cmp [ esi ] 0x3a
jne r-xdata
mov esi [ ebp - 0x1c ]
call sub_42351f
mov [ eax ] esi
mov esi [ ebp - 0x24 ]
call sub_423513
mov [ eax ] esi
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
jmp r-xdata
inc esi
inc esi
push esi
call sub_4266fb
pop ecx
add [ ebp - 0x1c ] eax
jmp r-xdata
mov al [ esi ]
cmp al 0x30
jge r-xdata
cmp al 0x39
jg r-xdata
inc esi
sub_4238a4
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
and [ ebp - 0x4 ] 0x0
cmp [ ebp + 0xc ] 0x1
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi eax
mov eax edi
jne r-xdata
and eax 0x80000003
jns r-xdata
and eax 0x80000003
jns r-xdata
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
mov [ ebp - 0xc ] eax
jne r-xdata
dec eax
or eax 0xfffffffc
inc eax
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov esi [ esi * 4 + rw-data ]
mov esi [ esi * 4 + rw-data ]
jmp r-xdata
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
mov eax esi
shl eax 0x2
mov esi [ eax + rw-data ]
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ rw-data ] esi
mov [ rw-data ] ecx
call sub_4234a1
pop ecx
test eax eax
je r-xdata
mov [ rw-data ] esi
mov [ rw-data ] ecx
mov [ rw-data ] edi
jmp r-xdata
add esi [ ebp + 0x1c ]
add esi eax
lea esi [ esi + eax - 0x7 ]
jmp r-xdata
mov [ ebp + 0xc ] eax
lea eax [ edi + 0x12b ]
cdq
lea ebx [ edi - 0x1 ]
mov edi 0x190
idiv edi
push 0x64
pop edi
inc esi
push 0x7
mov [ ebp - 0x8 ] eax
mov eax ebx
cdq
idiv edi
mov edx [ ebp - 0x8 ]
mov edi [ ebp + 0x10 ]
sub edx eax
mov ebx edx
lea eax [ edi - 0x1 ]
cdq
and edx 0x3
add eax edx
sar eax 0x2
mov edx edi
imul edx edx 0x16d
add eax esi
add eax ebx
lea eax [ edx + eax - 0x63db ]
cdq
pop ebx
idiv ebx
mov eax [ ebp + 0x14 ]
imul eax eax 0x7
sub eax edx
add eax [ ebp + 0x18 ]
cmp edx [ ebp + 0x18 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
imul eax eax 0x3e8
add [ rw-data ] eax
jns r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c544
add esp 0x14
pop edi
pop esi
pop ebx
leave
retn
imul ecx ecx 0x3c
add ecx [ ebp + 0x20 ]
imul ecx ecx 0x3c
add ecx [ ebp + 0x24 ]
imul ecx ecx 0x3e8
add ecx [ ebp + 0x28 ]
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x5
jne r-xdata
mov eax 0x5265c00
cmp [ rw-data ] eax
jl r-xdata
add [ rw-data ] 0x5265c00
dec [ rw-data ]
jmp r-xdata
lea eax [ edi + 0x76c ]
cdq
mov ebx 0x190
idiv ebx
test edx edx
je r-xdata
mov eax edi
push 0x64
cdq
pop ebx
idiv ebx
test edx edx
jne r-xdata
mov [ rw-data ] edi
sub [ rw-data ] eax
inc [ rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
mov eax [ ebp + 0xc ]
mov eax [ eax + rw-data ]
jmp r-xdata
sub esi 0x7
jmp r-xdata
cmp esi eax
jle r-xdata
sub_423a9b
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0x4 ]
xor esi esi
push eax
mov [ ebp - 0x4 ] esi
call sub_423468
pop ecx
test eax eax
je r-xdata
cmp [ ebp - 0x4 ] esi
jne r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
mov edx [ edi + 0x14 ]
push ebx
xor ebx ebx
inc ebx
cmp edx [ rw-data ]
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
je r-xdata
cmp edx [ rw-data ]
je r-xdata
pop esi
leave
retn
cmp edx 0x6b
push 0x3
pop eax
push 0x2
pop ecx
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] ebx
jge r-xdata
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov ecx [ rw-data ]
mov eax [ rw-data ]
cmp ecx eax
mov edx [ edi + 0x1c ]
jge r-xdata
push esi
push esi
push esi
push esi
push esi
push ecx
push edx
push ebx
push ebx
push 0x2
pop ecx
call sub_4238a4
mov eax [ ebp - 0xc ]
push esi
push esi
push esi
push esi
push esi
push [ ebp - 0x8 ]
push [ edi + 0x14 ]
push ebx
push esi
push 0x2
pop ecx
call sub_4238a4
add esp 0x48
push 0x4
pop eax
mov ecx ebx
mov [ ebp - 0xc ] 0xa
mov [ ebp - 0x8 ] 0x5
movzx eax [ rw-data ]
push eax
push esi
push esi
push edx
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push edx
push ebx
jmp r-xdata
cmp edx eax
jl r-xdata
cmp edx ecx
jl r-xdata
movzx eax [ rw-data ]
push eax
push esi
push esi
push [ edi + 0x14 ]
push esi
movzx eax [ rw-data ]
push esi
push eax
movzx eax [ rw-data ]
push eax
push [ edi + 0x14 ]
push ebx
jmp r-xdata
movzx eax [ rw-data ]
push ebx
call sub_4238a4
movzx eax [ rw-data ]
movzx ecx [ rw-data ]
add esp 0x24
push eax
movzx eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
cmp [ rw-data ] si
jne r-xdata
mov eax ebx
cmp edx ecx
jg r-xdata
xor eax eax
jmp r-xdata
cmp edx eax
jg r-xdata
movzx eax [ rw-data ]
push esi
call sub_4238a4
add esp 0x24
jmp r-xdata
cmp edx eax
jle r-xdata
pop ebx
cmp edx ecx
jle r-xdata
mov eax [ edi + 0x8 ]
imul eax eax 0x3c
add eax [ edi + 0x4 ]
imul eax eax 0x3c
add eax [ edi ]
imul eax eax 0x3e8
cmp edx ecx
jne r-xdata
cmp edx ecx
jge r-xdata
cmp edx eax
jge r-xdata
xor ecx ecx
cmp eax [ rw-data ]
setl cl
xor ecx ecx
cmp eax [ rw-data ]
setge cl
jmp r-xdata
mov eax ecx
jmp r-xdata
sub_423c73
push 0x8
push r--data
call sub_41aefc
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
call sub_41af41
retn
push 0x6
call sub_420509
pop ecx
mov [ ebp - 0x4 ] esi
cmp [ rw-data ] esi
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423cb9
call sub_42355e
inc [ rw-data ]
sub_423cc2
push 0xc
push r--data
call sub_41aefc
push 0x6
call sub_420509
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ ebp + 0x8 ]
call sub_423a9b
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423cfa
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_423d10
push ebx
push edi
xor edi edi
mov eax [ esp + 0x10 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x18 ]
or eax eax
jge r-xdata
inc edi
mov edx [ esp + 0xc ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x10 ] eax
mov [ esp + 0xc ] edx
or eax eax
jne r-xdata
mov edx [ esp + 0x14 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x18 ] eax
mov [ esp + 0x14 ] edx
mov ebx eax
mov ecx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov eax [ esp + 0xc ]
div ecx
mov eax edx
xor edx edx
dec edi
jns r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov ecx eax
mul [ esp + 0x18 ]
xchg ecx eax
mul [ esp + 0x14 ]
add edx ecx
jb r-xdata
neg edx
neg eax
sbb edx 0x0
jmp r-xdata
sub eax [ esp + 0x14 ]
sbb edx [ esp + 0x18 ]
cmp edx [ esp + 0x10 ]
ja r-xdata
pop edi
pop ebx
retn 0x10
jb r-xdata
sub eax [ esp + 0xc ]
sbb edx [ esp + 0x10 ]
dec edi
jns r-xdata
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_423dc2
push 0xc
push r--data
call sub_41aefc
mov ecx [ ebp + 0x8 ]
xor edi edi
cmp ecx edi
jbe r-xdata
imul ecx [ ebp + 0xc ]
mov esi ecx
mov [ ebp + 0x8 ] esi
cmp esi edi
jne r-xdata
push 0xffffffe0
pop eax
xor edx edx
div ecx
cmp eax [ ebp + 0xc ]
sbb eax eax
inc eax
jne r-xdata
xor ebx ebx
mov [ ebp - 0x1c ] ebx
cmp esi 0xffffffe0
ja r-xdata
xor esi esi
inc esi
call sub_41adfe
mov [ eax ] 0xc
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
cmp ebx edi
jne r-xdata
cmp [ rw-data ] 0x3
jne r-xdata
call sub_41af41
retn
mov eax ebx
cmp [ rw-data ] edi
je r-xdata
cmp ebx edi
jne r-xdata
add esi 0xf
and esi 0xfffffff0
mov [ ebp + 0xc ] esi
mov eax [ ebp + 0x8 ]
cmp eax [ rw-data ]
ja r-xdata
cmp ebx edi
jne r-xdata
push esi
call sub_42100f
pop ecx
test eax eax
jne r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov ebx eax
push 0x4
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
push [ ebp + 0x8 ]
call sub_420d1b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_423ebe
mov ebx [ ebp - 0x1c ]
cmp ebx edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
mov eax [ ebp + 0x10 ]
cmp eax edi
je r-xdata
push [ ebp + 0x8 ]
push edi
push ebx
call sub_41ae80
add esp 0xc
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
jmp r-xdata
sub_423ee8
push ebp
mov ebp esp
sub esp 0x8
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x8 ] esi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
shr ecx 0x7
jmp r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec ecx
jne r-xdata
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0x4 ]
mov esp ebp
pop ebp
retn
sub_423f6f
push ebp
mov ebp esp
sub esp 0x1c
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] ebx
mov ebx [ ebp + 0xc ]
mov eax ebx
cdq
mov ecx eax
mov eax [ ebp + 0x8 ]
xor ecx edx
sub ecx edx
and ecx 0xf
xor ecx edx
sub ecx edx
cdq
mov edi eax
xor edi edx
sub edi edx
and edi 0xf
xor edi edx
sub edi edx
mov edx ecx
or edx edi
jne r-xdata
cmp ecx edi
jne r-xdata
mov esi [ ebp + 0x10 ]
mov ecx esi
and ecx 0x7f
mov [ ebp - 0x18 ] ecx
cmp esi ecx
je r-xdata
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx ecx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
neg ecx
add ecx 0x10
mov [ ebp - 0x1c ] ecx
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
mov ecx [ ebp - 0x1c ]
[ edi ] [ esi ]
mov ecx [ ebp + 0x8 ]
add ecx [ ebp - 0x1c ]
mov edx [ ebp + 0xc ]
add edx [ ebp - 0x1c ]
mov eax [ ebp + 0x10 ]
sub eax [ ebp - 0x1c ]
push eax
push edx
push ecx
call sub_423f6f
add esp 0xc
mov eax [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
sub esi ecx
push esi
push ebx
push eax
call sub_423ee8
add esp 0xc
mov eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x18 ]
mov ebx [ ebp - 0x4 ]
mov esi [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov esp ebp
pop ebp
retn
mov ebx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
add edx ebx
sub edx ecx
mov [ ebp - 0x14 ] edx
add ebx eax
sub ebx ecx
mov [ ebp - 0x10 ] ebx
mov esi [ ebp - 0x14 ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x18 ]
[ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
jmp r-xdata
sub_424052
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4269a7
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_41adfe
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_41ae24
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4240d7
push 0x14
push r--data
call sub_41aefc
or esi 0xffffffff
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] esi
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41ae11
and [ eax ] 0x0
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] edi
call sub_41adfe
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41af41
retn
mov eax esi
mov edx esi
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
jne r-xdata
push eax
call sub_426a1e
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41ae11
mov [ eax ] edi
call sub_41adfe
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
or edx 0xffffffff
mov eax edx
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] edi
or [ ebp - 0x24 ] 0xffffffff
or [ ebp - 0x20 ] 0xffffffff
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424052
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4241e6
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4241f0
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_41bab0
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
xor esi esi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] esi
mov [ ebp - 0x1ad0 ] esi
cmp [ ebp + 0x10 ] esi
jne r-xdata
cmp eax esi
jne r-xdata
xor eax eax
jmp r-xdata
push ebx
push edi
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
lea esi [ eax * 4 + rw-data ]
mov eax [ esi ]
and edi 0x1f
shl edi 0x6
add eax edi
mov bl [ eax + 0x24 ]
add bl bl
sar bl 0x1
mov [ ebp - 0x1ad8 ] esi
mov [ ebp - 0x1ad9 ] bl
cmp bl 0x2
je r-xdata
call sub_41ae11
mov [ eax ] esi
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_419730
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp bl 0x1
jne r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
call sub_41ae11
xor esi esi
mov [ eax ] esi
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
jmp r-xdata
push [ ebp + 0x8 ]
call sub_424a48
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_424052
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop edi
pop ebx
push 0x0
lea ecx [ ebp - 0x1ad4 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac0 ] ecx
test bl bl
jne r-xdata
call sub_41f29d
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae4 ]
sete cl
push eax
mov eax [ esi ]
push [ edi + eax ]
mov [ ebp - 0x1ae0 ] ecx
call [ GetConsoleMode@IAT ]
test eax eax
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
mov eax [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
mov [ ebp - 0x1abc ] eax
cmp bl 0x2
jne r-xdata
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
xor ecx ecx
cmp [ ebp - 0x1ae0 ] ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1ac0 ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ esi ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
jmp r-xdata
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae4 ] eax
xor eax eax
mov [ ebp - 0x1ac4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
test bl bl
je r-xdata
mov esi [ ebp - 0x1ad8 ]
push 0x5
pop esi
cmp [ ebp - 0x1ac0 ] esi
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x1c
call sub_41ae11
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov ecx [ ebp - 0x1ac4 ]
and [ ebp - 0x1abc ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
mov [ ebp - 0x1abc ] eax
mov eax [ esi ]
add eax edi
test [ eax + 0x4 ] 0x80
je r-xdata
push [ ebp - 0x1ac0 ]
call sub_41ae24
pop ecx
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1abc ]
movzx edx [ edx ]
add [ ebp - 0x1abc ] esi
add ecx esi
cmp dx 0xa
jne r-xdata
mov ecx [ ebp - 0x1abc ]
and [ ebp - 0x1ac4 ] 0x0
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
xor eax eax
jmp r-xdata
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1ac4 ]
inc [ ebp - 0x1ac4 ]
mov dl [ edx ]
inc ecx
cmp dl 0xa
jne r-xdata
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1ad8 ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae0 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac4 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac4 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac4 ] esi
mov ebx eax
lea eax [ ebp - 0x1ab8 ]
sub ebx eax
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push ebx
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ esi ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov edx [ ebp - 0x1abc ]
add [ ebp - 0x1abc ] 0x2
movzx edx [ edx ]
inc ecx
inc ecx
cmp dx 0xa
jne r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
mov [ eax ] dl
inc eax
inc [ ebp - 0x1abc ]
cmp [ ebp - 0x1abc ] 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc [ ebp - 0x1abc ]
movzx esi [ ebx ]
xor ecx ecx
cmp si 0xa
sete cl
inc ebx
inc ebx
add [ ebp - 0x1abc ] 0x2
mov [ ebp - 0x1ac0 ] esi
mov [ ebp - 0x1ae0 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_41a14e
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1ac0 ] eax
add esi [ ebp - 0x1ad4 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax [ ebp - 0x1ad4 ]
add [ ebp - 0x1ac8 ] eax
cmp eax ebx
jl r-xdata
add [ ebp - 0x1ac4 ] 0x2
mov [ eax ] dx
inc eax
inc eax
cmp [ ebp - 0x1ac4 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] 0x2
push 0xd
pop ebx
mov [ eax ] bx
inc eax
inc eax
add [ ebp - 0x1ac4 ] 0x2
mov eax [ ebp - 0x1ac4 ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
push [ ebp - 0x1ac0 ]
call sub_426ae5
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1ac0 ]
push eax
call sub_424e22
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
mov eax [ ebp - 0x1abc ]
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1abc ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1ac0 ]
push ecx
push eax
push [ ebp - 0x1ae4 ]
inc ebx
inc [ ebp - 0x1abc ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1ac0 ]
push ebx
push eax
call sub_424e22
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
mov esi [ ebp - 0x1ad8 ]
jmp r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1ac0 ] eax
call sub_426ae5
pop ecx
cmp ax [ ebp - 0x1ac0 ]
jne r-xdata
mov al [ ebp - 0x1ad9 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1abc ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1abc ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
cmp [ ebp - 0x1ac4 ] esi
mov [ ebp - 0x1ac8 ] eax
jl r-xdata
cmp [ ebp - 0x1ae0 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ac4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1ad8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_424923
push 0x10
push r--data
call sub_41aefc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41ae11
and [ eax ] 0x0
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] edi
call sub_41adfe
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41af41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426a1e
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] edi
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4241f0
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4249f5
mov eax [ ebp - 0x1c ]
sub_4249ff
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_41f728
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_424a48
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41adfe
mov [ eax ] 0x9
xor eax eax
pop ebp
retn
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41c66c
add esp 0x14
xor eax eax
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
sub_424aac
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
xor esi esi
cmp eax esi
jne r-xdata
mov eax [ eax + 0x10 ]
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
sub_424ade
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x40
push edi
jne r-xdata
add [ esi + 0x4 ] 0xfffffffe
js r-xdata
push esi
call sub_424aac
pop ecx
mov ebx rw-data
cmp eax 0xffffffff
je r-xdata
movzx eax [ ebp + 0x8 ]
push esi
push eax
call sub_426baa
pop ecx
pop ecx
mov ecx [ esi ]
mov eax [ ebp + 0x8 ]
mov [ ecx ] ax
add [ esi ] 0x2
jmp r-xdata
mov eax ebx
push esi
call sub_424aac
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
push esi
call sub_424aac
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_424aac
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_424aac
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_424aac
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x2
je r-xdata
push esi
call sub_424aac
pop ecx
cmp eax 0xffffffff
je r-xdata
push esi
call sub_424aac
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_424aac
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
mov eax ebx
push esi
call sub_424aac
pop ecx
cmp eax 0xfffffffe
je r-xdata
mov al [ eax + 0x24 ]
and al 0x7f
cmp al 0x1
je r-xdata
push [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_426904
add esp 0x10
test eax eax
je r-xdata
push esi
call sub_424aac
sar eax 0x5
push esi
lea edi [ eax * 4 + rw-data ]
call sub_424aac
and eax 0x1f
pop ecx
shl eax 0x6
add eax [ edi ]
pop ecx
jmp r-xdata
xor edi edi
cmp [ ebp - 0x10 ] edi
jle r-xdata
mov eax 0xffff
jmp r-xdata
test [ eax + 0x4 ] 0x80
je r-xdata
mov ax [ ebp + 0x8 ]
jmp r-xdata
dec [ esi + 0x4 ]
js r-xdata
movsx eax [ ebp + edi - 0xc ]
push esi
push eax
call sub_41ca05
pop ecx
pop ecx
mov eax [ esi ]
mov cl [ ebp + edi - 0xc ]
mov [ eax ] cl
mov ecx [ esi ]
movzx eax [ ecx ]
inc ecx
mov [ esi ] ecx
jmp r-xdata
inc edi
cmp edi [ ebp - 0x10 ]
jl r-xdata
cmp eax 0xffffffff
je r-xdata
sub_424c80
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_424d0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_41a116
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_41adfe
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_424e3c
push 0x10
push r--data
call sub_41aefc
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_420509
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_424ed2
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
mov esi edi
shl esi 0x2
mov eax [ rw-data ]
add eax esi
cmp [ eax ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_426fef
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ esi + eax ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ esi + eax ]
call sub_41a4ab
pop ecx
mov eax [ rw-data ]
mov [ esi + eax ] ebx
inc [ ebp - 0x1c ]
sub_424edb
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_424aac
pop ecx
push eax
call sub_424923
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_424f43
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_424edb
pop ecx
test eax eax
je r-xdata
push esi
call sub_424f8b
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_424aac
push eax
call sub_42706b
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_424f8b
push 0x14
push r--data
call sub_41aefc
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_420509
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_42505c
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_41af41
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_41e461
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_42502d
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_424f43
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_424f43
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_42506e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_41a4ab
pop ecx
sub_42508e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
xor ebx ebx
push edi
mov esi ecx
cmp [ rw-data ] ebx
jne r-xdata
cmp [ ebp + 0x14 ] ebx
jle r-xdata
push ebx
push ebx
xor edi edi
inc edi
push edi
push r--data
push 0x100
push ebx
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0x2
je r-xdata
mov ecx [ ebp + 0x14 ]
mov eax [ ebp + 0x10 ]
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] edi
jmp r-xdata
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x10 ] ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
mov eax [ ebp + 0x14 ]
sub eax ecx
dec eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
mov [ rw-data ] 0x2
cmp [ ebp + 0x20 ] ebx
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
cmp eax 0x1
jne r-xdata
mov [ ebp + 0x14 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
push [ ebp + 0x8 ]
call sub_42714c
pop ecx
mov [ ebp - 0x14 ] eax
cmp eax 0xffffffff
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
xor eax eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
cmp eax [ ebp + 0x20 ]
je r-xdata
lea esp [ ebp - 0x20 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x24 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x20 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x20 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringA@IAT ]
mov esi eax
push ebx
push ebx
lea ecx [ ebp + 0x14 ]
push ecx
push [ ebp + 0x10 ]
push eax
push [ ebp + 0x20 ]
call sub_427195
add esp 0x18
mov [ ebp - 0xc ] eax
cmp eax ebx
je r-xdata
jle r-xdata
mov eax [ ebp - 0x10 ]
cmp eax ebx
je r-xdata
push [ ebp - 0xc ]
call sub_41a4ab
pop ecx
mov esi [ LCMapStringA@IAT ]
push ebx
push ebx
push [ ebp + 0x14 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
mov eax esi
cmp [ ebp + 0x18 ] eax
je r-xdata
jle r-xdata
xor esi esi
jmp r-xdata
push edi
push [ ebp - 0xc ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x20 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push eax
call sub_41a4ab
pop ecx
xor edi edi
cmp eax 0xffffffe0
ja r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
push [ ebp - 0xc ]
call sub_42506e
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov ecx eax
mov [ ebp - 0x8 ] ecx
cmp ecx ebx
je r-xdata
push eax
call sub_41a3e1
pop ecx
cmp eax ebx
je r-xdata
call sub_41b680
mov eax esp
cmp eax ebx
je r-xdata
push [ ebp - 0x8 ]
push ebx
push edi
call sub_41ae80
add esp 0xc
push [ ebp - 0x8 ]
push edi
push [ ebp + 0x14 ]
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
jne r-xdata
add eax 0x8
cmp eax 0x400
ja r-xdata
test [ ebp + 0xc ] 0x400
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push [ ebp + 0x1c ]
lea eax [ ebp - 0x8 ]
push [ ebp + 0x18 ]
push eax
push edi
push [ ebp + 0x20 ]
push [ ebp - 0x14 ]
call sub_427195
mov esi eax
mov [ ebp - 0x10 ] esi
add esp 0x18
neg esi
sbb esi esi
and esi [ ebp - 0x8 ]
xor esi esi
jmp r-xdata
push eax
call sub_41a3e1
pop ecx
cmp eax ebx
je r-xdata
call sub_41b680
mov edi esp
cmp edi ebx
je r-xdata
cmp ecx ebx
jle r-xdata
cmp [ ebp + 0x1c ] ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
push edi
call sub_42506e
pop ecx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
xor esi esi
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax 0x2
jb r-xdata
cmp ecx [ ebp + 0x1c ]
jg r-xdata
cmp edi ebx
je r-xdata
push [ ebp - 0x8 ]
push esi
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ LCMapStringW@IAT ]
test eax eax
je r-xdata
lea eax [ ecx + ecx + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call esi
jmp r-xdata
push esi
call sub_42506e
pop ecx
push ebx
push ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
push eax
call sub_41a3e1
pop ecx
cmp eax ebx
je r-xdata
call sub_41b680
mov esi esp
cmp esi ebx
je r-xdata
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push ebx
jmp r-xdata
mov esi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ esi ] 0xcccc
add esi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push esi
push ebx
push [ ebp + 0x20 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp esi ebx
je r-xdata
sub_425433
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
push [ ebp + 0x28 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_42508e
add esp 0x20
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_425478
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
push ebx
push esi
xor ebx ebx
push edi
mov edi ecx
cmp eax ebx
jne r-xdata
cmp eax 0x2
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
xor esi esi
inc esi
push esi
push r--data
push esi
call [ GetStringTypeW@IAT ]
test eax eax
je r-xdata
xor esi esi
cmp [ ebp + 0x1c ] ebx
jne r-xdata
cmp eax ebx
je r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
jmp r-xdata
cmp [ ebp + 0x18 ] ebx
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x1c ] eax
cmp eax 0x1
jne r-xdata
mov eax [ rw-data ]
push 0x2
pop eax
mov [ rw-data ] eax
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x18 ] ebx
jne r-xdata
push [ ebp + 0x1c ]
call sub_42714c
pop ecx
cmp eax 0xffffffff
jne r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
xor eax eax
jmp r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x10 ]
setne al
push [ ebp + 0xc ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x18 ]
call esi
mov edi eax
cmp edi ebx
je r-xdata
mov eax [ edi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x18 ]
je r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
jle r-xdata
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp + 0x1c ]
call [ GetStringTypeA@IAT ]
mov edi eax
cmp esi ebx
je r-xdata
push ebx
push ebx
lea ecx [ ebp + 0x10 ]
push ecx
push [ ebp + 0xc ]
push eax
push [ ebp + 0x18 ]
call sub_427195
mov esi eax
add esp 0x18
cmp esi ebx
je r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
mov eax edi
push esi
call sub_41a4ab
pop ecx
mov [ ebp + 0xc ] esi
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_41ae80
add esp 0xc
push edi
push ebx
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push 0x1
push [ ebp + 0x18 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_42506e
mov eax [ ebp - 0x8 ]
pop ecx
jmp r-xdata
push [ ebp + 0x14 ]
push eax
push ebx
push [ ebp + 0x8 ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_41a3e1
pop ecx
cmp eax ebx
je r-xdata
call sub_41b680
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_425632
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
push [ ebp + 0x24 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_425478
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_425674
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_41a4ab
push [ esi + 0x8 ]
call sub_41a4ab
push [ esi + 0xc ]
call sub_41a4ab
push [ esi + 0x10 ]
call sub_41a4ab
push [ esi + 0x14 ]
call sub_41a4ab
push [ esi + 0x18 ]
call sub_41a4ab
push [ esi ]
call sub_41a4ab
push [ esi + 0x20 ]
call sub_41a4ab
push [ esi + 0x24 ]
call sub_41a4ab
push [ esi + 0x28 ]
call sub_41a4ab
push [ esi + 0x2c ]
call sub_41a4ab
push [ esi + 0x30 ]
call sub_41a4ab
push [ esi + 0x34 ]
call sub_41a4ab
push [ esi + 0x1c ]
call sub_41a4ab
push [ esi + 0x38 ]
call sub_41a4ab
push [ esi + 0x3c ]
call sub_41a4ab
add esp 0x40
push [ esi + 0x40 ]
call sub_41a4ab
push [ esi + 0x44 ]
call sub_41a4ab
push [ esi + 0x48 ]
call sub_41a4ab
push [ esi + 0x4c ]
call sub_41a4ab
push [ esi + 0x50 ]
call sub_41a4ab
push [ esi + 0x54 ]
call sub_41a4ab
push [ esi + 0x58 ]
call sub_41a4ab
push [ esi + 0x5c ]
call sub_41a4ab
push [ esi + 0x60 ]
call sub_41a4ab
push [ esi + 0x64 ]
call sub_41a4ab
push [ esi + 0x68 ]
call sub_41a4ab
push [ esi + 0x6c ]
call sub_41a4ab
push [ esi + 0x70 ]
call sub_41a4ab
push [ esi + 0x74 ]
call sub_41a4ab
push [ esi + 0x78 ]
call sub_41a4ab
push [ esi + 0x7c ]
call sub_41a4ab
add esp 0x40
push [ esi + 0x80 ]
call sub_41a4ab
push [ esi + 0x84 ]
call sub_41a4ab
push [ esi + 0x88 ]
call sub_41a4ab
push [ esi + 0x8c ]
call sub_41a4ab
push [ esi + 0x90 ]
call sub_41a4ab
push [ esi + 0x94 ]
call sub_41a4ab
push [ esi + 0x98 ]
call sub_41a4ab
push [ esi + 0x9c ]
call sub_41a4ab
push [ esi + 0xa0 ]
call sub_41a4ab
push [ esi + 0xa4 ]
call sub_41a4ab
push [ esi + 0xa8 ]
call sub_41a4ab
add esp 0x2c
sub_425809
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov esi [ esi + 0x8 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
push esi
call sub_41a4ab
pop ecx
sub_42584e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
mov esi [ esi + 0x24 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_41a4ab
pop ecx
push esi
call sub_41a4ab
pop ecx
sub_425902
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp eax ebx
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx eax
mov [ eax ] bl
jmp r-xdata
cmp edi ebx
je r-xdata
inc edx
dec edi
jne r-xdata
mov cl [ esi ]
mov [ edx ] cl
inc edx
inc esi
cmp cl bl
je r-xdata
cmp [ edx ] bl
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ eax ] bl
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_425980
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_4259c6
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
cmp [ ebp + 0x14 ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
jne r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebp + 0x14 ] ebx
jne r-xdata
xor eax eax
mov edx [ ebp + 0x10 ]
cmp edx ebx
jne r-xdata
mov [ esi ] bl
jmp r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
mov eax esi
jne r-xdata
mov [ esi ] bl
jmp r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
mov cl [ edx ]
mov [ eax ] cl
inc eax
inc edx
cmp cl bl
je r-xdata
cmp [ ebp + 0x14 ] ebx
jne r-xdata
dec edi
je r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
mov [ eax ] bl
dec [ ebp + 0x14 ]
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
jmp r-xdata
mov [ esi ] bl
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov eax [ ebp + 0xc ]
push 0x50
mov [ esi + eax - 0x1 ] bl
pop eax
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_425a7b
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
je r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
cmp edi ebx
ja r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov edx ecx
mov [ ecx ] bl
jmp r-xdata
cmp edi ebx
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ ecx ] bl
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
inc esi
cmp al bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
sub_425af0
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_425b30
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp + 0x18 ]
test eax eax
jle r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ LCMapStringW@IAT ]
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx eax
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub eax edx
dec eax
inc ecx
inc ecx
test edx edx
jne r-xdata
dec edx
cmp [ ecx ] 0x0
je r-xdata
or edx 0xffffffff
sub_425b87
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
push ebx
xor ebx ebx
cmp ecx ebx
jbe r-xdata
imul ecx [ ebp + 0x10 ]
push esi
push edi
mov esi ecx
cmp [ ebp + 0x8 ] ebx
je r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0x10 ]
jae r-xdata
push esi
push [ ebp + 0x8 ]
call sub_41aa43
mov edi eax
pop ecx
pop ecx
test edi edi
je r-xdata
push [ ebp + 0x8 ]
call sub_41ba09
pop ecx
mov ebx eax
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0xc
call sub_41c66c
add esp 0x14
xor eax eax
jmp r-xdata
mov eax edi
pop edi
pop esi
cmp ebx esi
jae r-xdata
pop ebx
pop ebp
retn
sub esi ebx
push esi
push 0x0
add ebx edi
push ebx
call sub_41ae80
add esp 0xc
sub_425c02
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
cmp [ ebp + 0x14 ] 0xffffffff
jge r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
xor eax eax
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_425c40
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
call sub_41f048
and [ ebp - 0x4 ] 0x0
cmp [ rw-data ] 0x0
mov ebx eax
jne r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
push r--data
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
je r-xdata
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
cmp [ rw-data ] ebx
je r-xdata
xor eax eax
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
test eax eax
je r-xdata
push [ rw-data ]
call sub_41f051
pop ecx
test eax eax
je r-xdata
push eax
call sub_41f051
pop ecx
test eax eax
je r-xdata
push eax
call sub_41f051
push [ rw-data ]
mov esi eax
call sub_41f051
pop ecx
pop ecx
mov edi eax
test esi esi
je r-xdata
push eax
call sub_41efd6
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41efd6
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41efd6
mov [ esp ] r--data
push edi
mov [ rw-data ] eax
call esi
push eax
call sub_41efd6
pop ecx
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ebp - 0x4 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x4 ] eax
test eax eax
je r-xdata
test edi edi
je r-xdata
push r--data
push edi
call esi
push eax
call sub_41efd6
pop ecx
mov [ rw-data ] eax
pop edi
pop esi
pop ebx
leave
retn
mov eax [ rw-data ]
cmp eax ebx
je r-xdata
call esi
test eax eax
je r-xdata
push eax
call sub_41f051
pop ecx
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x8 ]
push ecx
push 0xc
lea ecx [ ebp - 0x14 ]
push ecx
push 0x1
push eax
call edi
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call eax
mov [ ebp - 0x4 ] eax
test [ ebp - 0xc ] 0x1
jne r-xdata
sub_425da9
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push esi
xor esi esi
cmp ecx esi
jl r-xdata
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
jmp r-xdata
cmp ecx 0x3
jne r-xdata
pop esi
pop ebp
retn
mov eax [ rw-data ]
jmp r-xdata
sub_425df4
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
push edi
mov edi ecx
mov [ edi ] r--data
mov eax [ ebx ]
test eax eax
je r-xdata
and [ edi + 0x4 ] 0x0
push eax
call sub_424c80
mov esi eax
inc esi
push esi
call sub_41a3e1
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
mov [ edi + 0x8 ] 0x1
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx ]
push esi
push eax
call sub_425a7b
add esp 0xc
jmp r-xdata
sub_425e47
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi ] r--data
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
test eax eax
mov eax [ ebx + 0x4 ]
push edi
je r-xdata
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
jmp r-xdata
push eax
call sub_424c80
mov edi eax
inc edi
push edi
call sub_41a3e1
pop ecx
pop ecx
mov [ esi + 0x4 ] eax
test eax eax
je r-xdata
pop edi
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
push [ ebx + 0x4 ]
push edi
push eax
call sub_425a7b
add esp 0xc
jmp r-xdata
sub_425ec7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_425ea4
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_409992
pop ecx
sub_425efc
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_425f1c
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_419730
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_425f61
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_425f61
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_425f1c
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_426011
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_426030
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_426008
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_426011
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_426033
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov eax [ eax + 0xc8 ]
mov ecx [ ebp + 0x8 ]
movzx eax [ eax + ecx * 2 ]
and eax 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x4
push [ ebp + 0x8 ]
call sub_42743b
add esp 0xc
jmp r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_426084
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_426033
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ecx [ rw-data ]
movzx eax [ ecx + eax * 2 ]
and eax 0x4
pop ebp
retn
sub_4260c0
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
xor eax eax
or ecx 0xffffffff
[ edi ]
add ecx 0x1
neg ecx
sub edi 0x1
mov al [ ebp + 0xc ]
std
[ edi ]
add edi 0x1
cmp [ edi ] al
je r-xdata
mov eax edi
xor eax eax
jmp r-xdata
cld
pop edi
leave
retn
sub_4260ed
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push esi
push [ ebp + 0xc ]
lea ecx [ ebp - 0x18 ]
call sub_419be7
mov ebx [ ebp + 0x8 ]
mov esi 0x100
cmp ebx esi
jae r-xdata
mov eax [ ebp - 0x18 ]
cmp [ eax + 0xac ] 0x1
jle r-xdata
mov ecx [ ebp - 0x18 ]
cmp [ ecx + 0xac ] 0x1
jle r-xdata
call sub_41adfe
mov [ eax ] 0x2a
xor ecx ecx
mov [ ebp - 0x4 ] bl
mov [ ebp - 0x3 ] 0x0
inc ecx
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41a116
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ecx + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
and eax 0x1
lea eax [ ebp - 0x18 ]
push eax
push 0x1
push ebx
call sub_42743b
mov ecx [ ebp - 0x18 ]
add esp 0xc
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp eax 0x1
movzx eax [ ebp - 0x8 ]
je r-xdata
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x4 ] al
mov [ ebp - 0x3 ] bl
mov [ ebp - 0x2 ] 0x0
pop ecx
jmp r-xdata
mov eax [ ecx + 0xcc ]
movzx eax [ eax + ebx ]
jmp r-xdata
test eax eax
je r-xdata
mov eax ebx
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx ecx [ ebp - 0x7 ]
shl eax 0x8
or eax ecx
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x4 ]
lea edx [ ebp - 0x8 ]
push 0x3
push edx
push ecx
lea ecx [ ebp - 0x4 ]
push ecx
push esi
push [ eax + 0x14 ]
lea eax [ ebp - 0x18 ]
push eax
call sub_425433
add esp 0x24
test eax eax
je r-xdata
pop esi
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_426202
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push [ ebp + 0x8 ]
call sub_4260ed
pop ecx
pop ecx
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x41 ]
cmp ecx 0x19
ja r-xdata
pop ebp
retn
add eax 0x20
pop ebp
retn
sub_42622e
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_419be7
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427f7b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_4274f3
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
sub_4262d6
mov edi edi
push ebp
mov ebp esp
sub esp 0x28
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x24 ]
call sub_419be7
lea eax [ ebp - 0x24 ]
push eax
xor ebx ebx
push ebx
push ebx
push ebx
push ebx
push edi
lea eax [ ebp - 0x28 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_427f7b
mov [ ebp - 0x14 ] eax
lea eax [ ebp - 0x10 ]
push esi
push eax
call sub_427a37
add esp 0x28
test [ ebp - 0x14 ] 0x3
jne r-xdata
test [ ebp - 0x14 ] 0x1
jne r-xdata
cmp eax 0x1
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
test [ ebp - 0x14 ] 0x2
jne r-xdata
cmp eax 0x2
jne r-xdata
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x4
jmp r-xdata
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
cmp [ ebp - 0x18 ] bl
je r-xdata
push 0x3
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
pop eax
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x1c ]
and [ eax + 0x70 ] 0xfffffffd
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
sub_42637e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x14 ]
push ebx
push esi
mov esi [ ebp + 0x8 ]
xor ebx ebx
push edi
mov edi [ ecx + 0xc ]
cmp esi ebx
jne r-xdata
cmp [ ebp + 0xc ] ebx
jbe r-xdata
call sub_41adfe
push 0x16
pop esi
mov [ eax ] esi
mov edx [ ebp + 0x10 ]
cmp edx ebx
mov [ esi ] bl
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
mov eax edx
jmp r-xdata
cmp edx ebx
mov [ esi ] 0x30
lea eax [ esi + 0x1 ]
jle r-xdata
call sub_41adfe
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
inc eax
cmp [ ebp + 0xc ] eax
ja r-xdata
cmp edx ebx
mov [ eax ] bl
jl r-xdata
mov cl [ edi ]
cmp cl bl
je r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
mov eax esi
jmp r-xdata
cmp [ esi ] 0x31
jne r-xdata
cmp [ edi ] 0x35
jl r-xdata
push 0x30
pop ecx
movsx ecx cl
inc edi
jmp r-xdata
lea edi [ esi + 0x1 ]
push edi
call sub_424c80
inc eax
push eax
push edi
push esi
call sub_41c6a0
add esp 0x10
inc [ ecx + 0x4 ]
jmp r-xdata
jmp r-xdata
mov ecx [ ebp + 0x14 ]
mov [ eax ] cl
inc eax
dec edx
cmp edx ebx
jg r-xdata
xor eax eax
dec eax
cmp [ eax ] 0x39
je r-xdata
mov [ eax ] 0x30
inc [ eax ]
sub_42643d
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0xc ]
movzx eax [ ecx + 0x6 ]
push ebx
push esi
push edi
mov edi eax
shr edi 0x4
mov edx 0x7ff
and edi edx
and eax 0x8000
mov ebx edi
mov [ ebp + 0xc ] eax
mov eax [ ecx + 0x4 ]
mov ecx [ ecx ]
movzx edi bx
mov esi 0x80000000
and eax 0xfffff
mov [ ebp - 0x4 ] esi
test edi edi
je r-xdata
xor edx edx
cmp eax edx
jne r-xdata
cmp edi edx
je r-xdata
add ebx 0x3c01
mov [ ebp - 0x4 ] edx
cmp ecx edx
jne r-xdata
mov edi 0x7fff
jmp r-xdata
add ebx 0x3c00
jmp r-xdata
mov [ eax ] ecx
mov [ eax + 0x4 ] edx
test esi edx
je r-xdata
mov eax [ ebp + 0x8 ]
mov cx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov [ eax ] edx
jmp r-xdata
mov edx ecx
shr edx 0x15
shl eax 0xb
or edx eax
or edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
shl ecx 0xb
jmp r-xdata
movzx edi bx
mov ecx [ eax ]
mov edx [ eax + 0x4 ]
mov ebx ecx
add edx edx
shr ebx 0x1f
or edx ebx
add ecx ecx
add edi 0xffff
mov ecx [ ebp + 0xc ]
or ecx edi
pop edi
pop esi
mov [ eax + 0x8 ] cx
pop ebx
leave
retn
sub_4264f5
mov edi edi
push ebp
mov ebp esp
sub esp 0x30
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov ebx [ ebp + 0x10 ]
push esi
mov [ ebp - 0x30 ] eax
push edi
lea eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
call sub_42643d
pop ecx
pop ecx
lea eax [ ebp - 0x2c ]
push eax
push 0x0
push 0x11
sub esp 0xc
lea esi [ ebp - 0x10 ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
call sub_428673
mov esi [ ebp - 0x30 ]
mov [ ebx + 0x8 ] eax
movsx eax [ ebp - 0x2a ]
mov [ ebx ] eax
movsx eax [ ebp - 0x2c ]
mov [ ebx + 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
push [ ebp + 0x18 ]
push esi
call sub_425a7b
add esp 0x24
test eax eax
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
mov [ ebx + 0xc ] esi
pop esi
mov eax ebx
xor ecx ebp
pop ebx
call sub_419730
leave
retn
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_41c544
add esp 0x14
sub_426590
push edi
push esi
push ebp
xor edi edi
xor ebp ebp
mov eax [ esp + 0x14 ]
or eax eax
jge r-xdata
mov eax [ esp + 0x1c ]
or eax eax
jge r-xdata
inc edi
inc ebp
mov edx [ esp + 0x10 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x14 ] eax
mov [ esp + 0x10 ] edx
or eax eax
jne r-xdata
inc edi
mov edx [ esp + 0x18 ]
neg eax
neg edx
sbb eax 0x0
mov [ esp + 0x1c ] eax
mov [ esp + 0x18 ] edx
mov ebx eax
mov ecx [ esp + 0x18 ]
mov edx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
mov ecx [ esp + 0x18 ]
mov eax [ esp + 0x14 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x10 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x18 ]
mov ecx eax
mov eax esi
mul [ esp + 0x18 ]
add edx ecx
jmp r-xdata
shr ebx 0x1
rcr ecx 0x1
shr edx 0x1
rcr eax 0x1
or ebx ebx
jne r-xdata
div ecx
mov esi eax
mul [ esp + 0x1c ]
mov ecx eax
mov eax [ esp + 0x18 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
dec ebp
jns r-xdata
dec esi
sub eax [ esp + 0x18 ]
sbb edx [ esp + 0x1c ]
cmp edx [ esp + 0x14 ]
ja r-xdata
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
dec edi
jne r-xdata
neg edx
neg eax
sbb edx 0x0
jb r-xdata
pop ebp
pop esi
pop edi
retn 0x10
neg edx
neg eax
sbb edx 0x0
xor ebx ebx
cmp eax [ esp + 0x10 ]
jbe r-xdata
sub_426670
cmp cl 0x40
jae r-xdata
xor eax eax
xor edx edx
retn
cmp cl 0x20
jae r-xdata
mov eax edx
xor edx edx
and cl 0x1f
shr eax cl
retn
shrd eax edx cl
shr edx cl
retn
sub_42668f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
and eax 0xfff7ffff
and ecx eax
push esi
test ecx 0xfcf0fce0
je r-xdata
mov esi [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
test esi esi
je r-xdata
push edi
mov edi [ ebp + 0x8 ]
xor esi esi
cmp edi esi
je r-xdata
call sub_4290c8
call sub_4290c8
mov [ esi ] eax
jmp r-xdata
call sub_41adfe
push 0x16
pop edi
push esi
push esi
push esi
push esi
push esi
mov [ eax ] edi
call sub_41c66c
add esp 0x14
mov eax edi
pop edi
jmp r-xdata
push esi
push esi
call sub_4290c8
pop ecx
pop ecx
mov [ edi ] eax
pop ecx
pop ecx
xor eax eax
pop esi
pop ebp
retn
sub_426711
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
push esi
mov esi [ rw-data ]
jne r-xdata
push edi
test esi esi
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ rw-data ] esi
je r-xdata
pop esi
pop ebp
retn
xor eax eax
push [ ebp + 0x8 ]
call sub_424c80
pop ecx
mov edi eax
jmp r-xdata
call sub_4294df
test eax eax
jne r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
mov esi [ rw-data ]
test esi esi
je r-xdata
push eax
call sub_424c80
pop ecx
cmp eax edi
jbe r-xdata
add esi 0x4
mov eax [ esi ]
cmp [ eax + edi ] 0x3d
jne r-xdata
push edi
push [ ebp + 0x8 ]
push eax
call sub_4294c5
add esp 0xc
test eax eax
je r-xdata
mov eax [ esi ]
lea eax [ eax + edi + 0x1 ]
jmp r-xdata
pop edi
sub_426798
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_41adfe
push 0x16
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_41adfe
mov [ eax ] 0x2a
call sub_41adfe
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_41adfe
push 0x22
pop esi
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] esi
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_41ae80
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_41ae80
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_426921
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
cmp ecx ebx
push esi
push edi
jl r-xdata
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
and esi 0x1f
shl esi 0x6
add eax esi
test [ eax + 0x4 ] 0x1
je r-xdata
cmp [ eax ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4269a7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
push esi
xor esi esi
cmp eax esi
jl r-xdata
call sub_41ae11
and [ eax ] 0x0
call sub_41adfe
mov [ eax ] 0x9
or eax 0xffffffff
pop ebp
retn
call sub_41ae11
mov [ eax ] esi
call sub_41adfe
push esi
push esi
push esi
push esi
push esi
mov [ eax ] 0x9
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
cmp eax [ rw-data ]
jae r-xdata
pop esi
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
add eax ecx
test [ eax + 0x4 ] 0x1
jne r-xdata
mov eax [ eax ]
sub_426a1e
push 0xc
push r--data
call sub_41aefc
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_420509
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_426ab5
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call sub_4225be
pop ecx
pop ecx
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_426abe
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_426ae5
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push esi
xor esi esi
cmp [ rw-data ] esi
je r-xdata
push esi
push esi
push 0x5
lea eax [ ebp - 0xc ]
push eax
push 0x1
lea eax [ ebp + 0x8 ]
push eax
push esi
call [ GetConsoleOutputCP@IAT ]
push eax
call [ WideCharToMultiByte@IAT ]
mov ecx [ rw-data ]
cmp ecx 0xffffffff
je r-xdata
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax 0xffff
jmp r-xdata
push esi
lea edx [ ebp - 0x10 ]
push edx
push eax
lea eax [ ebp - 0xc ]
push eax
push ecx
call [ WriteConsoleA@IAT ]
test eax eax
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_429576
mov ecx [ ebp - 0x4 ]
xor ecx ebp
pop esi
call sub_419730
leave
retn
mov ax [ ebp + 0x8 ]
push esi
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] esi
sub_426baa
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_424aac
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_41adfe
mov [ eax ] 0x9
test al 0x1
je r-xdata
call sub_41adfe
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and [ esi + 0x4 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push 0x2
and eax 0xffffffef
pop ebx
or eax ebx
mov [ esi + 0xc ] eax
test eax 0x10c
jne r-xdata
and [ esi + 0x4 ] 0x0
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_41e349
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
push 0x2
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
mov edi ebx
mov ebx [ ebp + 0x8 ]
mov [ ebp - 0x4 ] bx
call sub_424923
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x2 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
sub ecx ebx
mov [ esi + 0x4 ] ecx
test edi edi
jle r-xdata
push [ ebp + 0xc ]
call sub_424a48
pop ecx
test eax eax
jne r-xdata
call sub_41e349
add eax 0x40
cmp esi eax
jne r-xdata
mov eax 0xffff
jmp r-xdata
mov eax ebx
and eax 0xffff
or [ esi + 0xc ] 0x20
mov eax 0xffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_424923
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4249ff
pop ecx
pop edi
pop ebx
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov ebx [ ebp + 0x8 ]
mov [ eax ] bx
jmp r-xdata
push ebx
push 0x0
push 0x0
push ecx
call sub_4240d7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_426d1e
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push esi
push edi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x14 ]
call sub_419be7
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
xor edi edi
cmp eax edi
je r-xdata
cmp esi edi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] edi
je r-xdata
call sub_41adfe
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov ecx [ ebp - 0x14 ]
push ebx
mov bl [ esi ]
mov [ ebp - 0x4 ] edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x14 ]
push eax
movzx eax bl
push 0x8
push eax
call sub_42743b
mov ecx [ ebp - 0x14 ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop edi
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
jl r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
mov esi [ ecx + 0xc8 ]
mov eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
test ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
mov cl bl
sub cl 0x61
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
inc edi
mov bl [ edi ]
inc edi
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_41adfe
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov ebx [ ebp - 0x4 ]
imul ebx [ ebp + 0x14 ]
add ebx ecx
mov [ ebp - 0x4 ] ebx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
test cl 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx edx
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
sub_426f4d
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_426d1e
add esp 0x14
pop ebp
retn
sub_426f78
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
or ebx 0xffffffff
cmp esi edi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_41adfe
push edi
push edi
push edi
push edi
push edi
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax ebx
jmp r-xdata
mov [ esi + 0xc ] edi
mov eax ebx
push esi
call sub_424edb
push esi
mov ebx eax
call sub_42972b
push esi
call sub_424aac
push eax
call sub_42965e
add esp 0x10
test eax eax
jge r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ esi + 0x1c ]
cmp eax edi
je r-xdata
or ebx 0xffffffff
jmp r-xdata
push eax
call sub_41a4ab
pop ecx
mov [ esi + 0x1c ] edi
sub_426fef
push 0xc
push r--data
call sub_41aefc
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
xor edi edi
cmp esi edi
setne al
cmp eax edi
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_41adfe
mov [ eax ] 0x16
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
push esi
call sub_41e420
pop ecx
mov [ ebp - 0x4 ] edi
push esi
call sub_426f78
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427063
jmp r-xdata
mov [ esi + 0xc ] edi
call sub_41af41
retn
mov eax [ ebp - 0x1c ]
sub_42706b
push 0x10
push r--data
call sub_41aefc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor ebx ebx
cmp eax ebx
jl r-xdata
call sub_41adfe
mov [ eax ] 0x9
call sub_41adfe
mov [ eax ] 0x9
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c66c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41af41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ esi + ecx + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426a1e
pop ecx
mov [ ebp - 0x4 ] ebx
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_41adfe
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4269a7
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x1c ] ebx
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_427142
mov eax [ ebp - 0x1c ]
call sub_41ae11
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] ebx
je r-xdata
sub_42714c
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
lea eax [ ebp - 0xc ]
push eax
push 0x1004
push [ ebp + 0x8 ]
mov [ ebp - 0x6 ] 0x0
call [ GetLocaleInfoA@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
call sub_4266fb
pop ecx
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
sub_427195
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0x18 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x14 ]
push ebx
mov [ ebp - 0x30 ] eax
mov eax [ eax ]
push esi
mov [ ebp - 0x24 ] eax
mov eax [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x20 ] edi
mov [ ebp - 0x2c ] edi
cmp eax [ ebp + 0xc ]
je r-xdata
mov eax [ ebp - 0x20 ]
mov esi [ GetCPInfo@IAT ]
lea ecx [ ebp - 0x18 ]
push ecx
push eax
call esi
mov ebx [ MultiByteToWideChar@IAT ]
test eax eax
je r-xdata
push edi
push edi
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
mov esi eax
cmp esi edi
jne r-xdata
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
mov [ ebp - 0x1c ] edi
cmp esi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x40 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
cmp [ ebp - 0x18 ] 0x1
jne r-xdata
lea eax [ esi + esi ]
push eax
push edi
push [ ebp - 0x1c ]
call sub_41ae80
add esp 0xc
push esi
push [ ebp - 0x1c ]
push [ ebp - 0x24 ]
push [ ebp - 0x28 ]
push 0x1
push [ ebp + 0x8 ]
call ebx
test eax eax
je r-xdata
lea eax [ esi + esi + 0x8 ]
cmp eax 0x400
ja r-xdata
mov esi [ ebp - 0x24 ]
mov [ ebp - 0x2c ] 0x1
cmp esi 0xffffffff
jne r-xdata
push [ ebp - 0x1c ]
call sub_42506e
pop ecx
mov ebx [ ebp - 0x34 ]
cmp ebx edi
je r-xdata
push eax
call sub_41a3e1
pop ecx
cmp eax edi
je r-xdata
call sub_41b680
mov eax esp
cmp eax edi
je r-xdata
cmp esi edi
push [ ebp - 0x28 ]
call sub_424c80
mov esi eax
pop ecx
inc esi
mov ebx [ WideCharToMultiByte@IAT ]
cmp [ ebp - 0x2c ] edi
jne r-xdata
push edi
push edi
push [ ebp + 0x1c ]
push ebx
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call [ WideCharToMultiByte@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
push esi
push 0x1
call sub_41f76d
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
cmp eax edi
je r-xdata
push edi
push edi
push edi
push edi
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
mov esi eax
cmp esi edi
je r-xdata
mov [ ebp - 0x20 ] ebx
jmp r-xdata
cmp [ ebp - 0x1c ] edi
je r-xdata
add eax 0x8
push edi
push edi
push esi
push eax
push esi
push [ ebp - 0x1c ]
push edi
push [ ebp + 0xc ]
call ebx
cmp eax edi
jne r-xdata
cmp [ ebp - 0x24 ] 0xffffffff
je r-xdata
push [ ebp - 0x20 ]
call sub_41a4ab
pop ecx
mov [ ebp - 0x20 ] edi
jmp r-xdata
mov ecx [ ebp - 0x30 ]
mov [ ecx ] eax
sub_427349
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push esi
push edi
cmp [ ebp + 0x10 ] ebx
je r-xdata
xor eax eax
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
cmp [ ebp + 0x8 ] ebx
jne r-xdata
mov edi [ ebp + 0xc ]
cmp edi ebx
je r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
mov esi 0x7fffffff
cmp [ ebp + 0x10 ] esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
mov eax [ ebp + 0x8 ]
movzx eax [ eax ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4260ed
inc [ ebp + 0x8 ]
mov esi eax
movzx eax [ edi ]
lea ecx [ ebp - 0x10 ]
push ecx
push eax
call sub_4260ed
add esp 0x10
inc edi
dec [ ebp + 0x10 ]
je r-xdata
push [ ebp + 0x10 ]
push edi
push [ ebp + 0x8 ]
call sub_429760
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub esi eax
mov eax esi
jmp r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi eax
je r-xdata
sub_42743b
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_419be7
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_41a116
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_425632
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_4274f3
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_427a37
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ ebp + 0x8 ]
movzx ecx [ eax + 0xa ]
push ebx
mov ebx ecx
and ecx 0x8000
mov [ ebp - 0x14 ] ecx
mov ecx [ eax + 0x6 ]
mov [ ebp - 0x20 ] ecx
mov ecx [ eax + 0x2 ]
movzx eax [ eax ]
and ebx 0x7fff
sub ebx 0x3fff
shl eax 0x10
push edi
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x18 ] eax
cmp ebx 0xffffc001
jne r-xdata
and [ ebp + 0x8 ] 0x0
push esi
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] eax
jns r-xdata
xor ebx ebx
xor eax eax
lea edi [ ebp + eax * 4 - 0x20 ]
push 0x1f
xor eax eax
pop ecx
sub ecx edx
inc eax
shl eax cl
mov [ ebp - 0x8 ] ecx
test [ edi ] eax
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
push 0x2
stosd [ edi ]
pop eax
jmp r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ecx [ ebp - 0x8 ]
or eax 0xffffffff
shl eax cl
and [ edi ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
mov eax [ ebp - 0xc ]
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
push 0x1f
pop ecx
sub ecx [ rw-data ]
shl ebx cl
mov ecx [ ebp - 0x14 ]
neg ecx
sbb ecx ecx
and ecx 0x80000000
or ebx ecx
mov ecx [ rw-data ]
or ebx [ ebp - 0x20 ]
cmp ecx 0x40
jne r-xdata
cmp [ ebp + eax * 4 - 0x20 ] ebx
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
cmp ecx 0x20
jne r-xdata
mov ecx [ ebp + 0xc ]
mov edx [ ebp - 0x1c ]
mov [ ecx + 0x4 ] ebx
mov [ ecx ] edx
jmp r-xdata
mov eax [ rw-data ]
mov ecx eax
sub ecx [ rw-data ]
cmp ebx ecx
jge r-xdata
inc ebx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
pop edi
pop ebx
leave
retn
mov ecx [ ebp + 0xc ]
mov [ ecx ] ebx
cmp ebx eax
jg r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
and [ ebp - 0x4 ] 0x0
sub ecx esi
xor edx edx
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
add esi edx
mov [ ebp + 0x8 ] esi
mov esi [ ecx ]
cmp [ ebp + 0x8 ] esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
cmp ebx [ rw-data ]
mov ecx [ rw-data ]
jl r-xdata
sub eax [ ebp - 0x10 ]
lea esi [ ebp - 0x2c ]
mov ecx eax
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
cdq
and edx 0x1f
add eax edx
movsd [ edi ] [ esi ]
mov edx ecx
sar eax 0x5
and edx 0x8000001f
movsd [ edi ] [ esi ]
jns r-xdata
push 0x2
xor ebx ebx
pop eax
jmp r-xdata
mov [ ebp - 0x4 ] 0x1
cmp [ ebp + 0x8 ] edx
jmp r-xdata
mov eax [ rw-data ]
and [ ebp - 0x20 ] 0x7fffffff
add ebx eax
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
xor eax eax
lea edi [ ebp - 0x20 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
or [ ebp - 0x20 ] 0x80000000
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
pop esi
test ecx ecx
je r-xdata
mov [ ebp + 0x8 ] ecx
jae r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or esi 0xffffffff
mov ecx edx
shl esi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not esi
dec edx
or edx 0xffffffe0
inc edx
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp - 0x4 ] 0x0
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
mov [ ebp + 0x8 ] esi
cmp esi edx
jb r-xdata
dec eax
mov edx [ ebp + 0x8 ]
mov [ ecx ] edx
mov ecx [ ebp - 0x4 ]
jns r-xdata
mov ecx [ ebp + 0x8 ]
mov edi [ ebp + ecx * 4 - 0x20 ]
mov ecx edi
and ecx esi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr edi cl
mov ecx [ ebp + 0x8 ]
or edi [ ebp - 0xc ]
mov [ ebp + ecx * 4 - 0x20 ] edi
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
shl edi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] edi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp esi 0x1
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
cmp edx eax
jl r-xdata
mov esi [ rw-data ]
dec esi
lea ecx [ esi + 0x1 ]
mov eax ecx
cdq
and edx 0x1f
add eax edx
sar eax 0x5
mov edx ecx
and edx 0x8000001f
mov [ ebp - 0xc ] eax
jns r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
xor eax eax
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
cmp edx eax
jl r-xdata
mov eax [ rw-data ]
mov ecx [ rw-data ]
lea ebx [ ecx + eax ]
xor eax eax
inc eax
jmp r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
push 0x1f
pop ecx
sub ecx edx
xor edx edx
inc edx
shl edx cl
lea ebx [ ebp + eax * 4 - 0x20 ]
mov [ ebp - 0x10 ] ecx
test [ ebx ] edx
je r-xdata
dec edx
or edx 0xffffffe0
inc edx
mov ecx [ ebp - 0x10 ]
or eax 0xffffffff
shl eax cl
and [ ebx ] eax
mov eax [ ebp - 0xc ]
inc eax
cmp eax 0x3
jge r-xdata
or edx 0xffffffff
shl edx cl
not edx
test [ ebp + eax * 4 - 0x20 ] edx
jmp r-xdata
mov ecx [ rw-data ]
inc ecx
mov eax ecx
cdq
and edx 0x1f
add eax edx
mov edx ecx
sar eax 0x5
and edx 0x8000001f
jns r-xdata
push 0x3
pop ecx
lea edi [ ebp + eax * 4 - 0x20 ]
sub ecx eax
xor eax eax
[ edi ]
jne r-xdata
and [ ebp - 0xc ] 0x0
and [ ebp + 0x8 ] 0x0
or edi 0xffffffff
mov ecx edx
shl edi cl
mov [ ebp - 0x4 ] 0x20
sub [ ebp - 0x4 ] edx
not edi
dec edx
or edx 0xffffffe0
inc edx
mov eax esi
cdq
push 0x1f
pop ecx
and edx ecx
add eax edx
sar eax 0x5
and esi 0x8000001f
jns r-xdata
inc eax
cmp eax 0x3
jl r-xdata
mov ebx [ ebp + 0x8 ]
lea ebx [ ebp + ebx * 4 - 0x20 ]
mov esi [ ebx ]
mov ecx esi
and ecx edi
mov [ ebp - 0x10 ] ecx
mov ecx edx
shr esi cl
mov ecx [ ebp - 0x4 ]
or esi [ ebp - 0xc ]
mov [ ebx ] esi
mov esi [ ebp - 0x10 ]
shl esi cl
inc [ ebp + 0x8 ]
cmp [ ebp + 0x8 ] 0x3
mov [ ebp - 0xc ] esi
jl r-xdata
mov esi eax
push 0x2
shl esi 0x2
lea ecx [ ebp - 0x18 ]
pop edx
sub ecx esi
and [ ebp + 0x8 ] 0x0
xor edx edx
sub ecx esi
inc edx
shl edx cl
lea ecx [ ebp + eax * 4 - 0x20 ]
mov esi [ ecx ]
lea edi [ esi + edx ]
cmp edi esi
jb r-xdata
dec esi
or esi 0xffffffe0
inc esi
cmp [ ebp + eax * 4 - 0x20 ] 0x0
jmp r-xdata
and [ ebp + edx * 4 - 0x20 ] 0x0
mov esi [ ecx ]
mov [ ebp + edx * 4 - 0x20 ] esi
jmp r-xdata
mov [ ebp + 0x8 ] 0x1
cmp edi edx
jae r-xdata
cmp edx eax
jl r-xdata
dec edx
sub ecx 0x4
test edx edx
jge r-xdata
dec eax
jns r-xdata
mov [ ecx ] edi
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
je r-xdata
lea ecx [ ebp + eax * 4 - 0x20 ]
mov edx [ ecx ]
lea esi [ edx + 0x1 ]
xor edi edi
cmp esi edx
jb r-xdata
xor edi edi
inc edi
cmp esi 0x1
jae r-xdata
mov [ ecx ] esi
mov ecx edi
sub_427f7b
mov edi edi
push ebp
mov ebp esp
sub esp 0x7c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
xor esi esi
mov [ ebp - 0x78 ] eax
mov eax [ ebp + 0xc ]
inc esi
xor ecx ecx
push edi
mov [ ebp - 0x70 ] eax
lea edi [ ebp - 0x20 ]
mov [ ebp - 0x74 ] ebx
mov [ ebp - 0x68 ] esi
mov [ ebp - 0x4c ] ebx
mov [ ebp - 0x58 ] ebx
mov [ ebp - 0x5c ] ebx
mov [ ebp - 0x60 ] ebx
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x50 ] ebx
mov [ ebp - 0x6c ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov edx [ ebp + 0x10 ]
mov [ ebp - 0x54 ] edx
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
xor eax eax
jmp r-xdata
inc edx
jmp r-xdata
cmp al 0x9
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
mov al [ edx ]
cmp al 0x20
je r-xdata
cmp al 0xa
je r-xdata
cmp al 0xd
jne r-xdata
mov bl 0x30
cmp ecx 0xa
jne r-xdata
jmp [ ecx * 4 + jump_table_428643 ]
mov al [ edx ]
inc edx
cmp ecx 0xb
ja r-xdata
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov cl al
sub cl 0x31
mov [ ebp - 0x58 ] esi
cmp cl 0x8
jbe r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
mov [ ebp - 0x58 ] esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x58 ] esi
mov [ ebp - 0x5c ] esi
jne r-xdata
sub al bl
mov [ ebp - 0x5c ] esi
cmp al 0x9
ja r-xdata
lea ecx [ edx - 0x2 ]
mov [ ebp - 0x54 ] ecx
mov cl al
sub cl 0x31
cmp cl 0x8
ja r-xdata
mov [ ebp - 0x60 ] esi
jmp r-xdata
mov cl al
sub cl 0x31
cmp cl 0x8
jbe r-xdata
cmp [ ebp + 0x20 ] 0x0
je r-xdata
mov [ ebp - 0x60 ] esi
xor ecx ecx
jmp r-xdata
cmp [ ebp - 0x58 ] 0x0
mov eax [ ebp - 0x70 ]
mov [ eax ] edx
je r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
push 0x3
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
jne r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al bl
jge r-xdata
cmp al bl
jge r-xdata
jmp r-xdata
mov edx [ ebp - 0x54 ]
jmp r-xdata
push 0x4
jmp r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x9
jmp r-xdata
cmp al bl
je r-xdata
cmp al bl
jmp r-xdata
push 0xa
pop ecx
dec edx
movsx eax al
sub eax 0x2b
lea ecx [ edx - 0x1 ]
mov [ ebp - 0x54 ] ecx
je r-xdata
cmp al bl
jge r-xdata
mov [ ebp - 0x6c ] 0x4
jmp r-xdata
push 0x18
pop eax
cmp [ ebp - 0x4c ] eax
jbe r-xdata
movsx eax al
sub eax 0x2b
je r-xdata
push 0x5
cmp al 0x2b
je r-xdata
push 0x4
jmp r-xdata
cmp al bl
je r-xdata
cmp al 0x39
jg r-xdata
mov ecx [ ebp + 0x24 ]
mov ecx [ ecx ]
mov ecx [ ecx + 0xbc ]
mov ecx [ ecx ]
cmp al [ ecx ]
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
cmp al bl
je r-xdata
pop ecx
dec edx
jmp r-xdata
push 0x7
jmp r-xdata
dec eax
dec eax
je r-xdata
mov al [ edx ]
inc edx
sub al 0x31
cmp al 0x8
jbe r-xdata
jne r-xdata
dec eax
dec eax
je r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
xor ecx ecx
xor eax eax
xor edx edx
xor esi esi
cmp [ ebp - 0x4c ] 0x0
jbe r-xdata
cmp [ ebp - 0x9 ] 0x5
jl r-xdata
and [ ebp - 0x74 ] 0x0
push 0x2
pop ecx
jmp r-xdata
dec eax
dec eax
je r-xdata
dec edx
push 0xb
jmp r-xdata
cmp al 0x2d
je r-xdata
pop ecx
jmp r-xdata
mov ecx esi
jmp r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
cmp al 0x2b
je r-xdata
cmp [ ebp - 0x4c ] 0x19
jae r-xdata
dec [ ebp - 0x50 ]
mov al [ edx ]
inc edx
jmp r-xdata
or [ ebp - 0x68 ] 0xffffffff
push 0x7
pop ecx
jmp r-xdata
sub eax 0x3
dec edx
jmp r-xdata
push 0x8
jmp r-xdata
mov edx ecx
mov [ ebp - 0x64 ] ecx
jmp r-xdata
imul ecx ecx 0xa
movsx esi al
lea ecx [ ecx + esi - 0x30 ]
cmp ecx 0x1450
jg r-xdata
jmp r-xdata
dec edi
inc [ ebp - 0x50 ]
mov [ ebp - 0x4c ] eax
inc [ ebp - 0x9 ]
push 0x2
pop ecx
mov [ ebp - 0x74 ] 0x8000
jmp r-xdata
sub eax 0x3
jne r-xdata
cmp al bl
je r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
jmp r-xdata
cmp al 0x2d
je r-xdata
mov al [ edx ]
inc edx
inc [ ebp - 0x4c ]
sub al bl
mov [ edi ] al
inc edi
dec [ ebp - 0x50 ]
cmp al bl
jge r-xdata
mov ecx 0x1451
mov al [ edx ]
inc edx
dec edi
cmp [ edi ] 0x0
je r-xdata
cmp al 0x43
jle r-xdata
mov al [ edx ]
inc edx
jmp r-xdata
cmp al 0x39
jg r-xdata
jmp r-xdata
dec [ ebp - 0x4c ]
inc [ ebp - 0x50 ]
lea eax [ ebp - 0x3c ]
push eax
push [ ebp - 0x4c ]
lea eax [ ebp - 0x20 ]
push eax
call sub_4297c1
mov eax [ ebp - 0x64 ]
xor edx edx
add esp 0xc
cmp [ ebp - 0x68 ] edx
jge r-xdata
cmp al 0x45
jle r-xdata
mov al [ edx ]
inc edx
add eax [ ebp - 0x50 ]
cmp [ ebp - 0x60 ] edx
jne r-xdata
neg eax
push 0x6
jmp r-xdata
cmp al 0x63
jle r-xdata
cmp [ ebp - 0x5c ] edx
jne r-xdata
add eax [ ebp + 0x18 ]
cmp al 0x65
jg r-xdata
cmp eax 0x1450
jg r-xdata
sub eax [ ebp + 0x1c ]
xor esi esi
mov eax 0x7fff
mov edx 0x80000000
xor ecx ecx
mov [ ebp - 0x6c ] 0x2
jmp r-xdata
cmp eax 0xffffebb0
jl r-xdata
mov edi [ ebp - 0x78 ]
or eax [ ebp - 0x74 ]
mov [ edi ] cx
mov [ edi + 0xa ] ax
mov eax [ ebp - 0x6c ]
mov [ edi + 0x2 ] esi
mov [ edi + 0x6 ] edx
mov [ ebp - 0x6c ] 0x1
mov ecx rw-data
sub ecx 0x60
mov [ ebp - 0x54 ] eax
cmp eax edx
je r-xdata
mov eax [ ebp - 0x34 ]
movzx ecx [ ebp - 0x3c ]
mov esi [ ebp - 0x3a ]
mov edx [ ebp - 0x36 ]
shr eax 0x10
jmp r-xdata
jge r-xdata
cmp [ ebp + 0x14 ] edx
jne r-xdata
neg eax
mov ecx rw-data
mov [ ebp - 0x54 ] eax
sub ecx 0x60
cmp [ ebp - 0x54 ] edx
je r-xdata
xor eax eax
mov [ ebp - 0x3c ] ax
jmp r-xdata
mov eax [ ebp - 0x54 ]
sar [ ebp - 0x54 ] 0x3
add ecx 0x54
and eax 0x7
mov [ ebp - 0x7c ] ecx
cmp eax edx
je r-xdata
cmp [ ebp - 0x54 ] 0x0
jne r-xdata
imul eax eax 0xc
add eax ecx
mov ebx eax
mov eax 0x8000
cmp [ ebx ] ax
jb r-xdata
mov ecx [ ebp - 0x7c ]
xor edx edx
mov edx [ ebp - 0x32 ]
xor eax eax
mov [ ebp - 0x50 ] eax
mov [ ebp - 0x2c ] eax
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] eax
movzx eax [ ebx + 0xa ]
mov esi eax
xor esi [ ebp - 0x32 ]
mov ecx 0x7fff
and edx ecx
and eax ecx
and esi 0x8000
mov edi 0x7fff
lea ecx [ eax + edx ]
mov [ ebp - 0x70 ] esi
movzx ecx cx
cmp dx di
jae r-xdata
mov esi ebx
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x46 ]
lea ebx [ ebp - 0x48 ]
xor eax eax
test si si
sete al
and [ ebp - 0x38 ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x3c ] 0x0
cmp ax di
jae r-xdata
mov edi 0xbffd
cmp cx di
ja r-xdata
mov esi 0x3fbf
cmp cx si
ja r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor eax eax
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x3c ] eax
jmp r-xdata
cmp ax si
jne r-xdata
inc ecx
test [ ebp - 0x34 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x34 ] eax
mov [ ebp - 0x68 ] esi
lea edi [ ebp - 0x28 ]
mov [ ebp - 0x58 ] 0x5
inc ecx
test [ ebx + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x38 ] esi
jne r-xdata
inc edi
inc edi
inc [ ebp - 0x68 ]
dec [ ebp - 0x58 ]
cmp [ ebp - 0x58 ] 0x0
jg r-xdata
lea eax [ ebp + eax - 0x3c ]
mov [ ebp - 0x5c ] eax
lea eax [ ebx + 0x8 ]
mov [ ebp - 0x60 ] eax
cmp [ ebx + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x3c ] esi
jne r-xdata
mov eax [ ebp - 0x68 ]
mov edx [ ebp - 0x58 ]
add eax eax
mov [ ebp - 0x64 ] edx
test edx edx
jle r-xdata
add ecx 0xc002
test cx cx
jle r-xdata
mov [ ebp - 0x4c ] 0x1
cmp esi eax
jae r-xdata
cmp [ ebx ] esi
jne r-xdata
xor eax eax
mov [ ebp - 0x32 ] ax
jmp r-xdata
add ecx 0xffff
test cx cx
jge r-xdata
mov edi [ ebp - 0x24 ]
test edi edi
js r-xdata
add [ ebp - 0x5c ] 0x2
sub [ ebp - 0x60 ] 0x2
dec [ ebp - 0x64 ]
cmp [ ebp - 0x64 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x4c ] 0x0
mov [ edi - 0x4 ] esi
je r-xdata
mov [ ebp - 0x34 ] esi
mov [ ebp - 0x38 ] esi
mov [ ebp - 0x3c ] esi
jmp r-xdata
mov eax 0x8000
mov edx eax
cmp [ ebp - 0x2c ] dx
ja r-xdata
mov eax ecx
neg eax
movzx esi ax
add ecx esi
test cx cx
jg r-xdata
mov esi [ ebp - 0x28 ]
mov eax [ ebp - 0x2c ]
shl [ ebp - 0x2c ] 0x1
shr eax 0x1f
mov edx esi
add esi esi
or esi eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add ecx 0xffff
mov [ ebp - 0x28 ] esi
mov [ ebp - 0x24 ] eax
test cx cx
jg r-xdata
mov eax [ ebp - 0x60 ]
mov edx [ ebp - 0x5c ]
movzx edx [ edx ]
movzx eax [ eax ]
and [ ebp - 0x4c ] 0x0
imul eax edx
mov edx [ edi - 0x4 ]
lea esi [ edx + eax ]
cmp esi edx
jb r-xdata
cmp [ ebp - 0x2a ] 0xffffffff
jne r-xdata
mov edx [ ebp - 0x2c ]
and edx 0x1ffff
cmp edx 0x18000
jne r-xdata
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x28 ]
mov edx [ ebp - 0x28 ]
shr [ ebp - 0x24 ] 0x1
shl eax 0x1f
shr edi 0x1
or edi eax
mov eax [ ebp - 0x2c ]
shl edx 0x1f
shr eax 0x1
or eax edx
dec esi
mov [ ebp - 0x28 ] edi
mov [ ebp - 0x2c ] eax
jne r-xdata
inc [ ebp - 0x50 ]
inc [ ebp - 0x2a ]
and [ ebp - 0x2a ] 0x0
cmp [ ebp - 0x26 ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp cx ax
jb r-xdata
test [ ebp - 0x2c ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] esi
je r-xdata
mov ax [ ebp - 0x2a ]
or ecx [ ebp - 0x70 ]
mov [ ebp - 0x3c ] ax
mov eax [ ebp - 0x28 ]
mov [ ebp - 0x3a ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x36 ] eax
mov [ ebp - 0x32 ] cx
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x70 ] ax
mov [ ebp - 0x38 ] eax
sete cl
mov [ ebp - 0x3c ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x34 ] ecx
jmp r-xdata
inc [ ebp - 0x26 ]
jmp r-xdata
and [ ebp - 0x26 ] 0x0
mov edx 0xffff
cmp [ ebp - 0x22 ] dx
jne r-xdata
or [ ebp - 0x2c ] 0x1
inc [ ebp - 0x22 ]
jmp r-xdata
mov [ ebp - 0x22 ] ax
inc ecx
jmp r-xdata
sub_428673
mov edi edi
push ebp
mov ebp esp
sub esp 0x74
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x1c ]
push esi
push edi
lea esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsw [ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov ecx 0x8000
and eax ecx
mov [ ebp - 0x60 ] eax
lea eax [ ecx - 0x1 ]
and edx eax
cmp [ ebp - 0x60 ] 0x0
mov [ ebp - 0x64 ] ebx
mov [ ebp - 0x30 ] 0xcc
mov [ ebp - 0x2f ] 0xcc
mov [ ebp - 0x2e ] 0xcc
mov [ ebp - 0x2d ] 0xcc
mov [ ebp - 0x2c ] 0xcc
mov [ ebp - 0x2b ] 0xcc
mov [ ebp - 0x2a ] 0xcc
mov [ ebp - 0x29 ] 0xcc
mov [ ebp - 0x28 ] 0xcc
mov [ ebp - 0x27 ] 0xcc
mov [ ebp - 0x26 ] 0xfb
mov [ ebp - 0x25 ] 0x3f
mov [ ebp - 0x74 ] 0x1
je r-xdata
mov [ ebx + 0x2 ] 0x20
mov [ ebx + 0x2 ] 0x2d
jmp r-xdata
cmp dx ax
jne r-xdata
test esi esi
jne r-xdata
mov esi [ ebp - 0xc ]
mov edi [ ebp - 0x10 ]
test dx dx
jne r-xdata
movzx ecx dx
mov ebx ecx
imul ecx ecx 0x4d10
shr ebx 0x8
mov eax esi
shr eax 0x18
lea eax [ ebx + eax * 2 ]
imul eax eax 0x4d
lea eax [ eax + ecx - 0x134312f4 ]
sar eax 0x10
movzx eax ax
xor ecx ecx
movsx ebx ax
mov [ ebp - 0x20 ] cx
mov ecx rw-data
neg ebx
sub ecx 0x60
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x16 ] dx
mov [ ebp - 0x1a ] esi
mov [ ebp - 0x1e ] edi
mov [ ebp - 0x68 ] ecx
test ebx ebx
je r-xdata
xor eax eax
inc eax
mov [ ebx ] ax
mov eax 0x80000000
cmp esi eax
jne r-xdata
test edi edi
jne r-xdata
mov ecx [ ebp - 0x18 ]
shr ecx 0x10
mov edx 0x3fff
mov eax 0x7fff
cmp cx dx
jb r-xdata
jge r-xdata
test esi 0x40000000
jne r-xdata
test edi edi
je r-xdata
xor eax eax
cmp [ ebp - 0x60 ] cx
mov [ ebx ] ax
setne al
dec al
and al 0xd
add al 0x20
mov [ ebx + 0x2 ] al
mov [ ebx + 0x3 ] 0x1
mov [ ebx + 0x4 ] 0x30
mov [ ebx + 0x5 ] 0x0
test [ ebp + 0x18 ] 0x1
mov edx [ ebp - 0x64 ]
mov eax [ ebp - 0x4c ]
mov edi [ ebp + 0x14 ]
mov [ edx ] ax
je r-xdata
mov ebx [ ebp - 0x26 ]
inc [ ebp - 0x4c ]
xor edx edx
movzx ecx cx
mov [ ebp - 0x50 ] edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] edx
mov edx [ ebp - 0x26 ]
xor ebx ecx
and ecx eax
and edx eax
and ebx 0x8000
mov edi eax
lea esi [ edx + ecx ]
mov [ ebp - 0x5c ] ebx
movzx esi si
cmp cx di
jae r-xdata
test ebx ebx
je r-xdata
mov eax rw-data
neg ebx
sub eax 0x60
mov [ ebp - 0x68 ] eax
cmp [ ebp - 0x60 ] 0x0
je r-xdata
push r--data
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
cmp edi 0x15
jle r-xdata
cwde
add edi eax
test edi edi
jg r-xdata
xor eax eax
test bx bx
sete al
and [ ebp - 0x1c ] 0x0
dec eax
and eax 0x80000000
add eax 0x7fff8000
and [ ebp - 0x20 ] 0x0
cmp dx ax
jae r-xdata
add [ ebp - 0x68 ] 0x54
mov ecx ebx
and ecx 0x7
sar ebx 0x3
test ecx ecx
je r-xdata
cmp esi eax
jne r-xdata
cmp esi 0xc0000000
jne r-xdata
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_425a7b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
mov esi [ ebp - 0x18 ]
shr esi 0x10
sub esi 0x3ffe
xor eax eax
mov [ ebp - 0x16 ] ax
mov [ ebp - 0x44 ] 0x8
push 0x15
pop edi
xor eax eax
mov [ edx ] ax
mov eax 0x8000
cmp [ ebp - 0x60 ] ax
mov [ edx + 0x3 ] 0x1
setne al
dec al
and al 0xd
add al 0x20
mov [ edx + 0x2 ] al
mov [ edx + 0x4 ] 0x30
mov [ edx + 0x5 ] 0x0
jmp r-xdata
mov eax 0xbffd
cmp si ax
ja r-xdata
xor esi esi
imul ecx ecx 0xc
add ecx [ ebp - 0x68 ]
mov eax ecx
mov [ ebp - 0x44 ] ecx
mov ecx 0x8000
cmp [ eax ] cx
jb r-xdata
push r--data
test edi edi
jne r-xdata
test edi edi
jne r-xdata
mov [ ebx + 0x3 ] 0x6
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
mov eax [ ebp - 0x20 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shl [ ebp - 0x20 ] 0x1
shr eax 0x1f
add ebx ebx
or ebx eax
mov eax [ ebp - 0x18 ]
shr ecx 0x1f
add eax eax
or eax ecx
dec [ ebp - 0x44 ]
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x18 ] eax
jne r-xdata
test esi esi
jge r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax 0x3fbf
cmp si ax
ja r-xdata
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] ecx
movzx ecx [ eax + 0xa ]
mov edx ecx
xor edx [ ebp - 0x16 ]
mov esi 0x7fff
and edx 0x8000
mov [ ebp - 0x58 ] edx
mov edx [ ebp - 0x16 ]
and edx esi
and ecx esi
lea esi [ ecx + edx ]
movzx edi si
mov esi 0x7fff
cmp dx si
jae r-xdata
mov esi eax
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
dec [ ebp - 0x3a ]
mov [ ebp - 0x44 ] eax
push r--data
push r--data
jmp r-xdata
lea eax [ edi + 0x1 ]
lea ebx [ edx + 0x4 ]
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x4c ] eax
test eax eax
jle r-xdata
neg esi
and esi 0xff
jle r-xdata
xor eax eax
cmp cx ax
jne r-xdata
xor eax eax
xor eax eax
xor esi esi
cmp [ ebp - 0x58 ] si
sete al
dec eax
and eax 0x80000000
add eax 0x7fff8000
mov [ ebp - 0x18 ] eax
jmp r-xdata
cmp cx si
jae r-xdata
mov [ ebx + 0x3 ] 0x5
jmp r-xdata
push esi
push esi
push esi
push esi
push esi
call sub_41c544
add esp 0x14
lea eax [ ebx + 0x4 ]
push 0x16
push eax
call sub_425a7b
add esp 0xc
xor esi esi
test eax eax
je r-xdata
dec ebx
mov al [ ebx ]
dec ebx
cmp al 0x35
jge r-xdata
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x1c ]
lea esi [ ebp - 0x20 ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
shl [ ebp - 0x20 ] 0x1
mov edi [ ebp - 0x20 ]
shl [ ebp - 0x20 ] 0x1
shr edx 0x1f
lea ecx [ eax + eax ]
or ecx edx
mov edx [ ebp - 0x18 ]
mov esi eax
shr esi 0x1f
add edx edx
or edx esi
mov eax ecx
lea esi [ ecx + ecx ]
shr eax 0x1f
lea ecx [ edx + edx ]
mov edx [ ebp - 0x3c ]
shr edi 0x1f
or ecx eax
mov eax [ ebp - 0x20 ]
or esi edi
lea edi [ edx + eax ]
cmp edi eax
jb r-xdata
mov eax [ ebp - 0x18 ]
mov ebx [ ebp - 0x1c ]
mov ecx [ ebp - 0x1c ]
shr [ ebp - 0x18 ] 0x1
shl eax 0x1f
shr ebx 0x1
or ebx eax
mov eax [ ebp - 0x20 ]
shl ecx 0x1f
shr eax 0x1
or eax ecx
dec esi
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x20 ] eax
test esi esi
jg r-xdata
cmp dx ax
jne r-xdata
inc esi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x20 ] esi
jmp r-xdata
mov esi 0xbffd
cmp di si
ja r-xdata
xor eax eax
jmp r-xdata
cmp ebx [ ebp - 0x40 ]
jae r-xdata
mov ecx [ ebp - 0x40 ]
jmp r-xdata
lea eax [ esi + 0x1 ]
xor edx edx
cmp eax esi
jb r-xdata
cmp edi edx
jae r-xdata
mov [ ebp - 0x54 ] eax
lea edi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc esi
test [ ebp - 0x28 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] eax
jne r-xdata
cmp ebx esi
jne r-xdata
mov esi 0x3fbf
cmp di si
ja r-xdata
cmp [ ebx ] 0x39
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx [ ebp - 0x40 ]
jae r-xdata
cmp ebx ecx
jae r-xdata
xor edx edx
inc edx
cmp eax 0x1
jae r-xdata
mov eax [ ebp - 0x38 ]
lea edx [ eax + esi ]
mov [ ebp - 0x44 ] edx
cmp edx esi
jb r-xdata
inc edi
inc edi
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp - 0x28 ]
mov [ ebp - 0x58 ] ecx
lea eax [ ebp + eax - 0x20 ]
cmp [ ebp - 0x2c ] eax
jne r-xdata
cmp [ ebp - 0x20 ] eax
jne r-xdata
xor esi esi
cmp dx si
jne r-xdata
xor esi esi
mov [ ebx ] 0x30
dec ebx
inc [ ebx ]
inc ebx
inc [ eax ]
cmp [ ebx ] 0x30
jne r-xdata
mov eax [ ebp - 0x64 ]
cmp ebx ecx
jae r-xdata
inc ecx
mov esi eax
test edx edx
je r-xdata
inc ecx
cmp edx eax
jae r-xdata
mov eax [ ebp - 0x54 ]
mov ecx [ ebp - 0x40 ]
add eax eax
mov [ ebp - 0x48 ] ecx
test ecx ecx
jle r-xdata
add esi 0xc002
test si si
jle r-xdata
mov [ ebp - 0x44 ] 0x1
cmp ebx ecx
jae r-xdata
cmp [ ebp - 0x30 ] eax
je r-xdata
mov [ ebp - 0x16 ] ax
jmp r-xdata
cmp cx si
jne r-xdata
inc edi
test [ ebp - 0x18 ] 0x7fffffff
jne r-xdata
dec ebx
sub bl al
sub bl 0x3
movsx ecx bl
mov [ eax + 0x3 ] bl
mov [ ecx + eax + 0x4 ] 0x0
mov eax [ ebp - 0x74 ]
xor edx edx
mov [ eax ] dx
mov edx 0x8000
cmp [ ebp - 0x60 ] dx
mov [ eax + 0x3 ] 0x1
setne dl
dec dl
and dl 0xd
add dl 0x20
mov [ eax + 0x2 ] dl
mov [ ecx ] 0x30
mov [ eax + 0x5 ] 0x0
jmp r-xdata
add ecx [ ebp - 0x34 ]
shr edx 0x1f
add ecx ecx
or ecx edx
lea esi [ edi + edi ]
mov [ ebp - 0x20 ] esi
mov esi [ ebp - 0x44 ]
mov [ ebp - 0x18 ] ecx
shr ecx 0x18
add esi esi
add cl 0x30
mov eax edi
shr eax 0x1f
or esi eax
mov [ ebx ] cl
inc ebx
dec [ ebp - 0x4c ]
cmp [ ebp - 0x4c ] 0x0
mov [ ebp - 0x1c ] esi
mov [ ebp - 0x15 ] 0x0
jg r-xdata
add esi 0xffff
test si si
jge r-xdata
mov edi [ ebp - 0x8 ]
test edi edi
js r-xdata
sub [ ebp - 0x58 ] 0x2
inc eax
inc eax
dec [ ebp - 0x48 ]
cmp [ ebp - 0x48 ] 0x0
jg r-xdata
inc [ edi ]
cmp [ ebp - 0x44 ] 0x0
mov [ edi - 0x4 ] ebx
je r-xdata
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x20 ] eax
jmp r-xdata
and [ ebp - 0x54 ] esi
lea esi [ ebp - 0xc ]
mov [ ebp - 0x40 ] 0x5
inc edi
test [ eax + 0x8 ] 0x7fffffff
jne r-xdata
cmp [ ebp - 0x1c ] esi
jne r-xdata
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax esi
neg eax
movzx eax ax
add esi eax
test si si
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
shr edx 0x1f
lea eax [ edi + edi ]
or eax edx
add esi 0xffff
mov [ ebp - 0x8 ] eax
test si si
jg r-xdata
mov ecx [ ebp - 0x58 ]
movzx edx [ eax ]
movzx ecx [ ecx ]
and [ ebp - 0x44 ] 0x0
imul ecx edx
mov edx [ edi - 0x4 ]
lea ebx [ edx + ecx ]
cmp ebx edx
jb r-xdata
inc esi
inc esi
inc [ ebp - 0x54 ]
dec [ ebp - 0x40 ]
cmp [ ebp - 0x40 ] 0x0
jg r-xdata
lea ecx [ ebp + ecx - 0x20 ]
add eax 0x8
mov [ ebp - 0x70 ] ecx
mov [ ebp - 0x6c ] eax
cmp [ eax + 0x4 ] esi
jne r-xdata
cmp [ ebp - 0x20 ] esi
jne r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr edi 0x1
or edi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] edi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x50 ]
mov ecx [ ebp - 0x54 ]
mov edx [ ebp - 0x40 ]
add ecx ecx
mov [ ebp - 0x50 ] edx
test edx edx
jle r-xdata
add edi 0xc002
test di di
jle r-xdata
mov [ ebp - 0x5c ] 0x1
cmp eax ecx
jae r-xdata
cmp [ eax ] esi
je r-xdata
xor eax eax
mov [ ebp - 0x16 ] ax
jmp r-xdata
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp si ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x50 ] eax
je r-xdata
add edi 0xffff
test di di
jge r-xdata
test [ ebp - 0x8 ] 0x80000000
jne r-xdata
add [ ebp - 0x70 ] 0x2
sub [ ebp - 0x6c ] 0x2
dec [ ebp - 0x50 ]
cmp [ ebp - 0x50 ] 0x0
jg r-xdata
inc [ esi ]
cmp [ ebp - 0x5c ] 0x0
mov [ esi - 0x4 ] eax
je r-xdata
mov [ ebp - 0x18 ] esi
mov ax [ ebp - 0xe ]
or esi [ ebp - 0x5c ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] si
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x5c ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
jmp r-xdata
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
mov eax 0x8000
mov ecx eax
cmp [ ebp - 0x10 ] cx
ja r-xdata
mov eax edi
neg eax
movzx eax ax
add edi eax
test di di
jg r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp - 0x10 ]
shl [ ebp - 0x10 ] 0x1
mov edx eax
add eax eax
shr ecx 0x1f
or eax ecx
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
shr edx 0x1f
add eax eax
or eax edx
add edi 0xffff
mov [ ebp - 0x8 ] eax
test di di
jg r-xdata
mov eax [ ebp - 0x70 ]
movzx ecx [ eax ]
mov eax [ ebp - 0x6c ]
movzx eax [ eax ]
mov edx [ esi - 0x4 ]
imul ecx eax
and [ ebp - 0x5c ] 0x0
lea eax [ edx + ecx ]
cmp eax edx
jb r-xdata
mov eax [ ebp - 0x44 ]
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc esi
jmp r-xdata
cmp [ ebp - 0xe ] 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x10 ]
and ecx 0x1ffff
cmp ecx 0x18000
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
shr [ ebp - 0x8 ] 0x1
shl ecx 0x1f
shr esi 0x1
or esi ecx
mov ecx [ ebp - 0x10 ]
shl edx 0x1f
shr ecx 0x1
or ecx edx
dec eax
mov [ ebp - 0xc ] esi
mov [ ebp - 0x10 ] ecx
jne r-xdata
inc [ ebp - 0x48 ]
inc [ ebp - 0xe ]
and [ ebp - 0xe ] 0x0
cmp [ ebp - 0xa ] 0xffffffff
jne r-xdata
mov eax 0x7fff
cmp di ax
jb r-xdata
test [ ebp - 0x10 ] 0x1
je r-xdata
cmp [ ebp - 0x48 ] eax
je r-xdata
mov ax [ ebp - 0xe ]
or edi [ ebp - 0x58 ]
mov [ ebp - 0x20 ] ax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x1e ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x1a ] eax
mov [ ebp - 0x16 ] di
jmp r-xdata
xor eax eax
xor ecx ecx
cmp [ ebp - 0x58 ] ax
mov [ ebp - 0x1c ] eax
sete cl
mov [ ebp - 0x20 ] eax
dec ecx
and ecx 0x80000000
add ecx 0x7fff8000
mov [ ebp - 0x18 ] ecx
inc [ ebp - 0xa ]
jmp r-xdata
and [ ebp - 0xa ] 0x0
mov ecx 0xffff
cmp [ ebp - 0x6 ] cx
jne r-xdata
or [ ebp - 0x10 ] 0x1
inc [ ebp - 0x6 ]
jmp r-xdata
mov [ ebp - 0x6 ] ax
inc edi
jmp r-xdata
sub_428f9a
xor eax eax
test bl 0x10
je r-xdata
test bl 0x8
je r-xdata
inc eax
test bl 0x4
je r-xdata
or eax 0x4
test bl 0x2
je r-xdata
or eax 0x8
test bl 0x1
je r-xdata
or eax 0x10
test ebx 0x80000
je r-xdata
or eax 0x20
mov ecx ebx
mov edx 0x300
and ecx edx
push esi
mov esi 0x200
je r-xdata
or eax 0x2
mov ecx ebx
and ecx 0x30000
je r-xdata
cmp ecx 0x100
je r-xdata
or eax edx
cmp ecx 0x10000
jne r-xdata
or eax 0x400
cmp ecx esi
je r-xdata
retn
or eax 0x1000
pop esi
test ebx 0x40000
je r-xdata
or eax esi
jmp r-xdata
or eax 0x800
jmp r-xdata
cmp ecx edx
jne r-xdata
or eax 0xc00
jmp r-xdata
sub_429028
xor eax eax
test dl 0x10
je r-xdata
push ebx
push esi
push edi
mov ebx 0x200
test dl 0x8
je r-xdata
mov eax 0x80
test dl 0x4
je r-xdata
or eax ebx
test dl 0x2
je r-xdata
or eax 0x400
test dl 0x1
je r-xdata
or eax 0x800
mov edi 0x100
test edx 0x80000
je r-xdata
or eax 0x1000
mov ecx edx
mov esi 0x300
and ecx esi
je r-xdata
or eax edi
mov ecx 0x3000000
pop edi
and edx ecx
pop esi
pop ebx
cmp edx 0x1000000
je r-xdata
cmp ecx edi
je r-xdata
or eax 0x8040
cmp edx 0x2000000
je r-xdata
or eax 0x2000
cmp ecx ebx
je r-xdata
or eax 0x40
retn
cmp edx ecx
jne r-xdata
or eax 0x4000
jmp r-xdata
cmp ecx esi
jne r-xdata
retn
or eax 0x8000
retn
or eax 0x6000
jmp r-xdata
sub_4290c8
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
push ebx
push esi
push edi
fwait
fnstcw [ ebp - 0x8 ]
mov ebx [ ebp - 0x8 ]
xor edx edx
test bl 0x1
je r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test bl 0x8
je r-xdata
or edx 0x8
test bl 0x10
je r-xdata
or edx 0x4
test bl 0x20
je r-xdata
or edx 0x2
test bl 0x2
je r-xdata
or edx 0x1
movzx ecx bx
mov eax ecx
mov esi 0xc00
and eax esi
mov edi 0x300
je r-xdata
or edx 0x80000
and ecx edi
je r-xdata
cmp eax 0x400
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
mov edi [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax edi
not eax
and eax edx
and ecx edi
or eax ecx
mov [ ebp + 0xc ] eax
cmp eax edx
je r-xdata
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
xor esi esi
cmp [ rw-data ] esi
je r-xdata
mov ebx eax
call sub_428f9a
movzx eax ax
mov [ ebp - 0x4 ] eax
fldcw [ ebp - 0x4 ]
fwait
fnstcw [ ebp - 0x4 ]
mov ebx [ ebp - 0x4 ]
xor edx edx
test bl 0x1
je r-xdata
or edx edi
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
and edi 0x308031f
mov [ ebp - 0x14 ] edi
stmxcsr [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
test al al
jns r-xdata
test bl 0x4
je r-xdata
push 0x10
pop edx
test eax 0x200
je r-xdata
push 0x10
pop esi
test bl 0x8
je r-xdata
or edx 0x8
test eax 0x400
je r-xdata
or esi 0x8
test bl 0x10
je r-xdata
or edx 0x4
test eax 0x800
je r-xdata
or esi 0x4
test bl 0x20
je r-xdata
or edx 0x2
test eax 0x1000
je r-xdata
or esi 0x2
test bl 0x2
je r-xdata
or edx 0x1
test eax 0x100
je r-xdata
or esi 0x1
movzx ecx bx
mov eax ecx
and eax esi
je r-xdata
or edx 0x80000
mov ecx eax
mov ebx 0x6000
and ecx ebx
je r-xdata
or esi 0x80000
and ecx 0x300
je r-xdata
cmp eax 0x400
je r-xdata
mov edi 0x8040
and eax edi
sub eax 0x40
je r-xdata
cmp ecx 0x2000
je r-xdata
or edx 0x20000
cmp ecx 0x200
jne r-xdata
or edx 0x100
cmp eax 0x800
je r-xdata
or esi 0x2000000
sub eax 0x7fc0
je r-xdata
or esi 0x100
cmp ecx 0x4000
je r-xdata
mov [ ebp + 0xc ] edx
mov eax edx
or edx 0x40000
test ebx 0x1000
je r-xdata
or edx 0x10000
jmp r-xdata
or edx 0x200
jmp r-xdata
cmp eax esi
jne r-xdata
call sub_429028
push eax
mov [ ebp - 0xc ] eax
call sub_42998f
pop ecx
stmxcsr [ ebp - 0xc ]
mov ecx [ ebp - 0xc ]
xor edx edx
test cl cl
jns r-xdata
mov eax esi
jmp r-xdata
or esi 0x3000000
jmp r-xdata
sub eax 0x40
jne r-xdata
or esi 0x200
jmp r-xdata
cmp ecx ebx
jne r-xdata
or edx 0x300
jmp r-xdata
test ecx 0x200
je r-xdata
push 0x10
pop edx
mov ecx eax
xor ecx [ ebp + 0xc ]
or eax [ ebp + 0xc ]
test ecx 0x8031f
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
and eax [ ebp + 0x8 ]
not edx
and edx esi
or edx eax
cmp edx esi
jne r-xdata
or esi 0x1000000
jmp r-xdata
or esi 0x300
jmp r-xdata
test ecx 0x400
je r-xdata
or edx 0x8
or eax 0x80000000
test ecx 0x800
je r-xdata
or edx 0x4
test ecx 0x1000
je r-xdata
or edx 0x2
mov esi 0x100
test esi ecx
je r-xdata
or edx 0x1
mov eax ecx
and eax ebx
je r-xdata
or edx 0x80000
and ecx edi
sub ecx 0x40
je r-xdata
cmp eax 0x2000
je r-xdata
or edx 0x2000000
sub ecx 0x7fc0
je r-xdata
or edx esi
cmp eax 0x4000
je r-xdata
or edx 0x3000000
jmp r-xdata
sub ecx 0x40
jne r-xdata
or edx 0x200
jmp r-xdata
cmp eax ebx
jne r-xdata
mov eax edx
or edx 0x1000000
jmp r-xdata
or edx 0x300
jmp r-xdata
sub_4293d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov ecx [ ebp + 0x10 ]
xor ebx ebx
cmp ecx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp ecx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] ebx
jne r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
jmp r-xdata
push [ eax + 0x4 ]
push ecx
push [ ebp + 0xc ]
push ecx
push [ ebp + 0x8 ]
push 0x1001
push [ eax + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call sub_429d8f
add esp 0x20
cmp eax ebx
jne r-xdata
push [ ebp + 0x14 ]
push ecx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_429dd1
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4294df
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
xor esi esi
push edi
mov edi [ rw-data ]
mov [ ebp - 0x4 ] esi
mov eax [ edi ]
cmp eax esi
je r-xdata
xor eax eax
mov ebx [ WideCharToMultiByte@IAT ]
or eax 0xffffffff
jmp r-xdata
push 0x1
push eax
call sub_41f76d
pop ecx
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
push esi
push esi
push [ ebp - 0x8 ]
push eax
push 0xffffffff
push [ edi ]
push esi
push esi
call ebx
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_41a4ab
pop ecx
jmp r-xdata
lea eax [ ebp - 0x4 ]
push esi
push eax
call sub_429f77
pop ecx
pop ecx
test eax eax
jge r-xdata
add edi 0x4
mov eax [ edi ]
cmp eax esi
jne r-xdata
cmp [ ebp - 0x4 ] esi
je r-xdata
push esi
push esi
push esi
push esi
push 0xffffffff
push eax
push esi
push esi
call ebx
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
push [ ebp - 0x4 ]
call sub_41a4ab
pop ecx
mov [ ebp - 0x4 ] esi
sub_429595
mov eax [ rw-data ]
push esi
mov esi [ CloseHandle@IAT ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp eax 0xfffffffe
je r-xdata
pop esi
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call esi
push eax
call esi
sub_4295c2
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4269a7
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_41ae24
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4269a7
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4269a7
push 0x1
mov edi eax
call sub_4269a7
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_426921
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_42965e
push 0x10
push r--data
call sub_41aefc
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
xor edi edi
cmp eax edi
jl r-xdata
call sub_41ae11
and [ eax ] 0x0
call sub_41adfe
mov [ eax ] 0x9
call sub_41ae11
mov [ eax ] edi
call sub_41adfe
mov [ eax ] 0x9
push edi
push edi
push edi
push edi
push edi
call sub_41c66c
add esp 0x14
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_41af41
retn
or eax 0xffffffff
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea ebx [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ ebx ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_426a1e
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebx ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_41adfe
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x8 ]
call sub_4295c2
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_429721
mov eax [ ebp - 0x1c ]
sub_42972b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_41a4ab
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_429760
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_4297c1
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x10 ]
push ebx
push esi
xor esi esi
push edi
mov [ ebp - 0x18 ] 0x404e
mov [ eax ] esi
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] esi
cmp [ ebp + 0xc ] esi
jbe r-xdata
cmp [ eax + 0x8 ] esi
je r-xdata
mov edx [ eax ]
mov ebx [ eax + 0x4 ]
mov esi eax
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx edx
shr ecx 0x1f
lea edi [ edx + edx ]
lea edx [ ebx + ebx ]
or edx ecx
mov ecx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
add ecx ecx
or ecx esi
mov [ ebp - 0x14 ] edi
mov esi edi
and [ ebp - 0x14 ] 0x0
mov ebx edx
shr ebx 0x1f
add ecx ecx
shr edi 0x1f
or ecx ebx
mov ebx [ ebp - 0x10 ]
add esi esi
add edx edx
or edx edi
lea edi [ esi + ebx ]
mov [ eax ] esi
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
cmp edi esi
jb r-xdata
mov ecx [ eax + 0x4 ]
mov edx ecx
shr edx 0x10
mov [ eax + 0x8 ] edx
mov edx [ eax ]
mov edi edx
shl ecx 0x10
shr edi 0x10
or ecx edi
shl edx 0x10
add [ ebp - 0x18 ] 0xfff0
mov [ eax + 0x4 ] ecx
mov [ eax ] edx
mov ebx 0x8000
test [ eax + 0x8 ] ebx
jne r-xdata
mov [ ebp - 0x14 ] 0x1
cmp edi ebx
jae r-xdata
mov cx [ ebp - 0x18 ]
mov [ eax + 0xa ] cx
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_419730
leave
retn
mov esi [ eax ]
mov edi [ eax + 0x4 ]
add [ ebp - 0x18 ] 0xffff
mov ecx esi
add esi esi
shr ecx 0x1f
mov [ eax ] esi
lea esi [ edi + edi ]
or esi ecx
mov ecx [ eax + 0x8 ]
mov edx edi
shr edx 0x1f
add ecx ecx
or ecx edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] ecx
test ebx ecx
je r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebp - 0xc ]
lea ebx [ ecx + edx ]
xor esi esi
cmp ebx ecx
jb r-xdata
lea esi [ edx + 0x1 ]
cmp esi edx
jb r-xdata
xor ebx ebx
mov [ eax ] edi
cmp [ ebp - 0x14 ] ebx
je r-xdata
xor esi esi
inc esi
cmp ebx edx
jae r-xdata
xor ebx ebx
inc ebx
cmp esi 0x1
jae r-xdata
mov ecx [ ebp - 0x8 ]
add [ eax + 0x8 ] ecx
and [ ebp - 0x14 ] 0x0
lea ecx [ edi + edi ]
mov edx edi
shr edx 0x1f
lea edi [ ebx + ebx ]
or edi edx
mov edx [ eax + 0x8 ]
mov esi ebx
shr esi 0x1f
lea ebx [ edx + edx ]
mov edx [ ebp + 0x8 ]
or ebx esi
mov [ eax ] ecx
mov [ eax + 0x4 ] edi
mov [ eax + 0x8 ] ebx
movsx edx [ edx ]
lea esi [ ecx + edx ]
mov [ ebp - 0x10 ] edx
cmp esi ecx
jb r-xdata
inc [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
test esi esi
je r-xdata
inc ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0x4 ] esi
test ebx ebx
je r-xdata
mov [ ebp - 0x14 ] 0x1
cmp esi edx
jae r-xdata
dec [ ebp + 0xc ]
inc [ ebp + 0x8 ]
cmp [ ebp + 0xc ] 0x0
ja r-xdata
lea ecx [ edi + 0x1 ]
xor edx edx
cmp ecx edi
jb r-xdata
cmp [ ebp - 0x14 ] 0x0
mov [ eax ] esi
je r-xdata
xor esi esi
jmp r-xdata
xor edx edx
inc edx
cmp ecx 0x1
jae r-xdata
inc ebx
mov [ eax + 0x8 ] ebx
mov [ eax + 0x4 ] ecx
test edx edx
je r-xdata
sub_42998f
push 0x8
push r--data
call sub_41aefc
xor eax eax
cmp [ rw-data ] eax
je r-xdata
call sub_41af41
retn
test [ ebp + 0x8 ] 0x40
je r-xdata
and [ ebp + 0x8 ] 0xffffffbf
ldmxcsr [ ebp + 0x8 ]
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
ldmxcsr [ ebp + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
jmp r-xdata
sub_429a01
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
jmp r-xdata
test ecx ecx
jne r-xdata
dec ecx
cmp [ eax ] 0x0
je r-xdata
dec ecx
mov eax [ ebp + 0x8 ]
sub eax ecx
dec eax
pop ebp
retn
inc eax
sub_429a1f
mov edi edi
push ebp
mov ebp esp
sub esp 0x2c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x14 ]
push ebx
push esi
push edi
xor edi edi
mov ebx edx
mov esi ecx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] eax
cmp [ rw-data ] edi
jne r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
push 0x1
mov eax r--data
push eax
push 0x1
push eax
push edi
push edi
call [ CompareStringW@IAT ]
test eax eax
je r-xdata
cmp [ ebp + 0x10 ] 0xffffffff
jge r-xdata
push [ ebp + 0x10 ]
mov eax ebx
call sub_429a01
pop ecx
mov [ ebp + 0x10 ] eax
call [ GetLastError@IAT ]
cmp eax 0x78
jne r-xdata
mov [ rw-data ] 0x1
jmp r-xdata
mov edx [ ebp + 0x18 ]
cmp edx edi
jle r-xdata
xor eax eax
jmp r-xdata
cmp edx 0xffffffff
jl r-xdata
mov eax [ ebp - 0x1c ]
push edx
call sub_429a01
mov edx eax
pop ecx
mov [ ebp + 0x18 ] edx
jmp r-xdata
mov [ rw-data ] 0x2
lea esp [ ebp - 0x38 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_419730
leave
retn
mov ecx [ rw-data ]
cmp ecx 0x2
je r-xdata
xor edi edi
xor ebx ebx
cmp [ ebp + 0x8 ] edi
jne r-xdata
cmp ecx edi
je r-xdata
cmp [ ebp + 0x1c ] edi
jne r-xdata
mov eax [ esi ]
mov eax [ eax + 0x14 ]
mov [ ebp + 0x8 ] eax
xor eax eax
inc eax
cmp ecx eax
jne r-xdata
push [ ebp + 0x8 ]
call sub_42714c
mov esi eax
pop ecx
cmp esi 0xffffffff
je r-xdata
mov eax [ esi ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
mov [ ebp - 0x28 ] edi
cmp [ ebp + 0x1c ] edi
jne r-xdata
cmp esi [ ebp + 0x1c ]
je r-xdata
cmp [ ebp + 0x10 ] edi
je r-xdata
mov ecx [ esi ]
mov ecx [ ecx + 0x4 ]
mov [ ebp + 0x1c ] ecx
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringA@IAT ]
mov esi eax
test ebx ebx
je r-xdata
push 0x0
push 0x0
lea eax [ ebp + 0x10 ]
push eax
push [ ebp - 0x24 ]
push esi
push [ ebp + 0x1c ]
call sub_427195
mov ebx eax
add esp 0x18
test ebx ebx
je r-xdata
cmp [ ebp + 0x10 ] edx
jne r-xdata
cmp edx edi
jne r-xdata
mov eax esi
push ebx
call sub_41a4ab
push edi
call sub_41a4ab
pop ecx
pop ecx
push 0x0
push 0x0
lea eax [ ebp + 0x18 ]
push eax
push [ ebp - 0x1c ]
push esi
push [ ebp + 0x1c ]
call sub_427195
mov edi eax
add esp 0x18
test edi edi
jne r-xdata
cmp edx eax
jg r-xdata
push 0x2
mov esi [ MultiByteToWideChar@IAT ]
push edi
push edi
push [ ebp + 0x10 ]
push ebx
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
mov [ ebp - 0x2c ] ebx
cmp ebx edi
je r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x1c ] edi
push ebx
call sub_41a4ab
pop ecx
jmp r-xdata
cmp [ ebp + 0x10 ] eax
jle r-xdata
mov edi 0x400
test ebx ebx
jle r-xdata
lea eax [ ebp - 0x18 ]
push eax
push [ ebp + 0x1c ]
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
push 0x3
jmp r-xdata
and [ ebp - 0x20 ] 0x0
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp + 0x10 ] edi
jle r-xdata
pop eax
jmp r-xdata
push ebx
push [ ebp - 0x20 ]
push [ ebp + 0x10 ]
push [ ebp - 0x24 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
cmp [ ebp + 0x18 ] edi
jle r-xdata
cmp [ ebp - 0x18 ] 0x2
jb r-xdata
push [ ebp - 0x20 ]
call sub_42506e
mov eax [ ebp - 0x28 ]
pop ecx
jmp r-xdata
push 0x0
push 0x0
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x9
push [ ebp + 0x1c ]
call esi
mov ebx eax
test ebx ebx
je r-xdata
push eax
call sub_41a3e1
pop ecx
test eax eax
je r-xdata
call sub_41b680
mov eax esp
test eax eax
je r-xdata
cmp [ ebp - 0x18 ] 0x2
jae r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
jle r-xdata
mov [ ebp - 0x20 ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x12 ]
je r-xdata
xor eax eax
inc eax
jmp r-xdata
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div ebx
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x20 ] 0x0
je r-xdata
add eax 0x8
mov dl [ eax + 0x1 ]
test dl dl
je r-xdata
mov cl [ ebx ]
cmp cl [ eax ]
jb r-xdata
push ebx
push edi
push [ ebp + 0x18 ]
push [ ebp - 0x1c ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ ebx + ebx + 0x8 ]
cmp eax edi
ja r-xdata
mov ecx [ ebp - 0x1c ]
mov cl [ ecx ]
cmp cl [ eax ]
jb r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
push edi
call sub_42506e
pop ecx
push ebx
push edi
push [ ebp - 0x2c ]
push [ ebp - 0x20 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CompareStringW@IAT ]
mov [ ebp - 0x28 ] eax
push eax
call sub_41a3e1
pop ecx
test eax eax
je r-xdata
call sub_41b680
mov edi esp
test edi edi
je r-xdata
inc eax
inc eax
cmp [ eax ] 0x0
jne r-xdata
cmp cl dl
jbe r-xdata
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
jmp r-xdata
test edi edi
je r-xdata
sub_429d8f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
push [ ebp + 0x24 ]
mov edx [ ebp + 0x14 ]
push [ ebp + 0x20 ]
lea ecx [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_429a1f
add esp 0x18
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429dd1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov edx [ ebp + 0x10 ]
xor ebx ebx
cmp edx ebx
jne r-xdata
cmp [ ebp + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
push esi
mov esi 0x7fffffff
cmp edx esi
jbe r-xdata
mov eax 0x7fffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop ebx
leave
retn
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x10 ]
cmp ecx ebx
jne r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
jmp r-xdata
push [ eax + 0x8 ]
lea eax [ ebp - 0x10 ]
push edx
push [ ebp + 0xc ]
push edx
push [ ebp + 0x8 ]
push 0x1001
push ecx
push eax
call sub_429d8f
add esp 0x20
cmp eax ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_427349
add esp 0x10
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
add eax 0xfffffffe
call sub_41adfe
mov [ eax ] 0x16
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_429ecb
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ rw-data ]
jmp r-xdata
mov eax [ esi ]
test eax eax
jne r-xdata
push edi
push eax
push [ ebp + 0x8 ]
call sub_4294c5
add esp 0xc
test eax eax
jne r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
neg eax
add esi 0x4
mov eax [ esi ]
mov al [ edi + eax ]
cmp al 0x3d
je r-xdata
mov eax esi
sub eax [ rw-data ]
sar eax 0x2
jmp r-xdata
test al al
je r-xdata
pop esi
pop ebp
retn
sub_429f1d
mov edi edi
push ebp
mov ebp esp
push ecx
push edi
mov edi eax
xor eax eax
mov ecx edi
test edi edi
je r-xdata
pop edi
leave
retn
cmp [ edi ] eax
je r-xdata
push esi
inc eax
push 0x4
push eax
call sub_41f76d
mov esi eax
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
test esi esi
jne r-xdata
add ecx 0x4
inc eax
cmp [ ecx ] 0x0
jne r-xdata
mov eax [ edi ]
test eax eax
jne r-xdata
push 0x9
call sub_41b153
jmp r-xdata
push eax
call sub_42a1c2
mov [ esi ] eax
add esi 0x4
add edi 0x4
and [ esi ] eax
mov eax [ ebp - 0x4 ]
pop esi
pop ecx
sub_429f77
mov edi edi
push ebp
mov ebp esp
sub esp 0x14
mov eax [ ebp + 0x8 ]
push ebx
xor ebx ebx
mov [ ebp - 0xc ] ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ eax ]
push edi
mov [ ebp - 0x4 ] esi
cmp esi ebx
je r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
or eax 0xffffffff
jmp r-xdata
call sub_41adfe
mov [ eax ] 0x16
push 0x3d
push esi
call sub_42a2d3
mov edi eax
pop ecx
pop ecx
mov [ ebp - 0x14 ] edi
cmp edi ebx
je r-xdata
pop ebx
leave
retn
cmp esi edi
je r-xdata
xor eax eax
cmp [ edi + 0x1 ] bl
sete al
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
cmp eax [ rw-data ]
jne r-xdata
cmp eax ebx
jne r-xdata
call sub_429f1d
mov [ rw-data ] eax
mov esi [ rw-data ]
mov [ ebp - 0x10 ] esi
cmp esi ebx
je r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
or eax 0xffffffff
sub edi [ ebp - 0x4 ]
push [ ebp - 0x4 ]
call sub_429ecb
mov edi eax
cmp edi ebx
pop ecx
jl r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ rw-data ] ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
jne r-xdata
cmp [ esi ] ebx
je r-xdata
xor eax eax
jmp r-xdata
push 0x4
call sub_41f728
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
call sub_4294df
test eax eax
je r-xdata
push [ ebp - 0x4 ]
call sub_41a4ab
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
cmp edi ebx
jge r-xdata
lea esi [ esi + edi * 4 ]
push [ esi ]
call sub_41a4ab
pop ecx
cmp [ ebp - 0x8 ] ebx
jne r-xdata
pop edi
pop esi
mov [ eax ] ebx
cmp [ rw-data ] ebx
jne r-xdata
lea eax [ edi + 0x2 ]
cmp eax edi
jl r-xdata
neg edi
cmp [ esi ] ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
jmp r-xdata
push 0x4
call sub_41f728
pop ecx
mov [ rw-data ] eax
cmp eax ebx
je r-xdata
cmp eax 0x3fffffff
jae r-xdata
mov eax [ esi + 0x4 ]
mov [ esi ] eax
mov eax [ ebp - 0x10 ]
inc edi
lea esi [ eax + edi * 4 ]
cmp edi 0x3fffffff
jae r-xdata
cmp [ ebp + 0xc ] ebx
je r-xdata
mov [ eax ] ebx
push eax
push 0x4
push [ rw-data ]
call sub_41f807
add esp 0xc
cmp eax ebx
je r-xdata
push 0x4
push edi
push [ rw-data ]
call sub_41f807
add esp 0xc
cmp eax ebx
je r-xdata
cmp [ ebp - 0x8 ] ebx
je r-xdata
mov esi [ ebp - 0x4 ]
push 0x1
push esi
call sub_424c80
inc eax
pop ecx
inc eax
push eax
call sub_41f76d
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea ecx [ eax + edi * 4 ]
mov [ ecx ] edx
mov [ ecx + 0x4 ] ebx
mov ecx [ ebp + 0x8 ]
mov [ ecx ] ebx
jmp r-xdata
mov eax [ ebp - 0xc ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_41a4ab
mov eax [ ebp + 0x8 ]
pop ecx
mov [ eax ] ebx
push esi
push esi
call sub_424c80
inc eax
pop ecx
inc eax
push eax
push edi
call sub_425a7b
add esp 0xc
test eax eax
je r-xdata
mov [ rw-data ] eax
mov ecx [ ebp - 0x8 ]
mov eax edi
sub eax esi
add eax [ ebp - 0x14 ]
mov [ eax ] bl
inc eax
neg ecx
sbb ecx ecx
not ecx
and ecx eax
push ecx
push edi
call [ SetEnvironmentVariableA@IAT ]
test eax eax
jne r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
push edi
call sub_41a4ab
pop ecx
or [ ebp - 0xc ] 0xffffffff
call sub_41adfe
mov [ eax ] 0x2a
sub_42a1c2
mov edi edi
push ebp
mov ebp esp
push ebx
xor ebx ebx
cmp [ ebp + 0x8 ] ebx
jne r-xdata
push esi
push edi
push [ ebp + 0x8 ]
call sub_424c80
mov esi eax
inc esi
push esi
call sub_41a3e1
mov edi eax
pop ecx
pop ecx
cmp edi ebx
je r-xdata
xor eax eax
jmp r-xdata
xor eax eax
push [ ebp + 0x8 ]
push esi
push edi
call sub_425a7b
add esp 0xc
test eax eax
je r-xdata
pop ebx
pop ebp
retn
mov eax edi
jmp r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
call sub_41c544
add esp 0x14
pop edi
pop esi
sub_42a217
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x10 ]
call sub_419be7
mov eax [ ebp + 0x8 ]
xor ebx ebx
cmp eax ebx
jne r-xdata
push esi
mov esi [ ebp - 0xc ]
cmp [ esi + 0x8 ] ebx
jne r-xdata
call sub_41adfe
push ebx
push ebx
push ebx
push ebx
push ebx
mov [ eax ] 0x16
call sub_41c66c
add esp 0x14
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx cx [ eax ]
movzx ecx cx
cmp cx bx
jne r-xdata
push [ ebp + 0xc ]
push eax
call sub_42a300
pop ecx
pop ecx
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
movzx edx cl
test [ edx + esi + 0x1d ] 0x4
je r-xdata
movzx ecx cx
cmp [ ebp + 0xc ] ecx
jne r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop ebx
leave
retn
movzx edx cx
cmp [ ebp + 0xc ] edx
je r-xdata
inc eax
mov dl [ eax ]
cmp dl bl
je r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
pop esi
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
inc eax
movzx ecx cx
movzx edx dl
shl ecx 0x8
or ecx edx
cmp [ ebp + 0xc ] ecx
jne r-xdata
xor eax eax
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
dec eax
jmp r-xdata
sub_42a300
xor eax eax
mov al [ esp + 0x8 ]
push ebx
mov ebx eax
shl eax 0x8
mov edx [ esp + 0x8 ]
test edx 0x3
je r-xdata
or ebx eax
push edi
mov eax ebx
shl ebx 0x10
push esi
or ebx eax
mov cl [ edx ]
add edx 0x1
cmp cl bl
je r-xdata
mov eax [ edx - 0x4 ]
cmp al bl
je r-xdata
and eax 0x81010100
je r-xdata
lea eax [ edx - 0x1 ]
pop ebx
retn
test cl cl
je r-xdata
lea eax [ edx - 0x4 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
mov ecx [ edx ]
mov edi 0x7efefeff
mov eax ecx
mov esi edi
xor ecx ebx
add esi eax
add edi ecx
xor ecx 0xffffffff
xor eax 0xffffffff
xor ecx edi
xor eax esi
add edx 0x4
and ecx 0x81010100
jne r-xdata
and eax 0x1010100
jne r-xdata
pop ebx
xor eax eax
retn
test edx 0x3
jne r-xdata
pop esi
pop edi
cmp ah bl
je r-xdata
and esi 0x80000000
jne r-xdata
lea eax [ edx - 0x3 ]
pop esi
pop edi
pop ebx
retn
test ah ah
je r-xdata
shr eax 0x10
cmp al bl
je r-xdata
lea eax [ edx - 0x2 ]
pop esi
pop edi
pop ebx
retn
test al al
je r-xdata
cmp ah bl
je r-xdata
pop esi
pop edi
lea eax [ edx - 0x1 ]
pop ebx
retn
test ah ah
je r-xdata
jmp r-xdata
sub_42a472
mov edi edi
push esi
mov esi ecx
lea eax [ esi + 0x14 ]
push eax
call [ DeleteCriticalSection@IAT ]
lea ecx [ esi + 0x2c ]
pop esi
jmp r-xdata
mov edi edi
push esi
mov esi ecx
mov eax [ esi ]
test eax eax
je r-xdata
and [ esi + 0x4 ] 0x0
and [ esi + 0x8 ] 0x0
pop esi
retn
push eax
call sub_41a4ab
and [ esi ] 0x0
pop ecx
sub_42a48a
mov edi edi
push esi
mov esi ecx
call sub_42a456
mov eax __dos_header
lea ecx [ esi + 0x14 ]
mov [ esi ] 0x38
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
mov [ esi + 0xc ] 0x900
mov [ esi + 0x10 ] r--data
call sub_42a40b
test eax eax
jge r-xdata
mov eax esi
pop esi
retn
mov [ rw-data ] 0x1
sub_42a4fb
mov edi edi
push ebp
mov ebp esp
sub esp 0x44
push ebx
mov eax __dos_header
push esi
mov esi [ ebp + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx [ esi + 0x4 ]
mov ebx [ esi + 0xc ]
add edx eax
push edi
mov edi [ esi + 0x14 ]
add edi eax
add ecx eax
mov [ ebp - 0x18 ] edx
mov edx [ esi + 0x10 ]
add ebx eax
add edx eax
mov eax [ esi + 0x1c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x38 ] ecx
xor ecx ecx
mov [ ebp - 0xc ] edi
mov [ ebp - 0x3c ] eax
xor eax eax
test [ esi ] 0x1
lea edi [ ebp - 0x30 ]
mov [ ebp - 0x44 ] 0x24
mov [ ebp - 0x40 ] esi
mov [ ebp - 0x34 ] ecx
stosd [ edi ]
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
jne r-xdata
mov eax [ ebp - 0x18 ]
mov edi [ eax ]
mov eax [ ebp + 0xc ]
sub eax ebx
sar eax 0x2
shl eax 0x2
add edx eax
mov edx [ edx ]
mov [ ebp + 0x8 ] eax
mov eax edx
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x34 ] eax
lea eax [ edx + r--data ]
jne r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push ecx
push 0xc06d0057
call [ RaiseException@IAT ]
xor eax eax
jmp r-xdata
mov [ ebp - 0x30 ] eax
mov eax [ rw-data ]
xor ebx ebx
cmp eax ecx
je r-xdata
movzx eax dx
pop edi
pop esi
pop ebx
leave
retn 0x8
test edi edi
jne r-xdata
lea edx [ ebp - 0x44 ]
push edx
push ecx
call eax
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x2c ] edi
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x2
call eax
mov ebx eax
push [ ebp - 0x38 ]
call [ LoadLibraryA@IAT ]
mov edi eax
test edi edi
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x1
call eax
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
and [ ebp - 0x24 ] 0x0
lea ecx [ ebp - 0x44 ]
push ecx
push 0x5
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x28 ] ebx
call eax
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
cmp [ esi + 0x14 ] ebx
je r-xdata
push edi
push [ ebp - 0x18 ]
call [ InterlockedExchange@IAT ]
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
push [ ebp - 0x30 ]
push edi
call [ GetProcAddress@IAT ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ esi + 0x1c ] ebx
je r-xdata
push edi
call [ FreeLibrary@IAT ]
cmp [ esi + 0x18 ] 0x0
je r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0xc ] eax
lea eax [ ebp + 0xc ]
push eax
push 0x1
push 0x0
push 0xc06d007e
call [ RaiseException@IAT ]
mov eax [ ebp - 0x28 ]
jmp r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x3
call eax
mov edi eax
test edi edi
jne r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x24 ] eax
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ edi + 0x3c ]
add eax edi
cmp [ eax ] 0x4550
jne r-xdata
push 0x8
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
je r-xdata
test ebx ebx
jne r-xdata
lea ecx [ ebp - 0x44 ]
push ecx
push 0x4
call eax
mov ebx eax
mov ecx [ ebp - 0x4 ]
cmp [ eax + 0x8 ] ecx
jne r-xdata
mov [ eax + 0x4 ] esi
mov ecx [ rw-data ]
mov [ eax ] ecx
mov [ rw-data ] eax
jmp r-xdata
lea eax [ ebp - 0x44 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
push 0x1
push ebx
push 0xc06d007f
call [ RaiseException@IAT ]
mov ebx [ ebp - 0x28 ]
cmp edi [ eax + 0x34 ]
jne r-xdata
mov eax [ ebp - 0xc ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx + eax ]
test ebx ebx
jne r-xdata
sub_42bd7e
mov ecx rw-data
call sub_410cd7
xor eax eax
push sub_42c035
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] eax
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_419fa9
pop ecx
retn
sub_42bde6
mov ecx rw-data
call sub_410cd7
xor eax eax
push sub_42c03f
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0x1
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_419fa9
pop ecx
retn
sub_42be53
mov ecx rw-data
call sub_410cd7
or [ rw-data ] 0xffffffff
xor eax eax
push sub_42c049
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_419fa9
pop ecx
retn
sub_42bebd
mov ecx rw-data
call sub_410cd7
xor eax eax
push sub_42c053
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] r--data
mov [ rw-data ] 0xfffffffe
mov [ rw-data ] al
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
call sub_419fa9
pop ecx
retn
sub_401080
push esi
mov esi ecx
call sub_4010a0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_401160
mov eax [ esp + 0x4 ]
inc [ eax + 0x38 ]
mov eax [ eax + 0x38 ]
retn 0x4
sub_401170
mov ecx [ esp + 0x4 ]
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
dec eax
mov [ ecx + 0x38 ] eax
retn 0x4
retn 0x4
sub_401190
xor eax eax
retn 0x8
sub_401500
xor eax eax
retn 0x4
sub_401560
mov [ eax ] r--data
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
retn
push eax
call sub_409992
pop ecx
sub_401870
mov eax [ esp + 0x4 ]
push eax
call sub_409992
pop ecx
retn 0x4
sub_401880
retn 0x4
sub_401a00
mov eax [ esp + 0x4 ]
cmp eax 0x50
ja r-xdata
jmp sub_40a39e
movzx ecx [ eax + lookup_table_401a34 ]
jmp [ ecx * 4 + jump_table_401a24 ]
jmp sub_40a366
retn
sub_4021b0
mov eax [ esp + 0x4 ]
inc [ eax + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_4021c0
mov eax [ esp + 0x4 ]
mov eax [ eax + 0x4 ]
retn 0x4
sub_4021d0
mov eax [ esp + 0x8 ]
mov [ eax ] 0x0
mov eax 0x80004001
retn 0x8
sub_4021f0
mov eax 0x80004001
retn 0x10
sub_402200
mov eax 0x80004001
retn 0x18
sub_4026d0
mov eax [ esp + 0x4 ]
test eax eax
jne r-xdata
mov [ esp + 0x4 ] eax
jmp sub_419e63
retn
sub_402780
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
call sub_402060
add esp 0x8
neg eax
sbb eax eax
inc eax
retn
sub_402810
mov eax r--data
retn
sub_402890
push esi
mov esi ecx
call sub_4028b0
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_402950
test ecx ecx
je r-xdata
retn
mov eax [ ecx ]
mov edx [ eax + 0x4 ]
push 0x1
call edx
sub_402960
mov eax r--data
retn
sub_402b9e
mov edx [ ebp - 0x14 ]
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] 0x1
mov eax sub_402bb1
retn
sub_402d5d
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x4 ] 0x1
mov eax sub_402d70
retn
j_sub_40a4a6#5
jmp sub_40a4a6
sub_402dc0
cmp [ ecx + 0x4 ] 0x0
je r-xdata
retn
mov eax [ ecx ]
push eax
push 0x0
call sub_4113e4
sub_402f20
push ecx
mov eax [ eax + 0x8 ]
sub eax 0x10
push eax
mov [ esp + 0x4 ] 0x0
call sub_4026f0
add eax 0x10
mov [ esi ] eax
mov eax esi
add esp 0x8
retn
sub_402fe0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push ecx
push edx
push eax
push 0x0
push 0x3
call [ MultiByteToWideChar@IAT ]
retn
sub_403410
push esi
mov esi ecx
call sub_403430
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_403d40
mov eax [ ecx ]
mov ecx [ eax - 0xc ]
push ecx
push eax
call [ SysAllocStringLen@IAT ]
test eax eax
jne r-xdata
retn
jmp sub_409420
j_sub_412d23
jmp sub_412d23
sub_403dd0
push esi
mov esi ecx
mov [ esi ] r--data
call sub_410cff
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
j_sub_410c27
jmp sub_410c27
sub_403ee0
push esi
mov esi ecx
call sub_403e80
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_403fd0
push esi
mov esi ecx
call sub_403f70
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_4040c0
push esi
mov esi ecx
call sub_404060
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_404210
push esi
mov esi ecx
call sub_404230
test [ esp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
retn 0x4
push esi
call sub_409992
add esp 0x4
sub_404320
mov eax r--data
retn
sub_404330
mov eax r--data
retn
sub_404340
mov eax [ esp + 0x4 ]
push eax
call [ Sleep@IAT ]
xor eax eax
retn
sub_406100
push 0x1
call sub_4131cb
retn
sub_4066d0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x22c ] eax
retn 0x4
sub_4066e0
mov eax [ ecx + 0x22c ]
retn
sub_4066f0
mov eax [ esp + 0x4 ]
mov [ ecx + 0x224 ] eax
retn 0x4
sub_406700
mov eax [ ecx + 0x224 ]
retn
sub_406710
mov eax 0x4655
retn
sub_406790
mov eax r--data
retn
sub_406810
mov eax r--data
retn
sub_406890
mov eax r--data
retn
sub_406910
mov eax r--data
retn
sub_406990
mov eax r--data
retn
sub_4069a0
mov eax 0x1
retn
sub_4069b0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
push eax
push ecx
push 0x0
push 0x1
push r--data
call [ LoadRegTypeLib@IAT ]
retn 0x8
sub_406a50
mov eax r--data
retn
sub_406a60
mov eax r--data
retn
sub_406a70
mov eax r--data
retn
sub_406a80
mov eax r--data
retn
sub_406a90
mov eax r--data
retn
sub_406aa0
mov eax r--data
retn
sub_406ab0
mov eax r--data
retn
sub_406ac0
mov eax r--data
retn
sub_406ad0
mov ecx [ r--data ]
mov eax [ esp + 0x4 ]
mov [ eax ] ecx
mov edx [ r--data ]
mov [ eax + 0x4 ] edx
mov ecx [ r--data ]
mov [ eax + 0x8 ] ecx
mov edx [ r--data ]
mov [ eax + 0xc ] edx
mov eax 0x1
retn 0x4
sub_406b00
push 0x0
push r--data
push 0x0
call sub_413e83
sub_406b20
push 0x0
push r--data
push 0x0
call sub_413e83
sub_407890
push esi
mov esi ecx
mov eax [ esi + 0x20 ]
push eax
call [ CloseHandle@IAT ]
mov [ esi + 0x20 ] 0x0
pop esi
retn
sub_409420
push 0x8007000e
call sub_401fa0
sub_409880
push ecx
call [ VariantClear@IAT ]
retn
sub_409920
mov eax [ esp + 0x4 ]
test eax eax
jl r-xdata
call sub_40a39e
cmp eax [ ecx + 0x8 ]
jge r-xdata
mov ecx [ ecx + 0x4 ]
mov eax [ ecx + eax * 4 ]
retn 0x4
sub_409987
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_409958
sub_40999d
mov eax rw-data
retn
sub_409a08
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_409a1f
push 0x14
call sub_409958
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_409a08
sub_409a95
lea eax [ ecx + 0x4 ]
cmp [ ecx ] eax
je r-xdata
retn
jmp sub_409a35
sub_409cdd
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi ] 0x0
call sub_409b3a
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409cf7
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi ] 0x0
call sub_409b5b
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a097
mov eax rw-data
retn
sub_40a10e
mov eax ecx
retn
sub_40a111
mov eax ecx
mov [ eax ] r--data
xor ecx ecx
mov [ eax + 0x10 ] 0x2
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x14 ] cx
mov [ eax + 0x16 ] cx
mov [ eax + 0x4 ] eax
retn
sub_40a134
xor edx edx
lea eax [ ecx + 0x10 ]
inc edx
[ eax ] edx
lea eax [ ecx + 0x4 ]
retn
sub_40a142
mov eax r--data
retn
sub_40a169
mov edi edi
push esi
mov esi ecx
call sub_40a3e9
and [ esi + 0x8 ] 0x0
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_40a296
cmp [ ecx + 0x4 ] 0x0
jle r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40a2a4
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x10 ]
sub_40a323
mov eax r--data
retn
sub_40a329
mov eax r--data
retn
sub_40a32f
mov eax r--data
retn
sub_40a335
mov eax r--data
retn
sub_40a366
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41ad31
int3
sub_40a382
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41ad31
int3
sub_40a39e
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41ad31
int3
sub_40a3e9
mov eax ecx
mov [ eax + 0x4 ] 0x1
retn
sub_40a3f3
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x4 ] ecx
pop ebp
retn 0x4
sub_40a48e
mov edi edi
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
call sub_40a45b
mov ecx [ eax ]
mov [ esi ] ecx
mov [ eax ] esi
mov eax esi
pop esi
retn
sub_40a4ca
call sub_40a45b
mov eax [ eax ]
test eax eax
je r-xdata
retn
and [ eax + 0x4 ] 0x0
sub_40a542
call sub_411cf7
mov eax [ eax + 0xc ]
retn 0x4
sub_40aefd
push [ ecx + 0x20 ]
call [ GetMenu@IAT ]
push eax
call sub_4166da
retn
sub_40af0d
cmp [ ecx + 0x20 ] 0x0
mov eax [ ecx ]
je r-xdata
jmp [ eax + 0x11c ]
jmp [ eax + 0x60 ]
sub_40af67
lea eax [ ecx + 0x40 ]
retn
sub_40afff
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call [ FreeLibrary@IAT ]
sub_40b0bc
mov edi edi
push esi
mov esi ecx
call sub_410c63
mov [ esi ] r--data
mov [ esi + 0x28 ] 0x1
mov eax esi
pop esi
retn
sub_40b0d7
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x28 ] eax
mov [ ecx + 0x18 ] 0x1
pop ebp
retn 0x4
sub_40b0ed
retn 0x4
sub_40b0f0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_409992
pop ecx
pop ebp
retn 0x8
sub_40b102
xor eax eax
retn 0x4
sub_40b138
mov eax r--data
retn
sub_40b13e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call sub_40ae50
pop ebp
retn 0x18
sub_40b15b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
mov [ eax ] 0x1
xor eax eax
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40b17a
mov eax 0x80004001
retn 0x10
sub_40b182
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
mov eax 0x80004001
mov eax 0x80004003
jmp r-xdata
pop ebp
retn 0x8
sub_40b1a1
lea eax [ ecx + 0x28 ]
cmp [ eax ] 0x0
jne r-xdata
xor eax eax
push eax
push r--data
push 0xfffffffc
push [ ecx + 0x20 ]
call CreateStdAccessibleObject
test eax eax
jl r-xdata
retn
sub_40b1c0
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x1c ]
pop ebp
retn 0x4
sub_40b1d5
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x20 ]
pop ebp
retn 0x4
sub_40b33a
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x48 ]
pop ebp
retn 0x4
sub_40b34f
mov edi edi
push ebp
mov ebp esp
mov eax [ ecx + 0x28 ]
push [ ebp + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4c ]
pop ebp
retn 0x4
sub_40b404
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov eax [ ecx + 0x28 ]
push [ ebp + 0xc ]
mov ecx [ eax ]
push [ ebp + 0x8 ]
push eax
call [ ecx + 0x60 ]
pop ebp
retn 0xc
sub_40b466
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x2c ] eax
xor eax eax
pop ebp
retn 0x4
sub_40b477
mov eax [ ecx + 0x3c ]
and eax 0x10
retn
sub_40b47e
mov eax [ ecx + 0xa8 ]
test eax eax
je r-xdata
xor eax eax
retn
cmp eax 0xe002
je r-xdata
cmp eax 0xe001
je r-xdata
xor eax eax
inc eax
retn
sub_40b49d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x4
call sub_40a39e
sub_40b4b8
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
jne r-xdata
and [ eax ] 0x0
xor eax eax
inc eax
pop ebp
retn 0x10
call sub_40a39e
sub_40b4d3
mov eax r--data
retn
sub_40b4d9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
push r--data
push eax
call [ ecx ]
pop ebp
retn 0x8
sub_40b880
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetMenuItemID@IAT ]
pop ebp
retn 0x4
sub_40b895
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetSubMenu@IAT ]
push eax
call sub_4166da
pop ebp
retn 0x4
sub_40b8b0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ SendMessageW@IAT ]
pop ebp
retn 0xc
sub_40b8cb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindowRect@IAT ]
pop ebp
retn 0x4
sub_40b8e0
push 0x0
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40b8ec
push 0x1
push [ ecx + 0x20 ]
call [ EnableWindow@IAT ]
retn
sub_40b8f8
mov edi edi
push esi
mov esi ecx
call sub_411cf7
mov ecx [ eax + 0x4 ]
call sub_410d16
mov eax esi
pop esi
retn
sub_40b97e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
add ecx 0x1c
call sub_416d85
mov ecx [ ebp + 0xc ]
mov [ eax ] ecx
pop ebp
retn 0x8
sub_40b9dc
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_40b8cb
mov ecx [ ebp + 0x8 ]
call sub_41650d
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
pop ebp
retn 0xc
sub_40b9fd
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push eax
push [ ecx + 0x20 ]
call [ SetMenu@IAT ]
pop ebp
retn 0x4
mov eax [ eax + 0x4 ]
sub_40c5db
mov eax [ ecx ]
test eax eax
je r-xdata
retn
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
sub_40c7ff
push 0x4
mov eax sub_42a861
call sub_41a939
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
and [ ebp - 0x4 ] 0x0
test ecx ecx
je r-xdata
call sub_41aa11
retn 0x4
call sub_40b997
sub_40c8ec
cmp [ ebp - 0x20 ] 0x2
je r-xdata
retn
push [ ebp - 0x1c ]
push 0x0
call sub_4113e4
sub_40c9d7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_411cf7
mov eax [ eax + 0x78 ]
mov ecx [ eax ]
call sub_40c92c
pop ebp
retn 0x4
j_sub_40b962
jmp sub_40b962
sub_40d51c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
neg eax
sbb eax eax
and eax 0xffff3ef9
add eax 0x80010108
pop ebp
retn 0x18
sub_40d539
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8 ] ecx
xor eax eax
pop ebp
retn 0xc
sub_40d60e
push 0xc
call sub_415ff6
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
retn
sub_40d623
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x20 ]
call [ GetWindow@IAT ]
push eax
call sub_40cadb
pop ebp
retn 0x4
sub_40d768
mov eax [ ebp - 0x18 ]
add eax 0x58
push eax
push [ ebp - 0x14 ]
call sub_40f69a
cmp [ ebp - 0x14 ] 0x0
mov [ ebp + 0x18 ] eax
je r-xdata
mov eax r-xdata
retn
mov ecx [ ebp - 0x14 ]
call sub_40a296
sub_40db79
xor eax eax
retn 0x8
sub_40db7e
mov eax 0x80004001
retn 0x8
sub_40db86
cmp [ ecx + 0xc ] 0x0
jne r-xdata
mov eax [ ecx + 0xc ]
mov ecx [ eax ]
push 0x0
push eax
call [ ecx + 0xc ]
retn
xor eax eax
retn
sub_40dc6e
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push r--data
push ecx
call sub_40dbcb
pop ebp
retn 0x8
sub_40dc88
mov [ ecx ] r--data
mov [ ecx + 0x4 ] r--data
mov [ ecx + 0x10 ] r--data
mov [ ecx + 0x14 ] 0xc0000001
call sub_40db86
jmp sub_4110c4
sub_40dcad
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
inc [ eax + 0x14 ]
mov eax [ eax + 0x14 ]
pop ebp
retn 0x4
sub_40dce2
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_40dc6e
pop ebp
retn 0xc
sub_40dd1a
sub [ esp + 0x4 ] 0x10
jmp sub_40dcbf
sub_40dd24
sub [ esp + 0x4 ] 0x4
jmp sub_40dce2
sub_40dd2e
sub [ esp + 0x4 ] 0x10
jmp sub_40dcad
sub_40dd38
sub [ esp + 0x4 ] 0x10
jmp sub_40dce2
sub_40dd42
sub [ esp + 0x4 ] 0x4
jmp sub_40dcbf
sub_40dd4c
sub [ esp + 0x4 ] 0x4
jmp sub_40dcad
sub_40dd56
mov eax [ ecx + 0x38 ]
test eax eax
jne r-xdata
push eax
call sub_40cadb
retn
push [ ecx + 0x20 ]
call [ GetParent@IAT ]
sub_40e15d
mov ecx [ ebp - 0x20 ]
call sub_40a296
mov eax r-xdata
retn
sub_40f07b
push 0x410
mov eax sub_42a996
call sub_41a9d8
and [ ebp - 0x4 ] 0x0
call sub_411cf7
mov ecx [ eax + 0x4 ]
call sub_410d2b
call sub_41aa34
retn
sub_40f270
mov eax r--data
retn
sub_40f2f2
push 0x1
call sub_416ab5
push 0x0
push 0x0
call sub_41ad31
int3
sub_40f65e
call sub_411d2a
mov eax [ eax + 0x4 ]
retn
sub_40f69a
mov edi edi
push ebp
mov ebp esp
call sub_411d2a
mov ecx [ eax + 0x4 ]
test ecx ecx
je r-xdata
pop ebp
jmp sub_40f670
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x6c ]
sub_40f738
cmp [ ecx + 0x28 ] 0x0
je r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_40f7da
call sub_41173f
mov eax [ eax + 0x38 ]
retn
sub_40f861
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40f670
sub_40f88c
mov eax r--data
retn
sub_40fa39
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40f971
pop ecx
pop ebp
retn 0x4
sub_40fa4b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40f8dd
pop ecx
pop ebp
retn 0x4
sub_40fa5d
mov eax [ ecx + 0x24 ]
test eax eax
jne r-xdata
retn
mov eax [ ecx + 0x20 ]
test eax eax
jne r-xdata
call [ GetActiveWindow@IAT ]
push eax
call sub_40cadb
j_sub_40fa8c
jmp sub_40fa8c
sub_4104b9
mov edi edi
push esi
mov esi ecx
call sub_40ff38
and [ esi + 0x24 ] 0x0
pop esi
retn
sub_410779
mov eax r--data
retn
sub_410820
mov eax r-xdata
retn
sub_410926
mov ecx [ ebp - 0x18 ]
call sub_40a296
mov eax r-xdata
retn
sub_410bfe
xor eax eax
inc eax
retn 0x4
sub_410c04
xor eax eax
retn
sub_410c07
mov eax 0x80029c4a
retn 0x8
sub_410c0f
mov eax r--data
retn
sub_410c15
mov eax r--data
retn
sub_410c1b
mov eax r--data
retn
sub_410c21
mov eax r--data
retn
sub_410c57
mov eax r--data
retn
sub_410c5d
mov eax r--data
retn
sub_410c89
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ CheckMenuItem@IAT ]
pop ebp
retn 0x8
sub_410ca1
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ EnableMenuItem@IAT ]
pop ebp
retn 0x8
sub_410cb9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ ModifyMenuW@IAT ]
pop ebp
retn 0x10
sub_410cff
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x10 ]
mov eax [ ecx ]
test eax eax
je r-xdata
and [ esi + 0x1c ] 0x0
pop esi
retn
call [ eax + 0x1c ]
sub_410d16
call sub_411cf7
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0x1
mov ecx eax
call [ edx + 0x9c ]
retn
sub_410d2b
call sub_411cf7
mov eax [ eax + 0x4 ]
mov edx [ eax ]
push 0xffffffff
mov ecx eax
call [ edx + 0x9c ]
retn
sub_41103b
call sub_411cf7
xor ecx ecx
cmp [ eax + 0x2c ] ecx
sete cl
mov eax ecx
retn
sub_41104b
call sub_411cf7
add eax 0x2c
push eax
call [ InterlockedIncrement@IAT ]
retn
sub_41105b
mov edi edi
push ebp
mov ebp esp
call sub_411cf7
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x30 ] ecx
pop ebp
retn 0x4
sub_41106f
call sub_411cf7
mov eax [ eax + 0x30 ]
retn
sub_411241
cmp [ ecx + 0x8 ] 0x0
je r-xdata
add ecx 0x4
push ecx
call [ InterlockedIncrement@IAT ]
retn
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x4 ]
retn
sub_4112b2
cmp [ ecx + 0x8 ] 0x0
je r-xdata
jmp sub_41125c
mov eax [ ecx + 0x8 ]
mov ecx [ eax ]
push eax
call [ ecx + 0x8 ]
retn
j_sub_4164df
jmp sub_4164df
sub_4113b8
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp eax
sub_4113cd
mov edi edi
push ebp
mov ebp esp
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn 0x8
pop ebp
jmp eax
sub_411561
mov eax [ rw-data ]
retn
sub_411567
mov eax ecx
xor edx edx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x34 ] edx
mov [ eax + 0x54 ] edx
mov [ eax + 0x4c ] ecx
mov [ eax + 0x50 ] edx
retn
sub_4116f5
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
or [ eax + 0x44 ] 0xffffffff
or [ eax + 0x4c ] 0xffffffff
mov [ eax + 0x48 ] ecx
mov [ eax + 0xc ] 0x6c
mov [ eax + 0x28 ] r-xdata
retn
sub_41173f
push sub_40a3ba
mov ecx rw-data
call sub_416455
test eax eax
jne r-xdata
retn
jmp sub_40a39e
sub_411823
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
mov [ esi ] r--data
je r-xdata
mov ecx [ esi + 0xc ]
sub ecx 0x10
pop esi
jmp sub_402020
push [ esi + 0x4 ]
call [ FreeLibrary@IAT ]
sub_411bcb
mov ecx [ ebp - 0x18 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0x1
mov eax r-xdata
retn
call sub_40a296
sub_411c92
mov edi edi
push esi
push 0x1
mov esi ecx
call sub_411b57
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_411d2a
call sub_411cf7
mov ecx eax
add ecx 0x74
call sub_40fa78
test eax eax
jne r-xdata
retn
jmp sub_40a39e
sub_411d7b
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
pop ebp
retn 0x14
mov cx [ ebp + 0x14 ]
mov [ eax ] cx
xor eax eax
inc eax
sub_412224
mov eax r--data
retn
sub_41222a
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419ff4
push eax
call sub_401a00
add esp 0x10
pop ebp
retn
sub_412248
mov edi edi
push ebp
mov ebp esp
call sub_411cf7
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
pop ebp
retn 0x4
sub_41225c
mov eax r--data
retn
sub_4123ac
cmp [ rw-data ] 0x0
push esi
mov esi ecx
je r-xdata
pop esi
retn
cmp [ esi ] 0xffffffff
je r-xdata
call sub_411eb3
push [ esi ]
call [ rw-data ]
j_sub_411ed9
jmp sub_411ed9
j_sub_4123ac
jmp sub_4123ac
sub_412d15
mov eax ecx
and [ eax ] 0x0
mov [ eax + 0x4 ] 0x1
retn
sub_412d22
retn
sub_412d3f
mov eax [ ecx ]
and [ ecx ] 0x0
retn
sub_412d70
cmp [ ecx + 0x8 ] 0x0
je r-xdata
retn
push [ ecx ]
call sub_409992
pop ecx
j_sub_4130a0
jmp sub_4130a0
sub_413180
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi [ ecx + 0x8 ]
push esi
call sub_413140
mov eax esi
pop esi
pop ebp
retn 0x4
sub_4131ef
add ecx 0xfffffff0
jmp sub_411213
sub_413258
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffff0
call sub_411241
pop ebp
retn 0x4
sub_41326c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffff0
call sub_4112b2
pop ebp
retn 0x4
sub_413280
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x8 ]
push [ ebp + 0xc ]
add ecx 0xfffffff0
call sub_41130a
pop ebp
retn 0xc
sub_41329a
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffff0
mov eax [ ecx ]
call [ eax + 0x1c ]
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
pop ebp
retn 0x8
sub_41330d
mov eax r--data
retn
sub_413640
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc00000fd
sete cl
mov eax ecx
retn
sub_4137e1
mov [ ecx + 0x10 ] r--data
retn
sub_413f3c
push 0xffffffff
mov eax 0xf18d
push eax
push eax
call sub_413ec9
sub_414534
mov ecx [ ebp - 0x2c ]
mov eax [ ecx + 0x8 ]
mov [ ebp + 0xc ] eax
call sub_40a296
or [ ebp - 0x4 ] 0xffffffff
mov eax sub_41459f
retn
sub_41463e
mov edi edi
push esi
push 0xa
mov esi ecx
call sub_416cf7
mov [ esi ] r--data
mov eax esi
pop esi
retn
sub_414654
lea eax [ ecx + 0x20 ]
cmp [ eax ] 0x0
jne r-xdata
push eax
call [ InterlockedIncrement@IAT ]
retn
or [ ecx + 0x4 ] 0xffffffff
sub_4149d3
mov eax r--data
retn
sub_4149d9
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_4149f0
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_409992
pop ecx
retn
sub_414ceb
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41a3e1
pop ecx
pop ebp
retn 0x4
sub_414cfd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41aa43
pop ecx
pop ecx
pop ebp
retn 0x8
sub_414d13
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41a4ab
pop ecx
pop ebp
retn 0x4
sub_414d25
mov eax [ ecx + 0x14 ]
xor edx edx
retn
sub_414d74
mov eax [ ecx + 0x1c ]
xor edx edx
retn
sub_414f26
mov eax [ ecx ]
jmp [ eax + 0x4c ]
sub_415009
mov eax r--data
retn
sub_415052
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_401840
mov eax [ ebp + 0x8 ]
add esp 0x10
pop ebp
retn 0xc
sub_415093
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
call sub_40a39e
add ecx 0xc
pop ebp
jmp sub_401ea0
sub_4150e2
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_4152d4
mov [ ecx ] r--data
mov ecx [ ecx + 0x4 ]
test ecx ecx
je r-xdata
retn
push ecx
call sub_409992
pop ecx
sub_415431
mov ecx [ ebp - 0x1c ]
test ecx ecx
je r-xdata
and [ ebp - 0x14 ] 0x0
mov eax r-xdata
retn
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_415a68
mov ecx [ ebp - 0x14 ]
xor ebx ebx
cmp ecx ebx
je r-xdata
push ebx
push ebx
call sub_41ad31
int3
mov eax [ ecx ]
push 0x1
call [ eax + 0x4 ]
sub_415a80
call sub_41173f
mov eax [ eax + 0x14c ]
retn
sub_415cfd
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push ecx
call sub_415b65
add esp 0x10
pop ebp
retn 0xc
sub_415d67
mov edi edi
push ebp
mov ebp esp
xor eax eax
cmp [ ebp + 0x8 ] eax
setne al
pop ebp
retn 0x8
sub_415d78
mov edi edi
push ebp
mov ebp esp
push 0x10
push 0x0
push [ ebp + 0x8 ]
call sub_41ae80
add esp 0xc
pop ebp
retn 0x4
sub_415e7b
push 0x410
mov eax sub_42ae12
call sub_41a9d8
mov eax ecx
and [ ebp - 0x4 ] 0x0
add eax 0x50
push eax
call sub_4168f7
call sub_41aa34
retn
sub_415f40
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_401fc0
mov eax esi
pop esi
pop ebp
retn 0x4
sub_415ff6
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push 0x40
call [ LocalAlloc@IAT ]
test eax eax
jne r-xdata
pop ebp
retn 0x4
call sub_40a366
sub_416013
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn 0x4
pop ebp
jmp [ LocalFree@IAT ]
sub_41607b
mov eax [ ecx ]
test eax eax
je r-xdata
xor eax eax
retn
mov ecx [ rw-data ]
test ecx ecx
je r-xdata
push eax
call sub_416029
retn
sub_4160d4
push 0x10
call sub_416ab5
push 0x0
push 0x0
call sub_41ad31
int3
sub_41610e
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
add eax [ ebp + 0x8 ]
pop ebp
retn 0x4
call sub_40a39e
sub_4164ff
mov edi edi
push ebp
mov ebp esp
mov ecx [ ecx + 0x4c ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x58 ]
sub_41650d
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x78 ]
push 0xfffffff0
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_416527
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0x7c ]
push 0xffffffec
push [ ecx + 0x20 ]
call [ GetWindowLongW@IAT ]
retn
sub_416568
cmp [ ecx + 0x50 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x50 ]
mov eax [ ecx ]
jmp [ eax + 0xa4 ]
push [ ecx + 0x20 ]
call [ IsWindowEnabled@IAT ]
retn
sub_41662c
mov eax r--data
retn
sub_416632
push 0x8
call sub_409958
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_41664c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_4166da
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_416666
mov ecx eax
pop ebp
jmp sub_4175e8
sub_41673b
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_41670f
push eax
call [ DestroyMenu@IAT ]
retn
xor eax eax
retn
sub_416778
push 0x410
mov eax sub_42aecb
call sub_41a9d8
and [ ebp - 0x4 ] 0x0
mov [ ecx ] r--data
call sub_417493
call sub_41aa34
retn
sub_416a1f
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
push rw-data
mov [ rw-data ] 0x1
call [ InitializeCriticalSection@IAT ]
sub_416b65
mov edi edi
push ebp
mov ebp esp
mov edx [ ecx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edx
dec [ ecx + 0xc ]
mov [ ecx + 0x10 ] eax
jne r-xdata
pop ebp
retn 0x4
call sub_416b38
sub_416cf1
mov eax r--data
retn
sub_416e03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
pop ebp
retn 0x4
sub_416e12
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_416e21
and [ ecx + 0x8 ] 0x0
retn
sub_416e26
and [ ecx + 0x4 ] 0x0
retn
sub_416f38
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ GetClipBox@IAT ]
pop ebp
retn 0x4
sub_416f4d
mov eax r--data
retn
sub_416f53
mov eax r--data
retn
sub_416f59
mov eax r--data
retn
sub_416f5f
mov eax r--data
retn
sub_416f65
mov edi edi
push ebp
mov ebp esp
push ecx
push r--data
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x4 ] rw-data
call sub_41ad31
int3
sub_416f81
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ecx ]
push 0x0
call [ eax + 0x4 ]
pop ebp
retn 0x4
sub_416f94
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] ecx
retn
sub_416fa8
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ PtVisible@IAT ]
pop ebp
retn 0x8
sub_416fc0
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ RectVisible@IAT ]
pop ebp
retn 0x4
sub_416fd5
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ TextOutW@IAT ]
pop ebp
retn 0x10
sub_417052
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextW@IAT ]
pop ebp
retn 0x10
sub_417070
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ DrawTextExW@IAT ]
pop ebp
retn 0x14
sub_4170c3
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ ecx + 0x4 ]
call [ Escape@IAT ]
pop ebp
retn 0x10
sub_417294
push 0x8
call sub_409958
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov [ eax ] r--data
and [ eax + 0x4 ] 0x0
retn
sub_4172cf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn 0x4
and [ eax + 0x4 ] 0x0
mov [ eax ] r--data
sub_41737f
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_41730b
mov ecx eax
pop ebp
jmp sub_4175e8
sub_4173c6
cmp [ ecx + 0x4 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
call sub_417393
push eax
call [ DeleteDC@IAT ]
sub_417453
mov edi edi
push ebp
mov ebp esp
push 0x1
call sub_4173df
mov ecx eax
pop ebp
jmp sub_4175e8
sub_417493
cmp [ ecx + 0x4 ] 0x0
jne r-xdata
call sub_417467
push eax
call [ DeleteObject@IAT ]
retn
xor eax eax
retn
sub_417556
call sub_411d2a
inc [ eax + 0x10 ]
retn
sub_417689
push [ ebp + 0x8 ]
call sub_409941
push 0x0
push 0x0
call sub_41ad31
int3
sub_4179fd
mov edi edi
push ebp
mov ebp esp
push 0x1
lea eax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4179ac
pop ebp
retn 0xc
sub_417b10
cmp [ ecx + 0x58 ] 0x0
je r-xdata
xor eax eax
inc eax
retn
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
jmp [ eax + 0x20 ]
sub_417b4b
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x1c ]
call sub_40a39e
sub_417b97
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
je r-xdata
xor eax eax
pop ebp
retn 0x4
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x30 ]
sub_417bd1
mov eax [ ecx + 0x20 ]
push 0x0
push 0x0
push 0x10
push [ eax + 0x20 ]
call [ SendMessageW@IAT ]
retn
sub_417da6
xor eax eax
inc eax
retn
sub_417daa
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
jmp [ eax + 0x10 ]
xor eax eax
retn
sub_417dbb
mov edi edi
push ebp
mov ebp esp
cmp [ ecx + 0x58 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x58 ]
mov eax [ ecx ]
pop ebp
jmp [ eax + 0x14 ]
call sub_40a39e
sub_417f3e
mov ecx [ ebp - 0x234 ]
mov [ ebp - 0x224 ] 0x8
call sub_40a296
mov eax r-xdata
retn
sub_418159
pop edx
pop eax
pop ecx
add ecx [ esp ]
mov [ ecx ] edx
sub ecx [ esp ]
mov esp ecx
pop ecx
call eax
retn
sub_41819c
xor eax eax
retn 0x10
sub_4181a1
mov eax r--data
retn
sub_4184c9
mov edi edi
push esi
mov esi ecx
mov eax [ esi + 0x4 ]
cmp eax 0xffffffff
je r-xdata
lea ecx [ esi + 0xc ]
pop esi
jmp sub_401b90
push eax
call [ CloseHandle@IAT ]
or [ esi + 0x4 ] 0xffffffff
sub_4184ea
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0xc ]
mov [ esi ] r--data
call sub_401ff0
or [ esi + 0x4 ] 0xffffffff
and [ esi + 0x8 ] 0x0
mov eax esi
pop esi
retn
sub_419247
mov eax r--data
retn
sub_419364
mov eax rw-data
retn
sub_41936a
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_419381
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_409992
pop ecx
retn
sub_419523
push 0x14
call sub_409958
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_41936a
sub_41958d
test ecx ecx
je r-xdata
retn
push esi
mov esi [ ecx ]
push ecx
call sub_409992
pop ecx
mov ecx esi
test esi esi
jne r-xdata
pop esi
sub_4195d1
mov edi edi
push esi
mov esi ecx
mov ecx [ esi + 0x8 ]
call sub_41958d
and [ esi + 0x8 ] 0x0
and [ esi + 0xc ] 0x0
pop esi
retn
j_sub_4195d1
jmp sub_4195d1
sub_41962f
mov eax rw-data
retn
sub_419635
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_41588a
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_41964c
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push 0x0
call sub_415926
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov eax [ ebp + 0x8 ]
pop ebp
retn 0x8
sub_419667
mov eax ecx
xor ecx ecx
mov [ eax ] r--data
mov [ eax + 0x4 ] ecx
mov [ eax + 0x10 ] ecx
mov [ eax + 0xc ] ecx
mov [ eax + 0x8 ] ecx
retn
sub_41967e
push [ ecx + 0x4 ]
mov [ ecx ] r--data
call sub_409992
pop ecx
retn
sub_4196f9
push 0x14
call sub_409958
pop ecx
test eax eax
je r-xdata
xor eax eax
retn
mov ecx eax
jmp sub_419667
sub_41999c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x14 ]
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_419911
add esp 0x14
pop ebp
retn
sub_419b1c
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push 0x0
push [ ebp + 0x8 ]
push sub_41cbbf
call sub_419ac5
add esp 0x10
pop ebp
retn
sub_419bd4
call sub_41e349
add eax 0x20
push eax
push 0x1
call sub_41e4cf
pop ecx
pop ecx
retn
sub_419e12
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_41f628
pop ecx
retn
sub_419fa3
call sub_41b1c8
retn
sub_419fa9
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_419f6d
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_419fc0
mov edi edi
push ebp
mov ebp esp
call sub_41f29d
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_419fd2
call sub_41f29d
mov ecx [ eax + 0x14 ]
imul ecx ecx 0x343fd
add ecx 0x269ec3
mov [ eax + 0x14 ] ecx
mov eax ecx
shr eax 0x10
and eax 0x7fff
retn
sub_41a14e
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_41a116
pop ecx
pop ecx
pop ebp
retn
sub_41a161
mov edi edi
push ebp
mov ebp esp
push 0x8
push [ ebp + 0x8 ]
call sub_41f8e3
pop ecx
pop ecx
pop ebp
retn
sub_41a34a
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov ecx [ ecx ]
mov [ ebp - 0x24 ] ecx
push eax
push ecx
call sub_41fb8d
pop ecx
pop ecx
retn
sub_41a35e
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_41b3fe
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_41af41
retn
push eax
call sub_41b3d9
_start
call sub_4202f7
jmp sub_41a237
sub_41a3d8
push 0x4
call sub_42042f
pop ecx
retn
sub_41a501
push 0x4
call sub_42042f
pop ecx
retn
sub_41aa11
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41aa25
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_419730
jmp sub_41aa11
sub_41aa34
mov ecx [ ebp - 0x14 ]
xor ecx ebp
call sub_419730
jmp sub_41aa11
sub_41ab87
push 0x4
call sub_42042f
pop ecx
retn
sub_41af41
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_41b1a7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_41b17c
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
int3
sub_41b1bf
push 0x8
call sub_420509
pop ecx
retn
sub_41b1c8
push 0x8
call sub_42042f
pop ecx
retn
sub_41b3ae
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_42042f
pop ecx
sub_41b3c3
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_41b297
add esp 0xc
pop ebp
retn
sub_41b3d9
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_41b297
add esp 0xc
pop ebp
retn
sub_41b3ef
push 0x1
push 0x0
push 0x0
call sub_41b297
add esp 0xc
retn
sub_41b3fe
push 0x1
push 0x1
push 0x0
call sub_41b297
add esp 0xc
retn
sub_41b4b3
mov eax sub_4230d6
mov [ rw-data ] eax
mov [ rw-data ] sub_4227bd
mov [ rw-data ] sub_422771
mov [ rw-data ] sub_4227aa
mov [ rw-data ] sub_422713
mov [ rw-data ] eax
mov [ rw-data ] sub_42304e
mov [ rw-data ] sub_42272f
mov [ rw-data ] sub_422691
mov [ rw-data ] sub_42261e
retn
sub_41b513
mov edi edi
push ebp
mov ebp esp
call sub_41b4b3
call sub_423162
cmp [ ebp + 0x8 ] 0x0
mov [ rw-data ] eax
je r-xdata
fnclex
pop ebp
retn
call sub_4230f9
sub_41b66c
mov ecx [ ebp - 0x1c ]
xor ecx ebp
call sub_419730
jmp sub_41af41
sub_41b696
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_41bab0
sub_41b9b8
push 0x4
call sub_42042f
pop ecx
retn
sub_41baa3
push 0x4
call sub_42042f
pop ecx
retn
sub_41bd90
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push 0x1
call sub_41badb
pop ecx
pop ebp
retn
sub_41c535
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_41e400
call sub_425065
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_41a4ab
pop ecx
retn
call sub_424e3c
sub_41e88f
push 0xd
call sub_42042f
pop ecx
retn
sub_41ec5a
push 0xd
call sub_42042f
pop ecx
retn
sub_41ec93
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_41eaf9
pop ecx
mov [ rw-data ] 0x1
sub_41efca
push 0xc
call sub_42042f
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_41f048
push 0x0
call sub_41efd6
pop ecx
retn
sub_41f0c3
call [ TlsAlloc@IAT ]
retn 0x4
sub_41f212
push 0xd
call sub_42042f
pop ecx
retn
sub_41f21b
push 0xc
call sub_42042f
pop ecx
retn
sub_41f3d1
push 0xd
call sub_42042f
pop ecx
retn
sub_41f3dd
push 0xc
call sub_42042f
pop ecx
retn
sub_41f68f
push 0xe
call sub_42042f
pop ecx
retn
sub_41f99b
push sub_41f959
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
GetCommandLineW
jmp [ GetCommandLineW@IAT ]
sub_420264
xor eax eax
inc eax
retn
sub_42042f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_420500
push 0xa
call sub_42042f
pop ecx
retn
sub_421000
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_421055
mov [ ecx ] r--data
jmp sub_425ea4
sub_4211b1
push [ ebp - 0x14 ]
call sub_4210e6
pop ecx
retn
sub_4211f5
call sub_41f29d
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_41f29d
add eax 0x90
dec [ eax ]
sub_421298
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_4212a1
mov esp [ ebp - 0x18 ]
call sub_421cf0
sub_42134e
push 0x4
mov eax sub_42b11f
call sub_41a96c
call sub_41f29d
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_421d29
call sub_421d3c
sub_421427
mov eax [ ebp - 0x14 ]
call sub_421210
retn
sub_42169e
xor eax eax
inc eax
retn
sub_4216a2
mov esp [ ebp - 0x18 ]
call sub_421cf0
sub_421737
xor eax eax
inc eax
retn
sub_42173b
mov esp [ ebp - 0x18 ]
call sub_421cf0
sub_421bed
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_425e47
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_421cf0
push 0x8
push r--data
call sub_41aefc
call sub_41f29d
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_421ddc
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_421d10
xor eax eax
inc eax
retn
sub_421d29
call sub_41f29d
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_421cf0
call eax
sub_421d60
xor eax eax
inc eax
retn
sub_421d74
push sub_421cf0
call sub_41efd6
pop ecx
mov [ rw-data ] eax
retn
sub_421f14
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_422009
push 0xc
push r--data
call sub_41aefc
and [ ebp - 0x4 ] 0x0
movapd xmm0 xmm1
mov [ ebp - 0x1c ] 0x1
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_422026
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_4220bb
call sub_422059
mov [ rw-data ] eax
xor eax eax
retn
sub_42219e
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_4220c8
add esp 0xc
pop ebp
retn 0x4
sub_4221d1
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_426011
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_422204
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_4220c8
add esp 0xc
pop ebp
retn 0x8
sub_42233b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ecx ]
xor edx edx
cmp eax 0xc0000005
sete dl
mov eax edx
retn
sub_42238e
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_4223e3
push [ rw-data ]
call sub_41f051
pop ecx
retn
sub_422564
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_42042f
pop ecx
sub_4225a0
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4225af
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_4225df
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
mov [ ebp - 0x20 ] eax
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_4225f6
mov esp [ ebp - 0x18 ]
cmp [ ebp - 0x20 ] 0xc0000017
jne r-xdata
and [ ebp - 0x1c ] 0x0
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
push 0x8
call [ SetLastError@IAT ]
sub_422771
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42272f
add esp 0x10
pop ebp
retn
sub_4227aa
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_42261e
pop ecx
pop ecx
pop ebp
retn
sub_4227bd
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_422691
pop ecx
pop ecx
pop ebp
retn
sub_423513
mov eax rw-data
retn
sub_423519
mov eax rw-data
retn
sub_42351f
mov eax rw-data
retn
sub_423525
mov eax rw-data
retn
sub_42352b
mov edi edi
push ebp
mov ebp esp
call sub_423513
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42353c
mov edi edi
push ebp
mov ebp esp
call sub_423519
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42354d
mov edi edi
push ebp
mov ebp esp
call sub_42351f
mov ecx [ ebp + 0x8 ]
mov [ eax ] ecx
pop ebp
retn
sub_42380a
push 0x7
call sub_42042f
pop ecx
retn
sub_423cb9
push 0x6
call sub_42042f
pop ecx
retn
sub_423cfa
push 0x6
call sub_42042f
pop ecx
retn
sub_423ebe
push 0x4
call sub_42042f
pop ecx
retn
sub_423ee0
and [ rw-data ] 0x0
retn
sub_4241e6
push [ ebp + 0x8 ]
call sub_426abe
pop ecx
retn
sub_4249f5
push [ ebp + 0x8 ]
call sub_426abe
pop ecx
retn
sub_424c65
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_424e22
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_424d0b
add esp 0x10
pop ebp
retn
sub_424ed2
push 0x1
call sub_42042f
pop ecx
retn
sub_42502d
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_41e4cf
pop ecx
pop ecx
retn
sub_42505c
push 0x1
call sub_42042f
pop ecx
retn
sub_425065
push 0x1
call sub_424f8b
pop ecx
retn
sub_4258dc
call sub_41f29d
mov ecx eax
mov eax [ ecx + 0x6c ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ eax + 0x4 ]
retn
mov edx [ rw-data ]
test [ ecx + 0x70 ] edx
jne r-xdata
call sub_41ef60
sub_425ea4
cmp [ ecx + 0x8 ] 0x0
mov [ ecx ] r--data
je r-xdata
retn
push [ ecx + 0x4 ]
call sub_41a4ab
pop ecx
sub_425eba
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_425ee8
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_425fe5
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_425f1c
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_426030
call eax
retn
sub_4260b2
push 0x2
call sub_41b153
pop ecx
retn
sub_4266fb
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_426f4d
add esp 0xc
pop ebp
retn
sub_426904
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_426798
add esp 0x14
pop ebp
retn
sub_426ab5
push 0xa
call sub_42042f
pop ecx
retn
sub_427063
push esi
call sub_41e493
pop ecx
retn
sub_427142
push [ ebp + 0x8 ]
call sub_426abe
pop ecx
retn
sub_4294c5
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4293d7
add esp 0x10
pop ebp
retn
sub_429576
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileA@IAT ]
mov [ rw-data ] eax
retn
sub_429721
push [ ebp + 0x8 ]
call sub_426abe
pop ecx
retn
sub_4299bc
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xc0000005
je r-xdata
xor eax eax
inc eax
retn
cmp eax 0xc000001d
je r-xdata
xor eax eax
retn
sub_42a2d3
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_42a217
add esp 0xc
pop ebp
retn
RtlUnwind
jmp [ RtlUnwind@IAT ]
ClosePrinter
jmp [ ClosePrinter@IAT ]
DocumentPropertiesW
jmp [ DocumentPropertiesW@IAT ]
OpenPrinterW
jmp [ OpenPrinterW@IAT ]
sub_42a3f5
mov edi edi
push esi
push 0x18
mov esi ecx
push 0x0
push esi
call sub_41ae80
add esp 0xc
mov eax esi
pop esi
retn
sub_42a40b
push 0xc
push r--data
call sub_41aefc
and [ ebp - 0x4 ] 0x0
push ecx
call [ InitializeCriticalSection@IAT ]
and [ ebp - 0x1c ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
call sub_41af41
retn
sub_42a428
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov eax [ eax ]
xor ecx ecx
cmp eax 0xc0000017
sete cl
mov eax ecx
retn
sub_42a456
mov edi edi
push esi
mov esi ecx
lea ecx [ esi + 0x14 ]
call sub_42a3f5
xor eax eax
mov [ esi + 0x2c ] eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
mov eax esi
pop esi
retn
sub_42a4ca
mov eax CreateStdAccessibleObject@IAT
jmp sub_42a4d4
sub_42a4d4
push ecx
push edx
push eax
push __delay_import_directory_entries
call sub_42a4fb
pop edx
pop ecx
jmp eax
CreateStdAccessibleObject
jmp [ CreateStdAccessibleObject@IAT ]
sub_42a4eb
mov eax LresultFromObject@IAT
jmp sub_42a4d4
LresultFromObject
jmp [ LresultFromObject@IAT ]
sub_42a740
mov ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42a748
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a763
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42a76e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a796
lea ecx [ ebp - 0x118 ]
jmp sub_409a95
sub_42a7a1
lea ecx [ ebp - 0x11c ]
jmp sub_402040
sub_42a7ac
lea ecx [ ebp - 0x94 ]
jmp sub_409a95
sub_42a7b7
lea ecx [ ebp - 0x11c ]
jmp sub_402040
sub_42a7c2
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x128 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a7ea
push [ ebp - 0x10 ]
call sub_416013
retn
sub_42a7f3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a80e
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_42a816
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a831
push [ ebp - 0x10 ]
call sub_401870
retn
sub_42a83a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a855
push [ ebp + 0x8 ]
push [ ebp - 0x10 ]
call sub_40b0f0
retn
sub_42a861
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a87c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x48 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a897
lea ecx [ ebp - 0x60 ]
jmp sub_40d7f4
sub_42a89f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x64 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a8ba
push [ ebp - 0x1c ]
call sub_409992
pop ecx
retn
sub_42a8c4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a8df
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x50 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a8fa
lea ecx [ ebp - 0x224 ]
jmp sub_402dc0
sub_42a905
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x258 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a92d
lea ecx [ ebp - 0x14 ]
jmp j_sub_40b962
sub_42a935
lea ecx [ ebp - 0x28 ]
jmp sub_4173c6
sub_42a93d
lea ecx [ ebp - 0x7c ]
jmp sub_40d7f4
sub_42a945
lea ecx [ ebp - 0x28 ]
jmp sub_4173c6
sub_42a94d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x80 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a968
lea ecx [ ebp + 0xc ]
jmp sub_40c5db
sub_42a970
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a98b
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42a996
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a9be
lea ecx [ ebp + 0xb ]
jmp sub_40f07b
sub_42a9c6
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a9e1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42a9fc
mov ecx [ ebp - 0x10 ]
jmp sub_410cff
sub_42aa04
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aa1f
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402040
sub_42aa2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aa45
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402040
sub_42aa50
lea ecx [ ebp + 0x8 ]
jmp sub_402040
sub_42aa58
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aa73
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42aa7b
lea ecx [ ebp + 0x10 ]
jmp sub_402040
sub_42aa83
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aa9e
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402040
sub_42aaa9
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aac4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aadf
mov ecx [ ebp - 0x10 ]
add ecx 0x34
jmp sub_402040
sub_42aaea
mov ecx [ ebp - 0x10 ]
add ecx 0x74
jmp j_sub_4164df
sub_42aaf5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ab10
lea ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42ab18
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ab33
mov ecx [ ebp - 0x14 ]
add ecx 0x34
jmp sub_402040
sub_42ab3e
mov ecx [ ebp - 0x14 ]
add ecx 0x74
jmp j_sub_4164df
sub_42ab49
push [ ebp + 0x8 ]
call sub_416013
retn
sub_42ab52
push [ ebp + 0x8 ]
call sub_416013
retn
sub_42ab5b
push [ ebp + 0x8 ]
call sub_416013
retn
sub_42ab64
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ab7f
lea ecx [ ebp - 0x230 ]
jmp j_sub_4123ac
sub_42ab8a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x270 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42abb2
mov ecx [ ebp - 0x10 ]
jmp sub_40f6f0
sub_42abba
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42abd5
mov ecx [ ebp - 0x41c ]
jmp sub_40f6f0
sub_42abe0
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42abeb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x424 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ac13
lea ecx [ ebp - 0x1c ]
jmp sub_402dc0
sub_42ac1b
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ac36
lea ecx [ ebp - 0x20 ]
jmp sub_412d70
sub_42ac3e
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ac59
lea ecx [ ebp - 0x28 ]
jmp sub_402dc0
sub_42ac61
lea ecx [ ebp - 0x58 ]
jmp j_sub_4130a0
sub_42ac69
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x60 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ac8e
mov ecx [ ebp - 0x10 ]
add ecx 0xc
jmp sub_402040
sub_42ac99
mov ecx [ ebp - 0x10 ]
add ecx 0x14
jmp sub_402040
sub_42aca4
mov ecx [ ebp - 0x10 ]
add ecx 0x18
jmp sub_402040
sub_42acaf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42acca
push [ ebp - 0x14 ]
call sub_401870
retn
sub_42acd3
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42acee
push [ ebp - 0x218 ]
call sub_401870
retn
sub_42acfa
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x21c ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ad22
lea ecx [ ebp - 0x24 ]
jmp sub_402dc0
sub_42ad2a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ad45
lea ecx [ ebp - 0x230 ]
jmp sub_402dc0
sub_42ad50
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ad78
mov ecx [ ebp - 0x10 ]
jmp sub_4185f2
sub_42ad80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ad9b
push [ ebp - 0x20 ]
call sub_401870
retn
sub_42ada4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42adbf
push [ ebp - 0x18 ]
call sub_401870
retn
sub_42adc8
push [ ebp - 0x18 ]
call sub_401870
retn
sub_42add1
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42adec
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ae07
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42ae12
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ae3a
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ae55
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x20 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ae70
push rw-data
push [ ebp - 0x10 ]
call sub_412d22
pop ecx
pop ecx
retn
sub_42ae80
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ae9b
push [ ebp + 0x8 ]
call sub_409992
pop ecx
retn
sub_42aea5
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aec0
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42aecb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x420 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42aef3
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_4195d1
sub_42aefe
mov ecx [ ebp - 0x10 ]
add ecx 0x1c
jmp sub_416d2a
sub_42af09
mov ecx [ ebp - 0x10 ]
add ecx 0x38
jmp sub_416d2a
sub_42af14
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42af2f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42af4a
mov eax [ ebp - 0x10 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x10 ] 0xfffffffe
mov ecx [ ebp + 0x8 ]
jmp sub_402040
sub_42af63
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42af7e
lea ecx [ ebp - 0x228 ]
jmp sub_402040
sub_42af89
lea ecx [ ebp - 0x224 ]
jmp sub_402040
sub_42af94
lea ecx [ ebp - 0x224 ]
jmp sub_402040
sub_42af9f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42afc7
lea ecx [ ebp - 0x220 ]
jmp sub_402040
sub_42afd2
lea ecx [ ebp - 0x234 ]
jmp sub_402040
sub_42afdd
lea ecx [ ebp - 0x228 ]
jmp sub_402040
sub_42afe8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x238 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b010
mov ecx [ ebp - 0x41c ]
add ecx 0xc
jmp sub_402040
sub_42b01e
lea ecx [ ebp - 0x418 ]
jmp sub_402040
sub_42b029
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x424 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b051
lea ecx [ ebp - 0x264 ]
jmp sub_402040
sub_42b05c
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x278 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b084
mov ecx [ ebp - 0x10 ]
add ecx 0x10
jmp sub_402040
sub_42b08f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b0aa
mov eax [ ebp - 0x240 ]
and eax 0x1
je r-xdata
retn
and [ ebp - 0x240 ] 0xfffffffe
mov ecx [ ebp - 0x244 ]
jmp sub_402040
sub_42b0cc
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x248 ]
xor ecx eax
call sub_419730
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b0f4
lea ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42b0fc
lea ecx [ ebp + 0x10 ]
jmp sub_402040
sub_42b104
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b11f
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b140
mov ecx [ ebp - 0x10 ]
jmp sub_410cff
sub_42b148
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b170
mov ecx [ ebp + 0x4 ]
jmp sub_410cff
sub_42b178
mov ecx [ ebp + 0x4 ]
add ecx 0x20
jmp sub_409d81
sub_42b183
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b1a0
mov ecx [ ebp - 0x10 ]
jmp sub_410cff
sub_42b1a8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b1d0
mov eax [ ebp - 0x10 ]
add eax 0x8
jmp sub_401560
sub_42b1db
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b200
mov eax [ ebp + 0x4 ]
add eax 0x8
jmp sub_401560
sub_42b20b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b230
lea ecx [ ebp - 0x14 ]
jmp sub_402dc0
sub_42b238
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b260
mov eax [ ebp - 0x10 ]
push eax
call sub_401870
retn
sub_42b26a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b290
mov eax [ ebp - 0x10 ]
push eax
call sub_401870
retn
sub_42b29a
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b2c0
mov eax [ ebp - 0x10 ]
push eax
call sub_401870
retn
sub_42b2ca
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b2f0
mov ecx [ ebp - 0x10 ]
add ecx 0x4
jmp j_sub_412d23
sub_42b2fb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b320
mov ecx [ ebp + 0x4 ]
add ecx 0x4
jmp j_sub_412d23
sub_42b32b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b350
lea ecx [ ebp - 0x1c ]
jmp sub_402dc0
j_sub_40a4a6#2
jmp j_sub_40a4a6#5
sub_42b35d
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b380
mov ecx [ ebp + 0x4 ]
jmp sub_410cff
sub_42b388
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b3b0
mov eax [ ebp - 0x20 ]
push eax
call sub_401870
retn
j_sub_40a4a6#3
jmp j_sub_40a4a6#5
sub_42b3bf
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b3e0
mov eax [ ebp - 0x10 ]
push eax
call sub_409992
pop ecx
retn
sub_42b3eb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b410
lea ecx [ ebp - 0x1c ]
jmp sub_402dc0
j_sub_40a4a6#4
jmp j_sub_40a4a6#5
sub_42b41d
mov eax [ ebp + 0x8 ]
push eax
call sub_401870
retn
sub_42b427
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x28 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b450
mov ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b458
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b480
mov ecx [ ebp - 0x10 ]
jmp sub_410cff
sub_42b488
mov ecx [ ebp - 0x10 ]
add ecx 0x230
jmp sub_402040
sub_42b496
mov ecx [ ebp - 0x10 ]
add ecx 0x234
jmp sub_402040
sub_42b4a4
mov ecx [ ebp - 0x10 ]
add ecx 0x238
jmp sub_402040
sub_42b4b2
mov ecx [ ebp - 0x10 ]
add ecx 0x23c
jmp sub_4149f0
sub_42b4c0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b4e0
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b4e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b510
mov eax [ ebp - 0x10 ]
push eax
call sub_401870
retn
sub_42b51a
lea ecx [ ebp - 0x1c ]
jmp sub_402040
sub_42b522
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b540
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42b548
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b550
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b570
mov ecx [ ebp + 0x4 ]
jmp sub_410cff
sub_42b578
mov ecx [ ebp + 0x4 ]
add ecx 0x230
jmp sub_402040
sub_42b586
mov ecx [ ebp + 0x4 ]
add ecx 0x234
jmp sub_402040
sub_42b594
mov ecx [ ebp + 0x4 ]
add ecx 0x238
jmp sub_402040
sub_42b5a2
mov ecx [ ebp + 0x4 ]
add ecx 0x23c
jmp sub_4149f0
sub_42b5b0
mov ecx [ ebp + 0x4 ]
add ecx 0x250
jmp sub_409d81
sub_42b5be
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b5e0
lea ecx [ ebp + 0x14 ]
jmp sub_402040
sub_42b5e8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b610
mov ecx [ ebp + 0x4 ]
add ecx 0x8
jmp sub_402040
sub_42b61b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b640
lea ecx [ ebp - 0x314 ]
jmp sub_402040
sub_42b64b
lea ecx [ ebp - 0x318 ]
jmp sub_402040
sub_42b656
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x31c ]
mov ecx [ edx - 0x320 ]
xor ecx eax
call sub_419730
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b690
lea ecx [ ebp + 0x8 ]
jmp sub_402040
sub_42b698
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b6c0
lea ecx [ ebp - 0x18 ]
jmp sub_402040
sub_42b6c8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b6f0
lea ecx [ ebp - 0x68 ]
jmp sub_402040
sub_42b6f8
mov ecx [ ebp - 0x58 ]
jmp sub_402040
sub_42b700
lea ecx [ ebp - 0x64 ]
jmp sub_402040
sub_42b708
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x6c ]
mov ecx [ edx - 0x70 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b730
lea ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42b738
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x4 ]
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b760
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42b768
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42b770
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x28 ]
mov ecx [ edx - 0x2c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b790
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b798
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b7c0
lea ecx [ ebp - 0x28 ]
jmp sub_402040
sub_42b7c8
lea ecx [ ebp - 0x24 ]
jmp sub_402040
sub_42b7d0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x2c ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_419730
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b800
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b808
mov edx [ esp + 0x8 ]
lea eax [ edx ]
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b830
mov eax [ ebp - 0x2c ]
push eax
call sub_401870
retn
j_sub_40a4a6
jmp j_sub_40a4a6#5
sub_42b83f
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42b847
lea ecx [ ebp - 0x24 ]
jmp sub_402040
sub_42b84f
lea ecx [ ebp - 0x28 ]
jmp sub_402040
sub_42b857
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x40 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b880
lea ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42b888
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x8 ]
mov ecx [ edx - 0xc ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b8b0
lea ecx [ ebp - 0x27c ]
jmp sub_402040
sub_42b8bb
lea ecx [ ebp - 0x278 ]
jmp sub_402040
sub_42b8c6
lea ecx [ ebp - 0x280 ]
jmp sub_402040
sub_42b8d1
lea ecx [ ebp - 0x264 ]
jmp sub_402040
sub_42b8dc
lea ecx [ ebp - 0x280 ]
jmp sub_402040
sub_42b8e7
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x284 ]
mov ecx [ edx - 0x288 ]
xor ecx eax
call sub_419730
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b920
lea ecx [ ebp + 0x8 ]
jmp sub_402040
sub_42b928
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b930
mov eax [ ebp - 0x10 ]
push eax
call sub_409992
pop ecx
retn
sub_42b93b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x14 ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b960
mov ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b968
lea ecx [ ebp - 0x1c ]
jmp sub_409880
sub_42b970
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b990
lea ecx [ ebp - 0x21c ]
jmp sub_402040
sub_42b99b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x218 ]
mov ecx [ edx - 0x21c ]
xor ecx eax
call sub_419730
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42b9d0
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42b9d8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ba00
lea ecx [ ebp - 0x60 ]
jmp sub_41500f
sub_42ba08
lea ecx [ ebp - 0xb8 ]
jmp sub_410632
sub_42ba13
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xbc ]
mov ecx [ edx - 0xc0 ]
xor ecx eax
call sub_419730
add eax 0xc
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ba50
mov ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42ba58
mov edx [ esp + 0x8 ]
lea eax [ edx - 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42ba80
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42ba88
lea ecx [ ebp - 0x34 ]
jmp sub_402040
sub_42ba90
lea ecx [ ebp - 0x40 ]
jmp sub_402040
sub_42ba98
lea ecx [ ebp + 0x8 ]
jmp sub_402040
sub_42baa0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x40 ]
mov ecx [ edx - 0x44 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bac0
lea ecx [ ebp - 0x1c ]
jmp sub_402040
sub_42bac8
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42bad0
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42bad8
lea ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42bae0
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x20 ]
mov ecx [ edx - 0x24 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bb00
lea ecx [ ebp - 0x24 ]
jmp sub_402040
sub_42bb08
lea ecx [ ebp - 0x2c ]
jmp sub_402040
sub_42bb10
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42bb18
lea ecx [ ebp - 0x20 ]
jmp sub_402040
sub_42bb20
lea ecx [ ebp - 0x18 ]
jmp sub_402040
sub_42bb28
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42bb30
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x30 ]
mov ecx [ edx - 0x34 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bb50
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42bb58
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bb80
lea ecx [ ebp - 0x220 ]
jmp sub_402040
sub_42bb8b
lea ecx [ ebp - 0x224 ]
jmp sub_402040
sub_42bb96
lea ecx [ ebp - 0x21c ]
jmp sub_402040
sub_42bba1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x220 ]
mov ecx [ edx - 0x224 ]
xor ecx eax
call sub_419730
add eax 0x8
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bbd0
lea ecx [ ebp - 0x224 ]
jmp sub_402040
sub_42bbdb
lea ecx [ ebp - 0x220 ]
jmp sub_402040
sub_42bbe6
lea ecx [ ebp - 0x220 ]
jmp sub_402040
sub_42bbf1
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x224 ]
mov ecx [ edx - 0x228 ]
xor ecx eax
call sub_419730
add eax 0xc
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bc20
lea ecx [ ebp - 0x56c ]
jmp sub_402040
sub_42bc2b
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x570 ]
mov ecx [ edx - 0x574 ]
xor ecx eax
call sub_419730
add eax 0x10
mov ecx [ edx - 0x8 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bc60
mov eax [ ebp - 0x14 ]
push eax
call sub_401870
retn
sub_42bc6a
lea ecx [ ebp - 0x14 ]
jmp sub_402040
sub_42bc72
mov ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42bc7a
mov ecx [ ebp - 0x10 ]
jmp sub_402040
sub_42bc82
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x18 ]
mov ecx [ edx - 0x1c ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bca0
lea ecx [ ebp + 0x4 ]
jmp sub_402040
sub_42bca8
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x10 ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bcd0
lea ecx [ ebp - 0x748 ]
jmp sub_402040
sub_42bcdb
mov edx [ esp + 0x8 ]
lea eax [ edx - 0x754 ]
mov ecx [ edx - 0x758 ]
xor ecx eax
call sub_419730
add eax 0x10
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_419730
mov eax r--data
jmp sub_41a5e0
sub_42bd10
push 0x0
mov ecx rw-data
call sub_4127ea
push sub_42c000
call sub_419fa9
pop ecx
retn
sub_42bd28
push rw-data
call sub_41097d
retn
sub_42bd33
mov ecx rw-data
jmp sub_40a111
sub_42bd3d
push sub_42c00a
call sub_419fa9
pop ecx
retn
sub_42bd49
push sub_42c015
call sub_419fa9
pop ecx
retn
sub_42bd55
push sub_42c020
call sub_419fa9
pop ecx
retn
sub_42bd61
push sub_42c02b
call sub_419fa9
pop ecx
retn
sub_42bd6d
push r--data
call [ RegisterWindowMessageW@IAT ]
mov [ rw-data ] eax
retn
sub_42bf2a
push sub_42c05d
call sub_419fa9
pop ecx
retn
sub_42bf36
push sub_42c067
call sub_419fa9
pop ecx
retn
sub_42bf42
mov ecx rw-data
call sub_415e32
push sub_42c071
call sub_419fa9
pop ecx
retn
sub_42bf58
push 0x0
mov ecx rw-data
call sub_40a3f3
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_42c07b
mov [ rw-data ] r--data
mov [ rw-data ] 0xf022
call sub_419fa9
pop ecx
retn
sub_42bf92
push 0x0
mov ecx rw-data
call sub_40a3f3
and [ rw-data ] 0x0
and [ rw-data ] 0x0
push sub_42c086
mov [ rw-data ] r--data
mov [ rw-data ] 0xf024
call sub_419fa9
pop ecx
retn
sub_42bfcc
push rw-data
call sub_41097d
retn
sub_42bfd7
push rw-data
call sub_41097d
retn
sub_42bfe2
mov ecx rw-data
call sub_42a48a
push sub_42c091
call sub_419fa9
pop ecx
retn
sub_42c000
mov ecx rw-data
jmp sub_4128c1
sub_42c00a
mov [ rw-data ] r--data
retn
sub_42c015
mov [ rw-data ] r--data
retn
sub_42c020
mov [ rw-data ] r--data
retn
sub_42c02b
mov ecx rw-data
jmp sub_4160e5
sub_42c035
mov ecx rw-data
jmp sub_40d7f4
sub_42c03f
mov ecx rw-data
jmp sub_40d7f4
sub_42c049
mov ecx rw-data
jmp sub_40d7f4
sub_42c053
mov ecx rw-data
jmp sub_40d7f4
sub_42c05d
mov ecx rw-data
jmp sub_4164df
sub_42c067
mov ecx rw-data
jmp sub_4160e5
sub_42c071
mov ecx rw-data
jmp sub_415e7b
sub_42c07b
mov [ rw-data ] r--data
retn
sub_42c086
mov [ rw-data ] r--data
retn
sub_42c091
mov ecx rw-data
jmp sub_42a472
